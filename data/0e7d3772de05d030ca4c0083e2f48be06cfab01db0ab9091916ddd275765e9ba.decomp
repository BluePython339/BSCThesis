sub_401000
push ebp
mov ebp esp
xor eax eax
sub esp 0x3a8
cmp [ rw-data ] al
je r-xdata
mov esp ebp
pop ebp
retn
push 0x3a4
push eax
lea edx [ ebp - 0x3a4 ]
push edx
mov [ rw-data ] al
mov [ ecx + 0x19c ] eax
call sub_412f40
mov eax [ rw-data ]
add esp 0xc
lea ecx [ ebp - 0x3a8 ]
push ecx
push 0x2
mov [ ebp - 0x3a8 ] 0x3a8
mov [ ebp - 0x3a4 ] eax
mov [ ebp - 0x3a0 ] 0x1
call [ Shell_NotifyIconW@IAT ]
sub_401070
mov eax [ esi + 0x24 ]
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
push eax
call sub_413748
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] ebx
cmp eax ebx
jne r-xdata
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x10 ] bl
pop ebx
retn
sub_4010a0
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ edi ]
mov eax [ esi + 0x4 ]
mov [ eax ] ecx
inc [ esi ]
mov [ esi + 0x9 ] 0x0
retn
push 0x8
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x4 ] ecx
inc [ esi ]
mov [ esi + 0x4 ] eax
retn
mov edx [ edi ]
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
inc [ esi ]
mov [ esi + 0x4 ] eax
retn
sub_4010e0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_401100
pop edi
pop ebp
retn 0x10
sub_401100
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp edi 0x111
jae r-xdata
jmp r-xdata
cmp edi 0x113
je r-xdata
cmp edi 0x12
jb r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push edx
push eax
push edi
push ebx
call [ DefWindowProcW@IAT ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push rw-data
mov esi ebx
call sub_401250
cmp edi 0x10
jbe r-xdata
cmp edi [ rw-data ]
je r-xdata
je r-xdata
cmp edi 0x312
ja r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov esi rw-data
mov [ rw-data ] 0x1
call sub_40f190
jmp r-xdata
lea eax [ edi - 0x1 ]
cmp eax 0x6
ja r-xdata
cmp edi 0x401
jne r-xdata
je r-xdata
mov ecx rw-data
call sub_401000
mov esi rw-data
call sub_40e0c0
jmp r-xdata
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_40122c ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edi 0x11
je r-xdata
push 0x1
push ebx
call [ KillTimer@IAT ]
mov ecx rw-data
call sub_401000
push 0x0
call [ PostQuitMessage@IAT ]
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0x2ee
push 0x1
push ebx
call [ SetTimer@IAT ]
push r--data
call [ RegisterWindowMessageW@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x1
mov ecx eax
movzx edx ax
mov eax [ rw-data ]
shr ecx 0x10
push ecx
push edx
push 0x0
push 0x0
push eax
call [ MoveWindow@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
push rw-data
call sub_468b0e
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
call sub_4370f4
jmp r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x80000000
neg eax
sbb eax eax
add eax 0x4
mov esi rw-data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_40f190
mov ebx esi
call sub_401a50
mov ebx [ ebp + 0x8 ]
jmp r-xdata
cmp edi 0x111
jne r-xdata
call [ CreatePopupMenu@IAT ]
pop esi
mov [ rw-data ] eax
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push rw-data
call sub_45fd57
cmp al 0x1
jne r-xdata
jmp r-xdata
sub_401250
push ebp
mov ebp esp
sub esp 0x3ac
dec eax
push ebx
push edi
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x3a4
push eax
lea ebx [ eax + 0x1 ]
lea eax [ ebp - 0x3a8 ]
push eax
mov [ ebp - 0x3ac ] 0x3a8
call sub_412f40
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_401b80
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push esi
call [ KillTimer@IAT ]
push 0x0
push 0x2ee
push ebx
push esi
call [ SetTimer@IAT ]
cmp [ rw-data ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x3a8 ] esi
mov [ ebp - 0x3a4 ] ebx
mov [ ebp - 0x3a0 ] 0x2
jne r-xdata
cmp [ edi + 0x194 ] bl
jne r-xdata
cmp [ edi + 0x9 ] 0x0
jne r-xdata
mov edx [ edi + 0x1a8 ]
lea eax [ ebp - 0x3ac ]
push eax
push ebx
mov [ edi + 0x194 ] bl
mov [ ebp - 0x398 ] edx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov ecx [ edi + 0x19c ]
lea eax [ ebp - 0x3ac ]
push eax
push ebx
mov [ edi + 0x194 ] 0x0
mov [ ebp - 0x398 ] ecx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
cmp [ edi + 0x195 ] 0x0
je r-xdata
cmp [ edi + 0x194 ] bl
je r-xdata
mov edx [ edi + 0x1b0 ]
lea eax [ ebp - 0x3ac ]
push eax
push ebx
mov [ ebp - 0x398 ] edx
mov [ edi + 0x195 ] bl
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov ecx [ edi + 0x19c ]
lea eax [ ebp - 0x3ac ]
push eax
push ebx
mov [ ebp - 0x398 ] ecx
mov [ edi + 0x195 ] 0x0
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov ecx [ edi + 0x19c ]
lea edx [ ebp - 0x3ac ]
push edx
push ebx
mov [ edi + 0x194 ] 0x0
mov [ ebp - 0x398 ] ecx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
sub_4012f0
mov eax [ ebx ]
test eax eax
je r-xdata
push esi
lea esi [ ebx + 0xec ]
push edi
mov [ esi ] r--data
call sub_4109e0
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
lea ecx [ ebx + 0xbc ]
call sub_402250
lea edi [ ebx + 0x78 ]
call sub_401380
lea edi [ ebx + 0x34 ]
call sub_401380
lea ecx [ ebx + 0x24 ]
call sub_402250
pop edi
lea ecx [ ebx + 0x14 ]
pop esi
jmp sub_402250
push eax
call sub_4111dc
add esp 0x4
sub_401350
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
retn
mov ecx [ esi ]
push ecx
call sub_4111dc
mov edx [ esi + 0xc ]
push edx
call sub_4111dc
add esp 0x8
sub_4013c0
push esi
mov esi ecx
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor ecx ecx
mov [ esi ] eax
add esp 0x4
mov [ eax ] cx
call sub_4013a0
mov eax esi
pop esi
retn
sub_401400
mov eax [ esi ]
test eax eax
je r-xdata
push edi
lea edi [ esi + 0xec ]
call sub_401380
lea ecx [ esi + 0xbc ]
call sub_402250
lea ecx [ esi + 0xac ]
call sub_402250
lea ecx [ esi + 0x9c ]
call sub_402250
lea ecx [ esi + 0x8c ]
call sub_402250
lea edi [ esi + 0x8 ]
call sub_410640
pop edi
retn
push eax
call sub_4111dc
add esp 0x4
sub_401460
push ebp
mov ebp esp
sub esp 0x21c
push ebx
call sub_402400
test al al
je r-xdata
mov eax 0x1
jmp r-xdata
call sub_401500
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40d440
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x218 ]
push ecx
push 0x104
push edx
call [ GetFullPathNameW@IAT ]
lea ebx [ ebp - 0x218 ]
mov eax rw-data
call sub_402160
mov ebx [ ebp - 0x4 ]
mov eax rw-data
call sub_402160
mov ecx [ ebp - 0x4 ]
xor eax eax
mov [ ecx - 0x2 ] ax
cmp [ ebp - 0x214 ] ax
je r-xdata
lea edx [ ebp - 0x218 ]
push r--data
push edx
call sub_411536
add esp 0x8
jmp r-xdata
lea ebx [ ebp - 0x218 ]
mov eax rw-data
call sub_402160
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
xor eax eax
sub_401500
push ebp
mov ebp esp
sub esp 0x74
xor eax eax
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] ax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] ax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] ax
mov [ ebp - 0x4 ] eax
xor ebx ebx
jmp r-xdata
test edi edi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx edi
shl ebx 0x4
add ebx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov esi [ ebp - 0x14 ]
push ecx
push edx
mov edx [ ebp - 0x18 ]
push 0x0
call sub_40e9a0
test eax eax
jne r-xdata
inc edi
lea eax [ edi - 0x1 ]
mov [ rw-data ] eax
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
movzx esi [ eax + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x24 ] 0x0
cmp si 0x7f
je r-xdata
lea eax [ ebp - 0x68 ]
call sub_4107c0
lea eax [ ebp - 0x38 ]
call sub_4107c0
lea eax [ ebp - 0x74 ]
call sub_4107c0
lea eax [ ebp - 0x44 ]
call sub_4107c0
lea eax [ ebp - 0x50 ]
call sub_4107c0
lea eax [ ebp - 0x5c ]
call sub_4107c0
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] eax
jne r-xdata
test si si
jne r-xdata
mov eax edx
lea ecx [ ecx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x83
jmp r-xdata
lea eax [ ebp - 0x68 ]
call sub_4107c0
lea eax [ ebp - 0x38 ]
call sub_4107c0
lea eax [ ebp - 0x74 ]
call sub_4107c0
lea eax [ ebp - 0x44 ]
call sub_4107c0
lea eax [ ebp - 0x50 ]
call sub_4107c0
lea eax [ ebp - 0x5c ]
call sub_4107c0
xor eax eax
cmp edi [ rw-data ]
jg r-xdata
mov esi [ edx ]
mov eax [ esi ]
cmp eax 0x4
je r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
inc ecx
cmp [ edi + 0x8 ] 0x7f
jne r-xdata
mov edi [ ebp - 0x8 ]
test ecx ecx
je r-xdata
push rw-data
call sub_45e737
xor eax eax
lea esp [ esp ]
cmp eax 0xd
je r-xdata
dec ecx
cmp [ esi ] 0x5
jne r-xdata
mov eax [ ebp - 0x24 ]
mov esi [ edx + eax * 4 + 0x4 ]
inc eax
mov [ ebp - 0x24 ] eax
movzx eax [ esi + 0x8 ]
cmp ax 0x7f
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
inc eax
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] eax
call sub_4010a0
jmp r-xdata
cmp eax 0xe
je r-xdata
mov ecx [ edx + ecx * 4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
test ax ax
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x8 ]
lea esp [ esp ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
cmp eax 0x8
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebx + 0x4 ]
inc eax
mov [ ebp - 0x24 ] eax
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ecx ] 0x5
jne r-xdata
push 0xffffffff
push 0xa1
jmp r-xdata
movsx edx [ ecx + 0xa ]
push edx
push 0x72
jmp r-xdata
dec [ ebp - 0x14 ]
dec [ ebp - 0x4 ]
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
sub eax 0x5
cmp eax 0x1c
ja r-xdata
mov eax [ eax ]
cmp eax 0x23
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
inc eax
lea edi [ ebp - 0x2c ]
lea esi [ ebp - 0x50 ]
mov [ ebp - 0x4 ] eax
call sub_4010a0
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
cmp [ ebp - 0x2f ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
dec [ ebp - 0xc ]
dec [ ebp - 0x4 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
movzx ecx [ eax + lookup_table_40193c ]
jmp [ ecx * 4 + jump_table_4018fc ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
cmp [ ebp - 0x47 ] 0x0
mov eax [ ebp - 0x4c ]
jne r-xdata
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov eax [ ebp - 0x28 ]
inc eax
cmp eax 0x1
jg r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
inc eax
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x4 ] eax
call sub_4010a0
jmp r-xdata
mov eax 0x1
sub [ ebp - 0x10 ] eax
sub [ ebp - 0x4 ] eax
lea eax [ ebp - 0x68 ]
call sub_410bf0
test al al
jne r-xdata
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx 0x1
add [ ebp - 0x1c ] ecx
mov [ ebp - 0x24 ] eax
add eax ecx
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] eax
call sub_4010a0
jmp r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
lea eax [ ebp - 0x44 ]
call sub_410bf0
test al al
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push 0xffffffff
push 0x81
sub eax 0x12
cmp eax 0x10
ja r-xdata
push 0xffffffff
push 0x95
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ebx [ eax ]
lea esi [ ebp - 0x38 ]
call sub_40be70
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ebx [ eax ]
lea esi [ ebp - 0x50 ]
call sub_40be70
dec [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
push edx
push eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
inc eax
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] eax
call sub_4010a0
jmp r-xdata
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
lea eax [ ebp - 0x68 ]
call sub_410be0
mov ebx [ eax ]
lea esi [ ebp - 0x68 ]
call sub_40be70
mov eax 0x1
sub [ ebp - 0x18 ] eax
sub [ ebp - 0x4 ] eax
lea eax [ ebp - 0x74 ]
call sub_410bf0
test al al
jne r-xdata
movsx edx [ eax + 0xa ]
push edx
push 0x72
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx 0x1
add [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
add eax ecx
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_4010a0
jmp r-xdata
mov esi 0x1
sub [ ebp - 0x20 ] esi
sub [ ebp - 0x4 ] esi
lea eax [ ebp - 0x44 ]
call sub_410bf0
test al al
je r-xdata
mov esi 0x1
sub [ ebp - 0x1c ] esi
sub [ ebp - 0x4 ] esi
lea eax [ ebp - 0x5c ]
call sub_410bf0
test al al
je r-xdata
lea eax [ ebp - 0x5c ]
call sub_410bf0
test al al
jne r-xdata
lea eax [ ebp - 0x44 ]
call sub_410be0
mov ecx [ ebp - 0x4 ]
dec ecx
cmp ecx [ eax ]
je r-xdata
push 0xffffffff
push 0x74
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0x24 ]
mov edx [ eax + ecx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x9f
jmp r-xdata
movzx edx [ eax + lookup_table_427abf ]
jmp [ edx * 4 + jump_table_427ab3 ]
jmp r-xdata
push 0xffffffff
push 0x75
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
push edx
push eax
push ecx
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov esi [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
call sub_40e9a0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
push 0xffffffff
push 0x93
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
lea eax [ ebp - 0x74 ]
call sub_410be0
mov ebx [ eax ]
lea esi [ ebp - 0x74 ]
call sub_40be70
lea eax [ ebp - 0x44 ]
call sub_410be0
mov ebx [ eax ]
lea esi [ ebp - 0x44 ]
call sub_40be70
mov esi 0x1
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
lea eax [ ebp - 0x5c ]
call sub_410be0
mov ebx [ eax ]
lea esi [ ebp - 0x5c ]
call sub_40be70
mov esi 0x1
mov ebx [ ebp - 0x4 ]
inc ebx
jmp r-xdata
push 0xffffffff
push 0x98
jmp r-xdata
lea eax [ ebp - 0x5c ]
call sub_410be0
mov edx [ ebp - 0x4 ]
dec edx
cmp edx [ eax ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
push 0xffffffff
push 0x78
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0xffffffff
push 0x99
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jl r-xdata
push 0xffffffff
push 0xb3
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
push 0xffffffff
push 0x96
jmp r-xdata
jmp r-xdata
push rw-data
call sub_45e737
lea eax [ ebp - 0x68 ]
call sub_4107c0
lea eax [ ebp - 0x38 ]
call sub_4107c0
lea eax [ ebp - 0x74 ]
call sub_4107c0
lea eax [ ebp - 0x44 ]
call sub_4107c0
lea eax [ ebp - 0x50 ]
call sub_4107c0
lea eax [ ebp - 0x5c ]
call sub_4107c0
mov eax esi
jmp r-xdata
sub_401980
push edi
test eax eax
jne r-xdata
dec eax
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
dec eax
je r-xdata
push ecx
push edx
cmp [ rw-data ] eax
jne r-xdata
push ecx
push edx
mov edi rw-data
sub eax 0xe
jne r-xdata
push rw-data
call sub_432929
mov edi eax
jmp r-xdata
mov edi rw-data
mov eax esi
call sub_403e10
mov al 0x1
pop edi
retn
mov eax esi
call sub_403e10
mov al 0x1
pop edi
retn
or ecx 0x400
mov edi rw-data
jmp r-xdata
push ecx
push edx
sub_4019d0
cmp [ edi + 0x8 ] 0x0
ja r-xdata
push ebx
push esi
xor esi esi
mov [ edi + 0x8 ] 0x0
retn
inc esi
cmp esi [ edi + 0x8 ]
jb r-xdata
mov ecx ebx
call sub_402250
push ebx
call sub_4111dc
add esp 0x4
mov eax [ edi + 0x4 ]
mov ebx [ eax + esi * 4 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
mov [ edi + 0x8 ] 0x0
retn
sub_401a10
mov edx [ eax ]
cmp edx [ eax + 0x1c ]
jge r-xdata
push ebx
mov ebx r--data
mov eax ecx
call sub_402160
xor al al
pop ebx
retn
push esi
lea esi [ edx + 0x1 ]
mov [ eax ] esi
mov eax [ eax + 0x18 ]
mov eax [ eax + edx * 4 ]
pop esi
cmp ecx eax
je r-xdata
mov al 0x1
retn
call sub_403c30
sub_401a50
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] 0x0
call sub_401b10
push 0x1
lea ecx [ ebp - 0x28 ]
push ecx
mov eax esi
mov edi rw-data
call sub_403e10
mov ecx esi
call sub_402250
mov edi [ rw-data ]
lea esi [ ebp - 0x28 ]
call sub_408f40
mov [ ebp - 0x28 ] edi
mov edi r--data
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x20 ] 0x1
call sub_401b10
push 0x1
lea edx [ ebp - 0x28 ]
push edx
mov eax esi
mov edi rw-data
call sub_403e10
mov ecx esi
call sub_402250
mov eax [ ebx + 0x12c ]
mov [ rw-data ] 0x0
mov [ ebx + 0xf8 ] 0x0
mov [ ebp - 0x4 ] eax
lea esp [ esp ]
mov eax [ eax ]
mov eax [ eax ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
push ebx
call sub_465124
cmp al 0x1
jne r-xdata
lea esi [ ebp - 0x28 ]
mov [ ebx + 0xf8 ] 0x1
call sub_408f40
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
call sub_442a67
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
push 0x1
inc eax
push eax
push ebx
call sub_46ff4b
test eax eax
jne r-xdata
sub_401b10
push edi
call sub_4111c1
add esp 0x4
mov [ esi + 0x4 ] eax
inc eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push edi
push eax
mov [ esi ] eax
call sub_410e60
push 0x4
call sub_4115d7
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
retn
sub_401b80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4bc
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
mov eax 0x104
lea ecx [ esp + 0x10 ]
call sub_4013c0
cmp [ rw-data ] 0x1
je r-xdata
mov ecx [ rw-data ]
push 0x7f
lea eax [ esp + 0x24 ]
push eax
push 0x65
push ecx
call [ LoadStringW@IAT ]
jmp r-xdata
xor edx edx
mov [ esp + 0x20 ] dx
lea ebx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
call sub_402160
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ rw-data ]
lea eax [ esp + 0x10 ]
call sub_40d200
mov esi [ rw-data ]
push esi
call sub_4348de
test eax eax
je r-xdata
cmp [ esi + 0x60 ] 0x0
jne r-xdata
push 0x3a4
lea eax [ esp + 0x128 ]
push 0x0
push eax
call sub_412f40
mov edx [ esp + 0x1c ]
mov ecx [ rw-data ]
push 0x7f
push edx
lea eax [ esp + 0x34 ]
push eax
mov [ esp + 0x138 ] 0x3a8
mov [ esp + 0x13c ] ecx
mov [ esp + 0x140 ] 0x1
mov [ esp + 0x144 ] 0x4
call sub_412fba
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x154 ]
xor ecx ecx
push eax
mov [ esp + 0x13e ] cx
call sub_411567
add esp 0x20
lea ecx [ esp + 0x120 ]
push ecx
push 0x1
call [ Shell_NotifyIconW@IAT ]
lea ecx [ esp + 0x10 ]
call sub_402250
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
push esi
call sub_4348de
mov edi eax
jmp r-xdata
add esi 0x5c
push esi
lea esi [ esp + 0x14 ]
call sub_40e0a0
jmp r-xdata
mov edi [ rw-data ]
lea eax [ esp + 0x10 ]
call sub_40d200
sub_401cb0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi - 0x49c ]
mov edx [ ecx + 0x4 ]
lea eax [ edi - 0x49c ]
mov [ edx + edi - 0x49c ] r--data
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov eax [ eax + 0x4 ]
lea ecx [ eax - 0x49c ]
mov [ eax + edi - 0x4a0 ] ecx
mov eax [ edi - 0x3b4 ]
mov [ ebp - 0x4 ] edi
test eax eax
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push r--data
call [ mciSendStringW@IAT ]
cmp [ edi - 0x2ec ] 0x0
ja r-xdata
xor esi esi
cmp [ edi - 0x31c ] 0x0
ja r-xdata
inc esi
cmp esi [ edi - 0x2ec ]
jb r-xdata
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ rw-data ]
push ecx
push edx
call [ UnregisterHotKey@IAT ]
mov eax [ edi - 0x2f0 ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
xor ebx ebx
cmp [ edi - 0x30c ] 0x0
ja r-xdata
mov edx [ edi - 0x2f0 ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
push eax
call sub_442b97
inc ebx
cmp ebx [ edi - 0x31c ]
jb r-xdata
mov eax [ eax ]
cmp [ eax ] 0x0
jne r-xdata
xor esi esi
cmp [ edi - 0x2fc ] 0x0
ja r-xdata
mov edx [ edi - 0x320 ]
mov eax [ edx + ebx * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call [ FindClose@IAT ]
mov ecx [ edi - 0x320 ]
mov edx [ ecx + ebx * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
push ecx
call sub_4111dc
add esp 0x4
mov esi [ eax + 0x4 ]
call sub_40da20
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
jmp r-xdata
inc esi
cmp esi [ edi - 0x30c ]
jb r-xdata
mov eax [ eax ]
push eax
call [ FreeLibrary@IAT ]
xor esi esi
lea esi [ edi - 0x2e4 ]
mov [ ebp - 0xc ] esi
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
lea ebx [ edi - 0x14 ]
mov esi ebx
call sub_408f40
mov esi [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax - 0x498 ] 0x0
je r-xdata
mov edx [ edi - 0x320 ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
push ecx
call sub_4111dc
add esp 0x4
mov edx [ edi - 0x310 ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
inc esi
cmp esi [ edi - 0x2fc ]
jb r-xdata
mov edx [ eax ]
mov eax [ edx + 0x10 ]
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
mov ecx [ edi - 0x300 ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
test eax eax
je r-xdata
call sub_40e750
mov eax [ edi - 0x28 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ edi - 0x300 ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
push eax
call sub_44afd1
push eax
call sub_4326ed
jmp r-xdata
mov esi ebx
call sub_408f40
lea esi [ edi - 0x34 ]
call sub_4109a0
lea esi [ edi - 0x44 ]
call sub_4109c0
lea ecx [ edi - 0x64 ]
call sub_402250
lea esi [ edi - 0x1a0 ]
call sub_401400
lea esi [ edi - 0x1bc ]
mov [ esi ] r--data
call sub_4109e0
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
lea ebx [ edi - 0x2c4 ]
call sub_4012f0
lea ecx [ edi - 0x2d4 ]
call sub_402250
mov esi [ ebp - 0xc ]
call sub_408f40
lea esi [ edi - 0x2f4 ]
mov [ esi ] r--data
call sub_4109e0
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
lea esi [ edi - 0x304 ]
add esp 0x4
mov [ esi ] r--data
call sub_4109e0
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
lea esi [ edi - 0x314 ]
add esp 0x4
mov [ esi ] r--data
call sub_4109e0
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
lea esi [ edi - 0x324 ]
add esp 0x4
mov [ esi ] r--data
call sub_4109e0
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
lea eax [ edi - 0x330 ]
call sub_410aa0
lea eax [ edi - 0x340 ]
call sub_410a70
lea ecx [ edi - 0x350 ]
call sub_402250
lea eax [ edi - 0x368 ]
call sub_410a40
lea esi [ edi - 0x374 ]
call sub_4109c0
lea esi [ edi - 0x380 ]
call sub_4109c0
lea ecx [ edi - 0x3c4 ]
call sub_402250
lea ecx [ edi - 0x3d4 ]
call sub_402250
lea ecx [ edi - 0x3e4 ]
call sub_402250
lea eax [ edi - 0x414 ]
call sub_40ddd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax - 0x49c ]
lea eax [ ebp - 0x8 ]
call sub_40d410
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea edi [ eax + edi - 0x498 ]
call sub_40da90
mov ecx [ esi ]
mov eax [ ebp - 0x4 ]
add eax [ ecx + 0x4 ]
mov edi [ ebp - 0x4 ]
cmp [ eax - 0x498 ] 0x0
jne r-xdata
sub_401f20
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
lea esi [ ebp - 0x50 ]
call sub_40e6e0
mov eax [ ebp + 0x8 ]
xor ebx ebx
push eax
mov ecx esi
mov [ ebp - 0xc ] ebx
call sub_402560
push 0x104
push rw-data
push ebx
call [ GetModuleFileNameW@IAT ]
mov eax rw-data
call sub_410100
lea esi [ ebp - 0x4c ]
lea edi [ ebp - 0x2c ]
mov [ ebp + 0xb ] al
mov [ rw-data ] rw-data
call sub_410960
mov edi r--data
lea esi [ ebp - 0x1c ]
call sub_401b10
xor eax eax
lea ecx [ ebx + 0x1 ]
lea edx [ ebp - 0x2c ]
call sub_401980
mov ecx esi
call sub_402250
lea esi [ ebp - 0x2c ]
call sub_408f40
mov edi r--data
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x2c ] ebx
call sub_401b10
xor eax eax
mov ecx 0x100
lea edx [ ebp - 0x2c ]
call sub_401980
mov ecx esi
call sub_402250
lea esi [ ebp - 0x1c ]
call sub_401b10
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
xor ecx ecx
call sub_40c2c0
mov ecx esi
call sub_402250
mov ebx [ ebp - 0x34 ]
lea ecx [ ebp - 0x1c ]
call sub_40bc70
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
call sub_401a10
mov esi [ ebp - 0x1c ]
push esi
push r--data
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
mov [ rw-data ] 0x1
dec ebx
call sub_401a10
mov esi [ ebp - 0x1c ]
jmp r-xdata
push esi
push r--data
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
mov [ rw-data ] 0x1
dec ebx
call sub_401a10
mov esi [ ebp - 0x1c ]
jmp r-xdata
push esi
push r--data
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0xb ] al
push 0x104
sete al
push rw-data
push 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] eax
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
call sub_401a10
lea ecx [ ebp - 0x1c ]
push ecx
mov esi rw-data
call sub_40e0a0
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
sub ebx 0x2
call sub_401a10
mov esi [ ebp - 0x1c ]
jmp r-xdata
push esi
push r--data
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp + 0xb ] al
jne r-xdata
push esi
push rw-data
call sub_411567
add esp 0x8
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
dec ebx
call sub_401a10
jmp r-xdata
test ebx ebx
js r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x3
xor ebx ebx
jmp r-xdata
mov edi [ ebp - 0x8 ]
lea eax [ ebx + 0x1 ]
push eax
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
add esp 0x14
mov esi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
call sub_401a10
mov edx [ ebp - 0x1c ]
push edx
push rw-data
call sub_411567
add esp 0x8
lea ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x50 ]
sub ebx 0x2
call sub_401a10
mov esi [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
call sub_402250
lea esi [ ebp - 0x2c ]
call sub_408f40
lea edi [ ebp - 0x3c ]
call sub_4019d0
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x3c ] r--data
call sub_4019d0
mov ecx [ ebp - 0x38 ]
push ecx
call sub_4111dc
add esp 0x4
lea ecx [ ebp - 0x4c ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edi [ ebp - 0x8 ]
inc eax
push eax
push 0x1
push 0x0
mov [ ebp + 0x8 ] eax
call sub_40cf00
add esp 0xc
lea edi [ ebp - 0x1c ]
mov esi eax
call sub_40e6a0
mov ecx edi
lea eax [ ebp - 0x50 ]
call sub_401a10
cmp [ ebp + 0x8 ] ebx
jl r-xdata
sub_402160
push esi
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push esi
or eax 0xffffffff
call sub_40c600
pop esi
retn
push edi
push ebx
call sub_4111c1
mov ecx [ esi + 0xc ]
add esp 0x4
mov [ esi + 0x4 ] eax
cmp [ ecx ] 0x1
jg r-xdata
dec [ ecx ]
call sub_4013a0
mov eax [ esi + 0x4 ]
inc eax
je r-xdata
mov edi eax
call sub_403bd0
mov edi 0x8
jmp r-xdata
lea edi [ eax + 0x7 ]
shr edi 0x3
add edi edi
add edi edi
add edi edi
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x8 ] edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esi ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebx
push edx
call sub_410e60
add esp 0xc
pop edi
pop esi
retn
sub_4021e0
push esi
push edi
call sub_410660
mov esi rw-data
mov edi 0xe
sub esi 0x10
mov ecx esi
call sub_402250
dec edi
jns r-xdata
mov eax rw-data
call sub_4107c0
mov ecx rw-data
call sub_402250
mov ecx rw-data
call sub_402250
mov ecx rw-data
call sub_402250
mov ecx rw-data
call sub_402250
mov ecx rw-data
call sub_402250
mov ecx rw-data
call sub_402250
pop edi
mov ecx rw-data
pop esi
jmp sub_402250
sub_402250
mov eax [ ecx + 0xc ]
dec [ eax ]
mov eax [ ecx + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
retn
push esi
mov esi ecx
mov ecx [ esi ]
push ecx
call sub_4111dc
mov edx [ esi + 0xc ]
push edx
call sub_4111dc
add esp 0x8
pop esi
sub_402280
movzx eax [ edi + 0x8 ]
cmp ax 0x30
jl r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp ax 0x3f
jg r-xdata
xor eax eax
mov [ edi ] eax
mov eax edi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ edi ] eax
mov eax edi
retn
mov eax [ edi ]
test eax eax
jne r-xdata
push eax
call sub_4431ad
jmp r-xdata
sub_4022d0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
je r-xdata
mov eax edi
pop edi
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x0
push ebx
push esi
mov esi [ ebp + 0xc ]
ja r-xdata
xor ebx ebx
mov [ edi + 0x8 ] 0x0
mov eax [ esi + 0x8 ]
cmp [ edi + 0xc ] eax
jae r-xdata
inc ebx
cmp ebx [ edi + 0x8 ]
jb r-xdata
push eax
call sub_44c7c0
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
test eax eax
je r-xdata
cmp eax 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
xor ebx ebx
lea ecx [ ecx ]
mov eax 0x4
jmp r-xdata
xor ecx ecx
mov [ edi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx eax
mov eax [ edi + 0x4 ]
push eax
call sub_4111dc
add esp 0x8
mov [ edi + 0x4 ] ebx
xor esi esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov edi [ edx + ebx * 4 ]
mov esi eax
mov ax [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
mov cx [ edi + 0xa ]
movzx eax ax
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + ebx * 4 ] esi
inc ebx
cmp ebx [ edi + 0x8 ]
jb r-xdata
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
push 0xc
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
cmp ax 0x20
je r-xdata
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov edi [ edi ]
mov edx [ edi ]
mov [ eax ] edx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edi [ edi + 0xc ]
mov [ eax + 0xc ] edi
inc [ edi ]
mov [ esi ] eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
sub_402400
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
mov al 0x1
mov edi [ rw-data ]
cmp edi ebx
je r-xdata
xor al al
jmp r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax edi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ rw-data ]
add esp 0x4
mov [ rw-data ] eax
cmp edx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ edx + 0x1 ]
xor ecx ecx
mov eax edi
mov edx 0x10
mul edx
seto cl
mov esi 0x1
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_4115d7
add esp 0x4
cmp eax ebx
je r-xdata
xor ecx ecx
jmp r-xdata
xor eax eax
jmp r-xdata
lea ecx [ edi - 0x1 ]
mov [ eax ] edi
lea edx [ eax + 0x4 ]
cmp ecx ebx
jl r-xdata
mov edx [ esi ]
mov [ eax + ecx * 4 ] edx
mov edx [ rw-data ]
inc ecx
cmp ecx edx
jl r-xdata
mov [ rw-data ] eax
mov edi 0x10
mov eax edx
mov eax edx
lea ecx [ ecx ]
mov esi [ esi + 0xc ]
mov eax [ rw-data ]
lea ebx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
call sub_40d530
mov edx [ ebp - 0xc ]
push edx
call sub_4111dc
add esp 0x4
cmp eax ebx
je r-xdata
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
add eax 0x10
dec ecx
jns r-xdata
cmp esi ebx
jle r-xdata
mov eax [ eax + esi * 4 - 0x4 ]
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push esi
call sub_402880
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40edc0
mov eax [ rw-data ]
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ edi + eax ]
push ecx
call sub_4022d0
inc esi
add edi 0x10
jmp r-xdata
mov eax [ rw-data ]
cmp esi [ rw-data ]
jg r-xdata
sub_402560
push ebp
mov ebp esp
mov eax 0x2038
call sub_422240
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x14 ]
mov [ ebp - 0x18 ] edi
call sub_4019d0
mov ebx [ ebp + 0x8 ]
mov [ esi ] 0x0
add esi 0x4
mov eax esi
mov [ ebp - 0x10 ] esi
call sub_402160
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp + 0xb ] bl
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] bl
mov esi [ ebp - 0x10 ]
inc ebx
jmp r-xdata
cmp eax 0x9
je r-xdata
mov edi ebx
call sub_401c90
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
lea ecx [ ecx ]
mov ecx [ esi ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
mov eax [ esi ]
lea eax [ eax + ebx * 2 ]
movzx eax [ eax ]
mov ecx [ ebp - 0xc ]
test ax ax
je r-xdata
test ecx ecx
je r-xdata
inc ebx
cmp ecx 0x1000
jge r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp eax 0x20
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ ecx - 0x1 ]
cmp eax edx
jl r-xdata
xor edx edx
lea edi [ ebp - 0x2034 ]
lea esi [ ebp - 0x28 ]
mov [ ebp + ecx * 2 - 0x2034 ] dx
call sub_401b10
mov edi esi
mov esi [ ebp - 0x18 ]
call sub_40d7c0
mov ecx edi
call sub_402250
cmp [ ebp + 0xb ] 0x1
je r-xdata
cmp eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax 0x22
inc ecx
mov [ ebp + edx * 2 - 0x2034 ] ax
jmp r-xdata
mov si [ ebp + eax * 2 - 0x2034 ]
mov [ ebp + eax * 2 - 0x2032 ] si
dec eax
cmp eax edx
jge r-xdata
mov [ ebp + ecx * 2 - 0x2034 ] ax
inc ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
lea edi [ ebp - 0x2034 ]
lea esi [ ebp - 0x28 ]
mov [ ebp + ecx * 2 - 0x2034 ] dx
call sub_401b10
mov edi esi
mov esi [ ebp - 0x18 ]
call sub_40d7c0
mov ecx edi
call sub_402250
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x5 ] 0x0
lea ebx [ ebx ]
cmp eax 0x22
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax esi
call sub_4026f0
mov eax [ esi + 0x4 ]
cmp ebx eax
jae r-xdata
inc ebx
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov edi ebx
call sub_401c90
cmp [ eax ] 0x22
je r-xdata
mov esi [ ebp - 0x10 ]
mov edi ebx
call sub_401c90
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
mov cl [ ebp + 0xb ]
test cl cl
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0xc ]
mov edx 0x22
mov [ ebp + eax * 2 - 0x2034 ] dx
inc eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp + 0xb ] 0x1
mov [ ebp + 0xb ] 0x0
jmp r-xdata
jmp r-xdata
inc ebx
test cl cl
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
sub_4026f0
push esi
mov esi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push edi
call sub_4013a0
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_446618
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esi ]
mov edi eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push edi
call sub_410e60
add esp 0x10
mov [ esi ] edi
pop edi
pop esi
retn
pop esi
retn
sub_402710
movzx eax [ esi + 0x8 ]
cmp ax 0x30
jl r-xdata
mov [ esi + 0x8 ] di
cmp di 0x3f
jle r-xdata
cmp ax 0x3f
jg r-xdata
cmp di 0x30
jge r-xdata
cmp di 0x10
je r-xdata
push ebx
mov ebx [ esi ]
test ebx ebx
je r-xdata
mov [ esi ] 0x0
retn
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
cmp di 0x20
je r-xdata
mov [ esi ] 0x0
pop ebx
mov eax [ ebx + 0xc ]
dec [ eax ]
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
fldz
fstp [ esi ]
retn
mov ecx [ ebx ]
push ecx
call sub_4111dc
mov edx [ ebx + 0xc ]
push edx
call sub_4111dc
add esp 0x8
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
sub_402780
push ebx
mov ebx eax
mov eax [ edi + 0xc ]
push esi
cmp [ edi + 0x8 ] eax
je r-xdata
add eax eax
mov [ edi + 0xc ] eax
cmp eax 0x4
jb r-xdata
push 0xc
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov esi 0x4
jmp r-xdata
mov esi eax
xor esi esi
jmp r-xdata
mov esi eax
mov ax [ ebx + 0x8 ]
mov [ esi + 0x8 ] ax
mov cx [ ebx + 0xa ]
movzx eax ax
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
xor ecx ecx
mov eax esi
mov edx 0x4
mul edx
seto cl
mov [ edi + 0xc ] esi
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ edi + 0x4 ]
mov esi eax
mov eax [ edi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push esi
call sub_410e60
mov edx [ edi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + eax * 4 ] esi
inc [ edi + 0x8 ]
pop esi
pop ebx
retn
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
cmp ax 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebx ]
mov edx [ ebx ]
mov [ eax ] edx
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ebx [ ebx + 0xc ]
mov [ eax + 0xc ] ebx
inc [ ebx ]
fld [ ebx ]
fstp [ esi ]
jmp r-xdata
mov edx [ ebx ]
mov [ esi ] edx
mov [ esi ] eax
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + eax * 4 ] esi
inc [ edi + 0x8 ]
pop esi
pop ebx
retn
sub_402880
push ebp
mov ebp esp
sub esp 0x28
or eax 0xffffffff
mov [ ebp - 0xc ] ax
push ebx
xor ecx ecx
mov eax 0x65
xor ebx ebx
mov [ ebp - 0x1c ] eax
mov edx 0x2
mul edx
seto cl
push esi
push edi
mov [ ebp - 0x20 ] ebx
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
push 0x4
mov [ ebp - 0x24 ] eax
mov [ eax ] cx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov [ eax ] 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x10 ]
cmp [ edx + 0x8 ] ebx
jbe r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] ebx
cmp [ eax ] bx
je r-xdata
xor edi edi
mov eax edx
mov edi [ ebp + 0x10 ]
mov ecx 0x7f
lea eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] cx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xa ] bx
call sub_402780
mov esi [ ebp - 0x18 ]
dec [ esi ]
jne r-xdata
mov ecx [ ebp + 0xc ]
jmp r-xdata
inc edi
cmp edi [ eax + 0x8 ]
jb r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
xor eax eax
mov edx [ ebp - 0x24 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
movzx eax [ ecx + ebx * 2 ]
cmp eax 0x20
je r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + edi * 4 ]
test esi esi
je r-xdata
cmp ax 0x30
jl r-xdata
push esi
call sub_4111dc
mov eax [ ebp + 0x10 ]
add esp 0x4
inc ebx
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
movzx eax [ ecx + ebx * 2 ]
test ax ax
je r-xdata
mov eax [ ecx + 0xc ]
dec [ eax ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x8 ] ecx
cmp [ edx ] ebx
je r-xdata
mov ax [ ebp - 0xc ]
cmp ax 0x30
jl r-xdata
mov esi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xa ] bx
cmp esi 0x30
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
call sub_4111dc
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp ax 0x3f
jle r-xdata
cmp esi 0x39
ja r-xdata
cmp esi 0x2e
je r-xdata
mov esi [ ebp - 0x14 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x8 ]
call sub_4031b0
cmp al 0x1
jne r-xdata
cmp esi 0x41
jae r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp esi 0x2e
jne r-xdata
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x14 ]
call sub_402780
mov ebx [ ebp - 0x8 ]
jmp r-xdata
cmp esi 0x5a
ja r-xdata
cmp esi 0x61
jae r-xdata
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
lea esi [ ebp - 0x24 ]
inc ebx
call sub_403350
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
cmp [ eax + ebx * 2 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push edx
lea eax [ ebp - 0x8 ]
call sub_403060
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
cmp esi 0x7a
jbe r-xdata
cmp esi 0x5f
je r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x138c
push ecx
call sub_460879
lea ecx [ ebp - 0x24 ]
call sub_402250
lea edx [ ebp - 0x14 ]
push edx
call sub_44b469
mov eax 0x1
jmp r-xdata
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x14 ]
call sub_402780
mov ebx [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov eax esi
cmp eax 0x24
je r-xdata
cmp ax 0x30
jb r-xdata
cmp ax 0x7a
jbe r-xdata
push eax
lea eax [ ebp - 0x24 ]
call sub_403020
inc ebx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea esi [ ebp - 0x24 ]
inc ebx
call sub_403350
mov eax [ ebp + 0xc ]
movzx edi [ eax + ebx * 2 ]
mov esi [ ebp - 0x20 ]
cmp eax 0x3d
je r-xdata
cmp ax 0x5f
je r-xdata
cmp ax 0x39
jbe r-xdata
movzx eax [ esi + ebx * 2 ]
cmp ax 0x41
jb r-xdata
cmp di 0x61
jb r-xdata
cmp di 0x41
jae r-xdata
mov edx [ ebp + 0xc ]
inc ebx
cmp [ edx + ebx * 2 ] 0x3d
lea esi [ ebp - 0x14 ]
je r-xdata
cmp eax 0x28
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp di 0x30
jae r-xdata
cmp di 0x7a
ja r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x1
jg r-xdata
mov edi 0x50
call sub_402710
inc ebx
jmp r-xdata
mov edi 0x41
call sub_402710
jmp r-xdata
mov edi 0x47
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
inc ebx
jmp r-xdata
cmp eax 0x29
je r-xdata
mov ecx [ ebp + 0x8 ]
dec ebx
push ebx
push 0x138b
push ecx
call sub_460879
lea ecx [ ebp - 0x24 ]
call sub_402250
lea edx [ ebp - 0x14 ]
push edx
call sub_44b469
mov eax 0x1
jmp r-xdata
mov edi 0x35
jmp r-xdata
cmp di 0x39
jbe r-xdata
cmp di 0x5f
je r-xdata
dec [ eax ]
lea esi [ ebp - 0x24 ]
call sub_4013a0
mov esi [ ebp - 0x20 ]
lea ecx [ esi + 0x2 ]
push ecx
call sub_446618
xor ecx ecx
mov [ ebp - 0x1c ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ ebp - 0x24 ]
add esp 0x4
lea ecx [ esi + esi + 0x2 ]
push ecx
push edx
push eax
mov [ ebp - 0x8 ] eax
call sub_410e60
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ esi + 0x1 ]
lea esi [ ebp - 0x24 ]
call sub_402f00
mov esi [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x14 ]
call sub_402780
mov edi 0x48
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
inc ebx
jmp r-xdata
cmp eax 0x22
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_402710
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x14 ]
call sub_402280
jmp r-xdata
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + esi * 2 ] di
inc esi
xor ecx ecx
inc ebx
mov [ eax + esi * 2 ] cx
movzx edi [ edx + ebx * 2 ]
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp di 0x5a
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea eax [ ebp - 0x24 ]
lea edi [ ebp - 0x8 ]
call sub_402f80
lea esi [ ebp - 0x14 ]
test eax eax
jne r-xdata
sub eax 0x1a
cmp eax 0x44
ja r-xdata
mov edx [ ebp + 0x8 ]
dec ebx
push ebx
push 0x138b
push edx
call sub_460879
lea eax [ ebp - 0x24 ]
call sub_4026f0
mov esi [ ebp - 0x20 ]
mov edi [ ebp - 0x24 ]
push esi
push edi
call [ CharUpperBuffW@IAT ]
mov ax [ ebp - 0xc ]
cmp ax 0x30
jge r-xdata
mov edi 0x7f
call sub_402710
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x14 ]
call sub_402780
lea edi [ eax + 0x36 ]
call sub_402710
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x14 ]
call sub_402280
mov eax edi
mov edi [ ebp + 0x10 ]
call sub_402780
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push 0x1388
push edx
call sub_460879
mov edi 0x7f
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
jmp r-xdata
movzx eax [ eax + lookup_table_402eb8 ]
jmp [ eax * 4 + jump_table_402e7c ]
cmp ax 0x3f
jg r-xdata
mov eax 0x33
push 0x10
mov [ ebp - 0xc ] ax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_402250
lea eax [ ebp - 0x14 ]
push eax
call sub_44b469
mov eax 0x1
jmp r-xdata
mov edi 0x40
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
inc ebx
jmp r-xdata
mov edi 0x4d
lea esi [ ebp - 0x14 ]
call sub_402710
mov ecx [ ebp + 0xc ]
inc ebx
cmp [ ecx + ebx * 2 ] 0x3d
jne r-xdata
mov edi 0x49
lea esi [ ebp - 0x14 ]
call sub_402710
mov eax [ ebp + 0xc ]
inc ebx
cmp [ eax + ebx * 2 ] 0x3d
jne r-xdata
mov edi 0x4c
lea esi [ ebp - 0x14 ]
call sub_402710
mov eax [ ebp + 0xc ]
inc ebx
cmp [ eax + ebx * 2 ] 0x3d
jne r-xdata
mov edi 0x4b
lea esi [ ebp - 0x14 ]
call sub_402710
mov edx [ ebp + 0xc ]
inc ebx
cmp [ edx + ebx * 2 ] 0x3d
jne r-xdata
mov edi 0x4e
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
inc ebx
jmp r-xdata
mov edi 0x4f
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
inc ebx
jmp r-xdata
lea esi [ ebp - 0x24 ]
inc ebx
call sub_403350
mov esi [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
movzx eax [ edx + ebx * 2 + 0x2 ]
inc ebx
sub eax 0x3d
lea esi [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp + 0xc ]
inc ebx
cmp [ eax + ebx * 2 ] 0x3d
lea esi [ ebp - 0x14 ]
je r-xdata
mov edi 0x4a
lea esi [ ebp - 0x14 ]
call sub_402710
mov ecx [ ebp + 0xc ]
inc ebx
cmp [ ecx + ebx * 2 ] 0x3d
jne r-xdata
mov edi 0x51
lea esi [ ebp - 0x14 ]
call sub_402710
mov edi [ ebp + 0x10 ]
mov eax esi
call sub_402780
inc ebx
jmp r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ ebp - 0x14 ] eax
mov edi 0x56
inc ebx
call sub_402710
jmp r-xdata
mov edi 0x52
inc ebx
call sub_402710
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x41
jae r-xdata
mov edi 0x46
call sub_402710
inc ebx
jmp r-xdata
dec eax
je r-xdata
mov edi 0x45
call sub_402710
inc ebx
jmp r-xdata
mov edi 0x42
call sub_402710
jmp r-xdata
mov edi 0x53
inc ebx
call sub_402710
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x2 ] bx
jne r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edi 0x55
lea esi [ ebp - 0x14 ]
inc ebx
call sub_402710
jmp r-xdata
mov edi 0x54
lea esi [ ebp - 0x14 ]
inc ebx
call sub_402710
jmp r-xdata
cmp ax 0x30
jae r-xdata
cmp ax 0x7a
ja r-xdata
push eax
lea eax [ ebp - 0x24 ]
call sub_403020
inc ebx
jmp r-xdata
mov edi 0x44
call sub_402710
inc ebx
jmp r-xdata
mov edi 0x43
call sub_402710
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ rw-data ]
jl r-xdata
push eax
call sub_4431ad
jmp r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5f
je r-xdata
movzx eax [ esi + ebx * 2 ]
cmp ax 0x5a
ja r-xdata
mov ebx 0x1
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec ebx
push ebx
push 0x138b
push eax
call sub_460879
jmp r-xdata
lea eax [ ebp - 0x24 ]
call sub_4026f0
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
push ecx
push edx
call [ CharUpperBuffW@IAT ]
mov edi 0x32
lea ecx [ ebp - 0x24 ]
call sub_402250
lea ecx [ ebp - 0x14 ]
push ecx
call sub_44b469
mov eax 0x1
jmp r-xdata
sub_402ec7
push cs
add eax [ eax + 0xe070e06 ]
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
or [ esi ] cl
or [ esi ] ecx
or cl [ esi ]
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
or ecx [ esi ]
or al 0xd
int3
sub_402f00
push ebp
mov ebp esp
inc eax
sub esp 0xc
cmp [ esi + 0x8 ] eax
jb r-xdata
cmp eax 0x41c2
jae r-xdata
mov esp ebp
pop ebp
retn
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
test eax eax
jns r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
test eax eax
jns r-xdata
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
test eax eax
jns r-xdata
fmul [ r--data ]
fnstcw [ ebp - 0x2 ]
movzx eax [ ebp - 0x2 ]
or eax 0xc00
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fistp [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] ecx
fldcw [ ebp - 0x2 ]
jmp r-xdata
fadd [ r--data ]
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ esi ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi ] edi
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push eax
push edi
call sub_410e60
mov eax [ esi ]
push eax
call sub_4111dc
add esp 0x10
fmul [ r--data ]
fnstcw [ ebp - 0x2 ]
movzx eax [ ebp - 0x2 ]
or eax 0xc00
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fistp [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
jmp r-xdata
fadd [ r--data ]
fmul [ r--data ]
fnstcw [ ebp - 0x2 ]
movzx eax [ ebp - 0x2 ]
or eax 0xc00
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fistp [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x8 ] edx
fldcw [ ebp - 0x2 ]
jmp r-xdata
fadd [ r--data ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
sub_402f80
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi eax
call sub_403350
mov ebx [ edi ]
mov ecx [ ebp + 0xc ]
cmp [ ecx + ebx * 2 + 0x2 ] 0x0
lea eax [ ebx + 0x1 ]
mov [ edi ] eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push 0x138a
push ecx
call sub_460879
mov eax 0x1
jmp r-xdata
movzx edx [ ecx + ebx * 2 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] edx
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
lea ecx [ ecx + eax * 2 ]
movzx eax [ ecx ]
cmp ax dx
je r-xdata
cmp [ ecx + 0x2 ] dx
je r-xdata
mov ebx eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
push eax
mov eax esi
call sub_403020
add [ edi ] 0x2
jmp r-xdata
inc [ edi ]
xor eax eax
dec [ eax ]
call sub_4013a0
mov ecx [ esi + 0x4 ]
add ecx 0x2
push ecx
call sub_446618
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
add esp 0x4
lea edx [ ecx + ecx + 0x2 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp - 0x8 ] eax
call sub_410e60
mov edx [ ebp - 0x8 ]
add esp 0xc
mov [ esi ] edx
jmp r-xdata
mov eax [ esi + 0x4 ]
inc eax
call sub_402f00
mov edx [ edi ]
mov eax [ ebp + 0xc ]
cmp [ eax + edx * 2 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ ecx + eax * 2 ] bx
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
xor ecx ecx
inc [ edi ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp - 0x4 ]
mov ecx eax
jmp r-xdata
mov ebx [ ebp - 0xc ]
sub_403020
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push edi
call sub_4013a0
mov eax [ esi + 0x4 ]
add eax 0x2
push eax
call sub_446618
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esi ]
mov edi eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push edi
call sub_410e60
add esp 0x10
mov [ esi ] edi
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
inc eax
call sub_402f00
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dx [ ebp + 0x8 ]
mov [ ecx + eax * 2 ] dx
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403060
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov ebx eax
call sub_403350
mov eax [ ebx ]
mov ecx [ ebp + 0x8 ]
movzx edi [ ecx + eax * 2 ]
lea esp [ esp ]
cmp di 0x41
jae r-xdata
cmp di 0x61
jb r-xdata
push edi
mov eax esi
call sub_403020
inc [ ebx ]
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
movzx edi [ edx + eax * 2 ]
jmp r-xdata
jmp r-xdata
cmp di 0x30
jae r-xdata
cmp di 0x7a
ja r-xdata
cmp di 0x5a
jbe r-xdata
cmp di 0x39
jbe r-xdata
cmp di 0x5f
je r-xdata
jmp r-xdata
mov eax esi
call sub_4026f0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
push ecx
call [ CharUpperBuffW@IAT ]
xor ebx ebx
test ebx ebx
js r-xdata
inc ebx
cmp ebx 0x2b
jl r-xdata
cmp di 0x28
jne r-xdata
cmp di 0x20
jne r-xdata
mov eax [ esi ]
mov edx [ ebx * 4 + rw-data ]
push eax
push edx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
cmp di 0x20
je r-xdata
mov ecx [ rw-data ]
mov esi [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
test eax eax
js r-xdata
cmp di 0x9
je r-xdata
mov esi [ ebp + 0xc ]
xor edi edi
call sub_402710
pop edi
mov [ esi ] ebx
pop esi
pop ebx
pop ebp
retn 0xc
cmp di 0x9
je r-xdata
mov ebx [ ebp + 0xc ]
mov edi 0x34
mov esi ebx
call sub_402710
mov esi [ ebp + 0x10 ]
mov edi ebx
call sub_402280
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov esi [ ebp + 0xc ]
mov edi 0x1
mov ebx eax
call sub_402710
mov [ esi ] ebx
cmp di 0x2c
je r-xdata
mov esi [ ebp + 0xc ]
or edi 0xffffffff
call sub_402710
mov [ esi ] edi
jmp r-xdata
cmp di 0x3d
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp di 0x28
je r-xdata
cmp di 0x29
je r-xdata
cmp di 0x5d
je r-xdata
test di di
je r-xdata
jmp r-xdata
sub_4031b0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
mov ebx ecx
call sub_403350
mov eax [ edi ]
cmp [ ebx + eax * 2 ] 0x30
je r-xdata
movzx ecx [ ebx + eax * 2 + 0x2 ]
cmp ecx 0x78
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov esi eax
mov [ ebp - 0x8 ] 0x17
nop
add eax 0x2
mov [ edi ] eax
cmp ecx 0x58
jne r-xdata
and ecx 0xffffffdf
cmp ecx 0x41
jge r-xdata
cmp eax 0x31
je r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x39
jbe r-xdata
jmp r-xdata
cmp ecx 0x5a
jg r-xdata
cmp edx 0x5f
jne r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffffffef
or edx 0x20
mov [ ebp - 0x8 ] edx
sub eax 0x2b
cmp eax 0x3a
ja r-xdata
cmp eax 0x41
jb r-xdata
cmp eax 0x66
jbe r-xdata
push eax
inc ecx
mov eax esi
mov [ edi ] ecx
call sub_403020
jmp r-xdata
jmp r-xdata
mov al [ ebp - 0x8 ]
jmp r-xdata
test al 0x10
jne r-xdata
mov eax [ edi ]
movzx ecx [ ebx + eax * 2 ]
inc eax
mov [ edi ] eax
mov eax [ ebp + 0xc ]
push ecx
call sub_403020
and [ ebp - 0x8 ] 0xffffffdf
jmp r-xdata
movzx eax [ eax + lookup_table_40330c ]
jmp [ eax * 4 + jump_table_4032f8 ]
mov esi [ ebp + 0x8 ]
mov edi 0x5
call sub_402710
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push 0x8
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_432cc2
add esp 0xc
test al al
je r-xdata
cmp eax 0x46
ja r-xdata
mov ecx [ edi ]
movzx eax [ ebx + ecx * 2 ]
cmp eax 0x30
jb r-xdata
test [ ebp - 0x8 ] 0xfffffffd
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ edi ]
movzx edx [ ebx + eax * 2 ]
mov ecx edx
mov eax edx
cmp eax 0x2b
jl r-xdata
mov al [ ebp - 0x8 ]
test al 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
and cl 0x14
cmp cl 0x4
jne r-xdata
test [ ebp - 0x8 ] 0x8
je r-xdata
mov edx [ ebp - 0xc ]
mov [ esi ] edx
jmp r-xdata
or [ ebp - 0x8 ] 0x10
mov [ edi ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0x8 ]
mov edi 0x20
call sub_402710
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push eax
call sub_413bed
fstp [ esi ]
add esp 0x4
jmp r-xdata
mov edi [ ebp + 0xc ]
mov eax [ edi ]
push eax
call sub_41319b
mov ebx eax
add esp 0x4
mov ecx ebx
add ecx 0x80000000
mov [ ebp - 0x8 ] edx
adc edx 0x0
test edx edx
ja r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ ebp - 0x8 ] 0x25
mov al [ ebp - 0x8 ]
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ ebp - 0x8 ] 0x39
mov [ ebp - 0x8 ] 0x31
jmp r-xdata
mov al 0x1
mov esi [ ebp + 0x8 ]
mov edi 0x10
call sub_402710
mov edx [ ebp - 0x8 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] edx
jmp r-xdata
jb r-xdata
test al 0x20
je r-xdata
mov esi [ ebp + 0x8 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
cmp ecx 0xffffffff
ja r-xdata
cmp ax 0x30
jl r-xdata
mov ecx 0x5
mov [ esi + 0x8 ] cx
mov [ esi ] 0x0
mov edi [ edi ]
push edi
call sub_413190
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
push eax
call sub_4431ad
sub_403311
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_403350
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ esi + 0x4 ] 0x0
mov [ eax ] cx
retn
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor ecx ecx
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
add esp 0x4
mov [ eax ] cx
retn
sub_4033c0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x2cac
call sub_422240
mov eax [ rw-data ]
push ebx
inc eax
push esi
push edi
mov [ rw-data ] eax
cmp eax 0x30
jge r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push r--data
push ecx
push edx
push eax
call sub_454014
dec [ rw-data ]
xor al al
jmp r-xdata
mov edi [ ebp + 0xc ]
mov bl 0x1
lea eax [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x11 ] 0x1
mov [ esp + 0x13 ] bl
mov [ esp + 0x12 ] 0x0
call sub_40da60
lea esi [ esp + 0x18 ]
call sub_401b10
push esi
mov eax 0x2000
lea ecx [ esp + 0x2c ]
call sub_40de40
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x18 ]
call sub_402250
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push eax
push ecx
push edx
call sub_454014
lea eax [ esp + 0x28 ]
push eax
call sub_443fdf
dec [ rw-data ]
xor al al
jmp r-xdata
lea ecx [ esp + 0x698 ]
push ecx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
lea edx [ esp + 0x6c ]
push edx
lea eax [ esp + 0x74 ]
push eax
push 0x104
push edi
call [ GetFullPathNameW@IAT ]
lea ecx [ esp + 0x28a8 ]
push ecx
lea edx [ esp + 0x2ab4 ]
push edx
lea eax [ esp + 0x498 ]
push eax
lea ecx [ esp + 0x70 ]
push ecx
lea edx [ esp + 0x80 ]
push edx
call sub_413a0e
add esp 0x14
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x284 ]
push ecx
call sub_411567
lea edx [ esp + 0x498 ]
push edx
lea eax [ esp + 0x28c ]
push eax
call sub_411536
add esp 0x10
lea ecx [ esp + 0x280 ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
xor ebx ebx
jmp r-xdata
xor edx edx
lea esi [ esp + 0x40 ]
mov [ esp + 0x8a8 ] dx
call sub_403350
mov al [ esp + 0x54 ]
test al 0x3
jne r-xdata
lea esi [ esp + 0x28 ]
call sub_40da20
lea eax [ esp + 0x698 ]
push eax
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
call [ SetCurrentDirectoryW@IAT ]
call sub_40da20
lea ecx [ esp + 0x40 ]
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
call sub_402250
call sub_40da20
mov ecx [ esp + 0x2c ]
push ecx
call sub_4111dc
mov al [ esp + 0x15 ]
add esp 0x4
dec [ rw-data ]
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_45f6bb
xor ebx ebx
jmp r-xdata
test al 0x4
jne r-xdata
test al al
je r-xdata
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_468961
xor ebx ebx
jmp r-xdata
xor ebx ebx
push 0x10
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] 0x10
call sub_4115d7
add esp 0x4
push 0x4
mov [ esp + 0x1c ] eax
mov [ eax ] bl
call sub_4115d7
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ esp + 0x44 ]
cmp eax 0xffe
ja r-xdata
mov [ esp + 0x24 ] ebx
jmp r-xdata
mov [ eax ] 0x1
mov [ esp + 0x24 ] eax
lea esi [ eax - 0xffe ]
lea eax [ esp + 0x40 ]
call sub_4026f0
mov ecx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
sub ecx esi
lea edx [ ecx + ecx - 0x1ffa ]
push edx
lea ecx [ eax + esi * 2 + 0x1ffc ]
push ecx
add eax 0x1ffc
push eax
call sub_410e60
add esp 0xc
sub [ esp + 0x44 ] esi
jmp r-xdata
mov edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x8ac ]
push eax
call sub_411567
inc [ esp + 0x1c ]
add esp 0x8
xor esi esi
xor edi edi
lea edi [ esp + 0x18 ]
lea eax [ esp + 0x28 ]
call sub_4037a0
test al al
je r-xdata
lea esi [ esp + 0x18 ]
call sub_401350
xor al al
jmp r-xdata
lea edx [ esp + 0x40 ]
push edx
push edi
call sub_403af0
mov esi [ esp + 0x24 ]
dec [ esi ]
jne r-xdata
cmp [ esp + esi * 2 + 0x8a8 ] di
je r-xdata
push ebx
call sub_413225
add esp 0x4
test eax eax
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x18 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
xor edx edx
lea eax [ esp + 0x8a8 ]
mov [ esp + edi * 2 + 0x8a8 ] dx
call sub_4039a0
test al al
je r-xdata
mov cx [ esp + esi * 2 + 0x8a8 ]
mov [ esp + edi * 2 + 0x8a8 ] cx
inc esi
inc edi
cmp [ esp + esi * 2 + 0x8a8 ] 0x0
jne r-xdata
inc esi
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ ebp + 0x14 ]
lea edx [ esp + 0x8a8 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push eax
push ecx
push edx
call sub_454014
mov [ esp + 0x11 ] 0x0
lea eax [ esp + 0x8a8 ]
push eax
call sub_4111c1
add esp 0x4
test eax eax
je r-xdata
movzx ebx [ esp + esi * 2 + 0x8a8 ]
push ebx
call sub_41324e
add esp 0x4
test eax eax
je r-xdata
lea edx [ esp + 0x8a8 ]
push edx
mov [ esp + 0x14 ] 0x0
call sub_4111c1
add esp 0x4
cmp eax 0x2
jle r-xdata
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
cmp [ esp + 0x12 ] 0x1
je r-xdata
mov esi eax
mov ax [ esp + esi * 2 + 0x8a4 ]
and ax 0x7f
movzx ecx ax
push ecx
call sub_413225
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
mov [ esp + esi * 2 + 0x8aa ] cx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x8a8 ]
push eax
push ecx
call sub_434963
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x78 ]
push ecx
lea edx [ esp + 0x8b4 ]
push edx
mov ecx esi
call sub_403a20
cmp eax 0x3
jne r-xdata
cmp [ esp + esi * 2 + 0x8a6 ] 0x5f
jne r-xdata
movzx edi [ esp + esi * 2 + 0x8a8 ]
push edi
call sub_41324e
add esp 0x4
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x1
je r-xdata
sub eax 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
lea ebx [ esp + 0x8b0 ]
call sub_403a50
jmp r-xdata
push edi
call sub_413225
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + 0x12 ] 0x1
jmp r-xdata
mov [ esp + 0x12 ] 0x0
mov [ esp + 0x11 ] 0x0
jmp r-xdata
sub eax 0x2
je r-xdata
lea esi [ esp + esi * 2 + 0x8a6 ]
xor edx edx
mov [ esi ] dx
mov [ esp + 0x10 ] 0x1
jmp r-xdata
dec esi
jns r-xdata
cmp [ esp + 0x11 ] 0x1
jne r-xdata
mov bl [ esp + 0x13 ]
jmp r-xdata
sub eax 0x2
jne r-xdata
jmp r-xdata
cmp bl 0x1
jne r-xdata
mov [ esp + 0x13 ] al
jmp r-xdata
sub_4037a0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi eax
mov eax [ edi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push edi
call sub_434a13
push 0x10
mov [ edi + 0x8 ] 0x10
call sub_4115d7
add esp 0x4
mov [ edi ] eax
jmp r-xdata
mov eax [ edi ]
mov [ edi + 0x4 ] 0x0
mov [ eax ] 0x0
mov [ ebp - 0x2 ] 0x0
push esi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_443df9
jmp r-xdata
xor ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push 0x0
lea edx [ ebp - 0xc ]
push edx
push 0x10000
push eax
push ecx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ esi + 0x4 ]
mov cl [ eax + edx ]
mov [ ebp + ebx - 0x1 ] cl
inc ebx
inc eax
mov [ esi + 0xc ] eax
cmp ebx 0x1
jb r-xdata
xor ecx ecx
mov eax [ ebp - 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x8 ]
je r-xdata
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov bl [ ebp - 0x1 ]
cmp bl 0xd
je r-xdata
add [ esi + 0x10 ] ebx
adc [ esi + 0x14 ] ecx
cmp ebx ecx
je r-xdata
jmp r-xdata
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1 ]
push edx
mov ebx 0x1
call sub_403910
test eax eax
je r-xdata
cmp bl 0xa
je r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x1
mov [ ebp - 0x2 ] 0x1
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
call sub_40df90
jmp r-xdata
dec [ eax ]
push edi
call sub_434a13
mov edx [ edi + 0x4 ]
add edx 0x2
push edx
call sub_444dd6
push eax
mov [ edi + 0x8 ] eax
call sub_4115d7
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
inc ecx
push ecx
push edx
push eax
mov [ ebp - 0x8 ] eax
call sub_410e60
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
add eax 0x2
cmp [ edi + 0x8 ] eax
jb r-xdata
add esp 0x10
cmp eax 0x41c2
jae r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov [ ecx + edx ] bl
inc [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax + ecx ] 0x0
jmp r-xdata
cmp eax 0x2000000
jae r-xdata
lea edx [ eax + eax ]
mov [ edi + 0x8 ] edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
mov eax 0x10
jmp r-xdata
add eax 0xf
and eax 0xfffffff0
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
fmul [ r--data ]
fnstcw [ ebp - 0x6 ]
movzx eax [ ebp - 0x6 ]
or eax 0xc00
mov [ ebp - 0x10 ] eax
fldcw [ ebp - 0x10 ]
fistp [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ edi + 0x8 ] eax
fldcw [ ebp - 0x6 ]
jmp r-xdata
fadd [ r--data ]
push eax
mov [ edi + 0x8 ] eax
call sub_4115d7
mov ecx [ edi ]
add esp 0x4
test ecx ecx
je r-xdata
mov [ edi ] eax
jmp r-xdata
mov edx [ edi + 0x4 ]
inc edx
push edx
push ecx
push eax
mov [ ebp - 0x10 ] eax
call sub_410e60
mov eax [ edi ]
push eax
call sub_4111dc
mov eax [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x6 ]
movzx eax [ ebp - 0x6 ]
or eax 0xc00
mov [ ebp - 0x10 ] eax
fldcw [ ebp - 0x10 ]
fistp [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ edi + 0x8 ] eax
fldcw [ ebp - 0x6 ]
jmp r-xdata
fadd [ r--data ]
fmul [ r--data ]
fnstcw [ ebp - 0x6 ]
movzx eax [ ebp - 0x6 ]
or eax 0xc00
mov [ ebp - 0x10 ] eax
fldcw [ ebp - 0x10 ]
fistp [ ebp - 0x14 ]
mov edx [ ebp - 0x14 ]
mov [ edi + 0x8 ] edx
fldcw [ ebp - 0x6 ]
jmp r-xdata
fadd [ r--data ]
mov eax [ edi + 0x8 ]
cmp eax ecx
je r-xdata
sub_403910
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
push esi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_40e050
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
jmp r-xdata
push edi
xor edi edi
test ebx ebx
je r-xdata
add [ esi + 0x10 ] edi
mov eax edi
pop edi
adc [ esi + 0x14 ] 0x0
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x10000
push edx
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0xc ]
mov al [ ecx + edx ]
mov ecx [ ebp + 0x8 ]
mov [ edi + ecx ] al
inc [ esi + 0xc ]
inc edi
cmp edi ebx
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x0
jmp r-xdata
sub_4039a0
push esi
mov esi eax
test esi esi
je r-xdata
xor al al
pop esi
retn
push edi
xor edi edi
cmp [ esi ] 0x23
je r-xdata
push 0x8
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edi 0x3
add esi 0x2
jmp r-xdata
test edi edi
jne r-xdata
mov edi edi
cmp edi 0x3
je r-xdata
pop edi
mov al 0x1
pop esi
retn
cmp eax 0x22
je r-xdata
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
retn
cmp edi 0x2
jne r-xdata
cmp eax 0x27
je r-xdata
movzx eax [ esi ]
cmp eax 0x3b
jle r-xdata
test edi edi
jne r-xdata
xor edi edi
jmp r-xdata
cmp edi 0x1
jne r-xdata
cmp eax 0x3b
jne r-xdata
mov edi 0x2
jmp r-xdata
test edi edi
jne r-xdata
xor edi edi
jmp r-xdata
test edi edi
jne r-xdata
mov edi 0x1
jmp r-xdata
cmp edi 0x3
je r-xdata
xor eax eax
mov [ esi ] ax
pop edi
mov al 0x1
pop esi
retn
jmp r-xdata
sub_403a20
push ebp
mov ebp esp
mov eax 0x2004
call sub_422240
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x23
push edi
je r-xdata
push 0xb
push r--data
push esi
mov ebx ecx
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x3
push 0xd
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx ] 0x1
push 0xd
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x1 ] 0x1
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x16
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x2 ] 0x1
mov eax 0x1
jmp r-xdata
push 0xd
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
lea edi [ esi + 0x2c ]
call sub_410160
mov esi eax
push esi
call sub_444b5f
push esi
call sub_444bbb
push esi
call sub_4111c1
add esp 0x4
cmp [ esi + eax * 2 - 0x2 ] 0x22
jne r-xdata
push 0x8
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebx + 0x20 ] eax
jbe r-xdata
push esi
xor ecx ecx
lea edi [ esi + 0x2 ]
push edi
mov [ esi + eax * 2 - 0x2 ] cx
call sub_444b5f
push edi
call sub_444bbb
push edi
jmp r-xdata
push 0xf
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x2000 ]
push eax
lea ecx [ esi + 0x10 ]
push ecx
push ebx
call sub_444bfc
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp al 0x1
mov eax [ edx ]
jne r-xdata
mov eax 0x1
jmp r-xdata
xor esi esi
mov ebx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
mov ecx ebx
call eax
push esi
call sub_4111dc
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ ebp + 0x8 ] 0x1
push 0x3
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
push esi
push r--data
push eax
push ecx
push ebx
call sub_454014
xor eax eax
jmp r-xdata
push eax
push esi
push ecx
lea edx [ ebp - 0x2000 ]
call sub_410190
push eax
lea edx [ ebp - 0x2000 ]
push edx
push ebx
call sub_4033c0
xor ecx ecx
test al al
setne cl
mov eax ecx
jmp r-xdata
mov ecx [ ebx + 0x2c ]
mov edx [ ecx + esi * 4 ]
xor eax eax
cmp [ edx ] 0x1
setle al
dec eax
and eax 0x3
inc eax
jmp r-xdata
inc esi
cmp esi [ ebx + 0x20 ]
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
inc [ edi ]
push esi
call sub_444bbb
push esi
call sub_444b5f
push 0xf
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebx + 0x1c ]
mov eax [ ecx + esi * 4 ]
mov edx [ ebp + 0xc ]
mov eax [ eax ]
push edx
push eax
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0xc ]
push esi
push r--data
push eax
push ecx
push ebx
call sub_454014
xor eax eax
jmp r-xdata
inc [ ebp + 0x8 ]
jmp r-xdata
push 0x3
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
push esi
push edx
call sub_46fd6c
test al al
je r-xdata
push 0xd
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp + 0x8 ] eax
test eax eax
jg r-xdata
push 0x3
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
sub_403a50
push ebp
mov ebp esp
cmp [ esi + 0x8 ] 0x0
je r-xdata
push 0x10
call sub_4115d7
add esp 0x4
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0xc ]
push edi
push ebx
mov [ edx + 0xc ] 0x0
call sub_4111c1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
push ebx
push edi
call sub_411567
mov eax [ esi + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ eax ] edi
mov ecx [ esi + 0xc ]
mov [ ecx + 0x4 ] edx
mov eax [ esi + 0xc ]
mov ecx [ ebp + 0xc ]
add esp 0x10
mov [ eax + 0x8 ] ecx
inc [ esi + 0x10 ]
pop edi
pop ebp
retn 0x8
push eax
call sub_4111dc
add esp 0x4
dec [ esi + 0x10 ]
jmp r-xdata
push 0x10
call sub_4115d7
mov ecx [ esi + 0xc ]
mov [ ecx + 0xc ] eax
add esp 0x4
mov [ esi + 0xc ] eax
sub_403af0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
inc edi
push edi
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_403350
jmp r-xdata
xor ecx ecx
mov esi eax
mov edx 0x2
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push edi
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push 0x0
call sub_403b70
push ebx
call sub_4111dc
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
sub_403b70
push ebp
mov ebp esp
push esi
push edi
mov edi eax
mov esi ecx
test edi edi
je r-xdata
push 0x0
push esi
or eax 0xffffffff
call sub_40c600
pop edi
pop esi
pop ebp
retn 0x4
cmp edi 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
call sub_4013a0
lea eax [ edi + 0x1 ]
push eax
call sub_446618
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov [ esi ] eax
jmp r-xdata
call sub_403bd0
mov eax [ ebp + 0x8 ]
mov edx [ esi ]
mov [ esi + 0x4 ] edi
add edi edi
push edi
lea ecx [ ebx + eax * 2 ]
push ecx
push edx
call sub_410e60
mov eax [ esi ]
add esp 0xc
xor ecx ecx
mov [ edi + eax ] cx
pop edi
pop esi
pop ebp
retn 0x4
sub_403bd0
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
test eax eax
je r-xdata
retn
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor ecx ecx
mov [ esi ] eax
add esp 0x4
mov [ eax + edi * 2 ] cx
retn
push eax
call sub_4111dc
add esp 0x4
sub_403c30
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov ebx [ ebx + 0xc ]
mov [ esi + 0xc ] ebx
inc [ ebx ]
pop esi
pop ebx
retn
push edi
mov edi [ ebx + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_403bd0
mov eax [ esi + 0x4 ]
mov edx [ ebx ]
lea ecx [ eax + eax + 0x2 ]
mov eax [ esi ]
push ecx
push edx
push eax
call sub_410e60
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_403c90
push ebp
mov ebp esp
push esi
mov esi eax
lea eax [ esi + 0x4 ]
call sub_403cc0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
lea eax [ esi + 0x4 ]
call sub_403cc0
mov dl [ ebp + 0xc ]
mov [ eax + 0x18 ] dl
pop esi
pop ebp
retn 0x8
sub_403cd0
push ebp
mov ebp esp
push esi
push edi
mov edi eax
lea eax [ edi + 0x4 ]
call sub_403cc0
lea esi [ eax + 0x20 ]
call sub_408f40
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x8 ] 0x1
call sub_403cc0
mov cl [ ebp + 0xc ]
pop edi
mov [ eax + 0x30 ] cl
pop esi
pop ebp
retn 0x8
sub_403d10
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
add eax edi
call sub_403c90
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x0
add eax edi
call sub_403cd0
mov edx [ ebp + 0x8 ]
push edx
lea eax [ edi + 0x47c ]
push eax
call sub_404170
mov ecx [ ebp + 0xc ]
mov ebx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x14 ]
push esi
push ecx
mov ecx [ edi ]
mov ecx [ ecx + eax ]
add ecx ebx
add ecx edi
call edx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_403da0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x0
mov eax esi
pop ebp
retn 0x4
push edi
lea eax [ ebp + 0x8 ]
push eax
push esi
call sub_403ea0
mov edi [ ebp + 0x8 ]
mov ecx edi
mov eax esi
call sub_40bcc0
test eax eax
js r-xdata
mov ecx [ edi + 0x18 ]
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] ecx
mov [ edi + 0x18 ] 0x0
mov eax esi
pop edi
pop ebp
retn 0x4
jle r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
mov edx [ edi + 0x1c ]
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edx
mov [ edi + 0x1c ] 0x0
mov eax esi
pop edi
pop ebp
retn 0x4
sub_403e10
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
push ebx
call sub_403ea0
test al al
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
and [ ebp + 0xc ] 0xff00
push esi
push 0x20
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ eax + 0x14 ]
push ecx
call sub_408e80
pop ebx
pop ebp
retn 0x8
xor esi esi
jmp r-xdata
mov esi eax
mov ecx esi
call sub_40bc70
cmp esi ebx
je r-xdata
mov edx [ ebp + 0xc ]
push 0x10
mov [ esi + 0x10 ] edx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax ebx
mov ecx esi
call sub_403c30
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_40b960
mov [ esi + 0x14 ] eax
xor eax eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov eax [ edi ]
push eax
call sub_403da0
pop esi
mov [ edi ] eax
pop ebx
pop ebp
retn 0x8
sub_403ea0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebx ] esi
je r-xdata
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ rw-data ] 0x1
mov [ ebp - 0x1 ] 0x0
je r-xdata
or [ rw-data ] 0x1
mov ecx rw-data
call sub_40bc70
push sub_425c12
call sub_41130a
add esp 0x4
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ ebp - 0x10 ] rw-data
mov [ ebp - 0xc ] rw-data
push edi
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
cmp esi ecx
jb r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x1c ] eax
mov edx [ ebx ]
mov eax [ edx + 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x18 ] eax
mov ecx [ ebx ]
mov edx [ rw-data ]
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov [ ecx + 0x1c ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x18 ] edx
cmp esi edx
ja r-xdata
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov esi edx
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ecx + 0x4 ]
cmp edx esi
ja r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ edi ]
mov [ ebp - 0x18 ] edx
mov edx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
xor eax eax
jmp r-xdata
mov ecx [ edi ]
mov eax [ eax ]
mov edi edi
cmp esi edx
jb r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x14 ] esi
mov edx esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] edx
test ecx ecx
js r-xdata
dec [ ebp - 0x14 ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov dx [ edx ]
cmp dx [ ecx ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
jmp r-xdata
mov ecx eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
cmp ax [ ecx ]
mov ebx [ ebp + 0xc ]
sbb eax eax
and eax 0xfffffffe
inc eax
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov edi [ edi + 0x18 ]
mov ecx [ ebx ]
mov edx [ edi + 0x1c ]
mov [ ecx + 0x18 ] edx
mov eax [ ebx ]
mov [ edi + 0x1c ] eax
mov [ ebx ] edi
cmp [ edi + 0x18 ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add eax 0x2
add ecx 0x2
dec [ ebp - 0x14 ]
jne r-xdata
test edx edx
je r-xdata
cmp edx esi
jb r-xdata
mov eax [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x14 ] edx
lea ebx [ ebx ]
jle r-xdata
add [ ebp - 0x8 ] 0x2
mov edx [ ebp - 0x8 ]
add ecx 0x2
jmp r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
mov ebx [ ebp + 0xc ]
mov ecx [ ebx ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ eax + 0x18 ]
mov [ ebx ] eax
jmp r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edx [ ebp - 0x18 ]
mov edi [ edi + 0x1c ]
mov edx [ ebx ]
mov eax [ edi + 0x18 ]
mov [ edx + 0x1c ] eax
mov ecx [ ebx ]
mov [ edi + 0x18 ] ecx
mov [ ebx ] edi
cmp [ edi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add ecx 0x2
add eax 0x2
dec [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
mov dx [ edx ]
cmp dx [ ecx ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov edi [ ebx ]
mov ecx [ edi + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebx ]
mov [ eax + 0x1c ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebx ] ecx
jmp r-xdata
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
mov edx [ ebp - 0x8 ]
sub_404100
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ecx - 0x20 ]
dec edi
js r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ebx ebx
add ecx 0xffffffe0
mov [ ebp - 0x4 ] ecx
jmp r-xdata
lea eax [ edi + ebx ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
push ecx
call sub_404170
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_41313c
add esp 0x8
test eax eax
js r-xdata
lea edi [ esi - 0x1 ]
jle r-xdata
mov ecx [ ebp - 0x4 ]
cmp ebx edi
jg r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx edi
jle r-xdata
sub_404170
push ebp
mov ebp esp
mov ecx [ rw-data ]
test cl 0x1
je r-xdata
mov eax 0x1
or ecx eax
mov [ rw-data ] ecx
mov ecx sub_45a768
mov [ rw-data ] ecx
mov ecx sub_45a8a3
mov [ rw-data ] ecx
mov ecx r-xdata
mov [ rw-data ] ecx
mov ecx sub_45a423
mov [ rw-data ] ecx
push ebx
push esi
xor esi esi
mov ecx sub_45b36a
mov [ rw-data ] ecx
xor edx edx
mov ecx sub_45b33b
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov ecx sub_45a864
mov esi sub_45a8e2
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov ecx sub_4733b7
mov esi sub_465a62
push edi
mov [ rw-data ] ecx
xor edi edi
mov [ rw-data ] esi
mov ecx 0x3
mov esi 0x2
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov edi sub_45a3ac
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45a3fe
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_44a72e
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477145
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46ae3d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46adb6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46ab9c
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45ae74
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45adf3
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45ae22
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov edi sub_45abcf
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45ab6b
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi r-xdata
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45a370
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_44a77d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47f096
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45da73
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45a54c
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45b26a
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45b1d5
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi r-xdata
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0xff
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov ebx sub_47c320
mov [ rw-data ] ebx
xor ebx ebx
xor edi edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] esi
mov ebx sub_47c365
mov [ rw-data ] ebx
xor ebx ebx
mov edi sub_45a10f
mov [ rw-data ] edi
xor edi edi
mov esi sub_46d4fc
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov esi sub_46d4c2
mov ebx sub_47c7dc
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ebx
xor ebx ebx
mov edi sub_46afc3
mov esi sub_47c6d0
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov esi sub_47bd15
mov ebx sub_47a3ee
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ebx
xor ebx ebx
mov esi 0x4
mov edi 0x5
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47b52c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c496
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c5ba
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c296
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47b954
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c3aa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47b588
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c65d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c2db
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47b623
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov ebx sub_45a7e6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47722a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c937
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c8c1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478172
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c51e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c862
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4755ad
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475596
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457655
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x43
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x42
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov ebx sub_4575f1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46f5e2
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4576e0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45774c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474fad
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474d55
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471fac
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457557
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474e7f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478656
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov ebx sub_45d53e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d36d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d448
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d94b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_467215
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4671b9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_467131
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d2c7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d86d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov ebx sub_45d619
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_435d5d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a312
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a2c6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a26c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47354c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4813fa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a960
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c587
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e17d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov ebx sub_45c730
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d1af
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e48d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466faf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c8fc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cafa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_467001
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466f4a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cfb1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e227
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ca50
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x9
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466ec9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47839d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c9a0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45de8f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4788bd
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cc7a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e1a6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c5c0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_467897
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46787c
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46f993
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46fba4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d11d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d0d9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_467861
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45dc4c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cd1e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466e47
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45df23
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e91c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ecx
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e933
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a5aa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b49e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4737e5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e9d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e6f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e58
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e41
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e2a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e13
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479c30
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479de5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479dce
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479db7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479da0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479d89
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479e86
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479d72
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479d5b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479d44
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479d2d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479d16
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479dfc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479c19
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479cff
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479ce8
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479cba
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479cd1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479ca3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479c8c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479c75
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479c5e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479c47
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bedf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ba01
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b9ce
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b80a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_477a44
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466a9a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b641
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4736c6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466c20
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466c7a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bd91
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bc8a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c1c4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c218
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bdcf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bb27
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov ebx sub_473739
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bc38
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466cd4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ba9c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ba54
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bd53
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b97b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b89d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b606
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_477927
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov ebx sub_477f72
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466b71
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_477749
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c26c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b775
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c09c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bf7a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c105
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c158
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ebx sub_466d83
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c2be
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bf17
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bd04
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c317
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47b359
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46d536
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b4b7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b445
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45af70
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov ebx sub_45b4d0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e042
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_477328
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46df7c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_477638
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e332
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e4a5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478f9a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478b47
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c3c1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov ebx sub_45e413
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478d00
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46d85a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_477167
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459add
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b1a3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b13f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45893c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458b67
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4575bf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov ebx sub_45b036
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45af26
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b0b7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458b35
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b004
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45861f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45aec6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b171
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a921
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_476ca4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a647
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459d36
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459c06
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459b41
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458eab
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_476d8d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_44a7bc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459b06
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459b7c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458bc9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479b09
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46f8cb
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46c5fa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475cf6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46cef3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4580c4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46596a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4658b5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_465a62
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_465489
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459fc0
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459ef1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_476e95
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4574f6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_463a6d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464eae
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457e3f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4757a7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4755c4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457ad9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_48136b
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_48127d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4594bd
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4594d3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459407
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45aef8
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a99f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46b6ab
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46b4cf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46b280
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46beb2
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46b9d7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_40c6e0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464e95
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464e7c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4811c5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_481221
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_465847
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479eb4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_473636
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4735f4
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457e22
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_481167
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457be5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a7a7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_40d3b0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458e32
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459a94
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459a7e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459aaa
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a608
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_44a816
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47e0f9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46f59a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46ae76
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457451
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46f5be
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45afe3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457096
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457368
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46a6e1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4744d3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4571e4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456d84
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456de7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456b2a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456d1f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456c57
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x21
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456b8f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456bf4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456cba
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4636fa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4573de
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457190
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4635f5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47d79b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46f46d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4632bc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov edi sub_463690
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_474837
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4570fc
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4630c5
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_47469a
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi r-xdata
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_463583
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_463514
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_45713e
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45a825
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_458a61
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4589fe
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4653c8
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_4652be
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46d402
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46d230
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46d1a6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_45896e
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4589ac
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov edi sub_40cbd0
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_40d220
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4565b2
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46a6ca
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46a6b3
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_456aa6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_462f90
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_456a5a
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_456a0d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45699f
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46a604
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_462f4d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_462f0c
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_44a357
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_462e96
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46a533
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_456929
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46a5df
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_462dfd
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_458d56
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov edi sub_459001
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_476619
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_4763ca
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4764d1
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47679f
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_476b17
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_45896e
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4589ac
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4587e8
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47b0f7
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] eax
mov edi sub_47b226
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47add6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47b1db
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_479f2f
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47438b
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a5ff
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a515
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a4a5
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a8b6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a00c
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov edi sub_47a330
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47abd3
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47ac6d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47ad67
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a09f
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47a66e
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_441c20
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_441be8
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47ae43
mov [ rw-data ] esi
mov esi sub_47a9cd
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] 0x9
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] 0x7
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov esi sub_47b042
mov [ rw-data ] esi
mov esi sub_47acf9
mov [ rw-data ] esi
mov esi sub_47a26a
mov [ rw-data ] esi
mov esi sub_4815c3
mov [ rw-data ] esi
mov esi sub_48156a
mov [ rw-data ] esi
mov esi sub_4814b8
mov [ rw-data ] esi
mov esi sub_481511
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
pop esi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
pop ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x18e
or ecx 0x2
lea eax [ edx + edx * 8 ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x18e
lea eax [ eax * 4 + rw-data ]
pop ebp
retn 0x8
lea eax [ edx + edx * 8 ]
lea eax [ eax * 4 + rw-data ]
pop ebp
retn 0x8
sub_408cc0
push ebp
mov ebp esp
sub esp 0x1c
xor ecx ecx
push esi
mov esi [ edx + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov [ ebp - 0x1c ] r--data
mov ecx [ esi + ecx * 4 ]
mov esi [ ecx ]
movsx ecx [ ecx + 0xa ]
push edi
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x8 ]
push ecx
push edx
push ebx
lea edi [ ebp - 0x1c ]
call sub_408d90
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_410c60
mov eax 0x1
jmp r-xdata
push esi
lea edi [ ebx + 0x47c ]
push edi
call sub_404170
mov edx [ ebp - 0x8 ]
cmp edx [ eax + 0x18 ]
jl r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
push eax
push 0x70
push ebx
call sub_45e737
push esi
push edi
call sub_404170
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x1c ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
push esi
mov ecx ebx
call sub_403d10
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] r--data
cmp [ ebp - 0x14 ] eax
jbe r-xdata
mov edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x14 ] 0x0
call sub_4111dc
add esp 0x4
xor eax eax
xor edi edi
inc edi
cmp edi [ ebp - 0x14 ]
jb r-xdata
call sub_408f40
push esi
call sub_4111dc
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov esi [ ecx + edi * 4 ]
test esi esi
je r-xdata
sub_408d90
push ebp
mov ebp esp
inc [ eax ]
mov ecx [ eax ]
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0xc ]
mov edx [ esi + 0x4 ]
mov ebx [ edx + ecx * 4 ]
cmp [ ebx + 0x8 ] 0x47
lea edx [ edx + ecx * 4 ]
jne r-xdata
mov eax [ edx - 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x6f
push edx
call sub_45e737
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0xc ]
push ecx
push edx
lea edx [ ebp - 0x8 ]
call sub_40bec0
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ ebp - 0x8 ] ebx
jae r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov esi edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] eax
call sub_40ba10
mov ecx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
lea edx [ ebp - 0x8 ]
push edx
push esi
call sub_40a780
test eax eax
jne r-xdata
lea esi [ ebp - 0x1c ]
call sub_408f40
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
mov eax [ ebp - 0x8 ]
cmp eax ebx
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_408f40
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x6f
push ecx
call sub_45e737
lea ecx [ eax + 0x1 ]
cmp ecx ebx
je r-xdata
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
call sub_408f40
cmp [ ebp - 0x8 ] ebx
jb r-xdata
xor eax eax
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408e80
push ebp
mov ebp esp
cmp ebx [ ebp + 0x8 ]
je r-xdata
mov eax ebx
pop ebp
retn 0x4
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ebx
call sub_408f40
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ edi ]
mov [ ebx ] edx
pop edi
pop esi
jmp [ eax * 4 + r-xdata ]
fld [ edi ]
pop edi
fstp [ ebx ]
pop esi
mov eax ebx
pop ebp
retn 0x4
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebx ] eax
mov ecx [ edi + 0x4 ]
mov [ ebx + 0x4 ] ecx
jmp r-xdata
mov eax [ edi ]
mov [ ebx ] eax
jmp r-xdata
mov ecx [ edi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov al [ edi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop edi
mov [ ebx + 0xc ] eax
pop esi
mov eax ebx
pop ebp
retn 0x4
mov edi [ edi + 0xc ]
mov edx [ edi ]
mov [ eax ] edx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edi [ edi + 0xc ]
mov [ eax + 0xc ] edi
inc [ edi ]
pop edi
mov [ ebx + 0xc ] eax
pop esi
mov eax ebx
pop ebp
retn 0x4
xor eax eax
mov esi [ edi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410e60
add esp 0x10
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
sub_408f40
push edi
mov edi [ esi + 0xc ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
pop edi
cmp eax 0x8
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
push edx
call sub_4111dc
add esp 0x8
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ esi ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
retn
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esi ]
push eax
call sub_4111dc
add esp 0x8
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_408fc0
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ eax ]
mov eax [ ecx ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax + 0xc ]
mov [ ebp - 0x1c ] edx
mov edx [ eax + 0x8 ]
inc [ edi ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edi
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push rw-data
mov [ ebp - 0xc ] ebx
call sub_432929
push eax
call sub_4534e3
mov ebx [ ebp - 0xc ]
test eax eax
jne r-xdata
push rw-data
lea edx [ ebp - 0x1c ]
push edx
call sub_403ea0
test al al
je r-xdata
xor edx edx
mov [ ebp - 0xc ] eax
cmp eax edx
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
test ebx 0x100
jne r-xdata
mov ebx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
and ebx 0xff00
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx ebx [ eax + 0x8 ]
cmp ebx 0x41
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xa3
push eax
call sub_45e737
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
mov ebx [ esi + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ ebx + ecx * 4 ]
cmp [ ebx + 0x8 ] 0x4e
je r-xdata
cmp ebx 0x52
je r-xdata
inc ecx
push 0xffffffff
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] edx
call sub_40a780
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0x8 ] 0x5
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movzx eax [ eax + 0x8 ]
mov ebx [ ebp - 0xc ]
cmp ax 0x35
je r-xdata
jmp r-xdata
lea esi [ ebp - 0x2c ]
call sub_408f40
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ ebx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x7c
push ecx
call sub_45e737
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edx
lea eax [ ebp - 0x8 ]
mov ecx esi
call sub_40c4e0
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x8
je r-xdata
cmp [ ebx + 0x8 ] 0x8
je r-xdata
cmp ebx 0x53
je r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x72
push ecx
jmp r-xdata
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
cmp ax 0x35
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x1
push r--data
push edx
push 0xa9
push edi
call sub_451b42
test eax eax
je r-xdata
cmp ebx 0x54
je r-xdata
call sub_45e737
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xff ] 0x0
jne r-xdata
cmp ebx 0x41
jne r-xdata
mov edi [ ebp + 0x8 ]
push ebx
lea edx [ ebp - 0x8 ]
push edx
push esi
push edi
call sub_47faae
test eax eax
je r-xdata
cmp ax 0x47
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xa9
push edi
call sub_45e737
cmp ebx 0x55
je r-xdata
mov edx [ ecx ]
movsx ecx [ edx + 0xa ]
push ecx
push 0x79
push eax
cmp ebx 0x41
jne r-xdata
lea eax [ ebx - 0x52 ]
cmp eax 0x4
ja r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov ebx esi
call sub_408e80
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xaa
push edi
call sub_45e737
cmp ebx 0x56
je r-xdata
cmp [ rw-data ] 0x0
push 0x0
jne r-xdata
lea esi [ ebp - 0x2c ]
call sub_408f40
dec [ edi ]
je r-xdata
jmp [ eax * 4 + jump_table_409190 ]
mov edx [ ebp - 0x1c ]
push edx
call sub_4111dc
add esp 0x4
push edi
call sub_4111dc
add esp 0x4
jmp r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x80
push edx
call sub_45e737
lea ecx [ ebp - 0x1c ]
call sub_402250
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push rw-data
call sub_432929
mov edi eax
jmp r-xdata
lea edx [ ebp - 0x2c ]
push edx
mov edi rw-data
push esi
lea eax [ ebp - 0x2c ]
call sub_40b510
jmp r-xdata
lea edx [ ebp - 0x2c ]
push edx
push esi
call sub_452f37
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax esi
call sub_40bb00
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40bb80
jmp r-xdata
lea edi [ ebp - 0x2c ]
call sub_40bd20
mov edi [ ebp - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_403e10
lea esi [ ebp - 0x2c ]
call sub_408f40
mov esi [ ebp - 0x10 ]
dec [ esi ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
sub_4091b0
push ebp
mov ebp esp
sub esp 0x78
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x480 ] 0x1
je r-xdata
xor al al
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x54 ] r--data
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x38 ] 0x0
call sub_40bc70
mov ebx [ InterlockedIncrement@IAT ]
push rw-data
call ebx
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] eax
je r-xdata
mov edi 0x2
push rw-data
call [ InterlockedDecrement@IAT ]
lea ecx [ ebp - 0x74 ]
call sub_402250
lea esi [ ebp - 0x44 ]
call sub_408f40
lea ecx [ ebp - 0x54 ]
call sub_410c60
jmp r-xdata
and eax 0x3f
shl eax 0x4
lea edi [ eax + rw-data ]
push edi
call sub_431dc9
test al al
jne r-xdata
cmp eax 0x1
je r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
push 0xa
call [ Sleep@IAT ]
push rw-data
call ebx
mov eax [ rw-data ]
dec edi
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x20 ] edi
call sub_408e80
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
mov ebx eax
lea eax [ ebp - 0x74 ]
call sub_402160
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_45340c
mov edi eax
lea eax [ ebp - 0x74 ]
call sub_40d200
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
push ecx
push esi
call sub_465124
test al al
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
mov [ esi + 0x480 ] 0x1
mov edi r--data
lea esi [ ebp - 0x64 ]
call sub_401b10
lea eax [ ebp - 0x44 ]
push eax
call sub_432508
mov edx eax
mov eax 0x2
lea ecx [ eax - 0x1 ]
call sub_401980
mov ecx esi
call sub_402250
mov eax [ ebp - 0x1c ]
call sub_40f410
cmp [ ebp - 0x10 ] 0x0
mov esi eax
mov [ ebp - 0xc ] esi
jle r-xdata
mov edx [ rw-data ]
and edx 0x3f
shl edx 0x4
add edx rw-data
push edx
call sub_46fe32
inc [ rw-data ]
mov edx [ rw-data ]
and edx 0x3f
shl edx 0x4
add edx rw-data
push edx
call sub_46fe32
mov edi 0x1
add [ rw-data ] edi
push rw-data
call [ InterlockedDecrement@IAT ]
mov eax [ ebp - 0x1c ]
push eax
call sub_46ff07
cmp [ ebp - 0x10 ] edi
jl r-xdata
mov ebx 0x3
mov edi ebx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
inc eax
push eax
push ebx
call sub_47d33e
push rw-data
call sub_46feb1
mov edi r--data
lea esi [ ebp - 0x64 ]
call sub_401b10
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
mov ecx 0x2
call sub_40c2c0
mov ecx esi
call sub_402250
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea ebx [ edi + 0xb ]
mov [ ebp - 0x8 ] 0x18
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp ebx [ ecx + 0x8 ]
jae r-xdata
mov [ ebx + 0x480 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_432416
test al al
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ ebp - 0x14 ]
jle r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + edi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ebx + ecx ]
mov edx [ ebp - 0x18 ]
mov edx [ edx ]
mov esi [ esi ]
mov eax 0x1
xor ecx ecx
call sub_401980
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x26 ] ax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x64 ] r--data
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x58 ] 0x0
mov ecx [ ebx + eax + 0x4 ]
or edx 0xffffffff
cmp [ ecx + 0x8 ] 0x41
mov [ ebp - 0x28 ] dx
jne r-xdata
mov edx [ esi + edi * 4 + 0x4 ]
inc edi
cmp [ edx + 0x8 ] 0x41
jne r-xdata
cmp [ eax ] 0x1e
jne r-xdata
jmp r-xdata
mov eax 0x8
mov edx [ ebx + eax + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
lea esi [ ebp - 0x44 ]
call sub_408f40
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x44 ] 0x0
mov eax [ ebx + eax + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + ebx * 4 ]
push eax
lea esi [ ebp - 0x54 ]
call sub_40ba10
mov eax [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
add edi 0x2
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x91
push ecx
call sub_45e737
jmp r-xdata
mov eax [ esi + edi * 4 + 0x4 ]
inc edi
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x40 ] 0x0
add [ ebp - 0x18 ] 0x4
mov esi [ ebp - 0xc ]
mov eax 0x14
jmp r-xdata
cmp ax 0x49
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
cmp [ ecx + 0x8 ] 0x41
jne r-xdata
lea edi [ ebp - 0x64 ]
call sub_402780
mov edx [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + edx ]
cmp cx 0x49
jne r-xdata
inc ebx
inc edi
lea ecx [ ebp - 0x74 ]
call sub_402250
lea esi [ ebp - 0x44 ]
call sub_408f40
lea ecx [ ebp - 0x54 ]
call sub_410c60
mov al 0x1
jmp r-xdata
add [ ebp - 0x8 ] eax
inc edi
add ebx eax
cmp edi [ ebp - 0x10 ]
jle r-xdata
mov eax 0x10
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov esi [ ebx + edx ]
mov esi [ esi ]
mov eax 0x1
xor ecx ecx
lea edx [ ebp - 0x44 ]
call sub_401980
lea eax [ ebp - 0x30 ]
push eax
call sub_44b469
lea ecx [ ebp - 0x64 ]
call sub_40edc0
jmp r-xdata
lea edi [ ebp - 0x64 ]
call sub_402780
mov edi 0x7f
lea esi [ ebp - 0x30 ]
call sub_402710
mov eax esi
lea edi [ ebp - 0x64 ]
call sub_402780
push 0xffffffff
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x24 ]
push edx
push edi
call sub_40a780
mov edi [ ebp - 0x20 ]
jmp r-xdata
sub_4091e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14c
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0xec ]
cmp eax 0xf3c
jge r-xdata
push 0xffffffff
push 0x9a
push edi
mov [ rw-data ] 0x0
call sub_45e737
mov eax 0x1
jmp r-xdata
inc eax
mov [ esp + 0x24 ] edi
mov [ edi + 0xec ] eax
cmp eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi edi
call sub_410940
jmp r-xdata
cmp [ edi + 0xfc ] 0x0
mov [ edi + 0x144 ] 0x0
jne r-xdata
mov eax [ edi + 0xec ]
mov [ edi + 0x144 ] 0x0
cmp eax 0x1
je r-xdata
lea ebx [ ebx ]
mov esi edi
call sub_40f190
cmp [ edi + 0xfc ] 0x1
je r-xdata
dec eax
mov [ edi + 0xec ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov ebx edi
call sub_401a50
push 0x0
call [ LockWindowUpdate@IAT ]
mov edx [ rw-data ]
push edx
call [ DestroyWindow@IAT ]
mov esi [ GetMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x148 ]
push eax
call esi
test eax eax
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ eax ]
call sub_431d7f
mov eax [ edi + 0x1b0 ]
xor esi esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
cmp [ edi + 0xf8 ] 0x0
je r-xdata
mov esi [ PeekMessageW@IAT ]
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x78 ]
push eax
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x13c ]
push ecx
call [ TranslateMessage@IAT ]
lea edx [ esp + 0x13c ]
push edx
call [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x148 ]
push eax
call esi
test eax eax
jg r-xdata
cmp esi eax
je r-xdata
mov ecx [ edi + 0x1ac ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ edi + 0x460 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ esp + 0x6c ] 0x12
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
lea eax [ esp + 0xd4 ]
push eax
lea ecx [ esp + 0xfc ]
push ecx
mov ecx [ edi + 0x1ac ]
lea edx [ esp + 0xf4 ]
push edx
mov edx [ ecx + esi * 4 ]
lea eax [ esp + 0x6c ]
push eax
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
push ecx
push edi
call sub_465124
mov edx [ edi + 0x1ac ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov ebx [ esp + 0x60 ]
add ecx 0x18
inc ebx
push ecx
lea esi [ edi + 0x14c ]
mov [ esp + 0x64 ] ebx
call sub_40e0a0
push 0x0
push 0x1
push ebx
push edi
call sub_47d33e
jmp r-xdata
inc esi
add ecx 0x4
cmp esi [ edi + 0x1b0 ]
jb r-xdata
mov edx [ edx ]
cmp [ edx ] ebx
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ edi + 0xfc ] 0x1
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
mov ecx rw-data
call sub_40d150
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
cmp [ edi + 0xf8 ] 0x1
je r-xdata
cmp [ edi + 0xfc ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
mov ebx [ edi + 0x458 ]
mov [ rw-data ] 0x1
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] ebx
cmp [ edi + 0x464 ] 0x1
je r-xdata
push edi
call sub_4091b0
cmp al 0x1
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x78 ]
push edx
call esi
test eax eax
je r-xdata
lea edx [ esp + 0x68 ]
push edx
mov ebx rw-data
call sub_40d170
test eax eax
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x0
call sub_40d410
jmp r-xdata
cmp [ edi + 0x144 ] 0x0
jne r-xdata
mov eax [ edi + 0x458 ]
mov [ esp + 0x14 ] eax
mov eax [ ebx ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ esp + 0x68 ]
push ecx
call [ DispatchMessageW@IAT ]
cmp [ esp + 0x28 ] 0x0
mov [ rw-data ] 0x0
jg r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edx ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_440847
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
mov [ esp + 0x18 ] eax
call sub_40c620
test edx edx
jl r-xdata
lea ecx [ esp + 0x68 ]
push ecx
call sub_44c29d
cmp [ edi + 0x465 ] 0x1
je r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x7
je r-xdata
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea eax [ edi + 0x458 ]
push eax
call sub_4521b3
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_440847
jmp r-xdata
push ecx
lea edx [ esp + 0x18 ]
mov [ esp ] 0x0
push edx
call sub_442a55
test al al
je r-xdata
jg r-xdata
lea ecx [ esp + 0x6c ]
call sub_402250
jmp r-xdata
lea eax [ esp + 0x6c ]
push eax
call sub_436565
test al al
jne r-xdata
lea ecx [ esp + 0x68 ]
push ecx
call sub_44c29d
mov edx [ edi + 0x450 ]
push 0xa
push edx
call [ WaitForSingleObject@IAT ]
mov [ esp + 0x5c ] eax
cmp eax 0x102
je r-xdata
cmp eax 0x8
je r-xdata
push ecx
lea ecx [ esp + 0x18 ]
mov [ esp ] 0x0
push ecx
call sub_442a55
test al al
je r-xdata
inc [ esp + 0x28 ]
mov esi [ ebx ]
call [ timeGetTime@IAT ]
mov [ esi + 0x14 ] eax
lea edx [ esp + 0xd0 ]
push edx
lea eax [ esp + 0xd0 ]
push eax
mov eax [ ebx ]
lea ecx [ esp + 0xe4 ]
push ecx
mov ecx [ eax ]
lea edx [ esp + 0x70 ]
push edx
push ecx
push edi
call sub_465124
mov eax [ esp + 0x64 ]
mov edx [ ebx ]
push 0x0
inc eax
push 0x1
push eax
push edi
mov [ esp + 0x74 ] eax
mov [ edx + 0x10 ] 0x1
call sub_47d33e
mov eax [ ebx ]
mov [ eax + 0x10 ] 0x0
mov ecx [ esp + 0x18 ]
cmp eax [ ecx + 0x18 ]
jb r-xdata
lea edx [ esp + 0x68 ]
push edx
push rw-data
call sub_45178a
test al al
je r-xdata
lea ecx [ esp + 0xf4 ]
push ecx
lea edx [ esp + 0xe8 ]
push edx
mov edx [ esp + 0x74 ]
lea eax [ esp + 0xe0 ]
push eax
lea ecx [ esp + 0x98 ]
push ecx
push edx
push edi
call sub_465124
test al al
je r-xdata
lea ecx [ esp + 0x6c ]
call sub_402250
jmp r-xdata
lea eax [ esp + 0x6c ]
push eax
call sub_436565
test al al
jne r-xdata
mov ecx [ edi + 0x450 ]
lea eax [ esp + 0x5c ]
push eax
push ecx
call [ GetExitCodeProcess@IAT ]
mov edx [ edi + 0x450 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x5c ]
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov [ esp + 0x18 ] eax
add ecx edi
lea eax [ esp + 0x18 ]
call sub_40d410
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ edi + 0x448 ] 0x0
je r-xdata
cmp eax 0x9
je r-xdata
xor ebx ebx
mov edi 0x1
lea esi [ esp + 0x30 ]
mov [ esp + 0x30 ] ebx
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_408f40
mov eax [ esp + 0x68 ]
mov [ esp + 0x38 ] edi
mov edi r--data
lea esi [ esp + 0xfc ]
mov [ esp + 0x30 ] eax
call sub_401b10
lea eax [ ebx + 0x2 ]
lea ecx [ ebx + 0x1 ]
lea edx [ esp + 0x30 ]
call sub_401980
mov ecx esi
call sub_402250
lea esi [ esp + 0x30 ]
call sub_408f40
mov ecx [ esp + 0x7c ]
mov edi r--data
lea esi [ esp + 0x11c ]
mov [ esp + 0x38 ] 0x7
mov [ esp + 0x30 ] ecx
call sub_401b10
lea eax [ ebx + 0x2 ]
lea ecx [ ebx + 0x1 ]
lea edx [ esp + 0x30 ]
call sub_401980
mov ecx esi
call sub_402250
lea esi [ esp + 0x30 ]
call sub_408f40
mov edx [ esp + 0x80 ]
mov edi r--data
lea esi [ esp + 0x12c ]
mov [ esp + 0x38 ] 0x7
mov [ esp + 0x30 ] edx
call sub_401b10
lea eax [ ebx + 0x2 ]
lea ecx [ ebx + 0x1 ]
lea edx [ esp + 0x30 ]
call sub_401980
mov ecx esi
call sub_402250
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x24 ]
push ebx
push 0x1
inc eax
push eax
push esi
mov [ esi + 0x464 ] 0x1
call sub_47d33e
mov [ esi + 0x464 ] bl
lea esi [ esp + 0x30 ]
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push rw-data
call sub_453bc6
test al al
je r-xdata
lea ecx [ esp + 0xe8 ]
push ecx
lea edx [ esp + 0xe4 ]
push edx
mov edx [ esp + 0x74 ]
lea eax [ esp + 0xf8 ]
push eax
lea ecx [ esp + 0xc0 ]
push ecx
push edx
push edi
call sub_465124
test al al
je r-xdata
xor ebx ebx
mov esi [ edi + 0x44c ]
call sub_40c620
xor ecx ecx
xor ebx ebx
cmp edx ecx
jl r-xdata
cmp eax 0x2
je r-xdata
call sub_408f40
lea ecx [ esp + 0x6c ]
call sub_402250
mov edi [ esp + 0x24 ]
jmp r-xdata
jmp r-xdata
cmp [ esp + 0x13 ] 0x1
jne r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov edx [ edi + 0x438 ]
lea eax [ esp + 0x13 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edx
call sub_443d19
add esp 0xc
cmp [ edi + 0xf8 ] 0x9
jne r-xdata
jg r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ edi + 0x2f0 ] 0x0
je r-xdata
cmp eax 0x3
je r-xdata
xor ebx ebx
mov edi 0x1
lea esi [ esp + 0x90 ]
mov [ esp + 0x90 ] ebx
mov [ esp + 0x98 ] edi
mov [ esp + 0x9c ] ebx
call sub_408f40
mov eax [ esp + 0x68 ]
mov [ esp + 0x98 ] edi
mov edi r--data
lea esi [ esp + 0x10c ]
mov [ esp + 0x90 ] eax
call sub_401b10
lea eax [ ebx + 0x2 ]
lea ecx [ ebx + 0x1 ]
lea edx [ esp + 0x90 ]
call sub_401980
mov ecx esi
call sub_402250
mov ecx [ esp + 0xb4 ]
mov esi [ esp + 0x24 ]
push ebx
push 0x1
inc ecx
push ecx
push esi
mov [ esi + 0x465 ] 0x1
call sub_47d33e
mov [ esi + 0x465 ] bl
lea esi [ esp + 0x90 ]
xor ebx ebx
mov [ esp + 0x13 ] 0x0
jmp r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov eax [ edi + 0x454 ]
cmp eax ebx
je r-xdata
cmp eax [ edi + 0x448 ]
jb r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x3
jl r-xdata
mov esi [ edi + 0x2f8 ]
call sub_40c620
xor ecx ecx
cmp edx ecx
jl r-xdata
cmp eax 0x4
je r-xdata
cmp [ edi + 0xf8 ] 0x8
jne r-xdata
lea ecx [ esp + 0x58 ]
push ecx
push eax
call [ GetExitCodeProcess@IAT ]
mov edx [ edi + 0x454 ]
push edx
call [ CloseHandle@IAT ]
mov [ edi + 0x454 ] ebx
mov eax [ edi + 0x454 ]
mov [ esp + 0x58 ] 0xcccccccc
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
add ecx edi
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
call sub_40d410
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ edi + 0x454 ] ebx
jmp r-xdata
mov ebx ecx
jg r-xdata
cmp eax 0x5
je r-xdata
mov edx [ edi ]
mov ecx [ esp + 0x58 ]
mov eax [ edx + 0x4 ]
push ebx
push ecx
add eax edi
call sub_403cd0
mov eax [ esp + 0x2c ]
fild [ esp + 0x2c ]
test eax eax
jns r-xdata
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] ebx
jmp r-xdata
sub eax 0x3
cmp eax 0x3
ja r-xdata
cmp [ edi + 0xf8 ] 0x2
jne r-xdata
cmp eax [ edi + 0x2f0 ]
jae r-xdata
cmp eax 0x6
je r-xdata
mov edx [ edi ]
fstp [ esp + 0x18 ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x18 ]
push ecx
add eax edi
push eax
call sub_4574b4
jmp r-xdata
fadd [ r--data ]
jmp [ eax * 4 + jump_table_42e18d ]
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
call sub_40d410
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xf4 ] ecx
mov eax ecx
inc ecx
mov [ ebp + 0x8 ] ecx
cmp eax [ rw-data ]
jg r-xdata
mov eax [ edi + 0x2f4 ]
push eax
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] ebx
call [ Sleep@IAT ]
jmp r-xdata
push edi
call sub_46fdbf
jmp r-xdata
push edi
call sub_46fdbf
mov esi eax
test esi esi
js r-xdata
push 0x1
push edi
call sub_46f3c1
push 0x1
push edi
call sub_46f3c1
mov esi eax
test esi esi
js r-xdata
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
test eax eax
jle r-xdata
mov esi eax
test esi esi
jns r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov edx esi
push 0x0
neg edx
push edx
add eax edi
call sub_403c90
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x0
call sub_40d410
test esi esi
jg r-xdata
je r-xdata
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
test esi esi
jle r-xdata
jmp r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x5
je r-xdata
jmp r-xdata
mov esi eax
mov ecx [ esi + 0x4 ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov edx [ ecx ]
movsx eax [ edx + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ edi + 0x2f4 ]
push eax
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
call sub_4331a2
add esp 0x4
jmp r-xdata
mov edx [ edi + 0x1d8 ]
mov ebx [ edx ]
xor eax eax
lea esi [ esp + 0xa0 ]
mov [ esp + 0xa0 ] eax
mov [ esp + 0xa8 ] 0x1
mov [ esp + 0xac ] eax
call sub_408f40
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push 0x0
push esi
add edx edi
push edx
mov [ esp + 0xb4 ] 0x7
mov [ esp + 0xac ] ebx
call sub_4731e1
call sub_408f40
cmp eax 0x3
jne r-xdata
cmp eax 0x34
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push esi
push edi
call sub_40afa0
dec eax
cmp eax 0x7e
ja r-xdata
lea eax [ esp + 0x47 ]
push eax
lea ecx [ esp + 0x4c ]
push ecx
push esi
push edi
lea eax [ esp + 0x24 ]
mov [ esp + 0x58 ] ebx
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x64 ] ebx
call sub_4096a0
test eax eax
jne r-xdata
movsx edx [ edx + 0xa ]
push edx
push 0x1388
push edi
call sub_45e737
jmp r-xdata
movzx eax [ eax + lookup_table_409614 ]
jmp [ eax * 4 + jump_table_409600 ]
mov esi [ esp + 0x54 ]
cmp esi ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push edi
mov eax esi
call sub_408fc0
jmp r-xdata
xor eax eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xb8 ] eax
mov [ esp + 0xc4 ] eax
push ecx
lea eax [ esp + 0x18 ]
mov edx esi
mov ebx edi
mov [ esp + 0xc4 ] 0x1
call sub_408cc0
test eax eax
jne r-xdata
lea ebx [ edi + 0x488 ]
push ebx
call sub_432416
test al al
jne r-xdata
mov eax [ esp + 0x50 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov edx [ esi + 0xc ]
cmp [ edx ] ebx
je r-xdata
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push edi
call sub_45e737
lea esi [ esp + 0x48 ]
call sub_408f40
jmp r-xdata
lea esi [ esp + 0xb8 ]
call sub_408f40
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
push edi
call sub_47faae
test eax eax
je r-xdata
movsx edx [ edx + 0xa ]
push edx
push 0xa7
push edi
call sub_45e737
jmp r-xdata
mov esi [ esp + 0x48 ]
cmp esi ebx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esi ]
push eax
call sub_4111dc
mov ecx [ esi + 0xc ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
push esi
call sub_4111dc
add esp 0x4
mov [ esp + 0x54 ] ebx
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push edi
call sub_45e737
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x14 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xaa
push edi
call sub_45e737
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0x48 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov esi [ esp + 0x48 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_409619
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_4096a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xd4
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
push esi
push edi
mov edi eax
mov eax [ edi ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov esi [ eax ]
push esi
call sub_4111c1
add esp 0x4
mov [ esp + 0x34 ] eax
inc eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esp + 0x38 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esp + 0x38 ]
add esp 0x4
lea edx [ ecx + ecx + 0x2 ]
push edx
push esi
push eax
mov [ esp + 0x3c ] eax
call sub_410e60
add esp 0xc
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x140 ] 0x0
mov [ esp + 0x3c ] eax
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_402250
cmp [ eax ] 0x1
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esp + 0x3c ]
dec [ eax ]
lea esi [ esp + 0x30 ]
call sub_4013a0
mov edx [ esp + 0x34 ]
inc edx
push edx
call sub_446618
xor ecx ecx
mov esi eax
mov edx 0x2
mul edx
seto cl
mov [ esp + 0x38 ] esi
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esp + 0x34 ]
mov esi eax
mov eax [ esp + 0x38 ]
add esp 0x4
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push esi
call sub_410e60
add esp 0xc
mov [ esp + 0x30 ] esi
jmp r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
call [ CharUpperBuffW@IAT ]
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x13c ]
test esi esi
jne r-xdata
mov eax [ eax + 0x140 ]
dec eax
js r-xdata
mov esi [ eax + 0x134 ]
test esi esi
je r-xdata
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x70 ] eax
mov [ esp + 0x1c ] esi
lea esp [ esp ]
jle r-xdata
mov eax [ esp + 0x1c ]
dec eax
mov [ esp + 0x70 ] eax
jmp r-xdata
mov esi [ esi + 0x20 ]
mov [ esp + 0x1c ] esi
test esi esi
jne r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0x70 ]
cmp [ esp + 0x5c ] eax
jg r-xdata
mov ecx [ esp + 0x1c ]
inc ecx
mov [ esp + 0x5c ] ecx
mov edx [ esp + 0x70 ]
cmp [ esp + 0x5c ] edx
jle r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x34 ]
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x3c ]
dec [ eax ]
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esi ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esi + ecx * 4 ]
lea ecx [ esp + 0x30 ]
call sub_402250
jmp r-xdata
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x70 ]
lea eax [ eax + edx ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ esi + eax * 4 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x30 ]
call sub_40bcc0
test eax eax
jns r-xdata
mov eax esi
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x40 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
push edi
push ebx
push ecx
call sub_47dcbb
jmp r-xdata
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ esp + 0x5c ] edx
mov edx [ eax + 0x10 ]
mov eax [ edi ]
mov [ esp + 0x44 ] ecx
mov [ esp + 0xcc ] edx
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x148 ]
inc eax
mov [ edi ] eax
mov esi [ ebx + 0x4 ]
mov [ esp + 0xdc ] ecx
xor ecx ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] ecx
mov esi [ esi + eax * 4 ]
cmp [ esi + 0x8 ] 0x47
mov [ esp + 0x30 ] r--data
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x60 ] r--data
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] ecx
mov [ esp + 0x6c ] ecx
jne r-xdata
mov esi [ esp + 0x1c ]
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
push edx
mov edx [ ebp + 0x8 ]
push 0x6f
push edx
jmp r-xdata
inc eax
mov [ esp + 0x7c ] edx
mov edx eax
mov [ esp + 0x18 ] ecx
xor esi esi
mov [ esp + 0x54 ] edx
mov esi [ esp + 0x1c ]
call sub_45e737
sub ecx 0x47
je r-xdata
inc eax
jmp r-xdata
inc esi
jmp r-xdata
dec ecx
jne r-xdata
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
movsx ecx [ ecx + 0x8 ]
cmp ecx 0x47
jge r-xdata
sub ecx 0x37
jne r-xdata
test esi esi
jne r-xdata
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 - 0x4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x6f
push eax
jmp r-xdata
dec esi
inc eax
jmp r-xdata
mov [ esp + 0x14 ] eax
inc eax
mov [ edi ] eax
mov eax [ esp + 0xcc ]
cmp eax [ rw-data ]
jg r-xdata
mov [ esp + 0x50 ] ecx
jmp r-xdata
cmp eax ecx
jle r-xdata
mov [ esp + 0x70 ] ecx
cmp [ esp + 0x5c ] ecx
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x70 ]
cmp eax [ esp + 0x44 ]
jl r-xdata
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x78 ] ecx
lea ecx [ ecx ]
mov eax [ esp + 0x7c ]
push eax
push 0x70
cmp eax [ esp + 0x5c ]
jg r-xdata
mov ecx [ esp + 0x50 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x70 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov ebx [ esp + 0xcc ]
xor esi esi
xor eax eax
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] ebx
cmp ebx esi
jl r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x68 ]
mov eax [ esp + 0x6c ]
cmp esi eax
je r-xdata
xor bl bl
mov [ esp + 0x4c ] esi
jmp r-xdata
cmp [ rw-data ] al
jne r-xdata
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
jmp r-xdata
xor ecx ecx
mov [ esp + 0x6c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esp + 0x68 ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x54 ] eax
call sub_410e60
mov eax [ esp + 0x70 ]
add esp 0xc
push eax
call sub_4111dc
mov ecx [ esp + 0x4c ]
add esp 0x4
mov [ esp + 0x64 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
mov eax [ esp + 0x48 ]
inc [ rw-data ]
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x4c ] esi
jl r-xdata
mov edx [ esp + 0x64 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x68 ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
mov eax 0x1
cmp [ esp + 0x5c ] eax
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax esi
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c2c0
test al al
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov esi [ ebp + 0x8 ]
mov edx [ esp + 0x70 ]
xor eax eax
lea ecx [ eax + 0x1 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] al
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0xa0 ] eax
mov [ esp + 0xac ] eax
mov [ esp + 0xb0 ] al
mov eax [ esi ]
mov [ esi + 0x148 ] edx
mov [ esp + 0x88 ] ecx
mov [ esp + 0xa8 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xd ] 0x0
lea edi [ ecx + esi + 0x4 ]
jne r-xdata
mov [ esp + 0x78 ] eax
push 0x20
mov [ esp + 0x1c ] eax
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov eax [ edi + 0x4 ]
lea edx [ esp + 0x80 ]
push edx
push eax
call sub_47390f
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x78 ]
cmp edx [ esp + 0x70 ]
jg r-xdata
xor eax eax
push eax
call sub_44a801
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x54 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push edi
call sub_4431ad
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov edx [ esi + 0xf4 ]
lea eax [ ebx + 0x1 ]
mov ebx [ esi + 0x16c ]
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x4c ] edx
call sub_4091e0
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xbc ]
call sub_40d530
mov ecx [ esp + 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x7c ] 0x0
mov eax [ edx + esi * 4 + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov edi [ esp + 0x64 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] bl
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40e0a0
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_453443
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_453443
xor esi esi
jmp r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40ba10
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push 0x1
call sub_40e1c0
call sub_40c790
cmp ebx [ edi ]
jb r-xdata
mov eax [ esp + 0x48 ]
mov edi esi
mov ecx [ edi ]
mov [ edi + 0xf4 ] eax
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
lea eax [ edx + edi + 0x4 ]
mov eax [ eax + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
lea edi [ esp + 0xbc ]
call sub_402780
mov eax [ esp + 0x50 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
cmp cx 0x49
jne r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_432508
push eax
mov eax [ ecx ]
push eax
call sub_45f508
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x48 ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ esp + 0x54 ]
cmp edx ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x60 ]
call sub_40c4e0
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410e60
add esp 0xc
push ebx
call sub_4111dc
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x48 ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea edi [ esp + 0xbc ]
call sub_402780
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402710
mov eax esi
lea edi [ esp + 0xbc ]
call sub_402780
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x84 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a780
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x48 ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_401980
jmp r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e737
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b469
lea ecx [ esp + 0xbc ]
call sub_40edc0
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_403e10
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ rw-data ] bl
jne r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40a780
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax 0x1
jmp r-xdata
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3d9
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc4 ] 0x0
mov [ esp + 0xbc ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x43 ] al
je r-xdata
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x54 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov eax ebx
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc0 ]
push ecx
mov [ esp + 0xc8 ] 0x0
call sub_4111dc
mov eax [ esp + 0x7c ]
inc eax
add esp 0x4
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x74 ] eax
mov eax [ esp + 0x78 ]
inc eax
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jl r-xdata
inc [ esp + 0x10 ]
mov eax esi
call sub_403cc0
mov ecx [ eax + 0x14 ]
mov [ esp + 0x94 ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4431ad
jmp r-xdata
inc esi
cmp esi [ esp + 0xc4 ]
jb r-xdata
push eax
call sub_44c7c0
mov ecx [ esp + 0x50 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0x7c ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0xcc ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc0 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_403cc0
add eax 0x20
push eax
lea ebx [ esp + 0xa4 ]
call sub_408e80
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov edx [ edi + 0x8 ]
mov esi eax
lea eax [ edx - 0x1 ]
mov [ esp + 0x58 ] esi
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x43 ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x58 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_4431cb
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40d260
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x58 ]
jmp [ eax * 4 + jump_table_40a744 ]
push eax
call sub_446618
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410e60
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44ccf1
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x48 ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ ebx ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x74 ] eax
mov [ esp + 0x58 ] eax
lea ebx [ ebx ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4111dc
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_408e80
jmp r-xdata
mov [ esp + 0x58 ] eax
mov eax [ ebx ]
mov ecx [ esp + 0x74 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x74 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov ebx [ esp + 0x14 ]
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x48 ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42aede ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a3
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_470870
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x43 ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x94 ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0x2c ] 0x0
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ esi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3d9
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x48 ] eax
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ esi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ esi + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x74 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa0 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x20 ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esi + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x58 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esi + 0x20 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4111dc
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
nop
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa0 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_40a780
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x84
push ebx
push esi
push edi
mov ebx 0x1
xor edi edi
mov [ esp + 0x24 ] ecx
test [ rw-data ] bl
je r-xdata
or [ rw-data ] ebx
push sub_425c21
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] edi
call sub_41130a
add esp 0x4
jmp r-xdata
mov esi [ ebp + 0x10 ]
push 0x8
mov [ esp + 0x38 ] bx
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] bx
call sub_4115d7
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x14
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax [ edi ]
mov eax [ edx + eax * 4 ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] 0x17
mov [ esp + 0x38 ] eax
mov ebx 0x14
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea edx [ eax + ecx * 4 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax esi
movsx ebx [ eax + 0x8 ]
cmp ebx 0x36
je r-xdata
mov eax [ eax ]
imul eax eax 0x15
movzx eax [ eax + ebx + rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x6
ja r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov ebx [ esp + 0x18 ]
mov [ esp + 0x28 ] 0x16
test ebx ebx
jne r-xdata
cmp ebx 0x37
jl r-xdata
cmp ebx 0x7
je r-xdata
jmp [ eax * 4 + jump_table_40aed0 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6e
push ecx
call sub_45e737
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
cmp [ esp + 0x21 ] 0x0
je r-xdata
cmp esi rw-data
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x41
jge r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp ebx 0x8
je r-xdata
test cl cl
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x30 ]
call sub_40b5f0
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
test cl cl
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6d
push ecx
call sub_45e737
jmp r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6b
push ecx
call sub_45e737
jmp r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6c
push ecx
call sub_45e737
jmp r-xdata
lea edx [ esp + 0x14 ]
push edx
mov esi eax
lea ebx [ ebx ]
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esp + 0x1c ]
push rw-data
call sub_408e80
mov ebx [ esp + 0x18 ]
mov [ esp + 0x21 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 ]
inc ebx
mov [ esp + 0x18 ] ebx
cmp ebx 0x1
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
cmp ebx 0x51
ja r-xdata
mov ebx [ esp + 0x18 ]
mov [ esp + 0x28 ] 0x16
test ebx ebx
jne r-xdata
mov esi [ esp + 0x14 ]
jmp r-xdata
lea eax [ esp + 0x14 ]
call sub_40d0b0
lea ebx [ esp + 0x60 ]
call sub_40b960
mov ecx ebx
call sub_40ce70
test al al
je r-xdata
mov [ esi ] ebx
mov [ esp + 0x35 ] 0x0
jmp r-xdata
push 0x8
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov cl [ esp + 0x35 ]
mov esi [ esp + 0x30 ]
test cl cl
jne r-xdata
jmp r-xdata
mov eax edx
jmp r-xdata
mov eax [ edx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
xor eax eax
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov [ esp + 0xc ] eax
mov ebx [ esp + 0xc ]
mov eax rw-data
call sub_40b960
mov eax ebx
mov ebx [ esp + 0x18 ]
cmp [ esp + 0x21 ] 0x0
mov edx [ esp + 0x1c ]
jne r-xdata
mov [ esp + 0xc ] esi
push eax
call sub_4431ad
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
movzx ebx [ ebx + lookup_table_40af4c ]
jmp [ ebx * 4 + jump_table_40aeec ]
cmp [ esp + 0x21 ] 0x0
jne r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ edi ]
cmp ecx [ ebp + 0x14 ]
je r-xdata
cmp [ esp + 0xc ] 0x7
jne r-xdata
mov esi 0x8
cmp [ esp + 0xc ] esi
je r-xdata
inc [ esp + 0x2c ]
xor eax eax
jmp r-xdata
mov [ eax ] ebx
cmp [ eax ] 0x12
je r-xdata
lea esi [ esp + 0x2c ]
call sub_40be70
jmp r-xdata
test cl cl
je r-xdata
mov edi [ esi + 0x10 ]
call sub_408f40
push esi
call sub_4111dc
add esp 0x4
mov esi edi
test edi edi
je r-xdata
mov esi [ eax + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ eax + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ edx + 0x10 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov [ esp + 0xc ] edx
jmp r-xdata
push eax
call sub_4431ad
mov ecx [ esp + 0xc ]
mov [ ecx + 0xc ] 0x0
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
inc ecx
mov ebx 0xd
mov [ edi ] ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x16
jne r-xdata
inc ecx
mov ebx 0xe
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x12
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x13
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x9
mov [ edi ] ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov eax [ eax ]
cmp eax 0x4
jl r-xdata
inc ecx
mov ebx 0x5
mov [ edi ] ecx
jmp r-xdata
xor ebx ebx
inc ecx
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x1
mov [ edi ] ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
mov eax esi
mov [ esp + 0x74 ] ecx
call sub_40d0b0
mov esi eax
call sub_408f40
mov edx [ esp + 0x74 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edx
inc [ edi ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
fld [ eax ]
mov eax esi
fstp [ esp + 0xc ]
call sub_40d0b0
mov esi eax
call sub_408f40
fld [ esp + 0xc ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
inc [ edi ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
call sub_40bc10
lea edx [ esp + 0x3f ]
push edx
mov eax esi
call sub_40d0b0
mov esi [ esp + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push esi
call sub_4096a0
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x16
je r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
call sub_40bc10
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax ]
mov edx [ eax ]
sub esp 0x10
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x24 ]
call sub_40d0b0
mov ebx [ esp + 0x34 ]
push eax
push ebx
call sub_4720db
test eax eax
jne r-xdata
inc ecx
mov ebx 0x4
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x6
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x2
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x3
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0xf
mov [ edi ] ecx
jmp r-xdata
test ecx ecx
je r-xdata
mov ebx [ esp + 0x1c ]
push rw-data
call sub_408e80
mov ebx [ esp + 0x18 ]
mov [ esp + 0x21 ] 0x0
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 ]
inc ebx
mov [ esp + 0x18 ] ebx
cmp ebx 0x1
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
lea esi [ esp + 0x60 ]
call sub_408f40
mov esi [ esp + 0x14 ]
jmp r-xdata
mov esi 0x8
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_441db4
test eax eax
jne r-xdata
test al al
je r-xdata
mov [ eax + 0x4 ] esi
mov [ esp + 0x30 ] eax
mov eax edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0xc ]
mov ebx [ eax ]
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esp + 0xc ] ebx
mov [ esp + 0x28 ] ebx
cmp eax 0x13
je r-xdata
mov ebx 0xb
cmp [ esp + 0x21 ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
cmp [ esp + 0x21 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x27
jl r-xdata
cmp [ esi + 0xf8 ] 0x1
je r-xdata
mov ebx 0xc
mov ebx 0x10
cmp eax 0x13
jne r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x86
push ebx
call sub_45e737
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x28 ] 0x16
jmp r-xdata
mov esi [ esp + 0x24 ]
lea edx [ esi + 0x488 ]
push edx
call sub_432416
test al al
je r-xdata
mov edx [ edx - 0x4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x33
je r-xdata
xor eax eax
jmp r-xdata
mov [ esp + 0xc ] eax
mov ebx [ esp + 0xc ]
mov eax rw-data
call sub_40b960
mov eax ebx
mov ebx [ esp + 0x18 ]
cmp [ esp + 0x21 ] 0x0
jne r-xdata
mov ebx esi
push eax
call sub_4431ad
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6e
push ecx
call sub_45e737
lea esi [ esp + 0x60 ]
lea eax [ esp + 0x14 ]
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ eax ] 0x14
je r-xdata
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x30 ]
call sub_40b5f0
test eax eax
jne r-xdata
push edx
call [ VariantClear@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ rw-data ]
mov [ esi + 0x8 ] edx
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
cmp [ ebx + 0xf8 ] 0x1
je r-xdata
sub eax 0x2
cmp eax 0x27
ja r-xdata
inc ecx
lea ebx [ eax + 0x6 ]
mov [ edi ] ecx
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x28 ] 0x16
jmp r-xdata
inc ecx
mov [ edi ] ecx
jmp r-xdata
call sub_44b92d
lea eax [ esp + 0x2c ]
call sub_4107c0
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa7
push esi
call sub_45e737
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
xor eax eax
sub esp 0x10
mov [ esp + 0x60 ] eax
mov [ esp + 0x6c ] eax
mov eax edx
mov ebx esp
mov [ esp + 0x68 ] 0x1
call sub_40b960
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x60 ]
push eax
push edi
push ecx
mov ecx esi
call sub_47e250
test eax eax
jne r-xdata
mov ebx [ esp + 0x24 ]
push 0x1
push r--data
push 0x0
push 0xa9
push ebx
call sub_451b42
test eax eax
jne r-xdata
cmp ax 0x35
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ eax + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
mov ebx [ edx + 0x10 ]
jmp r-xdata
mov ebx [ esp + 0x1c ]
jmp r-xdata
push eax
call sub_4431ad
mov ecx [ esp + 0xc ]
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov [ esp + 0x48 ] 0x0
mov edx [ esp + 0x48 ]
push edx
mov [ esp + 0x40 ] 0x1
mov ecx [ esp + 0x40 ]
push ecx
jmp r-xdata
mov cl [ esp + 0x35 ]
jmp r-xdata
mov eax [ esp + 0xc ]
push 0x10
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push ecx
call sub_44318e
jmp r-xdata
mov eax [ esp + 0xc ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ rw-data ]
mov [ esi ] edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov ebx 0x11
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
mov eax [ esp + 0x28 ]
push edx
push eax
mov eax [ ebp + 0xc ]
call sub_40c1f0
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ esp + 0x24 ]
push eax
mov eax [ ebp + 0xc ]
call sub_408cc0
test eax eax
jne r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
movzx eax [ eax + lookup_table_42bc86 ]
jmp [ eax * 4 + jump_table_42bc6e ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6e
push esi
call sub_45e737
lea esi [ esp + 0x50 ]
jmp r-xdata
lea edi [ esp + 0x50 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
mov esi edi
call sub_408f40
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa9
push ebx
call sub_45e737
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
inc [ edi ]
jmp r-xdata
mov ecx [ eax ]
mov eax [ ebx + 0xc ]
mov [ esp + 0xc ] ecx
test eax eax
jne r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
call sub_40d0b0
push eax
call sub_4530c9
lea esi [ esp + 0x2c ]
call sub_40be70
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebx ]
mov [ eax ] edx
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ebx [ ebx + 0xc ]
mov [ eax + 0xc ] ebx
inc [ ebx ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esi ]
test eax eax
je r-xdata
inc ecx
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x8
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0xa
mov [ edi ] ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
mov [ esp + 0x44 ] 0x0
mov ecx [ esp + 0x44 ]
push ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40bc10
mov [ esp + 0x4c ] 0x1
mov edx [ esp + 0x4c ]
push edx
sub esp 0x10
mov edi r--data
mov esi esp
mov [ esp + 0x38 ] 0x16
call sub_401b10
lea eax [ esp + 0x88 ]
push eax
call sub_44b8d4
mov edi rw-data
lea esi [ esp + 0x14 ]
call sub_40bc10
lea ecx [ esp + 0x78 ]
push ecx
mov eax esi
call sub_40d0b0
push eax
call sub_45308a
mov eax [ ebp + 0xc ]
inc [ eax ]
lea ecx [ esp + 0x80 ]
call sub_402250
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
call sub_408f40
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
mov ecx [ esp + 0x10 ]
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
inc [ edi ]
cmp [ eax + 0xfd ] 0x0
jne r-xdata
lea eax [ esp + 0x14 ]
call sub_40d0b0
push eax
call sub_457f66
mov eax [ esp + 0x24 ]
jmp r-xdata
cmp [ eax + 0xfe ] 0x0
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ rw-data ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ rw-data ]
fstp [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov al [ rw-data ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
lea eax [ esp + 0x18 ]
call sub_40d0b0
push eax
call sub_4530c9
mov edi [ ebp + 0xc ]
inc [ edi ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] ecx
inc [ edi ]
jmp r-xdata
push eax
call sub_44318e
mov ecx [ esp + 0xc ]
jmp r-xdata
mov eax ebx
call sub_40e270
mov ecx [ esp + 0xc ]
jmp r-xdata
cmp eax 0xb
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ rw-data ]
mov [ esi ] edx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esi ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
push ecx
call sub_44b3d9
jmp r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi + 0xc ] eax
jmp r-xdata
xor eax eax
mov esi [ rw-data ]
mov ebx [ esp + 0x18 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ rw-data ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_44b8a3
mov [ esi ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx [ rw-data ]
mov eax [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_470870
mov [ esi ] eax
jmp r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
mov ecx [ esp + 0x10 ]
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esi ]
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
call sub_40d0b0
mov edx [ esp + 0x24 ]
push eax
push edx
call sub_472f47
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ esi ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
mov edx [ rw-data ]
mov [ esi + 0x4 ] edx
jmp r-xdata
fld [ rw-data ]
fstp [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov al [ rw-data ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_44b3d9
mov ecx [ esp + 0xc ]
jmp r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi + 0xc ] eax
jmp r-xdata
xor eax eax
mov esi [ rw-data ]
mov ebx [ esp + 0x18 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ rw-data ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_44b8a3
mov [ esi ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx [ rw-data ]
mov eax [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_470870
mov [ esi ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ esi ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
sub_40afa0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
push edi
mov edi [ ecx ]
mov edx [ edi ]
cmp edx 0x22
jne r-xdata
sub edx 0x4
cmp edx 0x26
ja r-xdata
mov eax 0x1
cmp [ esi + 0xec ] eax
je r-xdata
push 0xffffffff
push 0x81
push esi
call sub_45e737
jmp r-xdata
jmp [ edx * 4 + jump_table_40b364 ]
movsx eax [ edi + 0xa ]
push eax
push 0x81
push esi
call sub_45e737
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ esi + 0x16c ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] ebx
mov [ ebp + 0xc ] eax
cmp [ eax + 0x9 ] bl
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push esi
call sub_40ccd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
push edx
push eax
push esi
call sub_40bf20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edi [ esi + 0x16c ]
call sub_40c790
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
mov ebx esi
call sub_410900
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax esi
call sub_40e9f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
push edx
call sub_40f430
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push esi
call sub_40ea70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
push esi
call sub_40f380
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edi [ esi + 0x16c ]
mov eax edi
call sub_40f4d0
mov edx [ eax + 0x8 ]
mov eax [ ebp + 0x10 ]
inc edx
mov [ eax ] edx
call sub_40c790
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push esi
call sub_47f9a6
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
push eax
push esi
call sub_47f85e
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
push esi
call sub_47f68a
jmp r-xdata
lea eax [ esi + 0x16c ]
call sub_40f4d0
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
push eax
push esi
call sub_47f38e
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
push esi
call sub_473253
jmp r-xdata
push ebx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push esi
call sub_47f135
jmp r-xdata
push ebx
lea edx [ ebp - 0x8 ]
push edx
push eax
push esi
call sub_4805bf
jmp r-xdata
push ebx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push esi
call sub_480a8d
jmp r-xdata
push 0x4
lea edx [ ebp - 0x8 ]
push edx
push eax
push esi
call sub_480a8d
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push esi
call sub_480a8d
jmp r-xdata
push 0x2
lea edx [ ebp - 0x8 ]
push edx
push eax
push esi
call sub_480a8d
jmp r-xdata
push ebx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push esi
call sub_47fea2
jmp r-xdata
mov [ esi + 0x144 ] 0x1
jmp r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp - 0x8 ] 0x1
mov ecx [ ecx + 0x4 ]
lea eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x18 ]
push edx
mov edx [ ecx ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ edx ]
push eax
push esi
call sub_465124
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
inc ecx
mov [ edx ] ecx
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push esi
call sub_47e4e3
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
push eax
push esi
call sub_4650df
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144 ] 0x1
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
push 0xffffffff
lea edx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x20 ] eax
push edx
lea eax [ ebp - 0x8 ]
push eax
push ecx
mov ecx esi
mov [ ebp - 0x24 ] 0x1
call sub_40a780
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
mov edi [ eax + 0x30 ]
mov [ ebp - 0xc ] edi
jmp r-xdata
mov edi [ eax + 0x4 ]
mov [ ebp - 0xc ] edi
movsx edx [ eax + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x72
push eax
call sub_45e737
jmp r-xdata
lea esi [ ebp - 0x2c ]
call sub_408f40
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
mov [ ebp + 0x10 ] eax
cmp [ eax + 0xd ] bl
jne r-xdata
cmp [ edi + 0x28 ] 0x8
mov edx [ edi + 0xc ]
mov [ ebp + 0x8 ] edx
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push ecx
lea eax [ edi + 0x20 ]
push eax
push edx
push esi
call sub_46c84c
test eax eax
jne r-xdata
cmp [ edi + 0x18 ] 0x5
je r-xdata
mov ecx [ eax + 0x8 ]
mov ebx [ ecx + 0x38 ]
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_40c790
lea esi [ ebp - 0x2c ]
call sub_408f40
jmp r-xdata
cmp [ edi + 0x28 ] 0x8
jne r-xdata
lea eax [ edi + 0x10 ]
push 0x1
push eax
mov [ ebp - 0x10 ] eax
call sub_4323e1
dec eax
lea esi [ edi + 0x20 ]
mov ecx esi
mov [ ebp - 0x18 ] eax
call sub_40c650
cmp eax [ ebp - 0x18 ]
jge r-xdata
lea esi [ edi + 0x20 ]
push edx
mov eax esi
call sub_40b510
mov eax [ ebp - 0x20 ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_408e80
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x10 ]
inc ecx
mov [ edx ] ecx
xor ebx ebx
jmp r-xdata
mov ecx esi
call sub_40c650
lea edi [ eax + 0x1 ]
call sub_408f40
mov [ esi ] edi
mov edi [ ebp - 0x10 ]
push edi
mov [ esi + 0x8 ] 0x1
call sub_45e951
mov ecx esi
call sub_40c650
mov esi eax
mov edx edi
call sub_40cfc0
push ebx
push 0x1
call sub_40cf00
add esp 0x8
test eax eax
je r-xdata
push eax
call sub_4431ad
mov [ ebp - 0x20 ] ebx
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax 0x8
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x10 ] 0x1
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
cmp ecx ebx
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x10 ]
inc ecx
mov [ edx ] ecx
jmp r-xdata
push 0x0
push 0x0
call sub_40cf00
mov ebx [ ebp + 0x8 ]
add esp 0x8
push eax
call sub_408e80
xor ebx ebx
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call sub_4431ad
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp eax 0x8
je r-xdata
fldz
mov [ ebp - 0x24 ] 0x3
fld st0
fst [ ebp - 0x2c ]
mov eax [ esi + 0x8 ]
lea edx [ eax + eax * 2 ]
shl edx 0x4
mov ecx [ edx + rw-data ]
cmp ecx 0x3
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ esi ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebp - 0x20 ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
cmp eax 0xa
je r-xdata
dec ecx
fstp st0
fstp st0
cmp ecx 0x8
ja r-xdata
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov edx [ ebp - 0x24 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
cmp eax 0x4
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ edi + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
lea esi [ edi + 0x10 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov ecx [ ecx * 4 + rw-data ]
cmp ecx 0x1
jne r-xdata
jmp [ ecx * 4 + jump_table_42d4e2 ]
sub eax 0x2
cmp eax 0x8
ja r-xdata
fstp st1
fild [ esi ]
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
sub ecx 0x2
cmp ecx 0x7
ja r-xdata
cmp eax 0x1
jne r-xdata
push ebx
lea eax [ ebp - 0x2c ]
push eax
call sub_4533eb
push eax
push esi
call sub_4533eb
push eax
call sub_445bc3
test eax eax
jns r-xdata
mov ecx esi
call sub_40c650
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_40c650
cmp esi eax
jl r-xdata
push esi
call sub_443006
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x1c ] eax
mov esi edx
call sub_443006
cmp esi edx
jl r-xdata
push esi
call sub_44b3ac
lea edx [ ebp - 0x2c ]
push edx
mov esi eax
call sub_44b3ac
cmp esi eax
jb r-xdata
fxch st1
jmp r-xdata
jmp [ eax * 4 + jump_table_42d506 ]
mov ecx [ ebp + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
push ecx
call sub_467c5c
add esp 0x8
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp [ eax * 4 + r-xdata ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp + 0x10 ]
inc edx
mov [ eax ] edx
jmp [ ecx * 4 + jump_table_42d552 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov esi [ esi ]
jmp r-xdata
jg r-xdata
jmp r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
fstp st1
fld [ esi ]
jmp r-xdata
mov eax [ esi + 0xc ]
fstp st0
mov eax [ eax ]
fstp st0
cmp [ eax ] 0x30
jne r-xdata
fstp st1
fild [ esi ]
jmp r-xdata
mov edx [ esi ]
fstp st1
fild [ edx + 0x4 ]
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ ebp + 0xc ]
call sub_40c790
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp + 0x10 ]
inc edx
mov [ eax ] edx
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebx ] eax
jmp r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3d9
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
call sub_4533eb
push eax
push esi
call sub_4533eb
push eax
call sub_445bc3
test eax eax
js r-xdata
push esi
call sub_443006
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov esi edx
call sub_443006
cmp esi edx
jl r-xdata
mov ecx esi
call sub_40baa0
fstp [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
call sub_40baa0
fcomp [ ebp - 0x1c ]
fnstsw ax
test ah 0x41
je r-xdata
push esi
call sub_44b3ac
mov ecx [ ebp + 0x8 ]
push ecx
mov esi eax
call sub_44b3ac
cmp esi eax
jb r-xdata
xor esi esi
jmp r-xdata
jmp [ eax * 4 + jump_table_42d572 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ecx ]
cmp [ ebp - 0x1c ] eax
jb r-xdata
push eax
call sub_413bed
add esp 0x4
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
fstp st1
fld1
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
jmp r-xdata
jg r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ esi ]
call sub_425a80
mov esi eax
jmp r-xdata
xor edx edx
cmp [ esi ] dl
setne dl
mov esi edx
jmp r-xdata
mov eax [ esi ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov esi [ esi ]
cmp [ esi ] 0x4
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_42d59a ]
jmp r-xdata
fld [ ebp - 0x2c ]
fxch st1
jmp r-xdata
dec eax
cmp eax 0x9
ja r-xdata
push 0x8
lea ecx [ ebp - 0x1c ]
push ecx
add eax 0x4
push eax
call sub_432cc2
fild [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp ecx 0x58
jne r-xdata
push eax
call sub_44b3d9
jmp r-xdata
cmp [ ebp - 0x1c ] eax
jb r-xdata
push eax
call sub_413190
add esp 0x4
mov esi eax
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
call sub_432bc3
mov esi [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp esi eax
jl r-xdata
mov ecx [ ecx + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ecx ]
call sub_425a80
jmp r-xdata
xor eax eax
cmp [ ecx ] al
setne al
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ecx ]
cmp [ ecx ] 0x4
jg r-xdata
fldz
fxch st1
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebp - 0x24 ]
fst [ ebp - 0x1c ]
cmp eax 0x3
je r-xdata
jmp r-xdata
push 0x8
lea ecx [ ebp - 0x1c ]
push ecx
add eax 0x4
push eax
call sub_432cc2
mov esi [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp ecx 0x58
jne r-xdata
push eax
call sub_413190
add esp 0x4
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
push ecx
call sub_432bc3
mov eax [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
push 0x8
lea edx [ ebp - 0x1c ]
push edx
add eax 0x4
push eax
call sub_432cc2
mov eax [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp ecx 0x58
jne r-xdata
sub_40b400
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x18 ]
push edi
mov edi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
push eax
mov ecx edi
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
pop edi
jne r-xdata
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
push esi
call sub_4111dc
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
push eax
call sub_4111dc
add esp 0x8
push ebx
mov ebx [ edi + 0xc ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
pop ebx
cmp eax 0x8
je r-xdata
mov ecx [ ebx ]
push ecx
call sub_4111dc
mov edx [ ebx + 0xc ]
push edx
call sub_4111dc
add esp 0x8
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
mov [ edi + 0xc ] 0x0
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ edi ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push edi
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax edi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ edi ]
push eax
call sub_4111dc
add esp 0x8
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_40b510
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi eax
mov eax [ esi + 0x8 ]
cmp eax 0x1
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_40b5bc ]
cmp ecx 0x2
je r-xdata
mov eax [ edi ]
mov ebx [ esi ]
lea esi [ eax + ebx ]
cdq
mov ecx eax
mov edi edx
mov eax ebx
cdq
add ecx eax
adc edi edx
mov eax esi
cdq
cmp eax ecx
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0xc ] 0x0
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_40baa0
fadd [ esi ]
fstp [ esi ]
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
push esi
call sub_452f05
jmp r-xdata
cmp [ edi + 0x8 ] 0xb
je r-xdata
cmp [ edi + 0x8 ] 0x1
mov ebx [ esi ]
jne r-xdata
mov eax [ esi ]
cdq
add eax [ edi ]
adc edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] 0x2
jmp r-xdata
cmp eax 0x3
je r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ecx
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
push edi
call sub_443006
add [ esi ] eax
adc [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
push edi
call sub_443106
mov ebx eax
mov eax [ esi ]
add ebx [ eax ]
push ebx
call sub_4115d7
mov ecx [ esi ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
add esp 0x4
push edx
push ecx
push eax
mov [ ebp + 0x8 ] eax
call sub_410e60
add esp 0xc
push edi
call sub_443106
push eax
push ecx
push edi
call sub_4680ed
mov edx [ esi ]
mov edi [ ebp + 0x8 ]
add esp 0x4
push eax
mov eax [ edx ]
add eax edi
push eax
call sub_410e60
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
push edx
call sub_4111dc
mov eax [ esi ]
mov [ eax + 0x4 ] edi
mov ecx [ esi ]
add esp 0x4
mov [ ecx ] ebx
jmp r-xdata
push esi
call sub_452f05
jmp r-xdata
push edi
call sub_443006
add ebx eax
mov [ esi ] ebx
jmp r-xdata
mov ecx edi
call sub_40c650
add ebx eax
mov [ esi ] ebx
jmp r-xdata
mov ecx esi
call sub_40baa0
fstp [ ebp - 0xc ]
call sub_408f40
fld [ ebp - 0xc ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
mov edx [ ebp + 0x8 ]
mov [ edx ] esi
mov esi edx
sub_40b5f0
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi eax
mov al [ esi + 0x9 ]
mov ecx [ esi + 0x4 ]
push edi
test al al
jne r-xdata
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov edx ecx
mov edi [ edx ]
test al al
jne r-xdata
mov ebx [ ecx + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
jmp r-xdata
mov [ esi + 0x9 ] 0x1
dec [ esi ]
cmp edi 0xa
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax 0x1
cmp [ esi + 0x4 ] eax
jl r-xdata
cmp edi 0x10
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0xa
je r-xdata
cmp edi 0x11
je r-xdata
mov eax esi
call sub_40d0b0
push eax
call sub_442f36
mov [ ebp + 0x8 ] al
mov edx [ ebp + 0x8 ]
push edx
mov eax esi
call sub_40d0b0
push eax
call sub_4530c9
jmp r-xdata
cmp edi 0x10
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
cmp ecx 0x2
jl r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax esi
mov [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x10 ] 0x0
call sub_40d0b0
mov esi eax
lea eax [ ebp - 0x1c ]
call sub_40bb80
lea esi [ ebp - 0x1c ]
call sub_408f40
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp edi 0xf
ja r-xdata
jmp [ edi * 4 + jump_table_40b8c8 ]
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
mov eax ebx
call sub_40d0b0
push eax
mov eax ebx
call sub_40c4c0
mov ecx eax
call sub_40ce80
add esp 0x4
test al al
mov eax ebx
je r-xdata
mov eax ebx
call sub_40d0b0
mov edi eax
mov eax ebx
call sub_40c4c0
mov esi eax
mov eax edi
call sub_40c670
test al al
mov eax ebx
jne r-xdata
mov eax ebx
call sub_40d0b0
mov esi eax
mov eax ebx
call sub_40c4c0
call sub_40c670
test al al
mov eax ebx
je r-xdata
mov eax ebx
call sub_40d0b0
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_452f37
mov edi ebx
call sub_40b910
jmp r-xdata
mov eax ebx
call sub_40d0b0
mov esi eax
mov eax ebx
call sub_40c4c0
mov ecx eax
mov eax esi
call sub_40cb00
test al al
jne r-xdata
mov eax ebx
call sub_40d0b0
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_45e9d5
test al al
mov eax ebx
je r-xdata
mov eax ebx
call sub_40d0b0
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_467c5c
add esp 0x8
test al al
je r-xdata
mov eax ebx
call sub_40d0b0
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_467c75
jmp r-xdata
mov eax ebx
call sub_40d0b0
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_442f10
mov eax ebx
call sub_40d0b0
lea ebx [ ebp - 0x1c ]
call sub_40b960
mov edi [ ebp + 0x8 ]
call sub_40b910
push ebx
call sub_432447
mov esi eax
mov eax edi
call sub_40d0b0
push eax
call sub_432447
mov ebx 0x3
test esi 0x40060
je r-xdata
mov eax [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov edx [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov edx [ ebx + 0x8 ]
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
call sub_40c4c0
mov esi eax
call sub_408f40
mov [ esi + 0x8 ] 0x9
mov [ esi ] 0x1
call sub_40c4c0
mov esi eax
call sub_408f40
mov [ esi ] 0x1
jmp r-xdata
call sub_40c4c0
mov esi eax
call sub_408f40
mov [ esi ] 0x0
call sub_40c4c0
mov esi eax
call sub_408f40
mov [ esi ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov eax ebx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
mov [ ebp + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov eax ebx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
add esp 0x8
test al al
je r-xdata
jmp r-xdata
test eax 0x40060
je r-xdata
fld1
fstp [ ebp - 0xc ]
jmp r-xdata
cmp ecx 0x2
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ eax + 0x10 ]
cmp ecx 0x2
je r-xdata
mov edx [ edx + 0x10 ]
jmp r-xdata
cmp ecx 0x2
jne r-xdata
mov edx [ ebx + 0x8 ]
mov edi [ edx + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov eax ebx
call sub_40c4c0
mov ecx eax
mov eax esi
call sub_40cb00
test al al
je r-xdata
mov edx [ ebx + 0x8 ]
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi [ ebx + 0x8 ]
mov edi ebx
call sub_40b910
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi ebx
mov [ esi + 0x8 ] 0x9
call sub_40b910
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp + 0x8 ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
test esi 0x204
je r-xdata
test esi 0x701f8
je r-xdata
mov eax edi
call sub_40d0b0
mov esi eax
call sub_408f40
fld [ ebp - 0xc ]
fstp [ esi ]
mov [ esi + 0x8 ] ebx
lea esi [ ebp - 0x1c ]
call sub_408f40
jmp r-xdata
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov ecx [ ebx + 0x8 ]
jne r-xdata
cmp [ ebx + 0xd ] 0x0
mov ecx [ ebx + 0x8 ]
je r-xdata
mov ecx [ ebx ]
mov eax [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov esi [ ebx ]
mov [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40c4c0
push eax
call sub_4530c9
jmp r-xdata
mov eax ebx
call sub_40c4c0
mov esi eax
call sub_408f40
mov [ esi + 0x8 ] 0x9
mov [ esi ] 0x1
test eax 0x204
je r-xdata
test eax 0x701f8
je r-xdata
test esi 0x100000
je r-xdata
call sub_40bb80
mov edi ebx
call sub_40b910
mov edx [ ecx + 0x10 ]
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi [ ecx + 0x10 ]
mov ecx [ ecx + 0x10 ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
push edx
call sub_40bb00
mov edi ebx
call sub_40b910
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax + 0x10 ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov edx [ ebx + 0x8 ]
mov esi [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x10 ]
mov esi [ ecx + 0x10 ]
jmp r-xdata
mov edi ebx
call sub_40b910
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test eax 0x10038
je r-xdata
test esi 0x701f8
je r-xdata
mov eax edi
call sub_40d0b0
mov ecx eax
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_416370
fld1
add esp 0x8
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
test esi 0x10038
test esi 0x10000
je r-xdata
push ecx
call sub_40b510
mov edi ebx
call sub_40b910
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40bd20
mov edi ebx
call sub_40b910
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
call sub_40baa0
sub esp 0x8
mov eax edi
fstp [ esp ]
call sub_40d0b0
mov ecx eax
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259eb
fstp [ ebp - 0xc ]
jmp r-xdata
test esi 0xffff0000
je r-xdata
test eax 0x200
jne r-xdata
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
test esi 0x200
je r-xdata
fldz
fstp [ ebp - 0xc ]
jmp r-xdata
fld [ rw-data ]
fstp [ ebp - 0xc ]
jmp r-xdata
fldz
fstp [ ebp - 0xc ]
test al 0x20
je r-xdata
fld [ rw-data ]
fst [ ebp - 0xc ]
test al 0x20
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40baa0
sub esp 0x8
mov eax edi
fstp [ esp ]
call sub_40d0b0
mov ecx eax
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259c8
sub esp 0x8
fstp [ esp ]
call sub_4259eb
fstp [ ebp - 0xc ]
test esi 0x100000
je r-xdata
test esi 0x10038
je r-xdata
test esi 0x100000
je r-xdata
fld [ rw-data ]
fmul [ r--data ]
fstp [ ebp - 0xc ]
jmp r-xdata
test esi 0x200
jmp r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
jmp r-xdata
fstp st0
fchs
fstp [ ebp - 0xc ]
jmp r-xdata
lea esi [ ebp - 0x1c ]
call sub_408f40
fld [ r--data ]
mov ecx esi
fstp [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ebx
call sub_40baa0
fmul [ ebp - 0xc ]
fstp [ ebp - 0xc ]
jmp r-xdata
fldz
fstp [ ebp - 0xc ]
jmp r-xdata
test esi 0x10000
jne r-xdata
je r-xdata
fld [ rw-data ]
fchs
fstp [ ebp - 0xc ]
jmp r-xdata
sub_40b910
cmp [ edi + 0x4 ] 0x1
je r-xdata
dec [ edi + 0x4 ]
retn
cmp [ edi + 0xd ] 0x0
push esi
jne r-xdata
mov esi [ edi + 0x8 ]
push ebx
mov ebx [ esi + 0x10 ]
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov [ edi + 0x8 ] ebx
mov [ edi + 0xd ] 0x0
pop ebx
jmp r-xdata
call sub_408f40
push esi
call sub_4111dc
add esp 0x4
mov eax [ edi + 0x8 ]
mov esi [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0xd ] 0x1
pop esi
dec [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
mov [ edi + 0xd ] 0x0
pop esi
retn
push eax
call sub_44b911
sub_40b960
push esi
mov esi eax
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax ebx
pop esi
retn
jmp [ eax * 4 + r-xdata ]
fld [ esi ]
mov eax ebx
fstp [ ebx ]
pop esi
retn
mov cl [ esi ]
mov [ ebx ] cl
mov eax ebx
pop esi
retn
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
pop esi
retn
mov ecx [ esi ]
mov [ ebx ] ecx
mov eax ebx
pop esi
retn
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov eax ebx
pop esi
retn
mov esi [ esi + 0xc ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov esi [ esi + 0xc ]
mov [ eax + 0xc ] esi
inc [ esi ]
mov [ ebx + 0xc ] eax
mov eax ebx
pop esi
retn
xor eax eax
mov esi [ esi ]
push edi
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
pop edi
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
pop esi
retn
mov edx [ esi ]
push edx
push eax
call sub_44b8a3
mov [ ebx ] eax
mov eax ebx
pop esi
retn
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
mov eax ebx
pop esi
retn
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax ]
mov ecx [ esi ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410e60
add esp 0x10
mov eax ebx
pop esi
retn
mov ecx [ esi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
mov eax ebx
pop esi
retn
mov eax [ eax + 0x4 ]
inc [ eax ]
mov eax ebx
pop esi
retn
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
mov eax ebx
pop esi
retn
sub_40ba10
push ebp
mov ebp esp
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_40b960
pop ebx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop ebp
retn 0x4
sub_40baa0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
sub esp 0x8
cmp eax 0x1
jne r-xdata
sub eax 0x2
cmp eax 0x8
ja r-xdata
fild [ ecx ]
mov esp ebp
pop ebp
retn
fldz
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_40bad0 ]
fld [ ecx ]
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
fild [ ecx ]
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
fild [ edx + 0x4 ]
mov esp ebp
pop ebp
retn
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_413bed
mov esp ebp
pop ebp
retn
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
fld1
mov esp ebp
pop ebp
retn
push 0x8
lea ecx [ ebp - 0x8 ]
push ecx
add eax 0x4
push eax
call sub_432cc2
fild [ ebp - 0x8 ]
add esp 0xc
mov esp ebp
pop ebp
retn
cmp ecx 0x58
jne r-xdata
sub_40bb00
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi eax
mov eax [ esi + 0x8 ]
cmp eax 0x1
jne r-xdata
lea ecx [ eax - 0x2 ]
cmp ecx 0x9
ja r-xdata
cmp eax 0x3
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
movzx ecx [ ecx + lookup_table_40bb74 ]
jmp [ ecx * 4 + jump_table_40bb68 ]
mov ecx [ ebp + 0x8 ]
call sub_40baa0
fdivr [ esi ]
fstp [ esi ]
mov ecx esi
call sub_40baa0
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
push eax
call sub_4431ad
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bb80
push ebx
push edi
mov edi eax
mov eax [ esi + 0x8 ]
cmp eax 0x1
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0xc ]
pop edi
pop ebx
test eax eax
jne r-xdata
movzx eax [ eax + lookup_table_40bc00 ]
jmp [ eax * 4 + jump_table_40bbf0 ]
cmp eax 0x2
jne r-xdata
mov eax [ esi ]
mov edx [ edi ]
mov ecx eax
imul ecx edx
imul edx
mov edi eax
mov eax ecx
mov ebx edx
cdq
cmp eax edi
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0xc ] 0x0
mov eax esi
retn
mov eax esi
retn
mov ecx edi
call sub_40baa0
fmul [ esi ]
fstp [ esi ]
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
push esi
call sub_452f05
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ edi ]
cdq
push ecx
push edx
push eax
call sub_420460
mov [ esi + 0x8 ] 0x2
mov [ esi + 0x4 ] edx
mov [ esi ] eax
jmp r-xdata
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
cmp edx ebx
jne r-xdata
push edi
call sub_443006
mov ecx [ esi + 0x4 ]
push ecx
mov ecx [ esi ]
push ecx
push edx
push eax
call sub_420460
mov [ esi + 0x4 ] edx
mov [ esi ] eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov [ esi ] ecx
sub_40bc10
cmp [ esi + 0x4 ] 0x0
push ebx
jne r-xdata
cmp [ esi + 0xd ] 0x0
je r-xdata
mov ebx [ esi ]
push edi
call sub_408e80
inc [ esi + 0x4 ]
pop ebx
retn
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esi + 0x8 ]
push edi
call sub_408e80
inc [ esi + 0x4 ]
mov [ esi + 0xd ] 0x0
pop ebx
retn
xor ebx ebx
jmp r-xdata
mov ebx eax
mov eax edi
call sub_40b960
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov [ ebx + 0x10 ] eax
jmp r-xdata
mov [ ebx + 0x10 ] eax
inc [ esi + 0x4 ]
mov [ esi + 0x8 ] ebx
pop ebx
retn
sub_40bc70
push esi
mov esi ecx
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_4115d7
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn
sub_40bcc0
mov edx [ ecx + 0x4 ]
push esi
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
retn
cmp eax edx
jb r-xdata
mov eax 0x1
pop esi
retn
mov eax [ esi ]
mov ecx [ ecx ]
pop esi
jmp sub_40d260
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov ecx [ ecx ]
mov edx eax
mov eax [ esi ]
movzx eax [ eax ]
cmp ax [ ecx ]
pop esi
sbb eax eax
and eax 0xfffffffe
inc eax
retn
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
sub_40bd20
push ecx
mov eax [ esi + 0x8 ]
cmp eax 0x4
jne r-xdata
dec eax
cmp eax 0xa
ja r-xdata
cmp [ edi + 0x8 ] 0x4
jne r-xdata
pop ecx
retn
movzx eax [ eax + lookup_table_4281e8 ]
jmp [ eax * 4 + jump_table_4281dc ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov ecx [ edi + 0xc ]
mov eax [ esi + 0xc ]
push ecx
call sub_40bd50
cmp [ edi + 0x8 ] 0xb
jne r-xdata
push esi
call sub_45e987
jmp r-xdata
push edi
call sub_4531b1
jmp r-xdata
push esi
mov eax edi
call sub_40b510
pop ecx
retn
sub_40bd50
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_44cde9
push eax
call sub_40e0a0
lea ecx [ ebp - 0x14 ]
call sub_402250
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
or eax 0xffffffff
xor ebx ebx
mov ecx esi
call sub_40bd80
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40bd80
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi eax
mov esi ecx
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp ebx eax
jae r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebx + edi ]
cmp ecx eax
jbe r-xdata
sub eax ebx
mov edi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
jmp r-xdata
dec [ eax ]
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
add eax edi
call sub_402f00
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov edx [ esi + 0x4 ]
mov [ esi + 0xc ] eax
lea eax [ edx + edi + 0x1 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp - 0x4 ] eax
call sub_410e60
mov edx [ ebp - 0x4 ]
add esp 0x10
mov [ esi ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ esi + 0x4 ]
lea eax [ edi + edi ]
push eax
lea eax [ edx + ebx * 2 ]
mov edx [ esi ]
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_410e60
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
add esp 0xc
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_40be70
cmp [ esi + 0x9 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x4 ]
push eax
call sub_4111dc
dec [ esi ]
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
pop edi
retn
dec [ esi ]
mov [ esi + 0x9 ] 0x1
pop edi
retn
sub_40bec0
push ebp
mov ebp esp
push ecx
inc [ eax ]
mov ecx [ eax ]
push edi
xor edi edi
mov [ edx ] ecx
lea ecx [ ecx ]
sub edx 0x47
je r-xdata
inc ecx
mov [ eax ] ecx
jmp r-xdata
inc edi
inc ecx
mov [ eax ] ecx
jmp r-xdata
dec edx
jne r-xdata
mov ecx [ eax ]
mov edx [ esi + 0x4 ]
mov edx [ edx + ecx * 4 ]
movsx edx [ edx + 0x8 ]
cmp edx 0x47
jge r-xdata
sub edx 0x37
jne r-xdata
test edi edi
jne r-xdata
jmp r-xdata
dec edi
inc ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
inc ecx
mov [ eax ] ecx
xor eax eax
mov eax ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x6f
push ecx
call sub_45e737
mov eax 0x1
jmp r-xdata
pop edi
pop ecx
pop ebp
retn 0x8
sub_40bf20
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
mov esi 0x1
push edi
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x8 ] esi
call sub_40db90
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
sub eax esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x70 ] eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x33
mov [ ebp - 0x74 ] 0x3
jne r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x94
push ecx
call sub_45e737
jmp r-xdata
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
add [ eax ] esi
add [ ebp - 0x8 ] esi
mov [ ebp - 0x40 ] edx
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] ecx
push edx
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
lea esi [ ebp - 0x44 ]
call sub_40c2c0
mov esi [ ebp - 0xc ]
test esi esi
jne r-xdata
lea esi [ ebp - 0x34 ]
call sub_408f40
lea esi [ ebp - 0x24 ]
call sub_408f40
lea edx [ ebp - 0x74 ]
push edx
call sub_452670
jmp r-xdata
test [ ebp - 0x10 ] 0x100
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_408f40
mov eax 0x1
mov edx esi
xor ecx ecx
lea esi [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] 0x0
call sub_401980
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov ecx 0x1
call sub_40c2c0
mov esi [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x8 ] 0x5
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
mov [ ebp - 0x68 ] esi
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa3
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
mov ecx ebx
call sub_40c4e0
test eax eax
jne r-xdata
cmp [ eax ] 0x11
je r-xdata
inc [ ebp - 0x8 ]
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
call sub_40a780
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_402250
mov esi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
push 0xffffffff
lea edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_40a780
test eax eax
jne r-xdata
movsx edx [ eax + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x94
push eax
call sub_45e737
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ebx esi
call sub_408e80
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_402250
lea esi [ ebp - 0x34 ]
call sub_408f40
lea esi [ ebp - 0x24 ]
call sub_408f40
lea ecx [ ebp - 0x74 ]
push ecx
call sub_452670
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x8
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x94
cmp [ eax ] 0xf
jne r-xdata
cmp eax 0x5
jne r-xdata
lea edx [ ebp - 0x24 ]
push edx
mov ebx esi
call sub_408e80
jmp r-xdata
inc [ ebp - 0x8 ]
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
call sub_40a780
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push r--data
push 0x0
push 0xa9
push esi
call sub_451b42
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_45e951
xor esi esi
lea edx [ ebp - 0x24 ]
call sub_40cfc0
push esi
push edx
call sub_4323e1
test eax eax
jle r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
lea ebx [ ebp - 0x64 ]
call sub_408e80
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea esi [ ebp - 0x34 ]
call sub_408f40
mov esi [ ebp - 0xc ]
mov eax 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xa9
push esi
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov eax r--data
call sub_40e710
lea esi [ ebp - 0x64 ]
call sub_408f40
mov ebx 0x1
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x64 ] ebx
call sub_408f40
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x54 ] 0xffffffff
jmp r-xdata
push 0x1
push edx
call sub_4323e1
test eax eax
jle r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x72
push edx
call sub_45e737
lea ecx [ ebp - 0x44 ]
call sub_402250
lea esi [ ebp - 0x34 ]
call sub_408f40
lea esi [ ebp - 0x24 ]
call sub_408f40
lea eax [ ebp - 0x74 ]
push eax
call sub_452670
jmp r-xdata
xor ebx ebx
xor dl dl
mov edi edi
cmp [ eax ] 0x10
jne r-xdata
lea esi [ ebp - 0x54 ]
call sub_408f40
mov eax 0x1
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] eax
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
call sub_45e737
mov esi [ ebp - 0xc ]
push esi
push 0x1
mov edi edx
call sub_40cf00
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40c650
cmp eax 0x1
je r-xdata
test eax eax
jle r-xdata
inc [ ebp - 0x8 ]
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
call sub_40a780
test eax eax
jne r-xdata
push eax
call sub_452f05
jmp r-xdata
cmp [ ebp - 0x5c ] esi
je r-xdata
mov edi [ ebp + 0x10 ]
push esi
push esi
call sub_40cf00
mov ebx [ ebp - 0xc ]
add esp 0x8
push eax
call sub_408e80
push edi
lea ebx [ ebp - 0x64 ]
call sub_408e80
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
cmp [ esi + 0x8 ] 0x8
je r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ebx [ ebp - 0x54 ]
call sub_408e80
jmp r-xdata
lea ecx [ ebp - 0x64 ]
push ecx
call sub_452f05
jmp r-xdata
cmp [ ebp - 0x5c ] 0x5
je r-xdata
cmp [ ebp - 0x5c ] 0x5
je r-xdata
test dl dl
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi 0x4
cmp [ eax + 0x8 ] esi
je r-xdata
lea esi [ ebp - 0x54 ]
call sub_408f40
mov ebx [ ebp + 0x8 ]
add ebx 0x16c
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x4c ] 0x1
mov [ ebp - 0x54 ] 0x0
call sub_40ceb0
mov edx [ ebp - 0x70 ]
inc edx
mov [ edi ] edx
jmp r-xdata
lea esi [ ebp - 0x34 ]
call sub_408f40
xor ebx ebx
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x34 ] ebx
call sub_408f40
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] ebx
mov ebx [ ebp - 0xc ]
push ecx
push ebx
push esi
mov [ ebp - 0x1c ] 0x1
call sub_46c84c
lea edx [ ebp - 0x34 ]
push edx
call sub_432416
test al al
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_408f40
fldz
lea eax [ ebp - 0x54 ]
fstp [ ebp - 0x24 ]
mov [ ebp - 0x1c ] 0x3
call sub_40c670
test al al
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_402250
lea esi [ ebp - 0x34 ]
call sub_408f40
lea esi [ ebp - 0x24 ]
call sub_408f40
lea esi [ ebp - 0x54 ]
call sub_408f40
lea esi [ ebp - 0x64 ]
call sub_408f40
mov eax r--data
call sub_40e710
lea esi [ ebp - 0x34 ]
call sub_408f40
xor ebx ebx
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x34 ] ebx
call sub_408f40
mov eax [ ebp - 0x6c ]
inc eax
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x24 ] ebx
mov [ edi ] eax
lea edx [ ebp - 0x24 ]
push edx
call sub_408e80
lea eax [ ebp - 0x34 ]
push eax
lea ebx [ ebp - 0x54 ]
call sub_408e80
lea ebx [ esi + 0x16c ]
lea eax [ ebp - 0x74 ]
call sub_40ceb0
mov ecx [ ebp - 0x70 ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x64 ]
push edx
push eax
call sub_467c5c
add esp 0x8
test al al
je r-xdata
mov esi [ ebp - 0xc ]
lea eax [ ebp - 0x64 ]
call sub_40c670
test al al
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + 0x1 ]
mov [ edi ] ecx
cmp eax [ rw-data ]
jg r-xdata
mov eax [ eax ]
sub eax 0xd
je r-xdata
mov edx [ ebp - 0x6c ]
inc edx
mov [ edi ] edx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0x16c
lea eax [ ebp - 0x74 ]
call sub_40ceb0
mov ecx [ ebp - 0x70 ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
mov ecx [ ebp - 0x6c ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0x16c
lea eax [ ebp - 0x74 ]
call sub_40ceb0
mov eax [ ebp - 0x70 ]
inc eax
mov [ edi ] eax
inc ebx
jmp r-xdata
dec eax
jne r-xdata
test ebx ebx
jne r-xdata
dec ebx
jmp r-xdata
dec ecx
mov dl 0x1
mov [ ebp - 0x6c ] ecx
jmp r-xdata
sub_40c1f0
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi eax
mov edx [ edi ]
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + edx * 4 ]
mov esi [ edx ]
lea ecx [ ebp - 0x8 ]
push ecx
xor ecx ecx
call sub_40c2c0
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x79
push ecx
call sub_45e737
inc [ edi ]
cmp [ esi + 0x8 ] 0x5
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov eax edi
mov ecx ebx
call sub_40c4e0
test eax eax
jne r-xdata
sub esp 0x10
mov eax esi
mov ebx esp
call sub_40b960
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push edi
push esi
call sub_47e250
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov ecx [ edi ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov ebx [ ebp + 0x8 ]
push ecx
push 0xaa
push ebx
call sub_45e737
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
push esi
call sub_408e80
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xfd ] 0x0
jne r-xdata
mov edx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
push ebx
call sub_443833
test al al
je r-xdata
cmp [ edi + 0xfe ] 0x0
jne r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7c
push edx
call sub_45e737
mov eax 0x1
jmp r-xdata
mov eax ebx
lea ebx [ ebp - 0x1c ]
call sub_40b960
cmp [ edi + 0xfd ] 0x0
je r-xdata
cmp [ edi + 0xfe ] 0x0
je r-xdata
push ebx
call sub_457f66
push ebx
call sub_45340c
push eax
call sub_4111c1
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
lea ecx [ ebp - 0x1c ]
push ecx
call sub_408e80
lea esi [ ebp - 0x1c ]
call sub_408f40
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
push edi
call sub_472f47
lea eax [ ebp - 0x1c ]
push eax
call sub_45340c
push eax
call sub_4111c1
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_408e80
push esi
lea ebx [ ebp - 0x1c ]
call sub_408e80
sub_40c2c0
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
cmp [ rw-data ] ecx
jne r-xdata
dec ecx
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
push esi
push rw-data
call sub_432929
push eax
call sub_4534e3
test eax eax
jne r-xdata
push rw-data
push esi
call sub_403ea0
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push esi
push rw-data
call sub_4534e3
jmp r-xdata
sub ecx 0xe
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push esi
push rw-data
call sub_432929
push eax
call sub_4534e3
jmp r-xdata
push rw-data
push esi
call sub_403ea0
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push esi
push rw-data
call sub_4534e3
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov eax 0x1
pop ebp
retn 0x8
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
and ecx 0xff00
mov [ edx ] ecx
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0xc ]
and edx 0xff00
mov [ ecx ] edx
jmp r-xdata
mov eax [ eax + 0x14 ]
sub_40c360
push ebx
push esi
xor ebx ebx
or eax 0xffffffff
push edi
mov edi r--data
mov esi rw-data
mov [ rw-data ] ebx
mov [ rw-data ] 0x1010101
mov [ rw-data ] bx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x9
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ebx
call sub_401b10
mov edi r--data
mov esi rw-data
call sub_401b10
mov ecx rw-data
call sub_40bc70
mov ecx rw-data
call sub_40bc70
mov ecx rw-data
call sub_40bc70
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
inc [ eax ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
inc [ eax ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov esi rw-data
lea edi [ ebx + 0xe ]
mov ecx esi
call sub_40bc70
add esi 0x10
dec edi
jns r-xdata
pop edi
pop esi
mov [ rw-data ] bx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0xffffffff
mov eax rw-data
pop ebx
retn
sub_40c4c0
cmp [ eax + 0x4 ] 0x2
jne r-xdata
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ eax ]
retn
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x10 ]
mov eax [ ecx + 0x10 ]
retn
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x10 ]
retn
sub_40c4e0
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
mov esi eax
mov eax [ esi ]
mov edi ecx
mov ecx [ edi + 0x4 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] ebx
mov edx [ ecx + eax * 4 - 0x4 ]
lea eax [ ecx + eax * 4 ]
movsx ecx [ edx + 0xa ]
mov edx [ eax ]
cmp [ edx + 0x8 ] 0x4e
mov [ ebp - 0x1c ] ecx
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ esi ]
cmp [ edi + 0x8 ] 0x5
jne r-xdata
jmp r-xdata
mov eax edi
call sub_40e950
jmp r-xdata
mov eax [ edi ]
xor edi edi
mov [ eax + 0x210 ] edi
cmp ebx edi
jle r-xdata
inc [ esi ]
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x18 ] eax
call sub_40a780
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov edi [ esi ]
push 0x0
push edx
call sub_40cf00
add esp 0x8
mov [ esi ] eax
test eax eax
je r-xdata
jmp r-xdata
lea esi [ ebp - 0x14 ]
call sub_408f40
mov eax 0x1
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40c650
test eax eax
js r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x7a
push ecx
jmp r-xdata
lea esi [ ebp - 0x14 ]
call sub_408f40
xor eax eax
mov ecx [ ebp + 0xc ]
mov esi [ ebp + edi * 4 - 0x11c ]
mov edx [ ecx ]
call sub_40cfc0
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7b
push eax
jmp r-xdata
mov eax [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
call sub_45e737
mov esi [ ebp + 0xc ]
mov eax [ edx + eax * 4 - 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7b
push edx
inc eax
lea ecx [ ebp - 0x14 ]
mov [ esi ] eax
call sub_40c650
mov edx [ esi ]
mov [ ebp + ebx * 4 - 0x11c ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
inc ebx
cmp [ ecx + 0x8 ] 0x4e
je r-xdata
sub_40c600
push ebp
mov ebp esp
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ ebp + 0xc ] eax
jb r-xdata
cmp esi 0xffffffff
je r-xdata
sub eax [ ebp + 0xc ]
mov esi eax
mov ecx [ ebp + 0xc ]
add ecx esi
cmp ecx eax
jbe r-xdata
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_4026f0
mov edx [ edi + 0x4 ]
sub edx [ ebp + 0xc ]
mov eax [ edi ]
sub edx esi
lea ecx [ edx + edx + 0x2 ]
mov edx [ ebp + 0xc ]
push ecx
add edx esi
lea ecx [ eax + edx * 2 ]
mov edx [ ebp + 0xc ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_410e60
add esp 0xc
sub [ edi + 0x4 ] esi
pop edi
pop esi
pop ebp
retn 0x8
sub_40c620
call [ timeGetTime@IAT ]
mov ecx eax
sub eax esi
xor edx edx
cmp esi 0x7fffffff
ja r-xdata
cmp ecx 0x7fffffff
jbe r-xdata
cmp ecx 0x7fffffff
ja r-xdata
retn
cdq
retn
cdq
sub_40c650
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
sub esp 0x8
cmp eax 0x1
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4261d5 ]
mov eax [ ecx + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ecx ]
call sub_425a80
mov esp ebp
pop ebp
retn
xor eax eax
cmp [ ecx ] al
setne al
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
cmp [ ecx ] 0x4
jg r-xdata
push eax
call sub_413190
mov esp ebp
pop ebp
retn
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
mov edx [ ecx ]
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ecx + 0x4 ]
push edx
push eax
call sub_432bc3
mov eax [ ebp - 0x8 ]
add esp 0xc
mov esp ebp
pop ebp
retn
push 0x8
lea ecx [ ebp - 0x8 ]
push ecx
add eax 0x4
push eax
call sub_432cc2
mov eax [ ebp - 0x8 ]
add esp 0xc
mov esp ebp
pop ebp
retn
cmp ecx 0x58
jne r-xdata
sub_40c670
push ebp
mov ebp esp
mov ecx [ esi + 0x8 ]
sub esp 0x8
push ebx
push edi
mov edi eax
mov eax [ edi + 0x8 ]
lea eax [ eax + eax * 2 ]
lea edx [ ecx + eax * 4 ]
mov eax [ edx * 4 + rw-data ]
cmp eax 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
mov ecx edi
call sub_40c650
mov ecx esi
mov edi eax
call sub_40c650
xor ecx ecx
cmp edi eax
setl al
sub eax 0x2
cmp eax 0x7
ja r-xdata
mov ecx edi
call sub_40baa0
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_40baa0
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x41
je r-xdata
xor al al
jmp r-xdata
jmp [ eax * 4 + jump_table_427100 ]
mov eax 0x1
jmp r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push esi
call sub_4533eb
push eax
push edi
call sub_4533eb
push eax
call sub_445bc3
xor ecx ecx
test eax eax
sets al
jmp r-xdata
push edi
call sub_443006
push esi
mov ebx eax
mov edi edx
call sub_443006
cmp edi edx
jg r-xdata
push edi
call sub_44b3ac
push esi
mov edi eax
call sub_44b3ac
cmp edi eax
sbb eax eax
neg eax
jmp r-xdata
jl r-xdata
cmp ebx eax
jae r-xdata
sub_40c6e0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx 0x1
cmp [ edi + 0x8 ] ebx
je r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ r--data ]
fstp [ esp ]
call sub_4259eb
mov ecx [ edi + 0x4 ]
fstp [ ebp - 0x8 ]
mov ecx [ ecx ]
call sub_40baa0
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40baa0
fmul [ ebp - 0x8 ]
sub esp 0x8
fsub [ r--data ]
fstp [ esp ]
call sub_425a36
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
call sub_40baa0
fmul [ ebp - 0x8 ]
sub esp 0x8
fadd [ r--data ]
fstp [ esp ]
call sub_425a0e
fdiv [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
cmp [ edi + 0x8 ] ebx
je r-xdata
push esi
call sub_443006
mov edi eax
mov ebx edx
call sub_408f40
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40c790
push ebp
mov ebp esp
push ecx
cmp [ edi + 0x9 ] 0x0
push esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x30 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_45268e
mov [ edi + 0x9 ] 0x1
jmp r-xdata
push ebx
mov ebx [ edi + 0x4 ]
mov eax [ ebx + 0x30 ]
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
dec [ edi ]
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ edi + 0x9 ] 0x0
pop ebx
lea esi [ ebx + 0x20 ]
call sub_408f40
lea esi [ ebx + 0x10 ]
call sub_408f40
push ebx
call sub_4111dc
add esp 0x4
sub_40c7f0
push ebp
mov ebp esp
sub esp 0x3c
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bx
call sub_40db10
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ ecx + rw-data ] r--data
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x49c ]
mov [ eax + rw-data ] ecx
mov esi rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_410ab0
mov ecx rw-data
call sub_40bc70
mov ecx rw-data
call sub_40bc70
mov ecx rw-data
call sub_40bc70
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40bc70
mov edi 0x1
mov ecx rw-data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ebx
call sub_40bc70
mov esi rw-data
call sub_40d2c0
mov esi rw-data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40d0d0
mov ecx rw-data
call sub_40bc70
mov [ rw-data ] ebx
push ebx
push rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_404170
lea eax [ ebp - 0x3c ]
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ebx
call sub_410b20
mov edx [ rw-data ]
mov ebx [ edx + 0x4 ]
add ebx rw-data
call sub_40e310
lea esi [ ebp - 0x1c ]
call sub_408f40
lea esi [ ebp - 0x3c ]
call sub_408f40
xor ebx ebx
push 0xfffffff6
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bx
mov [ rw-data ] bl
mov [ rw-data ] ebx
call [ GetStdHandle@IAT ]
cmp eax ebx
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] ebx
mov esi eax
push esi
call sub_4432c0
add esp 0x4
push eax
mov [ rw-data ] eax
call sub_44b6ab
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov eax 0xa
pop edi
mov ecx 0xfa
pop esi
mov [ rw-data ] bx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x64
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn
sub_40cb00
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
mov edi eax
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov ecx [ ecx * 4 + rw-data ]
dec ecx
cmp ecx 0xa
ja r-xdata
xor al al
jmp r-xdata
jmp [ ecx * 4 + jump_table_40cb98 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_40c650
mov ecx edi
mov esi eax
call sub_40c650
cmp esi eax
jne r-xdata
cmp edx 0x4
jne r-xdata
push esi
call sub_443006
push edi
mov esi eax
mov ebx edx
call sub_443006
cmp esi eax
jne r-xdata
mov ecx esi
call sub_40baa0
fstp [ ebp - 0x8 ]
mov ecx edi
call sub_40baa0
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
push esi
call sub_44b3ac
push edi
mov esi eax
call sub_44b3ac
xor ecx ecx
cmp esi eax
sete al
jmp r-xdata
push esi
call sub_442f4c
push edi
mov bl al
call sub_442f4c
xor ecx ecx
cmp bl al
sete al
jmp r-xdata
push esi
call sub_442fec
push edi
mov edx eax
call sub_442fec
xor ecx ecx
cmp edx eax
sete al
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
cmp eax 0xb
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
cmp [ edi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x4
mov edi [ edi + 0xc ]
jne r-xdata
cmp ebx edx
jne r-xdata
jmp r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
mov eax esi
lea ebx [ ebp - 0x20 ]
call sub_40b960
mov eax edi
lea ebx [ ebp - 0x10 ]
call sub_40b960
lea eax [ ebp - 0x20 ]
push eax
call sub_467ac4
push ebx
call sub_467ac4
lea edx [ ebp - 0x20 ]
push edx
call sub_443106
push ebx
mov esi eax
call sub_443106
cmp esi eax
je r-xdata
cmp edx eax
jne r-xdata
push edi
call sub_4531b1
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov esi [ esi + 0xc ]
mov ecx [ edi + 0x4 ]
mov edi [ edi ]
mov edx [ esi ]
push edi
push edx
mov edx [ esi + 0x4 ]
xor eax eax
call sub_40e790
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
push esi
call sub_4323c5
add esp 0x8
test al al
je r-xdata
push esi
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
call sub_4680ed
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
push edx
call sub_4680ed
push eax
call sub_4119e3
add esp 0xc
test eax eax
lea esi [ ebp - 0x10 ]
sete bl
call sub_408f40
lea esi [ ebp - 0x20 ]
call sub_408f40
mov al bl
jmp r-xdata
mov esi ebx
call sub_408f40
lea esi [ ebp - 0x20 ]
call sub_408f40
push esi
call sub_443106
push edi
mov ebx eax
call sub_443106
cmp ebx eax
jne r-xdata
push esi
call sub_4531b1
jmp r-xdata
mov eax 0x1
jmp r-xdata
push esi
call sub_443106
push eax
push ecx
push edi
call sub_4680ed
add esp 0x4
push eax
push esi
call sub_4680ed
push eax
call sub_4119e3
add esp 0xc
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_40cbd0
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov edi ecx
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
fldz
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
jmp r-xdata
mov edx [ ebp + 0x8 ]
fild [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
fstp [ ebp - 0x10 ]
call sub_40baa0
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
call sub_40dbd0
fdivr [ ebp - 0x10 ]
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x10 ]
call sub_408f40
fld [ ebp - 0x10 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40cc30
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
push ebx
mov [ esi + 0xc ] eax
lea eax [ edi + 0x10 ]
lea ebx [ esi + 0x10 ]
call sub_40b960
lea eax [ edi + 0x20 ]
lea ebx [ esi + 0x20 ]
call sub_40b960
mov eax esi
pop ebx
retn
sub_40cc70
push ebp
mov ebp esp
sub esp 0x14
push esi
xor eax eax
push 0xffffffff
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov [ ebp - 0x8 ] 0x1
call sub_40a780
test eax eax
jne r-xdata
lea esi [ ebp - 0x10 ]
call sub_408f40
mov eax 0x1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40ce70
mov ecx [ ebp + 0xc ]
test al al
setne al
lea esi [ ebp - 0x10 ]
mov [ ecx ] al
call sub_408f40
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40ccd0
push ebp
mov ebp esp
sub esp 0x60
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x5 ]
push eax
push edi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x1
call sub_40cc70
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
movsx eax [ edx + 0xa ]
push eax
push 0xa1
push edi
call sub_45e737
jmp r-xdata
cmp [ edx ] 0x5
jne r-xdata
mov ebx [ ebp + 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ecx + eax * 4 ]
mov edi 0x7f
cmp [ edx + 0x8 ] di
je r-xdata
lea eax [ ebp - 0x5c ]
mov [ ebp + 0xf ] 0x0
mov [ ebp + 0x13 ] 0x0
call sub_40db90
mov eax [ ebx ]
mov dl [ ebp - 0x5 ]
xor esi esi
lea ecx [ eax - 0x1 ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] ecx
test dl dl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edi eax
xor edx edx
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] di
je r-xdata
mov [ ebp - 0xc ] esi
jmp r-xdata
mov eax [ ebx ]
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
cmp eax [ rw-data ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + eax * 4 ]
lea edi [ ebp - 0x28 ]
call sub_402780
mov ecx [ ebp + 0x8 ]
push ebx
push edi
call sub_40e7d0
mov ebx edi
mov [ ebp - 0x28 ] r--data
call sub_40d530
mov eax [ ebp - 0x24 ]
push eax
call sub_4111dc
add esp 0x4
mov edx eax
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ecx + edx * 4 ]
lea edi [ ebp - 0x28 ]
call sub_402780
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov [ ebx ] edi
mov ebx [ ebp + 0x8 ]
add ebx 0x16c
lea eax [ ebp - 0x5c ]
call sub_40ceb0
lea esi [ ebp - 0x3c ]
call sub_408f40
lea esi [ ebp - 0x4c ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp eax esi
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
mov esi eax
mov [ ebp - 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ eax ]
cmp eax 0x8
jne r-xdata
sub eax 0x4
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ esi + 0x8 ] eax
jbe r-xdata
sub eax 0x2
je r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
lea eax [ ecx - 0x1 ]
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x54 ] eax
test dl dl
je r-xdata
mov ecx [ esi + 0x4 ]
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ecx ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ esi + 0x8 ]
jb r-xdata
cmp [ ecx ] 0x5
jne r-xdata
cmp [ ebp + 0xf ] 0x1
je r-xdata
cmp [ ebp - 0xc ] eax
jne r-xdata
mov edi eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x76
push ecx
call sub_45e737
lea edx [ ebp - 0x5c ]
push edx
call sub_452670
jmp r-xdata
mov [ ebp + 0xf ] 0x1
test dl dl
jne r-xdata
cmp [ ebp + 0xf ] 0x1
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
mov edi ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push 0xffffffff
push 0x76
push edx
call sub_45e737
lea eax [ ebp - 0x5c ]
push eax
call sub_452670
jmp r-xdata
test dl dl
jne r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ eax + 0xf4 ] ecx
lea ecx [ ebp - 0x5 ]
push ecx
push eax
lea ecx [ ebp - 0x14 ]
mov edx esi
mov [ ebp - 0x14 ] 0x1
call sub_40cc70
test eax eax
jne r-xdata
lea ecx [ ebp - 0x5c ]
push ecx
call sub_452670
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
dec edx
mov [ ecx + 0xf4 ] edx
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx edx [ eax + 0xa ]
push edx
push 0xa1
push ecx
call sub_45e737
lea eax [ ebp - 0x5c ]
push eax
call sub_452670
jmp r-xdata
cmp [ edx ] 0x5
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
dec edx
mov [ ecx + 0xf4 ] edx
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx edx [ eax + 0xa ]
push edx
push 0x72
push ecx
call sub_45e737
lea eax [ ebp - 0x5c ]
push eax
call sub_452670
jmp r-xdata
mov dl [ ebp - 0x5 ]
test dl dl
je r-xdata
mov edi [ ebx ]
jmp r-xdata
sub_40ce70
mov eax [ ecx + 0x8 ]
cmp eax 0x9
jne r-xdata
dec eax
cmp eax 0xa
ja r-xdata
mov al [ ecx ]
retn
xor al al
retn
jmp [ eax * 4 + jump_table_426111 ]
cmp [ ecx ] 0x0
setne al
retn
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
jne r-xdata
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ecx + 0xc ]
push ecx
call sub_436565
xor ecx ecx
test al al
sete al
retn
xor eax eax
cmp [ ecx ] eax
setne al
retn
mov edx [ ecx ]
cmp [ edx ] 0x0
setne al
retn
mov al 0x1
retn
sub_40ce80
push ebp
mov ebp esp
call sub_40ce70
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
call sub_40ce70
test al al
je r-xdata
mov eax 0x1
pop ebp
retn
sub_40ceb0
cmp [ ebx + 0x9 ] 0x0
push edi
mov edi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push edi
push eax
call sub_473210
inc [ ebx ]
mov [ ebx + 0x9 ] 0x0
pop edi
retn
push esi
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
xor esi esi
mov [ esi + 0x30 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
mov esi eax
call sub_40cc30
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x30 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
sub_40cf00
push ebp
mov ebp esp
push ecx
cmp [ edi + 0x8 ] 0x5
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
je r-xdata
mov esi edi
call sub_40e810
jmp r-xdata
test ebx ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jne r-xdata
mov eax edi
call sub_40cff0
test eax eax
js r-xdata
mov eax edi
call sub_40e950
jmp r-xdata
mov eax [ edi ]
mov [ eax + 0x210 ] 0x0
test ebx ebx
jle r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
mov esi eax
cmp [ edx + esi * 4 ] 0x0
je r-xdata
lea eax [ ebp + 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ecx ]
mov eax [ ecx + esi * 4 ]
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
xor eax eax
mov [ edx + esi * 4 ] eax
mov eax [ edi ]
mov ecx [ eax ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
call sub_40d290
mov ecx [ edi ]
mov edx [ ecx ]
mov [ edx + esi * 4 ] eax
mov eax [ edi ]
mov ecx [ eax ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add eax 0x4
mov edx edi
mov [ ebp - 0x4 ] eax
call sub_40cfc0
dec ebx
je r-xdata
sub_40cfc0
cmp [ edx + 0x8 ] 0x5
jne r-xdata
xor al al
retn
mov eax [ edx ]
mov ecx [ eax + 0x210 ]
cmp ecx 0x40
jge r-xdata
mov [ eax + ecx * 4 + 0x10c ] esi
mov eax [ edx ]
inc [ eax + 0x210 ]
mov al 0x1
retn
sub_40cff0
push edi
mov edi eax
cmp [ edi + 0x8 ] 0x5
jne r-xdata
or eax 0xffffffff
pop edi
retn
call sub_40d040
test al al
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x20c ]
push esi
xor esi esi
test edx edx
jle r-xdata
mov eax esi
pop esi
pop edi
retn
mov eax [ ecx + 0x8 ]
add ecx 0x10c
mov edi edx
lea esp [ esp ]
cdq
idiv [ ecx - 0x100 ]
mov edx [ ecx ]
add ecx 0x4
imul edx eax
add esi edx
dec edi
jne r-xdata
sub_40d040
mov ecx [ eax ]
mov eax [ ecx + 0x20c ]
cmp eax [ ecx + 0x210 ]
jne r-xdata
xor al al
retn
push esi
test eax eax
jle r-xdata
mov al 0x1
pop esi
retn
xor edx edx
add ecx 0x10c
lea ecx [ ecx ]
xor al al
pop esi
retn
cmp esi [ ecx - 0x100 ]
jge r-xdata
inc edx
add ecx 0x4
cmp edx eax
jl r-xdata
mov esi [ ecx ]
test esi esi
js r-xdata
sub_40d0d0
push edi
lea eax [ esi + 0x8 ]
mov [ esi ] 0x0
call sub_410620
lea ecx [ esi + 0x8c ]
call sub_40bc70
lea ecx [ esi + 0x9c ]
call sub_40bc70
lea ecx [ esi + 0xac ]
call sub_40bc70
lea ecx [ esi + 0xbc ]
call sub_40bc70
lea edi [ esi + 0xec ]
call sub_40d330
push 0x4
call sub_4115d7
add esp 0x4
pop edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
push r--data
mov [ esi ] eax
call [ RegisterWindowMessageW@IAT ]
mov [ esi + 0x4 ] eax
mov eax esi
retn
sub_40d150
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax [ ecx + 0x64 ]
jge r-xdata
xor eax eax
pop ebp
retn 0x4
mov [ ecx + 0x28 ] 0xffffffff
jmp r-xdata
mov edx [ ecx + 0x60 ]
lea eax [ edx + eax * 4 ]
mov edx [ eax ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ edx ]
cmp [ edx + 0x18 ] 0x0
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ edx ]
push ecx
mov ecx [ edx + 0x18 ]
push ecx
push eax
call [ TranslateAcceleratorW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x4
sub_40d170
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x4
push esi
mov esi [ ebx + 0x64 ]
push edi
test esi esi
jne r-xdata
xor edi edi
xor eax eax
inc edi
cmp edi esi
jb r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x1d0 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x60 ]
mov eax [ ecx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x60 ]
mov eax [ eax + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ edx ]
push ecx
push eax
call [ IsDialogMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_430c46
movzx eax ax
add esp 0x4
cmp ax [ rw-data ]
je r-xdata
cmp ax [ rw-data ]
jne r-xdata
sub_40d1a0
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
mov esi eax
call sub_4111c1
mov edi eax
mov eax [ esi + 0xc ]
add esp 0x4
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
call sub_4013a0
mov eax [ esi + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
push ecx
call sub_446618
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp - 0x4 ] eax
call sub_410e60
mov edx [ ebp - 0x4 ]
add esp 0x10
mov [ esi ] edx
jmp r-xdata
mov eax [ esi + 0x4 ]
add eax edi
call sub_402f00
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
lea eax [ edi + edi ]
push eax
lea eax [ edx + ecx * 2 ]
push ebx
push eax
call sub_410e60
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
add esp 0xc
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_40d200
push ebx
push esi
mov esi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
call sub_4013a0
push edi
call sub_4111c1
add esp 0x4
mov ecx [ esi + 0x4 ]
lea edx [ ecx + eax + 0x1 ]
push edx
call sub_446618
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
mov edx [ esi ]
push edx
push ebx
call sub_410e60
add esp 0x10
mov [ esi ] ebx
jmp r-xdata
mov ebx edi
mov eax esi
call sub_40d1a0
pop esi
pop ebx
retn
sub_40d220
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov edi ecx
call [ QueryPerformanceCounter@IAT ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_408f40
fldz
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
jmp r-xdata
fild [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
call sub_408f40
fld [ ebp - 0x10 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40d260
push esi
test edx edx
je r-xdata
xor eax eax
pop esi
retn
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
pop esi
sbb eax eax
and eax 0xfffffffe
inc eax
retn
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
sub_40d290
push 0x10
mov [ ebx + 0x8 ] 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
push edi
mov edi r--data
mov esi eax
call sub_401b10
pop edi
pop esi
mov [ ebx + 0xc ] eax
mov eax ebx
retn
sub_40d2c0
push ebx
xor ebx ebx
push edi
lea ecx [ esi + 0x14 ]
mov [ esi ] ebx
call sub_40bc70
lea ecx [ esi + 0x24 ]
call sub_40bc70
lea edi [ esi + 0x34 ]
call sub_40d330
lea edi [ esi + 0x78 ]
call sub_40d330
lea ecx [ esi + 0xbc ]
call sub_40bc70
push 0x4
mov [ esi + 0xec ] r--data
mov [ esi + 0xf0 ] ebx
mov [ esi + 0xf4 ] ebx
mov [ esi + 0xf8 ] ebx
call sub_4115d7
add esp 0x4
cmp eax ebx
je r-xdata
pop edi
mov [ esi ] ebx
mov eax esi
pop ebx
retn
mov [ eax ] ebx
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
retn
sub_40d330
push ebx
push esi
mov esi edi
call sub_40d370
xor ebx ebx
lea esi [ edi + 0x14 ]
mov [ edi + 0x10 ] bl
call sub_40d370
pop esi
mov [ edi + 0x24 ] ebx
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
mov [ edi + 0x34 ] ebx
mov [ edi + 0x38 ] ebx
mov [ edi + 0x3c ] 0x2800
mov [ edi + 0x40 ] 0x2000
mov eax edi
pop ebx
retn
sub_40d370
push 0x10
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x10
call sub_4115d7
mov [ esi ] eax
push 0x4
mov [ eax ] 0x0
call sub_4115d7
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
retn
sub_40d3b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
call sub_40c650
test eax eax
jle r-xdata
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ esi + 0x2f8 ] eax
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
push 0x0
mov ecx esi
mov [ esi + 0x2f0 ] eax
mov [ esi + 0xf8 ] 0x2
call sub_4091e0
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_40d410
push ebx
mov ebx [ eax ]
push esi
push edi
mov edi ecx
lea eax [ edi + 0x4 ]
call sub_403cc0
mov esi eax
call sub_408f40
lea eax [ edi + 0x4 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_403cc0
pop edi
pop esi
mov [ eax + 0x10 ] 0x0
pop ebx
retn
sub_40d440
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_40bc70
mov ecx 0x1
mov esi rw-data
call sub_410600
lea ecx [ ebp - 0x18 ]
call sub_402250
xor eax eax
mov eax ecx
inc ecx
test eax eax
jle r-xdata
shl eax 0x4
add eax edi
je r-xdata
mov ebx eax
lea eax [ ecx - 0x1 ]
mov [ rw-data ] eax
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x0
mov [ ebp - 0x4 ] ecx
jne r-xdata
cmp ecx esi
jg r-xdata
cmp [ eax ] 0x20
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x34
jne r-xdata
push 0xffffffff
push 0x69
jmp r-xdata
mov ecx [ edx ]
push ecx
lea esi [ ebp - 0x18 ]
call sub_40e0a0
mov edi [ ebp - 0x18 ]
sub esp 0x10
mov esi esp
call sub_401b10
mov eax rw-data
call sub_40f310
test eax eax
jne r-xdata
push rw-data
call sub_45e737
push 0xffffffff
push 0x84
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push ebx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x3
call sub_40d860
test eax eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
sub_40d530
push ebp
mov ebp esp
push ecx
cmp [ ebx + 0x8 ] 0x0
jbe r-xdata
mov [ ebx + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
push esi
push edi
xor edi edi
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + edi * 4 ]
test esi esi
je r-xdata
pop edi
pop esi
cmp ax 0x30
jl r-xdata
push esi
call sub_4111dc
add esp 0x4
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
call sub_402250
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
sub_40d590
push ebp
mov ebp esp
sub esp 0x43c
push ebx
push esi
push edi
mov edi eax
lea eax [ ebp - 0x228 ]
push eax
push 0x104
call [ GetCurrentDirectoryW@IAT ]
push edi
call sub_401f20
call [ IsDebuggerPresent@IAT ]
test eax eax
jne r-xdata
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x228 ]
mov [ rw-data ] 0xffffffff
push ecx
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
mov esi rw-data
cmp eax 0x1
je r-xdata
call [ SetCurrentDirectoryW@IAT ]
mov ebx [ rw-data ]
push 0xffffffff
push 0x1
mov [ ebp - 0x2 ] 0x0
call sub_403a50
mov dl [ rw-data ]
mov bl [ ebp - 0x2 ]
mov [ rw-data ] dl
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x1 ]
mov eax rw-data
call sub_40f520
test al al
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_401460
test eax eax
jne r-xdata
lea eax [ ebp - 0x228 ]
mov [ rw-data ] 0x1
push eax
jmp r-xdata
mov cl [ rw-data ]
mov bl [ rw-data ]
push rw-data
lea edx [ ebp - 0x438 ]
push edx
push 0x104
push rw-data
mov [ rw-data ] cl
call [ GetFullPathNameW@IAT ]
mov ebx rw-data
call sub_40ec50
lea ecx [ ebp - 0x228 ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp bl 0x1
je r-xdata
call sub_432fee
test al al
jne r-xdata
call sub_410390
call sub_410570
cmp [ rw-data ] 0x0
jne r-xdata
push 0x104
lea edx [ ebp - 0x438 ]
push edx
push 0x0
call [ GetModuleFileNameW@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
mov ecx rw-data
call sub_4091e0
cmp [ rw-data ] 0x0
jne r-xdata
mov esi rw-data
call sub_40e0c0
push 0x1
lea eax [ ebp - 0x228 ]
push eax
push edi
lea ecx [ ebp - 0x438 ]
push ecx
push r--data
call [ GetForegroundWindow@IAT ]
push eax
call [ ShellExecuteW@IAT ]
jmp r-xdata
mov edi r--data
lea esi [ ebp - 0x14 ]
call sub_401b10
mov edi rw-data
mov eax esi
call sub_40d200
mov edi r--data
mov eax esi
call sub_40d200
mov ecx [ ebp - 0x14 ]
push 0x1
lea eax [ ebp - 0x228 ]
push eax
push ecx
lea edx [ ebp - 0x438 ]
push edx
push r--data
call [ GetForegroundWindow@IAT ]
push eax
call [ ShellExecuteW@IAT ]
mov ecx esi
call sub_402250
jmp r-xdata
mov ebx rw-data
call sub_40ec50
lea edx [ ebp - 0x228 ]
push edx
mov ecx rw-data
call sub_401000
sub_40d6b0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x2c
push ebx
xor ebx ebx
push esi
push edi
cmp [ eax + 0x1d ] bl
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edi 0x1
lea esi [ esp + 0x18 ]
mov [ rw-data ] ecx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ebx
call sub_408f40
lea edx [ esp + 0x28 ]
lea esi [ esp + 0xc ]
mov [ esp + 0x20 ] 0x6
mov [ esp + 0x18 ] edx
mov [ esp + 0xc ] ebx
mov [ esp + 0x14 ] ebx
mov [ rw-data ] ebx
call sub_40ebb0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push sub_4370c3
call sub_411951
add esp 0x4
push edi
call sub_4119b0
mov eax [ rw-data ]
add esp 0x4
push eax
call sub_40f4e0
mov eax [ ebp + 0x10 ]
call sub_40d590
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
push 0x2
push edx
push ebx
push 0x2001
call [ SystemParametersInfoW@IAT ]
mov eax [ esp + 0xc ]
mov edi [ rw-data ]
cmp eax ebx
je r-xdata
call sub_40ec00
call eax
mov [ rw-data ] eax
lea esi [ esp + 0x28 ]
call sub_408f40
lea esi [ esp + 0x18 ]
call sub_408f40
mov eax edi
push eax
call [ FreeLibrary@IAT ]
sub_40d7c0
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push ebx
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] ebx
pop ebx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ ecx + edx * 4 ] eax
inc [ esi + 0x8 ]
retn
sub_40d860
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
lea ecx [ ebp - 0x54 ]
mov ebx eax
call sub_40bc70
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov edi [ eax ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0xc ] 0xffffffff
dec edi
call sub_40bc70
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x4 ]
mov edx [ ebx ]
mov eax [ esi + edx * 4 ]
cmp [ eax + 0x8 ] 0x48
je r-xdata
inc [ ebx ]
mov edx [ ebp + 0x8 ]
mov ebx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ebx * 4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov [ ebp - 0x14 ] edi
push 0xffffffff
push 0x72
jmp r-xdata
mov edx [ ebp + 0x10 ]
call sub_40f490
test eax eax
jne r-xdata
mov eax [ ebx ]
mov ecx [ esi + eax * 4 ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov ecx [ ebx ]
mov esi [ esi + ecx * 4 ]
cmp [ esi + 0x8 ] 0x33
jne r-xdata
push rw-data
call sub_45e737
lea ecx [ ebp - 0x34 ]
call sub_402250
lea ecx [ ebp - 0x24 ]
call sub_410ba0
lea ecx [ ebp - 0x54 ]
call sub_402250
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
push edx
lea esi [ ebp - 0x54 ]
call sub_40e0a0
mov eax [ ebx ]
dec eax
cmp [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp ecx 0x1e
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
mov eax [ esi ]
lea edx [ ebp - 0x34 ]
cmp edx eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0xc ]
lea edi [ ebp - 0x54 ]
mov ebx rw-data
mov [ ebp - 0x3c ] ecx
call sub_40eb50
lea ecx [ ebp - 0x34 ]
call sub_402250
lea ecx [ ebp - 0x24 ]
call sub_410ba0
mov ecx edi
call sub_402250
xor eax eax
mov [ ebp - 0xc ] eax
inc eax
mov [ ebx ] eax
mov eax [ esi + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
xor edi edi
test eax eax
je r-xdata
mov ecx edx
call sub_403c30
cmp edi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov esi [ ecx + edi * 4 ]
lea eax [ ebp - 0x34 ]
call sub_40dbb0
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebx ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0xab
jmp r-xdata
lea edi [ ebp - 0x34 ]
lea esi [ ebp - 0x24 ]
call sub_40d7c0
inc [ ebx ]
mov edi [ ebp + 0x8 ]
mov eax [ ebx ]
mov esi [ edi + 0x4 ]
mov edx [ esi + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
mov eax [ ebp - 0x1c ]
inc edi
cmp edi [ ebp - 0x1c ]
jb r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov ecx [ esi + eax * 4 + 0x4 ]
movzx ecx [ ecx + 0x8 ]
inc eax
mov [ ebx ] eax
cmp cx 0x49
je r-xdata
push 0xffffffff
push 0x69
jmp r-xdata
mov edx [ esi + eax * 4 ]
movzx ecx [ edx + 0x8 ]
inc [ ebp - 0x10 ]
cmp cx 0x40
jne r-xdata
inc eax
mov [ ebx ] eax
cmp cx 0x4a
jne r-xdata
cmp cx 0x48
je r-xdata
mov edx 0x48
cmp cx 0x40
jne r-xdata
mov eax [ ebx ]
inc eax
cmp [ ebp - 0xc ] 0xffffffff
mov [ ebx ] eax
jne r-xdata
mov eax [ ebx ]
mov edx [ esi + eax * 4 ]
push edx
call sub_443234
test al al
je r-xdata
jmp r-xdata
mov eax [ ebx ]
mov ecx [ esi + eax * 4 ]
cmp [ ecx + 0x8 ] dx
jne r-xdata
mov ecx [ esi + eax * 4 + 0x4 ]
inc eax
mov [ ebx ] eax
cmp [ ecx + 0x8 ] dx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
movsx eax [ edx + 0xa ]
push eax
push 0x69
jmp r-xdata
mov ecx [ ebx ]
mov edx [ esi + ecx * 4 ]
cmp [ edx + 0x8 ] 0x0
mov [ ebp - 0x5 ] 0x0
je r-xdata
mov edi [ ebp - 0x14 ]
movsx eax [ ecx + 0xa ]
push eax
jmp r-xdata
push 0x91
sub_40da20
mov eax [ esi ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
pop edi
retn
push eax
call [ CloseHandle@IAT ]
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
pop edi
retn
sub_40da90
push ebp
mov ebp esp
push ecx
cmp [ edi + 0x9 ] 0x0
push esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44ccf1
mov [ edi + 0x9 ] 0x1
jmp r-xdata
push ebx
mov ebx [ edi + 0x4 ]
mov eax [ ebx + 0x38 ]
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
dec [ edi ]
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ edi + 0x9 ] 0x0
pop ebx
lea esi [ ebx + 0x20 ]
call sub_408f40
mov esi ebx
call sub_408f40
push ebx
call sub_4111dc
add esp 0x4
sub_40db10
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
xor eax eax
push ebx
mov [ edx + rw-data ] r--data
push edi
mov edi rw-data
mov [ ebp - 0x4 ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_40daf0
mov ebx r--data
mov eax rw-data
call sub_402160
pop edi
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn
sub_40dc00
push ebp
mov ebp esp
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop ebp
retn 0x4
sub_40dc90
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
push edi
mov eax 0x1
mov edi 0x2
or esi 0xffffffff
mov ecx rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_40bc70
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x3
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] 0x7c
call sub_40f210
test al al
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx 0x3
lea edx [ ebp - 0x4 ]
push edx
mov esi rw-data
call sub_40dc00
dec ebx
jne r-xdata
pop edi
pop esi
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn
sub_40ddd0
push esi
mov esi eax
mov ecx [ esi - 0x88 ]
mov edx [ ecx + 0x4 ]
lea eax [ esi - 0x88 ]
push edi
mov [ edx + esi - 0x88 ] r--data
call sub_40f170
lea edi [ esi - 0x78 ]
call sub_40db70
add esi 0xffffff7c
call sub_40f1f0
pop edi
pop esi
retn
sub_40de40
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
call sub_40da20
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x28 ] ebx
test bl 0x3
jne r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ ebp + 0x8 ]
mov edx esi
call sub_40f110
test al al
je r-xdata
or ebx 0x2000
mov [ esi + 0x28 ] ebx
xor al al
jmp r-xdata
push edi
mov edi esi
call sub_40dea0
mov eax esi
call sub_40e080
call sub_40f160
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40dea0
push ebp
mov ebp esp
mov eax [ edi + 0x28 ]
xor ecx ecx
sub esp 0x14
mov [ edi + 0x2c ] ecx
mov [ edi + 0x30 ] ecx
test eax 0x2000
je r-xdata
test al 0x1
je r-xdata
test al 0x10
jne r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
test eax 0x180
jne r-xdata
mov [ edi + 0x2c ] 0x4
jmp r-xdata
test al 0x20
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
push ebx
push esi
push ecx
push ecx
push ecx
mov esi edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
call sub_40df90
push 0x10000
call sub_4115d7
add esp 0x4
lea esi [ ebp - 0xc ]
call sub_40f0a0
mov eax [ ebp - 0xc ]
push eax
mov ebx 0x10000
mov esi edi
call sub_403910
mov edx [ ebp - 0xc ]
cmp eax 0x2
jb r-xdata
mov [ edi + 0x2c ] 0x1
jmp r-xdata
test al 0x40
jne r-xdata
cmp eax 0x3
jb r-xdata
mov cl [ edx ]
cmp cl 0xff
je r-xdata
mov [ edi + 0x2c ] 0x2
jmp r-xdata
test eax eax
je r-xdata
cmp [ edx ] 0xef
je r-xdata
cmp [ edx + 0x1 ] 0xfe
jne r-xdata
cmp cl 0xfe
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
push 0x0
push ecx
push edx
mov esi edi
call sub_40df90
lea esi [ ebp - 0xc ]
call sub_40f0f0
pop esi
pop ebx
cmp [ edi + 0x2c ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0xbb
jne r-xdata
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x30 ] 0x2
jmp r-xdata
cmp [ edx + 0x1 ] 0xff
jne r-xdata
cmp eax 0x10000
je r-xdata
cmp [ edx + 0x2 ] 0xbf
jne r-xdata
mov [ edi + 0x2c ] 0x2
mov [ edi + 0x30 ] 0x2
jmp r-xdata
test [ edi + 0x28 ] 0x4000
je r-xdata
mov esi eax
call sub_40f0c0
test al al
jne r-xdata
mov [ edi + 0x30 ] 0x3
mov [ edi + 0x2c ] 0x4
jmp r-xdata
push 0x0
push 0x0
push 0x0
call sub_40df90
push edi
call sub_443d73
mov ebx eax
push ebx
call sub_4115d7
add esp 0x4
push eax
mov [ ebp - 0x4 ] eax
call sub_403910
mov edx [ ebp - 0x4 ]
mov esi eax
call sub_40f0c0
test al al
je r-xdata
mov [ edi + 0x30 ] 0x0
mov [ edi + 0x2c ] 0x4
jmp r-xdata
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov [ edi + 0x2c ] 0x4
mov [ edi + 0x30 ] 0x0
sub_40df90
push ebp
mov ebp esp
mov eax [ esi + 0x8 ]
sub esp 0x8
push ebx
push edi
mov edi [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ebx ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
cmp edi 0x1
je r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_40e050
mov ecx [ esi + 0x10 ]
sub ecx eax
mov eax [ esi + 0x14 ]
sbb eax edx
add [ ebp + 0x8 ] ecx
adc [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ esi ]
push edi
push ebx
push ecx
push edx
push eax
call [ SetFilePointerEx@IAT ]
push esi
mov edi eax
call sub_40e050
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp edi 0x1
je r-xdata
test edi edi
jne r-xdata
mov al 0x1
jmp r-xdata
mov edx [ esi + 0x10 ]
mov ebx [ esi + 0x14 ]
add edx eax
mov [ ebp - 0x8 ] edx
adc ebx ecx
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov ebx ecx
xor al al
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
mov edi [ esi + 0x14 ]
cdq
sub ecx eax
sbb edi edx
cmp ebx edi
jl r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
jg r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x8 ]
cdq
add eax ecx
adc edx edi
sub eax 0x1
sbb edx 0x0
cmp ebx edx
jg r-xdata
cmp [ ebp - 0x8 ] ecx
jb r-xdata
mov edx [ ebp - 0x8 ]
jl r-xdata
mov eax edx
sub eax ecx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] ebx
cmp edx eax
ja r-xdata
sub_40e050
push ebp
mov ebp esp
sub esp 0x8
push 0x1
lea edx [ ebp - 0x8 ]
push edx
xor ecx ecx
push ecx
xor eax eax
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ SetFilePointerEx@IAT ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40e0c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3a8
push ebx
push edi
push 0x3a4
lea eax [ esp + 0x10 ]
push 0x0
push eax
mov [ esp + 0x14 ] 0x3a8
call sub_412f40
add esp 0xc
cmp [ esi + 0x198 ] 0x0
jne r-xdata
cmp [ esi + 0x1a4 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov [ esi + 0x198 ] ecx
cmp [ esi + 0x1b0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1a8 ] eax
mov eax [ esi + 0x19c ]
lea edi [ esi + 0x1a0 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ esi + 0x1b0 ] ecx
cmp [ edi ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ esi + 0x19c ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x40 ] 0x0
mov ebx 0x1
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] 0x3
mov [ esp + 0x18 ] 0x401
mov [ esp + 0x1c ] 0x0
jne r-xdata
push eax
call [ DestroyIcon@IAT ]
jmp r-xdata
mov ecx [ esi + 0x3c ]
mov eax [ esi + 0x10 ]
push edi
push ecx
push eax
push esi
call sub_4341e6
cmp [ esi + 0x40 ] 0x0
mov [ esp + 0x1c ] eax
mov [ esi + 0x19c ] eax
je r-xdata
mov eax [ esi + 0x198 ]
mov [ esp + 0x1c ] eax
mov [ esi + 0x19c ] eax
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
push ebx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push 0x0
call [ Shell_NotifyIconW@IAT ]
mov [ rw-data ] bl
cmp [ rw-data ] bl
je r-xdata
jmp r-xdata
mov eax esi
call sub_401b80
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e1c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_408f40
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_40e1f0
cmp [ edi + 0x8 ] 0x5
jne r-xdata
retn
mov eax [ edi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ edi ]
mov [ edx ] 0x0
mov eax [ edi ]
mov [ eax + 0x4 ] 0x0
mov ecx [ edi ]
mov [ ecx + 0x8 ] 0x0
mov edx [ edi ]
mov [ edx + 0x20c ] 0x0
mov eax [ eax + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ edi ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
push edx
call sub_4111dc
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
add esp 0x8
push esi
xor esi esi
mov eax [ edi ]
inc esi
cmp esi [ eax + 0x8 ]
jl r-xdata
push 0x1
call sub_40e1c0
mov eax [ eax ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
pop esi
sub_40e270
push edi
mov edi eax
cmp [ edi + 0x8 ] 0x5
jne r-xdata
pop edi
retn
call sub_40e1f0
mov eax [ edi ]
push eax
call sub_4111dc
add esp 0x4
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
sub_40e2d0
push ebx
mov eax edi
mov ebx esi
call sub_40b960
movzx eax [ edi + 0x10 ]
mov [ esi + 0x10 ] al
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov dl [ edi + 0x18 ]
lea eax [ edi + 0x20 ]
lea ebx [ esi + 0x20 ]
mov [ esi + 0x18 ] dl
call sub_40b960
movzx eax [ edi + 0x30 ]
mov [ esi + 0x30 ] al
mov eax esi
pop ebx
retn
sub_40e310
cmp [ ebx + 0x9 ] 0x0
push edi
mov edi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push edi
push eax
call sub_47390f
inc [ ebx ]
mov [ ebx + 0x9 ] 0x0
pop edi
retn
push esi
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
xor esi esi
mov [ esi + 0x38 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
mov esi eax
call sub_40e2d0
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x38 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
sub_40e360
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x63c
push ebx
xor ebx ebx
push esi
push edi
push 0x400
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x66
call sub_4115d7
add esp 0x4
push 0x104
lea ecx [ esp + 0x24 ]
push ecx
push ebx
mov [ rw-data ] eax
call [ GetModuleFileNameW@IAT ]
push ebx
push ebx
lea edx [ esp + 0x238 ]
push edx
lea eax [ esp + 0x44c ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
call sub_413a0e
push 0x104
lea edx [ esp + 0x248 ]
push r--data
push edx
call sub_413a5a
push ebx
push ebx
lea eax [ esp + 0x258 ]
push eax
lea ecx [ esp + 0x46c ]
push ecx
lea edx [ esp + 0x50 ]
push edx
call sub_413a9e
push 0x20a
call sub_4115d7
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
lea edx [ esp + 0x58 ]
push edx
inc eax
push ecx
mov [ rw-data ] eax
call sub_411567
add esp 0x40
lea ecx [ esp + 0x10 ]
call sub_40bc70
lea esi [ esp + 0x10 ]
call sub_40e4c0
test al al
jne r-xdata
xor edi edi
xor eax eax
mov [ esp + 0x20 ] ax
lea ecx [ esp + 0x10 ]
call sub_402250
pop edi
pop esi
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x20 ]
push edx
call sub_4111c1
add esp 0x4
test eax eax
je r-xdata
call sub_401c90
cmp [ eax ] 0x3b
je r-xdata
push 0x20a
call sub_4115d7
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] eax
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ edx + eax * 4 ]
inc eax
mov [ rw-data ] eax
push 0x104
lea eax [ esp + 0x28 ]
push eax
push ecx
call sub_412fba
xor ecx ecx
add esp 0x10
lea esi [ esp + 0x10 ]
mov [ esp + 0x20 ] cx
call sub_401c90
cmp [ eax ] bx
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_4111c1
add esp 0x4
cmp [ esp + eax * 2 + 0x1e ] 0x5c
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_411536
add esp 0x8
inc edi
jmp r-xdata
inc edi
jmp r-xdata
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_411536
add esp 0x8
lea esi [ esp + 0x10 ]
call sub_401c90
mov cx [ eax ]
xor edx edx
mov [ esp + 0xc ] cx
mov [ esp + 0xe ] dx
call sub_401c90
cmp [ eax ] bx
je r-xdata
sub_40e4c0
push ebp
mov ebp esp
sub esp 0x10
call sub_403350
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
push ebx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x0
push 0x0
push r--data
push edx
xor bl bl
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
call [ RegCloseKey@IAT ]
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43652f
mov edi [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push 0x0
push 0x0
push r--data
push edx
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call sub_436508
pop edi
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov ebx edi
mov eax esi
call sub_402160
mov bl 0x1
sub_40e500
push ebp
mov ebp esp
sub esp 0x15c
push ebx
push esi
lea esi [ edi + 0xc ]
mov ecx esi
call sub_40bc70
lea eax [ ebp - 0x15c ]
push eax
mov [ edi + 0x30 ] 0x0
mov [ ebp - 0x15c ] 0x11c
call [ GetVersionExW@IAT ]
mov eax [ ebp - 0x150 ]
mov ecx [ ebp - 0x158 ]
mov edx [ ebp - 0x154 ]
mov [ edi + 0x8 ] eax
lea ebx [ ebp - 0x148 ]
mov eax esi
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
call sub_402160
call sub_40e660
mov eax r--data
call sub_40e680
mov eax [ edi ]
xor ebx ebx
sub eax 0x5
mov [ edi + 0x2c ] bl
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] ebx
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] ebx
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
jne r-xdata
dec eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov [ edi + 0x1c ] 0x101
jmp r-xdata
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
call sub_40ef60
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x1d ] 0x1
mov [ edi + 0x1f ] 0x1
mov [ edi + 0x21 ] 0x1
cmp eax ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov [ edi + 0x1d ] al
mov [ edi + 0x1e ] 0x101
jmp r-xdata
movzx eax [ ebp - 0x44 ]
shr eax 0x6
and eax 0x1
mov [ edi + 0x30 ] al
jmp r-xdata
xor eax eax
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
cmp [ edi + 0x2c ] bl
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] ebx
call [ GetCurrentProcess@IAT ]
push eax
call sub_40ef20
call eax
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ ebp - 0x42 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x42 ] 0x1
mov [ edi + 0x1d ] 0x1
mov [ edi + 0x1f ] 0x1
mov [ edi + 0x21 ] 0x1
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
call [ GetSystemInfo@IAT ]
mov esi [ FreeLibrary@IAT ]
jmp r-xdata
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
call sub_40efd0
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x23 ] 0x1
mov [ edi + 0x24 ] 0x101
jmp r-xdata
mov [ edi + 0x22 ] 0x101
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov [ edi + 0x23 ] al
mov [ edi + 0x25 ] al
cmp [ ebp - 0x42 ] al
jne r-xdata
mov [ edi + 0x20 ] 0x1
mov [ edi + 0x1e ] 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov dx [ ebp - 0x40 ]
mov [ edi + 0x2e ] dx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
lea edx [ ebp - 0x40 ]
push edx
call sub_40ef90
call eax
mov [ edi + 0x2a ] 0x101
mov [ edi + 0x29 ] 0x1
mov [ edi + 0x27 ] 0x1
mov [ edi + 0x23 ] 0x1
jmp r-xdata
mov [ edi + 0x27 ] 0x1
mov [ edi + 0x28 ] 0x101
jmp r-xdata
mov [ edi + 0x26 ] 0x101
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call esi
mov eax [ ebp - 0x1c ]
mov esi [ FreeLibrary@IAT ]
cmp eax ebx
je r-xdata
push eax
call esi
sub_40e680
push eax
push esi
call sub_40ee60
cmp eax 0xffffffff
je r-xdata
push 0x0
jmp r-xdata
inc eax
push eax
push esi
or eax 0xffffffff
call sub_40c600
retn
sub_40e6a0
call sub_408f40
push 0x10
mov [ esi + 0x8 ] 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi + 0xc ] eax
mov eax esi
retn
sub_40e710
push esi
push edi
mov esi ebx
mov edi eax
call sub_408f40
push 0x10
mov [ ebx + 0x8 ] 0x4
call sub_4115d7
add esp 0x4
test edi edi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
call sub_40bc70
jmp r-xdata
mov esi eax
call sub_401b10
pop edi
mov [ ebx + 0xc ] eax
mov eax ebx
pop esi
retn
sub_40e750
cmp [ esi + 0x16c ] 0x0
jne r-xdata
push edi
lea edi [ esi + 0x16c ]
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40c790
cmp [ edi ] 0x0
jne r-xdata
pop edi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
lea ebx [ esi + 0x488 ]
mov eax r--data
call sub_40e710
cmp [ rw-data ] 0x0
pop ebx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test eax eax
jne r-xdata
call [ OleUninitialize@IAT ]
mov [ rw-data ] 0x0
retn
retn
mov [ rw-data ] eax
jmp r-xdata
sub_40e790
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x2
je r-xdata
push ebx
xor ebx ebx
mov [ ebp + 0x8 ] ebx
cmp edx ecx
ja r-xdata
push ecx
push esi
push edx
push edi
push 0x1
test eax eax
jne r-xdata
test edx edx
je r-xdata
mov edx ecx
push 0x409
jmp r-xdata
push 0x400
sub ebx [ ebp + 0x8 ]
jns r-xdata
sub edi esi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add eax 0xfffffffe
xor eax eax
test ebx ebx
setg al
pop ebx
jmp r-xdata
or eax 0xffffffff
pop ebx
jmp r-xdata
add esi 0x2
test edx edx
jne r-xdata
push eax
mov [ ebp + 0xc ] edx
call sub_4146c2
movzx ebx ax
movzx eax [ esi ]
push eax
call sub_4146c2
movzx eax ax
add esp 0x8
mov [ ebp + 0x8 ] eax
cmp ebx eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
movzx eax [ edi + esi ]
dec edx
cmp ax [ esi ]
je r-xdata
mov edx [ ebp + 0xc ]
sub_40e7d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ebx ecx
xor ecx ecx
mov [ esp + 0x10 ] ecx
mov edx [ eax ]
movsx eax [ edx + 0x8 ]
push edi
cmp eax ecx
jne r-xdata
dec eax
cmp eax 0x7e
ja r-xdata
mov edx [ ebp + 0xc ]
push edx
push esi
push ebx
call sub_40afa0
movsx ecx [ edx + 0xa ]
push ecx
push 0x1388
push ebx
call sub_45e737
jmp r-xdata
movzx eax [ eax + lookup_table_42d72e ]
mov edi 0x1
jmp [ eax * 4 + jump_table_42d716 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_408fc0
jmp r-xdata
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] ecx
lea ecx [ esp + 0x18 ]
push ecx
lea eax [ esp + 0x18 ]
mov edx esi
mov [ esp + 0x24 ] edi
call sub_408cc0
test eax eax
jne r-xdata
lea edx [ esp + 0x13 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push esi
push ebx
lea eax [ esp + 0x24 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ecx
call sub_4096a0
test eax eax
jne r-xdata
lea edi [ ebx + 0x488 ]
push edi
call sub_432416
test al al
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_408f40
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x14 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
push edi
lea edx [ esp + 0x18 ]
push edx
push esi
push ebx
call sub_47faae
test eax eax
je r-xdata
movsx ecx [ edx + 0xa ]
push ecx
push 0xa7
push ebx
call sub_45e737
jmp r-xdata
movsx ecx [ eax + 0xa ]
push ecx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x14 ]
mov edx [ eax + ecx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xaa
push ebx
call sub_45e737
jmp r-xdata
push 0x72
push ebx
call sub_45e737
movsx eax [ eax + 0xa ]
push eax
sub_40e810
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x8 ] 0x5
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
mov eax [ esi ]
push ebx
mov ebx [ eax ]
mov eax [ eax + 0x8 ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
mov [ ebp - 0x4 ] ebx
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi ]
push 0x4
mov [ ecx ] eax
call sub_4115d7
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov [ eax ] 0x1
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push edi
xor edi edi
mov edx [ esi ]
mov [ edx + 0x4 ] eax
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ eax ]
mov [ eax + edi * 4 ] 0x0
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ ebx + edi * 4 ] 0x0
je r-xdata
pop edi
mov ecx [ esi ]
mov edx [ ecx ]
xor eax eax
mov [ edx + edi * 4 ] eax
jmp r-xdata
mov ecx eax
mov eax [ ebx + edi * 4 ]
mov ebx ecx
call sub_40b960
mov ecx [ esi ]
mov edx [ ecx ]
mov ebx [ ebp - 0x4 ]
mov [ edx + edi * 4 ] eax
jmp r-xdata
mov eax [ esi ]
inc edi
cmp edi [ eax + 0x8 ]
jl r-xdata
sub_40e830
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi eax
mov ebx 0x5
cmp [ edi + 0x8 ] ebx
je r-xdata
call sub_40e1f0
jmp r-xdata
call sub_40e950
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x210 ]
mov [ eax + 0x20c ] ecx
mov edx [ edi ]
mov [ edx + 0x8 ] 0x1
mov eax [ edi ]
cmp [ eax + 0x20c ] 0x0
jle r-xdata
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8 ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ edi ]
push 0x4
mov [ ecx ] eax
call sub_4115d7
add esp 0x8
test eax eax
je r-xdata
xor edx edx
mov ecx 0xc
lea ecx [ ecx ]
mov eax edi
call sub_40e950
jmp r-xdata
mov eax [ edi ]
mov [ eax + 0x210 ] 0x0
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
xor al al
jmp r-xdata
inc edx
add ecx 0x4
cmp edx [ eax + 0x20c ]
jl r-xdata
lea ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
mov edx [ edi ]
mov [ edx + 0x4 ] eax
mov eax [ edi ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov al 0x1
xor ecx ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ecx + eax + 0x100 ]
mov [ ecx + eax ] esi
mov eax [ edi ]
mov esi [ ecx + eax ]
imul esi [ eax + 0x8 ]
mov [ eax + 0x8 ] esi
mov eax [ edi ]
cmp [ eax + 0x8 ] 0x1000000
jg r-xdata
mov esi [ ebx + 0x4 ]
add ebx 0x4
mov edx edi
call sub_40cfc0
dec [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
mov [ eax + ecx * 4 ] 0x0
mov eax [ edi ]
inc ecx
cmp ecx [ eax + 0x8 ]
jl r-xdata
sub_40e950
push esi
mov esi eax
cmp [ esi + 0x8 ] 0x5
je r-xdata
pop esi
retn
call sub_408f40
push 0x214
call sub_4115d7
mov [ esi ] eax
add esp 0x4
xor ecx ecx
mov [ eax ] ecx
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ecx
mov eax [ esi ]
mov [ eax + 0x20c ] ecx
mov edx [ esi ]
mov [ edx + 0x210 ] ecx
mov [ esi + 0x8 ] 0x5
sub_40e9a0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ecx
test eax eax
jg r-xdata
cmp ecx eax
je r-xdata
test ecx ecx
jne r-xdata
push 0xffffffff
push 0x92
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
pop ebp
retn 0xc
cmp edx eax
je r-xdata
test edx edx
jne r-xdata
push 0xffffffff
push 0x77
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
pop ebp
retn 0xc
cmp esi eax
je r-xdata
test esi esi
jne r-xdata
push 0xffffffff
push 0x97
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
pop ebp
retn 0xc
cmp edi eax
je r-xdata
test edi edi
jne r-xdata
push 0xffffffff
push 0xa0
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
pop ebp
retn 0xc
cmp ebx eax
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffff
push 0xb4
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push 0xffffffff
push 0x73
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
pop ebp
retn 0xc
jmp r-xdata
xor eax eax
pop ecx
pop ebp
retn 0xc
sub_40e9f0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push esi
push edi
mov edi eax
lea eax [ ebp - 0x1 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x1
call sub_40cc70
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
push edi
call sub_45e737
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
add edi 0x16c
call sub_40c790
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ edi + 0x16c ]
call sub_40f4d0
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0xc ]
inc ecx
mov [ edx ] ecx
sub_40ea70
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov ebx 0x1
push edi
lea eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] ebx
call sub_40db90
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x5 ]
mov [ ebp - 0x3c ] ebx
mov ebx [ ebp + 0x8 ]
push eax
push ebx
lea ecx [ ebp - 0xc ]
call sub_40cc70
test eax eax
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
call sub_452670
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push ebx
call sub_45e737
lea edx [ ebp - 0x3c ]
push edx
call sub_452670
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ esi ]
dec edi
xor ebx ebx
mov [ ebp - 0x38 ] edi
xor dl dl
jmp r-xdata
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_40f410
test eax eax
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test dl dl
jne r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
inc edi
add ebx 0x16c
lea eax [ ebp - 0x3c ]
mov [ esi ] edi
call sub_40ceb0
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x1c ]
call sub_408f40
lea esi [ ebp - 0x2c ]
call sub_408f40
mov eax [ eax ]
sub eax 0x9
je r-xdata
inc ebx
jmp r-xdata
dec eax
jne r-xdata
test ebx ebx
jne r-xdata
dec ebx
jmp r-xdata
dec ecx
mov dl 0x1
mov [ ebp - 0x34 ] ecx
jmp r-xdata
sub_40eb50
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
retn
push esi
push 0x24
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov esi eax
mov ecx esi
call sub_40bc70
mov eax esi
call sub_410b70
mov eax esi
call sub_4026f0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
push ecx
call [ CharUpperBuffW@IAT ]
mov [ esi + 0x20 ] 0x0
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0xc ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
pop esi
retn
mov [ eax + 0x20 ] esi
inc [ ebx + 0xc ]
mov [ ebx + 0x4 ] esi
pop esi
sub_40ec20
cmp [ esi + 0x8 ] 0x0
ja r-xdata
push edi
xor edi edi
mov [ esi + 0x8 ] 0x0
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_4111dc
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jb r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
retn
sub_40ec50
push esi
mov esi [ ebx + 0x8 ]
push edi
test esi esi
je r-xdata
mov ecx [ ebx + 0x44 ]
xor edi edi
cmp ecx edi
je r-xdata
lea esp [ esp ]
mov ecx [ ebx + 0x14 ]
push ecx
call sub_4111dc
add esp 0x4
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x44 ] edi
cmp [ ebx + 0x20 ] edi
jbe r-xdata
cmp [ ecx - 0x4 ] edi
je r-xdata
mov eax [ esi ]
mov edi [ esi + 0xc ]
push eax
call sub_4111dc
push esi
call sub_4111dc
add esp 0x8
mov esi edi
test edi edi
jne r-xdata
lea esi [ ebx + 0x18 ]
call sub_40ec20
lea esi [ ebx + 0x28 ]
call sub_40ec20
pop edi
pop esi
retn
xor esi esi
lea eax [ ecx - 0x4 ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x3
call eax
mov edx [ ebx + 0x1c ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi [ ebx + 0x20 ]
jb r-xdata
sub_40ece0
push ebx
push esi
mov ebx rw-data
call sub_40ec50
cmp [ rw-data ] 0x0
jbe r-xdata
mov edx [ rw-data ]
push edx
call sub_4111dc
add esp 0x4
mov esi rw-data
mov [ rw-data ] r--data
call sub_40ec20
mov eax [ rw-data ]
push eax
call sub_4111dc
add esp 0x4
mov esi rw-data
mov [ rw-data ] r--data
call sub_40ec20
mov ecx [ rw-data ]
push ecx
call sub_4111dc
add esp 0x4
pop esi
pop ebx
retn
xor esi esi
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi [ rw-data ]
jb r-xdata
sub_40ed70
push ebp
mov ebp esp
push ecx
test [ ebp + 0x8 ] 0x2
push ebx
mov ebx ecx
je r-xdata
call sub_40edc0
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
lea eax [ ebx - 0x4 ]
push edi
mov edi [ eax ]
mov esi edi
dec edi
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax ebx
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
test [ ebp + 0x8 ] 0x1
pop edi
pop esi
je r-xdata
shl esi 0x4
add esi ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_4111dc
mov eax [ ebp - 0x4 ]
add esp 0x4
sub esi 0x10
mov ecx esi
call sub_40edc0
dec edi
jns r-xdata
mov eax [ ebp - 0x4 ]
sub_40edc0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
mov [ ebx ] r--data
jbe r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov [ ebx + 0x8 ] 0x0
call sub_4111dc
add esp 0x4
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
xor edi edi
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + edi * 4 ]
test esi esi
je r-xdata
pop edi
pop esi
cmp ax 0x30
jl r-xdata
push esi
call sub_4111dc
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax + 0xc ]
dec [ ecx ]
mov ecx [ eax + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov edx [ eax ]
push edx
mov [ ebp - 0x4 ] eax
call sub_4111dc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_4111dc
mov eax [ ebp - 0x4 ]
add esp 0x8
sub_40ee60
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub esp 0x8
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
movzx edi [ edi ]
xor esi esi
lea eax [ edx - 0x1 ]
mov [ ebp - 0x8 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ecx ]
movzx ebx [ ecx + eax * 2 ]
mov [ ebp - 0x4 ] esi
mov ecx edi
inc [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + esi * 2 + 0x2 ]
inc esi
test cx cx
jne r-xdata
cmp bx cx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc ecx
cmp ecx edx
jb r-xdata
dec eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
xor esi esi
jmp r-xdata
cmp di si
je r-xdata
sub_40eec0
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
push ebx
push esi
push edi
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ ebx ]
xor edx edx
xor edi edi
mov ecx 0x20
lea esp [ esp ]
inc edi
jmp r-xdata
movzx ecx [ edx * 2 + r--data ]
inc edx
test cx cx
jne r-xdata
cmp si cx
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
inc ecx
add ebx 0x2
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jb r-xdata
mov eax [ ebp - 0x4 ]
sub_40f000
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi eax
call sub_40f030
call sub_40e500
pop edi
mov [ rw-data ] eax
mov eax rw-data
retn
sub_40f060
push 0xc
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
push esi
mov esi eax
call sub_40f030
mov [ rw-data ] esi
pop esi
mov eax rw-data
retn
sub_40f090
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_40f0c0
push ebx
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop ebx
retn
mov bl 0x1
xor eax eax
lea ebx [ ebx ]
cmp cl 0xc2
jb r-xdata
inc eax
cmp cl 0xe0
jb r-xdata
cmp cl 0xdf
ja r-xdata
mov cl [ eax + edx ]
cmp cl 0x7f
ja r-xdata
test bl bl
je r-xdata
cmp cl 0xf0
jb r-xdata
cmp cl 0xef
ja r-xdata
mov edi 0x1
jmp r-xdata
pop edi
mov eax 0x1
pop ebx
retn
pop edi
xor al al
pop ebx
retn
cmp cl 0xf4
ja r-xdata
mov edi 0x2
jmp r-xdata
inc eax
xor bl bl
mov edi 0x3
mov cl [ eax + edx ]
cmp cl 0x80
jb r-xdata
cmp cl 0xbf
ja r-xdata
inc eax
dec edi
jne r-xdata
cmp eax esi
jae r-xdata
jmp r-xdata
cmp eax esi
jb r-xdata
sub_40f110
push esi
mov esi edx
mov [ esi ] 0xffffffff
test ecx 0x2000
je r-xdata
test cl 0x1
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x7
push 0x80000000
test cl 0x2
je r-xdata
mov eax [ eax ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x7
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0x0
push 0x80
push 0x2
push 0x0
push 0x7
push 0xc0000000
jmp r-xdata
push 0x2
push 0x0
push 0x0
call sub_40df90
jmp r-xdata
mov eax [ eax ]
push eax
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp [ esi ] 0xffffffff
je r-xdata
sub_40f160
mov eax [ esi + 0x28 ]
test al 0x3
jne r-xdata
test al 0x10
jne r-xdata
retn
test al 0x1
je r-xdata
test al 0x20
je r-xdata
mov ecx [ esi + 0x10 ]
or ecx [ esi + 0x14 ]
jne r-xdata
test al 0x40
je r-xdata
push 0x2
push r--data
push esi
call sub_443e36
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0x2
retn
test al al
jns r-xdata
push 0x2
push r--data
push esi
call sub_443e36
mov [ esi + 0x2c ] 0x2
mov [ esi + 0x30 ] 0x2
retn
test eax 0x100
je r-xdata
push 0x3
push r--data
push esi
call sub_443e36
mov [ esi + 0x30 ] 0x3
mov [ esi + 0x2c ] 0x4
retn
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x2c ] 0x4
retn
sub_40f170
push ebp
mov ebp esp
sub esp 0x8
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea esp [ esp ]
mov ecx [ eax ]
push ecx
call sub_442651
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
call sub_440847
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
sub_40f190
push ebp
mov ebp esp
sub esp 0x8
mov eax esi
call sub_40f170
mov eax [ esi + 0x468 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push ecx
lea eax [ ebp - 0x4 ]
mov [ esp ] 0x0
call sub_40f1d0
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_44b79b
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
call sub_440847
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40f1f0
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_45233c
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_40f210
push ebp
mov ebp esp
sub esp 0x8
push esi
push 0x4
push r--data
push 0x80000001
lea esi [ ebp - 0x8 ]
mov edx r--data
call sub_40f250
add esp 0xc
cmp [ ebp - 0x8 ] 0x31
pop esi
je r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn
xor al al
mov esp ebp
pop ebp
retn
sub_40f250
push ebp
mov ebp esp
sub esp 0x8
lea ecx [ ebp - 0x8 ]
push ecx
xor eax eax
push 0x1
push eax
mov [ esi ] ax
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push eax
mov eax [ ebp - 0x8 ]
push edx
add edi edi
push eax
mov [ ebp - 0x4 ] edi
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor bl bl
call [ RegCloseKey@IAT ]
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edx edx
mov [ edi + esi - 0x2 ] dx
jmp r-xdata
xor ecx ecx
mov [ esi + eax * 2 ] cx
mov eax [ ebp - 0x8 ]
push eax
mov bl 0x1
call [ RegCloseKey@IAT ]
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
sub_40f2e0
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceFrequency@IAT ]
test eax eax
mov eax esi
je r-xdata
fldz
jmp r-xdata
fild [ ebp - 0x8 ]
fdiv [ r--data ]
fstp [ esi ]
mov esp ebp
pop ebp
retn
sub_40f310
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
cmp [ edi + 0xc ] 0x0
jne r-xdata
push esi
lea esi [ ebp + 0x8 ]
call sub_410bc0
mov esi [ edi + 0x8 ]
test esi esi
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_402250
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x10
push ebx
mov ebx [ edi + 0xc ]
dec ebx
js r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
lea ecx [ ebp + 0x8 ]
call sub_402250
xor eax eax
pop ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
call sub_402250
xor eax eax
lea eax [ ebp + 0x8 ]
call sub_40dbb0
test al al
jne r-xdata
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x10
jle r-xdata
lea ebx [ edi - 0x1 ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call sub_402250
mov eax esi
jmp r-xdata
mov esi [ esi + 0x20 ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jg r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x4 ] ebx
jle r-xdata
mov esi [ esi + edi * 4 ]
lea ecx [ ebp + 0x8 ]
call sub_402250
mov eax esi
pop ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax ebx
cdq
sub eax edx
mov edi eax
sar edi 0x1
mov ecx [ esi + edi * 4 ]
lea eax [ ebp + 0x8 ]
call sub_40bcc0
test eax eax
jns r-xdata
sub_40f380
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi eax
push edi
lea eax [ ebp - 0x34 ]
call sub_40db90
mov edi [ esi ]
dec edi
xor ebx ebx
mov [ ebp - 0x34 ] 0x2
mov [ ebp - 0x30 ] edi
xor dl dl
mov ebx [ ebp + 0x8 ]
add ebx 0x16c
lea eax [ ebp - 0x34 ]
call sub_40ceb0
inc edi
mov [ esi ] edi
lea esi [ ebp - 0x14 ]
call sub_408f40
lea esi [ ebp - 0x24 ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test dl dl
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_40f410
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0xb
je r-xdata
inc ebx
jmp r-xdata
dec eax
jne r-xdata
test ebx ebx
jne r-xdata
dec ebx
jmp r-xdata
dec ecx
mov dl 0x1
mov [ ebp - 0x2c ] ecx
jmp r-xdata
sub_40f430
push ebp
mov ebp esp
sub esp 0x8
push edi
lea edi [ esi + 0x16c ]
mov eax edi
call sub_40f4d0
mov eax [ eax + 0x4 ]
call sub_40f410
lea ecx [ ebp - 0x1 ]
push ecx
push esi
lea ecx [ ebp - 0x8 ]
mov edx eax
mov [ ebp - 0x8 ] 0x1
call sub_40cc70
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x1 ] al
je r-xdata
call sub_40c790
pop edi
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_40f4d0
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
inc edx
mov [ eax ] edx
sub_40f490
push ecx
xor eax eax
pop ecx
retn
dec ecx
mov [ rw-data ] ecx
mov eax [ eax + 0x4 ]
mov eax [ eax ]
movzx ecx [ eax + 0x8 ]
test cx cx
jne r-xdata
mov eax [ edx ]
lea ecx [ eax + 0x1 ]
mov [ edx ] ecx
call sub_40f410
test eax eax
je r-xdata
cmp [ eax ] 0x20
je r-xdata
push 0xffffffff
push 0x83
push rw-data
call sub_45e737
mov eax 0x1
pop ecx
retn
test cx cx
jne r-xdata
cmp [ eax ] 0x21
jne r-xdata
sub_40f4e0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ SystemParametersInfoW@IAT ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x2000
call esi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push 0x2
push 0x0
push 0x0
push 0x2001
mov [ edx + 0x4 ] ecx
call esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40f520
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push edi
mov edi eax
mov al [ rw-data ]
mov [ esi + 0x3 ] al
cmp [ edi ] 0x0
je r-xdata
push 0x58
lea edx [ ebp - 0x5c ]
push 0x0
push edx
mov [ ecx ] 0x1
call sub_412f40
add esp 0xc
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x5c ] 0x58
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] 0x104
mov [ ebp - 0x50 ] r--data
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x28 ] 0x1804
mov [ ebp - 0x20 ] r--data
call [ GetOpenFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax edi
mov ecx edi
call sub_410120
mov ebx edi
call sub_4102b0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx edi
mov ebx esi
call sub_410190
push eax
push esi
mov eax edi
call sub_40f570
xor al al
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40f570
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov esi eax
push esi
lea edi [ ebp - 0x2c ]
call sub_40f760
test eax eax
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
lea eax [ ebp + 0xc ]
push eax
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_4528bd
test eax eax
je r-xdata
mov ebx [ ebp + 0x10 ]
cmp [ ebx ] 0x4
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ ebp + 0x8 ]
or ecx 0xffffffff
lea esi [ eax + 0x1 ]
mov [ edi + 0x10 ] eax
mov [ ebp - 0x18 ] cx
xor ecx ecx
xor ebx ebx
mov eax esi
mov edx 0x10
mul edx
seto cl
mov [ ebp + 0x10 ] 0x4
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_4115d7
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x2c ]
push edx
call sub_431e58
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x3 ]
mov edx [ eax + 0x48 ]
push ecx
push edx
call sub_434034
add esp 0x8
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x0
push r--data
push esi
push eax
push esi
push ecx
mov [ ebx ] 0x2
call sub_4033c0
or ecx 0xffffffff
mov eax 0x1
mov [ edi + 0x44 ] ebx
mov [ ebp - 0x16 ] cx
cmp [ edi + 0x10 ] eax
jl r-xdata
lea ecx [ eax + 0x4 ]
mov [ eax ] esi
push 0x10
mov ebx sub_4023e8
mov eax esi
mov [ ebp - 0x14 ] ecx
call sub_410ca0
mov ebx [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push eax
call sub_413748
add esp 0x4
lea ecx [ ebp - 0x2c ]
push ecx
call sub_431e58
lea ecx [ ebp - 0x3c ]
call sub_40edc0
lea edx [ ebp - 0x20 ]
push edx
call sub_44b469
mov al 0x1
jmp r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x10
lea ecx [ ebp - 0x20 ]
push ecx
call sub_43257b
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ecx + edx ]
mov eax [ eax ]
add ecx 0x4
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_432559
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ecx + edx ]
mov edx [ eax + 0x4 ]
add ecx 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
jmp r-xdata
lea eax [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
call sub_402780
cmp ebx 0x7f
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4325be
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
fld [ ecx + edx ]
lea eax [ ecx + edx ]
add ecx 0x8
fstp [ ebp - 0x20 ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
movzx ebx [ ecx + edx ]
lea eax [ ecx + edx ]
inc ecx
mov edi ebx
lea esi [ ebp - 0x20 ]
mov [ ebp + 0x10 ] ecx
call sub_402710
push esi
call sub_43259d
test al al
je r-xdata
mov esi [ ebp - 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x44 ]
add edx esi
push edx
call sub_4022d0
mov eax [ ebp - 0x10 ]
inc eax
add esi 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] esi
cmp eax [ edi + 0x10 ]
jle r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp + 0x10 ]
push ecx
push edx
mov [ ebp - 0xc ] ebx
call sub_444af8
mov ebx eax
mov eax edi
cmp eax 0x31
jne r-xdata
lea ebx [ ebp - 0x3c ]
call sub_40d530
cmp eax 0x30
jne r-xdata
mov edi ebx
lea esi [ ebp - 0x4c ]
call sub_401b10
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_444abd
mov ecx esi
mov [ ebp - 0x8 ] eax
call sub_402250
mov edi 0x1
lea esi [ ebp - 0x20 ]
call sub_402710
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
push ebx
cmp eax 0x37
jne r-xdata
mov edi ebx
lea esi [ ebp - 0x5c ]
call sub_401b10
push esi
call sub_444a7e
mov ecx esi
mov [ ebp - 0x8 ] eax
call sub_402250
xor edi edi
lea esi [ ebp - 0x20 ]
call sub_402710
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
push ebx
call sub_4111dc
mov ebx [ ebp - 0xc ]
add esp 0x4
lea eax [ ebp - 0x20 ]
push eax
call sub_44b41c
mov edx [ ebp + 0x8 ]
push edx
call sub_44c7dd
push ebx
call sub_4111dc
add esp 0x4
jmp r-xdata
sub_40f5c0
push ebp
mov ebp esp
mov eax 0x10020
call sub_422240
xor eax eax
nop
mov cl [ eax + rw-data ]
mov dl [ eax + rw-data ]
mov [ ebp + eax - 0x20 ] cl
mov [ ebp + eax - 0x18 ] dl
inc eax
cmp eax 0x8
jl r-xdata
lea eax [ ebp - 0x8 ]
push r--data
push eax
call sub_413650
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_410e60
add esp 0x14
push ebx
push esi
mov [ ebp - 0xc ] 0x0
push edi
mov eax 0x3
mov edi eax
lea esi [ edi - 0x14 ]
test esi esi
jle r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
lea edx [ ecx + edi - 0x14 ]
mov ecx [ eax ]
push 0x1
push 0xffffffec
push ecx
mov [ ebp - 0xc ] edx
call sub_4150d1
add esp 0xc
jmp r-xdata
xor edx edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
push 0x10000
lea edx [ ebp - 0x10020 ]
push 0x1
push edx
call sub_414d04
add esp 0x10
cmp eax 0x18
jl r-xdata
mov bl [ ebp + ecx - 0x1f ]
lea eax [ ecx + edx ]
cmp bl [ ebp + eax - 0x1001f ]
je r-xdata
cmp ecx 0x14
je r-xdata
mov bl [ ebp + ecx - 0x1e ]
lea eax [ ecx + edx ]
cmp bl [ ebp + eax - 0x1001e ]
je r-xdata
inc ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x14 ]
mov edx [ esi ]
push 0x0
push ecx
push edx
call sub_4150d1
mov eax [ esi ]
push eax
push 0x4
lea ecx [ ebp - 0x8 ]
push 0x1
push ecx
call sub_414d04
lea edx [ ebp - 0x8 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x0
call sub_414d30
add esp 0x24
neg eax
sbb eax eax
and eax 0x4
jmp r-xdata
inc edx
cmp edx esi
jl r-xdata
mov bl [ ebp + ecx - 0x1d ]
lea eax [ ecx + edx ]
cmp bl [ ebp + eax - 0x1001d ]
jne r-xdata
add ecx 0x2
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
add ecx 0x3
jmp r-xdata
mov bl [ ebp + ecx - 0x1c ]
lea eax [ ecx + edx ]
cmp bl [ ebp + eax - 0x1001c ]
je r-xdata
add ecx 0x5
cmp ecx 0x14
jl r-xdata
add ecx 0x4
jmp r-xdata
mov bl [ ebp + ecx - 0x20 ]
lea eax [ ecx + edx ]
cmp bl [ ebp + eax - 0x10020 ]
je r-xdata
jmp r-xdata
sub_40f6f0
push ebp
mov ebp esp
push ecx
test ebx ebx
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
push edi
mov edi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push edi
push ebx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push ebx
call sub_4111c1
add esp 0x4
lea edi [ eax + 0x1 ]
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
push esi
mov esi eax
cmp esi edi
jl r-xdata
push edi
jmp r-xdata
push esi
call sub_4115d7
add esp 0x4
push 0x0
push 0x0
push esi
push eax
push edi
push ebx
push 0x0
push 0x0
mov [ ebp - 0x4 ] eax
call [ WideCharToMultiByte@IAT ]
mov eax [ ebp - 0x4 ]
pop esi
pop edi
mov esp ebp
pop ebp
retn
sub_40f760
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1a8
push ebx
push esi
or ecx 0xffffffff
mov ebx r--data
call sub_40f6f0
mov esi eax
lea eax [ esp + 0xa8 ]
push esi
push eax
call sub_413650
push esi
call sub_4111dc
add esp 0xc
lea esi [ esp + 0x18 ]
call sub_40f820
lea eax [ esp + 0xa8 ]
mov ecx esi
call sub_40f850
xor ebx ebx
mov [ edi + 0x8 ] ebx
xor ecx ecx
mov eax ebx
movzx edx [ esp + ecx + 0x18 ]
add eax edx
movzx edx [ esp + ecx + 0x19 ]
add eax edx
movzx edx [ esp + ecx + 0x1a ]
add eax edx
movzx edx [ esp + ecx + 0x1b ]
add ecx 0x4
add eax edx
cmp ecx 0x10
jl r-xdata
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
push r--data
push eax
call sub_4149c2
add esp 0x8
mov [ edi ] eax
cmp eax ebx
je r-xdata
mov eax 0x1
jmp r-xdata
push edi
call sub_40f5c0
cmp eax ebx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
push edx
push 0x10
lea eax [ esp + 0x10 ]
push 0x1
push eax
call sub_414d04
add esp 0x10
push 0x99f2
push 0x10
lea ecx [ esp + 0x10 ]
push ecx
call sub_44afef
xor eax eax
mov [ edi + 0x8 ] ebx
xor ecx ecx
mov ecx [ edi ]
push ecx
mov esi eax
call sub_414a46
add esp 0x4
mov eax esi
movzx edx [ esp + eax + 0x8 ]
inc eax
imul ecx edx
cmp eax 0x10
jl r-xdata
mov eax [ edi ]
push eax
mov [ edi + 0x8 ] ecx
call sub_414fe2
add esp 0x4
mov [ edi + 0x4 ] eax
xor eax eax
jmp r-xdata
sub_40f850
push ebx
push esi
push edi
mov edi eax
push edi
mov esi ecx
call sub_413530
add esp 0x4
mov ebx eax
call sub_40f820
push edi
mov eax ebx
mov edi esi
call sub_40f880
pop edi
mov eax esi
pop esi
pop ebx
jmp sub_40f910
sub_40f880
push ebp
mov ebp esp
push ecx
mov ecx [ edi + 0x44 ]
push ebx
push esi
mov esi eax
mov eax ecx
shr eax 0x3
lea ecx [ ecx + esi * 8 ]
lea edx [ esi * 8 ]
and eax 0x3f
mov [ edi + 0x44 ] ecx
cmp ecx edx
jb r-xdata
inc [ edi + 0x48 ]
jmp r-xdata
mov ecx esi
shr ecx 0x1d
add [ edi + 0x48 ] ecx
mov ebx 0x40
sub ebx eax
cmp esi ebx
jae r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
lea eax [ eax + edi + 0x4c ]
push eax
call sub_410e60
add esp 0xc
lea ecx [ edi + 0x4c ]
push ecx
push edi
call sub_40fa10
lea eax [ ebx + 0x3f ]
cmp eax esi
jb r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ edx + eax - 0x3f ]
push ecx
push edi
call sub_40fa10
mov eax [ ebp - 0x4 ]
add eax 0x40
add ebx 0x40
mov [ ebp - 0x4 ] eax
cmp eax esi
jb r-xdata
jmp r-xdata
sub esi ebx
add ebx [ ebp + 0x8 ]
push esi
lea eax [ eax + edi + 0x4c ]
push ebx
push eax
call sub_410e60
add esp 0xc
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40f910
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
lea ebx [ edi + 0x44 ]
mov edx 0x8
mov eax ebx
lea ecx [ ebp - 0xc ]
call sub_40f9d0
mov ecx [ ebx ]
shr ecx 0x3
and ecx 0x3f
cmp ecx 0x38
jae r-xdata
mov eax 0x78
jmp r-xdata
mov eax 0x38
sub eax ecx
push rw-data
call sub_40f880
lea eax [ ebp - 0xc ]
push eax
mov eax 0x8
call sub_40f880
lea esi [ edi + 0x34 ]
mov edx 0x10
mov eax esi
mov ecx edi
call sub_40f9d0
push 0x8
push 0x0
push ebx
call sub_412f40
push 0x10
push 0x0
push esi
call sub_412f40
push 0x40
lea ecx [ edi + 0x4c ]
push 0x0
push ecx
call sub_412f40
lea ebx [ edi + 0x10 ]
add esp 0x24
mov [ ebx ] 0x0
xor esi esi
lea ebx [ ebx ]
movzx edx [ esi + edi ]
push edx
lea eax [ ebp - 0x4 ]
push r--data
push eax
call sub_414db8
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
call sub_413660
inc esi
add esp 0x14
cmp esi 0x10
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f9d0
test edx edx
je r-xdata
retn
push esi
lea esi [ edx - 0x1 ]
shr esi 0x2
inc ecx
add eax 0x2
inc esi
movzx edx [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
movzx edx [ eax - 0x1 ]
mov [ ecx ] dl
movzx edx [ eax ]
mov [ ecx + 0x1 ] dl
movzx edx [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
dec esi
jne r-xdata
pop esi
sub_40fa10
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x40 ]
mov esi [ edi + 0x38 ]
mov ebx [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x44 ]
call sub_4100c0
mov edi [ edi + 0x34 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
not edx
and edx ecx
mov eax ebx
and eax esi
or edx eax
add edx edi
mov eax [ ebp - 0x44 ]
lea eax [ edx + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
mov edi esi
and edi eax
mov edx eax
not edx
and edx ebx
or edx edi
add edx [ ebp - 0x40 ]
lea ecx [ edx + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edx ecx
not edx
and edx esi
mov edi ecx
and edi eax
or edx edi
add edx [ ebp - 0x3c ]
lea edx [ edx + ebx + 0x242070db ]
ror edx 0xf
add edx ecx
mov ebx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x38 ]
lea esi [ edi + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov [ ebp + 0xc ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp + 0xc ]
or esi edi
add esi [ ebp - 0x34 ]
lea eax [ esi + eax - 0xa83f051 ]
mov esi [ ebp + 0xc ]
rol eax 0x7
add eax esi
mov edi eax
not edi
and edi edx
mov ebx esi
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
mov ebx ecx
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x2c ]
mov ebx ecx
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x28 ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov [ ebp + 0xc ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp + 0xc ]
or esi edi
add esi [ ebp - 0x24 ]
lea eax [ esi + eax + 0x698098d8 ]
mov esi [ ebp + 0xc ]
rol eax 0x7
add eax esi
mov ebx esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x1c ]
mov ebx ecx
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov [ ebp + 0xc ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp + 0xc ]
or esi edi
add esi [ ebp - 0x14 ]
lea eax [ esi + eax + 0x6b901122 ]
mov esi [ ebp + 0xc ]
rol eax 0x7
add eax esi
mov edi eax
not edi
and edi edx
mov ebx esi
and ebx eax
or edi ebx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
mov ebx edi
and ebx esi
mov esi ecx
and esi eax
or ebx esi
add ebx [ ebp - 0xc ]
lea edx [ ebx + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
and edi edx
mov esi edx
not esi
mov [ ebp - 0x4 ] esi
and esi eax
mov ebx ecx
and ebx edx
or esi ebx
add esi [ ebp - 0x8 ]
mov ebx [ ebp + 0xc ]
lea esi [ esi + ebx + 0x49b40821 ]
ror esi 0xa
add esi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x40 ]
mov ebx edx
lea eax [ edi + eax - 0x9e1da9e ]
mov edi [ ebp - 0x4 ]
and edi esi
rol eax 0x5
add eax esi
and ebx eax
or edi ebx
add edi [ ebp - 0x2c ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x18 ]
lea edx [ edi + edx + 0x265e5a51 ]
mov edi eax
not edi
and edi ecx
rol edx 0xe
add edx ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x44 ]
mov ebx ecx
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
mov edi ecx
not edi
and edi edx
and ebx esi
or edi ebx
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov [ ebp + 0xc ] eax
mov eax edx
not eax
and eax esi
mov edi edx
and edi [ ebp + 0xc ]
or eax edi
add eax [ ebp - 0x1c ]
mov edi esi
lea ecx [ eax + ecx + 0x2441453 ]
mov eax [ ebp + 0xc ]
rol ecx 0x9
add ecx eax
not edi
and edi eax
mov ebx ecx
not eax
and eax ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi edx
and edi [ ebp + 0xc ]
or eax edi
add eax [ ebp - 0x34 ]
mov edi ecx
lea esi [ eax + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
and edi esi
mov eax ecx
not eax
and eax edx
or eax edi
add eax [ ebp - 0x20 ]
mov edi [ ebp + 0xc ]
lea eax [ eax + edi + 0x21e1cde6 ]
rol eax 0x5
add eax esi
mov [ ebp + 0xc ] eax
mov eax edx
not eax
and eax esi
mov edi edx
and edi [ ebp + 0xc ]
or eax edi
add eax [ ebp - 0xc ]
mov edi esi
lea ecx [ eax + ecx - 0x3cc8f82a ]
mov eax [ ebp + 0xc ]
rol ecx 0x9
add ecx eax
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x38 ]
not eax
and eax ecx
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi edx
and edi [ ebp + 0xc ]
or eax edi
add eax [ ebp - 0x24 ]
mov edi ecx
lea esi [ eax + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
mov eax ecx
not eax
and eax edx
and edi esi
or eax edi
add eax [ ebp - 0x10 ]
mov edi [ ebp + 0xc ]
lea eax [ eax + edi - 0x561c16fb ]
rol eax 0x5
add eax esi
mov [ ebp + 0xc ] eax
mov eax edx
not eax
and eax esi
mov edi edx
and edi [ ebp + 0xc ]
or eax edi
add eax [ ebp - 0x3c ]
mov edi esi
lea ecx [ eax + ecx - 0x3105c08 ]
mov eax [ ebp + 0xc ]
rol ecx 0x9
add ecx eax
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x28 ]
not eax
lea edx [ edi + edx + 0x676f02d9 ]
and eax ecx
rol edx 0xe
add edx ecx
mov edi edx
and edi [ ebp + 0xc ]
or eax edi
add eax [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
lea esi [ eax + esi - 0x72d5b376 ]
mov eax ecx
xor eax edx
ror esi 0xc
add esi edx
xor eax esi
add eax [ ebp - 0x30 ]
lea eax [ eax + edi - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x18 ]
lea edx [ edi + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ecx
mov edi ecx
xor edi edx
mov [ ebp + 0xc ] edi
xor edi eax
add edi [ ebp - 0xc ]
lea esi [ edi + esi - 0x21ac7f4 ]
mov edi [ ebp + 0xc ]
ror esi 0x9
add esi edx
xor edi esi
add edi [ ebp - 0x40 ]
lea eax [ edi + eax - 0x5b4115bc ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x34 ]
lea edi [ edi + ecx + 0x4bdecfa9 ]
rol edi 0xb
add edi eax
mov ecx edi
xor ecx esi
xor ecx eax
add ecx [ ebp - 0x28 ]
mov ebx edi
lea edx [ ecx + edx - 0x944b4a0 ]
rol edx 0x10
add edx edi
xor ebx edx
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x1c ]
lea ecx [ ecx + esi - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ ebp - 0x10 ]
lea eax [ ebx + eax + 0x289b7ec6 ]
rol eax 0x4
add eax ecx
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0x44 ]
lea esi [ esi + edi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x38 ]
lea edi [ edi + edx - 0x2b10cf7b ]
rol edi 0x10
add edi esi
mov edx esi
xor edx edi
mov ebx edx
xor ebx eax
add ebx [ ebp - 0x2c ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx edi
xor edx ecx
add edx [ ebp - 0x20 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx edi
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ ebp - 0x14 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0x8 ]
lea esi [ esi + edi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0xc ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0x70f3336e ]
mov edi ecx
not edi
rol edx 0xa
add edx eax
or edi edx
xor edi eax
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x1d31920 ]
mov edi ecx
not edi
rol edx 0xa
add edx eax
or edi edx
xor edi eax
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x5cfebcec ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x10 ]
lea edi [ edi + ecx + 0x4e0811a1 ]
ror edi 0xb
add edi esi
mov ecx edx
not ecx
or ecx edi
xor ecx esi
add ecx [ ebp - 0x34 ]
lea eax [ ecx + eax - 0x8ac817e ]
rol eax 0x6
add eax edi
mov ecx esi
not ecx
or ecx eax
xor ecx edi
add ecx [ ebp - 0x18 ]
lea edx [ ecx + edx - 0x42c50dcb ]
rol edx 0xa
mov ecx edi
add edx eax
not ecx
or ecx edx
xor ecx eax
add ecx [ ebp - 0x3c ]
push 0x40
lea esi [ ecx + esi + 0x2ad7d2bb ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + 0x34 ]
add ebx eax
not eax
rol esi 0xf
add esi edx
or eax esi
xor eax edx
add eax [ ebp - 0x20 ]
mov [ ecx + 0x34 ] ebx
lea eax [ eax + edi - 0x14792c6f ]
ror eax 0xb
add eax [ ecx + 0x38 ]
push 0x0
add eax esi
mov [ ecx + 0x38 ] eax
mov eax [ ecx + 0x3c ]
add eax esi
mov [ ecx + 0x3c ] eax
mov eax [ ecx + 0x40 ]
add eax edx
mov [ ecx + 0x40 ] eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_412f40
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4100c0
push esi
add eax 0x2
mov edx 0x10
push edi
lea ebx [ ebx ]
movzx esi [ eax + 0x1 ]
movzx edi [ eax ]
shl esi 0x8
or esi edi
movzx edi [ eax - 0x1 ]
shl esi 0x8
or esi edi
movzx edi [ eax - 0x2 ]
shl esi 0x8
or esi edi
mov [ ecx ] esi
add ecx 0x4
add eax 0x4
dec edx
jne r-xdata
pop edi
pop esi
retn
sub_410100
push ebp
mov ebp esp
sub esp 0x14
push edi
push eax
lea edi [ ebp - 0x14 ]
call sub_40f760
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
push r--data
lea eax [ ebp - 0x14 ]
push eax
call sub_4528bd
test eax eax
je r-xdata
xor al al
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
call sub_413748
add esp 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_431e58
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x14 ]
push ecx
call sub_431e58
jmp r-xdata
sub_410120
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov esi eax
call sub_410160
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x104
push edi
call [ GetFullPathNameW@IAT ]
call sub_410290
push edi
call sub_4111dc
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_410160
push esi
push edi
call sub_4111c1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov esi eax
push edi
push esi
call sub_411567
add esp 0x10
mov eax esi
pop esi
retn
sub_410190
push ebp
mov ebp esp
sub esp 0x214
push esi
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
push 0x104
push edx
call [ GetFullPathNameW@IAT ]
cmp [ ebx + 0x20 ] 0x0
ja r-xdata
xor esi esi
push edi
lea edi [ ebp - 0x214 ]
call sub_410160
lea ecx [ ebp - 0x4 ]
push ecx
lea esi [ ebx + 0x18 ]
mov [ ebp - 0x4 ] eax
call sub_410200
lea edx [ ebp - 0x8 ]
push edx
lea esi [ ebx + 0x28 ]
mov [ ebp - 0x8 ] 0x1
call sub_410200
mov eax [ ebx + 0x20 ]
pop edi
dec eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x2c ]
mov eax [ eax + esi * 4 ]
inc [ eax ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
inc esi
cmp esi [ ebx + 0x20 ]
jb r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
lea ecx [ ebp - 0x214 ]
push ecx
push edx
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
sub_410200
push ebp
mov ebp esp
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov eax 0x4
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop ebp
retn 0x4
sub_4102b0
push ebp
mov ebp esp
sub esp 0x428
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jne r-xdata
push 0x105
push ebx
push edi
call sub_433244
xor al al
mov esp ebp
pop ebp
retn
push esi
lea ecx [ ebp - 0x8 ]
push ecx
xor esi esi
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
pop esi
je r-xdata
push 0x104
lea edx [ ebp - 0x21c ]
push ebx
push edx
call sub_412fba
add esp 0xc
push esi
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x10 ]
push edx
xor eax eax
lea edx [ ebp - 0x21c ]
push edx
mov [ ebp - 0x14 ] ax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push esi
push esi
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jne r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x428 ]
push ecx
push edx
call [ SHGetPathFromIDListW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ eax ]
mov edx [ edx + 0x14 ]
push ecx
push eax
call edx
push 0x104
lea eax [ ebp - 0x428 ]
push eax
push edi
call sub_412fba
add esp 0xc
xor ecx ecx
mov [ edi + 0x208 ] cx
sub_410390
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0xf
call [ GetSysColorBrush@IAT ]
push 0x7f00
push 0x0
mov edi eax
call [ LoadCursorW@IAT ]
mov esi [ LoadIconW@IAT ]
mov ebx eax
mov eax [ rw-data ]
push 0x63
push eax
call esi
mov ecx [ rw-data ]
push 0xa4
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push 0xa2
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
push 0x4
call sub_44395e
add esp 0x4
xor esi esi
jmp r-xdata
mov ecx [ rw-data ]
xor esi esi
push esi
push 0x10
push 0x10
push 0x1
push 0x63
push ecx
call [ LoadImageW@IAT ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] edx
lea edx [ ebp - 0x30 ]
push edx
mov [ rw-data ] eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x23
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x28 ] sub_4010e0
call [ RegisterClassExW@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] ax
mov eax [ rw-data ]
push eax
push ecx
call sub_410490
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410490
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
push esi
xor esi esi
push 0xf
mov [ rw-data ] eax
mov [ ebp - 0x38 ] 0x30
mov [ ebp - 0x34 ] 0x2b
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] 0x1e
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] esi
call [ GetSysColorBrush@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x38 ]
push edx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x30 ] r-xdata
call [ RegisterClassExW@IAT ]
push r--data
mov [ rw-data ] ax
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x8
mov [ ebp - 0x4 ] 0x13b
call [ InitCommonControlsEx@IAT ]
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
push 0xa9
push ecx
mov [ rw-data ] eax
call [ LoadIconW@IAT ]
mov edx [ rw-data ]
push eax
push 0xffffffff
push edx
call [ ImageList_ReplaceIcon@IAT ]
mov [ rw-data ] esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_410570
mov eax [ rw-data ]
push esi
push 0x0
mov esi [ CreateWindowExW@IAT ]
push eax
push 0x0
push 0x0
push 0x64
push 0x12c
push 0x80000000
push 0x80000000
push 0xcf0000
push r--data
push r--data
push 0x0
call esi
mov ecx [ rw-data ]
push 0x0
push ecx
push 0x1
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x50b008c4
push 0x0
push r--data
push 0x0
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
mov esi [ ShowWindow@IAT ]
push 0x0
push edx
mov [ rw-data ] eax
call esi
mov eax [ rw-data ]
push 0x0
push eax
call esi
pop esi
retn
sub_410600
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0xc ]
cmp eax 0x6
jge r-xdata
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
cmp [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn
push ebx
push edi
mov eax [ esi ]
xor ecx ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1 ] 0x0
xor ebx ebx
mov edx [ esi + 0x8 ]
mov [ edx + ecx * 4 ] eax
mov eax [ eax + 0x20 ]
inc ecx
cmp ecx [ esi + 0xc ]
jl r-xdata
mov edx [ esi + 0xc ]
inc ebx
dec edx
cmp ebx edx
jl r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov [ edi ] ecx
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x1 ] 0x1
mov [ ecx + ebx * 4 + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov edx [ ecx + ebx * 4 ]
mov eax [ ecx + ebx * 4 + 0x4 ]
lea edi [ ecx + ebx * 4 ]
push edx
push eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
dec eax
test eax eax
jle r-xdata
sub_410640
push esi
xor esi esi
push 0x8000
push 0x0
push eax
mov eax [ edi + esi * 8 ]
push eax
call [ VirtualFreeEx@IAT ]
mov ecx [ edi + esi * 8 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
inc esi
cmp esi 0x10
jl r-xdata
mov eax [ edi + esi * 8 + 0x4 ]
test eax eax
jne r-xdata
pop esi
retn
sub_410660
push ebx
push esi
mov esi rw-data
xor ebx ebx
lea esp [ esp ]
push eax
call sub_44318e
mov [ esi ] ebx
jmp r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] bl
cmp [ rw-data ] bl
jne r-xdata
push eax
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp eax ebx
je r-xdata
pop esi
mov [ rw-data ] ebx
mov [ rw-data ] bl
pop ebx
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
retn
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_44420e
mov eax [ rw-data ]
mov esi [ eax ]
push rw-data
call sub_42ffda
test esi esi
je r-xdata
pop esi
retn
sub_410700
push esi
push edi
call sub_410780
mov esi rw-data
call sub_410820
mov esi rw-data
call sub_410800
mov edi rw-data
mov [ rw-data ] r--data
call sub_4107d0
mov eax [ rw-data ]
push eax
call sub_4111dc
add esp 0x4
mov esi rw-data
mov [ rw-data ] r--data
call sub_4109e0
mov ecx [ rw-data ]
push ecx
call sub_4111dc
add esp 0x4
mov ecx rw-data
call sub_402250
pop edi
mov eax rw-data
pop esi
jmp sub_4107c0
sub_410780
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 - 0x4 ]
mov eax [ edx ]
test eax eax
je r-xdata
push esi
mov esi rw-data
call sub_4109e0
cmp [ rw-data ] 0x0
pop esi
jne r-xdata
push rw-data
call sub_42ff9f
mov eax [ eax ]
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push eax
call [ DeleteObject@IAT ]
push rw-data
call sub_42fed8
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
retn
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_44420e
mov eax [ rw-data ]
mov esi [ eax ]
push rw-data
call sub_42ffda
test esi esi
je r-xdata
pop esi
retn
sub_4107c0
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_4107d0
cmp [ edi + 0x8 ] 0x0
jbe r-xdata
mov [ edi + 0x8 ] 0x0
retn
push esi
xor esi esi
lea esp [ esp ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi [ edi + 0x8 ]
jb r-xdata
pop esi
sub_410800
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_442253
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_410820
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_447da4
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_410860
mov ecx rw-data
call sub_40bc70
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] 0x4
mov [ rw-data ] 0x1
mov eax rw-data
retn
sub_410900
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi eax
mov ecx 0x1
add [ esi ] ecx
mov eax [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov [ ebp - 0x8 ] ecx
push 0xffffffff
lea ecx [ ebp - 0x10 ]
push ecx
xor eax eax
push esi
push edi
mov ecx ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
call sub_40a780
mov ecx 0x1
mov [ rw-data ] ecx
mov [ ebx + 0x144 ] cl
mov [ ebx + 0xf8 ] ecx
test eax eax
jne r-xdata
mov [ rw-data ] ecx
mov [ ebx + 0x144 ] cl
mov [ ebx + 0xf8 ] ecx
pop esi
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x10 ]
call sub_408f40
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40c650
cmp [ ebx + 0x118 ] 0x0
mov [ rw-data ] eax
je r-xdata
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push ebx
call sub_45e737
lea esi [ ebp - 0x10 ]
call sub_408f40
pop esi
mov esp ebp
pop ebp
retn
add eax 0x80001000
cmp eax 0xfff
ja r-xdata
push 0xffffffff
push 0xb9
push ebx
call sub_45e737
sub_410940
push ebp
mov ebp esp
sub esp 0x18
mov eax [ esi + 0x11c ]
mov [ ebp - 0x4 ] eax
nop
mov eax [ eax ]
mov eax [ eax ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
push esi
call sub_465124
cmp al 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
call sub_440847
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
push 0x1
inc eax
push eax
push esi
call sub_46ff4b
test eax eax
jne r-xdata
sub_410960
push 0x10
mov [ edi + 0x8 ] 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ edi + 0xc ] eax
mov eax edi
retn
sub_4109a0
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_452653
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_4109c0
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_442a17
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_4109e0
cmp [ esi + 0x8 ] 0x0
ja r-xdata
push edi
xor edi edi
mov [ esi + 0x8 ] 0x0
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_4111dc
add esp 0x4
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
pop edi
jmp r-xdata
sub_410a30
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x38 ]
push eax
call sub_44ccf1
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_410a40
push esi
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
push edi
pop esi
retn
mov edi [ esi + 0x20 ]
call sub_410b50
mov esi edi
test edi edi
jne r-xdata
pop edi
pop esi
retn
sub_410a70
push esi
mov esi eax
push edi
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
push ebx
xor ebx ebx
mov [ esi ] r--data
call sub_4109e0
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
push edx
call sub_4111dc
add esp 0x4
inc ebx
cmp ebx edi
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call [ FreeLibrary@IAT ]
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx * 4 ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
jmp r-xdata
sub_410aa0
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x30 ]
push eax
call sub_45268e
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_410ab0
push ebx
xor ebx ebx
push edi
mov edi [ MapVirtualKeyW@IAT ]
mov [ esi ] 0x5
mov [ esi + 0x4 ] 0x5
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bx
push ebx
mov [ esi + 0x1a ] ebx
mov [ esi + 0x1e ] bx
push 0x5b
mov [ esi + 0xc ] 0x4
call edi
push ebx
push 0x10
mov [ esi + 0x29 ] al
call edi
push ebx
push 0xa0
mov [ esi + 0x26 ] al
call edi
push ebx
push 0xa1
mov [ esi + 0x27 ] al
call edi
push ebx
push 0x11
mov [ esi + 0x28 ] al
call edi
push ebx
push 0x12
mov [ esi + 0x24 ] al
call edi
pop edi
mov [ esi + 0x25 ] al
pop ebx
retn
sub_410b20
xor ecx ecx
mov edx 0x1
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] cl
retn
sub_410b70
push esi
mov esi eax
push edi
call sub_40e0a0
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
retn
sub_410c20
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
imul eax edi
dec edi
js r-xdata
pop edi
pop ebp
retn 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
add esi eax
lea ebx [ ebx ]
sub esi ebx
mov ecx esi
call [ ebp + 0x14 ]
dec edi
jns r-xdata
pop esi
pop ebx
sub_410c60
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi ] r--data
ja r-xdata
push edi
xor edi edi
mov ecx [ esi + 0x4 ]
push ecx
mov [ esi + 0x8 ] 0x0
call sub_4111dc
add esp 0x4
pop esi
retn
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push 0x1
call sub_40e1c0
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
pop edi
jmp r-xdata
sub_410ca0
push ebp
mov ebp esp
push edi
mov edi eax
dec edi
js r-xdata
pop edi
pop ebp
retn 0x4
push esi
mov esi ecx
lea esp [ esp ]
mov ecx esi
call ebx
add esi [ ebp + 0x8 ]
dec edi
jns r-xdata
pop esi
sub_410cc0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_410cfc
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ebx
pushad
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ edx + 0x4 ]
cmp eax 0x1
je r-xdata
mov eax ecx
dec eax
imul eax eax 0x18
add eax 0x30
add edx eax
add ecx esp
mov [ ebp - 0x4 ] ecx
mov eax [ edx + 0x24 ]
cmp eax 0x1
je r-xdata
mov ecx [ edx + 0x8 ]
lea eax [ edx ]
push eax
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ edx + 0x20 ]
cmp eax 0xa
je r-xdata
sub edx 0x18
jmp r-xdata
mov eax [ edx ]
push eax
jmp r-xdata
mov eax [ edx + 0x4 ]
push eax
mov eax [ edx ]
push eax
jmp r-xdata
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ edx + 0xc ]
cmp eax 0x1
je r-xdata
dec ecx
je r-xdata
popad
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x4 ] esp
je r-xdata
mov eax [ edx + 0x28 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
add esp [ edx + 0x8 ]
mov edx [ edx ]
call edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
jmp r-xdata
sub_410de2
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ebx
mov edx 0xbc614e
mov [ ebp - 0x4 ] edx
mov edx 0xbc614e
mov [ ebp - 0x8 ] edx
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax 0xbc614e
call eax
mov ebx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
add edx 0x30
lea ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ edx ] eax
mov eax [ ebx ]
mov [ edx ] eax
add ebx 0x4
mov eax [ ebx ]
mov [ edx + 0x4 ] eax
jmp r-xdata
add ebx 0x4
add edx 0x18
jmp r-xdata
dec ecx
je r-xdata
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
sub_410e60
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_410ee4 ]
jmp [ ecx * 4 + jump_table_410f64 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410fd0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41116c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_411070 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41116c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_410fd0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41116c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410fd0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410fd0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410fd0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41116c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41116c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41116c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4111c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4111e7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_416c35
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ rw-data ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_416b95
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_416b95
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ rw-data ]
mov [ rw-data ] eax
sub_41129d
mov edi edi
push esi
push 0x4
push 0x20
call sub_416b49
pop ecx
pop ecx
mov esi eax
push esi
call [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4112ce
push 0xc
push r--data
call sub_416c70
call sub_41169a
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4111e7
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411304
mov eax [ ebp - 0x1c ]
call sub_416cb5
retn
sub_411321
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_417a69
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_417803
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_417082
mov [ esi + 0x4 ] eax
sub_4113a8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414622
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_414622
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_4114ab
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4113a8
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_411536
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
push esi
mov esi eax
je r-xdata
mov ecx [ ebp + 0xc ]
sub esi ecx
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
pop esi
pop ebp
retn
sub_411567
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub edx eax
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_411593
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41807d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
pop ecx
sub_4115d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4135bb
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_411988
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_4180af
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_418105
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_417fc0
push sub_425bee
mov [ rw-data ] esi
call sub_41130a
pop ecx
sub_411657
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4116ac
mov edi edi
push esi
call sub_41787c
mov esi eax
push esi
call sub_411942
push esi
call sub_417d9b
push esi
call sub_41855c
push esi
call sub_41854d
push esi
call sub_418348
push esi
call sub_418337
add esp 0x18
pop esi
retn
sub_4116df
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_411703
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_4185b7
push r--data
push r--data
call sub_4116df
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_418670
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_418591
call sub_41130a
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_418670
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_41179a
push 0x20
push r--data
call sub_416c70
push 0x8
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4118c5
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_416cb5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_4181f2
pop ecx
push [ ebp + 0x8 ]
call sub_411682
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ rw-data ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_41787c
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_41787c
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_411951
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_4182cb
pop ecx
push [ rw-data ]
call [ rw-data ]
push [ ebp + 0x8 ]
mov esi eax
call [ rw-data ]
push 0x4
mov [ rw-data ] eax
call sub_4181f2
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_411988
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4119b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
pop ebp
retn
sub_4119e3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_412eb7 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_412f40
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41893a
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_412fba
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
sub edx edi
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
movzx eax [ edx + edi ]
mov [ edi ] ax
add edi 0x2
test ax ax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_413006
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi ecx
push 0x2d
pop edx
mov [ ecx ] dx
add ecx 0x2
neg eax
add edx 0x30
add edx 0x57
jmp r-xdata
xor edx edx
div [ ebp + 0x8 ]
cmp edx 0x9
jbe r-xdata
mov [ ecx ] ax
sub ecx 0x2
mov [ ecx ] dx
add ecx 0x2
test eax eax
jne r-xdata
movzx eax [ ecx ]
mov dx [ esi ]
mov [ ecx ] dx
mov [ esi ] ax
sub ecx 0x2
add esi 0x2
cmp esi ecx
jb r-xdata
pop esi
pop ebp
retn 0x8
sub_41305c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_413006
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_413086
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
push 0x2d
pop eax
mov [ esi ] ax
mov eax [ ebp + 0xc ]
add esi 0x2
neg ebx
adc eax 0x0
neg eax
jmp r-xdata
add ecx 0x30
add ecx 0x57
jmp r-xdata
mov edi esi
xor ecx ecx
push ecx
push [ ebp + 0x10 ]
push eax
push ebx
call sub_418a00
mov [ ebp + 0xc ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
jb r-xdata
mov [ esi ] cx
add esi 0x2
test eax eax
ja r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov cx [ edi ]
mov [ esi ] cx
mov [ edi ] ax
sub esi 0x2
add edi 0x2
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_413109
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413086
mov eax [ ebp + 0x10 ]
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_41313c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
sub eax edx
push edi
jne r-xdata
pop edi
pop esi
test eax eax
jns r-xdata
sub esi ecx
jle r-xdata
or eax 0xffffffff
pop ebp
retn
add ecx 0x2
movzx edx [ ecx ]
movzx eax [ esi + ecx ]
sub eax edx
je r-xdata
pop ebp
retn
xor eax eax
inc eax
test dx dx
je r-xdata
sub_4131b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411321
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413262
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_41329b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_419192
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_41333a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
push edi
cmp [ ebp + 0x10 ] eax
je r-xdata
pop edi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
mov eax 0x7fffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_414622
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_414622
add esp 0x10
add ebx 0x2
add edi 0x2
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
sub ebx edi
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test si si
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
add edi 0x2
dec [ ebp + 0x10 ]
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
cmp si ax
je r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_41341f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41333a
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
dec [ ebp + 0x10 ]
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
cmp dx ax
je r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_4134bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_413530
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4135bb
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_411988
pop ecx
call sub_417f77
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_418901
push 0x1e
call sub_418752
push 0xff
call sub_411682
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_417f77
mov [ eax ] esi
push ebx
call sub_411988
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_417f77
mov [ eax ] esi
sub_413650
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_413660
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_413748
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_417f77
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_417f35
pop ecx
mov [ esi ] eax
pop esi
sub_413782
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_419d78
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4137d3
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_413782
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_413801
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor edx edx
push esi
push edi
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi edx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x10 ] edx
jbe r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x18 ] edx
jbe r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x18 ] edx
je r-xdata
cmp [ ebp + 0x18 ] edx
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax edx
je r-xdata
cmp [ ebp + 0x20 ] edx
jbe r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x1c ] edx
jne r-xdata
jmp r-xdata
cmp ecx edx
jne r-xdata
cmp [ ebp + 0x28 ] edx
jbe r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x20 ] edx
je r-xdata
cmp [ ebp + 0x20 ] edx
jne r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
xor esi esi
mov [ eax ] si
cmp [ ebp + 0x24 ] edx
jne r-xdata
jmp r-xdata
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x28 ] edx
jne r-xdata
cmp [ ebp + 0x28 ] edx
jne r-xdata
xor eax eax
inc eax
mov esi ecx
cmp [ esi ] 0x3a
jne r-xdata
dec eax
add esi 0x2
cmp eax edx
ja r-xdata
cmp edi edx
je r-xdata
cmp edi edx
je r-xdata
cmp [ esi ] dx
je r-xdata
movzx eax [ ecx ]
xor edi edi
xor ebx ebx
mov esi ecx
cmp ax dx
je r-xdata
xor eax eax
mov [ edi ] ax
add esi 0x2
mov [ ebp + 0x8 ] esi
mov ecx esi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x3
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp eax edx
je r-xdata
cmp ax 0x2f
je r-xdata
push 0x2
push ecx
push 0xffffffff
push edi
call sub_419e30
add esp 0x10
xor edx edx
cmp ebx edx
je r-xdata
xor edi edi
mov [ eax ] di
lea edi [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
cmp [ ebp + 0x1c ] edx
je r-xdata
cmp ebx ecx
jb r-xdata
cmp edi edx
je r-xdata
cmp ax 0x2e
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax edx
je r-xdata
sub esi ecx
sar esi 0x1
cmp [ ebp + 0x20 ] esi
jbe r-xdata
cmp [ ebp + 0x1c ] edx
je r-xdata
cmp [ ebp + 0x14 ] edx
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp ax dx
jne r-xdata
mov ebx esi
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
push esi
push ecx
push 0xffffffff
push [ ebp + 0x1c ]
call sub_419e30
add esp 0x10
xor edx edx
cmp [ ebp + 0x24 ] edx
je r-xdata
mov eax ebx
sub eax ecx
sar eax 0x1
cmp [ ebp + 0x20 ] eax
jbe r-xdata
mov [ ebp + 0x8 ] edi
mov ecx edi
jmp r-xdata
mov eax edi
sub eax ecx
sar eax 0x1
cmp [ ebp + 0x18 ] eax
jbe r-xdata
sub esi ebx
sar esi 0x1
cmp [ ebp + 0x28 ] esi
jbe r-xdata
push eax
push ecx
push 0xffffffff
push [ ebp + 0x1c ]
call sub_419e30
mov ecx [ ebp + 0x8 ]
add esp 0x10
xor edx edx
xor edx edx
push eax
push ecx
push 0xffffffff
push [ ebp + 0x14 ]
call sub_419e30
add esp 0x10
xor edx edx
push esi
push ebx
push 0xffffffff
push [ ebp + 0x24 ]
call sub_419e30
add esp 0x10
jmp r-xdata
sub_413a0e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
neg ecx
sbb ecx ecx
mov eax 0x100
and ecx eax
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
neg ecx
sbb ecx ecx
and ecx eax
push ecx
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
neg ecx
sbb ecx ecx
and ecx eax
mov eax [ ebp + 0xc ]
push ecx
push [ ebp + 0x10 ]
neg eax
sbb eax eax
and eax 0x3
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413801
add esp 0x24
pop ebp
retn
sub_413a5a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
mov cx [ edx ]
add edx 0x2
test cx cx
jne r-xdata
sub edx 0x2
cmp [ ebp + 0x10 ] 0x0
push esi
je r-xdata
xor ecx ecx
mov [ edx ] cx
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx ecx [ esi ]
dec [ ebp + 0x10 ]
mov [ edx ] cx
add edx 0x2
add esi 0x2
test cx cx
je r-xdata
sub_413a9e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_419efd
add esp 0x18
pop ebp
retn
sub_413abe
push 0xc
push r--data
call sub_416c70
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_41539a
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_4154b2
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_41539a
add eax ebx
push eax
call sub_41a016
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_41539a
add eax ebx
push eax
call sub_419192
mov [ ebp - 0x1c ] eax
call sub_41539a
add eax ebx
push eax
push edi
call sub_41a0b2
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413b52
mov eax [ ebp - 0x1c ]
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
call sub_416cb5
retn
sub_413b65
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_411321
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_418f43
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_41a0e6
fld [ eax + 0x10 ]
add esp 0xc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41a208
leave
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_413c00
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_419192
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_413d1a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4178ae
call sub_4178a8
push eax
call sub_41788e
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_417a83
mov esi [ ebp + 0x8 ]
push esi
call sub_4178a8
push eax
call sub_4178e2
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_413cd9
sub_413d7f
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_4178ae
push 0x214
push 0x1
call sub_416b49
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
xor eax eax
jmp r-xdata
push esi
call sub_413748
pop ecx
test ebx ebx
je r-xdata
call sub_417a69
push [ eax + 0x6c ]
push esi
call sub_41793c
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_417f9d
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_413d1a
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_413e1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
add eax 0x2
xor eax eax
sub_413e46
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
push ebx
push esi
push edi
test dx dx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
add eax 0x2
movzx edx [ eax ]
test dx dx
jne r-xdata
mov ecx edi
mov esi ebx
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add esi 0x2
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_413e8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_413eb8
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_417a69
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test ecx ecx
jne r-xdata
movzx edx [ ecx ]
push esi
push edi
test dx dx
je r-xdata
mov ecx [ eax + 0x1c ]
cmp [ ecx ] 0x0
mov [ ebp + 0x8 ] ecx
je r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
neg eax
sbb eax eax
and eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
cmp [ edi ] 0x0
je r-xdata
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
movzx edi [ ecx ]
mov edx eax
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
add edi 0x2
movzx esi [ edi ]
test si si
jne r-xdata
xor eax eax
mov [ ecx ] ax
add ecx 0x2
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
mov edi [ ebp + 0xc ]
test ax ax
je r-xdata
cmp si dx
je r-xdata
mov esi [ ebp + 0xc ]
test ax ax
je r-xdata
jmp r-xdata
cmp dx di
je r-xdata
sub_413f66
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_414021
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
push 0x16
pop eax
pop ebp
retn
sub_41404e
push 0x10
push r--data
call sub_416c70
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
test ebx ebx
js r-xdata
call sub_417f77
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_417f77
mov [ eax ] 0x9
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
call sub_417f25
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
call sub_416cb5
retn
cmp eax 0x20000
je r-xdata
push ebx
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f77
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push ebx
call sub_413f66
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414131
mov eax [ ebp - 0x1c ]
sub_414139
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
pop ebp
retn
sub_41415f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_418f98
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_41443c
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_414139
pop ecx
push eax
call sub_41b7b2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_410e60
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_4142b6
push 0xc
push r--data
call sub_416c70
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_415471
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41415f
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414326
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
call sub_416cb5
retn
sub_414330
push 0xc
push r--data
call sub_416c70
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
cmp eax ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] edi
push edi
call sub_415471
pop ecx
mov [ ebp - 0x4 ] ebx
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_416cb5
retn
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push edi
call sub_414139
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414432
mov eax [ ebp - 0x1c ]
push edi
call sub_41a016
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push edi
call sub_41b91b
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_41a0b2
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_41443c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_414139
pop ecx
push eax
call sub_41b7b2
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4144a4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41443c
pop ecx
test eax eax
je r-xdata
push esi
call sub_4144ec
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_414139
push eax
call sub_41c523
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_4144ec
push 0x14
push r--data
call sub_416c70
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4145bd
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_416cb5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4154b2
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_41458e
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_4144a4
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4144a4
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4145c6
push 0xc
push r--data
call sub_416c70
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_415471
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_4144a4
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41460f
mov eax [ ebp - 0x1c ]
push esi
call sub_4144ec
pop ecx
jmp r-xdata
call sub_416cb5
retn
sub_414622
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_411321
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_41c5fc
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_418f43
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4146d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_411321
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_417f77
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4131b1
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_419d78
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41c812
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4147ea
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4146d5
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_414816
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xe ]
mov eax 0x7ff0
mov ecx eax
and dx cx
cmp dx ax
jne r-xdata
movzx ecx [ ebp + 0xe ]
and ecx 0x8000
test dx dx
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41c885
dec eax
pop ecx
pop ecx
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
mov eax ecx
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff08
add eax 0x100
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffffe0
add eax 0x40
pop ebp
retn
mov eax ecx
neg eax
sbb eax eax
and eax 0xffffff90
sub eax 0xffffff80
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_4148b3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_41d1b0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_414904
push 0xc
push r--data
call sub_416c70
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
xor eax eax
cmp [ esi ] di
setne al
cmp eax edi
je r-xdata
call sub_416cb5
retn
call sub_41d4d1
mov [ ebp + 0x8 ] eax
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp [ ebx ] di
jne r-xdata
call sub_417f77
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push ebx
call sub_41d218
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4149b8
mov eax [ ebp - 0x1c ]
call sub_417f77
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_41d610
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4149d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_41443c
push esi
mov edi eax
call sub_41d8c2
push esi
call sub_414139
push eax
call sub_41d7fe
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_413748
and [ esi + 0x1c ] 0x0
pop ecx
sub_414a46
push 0xc
push r--data
call sub_416c70
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push esi
call sub_415471
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4149d9
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414ab2
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_416cb5
retn
mov eax [ ebp - 0x1c ]
sub_414aba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test esi esi
je r-xdata
push ebx
push 0x0
push ecx
call sub_412f40
add esp 0xc
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_41d8f3
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
js r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_417f77
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_412f40
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_414139
pop ecx
push eax
call sub_41dfcc
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41e0c2
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_417f25
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_414c76
push 0xc
push r--data
call sub_416c70
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_415471
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414aba
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414cfa
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_416cb5
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_412f40
add esp 0xc
sub_414d30
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_414db8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41b91b
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_414e4e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
push edi
call sub_414139
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_41e1f4
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
pop esi
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
mov [ ebp - 0xc ] ebx
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx esi
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax ebx
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
inc ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
and [ ebp - 0xc ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0x8 ]
call sub_41e1f4
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41e1f4
add esp 0xc
test eax eax
jns r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_414fe2
push 0xc
push r--data
call sub_416c70
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_415471
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_414e4e
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41503d
mov eax [ ebp - 0x1c ]
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
call sub_416cb5
retn
sub_415047
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41443c
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_414e4e
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_414139
pop ecx
push eax
call sub_41e1f4
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_4150d1
push 0xc
push r--data
call sub_416c70
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_415471
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415047
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415143
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_416cb5
retn
cmp esi 0x2
jne r-xdata
sub_41514d
mov edi edi
push esi
call sub_4179f0
mov esi eax
test esi esi
je r-xdata
push 0x0
call [ ExitThread@IAT ]
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push esi
call sub_417bb2
pop ecx
push eax
call [ CloseHandle@IAT ]
sub_4151bb
mov edi edi
push ebp
mov ebp esp
call sub_4178ae
call sub_4178a8
push eax
call sub_41788e
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_417a83
push [ ebp + 0x8 ]
call sub_4178a8
push eax
call sub_4178e2
test eax eax
jne r-xdata
call sub_41517a
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
sub_415214
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_4178ae
push 0x214
push 0x1
call sub_416b49
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
push esi
call sub_413748
pop ecx
test ebx ebx
je r-xdata
call sub_417a69
push [ eax + 0x6c ]
push esi
call sub_41793c
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
push esi
push 0x4
push esi
push sub_4151bb
push [ ebp + 0xc ]
mov [ esi + 0x54 ] edi
push 0x0
mov [ esi + 0x58 ] eax
call [ CreateThread@IAT ]
mov edi eax
mov [ esi + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop ebx
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
push ebx
call sub_417f9d
pop ecx
call [ GetLastError@IAT ]
mov ebx eax
push edi
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
mov eax edi
sub_4152ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_419192
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_418f98
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_4153a0
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_416b49
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_416b49
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_415471
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4182cb
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4154b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4182cb
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_4154e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4181f2
pop ecx
pop ebp
retn
sub_415520
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_4181f2
pop ecx
pop ebp
retn
sub_41554f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] cx
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_417f77
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_417f77
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov edi ecx
push 0x2d
pop ecx
xor ebx ebx
mov [ esi ] cx
inc ebx
lea ecx [ esi + 0x2 ]
neg eax
add edx 0x30
add edx 0x57
jmp r-xdata
xor eax eax
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dx
add ecx 0x2
inc ebx
test eax eax
je r-xdata
mov [ ecx ] ax
sub ecx 0x2
mov [ esi ] ax
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
movzx eax [ ecx ]
mov dx [ edi ]
mov [ ecx ] dx
mov [ edi ] ax
sub ecx 0x2
add edi 0x2
cmp edi ecx
jb r-xdata
xor eax eax
call sub_417f25
mov eax esi
jmp r-xdata
sub_41562e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_41554f
pop ebp
retn
sub_415658
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push ebx
push 0x24
push 0xff
push esi
call sub_412f40
mov ebx [ ebp + 0xc ]
add esp 0xc
cmp ebx edi
jne r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
cmp eax edi
jg r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
jmp r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
call sub_41ea45
lea eax [ ebp - 0x8 ]
push eax
call sub_41ed0e
pop ecx
test eax eax
jne r-xdata
jg r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
cmp ecx edi
jb r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_417ed3
int3
lea eax [ ebp - 0xc ]
push eax
call sub_41ed3b
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_41ed68
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
test ecx ecx
jl r-xdata
push ebx
push esi
call sub_41ead5
pop ecx
pop ecx
test eax eax
jne r-xdata
jg r-xdata
pop ebx
cmp [ ebp - 0x8 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_41ead5
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_41ea94
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_41edb0
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_41ee60
mov [ esi + 0x4 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
mov [ esi + 0x20 ] 0x1
cdq
mov ecx eax
mov eax [ esi ]
mov [ ebp + 0x8 ] edx
cdq
mov edi eax
mov ebx edx
sub edi ecx
sbb ebx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_41ea94
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_41edb0
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_41ee60
mov [ esi + 0x8 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_41ee60
mov [ esi ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_41ead5
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_41edb0
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
je r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_4158e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_413748
pop ecx
sub_415900
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dx
add [ ecx ] 0x2
add esi 0x2
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
movzx edx [ esi ]
test dx dx
je r-xdata
sub_415926
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x1
mov ecx [ edi ]
jbe r-xdata
mov eax [ edi ]
mov [ edi ] ecx
sub ecx 0x2
push ebx
movzx edx [ ecx ]
mov si [ eax ]
mov [ ecx ] si
mov [ eax ] dx
sub ecx 0x2
add eax 0x2
cmp eax ecx
jb r-xdata
pop esi
retn
pop ebx
cmp edx 0x1
ja r-xdata
push 0xa
cdq
pop ebx
idiv ebx
add edx 0x30
mov [ ecx ] dx
add ecx 0x2
dec [ esi ]
mov edx [ esi ]
test eax eax
jle r-xdata
sub_41596f
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x0
push ebx
mov ebx edx
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] ecx
je r-xdata
mov edi [ ecx + 0x158 ]
dec eax
je r-xdata
movzx ecx [ edi ]
test cx cx
jne r-xdata
cmp [ ebp + 0xc ] 0x2
mov eax [ GetDateFormatW@IAT ]
jne r-xdata
mov edi [ ecx + 0x15c ]
jmp r-xdata
mov edi [ ecx + 0x160 ]
jmp r-xdata
xor edx edx
cmp [ ebx ] edx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx 0x76c
add dx [ ecx + 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] dx
mov dx [ ecx + 0x10 ]
inc dx
mov [ ebp - 0x12 ] dx
mov dx [ ecx + 0xc ]
mov [ ebp - 0xe ] dx
mov dx [ ecx + 0x8 ]
mov [ ebp - 0xc ] dx
mov dx [ ecx + 0x4 ]
mov cx [ ecx ]
mov [ ebp - 0x8 ] cx
xor ecx ecx
push ecx
push ecx
push edi
mov [ ebp - 0xa ] dx
lea edx [ ebp - 0x14 ]
push edx
push ecx
mov [ ebp - 0x6 ] cx
mov ecx [ ebp - 0x20 ]
push [ ecx + 0xac ]
call eax
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ GetTimeFormatW@IAT ]
cmp [ ecx + 0xb0 ] 0x1
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x18 ] edx
mov eax edi
lea eax [ eax + eax + 0x8 ]
cmp eax 0x400
ja r-xdata
add eax 0x2
inc edx
cmp [ eax ] cx
je r-xdata
mov [ ebp - 0x1c ] eax
movzx eax cx
cmp eax 0x64
jg r-xdata
push eax
call sub_4135bb
pop ecx
test eax eax
je r-xdata
call sub_41ef80
mov eax esp
test eax eax
je r-xdata
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
dec edx
je r-xdata
sub eax 0x5
je r-xdata
dec edx
je r-xdata
cmp eax 0x27
je r-xdata
push [ ebp - 0x30 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x20 ]
push 0x0
push [ eax + 0xac ]
call [ ebp - 0x1c ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x18 ] 0x1
dec edx
je r-xdata
dec edx
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x18 ] 0x1
dec edx
je r-xdata
lea edi [ edi + edx * 2 ]
test dl 0x1
je r-xdata
cmp eax 0x41
je r-xdata
push [ ebp - 0x18 ]
call sub_4158e0
pop ecx
mov ecx [ ebp - 0x2c ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x1c ]
jmp r-xdata
push 0x49
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec edx
je r-xdata
dec edx
je r-xdata
dec eax
je r-xdata
pop eax
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
push ebx
push esi
push [ ebp - 0x24 ]
push eax
push [ ebp - 0x28 ]
call sub_415d62
add esp 0x1c
test eax eax
je r-xdata
push 0x64
jmp r-xdata
dec edx
je r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
push r--data
push edi
call sub_4114ab
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x48
je r-xdata
mov di [ ebx ]
mov edx [ esi ]
mov [ edx ] di
add [ esi ] 0x2
add ebx 0x2
dec [ ecx ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41a208
leave
retn
mov eax [ esi ]
mov [ eax ] cx
add [ esi ] 0x2
add edi 0x2
dec [ ebx ]
push 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec edx
je r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp - 0x20 ]
jg r-xdata
sub eax 0x5
jne r-xdata
push 0x61
jmp r-xdata
dec edx
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_4114ab
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0xa
jmp r-xdata
dec edx
je r-xdata
cmp eax 0x4d
je r-xdata
cmp [ ecx ] 0x0
jbe r-xdata
push 0x53
jmp r-xdata
jmp r-xdata
mov ecx [ eax + 0x154 ]
mov ecx [ eax + 0x150 ]
jmp r-xdata
dec edx
dec edx
je r-xdata
push 0x41
jmp r-xdata
add edi 0x2
cmp ax 0x27
je r-xdata
push 0x70
jmp r-xdata
add edi 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x1
dec edx
je r-xdata
dec edx
je r-xdata
cmp eax 0x61
je r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx 0x1
jne r-xdata
push 0x79
jmp r-xdata
dec edx
dec edx
jne r-xdata
mov ecx [ esi ]
mov [ ecx ] ax
add [ esi ] 0x2
dec [ ebx ]
movzx eax [ edi ]
test ax ax
jne r-xdata
push 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec edx
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
mov eax [ esi ]
mov cx [ ecx ]
mov [ eax ] cx
add [ esi ] 0x2
dec [ ebx ]
jmp r-xdata
push 0x59
jmp r-xdata
jmp r-xdata
push 0x6d
jmp r-xdata
dec edx
je r-xdata
mov edx [ esi ]
mov [ edx ] ax
add [ esi ] 0x2
add ecx 0x2
dec [ ebx ]
push 0x62
jmp r-xdata
dec edx
jne r-xdata
push 0x42
jmp r-xdata
sub_415d02
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push edi
mov edi edx
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax [ ecx ]
jae r-xdata
mov eax [ ebp + 0x8 ]
call sub_415926
jmp r-xdata
mov [ ecx ] ebx
mov edx eax
cmp edx ebx
je r-xdata
pop edi
pop ebx
pop ebp
retn
lea eax [ ebx + ebx ]
add [ edi ] eax
sub [ ecx ] ebx
jmp r-xdata
push esi
mov [ ebp + 0x10 ] edx
lea esi [ eax + eax - 0x2 ]
mov eax [ ebp + 0x8 ]
push 0xa
cdq
pop ecx
idiv ecx
mov ecx [ edi ]
add edx 0x30
mov [ esi + ecx ] dx
inc ebx
sub esi 0x2
dec [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
pop esi
sub_415d62
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x14 ]
cmp ecx 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
test eax eax
js r-xdata
sub eax 0x5a
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp ecx 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp eax 0x17
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp eax 0xb
jg r-xdata
call sub_41ea45
push [ ebp + 0x8 ]
and [ ebp + 0xc ] 0x0
push 0xffffffff
call sub_41eda7
mov edx [ ebp + 0x10 ]
mov esi [ ebp + 0x18 ]
mov edi [ ebp + 0x14 ]
xor ecx ecx
cmp [ edx + 0x20 ] ecx
setne cl
push [ eax + ecx * 4 ]
lea eax [ ebp + 0xc ]
push [ esi ]
push [ edi ]
push eax
call sub_41f10e
add esp 0x18
test eax eax
jne r-xdata
sub eax 0x7
je r-xdata
pop edi
pop esi
pop ebp
retn
push 0x64
mov eax ecx
cdq
pop ecx
idiv ecx
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
add eax 0x13
imul eax eax 0x64
add eax edx
push eax
push 0x4
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
push 0x6
pop edx
sub eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x4
je r-xdata
mov edx [ ebp + 0x1c ]
cmp eax 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
je r-xdata
dec eax
je r-xdata
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_417ed3
mov eax [ ebp + 0xc ]
lea ecx [ eax + eax - 0x2 ]
add [ edi ] ecx
xor ecx ecx
inc ecx
sub ecx eax
add [ esi ] ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x18 ]
test edx edx
js r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x3b
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
jmp r-xdata
push 0x2
pop esi
sub eax esi
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x154 ]
mov edx [ edx + 0x150 ]
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push eax
xor eax eax
inc eax
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x20 ]
cdq
push [ ebp + 0x18 ]
push 0x64
pop ecx
idiv ecx
jmp r-xdata
cmp edx 0x6
jle r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
test edx edx
js r-xdata
dec eax
je r-xdata
jle r-xdata
test eax eax
js r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
sub eax esi
je r-xdata
push 0xc
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
call sub_415900
mov edx [ ebp + 0x14 ]
call sub_415d02
add esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41596f
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edx
jmp r-xdata
mov esi [ ebp + 0x1c ]
mov edx [ esi + edx * 4 + 0xb8 ]
jmp r-xdata
cmp edx 0xb
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
mov edi [ ebp + 0x18 ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
mov esi [ ebp + 0x14 ]
mov edx edi
je r-xdata
dec eax
je r-xdata
jmp r-xdata
cmp ecx edx
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push ecx
pop edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push 0x25
pop edx
mov [ ecx ] dx
add [ eax ] 0x2
mov eax [ ebp + 0x18 ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov esi [ ebp + 0x1c ]
mov edx [ esi + edx * 4 + 0xf0 ]
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
cmp eax 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov edx [ eax + 0x1c ]
test edx edx
js r-xdata
cmp ecx edx
jg r-xdata
push [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x18 ]
test edx edx
js r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41596f
add esp 0xc
test eax eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp eax 0x1f
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x1c ]
test eax eax
js r-xdata
cmp edx 0x16d
jg r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x1c ]
cmp edx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
test edx edx
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ esi ]
push 0x20
pop ecx
push [ ebp + 0x10 ]
mov [ eax ] cx
add [ esi ] 0x2
dec [ edi ]
push 0x2
mov edx edi
cmp eax 0x16d
jg r-xdata
cmp edx ecx
jge r-xdata
dec ecx
jmp r-xdata
mov ecx edx
jmp r-xdata
mov esi [ ebp + 0x1c ]
mov edx [ esi + edx * 4 + 0xd4 ]
jmp r-xdata
cmp edx 0xb
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x20 ]
inc eax
push [ ebp + 0x18 ]
push eax
push 0x3
jmp r-xdata
mov eax edx
push 0x7
cdq
pop edi
idiv edi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x1c ]
mov edx [ esi + edx * 4 + 0x120 ]
jmp r-xdata
cmp eax 0x17
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push eax
mov eax esi
jmp r-xdata
inc eax
sub_4161d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push [ ebp + 0x1c ]
and [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
call sub_411321
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
mov [ eax ] cx
test esi esi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
leave
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor eax eax
mov [ ecx ] ax
cmp [ ebp - 0xc ] eax
jne r-xdata
movzx eax [ esi ]
mov ecx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x4 ] eax
ja r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
cmp ecx 0x25
je r-xdata
call sub_417f77
mov [ eax ] 0x22
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx ] ax
sub ebx [ ebp - 0x4 ]
cmp [ ebp - 0x14 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
add [ ebp + 0x8 ] 0x2
add esi 0x2
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
add esi 0x2
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
movzx eax [ esi ]
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_415d62
add esp 0x1c
test eax eax
je r-xdata
inc eax
add esi 0x2
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
add esi 0x2
mov [ ebp - 0xc ] 0x1
sub_416345
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4161d0
add esp 0x18
pop ebp
retn
sub_416370
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
push esi
push edi
fstp [ ebp - 0x8 ]
mov esi 0xffff
push esi
push 0x133f
call sub_41d0af
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x7fffffff
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x8 ] eax
call sub_41d0af
fld [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41c885
dec eax
pop ecx
pop ecx
je r-xdata
push esi
push edi
call sub_41d0af
fld [ ebp + 0x8 ]
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
push esi
push edi
call sub_41d0af
fld [ ebp + 0x8 ]
fchs
jmp r-xdata
dec eax
fld [ ebp + 0x8 ]
push edi
je r-xdata
push ecx
push ecx
fstp [ esp ]
push 0x15
call sub_41cf6f
add esp 0x10
jmp r-xdata
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x15
push 0x8
call sub_41cfc4
add esp 0x1c
jmp r-xdata
pop edi
pop esi
leave
retn
sub_416454
push 0x58
push r--data
call sub_416c70
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ rw-data ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_419d5a
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_417c20
test eax eax
jne r-xdata
push 0x1c
call sub_41642b
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_41856b
mov [ ebp - 0x4 ] esi
call sub_41aaa1
test eax eax
jns r-xdata
push 0x10
call sub_41642b
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_41f584
mov [ rw-data ] eax
call sub_41f4d6
test eax eax
jns r-xdata
push 0x1b
call sub_411924
call sub_41f2a4
test eax eax
jns r-xdata
push 0x8
call sub_411924
push 0x1
call sub_411703
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_411924
call sub_41f25e
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_411924
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_411906
jmp sub_4165b1
push eax
call sub_4118da
push ecx
push eax
push esi
push __dos_header
call sub_40d6b0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_4165d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_416654 ]
jmp [ ecx * 4 + jump_table_4166d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416740 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4168dc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4167e0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4168dc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416740 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4168dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416740 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416740 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416740 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4168dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4168dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4168dc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_416931
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_416b04
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4135bb
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_416b49
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f677
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_416b95
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f6f9
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_416be3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f7a6
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_416c35
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
pop ebp
retn
sub_416c70
push sub_416cd0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_416cd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41a208
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41a208
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41d74b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_41d702
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_41a208
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41a208
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_41d732
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41d74b
mov eax [ ebp + 0xc ]
push rw-data
call sub_418670
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_41a208
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_41d719
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41a208
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_416e5f
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_416e8e
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_412f40
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_416ef2
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_41f8fb
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41c812
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41c812
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_412f40
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_417082
push 0xc
push r--data
call sub_416c70
call sub_417a69
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41711d
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_416cb5
retn
push 0x20
call sub_411924
cmp esi rw-data
je r-xdata
push esi
call sub_413748
pop ecx
sub_417126
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_411321
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4171a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_417126
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_416e8e
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_412f40
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_416e5f
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_416ef2
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_412f40
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_416e5f
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_41738b
push 0x14
push r--data
call sub_416c70
or [ ebp - 0x20 ] 0xffffffff
call sub_417a69
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_417082
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_417126
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_416b04
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_416cb5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4171a2
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_417f77
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_413748
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_413748
pop ecx
push 0xd
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4174ec
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_413748
pop ecx
sub_417543
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4175d2
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41766b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_413748
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_413748
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_413748
push [ esi + 0xc0 ]
call sub_413748
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_41f93b
push [ esi + 0xd4 ]
call sub_413748
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_413748
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_413748
pop ecx
push [ esi + 0xb0 ]
call sub_413748
push [ esi + 0xbc ]
call sub_413748
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_413748
push [ esi + 0xbc ]
call sub_41fd1b
pop ecx
pop ecx
push eax
call sub_413748
pop ecx
push eax
call sub_413748
push [ esi + 0xbc ]
call sub_41fcb2
pop ecx
pop ecx
sub_4177b6
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_417543
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_4175d2
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41766b
pop ecx
sub_417803
push 0xc
push r--data
call sub_416c70
call sub_417a69
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_4177b6
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417870
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_417a69
mov esi [ eax + 0x6c ]
mov eax esi
call sub_416cb5
retn
push 0x20
call sub_411924
sub_4178ae
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ rw-data ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_4178ff
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ rw-data ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_41819b
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_41793c
push 0x8
push r--data
call sub_416c70
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4179de
push 0xc
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_417543
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4179e7
call sub_416cb5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4179f0
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4178ae
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_416b49
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ rw-data ]
call eax
test eax eax
je r-xdata
push esi
call sub_413748
pop ecx
xor esi esi
push 0x0
push esi
call sub_41793c
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_417a83
push 0x8
push r--data
call sub_416c70
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_416cb5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_413748
pop ecx
push 0xd
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_413748
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417b9d
push 0xc
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417ba9
push esi
call sub_413748
pop ecx
push edi
call sub_4175d2
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_413748
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41766b
pop ecx
sub_417bb2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ rw-data ]
call eax
push [ ebp + 0x8 ]
call sub_417a83
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_417c20
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_4178ff
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_417885
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4116ac
push [ rw-data ]
mov esi [ rw-data ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_418151
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_4178ff
mov edi [ rw-data ]
push sub_417a83
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_416b49
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41793c
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_417daa
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_412f40
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_41fe19
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_41fe19
pop ecx
sub_417ed3
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_417daa
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_417ef8
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417ed3
int3
pop ebp
jmp eax
sub_417f35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_417f9d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_417f8a
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_417f35
pop ecx
mov esi eax
call sub_417f77
mov [ eax ] esi
pop esi
pop ebp
retn
sub_417fea
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_413530
lea esi [ eax + 0x1 ]
push esi
call sub_4135bb
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_41ff4b
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_418048
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_41802a
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_417fea
jmp r-xdata
sub_418088
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41802a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
pop ecx
sub_4180af
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_418048
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4180e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4180d4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
pop ecx
sub_418105
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_418151
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_41819b
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_413748
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_418209
push 0xc
push r--data
call sub_416c70
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_418901
push 0x1e
call sub_418752
push 0xff
call sub_411682
push 0x18
call sub_416b04
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_417f77
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_416cb5
retn
push edi
call sub_413748
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_413748
pop ecx
call sub_417f77
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4182c2
mov eax [ ebp - 0x1c ]
sub_4182cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_418209
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_411924
sub_418366
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4183aa
push 0x20
push r--data
call sub_416c70
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4179f0
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_416cb5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_418366
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4118f0
mov [ ebp - 0x1c ] 0x1
push eax
call [ rw-data ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4182cb
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41787c
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418511
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_41856b
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_418591
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4185b7
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ rw-data ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4185e0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_418620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418670
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_416cd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4185e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_418620
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41872c
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_418752
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41872c
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
push 0x3
call sub_42027d
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_42027d
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_41ef12
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_413530
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_417ed3
push esi
call sub_4111c1
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_41ef12
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_420208
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4111c1
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_419e30
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_420208
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_42009c
add esp 0xc
jmp r-xdata
sub_418901
push 0x3
call sub_42027d
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_418752
push 0xff
call sub_418752
pop ecx
pop ecx
push 0x3
call sub_42027d
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41893a
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_418a00
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_418a95
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_418f43
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_4202bc
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_4202bc
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_417f77
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_4202bc
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_418c71
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_411321
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp ebx ecx
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] ecx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push esi
movzx esi [ ebx ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x8
push esi
call sub_418f43
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
movzx esi [ edi ]
add edi 0x2
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx esi [ edi ]
add edi 0x2
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_4202bc
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_418a00
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_4202bc
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
sub edi 0x2
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_420460
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_417f77
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_4202bc
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
pop esi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_418f18
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_418c71
add esp 0x14
pop ebp
retn
sub_418f43
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_418f98
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_414139
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_417f77
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41539a
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_41b7b2
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_42064c
pop ecx
test eax eax
jne r-xdata
call sub_41539a
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41b7b2
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_420603
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_420519
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_4190fc
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_4206a2
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_41912b
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_4190fc
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_4190fc
pop ecx
sub_419192
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_411321
call sub_417f77
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_419d3a ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_4190fc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_413748
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_41912b
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ rw-data ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_420829
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_4131b1
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_42083f
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_41912b
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_4190fc
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_416b04
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_418a00
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_4190fc
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_4190fc
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_413530
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_42083f
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_4190fc
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_419d78
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_411321
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4131b1
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41f8fb
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_419e30
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_417f25
mov eax esi
jmp r-xdata
sub_419efd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
call sub_417f77
push 0x16
cmp [ ebp + 0xc ] edi
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x10 ]
xor ebx ebx
push 0x2
pop esi
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx edi
je r-xdata
movzx ecx [ ecx ]
cmp cx di
je r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx edi
je r-xdata
cmp [ ecx ] di
je r-xdata
mov ebx esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
mov ecx [ ebp + 0x1c ]
cmp ecx edi
je r-xdata
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx ] ax
call sub_417f77
push 0x22
jmp r-xdata
mov [ eax ] cx
push 0x3a
add eax esi
pop ecx
mov [ eax ] cx
add eax esi
inc ebx
cmp ebx [ ebp + 0xc ]
jbe r-xdata
movzx edx [ ecx ]
cmp dx di
je r-xdata
cmp [ ecx ] di
jne r-xdata
mov dx [ ecx ]
mov [ eax ] dx
add ecx esi
add eax esi
cmp [ ecx ] di
jne r-xdata
pop ecx
mov esi ecx
mov [ eax ] ecx
call sub_417f25
mov eax esi
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp edx 0x2e
je r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
sub ecx esi
movzx ecx [ ecx ]
cmp ecx 0x2f
je r-xdata
cmp [ ecx ] di
jne r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov dx [ ecx ]
mov [ eax ] dx
add eax esi
add ecx esi
cmp ecx 0x5c
je r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
push 0x2e
pop edx
mov [ eax ] dx
add eax esi
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov dx [ ecx ]
mov [ eax ] dx
add eax esi
add ecx esi
push 0x5c
pop ecx
mov [ eax ] cx
add eax esi
sub_41a016
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_414139
push eax
call sub_42064c
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_41539a
add eax 0x20
cmp esi eax
jne r-xdata
call sub_41539a
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_416b04
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_41a0b2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_41443c
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_41a0e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_41a217
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42096f
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
sar eax 0x1
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_41a217
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x78 ] eax
inc edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x70 ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
push ebx
push esi
push 0x2
mov [ ebp - 0x54 ] edx
pop esi
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
xor eax eax
jmp r-xdata
add edx esi
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_41a208
leave
retn
movzx eax [ edx ]
cmp eax 0x20
je r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0xd
jne r-xdata
push 0x30
pop ebx
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_41a927 ]
movzx eax [ edx ]
add edx esi
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x5c ] edi
cmp cx 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
mov [ ebp - 0x5c ] edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] edi
jne r-xdata
add eax 0xffffffd0
mov [ ebp - 0x6c ] edi
cmp ax 0x9
ja r-xdata
lea ecx [ edx - 0x4 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
mov [ ebp - 0x60 ] edi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] edi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
je r-xdata
cmp ax bx
jae r-xdata
cmp ax bx
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp ax bx
je r-xdata
cmp ax bx
jmp r-xdata
push 0xa
pop ecx
sub edx esi
sub eax 0x2b
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp ax bx
jae r-xdata
mov [ ebp - 0x70 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
sub eax 0x2b
je r-xdata
push 0x5
cmp eax 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
cmp ax 0x39
ja r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax 0x39
ja r-xdata
movzx eax ax
jmp r-xdata
cmp ax bx
je r-xdata
pop ecx
sub edx esi
jmp r-xdata
push 0x7
jmp r-xdata
sub eax esi
je r-xdata
movzx eax [ edx ]
add edx esi
add eax 0xffffffcf
cmp ax 0x8
jbe r-xdata
jne r-xdata
sub eax esi
je r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
mov eax [ ebp - 0x58 ]
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
mov ecx esi
jmp r-xdata
sub eax esi
je r-xdata
sub edx esi
push 0xb
jmp r-xdata
cmp eax 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp eax 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
movzx eax [ edx ]
add edx esi
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
sub edx esi
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x68 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movzx edi ax
lea ecx [ ecx + edi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x58 ]
dec eax
inc [ ebp - 0x50 ]
jmp r-xdata
inc [ ebp - 0x9 ]
mov ecx esi
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
je r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc [ ebp - 0x4c ]
sub al bl
inc [ ebp - 0x58 ]
mov [ ecx ] al
jmp r-xdata
cmp eax 0x2d
je r-xdata
movzx eax [ edx ]
add edx esi
inc [ ebp - 0x4c ]
mov ecx [ ebp - 0x58 ]
sub al bl
inc [ ebp - 0x58 ]
dec [ ebp - 0x50 ]
mov [ ecx ] al
cmp ax bx
jae r-xdata
mov ecx 0x1451
movzx eax [ edx ]
add edx esi
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp eax 0x43
jle r-xdata
movzx eax [ edx ]
add edx esi
jmp r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_42200c
mov eax [ ebp - 0x68 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x64 ] edx
jge r-xdata
cmp eax 0x45
jle r-xdata
movzx eax [ edx ]
add edx esi
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
add eax 0xffffff9c
cmp eax edi
ja r-xdata
cmp [ ebp - 0x6c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x70 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi + 0x2 ] esi
pop esi
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x70 ]
mov [ edi ] cx
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x70 ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x78 ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x78 ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x4c ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x64 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x5c ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x64 ]
dec [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x6c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
add eax eax
mov [ ebp - 0x68 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x50 ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x68 ]
cmp [ ebp - 0x68 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x50 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x60 ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x50 ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x58 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x4c ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_41a957
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4179f0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_41aaa1
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_416b49
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_416b49
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_41ace6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41ad67
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41aded
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_41ae56
push 0xc
push r--data
call sub_416c70
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_416cb5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41aeec
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_41aef5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41af1c
push 0x18
push r--data
call sub_416c70
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_418209
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b0ac
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_416cb5
retn
push 0x40
push 0x20
call sub_416b49
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_41ae56
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_4182cb
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41afee
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41b0b5
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_422240
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_417f8a
mov [ eax ] edi
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41a208
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
push esi
call sub_42064c
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_420494
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_417a69
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_417f77
mov [ eax ] 0x1c
call sub_417f8a
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_417f9d
pop ecx
jmp r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_4131e9
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_4221f0
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_420955
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_420955
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_4221f0
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_41b7b2
push 0x10
push r--data
call sub_416c70
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_416cb5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41b0b5
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b87e
mov eax [ ebp - 0x1c ]
sub_41b886
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_418f98
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41b8b9
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_41b886
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_41b886
sub_41b91b
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_411321
call sub_417f77
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_414139
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_41c523
push 0x10
push r--data
call sub_416c70
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_416cb5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_41aded
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c5f4
mov eax [ ebp - 0x1c ]
call sub_417f8a
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_41c5fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_4223dd
pop ecx
pop ecx
sub_41c62b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41a208
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4158e0
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_4135bb
pop ecx
cmp eax ebx
je r-xdata
call sub_41ef80
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4158e0
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_4135bb
pop ecx
cmp eax ebx
je r-xdata
call sub_41ef80
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_41c812
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41c62b
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41c858
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_41c885
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_41c8eb
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41c858
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_41c858
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_41c9ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_41d08e
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_41d09e
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_41cc8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_41d0da
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_41d0da
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_41d0da
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_41d0da
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41c8eb
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_41d0da
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_41ce6e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_417f77
mov [ eax ] 0x22
pop ebp
retn
sub_41ce9b
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_41cecf
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_41d0af
push [ ebp + 0x8 ]
call sub_41ce6e
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_41d0af
lea eax [ ebp - 0x20 ]
push eax
call sub_4223fd
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_41ce6e
pop ecx
sub_41cf6f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_417f77
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_41d0af
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_41cecf
add esp 0x24
pop ebp
retn
sub_41cfc4
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_41cc8a
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_41ce9b
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41c9ae
add esp 0x1c
push eax
call sub_41ce6e
mov [ esp ] 0xffff
push [ ebx + 0x20 ]
call sub_41d0af
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x20 ]
fld [ ebx + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_41cecf
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41a208
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41d0af
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41d0da
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_41d132
push 0x8
push r--data
call sub_416c70
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_416cb5
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41d1b0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41d218
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor edx edx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
add esi 0x2
xor edi edi
cmp [ esi ] di
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
movzx eax [ esi ]
xor ecx ecx
inc ecx
push edi
cmp ax dx
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_422bf9
add esp 0x14
test eax eax
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
push 0x20
pop edi
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] di
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
add esi 0x2
push 0x3
push esi
push r--data
call sub_413262
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x6
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] di
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] di
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_41d4d1
push 0x10
push r--data
call sub_416c70
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d5fb
mov eax edi
call sub_416cb5
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_416b04
pop ecx
mov ecx [ rw-data ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_413748
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4154b2
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_418209
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_415520
pop ecx
pop ecx
sub_41d610
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_41d6a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_422d35
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_422d54
jmp r-xdata
sub_41d6a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_41a208
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_41d610
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41d702
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41d732
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d762
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41aded
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_417f9d
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_41aded
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_41aded
push 0x1
mov edi eax
call sub_41aded
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41ad67
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_41d7fe
push 0x10
push r--data
call sub_416c70
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_416cb5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_41d762
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d8ba
mov eax [ ebp - 0x1c ]
sub_41d8c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_413748
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_41d8f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_420603
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_414139
pop ecx
push eax
call sub_41dfcc
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_414139
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_414139
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_414139
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_414139
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_41da15
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_417f8a
mov [ eax ] ebx
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_417f8a
mov [ eax ] ebx
call sub_417f77
mov [ eax ] 0x9
jmp r-xdata
call sub_417f8a
mov [ eax ] ebx
call sub_417f77
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_417f25
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_416b04
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_420494
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_417f77
mov [ eax ] 0xc
call sub_417f8a
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_417f9d
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_413748
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_417f77
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_420494
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_420494
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_420494
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_41dfcc
push 0x10
push r--data
call sub_416c70
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_416cb5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x16
jmp r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41da15
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_417f25
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e0ba
mov eax [ ebp - 0x1c ]
sub_41e0c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_412f40
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_410e60
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_417f25
mov eax esi
jmp r-xdata
sub_41e140
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41e160
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41e17f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41aded
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_417f77
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_417f9d
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_41e1f4
push 0x10
push r--data
call sub_416c70
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_416cb5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41e17f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e2c0
mov eax [ ebp - 0x1c ]
sub_41e2c8
push 0x10
push r--data
call sub_416c70
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e35b
mov eax [ ebp - 0x1c ]
call sub_416cb5
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_414a46
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_413748
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_41e364
push 0x2c
push r--data
call sub_416c70
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_41eda7
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41ed68
pop ecx
cmp eax ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ed3
lea eax [ ebp - 0x24 ]
push eax
call sub_41ed0e
pop ecx
cmp eax ebx
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_413748
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_41ed3b
pop ecx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
call sub_41fe21
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_422d6d
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
call sub_416cb5
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_41fe96
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_422d57
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push esi
call sub_413530
inc eax
push eax
call sub_416b04
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_414d30
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
push esi
push esi
call sub_413530
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_41ff4b
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_41eda1
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_41ed95
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_41ed9b
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e5e7
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push eax
call sub_413748
pop ecx
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_422d57
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_41fe96
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_41eda1
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_41ed95
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_422d57
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_41e677
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_41ed3b
pop ecx
test eax eax
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
pop ebx
sub edx eax
mov [ ebp - 0x8 ] edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax esi
add eax [ ebp - 0x8 ]
mov edx edi
imul edx edx 0x16d
lea eax [ edx + eax - 0x63db ]
cdq
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ed3
int3
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_41e86e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_41ed0e
pop ecx
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417ed3
int3
cmp [ ebp - 0x4 ] esi
je r-xdata
pop esi
leave
retn
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
cmp edx 0x6b
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ edi + 0x1c ]
cmp ecx eax
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_41e677
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_41e677
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_41e677
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_41e677
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_41ea45
push 0x8
push r--data
call sub_416c70
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_416cb5
retn
push 0x6
call sub_4182cb
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ea8b
call sub_41e364
inc [ rw-data ]
sub_41ea94
push 0xc
push r--data
call sub_416c70
push 0x6
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_41e86e
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41eacc
mov eax [ ebp - 0x1c ]
call sub_416cb5
retn
sub_41ead5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_412f40
mov eax [ ebp + 0xc ]
add esp 0xc
test eax eax
je r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
jg r-xdata
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x0
push 0x1e13380
push eax
push ecx
call sub_41edb0
lea ecx [ eax + 0x46 ]
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_420460
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_420460
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_41edb0
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_420460
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_41edb0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_41edb0
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_420460
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_41edb0
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi ] edi
pop edi
mov [ esi + 0x20 ] ebx
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_41ed0e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
push 0x16
pop eax
pop ebp
retn
sub_41ed3b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
push 0x16
pop eax
pop ebp
retn
sub_41ed68
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
push 0x16
pop eax
pop ebp
retn
sub_41edb0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41ee60
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41ef12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_417f25
mov eax esi
sub_41efac
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
cmp ebx edi
je r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_411321
mov eax [ ebp - 0x14 ]
cmp ebx edi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
jbe r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x14 ] edi
jne r-xdata
cmp [ eax + 0x14 ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov [ ebx ] ax
pop edi
pop ebx
leave
retn
push edi
push edi
push 0xffffffff
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
cmp eax edi
jne r-xdata
push esi
call sub_413530
pop ecx
jmp r-xdata
push [ ebp + 0x10 ]
mov edi [ MultiByteToWideChar@IAT ]
push ebx
push 0xffffffff
push esi
push 0x9
push [ eax + 0x4 ]
call edi
test eax eax
jne r-xdata
mov eax edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
pop esi
dec eax
call sub_417f77
mov [ eax ] 0x2a
cmp [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx ecx [ eax + esi ]
mov [ ebx ] cx
cmp [ eax + esi ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
call sub_417f77
mov [ eax ] 0x2a
xor eax eax
cmp [ ebp - 0x8 ] al
mov [ ebx ] ax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
inc eax
add ebx 0x2
cmp eax [ ebp + 0x10 ]
jb r-xdata
je r-xdata
push [ ebp + 0x10 ]
sub esi [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push ebx
push esi
push [ ebp + 0xc ]
push 0x1
push [ eax + 0x4 ]
call edi
test eax eax
jne r-xdata
mov al [ esi ]
dec [ ebp + 0x8 ]
test al al
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
movzx eax al
push ecx
push eax
call sub_4131b1
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
sub_41f10e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
ja r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
mov [ esi ] ax
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_411321
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0x10 ]
jbe r-xdata
mov [ edi ] ebx
pop esi
pop ebx
leave
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x14 ]
push esi
call sub_41efac
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_417f77
push 0x16
jmp r-xdata
inc eax
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_417f25
cmp [ ebp - 0x8 ] bl
je r-xdata
cmp edi ebx
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
call sub_417f77
mov eax [ eax ]
cmp [ ebp - 0x8 ] bl
je r-xdata
xor eax eax
mov [ esi ] ax
mov eax esi
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] bl
je r-xdata
mov [ edi ] eax
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
pop edi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x50
xor eax eax
mov [ esi ] ax
call sub_417f77
push 0x22
sub_41f20e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4182fe
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_41f25e
mov eax [ rw-data ]
xor edx edx
test eax eax
jne r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
ja r-xdata
mov eax r--data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
xor ecx ecx
test edx edx
sete cl
mov edx ecx
retn
test edx edx
je r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x20
ja r-xdata
add eax 0x2
sub_41f2a4
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_416b49
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_4111c1
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_4111c1
cmp [ esi ] 0x3d
pop ecx
lea edi [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_413748
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_416b49
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_413748
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_41ef12
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ed3
int3
add ebx 0x4
sub_41f380
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
add eax 0x2
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
add esi 0x2
test edx edx
jne r-xdata
sub eax 0x2
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
add eax 0x2
jmp r-xdata
cmp ecx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
add eax 0x2
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
add esi 0x2
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x2 ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
add esi 0x2
test edi edi
je r-xdata
cmp ecx 0x20
je r-xdata
add eax 0x2
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
add eax 0x2
jmp r-xdata
test esi esi
je r-xdata
cmp ecx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
add esi 0x2
sub_41f4d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_41f380
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_416b04
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_41f380
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41f584
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
push ebx
sub eax esi
lea ebx [ eax + 0x2 ]
push edi
push ebx
call sub_416b04
mov edi eax
pop ecx
test edi edi
jne r-xdata
add eax 0x2
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_410e60
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
add eax 0x2
cmp [ eax ] cx
jne r-xdata
sub_41f5dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_41f677
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_417f77
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_411988
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_41f6f9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4135bb
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_413748
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_411988
pop ecx
call sub_417f77
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_417f77
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_417f35
pop ecx
mov [ esi ] eax
push esi
call sub_411988
pop ecx
test eax eax
je r-xdata
call sub_417f77
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_417f35
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_41f7a6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41f6f9
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_416c35
pop ecx
mov ebx eax
call sub_417f77
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_412f40
add esp 0xc
sub_41f814
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41a208
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_412f40
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4158e0
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4135bb
pop ecx
cmp eax ebx
je r-xdata
call sub_41ef80
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41f8fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41f814
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f93b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_413748
push [ esi + 0x8 ]
call sub_413748
push [ esi + 0xc ]
call sub_413748
push [ esi + 0x10 ]
call sub_413748
push [ esi + 0x14 ]
call sub_413748
push [ esi + 0x18 ]
call sub_413748
push [ esi ]
call sub_413748
push [ esi + 0x20 ]
call sub_413748
push [ esi + 0x24 ]
call sub_413748
push [ esi + 0x28 ]
call sub_413748
push [ esi + 0x2c ]
call sub_413748
push [ esi + 0x30 ]
call sub_413748
push [ esi + 0x34 ]
call sub_413748
push [ esi + 0x1c ]
call sub_413748
push [ esi + 0x38 ]
call sub_413748
push [ esi + 0x3c ]
call sub_413748
add esp 0x40
push [ esi + 0x40 ]
call sub_413748
push [ esi + 0x44 ]
call sub_413748
push [ esi + 0x48 ]
call sub_413748
push [ esi + 0x4c ]
call sub_413748
push [ esi + 0x50 ]
call sub_413748
push [ esi + 0x54 ]
call sub_413748
push [ esi + 0x58 ]
call sub_413748
push [ esi + 0x5c ]
call sub_413748
push [ esi + 0x60 ]
call sub_413748
push [ esi + 0x64 ]
call sub_413748
push [ esi + 0x68 ]
call sub_413748
push [ esi + 0x6c ]
call sub_413748
push [ esi + 0x70 ]
call sub_413748
push [ esi + 0x74 ]
call sub_413748
push [ esi + 0x78 ]
call sub_413748
push [ esi + 0x7c ]
call sub_413748
add esp 0x40
push [ esi + 0x80 ]
call sub_413748
push [ esi + 0x84 ]
call sub_413748
push [ esi + 0x88 ]
call sub_413748
push [ esi + 0x8c ]
call sub_413748
push [ esi + 0x90 ]
call sub_413748
push [ esi + 0x94 ]
call sub_413748
push [ esi + 0x98 ]
call sub_413748
push [ esi + 0x9c ]
call sub_413748
push [ esi + 0xa0 ]
call sub_413748
push [ esi + 0xa4 ]
call sub_413748
push [ esi + 0xa8 ]
call sub_413748
push [ esi + 0xbc ]
call sub_413748
push [ esi + 0xc0 ]
call sub_413748
push [ esi + 0xc4 ]
call sub_413748
push [ esi + 0xc8 ]
call sub_413748
push [ esi + 0xcc ]
call sub_413748
add esp 0x40
push [ esi + 0xd0 ]
call sub_413748
push [ esi + 0xb8 ]
call sub_413748
push [ esi + 0xd8 ]
call sub_413748
push [ esi + 0xdc ]
call sub_413748
push [ esi + 0xe0 ]
call sub_413748
push [ esi + 0xe4 ]
call sub_413748
push [ esi + 0xe8 ]
call sub_413748
push [ esi + 0xec ]
call sub_413748
push [ esi + 0xd4 ]
call sub_413748
push [ esi + 0xf0 ]
call sub_413748
push [ esi + 0xf4 ]
call sub_413748
push [ esi + 0xf8 ]
call sub_413748
push [ esi + 0xfc ]
call sub_413748
push [ esi + 0x100 ]
call sub_413748
push [ esi + 0x104 ]
call sub_413748
push [ esi + 0x108 ]
call sub_413748
add esp 0x40
push [ esi + 0x10c ]
call sub_413748
push [ esi + 0x110 ]
call sub_413748
push [ esi + 0x114 ]
call sub_413748
push [ esi + 0x118 ]
call sub_413748
push [ esi + 0x11c ]
call sub_413748
push [ esi + 0x120 ]
call sub_413748
push [ esi + 0x124 ]
call sub_413748
push [ esi + 0x128 ]
call sub_413748
push [ esi + 0x12c ]
call sub_413748
push [ esi + 0x130 ]
call sub_413748
push [ esi + 0x134 ]
call sub_413748
push [ esi + 0x138 ]
call sub_413748
push [ esi + 0x13c ]
call sub_413748
push [ esi + 0x140 ]
call sub_413748
push [ esi + 0x144 ]
call sub_413748
push [ esi + 0x148 ]
call sub_413748
add esp 0x40
push [ esi + 0x14c ]
call sub_413748
push [ esi + 0x150 ]
call sub_413748
push [ esi + 0x154 ]
call sub_413748
push [ esi + 0x158 ]
call sub_413748
push [ esi + 0x15c ]
call sub_413748
push [ esi + 0x160 ]
call sub_413748
add esp 0x18
sub_41fcb2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
push esi
call sub_413748
pop ecx
sub_41fd1b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_413748
pop ecx
push esi
call sub_413748
pop ecx
sub_41fe50
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41fe96
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_417f25
mov eax esi
jmp r-xdata
sub_41ff4b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_417f25
mov eax esi
jmp r-xdata
sub_41ffb0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41fff0
push 0xc
push r--data
call sub_416c70
push 0xe
call sub_4182cb
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420057
call sub_416cb5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_413748
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_413748
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_420060
call sub_41839d
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4183aa
pop ecx
push 0x3
call sub_4118f0
int3
push 0x1
push 0x40000015
push 0x3
call sub_417daa
add esp 0xc
sub_42009c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_41787c
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ rw-data ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ rw-data ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_420208
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_417f25
mov eax esi
sub_42027d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4202bc
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_420460
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_420494
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_41aded
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_417f77
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_417f9d
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_420519
push 0x14
push r--data
call sub_416c70
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_416cb5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41ae56
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f8a
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420494
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4205f9
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_420603
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_416b04
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_42064c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_417f77
mov [ eax ] 0x9
call sub_417f77
mov [ eax ] 0x9
call sub_417f25
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_4206a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_414139
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_423016
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_414139
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
push esi
call sub_414139
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_414139
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_414139
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_414139
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_414139
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_414139
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_414139
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_414139
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4223c0
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_414139
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_414139
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_418f98
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_42083f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_4131b1
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_417f77
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_42096f
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_420ec0
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_421411
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4147ea
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_4137d3
test eax eax
movsx eax [ esi ]
push eax
call sub_4147ea
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_421485
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_421507
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_421523
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_423265
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_4231bd
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_42157f
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_413530
inc eax
push eax
push esi
add esi edi
push esi
call sub_4165d0
add esp 0x10
sub_4215c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_411321
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_417f77
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_417f77
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_42157f
pop esi
mov [ eax ] esi
call sub_417f25
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ed3
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_41ff4b
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_4165d0
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_421725
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423473
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_417f77
mov [ eax ] ebx
call sub_417f25
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_4215c4
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_42330d
add esp 0x10
test eax eax
je r-xdata
sub_4217ec
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421725
add esp 0x18
pop ebp
retn
sub_42180c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_411321
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_417f77
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_417f77
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_417f25
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_4217ec
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_423190
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41e160
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41e160
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_412f40
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_41e160
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_423510
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_423510
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_423510
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_421b82
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_411321
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_413530
inc eax
push eax
push esi
push ebx
call sub_4165d0
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_413530
inc eax
push eax
push esi
push ebx
call sub_4165d0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_42157f
push edi
push 0x30
push ebx
call sub_412f40
add esp 0xc
sub_421c85
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423473
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_417f77
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_417f77
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41a208
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_42330d
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_421b82
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_421d46
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423473
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_417f77
mov [ eax ] edi
call sub_417f25
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41a208
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_42330d
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4215c4
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_421b82
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_421e33
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421725
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421c85
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42180c
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421d46
jmp r-xdata
sub_421ebb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421e33
add esp 0x1c
pop ebp
retn
sub_421ede
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_4235ef
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_417ed3
sub_421f06
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_41fe19
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_41fe19
pop ecx
sub_42200c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_4221f0
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_4238a4
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_422240
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_42226b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x2a
call sub_417f77
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_417f77
push 0x22
pop esi
mov [ eax ] esi
call sub_417f25
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_412f40
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_412f40
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4223dd
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_422400
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ed3
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_414021
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_417f8a
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_417f8a
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_41af1c
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_417f8a
and [ eax ] 0x0
mov [ esi ] ebx
call sub_417f77
mov [ eax ] 0x18
call sub_417f77
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_417f9d
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_417f9d
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_417f77
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_417f77
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_41ace6
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_41e17f
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_41da15
add esp 0xc
test eax eax
jne r-xdata
call sub_417f8a
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_41e17f
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_41d762
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_417f9d
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_41ad67
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_4238da
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_41da15
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_420494
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_420494
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_41d762
pop ecx
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_41e17f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_41b7b2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_41e17f
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_420494
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_420494
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_422b35
push 0x14
push r--data
call sub_416c70
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_416cb5
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_422400
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422bcb
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_422bcb
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_41aef5
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_422bf9
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_422b35
add esp 0x18
pop ebp
retn
sub_422c20
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422c40
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_41a208
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_422c85
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_422c85
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_422c40
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_422d35
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_422d54
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_422d35
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_422d6d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_413530
pop ecx
mov edi eax
jmp r-xdata
call sub_423b88
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_413530
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_423b6e
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_422df4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_422e2d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_422df4
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4146d5
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4146d5
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_422eed
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422e2d
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_422df4
sub_422f34
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_423c20
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4146d5
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4146d5
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_423016
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_414139
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_417f77
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_417f77
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41539a
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_41b7b2
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_42064c
pop ecx
test eax eax
jne r-xdata
call sub_41539a
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41b7b2
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_420603
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_420519
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_423190
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4231bd
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_411321
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_423c81
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42096f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
sub_423265
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_411321
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_423c81
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_420ec0
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
sub_42330d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_417f77
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_417f25
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_413530
inc eax
push eax
push edi
push esi
call sub_4165d0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4233c0
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_423473
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4233c0
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_42435d
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_41ff4b
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ed3
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
sub_423510
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4235ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_424d83
call sub_424d83
mov [ esi ] eax
jmp r-xdata
call sub_417f77
push 0x16
pop esi
mov [ eax ] esi
call sub_417f25
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_424d83
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_42364e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_411321
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_419d78
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_417f77
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_423879
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_42364e
add esp 0x14
pop ebp
retn
sub_4238da
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_420494
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_417f77
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_420494
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_420494
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420494
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_413f66
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_417f77
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_41aded
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_417f77
mov [ eax ] 0xd
call sub_417f8a
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_417f8a
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_417f77
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_41b0b5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_413f66
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_423a90
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_425303
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425345
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_423b88
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_416b49
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_413748
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_4254e1
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_413748
pop ecx
mov [ ebp - 0x4 ] esi
sub_423c20
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_423c81
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41a208
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_42432d ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_42200c
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_42435d
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41a208
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41ff4b
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ed3
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41ff4b
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_424c55
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_424ce3
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_424d83
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_424c55
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_424ce3
push eax
mov [ ebp - 0xc ] eax
call sub_41d132
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_425095
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41a208
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_4158e0
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_4135bb
pop ecx
test eax eax
je r-xdata
call sub_41ef80
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_4158e0
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_4135bb
pop ecx
test eax eax
je r-xdata
call sub_41ef80
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_425303
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_425095
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_425345
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_425303
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422f34
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_417f77
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42542f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_423b6e
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_425481
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_416b49
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_411924
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_425723
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_4254e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
or eax 0xffffffff
jmp r-xdata
call sub_417f77
mov [ eax ] 0x16
push 0x3d
push esi
call sub_425825
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_425481
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_42542f
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_416b04
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_423b88
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_413748
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_413748
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_416b04
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_416be3
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_416be3
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_413530
pop ecx
add eax 0x2
push eax
call sub_416b49
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_413748
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_413530
pop ecx
add eax 0x2
push eax
push edi
call sub_41ff4b
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ed3
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_413748
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_417f77
mov [ eax ] 0x2a
sub_425723
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_413530
lea esi [ eax + 0x1 ]
push esi
call sub_4135bb
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_41ff4b
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ed3
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_425775
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411321
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_417f77
mov [ eax ] 0x16
call sub_417f25
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_425850
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_425850
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_425947
fld [ esp + 0x4 ]
fld1
fchs
fcomp st1
fwait
fnstsw ax
sahf
je r-xdata
fld1
fldz
fld st0
fld1
fsubrp st1
fxch st1
fld1
faddp st1
fdivp st1
fsqrt
fld1
jmp r-xdata
fpatan
fadd st0
retn 0x8
sub_425976
fld [ esp + 0x4 ]
fld st0
fabs
fcom [ rw-data ]
fwait
fnstsw ax
sahf
jbe r-xdata
fstp st0
fld st0
fmul st0
fld1
fsubrp st1
fld1
fsubrp st1
fld st0
fadd st0
fxch st1
fmul st0
fsubp st1
jmp r-xdata
fsqrt
fpatan
retn 0x8
sub_4259eb
fld [ esp + 0xc ]
fld [ esp + 0x4 ]
ftst
fwait
fnstsw ax
sahf
je r-xdata
fstp st1
retn 0x10
fyl2x
fld1
fld st1
fprem
f2xm1
faddp st1
fscale
sub_425a0e
fld [ esp + 0x4 ]
fld1
fld st1
fprem
sub esp 0x4
fst [ esp ]
fxch st2
mov eax [ esp ]
cmp eax 0x80000000
jbe r-xdata
fsub st2
fstp st1
fstp st1
pop eax
retn 0x8
fsub st1
sub_425a36
fld [ esp + 0x4 ]
fchs
fld1
fld st1
fprem
sub esp 0x4
fst [ esp ]
fxch st2
mov eax [ esp ]
cmp eax 0x80000000
jbe r-xdata
fsub st2
fstp st1
fstp st1
fchs
pop eax
retn 0x8
fsub st1
sub_425a9c
cmp [ rw-data ] 0x0
je sub_425ab6
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_425ab6
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_429ace
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x54 ]
cmp edx ebx
je r-xdata
mov eax [ esp + 0x70 ]
cmp eax [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
push eax
push 0x70
cmp eax [ esp + 0x5c ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x54 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ebx [ esp + 0xcc ]
xor esi esi
xor eax eax
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] ebx
cmp ebx esi
jl r-xdata
mov eax [ esp + 0x78 ]
inc eax
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x4c ] esi
jmp r-xdata
cmp [ rw-data ] al
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x50 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x70 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x48 ]
inc [ rw-data ]
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
mov eax 0x1
cmp [ esp + 0x5c ] eax
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x68 ]
mov eax [ esp + 0x6c ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov esi [ ebp + 0x8 ]
mov edx [ esp + 0x70 ]
xor eax eax
lea ecx [ eax + 0x1 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] al
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0xa0 ] eax
mov [ esp + 0xac ] eax
mov [ esp + 0xb0 ] al
mov eax [ esi ]
mov [ esi + 0x148 ] edx
mov [ esp + 0x88 ] ecx
mov [ esp + 0xa8 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xd ] 0x0
lea edi [ ecx + esi + 0x4 ]
jne r-xdata
mov [ esp + 0x78 ] eax
push 0x20
mov [ esp + 0x1c ] eax
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov eax [ edi + 0x4 ]
lea edx [ esp + 0x80 ]
push edx
push eax
call sub_47390f
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x78 ]
cmp edx [ esp + 0x70 ]
jg r-xdata
xor eax eax
push eax
call sub_44a801
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x6c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esp + 0x68 ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x54 ] eax
call sub_410e60
mov eax [ esp + 0x70 ]
add esp 0xc
push eax
call sub_4111dc
mov ecx [ esp + 0x4c ]
add esp 0x4
mov [ esp + 0x64 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4431ad
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov edx [ esi + 0xf4 ]
lea eax [ ebx + 0x1 ]
mov ebx [ esi + 0x16c ]
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x4c ] edx
call sub_4091e0
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xbc ]
call sub_40d530
mov ecx [ esp + 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x7c ] 0x0
mov eax [ edx + esi * 4 + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov edi [ esp + 0x64 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] bl
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40e0a0
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_453443
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_453443
xor esi esi
jmp r-xdata
mov edx [ esp + 0x64 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x68 ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push 0x1
call sub_40e1c0
call sub_40c790
cmp ebx [ edi ]
jb r-xdata
mov eax [ esp + 0x48 ]
mov edi esi
mov ecx [ edi ]
mov [ edi + 0xf4 ] eax
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
lea eax [ edx + edi + 0x4 ]
mov eax [ eax + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
lea edi [ esp + 0xbc ]
call sub_402780
mov eax [ esp + 0x50 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
cmp cx 0x49
jne r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_432508
push eax
mov eax [ ecx ]
push eax
call sub_45f508
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x48 ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c2c0
test al al
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x48 ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea edi [ esp + 0xbc ]
call sub_402780
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402710
mov eax esi
lea edi [ esp + 0xbc ]
call sub_402780
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x84 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a780
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x48 ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_401980
jmp r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e737
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b469
lea ecx [ esp + 0xbc ]
call sub_40edc0
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_403e10
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ rw-data ] bl
jne r-xdata
call sub_45e737
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x54 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc4 ] 0x0
mov [ esp + 0xbc ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x43 ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40ba10
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc0 ]
push ecx
mov [ esp + 0xc8 ] 0x0
call sub_4111dc
mov eax [ esp + 0x7c ]
inc eax
add esp 0x4
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x74 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x60 ]
call sub_40c4e0
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410e60
add esp 0xc
push ebx
call sub_4111dc
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_403cc0
mov ecx [ eax + 0x14 ]
mov [ esp + 0x94 ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4431ad
jmp r-xdata
inc esi
cmp esi [ esp + 0xc4 ]
jb r-xdata
push eax
call sub_44c7c0
mov ecx [ esp + 0x50 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0x7c ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0xcc ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40a780
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc0 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3d9
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_403cc0
add eax 0x20
push eax
lea ebx [ esp + 0xa4 ]
call sub_408e80
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov edx [ edi + 0x8 ]
mov esi eax
lea eax [ edx - 0x1 ]
mov [ esp + 0x58 ] esi
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x43 ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x58 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_4431cb
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40d260
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x58 ]
jmp [ eax * 4 + jump_table_40a744 ]
push eax
call sub_446618
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410e60
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44ccf1
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x48 ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ ebx ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x74 ] eax
mov [ esp + 0x58 ] eax
lea ebx [ ebx ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4111dc
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_408e80
jmp r-xdata
mov [ esp + 0x58 ] eax
mov eax [ ebx ]
mov ecx [ esp + 0x74 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x74 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov ebx [ esp + 0x14 ]
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x48 ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42aede ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a3
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_470870
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x43 ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x94 ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0x2c ] 0x0
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ esi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3d9
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x48 ] eax
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ esi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ esi + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x74 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa0 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x20 ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esi + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x58 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esi + 0x20 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4111dc
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
nop
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa0 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_429b36
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov esi [ esp + 0x20 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x54 ]
cmp edx ebx
je r-xdata
mov eax [ esp + 0x70 ]
cmp eax [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
push eax
push 0x70
cmp eax [ esp + 0x5c ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x54 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ebx [ esp + 0xcc ]
xor esi esi
xor eax eax
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] ebx
cmp ebx esi
jl r-xdata
mov eax [ esp + 0x78 ]
inc eax
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x4c ] esi
jmp r-xdata
cmp [ rw-data ] al
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x50 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x70 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x48 ]
inc [ rw-data ]
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
mov eax 0x1
cmp [ esp + 0x5c ] eax
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x68 ]
mov eax [ esp + 0x6c ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov esi [ ebp + 0x8 ]
mov edx [ esp + 0x70 ]
xor eax eax
lea ecx [ eax + 0x1 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] al
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0xa0 ] eax
mov [ esp + 0xac ] eax
mov [ esp + 0xb0 ] al
mov eax [ esi ]
mov [ esi + 0x148 ] edx
mov [ esp + 0x88 ] ecx
mov [ esp + 0xa8 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xd ] 0x0
lea edi [ ecx + esi + 0x4 ]
jne r-xdata
mov [ esp + 0x78 ] eax
push 0x20
mov [ esp + 0x1c ] eax
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov eax [ edi + 0x4 ]
lea edx [ esp + 0x80 ]
push edx
push eax
call sub_47390f
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x78 ]
cmp edx [ esp + 0x70 ]
jg r-xdata
xor eax eax
push eax
call sub_44a801
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x6c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esp + 0x68 ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x54 ] eax
call sub_410e60
mov eax [ esp + 0x70 ]
add esp 0xc
push eax
call sub_4111dc
mov ecx [ esp + 0x4c ]
add esp 0x4
mov [ esp + 0x64 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4431ad
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov edx [ esi + 0xf4 ]
lea eax [ ebx + 0x1 ]
mov ebx [ esi + 0x16c ]
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x4c ] edx
call sub_4091e0
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xbc ]
call sub_40d530
mov ecx [ esp + 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x7c ] 0x0
mov eax [ edx + esi * 4 + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov edi [ esp + 0x64 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] bl
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40e0a0
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_453443
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_453443
xor esi esi
jmp r-xdata
mov edx [ esp + 0x64 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x68 ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push 0x1
call sub_40e1c0
call sub_40c790
cmp ebx [ edi ]
jb r-xdata
mov eax [ esp + 0x48 ]
mov edi esi
mov ecx [ edi ]
mov [ edi + 0xf4 ] eax
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
lea eax [ edx + edi + 0x4 ]
mov eax [ eax + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
lea edi [ esp + 0xbc ]
call sub_402780
mov eax [ esp + 0x50 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
cmp cx 0x49
jne r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_432508
push eax
mov eax [ ecx ]
push eax
call sub_45f508
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x48 ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c2c0
test al al
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x48 ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea edi [ esp + 0xbc ]
call sub_402780
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402710
mov eax esi
lea edi [ esp + 0xbc ]
call sub_402780
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x84 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a780
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x48 ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_401980
jmp r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e737
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b469
lea ecx [ esp + 0xbc ]
call sub_40edc0
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_403e10
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ rw-data ] bl
jne r-xdata
call sub_45e737
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x54 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc4 ] 0x0
mov [ esp + 0xbc ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x43 ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40ba10
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc0 ]
push ecx
mov [ esp + 0xc8 ] 0x0
call sub_4111dc
mov eax [ esp + 0x7c ]
inc eax
add esp 0x4
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x74 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x60 ]
call sub_40c4e0
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410e60
add esp 0xc
push ebx
call sub_4111dc
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_403cc0
mov ecx [ eax + 0x14 ]
mov [ esp + 0x94 ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4431ad
jmp r-xdata
inc esi
cmp esi [ esp + 0xc4 ]
jb r-xdata
push eax
call sub_44c7c0
mov ecx [ esp + 0x50 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0x7c ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0xcc ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40a780
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc0 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3d9
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_403cc0
add eax 0x20
push eax
lea ebx [ esp + 0xa4 ]
call sub_408e80
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov edx [ edi + 0x8 ]
mov esi eax
lea eax [ edx - 0x1 ]
mov [ esp + 0x58 ] esi
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x43 ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x58 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_4431cb
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40d260
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x58 ]
jmp [ eax * 4 + jump_table_40a744 ]
push eax
call sub_446618
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410e60
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44ccf1
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x48 ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ ebx ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x74 ] eax
mov [ esp + 0x58 ] eax
lea ebx [ ebx ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4111dc
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_408e80
jmp r-xdata
mov [ esp + 0x58 ] eax
mov eax [ ebx ]
mov ecx [ esp + 0x74 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x74 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov ebx [ esp + 0x14 ]
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x48 ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42aede ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a3
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_470870
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x43 ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x94 ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0x2c ] 0x0
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ esi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3d9
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x48 ] eax
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ esi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ esi + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x74 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa0 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x20 ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esi + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x58 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esi + 0x20 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4111dc
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
nop
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa0 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_429bd7
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x54 ]
cmp edx ebx
je r-xdata
mov eax [ esp + 0x70 ]
cmp eax [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
push eax
push 0x70
cmp eax [ esp + 0x5c ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x54 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ebx [ esp + 0xcc ]
xor esi esi
xor eax eax
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] ebx
cmp ebx esi
jl r-xdata
mov eax [ esp + 0x78 ]
inc eax
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x4c ] esi
jmp r-xdata
cmp [ rw-data ] al
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x50 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x70 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x48 ]
inc [ rw-data ]
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
mov eax 0x1
cmp [ esp + 0x5c ] eax
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x68 ]
mov eax [ esp + 0x6c ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov esi [ ebp + 0x8 ]
mov edx [ esp + 0x70 ]
xor eax eax
lea ecx [ eax + 0x1 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] al
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0xa0 ] eax
mov [ esp + 0xac ] eax
mov [ esp + 0xb0 ] al
mov eax [ esi ]
mov [ esi + 0x148 ] edx
mov [ esp + 0x88 ] ecx
mov [ esp + 0xa8 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xd ] 0x0
lea edi [ ecx + esi + 0x4 ]
jne r-xdata
mov [ esp + 0x78 ] eax
push 0x20
mov [ esp + 0x1c ] eax
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov eax [ edi + 0x4 ]
lea edx [ esp + 0x80 ]
push edx
push eax
call sub_47390f
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x78 ]
cmp edx [ esp + 0x70 ]
jg r-xdata
xor eax eax
push eax
call sub_44a801
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x6c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esp + 0x68 ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x54 ] eax
call sub_410e60
mov eax [ esp + 0x70 ]
add esp 0xc
push eax
call sub_4111dc
mov ecx [ esp + 0x4c ]
add esp 0x4
mov [ esp + 0x64 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4431ad
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov edx [ esi + 0xf4 ]
lea eax [ ebx + 0x1 ]
mov ebx [ esi + 0x16c ]
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x4c ] edx
call sub_4091e0
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xbc ]
call sub_40d530
mov ecx [ esp + 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x7c ] 0x0
mov eax [ edx + esi * 4 + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov edi [ esp + 0x64 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] bl
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40e0a0
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_453443
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_453443
xor esi esi
jmp r-xdata
mov edx [ esp + 0x64 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x68 ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push 0x1
call sub_40e1c0
call sub_40c790
cmp ebx [ edi ]
jb r-xdata
mov eax [ esp + 0x48 ]
mov edi esi
mov ecx [ edi ]
mov [ edi + 0xf4 ] eax
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
lea eax [ edx + edi + 0x4 ]
mov eax [ eax + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
lea edi [ esp + 0xbc ]
call sub_402780
mov eax [ esp + 0x50 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
cmp cx 0x49
jne r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_432508
push eax
mov eax [ ecx ]
push eax
call sub_45f508
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x48 ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c2c0
test al al
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x48 ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea edi [ esp + 0xbc ]
call sub_402780
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402710
mov eax esi
lea edi [ esp + 0xbc ]
call sub_402780
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x84 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a780
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x48 ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_401980
jmp r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e737
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b469
lea ecx [ esp + 0xbc ]
call sub_40edc0
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_403e10
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ rw-data ] bl
jne r-xdata
call sub_45e737
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x54 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc4 ] 0x0
mov [ esp + 0xbc ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x43 ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40ba10
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc0 ]
push ecx
mov [ esp + 0xc8 ] 0x0
call sub_4111dc
mov eax [ esp + 0x7c ]
inc eax
add esp 0x4
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x74 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x60 ]
call sub_40c4e0
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410e60
add esp 0xc
push ebx
call sub_4111dc
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_403cc0
mov ecx [ eax + 0x14 ]
mov [ esp + 0x94 ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4431ad
jmp r-xdata
inc esi
cmp esi [ esp + 0xc4 ]
jb r-xdata
push eax
call sub_44c7c0
mov ecx [ esp + 0x50 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0x7c ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0xcc ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40a780
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc0 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3d9
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_403cc0
add eax 0x20
push eax
lea ebx [ esp + 0xa4 ]
call sub_408e80
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov edx [ edi + 0x8 ]
mov esi eax
lea eax [ edx - 0x1 ]
mov [ esp + 0x58 ] esi
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x43 ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x58 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_4431cb
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40d260
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x58 ]
jmp [ eax * 4 + jump_table_40a744 ]
push eax
call sub_446618
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410e60
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44ccf1
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x48 ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ ebx ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x74 ] eax
mov [ esp + 0x58 ] eax
lea ebx [ ebx ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4111dc
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_408e80
jmp r-xdata
mov [ esp + 0x58 ] eax
mov eax [ ebx ]
mov ecx [ esp + 0x74 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x74 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov ebx [ esp + 0x14 ]
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x48 ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42aede ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a3
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_470870
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x43 ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x94 ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0x2c ] 0x0
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ esi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3d9
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x48 ] eax
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ esi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ esi + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x74 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa0 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x20 ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esi + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x58 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esi + 0x20 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4111dc
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
nop
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa0 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_429c04
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ esp + 0x24 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax ]
mov ecx [ esp + 0x24 ]
mov eax [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410e60
add esp 0xc
jmp r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x54 ]
cmp edx ebx
je r-xdata
mov eax [ esp + 0x70 ]
cmp eax [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
push eax
push 0x70
cmp eax [ esp + 0x5c ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x54 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ebx [ esp + 0xcc ]
xor esi esi
xor eax eax
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] ebx
cmp ebx esi
jl r-xdata
mov eax [ esp + 0x78 ]
inc eax
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x4c ] esi
jmp r-xdata
cmp [ rw-data ] al
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x50 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x70 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x48 ]
inc [ rw-data ]
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
mov eax 0x1
cmp [ esp + 0x5c ] eax
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x68 ]
mov eax [ esp + 0x6c ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov esi [ ebp + 0x8 ]
mov edx [ esp + 0x70 ]
xor eax eax
lea ecx [ eax + 0x1 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] al
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0xa0 ] eax
mov [ esp + 0xac ] eax
mov [ esp + 0xb0 ] al
mov eax [ esi ]
mov [ esi + 0x148 ] edx
mov [ esp + 0x88 ] ecx
mov [ esp + 0xa8 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xd ] 0x0
lea edi [ ecx + esi + 0x4 ]
jne r-xdata
mov [ esp + 0x78 ] eax
push 0x20
mov [ esp + 0x1c ] eax
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x4c ]
call sub_40b400
mov eax [ edi + 0x4 ]
lea edx [ esp + 0x80 ]
push edx
push eax
call sub_47390f
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x78 ]
cmp edx [ esp + 0x70 ]
jg r-xdata
xor eax eax
push eax
call sub_44a801
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x6c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ esp + 0x68 ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x54 ] eax
call sub_410e60
mov eax [ esp + 0x70 ]
add esp 0xc
push eax
call sub_4111dc
mov ecx [ esp + 0x4c ]
add esp 0x4
mov [ esp + 0x64 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4431ad
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov edx [ esi + 0xf4 ]
lea eax [ ebx + 0x1 ]
mov ebx [ esi + 0x16c ]
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x4c ] edx
call sub_4091e0
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xbc ]
call sub_40d530
mov ecx [ esp + 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x7c ] 0x0
mov eax [ edx + esi * 4 + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov edi [ esp + 0x64 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] bl
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40e0a0
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_453443
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_453443
xor esi esi
jmp r-xdata
mov edx [ esp + 0x64 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x68 ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push 0x1
call sub_40e1c0
call sub_40c790
cmp ebx [ edi ]
jb r-xdata
mov eax [ esp + 0x48 ]
mov edi esi
mov ecx [ edi ]
mov [ edi + 0xf4 ] eax
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
lea eax [ edx + edi + 0x4 ]
mov eax [ eax + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
lea edi [ esp + 0xbc ]
call sub_402780
mov eax [ esp + 0x50 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
cmp cx 0x49
jne r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_432508
push eax
mov eax [ ecx ]
push eax
call sub_45f508
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x48 ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c2c0
test al al
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x48 ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea edi [ esp + 0xbc ]
call sub_402780
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402710
mov eax esi
lea edi [ esp + 0xbc ]
call sub_402780
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x84 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40a780
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x48 ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_401980
jmp r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e737
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b469
lea ecx [ esp + 0xbc ]
call sub_40edc0
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_403e10
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ rw-data ] bl
jne r-xdata
call sub_45e737
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x54 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc4 ] 0x0
mov [ esp + 0xbc ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x43 ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40ba10
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x54 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc0 ]
push ecx
mov [ esp + 0xc8 ] 0x0
call sub_4111dc
mov eax [ esp + 0x7c ]
inc eax
add esp 0x4
mov [ esp + 0x78 ] eax
cmp eax [ esp + 0x5c ]
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x74 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x60 ]
call sub_40c4e0
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410e60
add esp 0xc
push ebx
call sub_4111dc
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_403cc0
mov ecx [ eax + 0x14 ]
mov [ esp + 0x94 ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4431ad
jmp r-xdata
inc esi
cmp esi [ esp + 0xc4 ]
jb r-xdata
push eax
call sub_44c7c0
mov ecx [ esp + 0x50 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0x7c ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0xcc ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
lea ecx [ esp + 0x60 ]
call sub_430e4d
lea ecx [ esp + 0x30 ]
call sub_410c60
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x5c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40a780
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc0 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3d9
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_403cc0
add eax 0x20
push eax
lea ebx [ esp + 0xa4 ]
call sub_408e80
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov edx [ edi + 0x8 ]
mov esi eax
lea eax [ edx - 0x1 ]
mov [ esp + 0x58 ] esi
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x43 ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x58 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_4431cb
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40d260
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x58 ]
jmp [ eax * 4 + jump_table_40a744 ]
push eax
call sub_446618
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410e60
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
test eax eax
js r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44ccf1
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x48 ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ ebx ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44a801
push sub_425c12
call sub_41130a
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x74 ] eax
mov [ esp + 0x58 ] eax
lea ebx [ ebx ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4111dc
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_408e80
jmp r-xdata
mov [ esp + 0x58 ] eax
mov eax [ ebx ]
mov ecx [ esp + 0x74 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x74 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov ebx [ esp + 0x14 ]
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x48 ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42aede ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a3
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_470870
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x43 ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x94 ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4431ad
mov [ esi + 0x2c ] 0x0
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ esi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3d9
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x48 ] eax
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ esi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_470870
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x58 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x74 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ esi + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x74 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_4431cb
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa0 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x20 ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esi + 0x20 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x58 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4431ad
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esi + 0x20 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40d260
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4111dc
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
nop
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
jle r-xdata
jb r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa0 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42a928
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0xac ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42a979
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov esi [ esp + 0xa0 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov edi [ esp + 0x68 ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42aa20
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0xa0 ]
push ecx
push eax
call sub_44b8a3
jmp r-xdata
mov [ ebx ] eax
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42aa4c
push 0x8
call sub_4115d7
mov esi [ esp + 0xa4 ]
mov [ ebx ] eax
mov edx [ esi ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_4115d7
mov edx [ ebx ]
mov [ edx + 0x4 ] eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add esp 0x4
mov [ ecx ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x4 ]
add esp 0x4
push edx
push eax
push ecx
call sub_410e60
add esp 0xc
jmp r-xdata
mov edi [ esp + 0x68 ]
mov eax [ esp + 0x48 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46fe90
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x64 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x64 ]
push ecx
call sub_4111dc
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0xac ] 0x0
jmp r-xdata
mov eax [ esp + 0xa8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b400
mov esi [ esp + 0xa0 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b400
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x8c ]
mov esi [ esp + 0x88 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xa8 ] edx
mov [ esp + 0xa0 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4431ad
mov [ esp + 0x8c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ esp + 0xa0 ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4111dc
mov edi [ esp + 0x6c ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4111dc
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa0 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x80 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa0 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4111dc
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4431ad
mov [ esp + 0x2c ] 0x0
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x80 ]
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x80 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x80 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax ebx
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x80 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44318e
mov edx 0x1
xor ecx ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e270
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x80 ]
push edx
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov edi edi
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4111dc
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4111dc
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
mov edx 0x1
xor ecx ecx
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3d9
mov edx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4111dc
add esp 0x4
push eax
call sub_44318e
jmp r-xdata
mov eax esi
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42cdc6
mov eax [ ebp - 0x20 ]
fstp st0
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
push eax
call sub_413bed
fld [ ebp - 0x1c ]
add esp 0x4
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
push 0x8
lea ecx [ ebp - 0x14 ]
push ecx
add eax 0x4
push eax
call sub_432cc2
fild [ ebp - 0x14 ]
fld [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp ecx 0x58
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
push ecx
call sub_467c5c
add esp 0x8
test al al
je r-xdata
mov eax [ edi + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
lea esi [ edi + 0x10 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov ecx [ ecx * 4 + rw-data ]
cmp ecx 0x1
jne r-xdata
mov edi [ ebp + 0xc ]
call sub_40c790
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp + 0x10 ]
inc edx
mov [ eax ] edx
jmp r-xdata
sub ecx 0x2
cmp ecx 0x7
ja r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
cmp ecx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp + 0x10 ]
inc edx
mov [ eax ] edx
jmp [ ecx * 4 + jump_table_42d552 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov esi [ esi ]
push ecx
call sub_4431ad
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp eax 0x8
je r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
call sub_4533eb
push eax
push esi
call sub_4533eb
push eax
call sub_445bc3
test eax eax
js r-xdata
push esi
call sub_443006
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov esi edx
call sub_443006
cmp esi edx
jl r-xdata
mov ecx esi
call sub_40baa0
fstp [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
call sub_40baa0
fcomp [ ebp - 0x1c ]
fnstsw ax
test ah 0x41
je r-xdata
push esi
call sub_44b3ac
mov ecx [ ebp + 0x8 ]
push ecx
mov esi eax
call sub_44b3ac
cmp esi eax
jb r-xdata
xor esi esi
jmp r-xdata
jmp [ eax * 4 + jump_table_42d572 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
cmp eax 0xa
je r-xdata
jmp r-xdata
jg r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ esi ]
call sub_425a80
mov esi eax
jmp r-xdata
xor edx edx
cmp [ esi ] dl
setne dl
mov esi edx
jmp r-xdata
mov eax [ esi ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov esi [ esi ]
cmp [ esi ] 0x4
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_42d59a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ ebp - 0x1c ] eax
jb r-xdata
push eax
call sub_413190
add esp 0x4
mov esi eax
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
call sub_432bc3
mov esi [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp esi eax
jl r-xdata
mov ecx [ ecx + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ecx ]
call sub_425a80
jmp r-xdata
xor eax eax
cmp [ ecx ] al
setne al
jmp r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ecx ]
cmp [ ecx ] 0x4
jg r-xdata
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
jmp r-xdata
push 0x8
lea ecx [ ebp - 0x1c ]
push ecx
add eax 0x4
push eax
call sub_432cc2
mov esi [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp ecx 0x58
jne r-xdata
push eax
call sub_413190
add esp 0x4
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
push ecx
call sub_432bc3
mov eax [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
jne r-xdata
push 0x8
lea edx [ ebp - 0x1c ]
push edx
add eax 0x4
push eax
call sub_432cc2
mov eax [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp ecx 0x58
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ebx
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42d2db
push 0x214
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov esi [ ebp - 0x2c ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x10 ] 0x1
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ esi ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
movsx edx [ eax + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x72
push eax
call sub_45e737
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42d374
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
push eax
call sub_44b8a3
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x10 ] 0x1
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ esi ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
movsx edx [ eax + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x72
push eax
call sub_45e737
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42d3a0
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov edx [ ebp - 0x2c ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_4115d7
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410e60
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x10 ] 0x1
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4111dc
mov eax [ esi ]
add esp 0x4
push eax
call sub_4111dc
add esp 0x4
jmp r-xdata
push edi
call sub_4111dc
add esp 0x4
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
movsx edx [ eax + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x72
push eax
call sub_45e737
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_44318e
jmp r-xdata
lea eax [ ebp - 0x2c ]
call sub_40e270
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call sub_4111dc
mov ecx [ ebp - 0x2c ]
add esp 0x4
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
push eax
call sub_44b3d9
jmp r-xdata
sub_42e2fd
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov bl [ esi ]
push edi
movzx edi bl
and edi 0x1
cmp edx 0x100
jge r-xdata
inc esi
and bl 0x2
je r-xdata
test bl 0x2
je r-xdata
movzx eax [ esi ]
test eax eax
je r-xdata
add esi 0x20
mov ecx edx
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx eax
mov eax edx
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov al [ eax + esi + 0x1 ]
test al cl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
test edi edi
pop edi
pop esi
sete al
pop ebx
pop ebp
retn
cmp eax 0x2
jne r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jl r-xdata
movzx eax [ esi ]
test eax eax
jne r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jl r-xdata
cmp edx eax
je r-xdata
movzx ecx [ esi ]
and ecx 0x3f
test al 0x20
jne r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jl r-xdata
movzx eax [ esi ]
and eax 0x3f
test cl 0x20
jne r-xdata
jmp r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax ecx
inc esi
jmp r-xdata
cmp edx ecx
jl r-xdata
movzx ebx [ esi ]
and ebx 0x3f
test al 0x20
jne r-xdata
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
or ecx eax
inc esi
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x1 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
add esi 0x2
jmp r-xdata
cmp edx eax
jle r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax ebx
inc esi
jmp r-xdata
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x1 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
add esi 0x2
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x1 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ebx eax
movzx eax [ esi + 0x1 ]
shl ebx 0x6
and eax 0x3f
or eax ebx
add esi 0x2
jmp r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
add esi 0x3
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x1 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
add esi 0x5
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x1 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ebx eax
movzx eax [ esi + 0x1 ]
and eax 0x3f
shl ebx 0x6
or ebx eax
movzx eax [ esi + 0x2 ]
shl ebx 0x6
and eax 0x3f
or eax ebx
add esi 0x3
jmp r-xdata
and ecx 0x1
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
and ecx 0x3f
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
and ecx 0x3f
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
add esi 0x5
and ecx 0x3
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
and ecx 0x3f
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or ebx eax
movzx eax [ esi + 0x1 ]
and eax 0x3f
shl ebx 0x6
or ebx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ebx 0x6
or ebx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ebx 0x6
or ebx eax
movzx eax [ esi + 0x4 ]
shl ebx 0x6
and eax 0x3f
or eax ebx
add esi 0x5
and eax 0x3
shl eax 0x6
or ebx eax
movzx eax [ esi + 0x1 ]
and eax 0x3f
shl ebx 0x6
or ebx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ebx 0x6
or ebx eax
movzx eax [ esi + 0x3 ]
shl ebx 0x6
and eax 0x3f
or eax ebx
add esi 0x4
jmp r-xdata
sub_42e645
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x2
mov ecx [ ebp + 0x8 ]
mov eax ecx
jne r-xdata
mov edx ecx
shr edx 0x10
and eax 0xff0000
or eax edx
mov edx ecx
and edx 0xff00
shl ecx 0x10
or edx ecx
shr eax 0x8
shl edx 0x8
or eax edx
pop ebp
retn
movzx ecx cl
shr eax 0x8
and eax 0xff
shl ecx 0x8
or eax ecx
pop ebp
retn
sub_42e688
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jns r-xdata
mov eax edx
test edi edi
jle r-xdata
cmp [ edx ] 0x0
mov edi edx
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn
lea esp [ esp ]
sub edi edx
inc edi
cmp [ edi ] 0x0
jne r-xdata
inc eax
test edi edi
jg r-xdata
cmp ecx 0xc0
jl r-xdata
movzx ecx [ eax ]
dec edi
cmp ecx 0x80
jl r-xdata
pop edi
pop esi
sub eax edx
pop ebx
pop ebp
retn
mov esi ecx
and esi 0x3f
movzx esi [ esi + r--data ]
cmp esi 0x3
jg r-xdata
cmp edi esi
jl r-xdata
sub eax edx
lea eax [ eax + edi + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov dl [ eax + 0x1 ]
inc eax
mov bl dl
and bl 0xc0
sub edi esi
cmp bl 0x80
jne r-xdata
sub eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx esi
dec ebx
je r-xdata
test cl 0x3e
je r-xdata
dec ebx
je r-xdata
mov edx [ ebp + 0x8 ]
cmp ecx 0xe0
jne r-xdata
dec ebx
jne r-xdata
cmp ecx 0xed
jne r-xdata
test dl 0x20
je r-xdata
dec esi
test esi esi
jle r-xdata
cmp ecx 0xf0
jne r-xdata
cmp dl 0xa0
jae r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0xf4
jg r-xdata
test dl 0x30
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
and cl 0xc0
cmp cl 0x80
jne r-xdata
jne r-xdata
dec esi
test esi esi
jg r-xdata
cmp dl 0x8f
ja r-xdata
jmp r-xdata
jmp r-xdata
sub_42e796
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
xor eax eax
lea esp [ esp ]
add esi eax
mov ecx eax
test eax eax
jle r-xdata
inc eax
cmp eax 0x6
jl r-xdata
mov cl [ eax * 4 + r--data ]
or cl dl
mov [ esi ] cl
inc eax
pop esi
pop ebp
retn
push ebx
cmp edx [ eax * 4 + r--data ]
jle r-xdata
mov bl dl
and bl 0x3f
or bl 0x80
mov [ esi ] bl
dec ecx
dec esi
sar edx 0x6
test ecx ecx
jg r-xdata
pop ebx
sub_42e7e1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
dec eax
push edi
mov edi [ ebp + 0x10 ]
test edx edx
je r-xdata
movzx ecx [ eax ]
mov cl [ eax ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp ecx 0x85
jg r-xdata
cmp ecx 0xa
je r-xdata
movzx ecx [ eax ]
cmp ecx 0xc0
jl r-xdata
mov cl [ eax - 0x1 ]
dec eax
and cl 0xc0
cmp cl 0x80
je r-xdata
cmp ecx 0x2028
jl r-xdata
je r-xdata
cmp eax edi
jbe r-xdata
cmp ecx 0xd
je r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
movzx ebx [ eax + 0x1 ]
and ebx 0x3f
test cl 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
cmp ecx 0x2029
jg r-xdata
xor eax eax
test edx edx
setne al
pop edi
inc eax
mov [ esi ] eax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp ecx 0xa
je r-xdata
mov eax 0x1
cmp [ eax - 0x1 ] 0xd
mov eax 0x2
je r-xdata
pop edi
mov [ esi ] 0x1
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
or ecx ebx
jmp r-xdata
pop edi
mov [ esi ] 0x3
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp eax edi
jbe r-xdata
jle r-xdata
pop edi
mov [ esi ] eax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
shl ebx 0x6
and ecx 0x3f
or ecx ebx
jmp r-xdata
mov eax 0x1
cmp [ eax - 0x1 ] 0xd
mov eax 0x2
je r-xdata
cmp ecx 0xd
jg r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x3 ]
shl ebx 0x6
and ecx 0x3f
or ecx ebx
jmp r-xdata
pop edi
mov [ esi ] eax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
and ecx 0x1
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x3 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x4 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x5 ]
shl ebx 0x6
and ecx 0x3f
or ecx ebx
jmp r-xdata
and ecx 0x3
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x3 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x4 ]
shl ebx 0x6
and ecx 0x3f
or ecx ebx
jmp r-xdata
sub_42e9b5
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x10 ]
test edx edx
je r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp ecx 0xc0
jl r-xdata
cmp ecx 0x85
jg r-xdata
cmp ecx 0xa
je r-xdata
movzx ebx [ eax + 0x1 ]
and ebx 0x3f
test cl 0x20
jne r-xdata
cmp ecx 0x2028
jl r-xdata
je r-xdata
pop edi
mov [ esi ] 0x1
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp ecx 0xd
je r-xdata
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
cmp ecx 0x2029
jg r-xdata
xor eax eax
test edx edx
setne al
pop edi
inc eax
mov [ esi ] eax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp ecx 0xa
jl r-xdata
dec edi
cmp eax edi
jae r-xdata
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
shl ebx 0x6
or ecx ebx
pop edi
mov [ esi ] 0x3
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp ecx 0xc
jle r-xdata
mov eax 0x1
cmp [ eax + 0x1 ] 0xa
mov eax 0x2
je r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x3 ]
shl ebx 0x6
jmp r-xdata
cmp ecx 0xd
jne r-xdata
pop edi
mov [ esi ] eax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
and ecx 0x1
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x3 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x4 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x5 ]
shl ebx 0x6
jmp r-xdata
and ecx 0x3
shl ecx 0x6
or ebx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x3 ]
and ecx 0x3f
shl ebx 0x6
or ebx ecx
movzx ecx [ eax + 0x4 ]
shl ebx 0x6
jmp r-xdata
and ecx 0x3f
dec edi
cmp eax edi
jae r-xdata
mov eax 0x1
cmp [ eax + 0x1 ] 0xa
lea eax [ ecx - 0xb ]
je r-xdata
pop edi
mov [ esi ] eax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
sub_42eb69
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov eax 0xfffffff9
pop ebp
retn
cmp eax [ ebp + 0x10 ]
jge r-xdata
push ebx
lea ebx [ eax + eax ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ eax + ebx * 4 + 0x4 ]
sub esi [ eax + ebx * 4 ]
push edi
lea eax [ esi + 0x1 ]
push eax
call [ rw-data ]
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + ebx * 4 ]
add edx [ ebp + 0x8 ]
push esi
push edx
push edi
call sub_410e60
mov eax [ ebp + 0x18 ]
add esp 0xc
mov [ edi + esi ] 0x0
mov [ eax ] edi
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
lea eax [ edi - 0x6 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42ebce
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov edx [ edx + edi * 4 ]
mov edi [ ecx + 0x68 ]
add edi edx
mov edx [ ecx + 0x6c ]
sub edx eax
cmp esi edx
jle r-xdata
test [ ebp + 0x18 ] 0x1
push ebx
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
test esi esi
jle r-xdata
test esi esi
jle r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov cl [ edi ]
mov dl [ eax ]
dec esi
inc eax
inc edi
cmp cl dl
jne r-xdata
mov ecx [ ecx + 0x30 ]
sub edi eax
jmp r-xdata
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
test esi esi
jg r-xdata
movzx ebx [ eax ]
movzx edx [ edi + eax ]
mov bl [ ebx + ecx ]
dec esi
inc eax
cmp [ edx + ecx ] bl
jne r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
test esi esi
jg r-xdata
sub_42ec51
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi r--data
xor esi esi
movzx edx [ esi + r--data ]
inc esi
cmp [ esi + r--data ] 0x0
lea edi [ edi + edx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push edi
push ecx
call sub_416931
add esp 0xc
test eax eax
je r-xdata
movzx eax [ esi + r--data ]
cmp ebx eax
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_42eca2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax + 0x1 ]
mov cl [ eax + 0x2 ]
add eax 0x2
test cl cl
je r-xdata
xor eax eax
pop ebp
retn
cmp cl 0x5c
jne r-xdata
cmp cl 0x5d
je r-xdata
cmp [ eax + 0x1 ] 0x5d
jne r-xdata
movzx ecx cl
cmp ecx edx
jne r-xdata
inc eax
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
cmp [ eax + 0x1 ] 0x5d
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax 0x1
pop ebp
retn
sub_42ecee
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x52
je r-xdata
pop ebp
retn
cmp ecx 0x50
jne r-xdata
lea edx [ ecx - 0x39 ]
cmp edx 0x38
ja r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
jmp r-xdata
movzx edx [ ecx + r--data ]
add eax edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
movzx edx [ edx + lookup_table_42edb6 ]
jmp [ edx * 4 + jump_table_42eda2 ]
add eax ecx
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
add ecx 0xffffffe4
cmp ecx 0xf
ja r-xdata
mov dl [ eax + 0x1 ]
mov dl [ eax + 0x3 ]
jmp r-xdata
movzx edx [ eax + 0x1 ]
jmp r-xdata
movzx edx [ eax + 0x3 ]
movzx ecx [ ecx + lookup_table_42edfa ]
jmp [ ecx * 4 + jump_table_42edf2 ]
add eax 0x2
jmp r-xdata
cmp dl 0xf
jne r-xdata
cmp dl 0x10
je r-xdata
add eax edx
mov cl [ eax - 0x1 ]
cmp cl 0xc0
jb r-xdata
movzx edx cl
and edx 0x3f
movzx ecx [ edx + r--data ]
sub_42ee0a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push esi
mov esi [ ebp + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x50
jne r-xdata
cmp ecx 0x5c
jne r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
jmp r-xdata
cmp ecx 0x5f
jne r-xdata
test esi esi
js r-xdata
add eax ecx
lea edx [ ecx - 0x39 ]
cmp edx 0x38
ja r-xdata
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x4 ]
shl ecx 0x8
or ecx edx
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
add eax 0x3
jmp r-xdata
movzx edx [ ecx + r--data ]
add eax edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
movzx edx [ edx + lookup_table_42ef06 ]
jmp [ edx * 4 + jump_table_42eef2 ]
add eax 0x5
jmp r-xdata
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
add ecx 0xffffffe4
cmp ecx 0xf
ja r-xdata
mov dl [ eax + 0x1 ]
mov dl [ eax + 0x3 ]
jmp r-xdata
movzx edx [ eax + 0x1 ]
jmp r-xdata
movzx edx [ eax + 0x3 ]
movzx ecx [ ecx + lookup_table_42ef4a ]
jmp [ ecx * 4 + jump_table_42ef42 ]
add eax 0x2
jmp r-xdata
cmp dl 0xf
jne r-xdata
cmp dl 0x10
je r-xdata
add eax edx
mov cl [ eax - 0x1 ]
cmp cl 0xc0
jb r-xdata
movzx edx cl
and edx 0x3f
movzx ecx [ edx + r--data ]
sub_42ef5a
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0xffffffff
xor edi edi
or eax 0xffffffff
movzx edx [ eax + lookup_table_42f1f2 ]
jmp [ edx * 4 + jump_table_42f1ba ]
mov edx [ ebp + 0x14 ]
xor ecx ecx
cmp eax 0x5f
setne cl
push edx
dec ecx
and ecx 0x2
lea eax [ esi + ecx ]
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
push eax
call sub_42ef5a
add esp 0x10
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
movzx edx [ esi ]
movzx eax [ edx + r--data ]
add esi eax
jmp r-xdata
inc edi
add esi 0x2
test ebx 0x800
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add edi eax
add esi 0x4
test ebx 0x800
je r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
mov al [ esi + 0x3 ]
shl ecx 0x8
or ecx edx
add edi ecx
cmp al 0x10
je r-xdata
add esi 0x2
inc edi
inc esi
jmp r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
lea esi [ esi + eax - 0x21 ]
movzx eax [ esi + 0x21 ]
add esi 0x21
add eax 0xffffffba
cmp eax 0x7
ja r-xdata
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
jmp r-xdata
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
mov eax edi
jmp r-xdata
pop edi
pop esi
mov eax 0xfffffffd
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
mov edx [ ebp + 0x14 ]
shl eax 0x8
or eax ecx
add eax [ edx + 0x14 ]
mov ecx eax
mov edi edi
mov cl [ esi ]
movzx eax cl
cmp eax 0x68
ja r-xdata
mov al [ esi - 0x1 ]
cmp al 0xc0
jb r-xdata
mov al [ esi - 0x1 ]
cmp al 0xc0
jb r-xdata
add esi 0x2
cmp al 0xf
jne r-xdata
inc edi
jmp r-xdata
movzx edx [ eax + lookup_table_42f26a ]
jmp [ edx * 4 + jump_table_42f25e ]
movzx edx [ esi + 0x1 ]
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
add esi edx
cmp [ esi ] 0x54
je r-xdata
cmp cl 0x54
jne r-xdata
movzx edx [ eax + 0x1 ]
movzx ebx [ eax + 0x2 ]
shl edx 0x8
or edx ebx
add eax edx
cmp [ eax ] 0x54
je r-xdata
cmp esi ecx
jbe r-xdata
movzx ecx al
and ecx 0x3f
movzx edx [ ecx + r--data ]
add esi edx
jmp r-xdata
movzx edx al
and edx 0x3f
movzx eax [ edx + r--data ]
add esi eax
jmp r-xdata
add esi 0x4
jmp r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
movzx edx [ esi + 0x3 ]
shl eax 0x8
or eax ecx
movzx ecx [ esi + 0x4 ]
shl edx 0x8
or edx ecx
cmp eax edx
jne r-xdata
jmp r-xdata
add esi 0x3
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push eax
push edx
add ecx 0x2
push ebx
push ecx
call sub_42ef5a
add esp 0x10
test eax eax
js r-xdata
cmp esi eax
jb r-xdata
add edi eax
add esi 0x5
jmp r-xdata
add esi 0x3
lea esp [ esp ]
add edi eax
jmp r-xdata
sub_42f272
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
nop
pop edi
pop esi
pop ebx
pop ebp
retn
movzx edx [ edx + lookup_table_42f30e ]
jmp [ edx * 4 + jump_table_42f2fa ]
test esi esi
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
movzx ecx [ ecx + r--data ]
add eax ecx
jmp r-xdata
add eax 0x2
jmp r-xdata
movzx ecx [ eax + 0x1 ]
mov edx [ edi ]
mov ebx ecx
and edx esi
and ebx esi
cmp ebx edx
je r-xdata
lea ebx [ ebx ]
movzx ecx [ eax ]
lea edx [ ecx - 0x4 ]
cmp edx 0x64
ja r-xdata
mov [ edi ] ecx
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
je r-xdata
movzx ecx [ eax ]
movzx edx [ ecx + r--data ]
add eax edx
jmp r-xdata
sub_42f373
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ eax ]
mov eax [ ebx ]
mov ecx eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] 0x28
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
cmp esi [ edi + 0x1c ]
jae r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x2a
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov al [ esi ]
mov ecx [ ebp - 0x8 ]
cmp al 0x5c
jne r-xdata
cmp cl 0x3f
je r-xdata
add esi 0x2
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp al 0x5b
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
mov cl [ esi + 0x2 ]
cmp cl 0x7c
jne r-xdata
inc eax
mov [ ebx ] eax
test edi edi
jne r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
xor ebx ebx
cmp al 0x51
jne r-xdata
cmp cl 0x23
jne r-xdata
add esi 0x3
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
inc esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp eax [ ebp + 0x14 ]
jne r-xdata
cmp al 0x28
jne r-xdata
cmp al 0x23
jne r-xdata
test ebx ebx
jne r-xdata
add esi 0x2
cmp [ esi ] 0x45
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
cmp esi [ edi + 0x1c ]
jae r-xdata
lea esp [ esp ]
add esi 0x2
mov [ ebp - 0x4 ] esi
cmp cl 0x28
jne r-xdata
add esi 0x3
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp al 0x29
je r-xdata
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x10 ]
push ebx
push ecx
push edx
mov edx [ ebp + 0x14 ]
push edx
push eax
lea ecx [ ebp - 0x4 ]
push edi
push ecx
call sub_42f373
add esp 0x1c
test eax eax
jg r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
cmp [ esi + 0x1 ] 0x5d
jne r-xdata
cmp al 0x5e
jne r-xdata
push 0x3
push r--data
push esi
call sub_416931
mov esi [ ebp - 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov ebx [ ebp + 0x20 ]
jmp r-xdata
cmp al 0x5c
jne r-xdata
cmp [ esi ] 0x50
jne r-xdata
cmp [ esi + 0x1 ] 0x3f
je r-xdata
cmp al 0x29
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp al 0x7c
jne r-xdata
mov esi [ ebp - 0x4 ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ edi + 0x58 ]
test ecx ecx
je r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
cmp al 0x5d
je r-xdata
test [ edi + 0x44 ] 0x2000000
jne r-xdata
inc esi
mov ebx 0x1
mov [ ebp - 0x4 ] esi
jmp r-xdata
add esi 0x4
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x5c
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
test al al
je r-xdata
mov cl [ esi ]
cmp cl 0x3c
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
jne r-xdata
cmp [ ebx ] ecx
jge r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ edi + 0x5c ]
mov edx [ edi + 0x1c ]
sub edx ecx
cmp esi edx
ja r-xdata
mov eax [ edi + 0x1c ]
cmp esi eax
jae r-xdata
test al al
je r-xdata
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp [ esi ] 0x45
jne r-xdata
cmp cl 0x27
jne r-xdata
mov dl [ esi + 0x1 ]
cmp dl 0x21
je r-xdata
cmp al 0x29
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] ecx
mov eax [ ebx ]
cmp eax ecx
jle r-xdata
inc esi
cmp [ ebp + 0x1c ] 0x0
mov [ ebp - 0x4 ] esi
je r-xdata
cmp al [ edi + 0x60 ]
jne r-xdata
mov edx [ ebp + 0x1c ]
push edx
lea edx [ edi + 0x5c ]
push edx
push eax
push ecx
push esi
call sub_42e9b5
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
cmp al 0x5c
jne r-xdata
jmp r-xdata
inc eax
mov [ ebx ] eax
test edi edi
jne r-xdata
cmp dl 0x3d
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebx ] edx
mov [ ebp - 0x8 ] eax
mov al [ esi ]
test al al
jne r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp ecx 0x1
je r-xdata
mov eax [ edi + 0x5c ]
lea esi [ esi + eax - 0x1 ]
mov [ ebp - 0x4 ] esi
cmp [ esi ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
cmp al 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
cmp eax 0x3c
jne r-xdata
cmp eax [ ebp + 0x14 ]
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
je r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x61 ]
je r-xdata
jmp r-xdata
jmp r-xdata
cmp al 0x51
jne r-xdata
movzx edx [ esi ]
mov ecx esi
cmp edx eax
je r-xdata
mov eax 0x3e
inc esi
mov [ ebp - 0x4 ] esi
mov al [ esi ]
test al al
je r-xdata
test edi edi
je r-xdata
inc esi
mov [ ebp - 0x4 ] esi
movzx edx [ esi ]
cmp edx eax
jne r-xdata
cmp al 0x5c
jne r-xdata
mov eax esi
sub eax ecx
cmp [ ebp + 0x14 ] eax
jne r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
push ecx
push edi
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] esi
cmp [ esi ] 0x45
jne r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f739
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
push ebx
push esi
mov ebx 0x4
xor esi esi
or ecx 0xffffffff
push edi
mov edi [ ebp + 0x14 ]
test [ edx + r--data ] bl
je r-xdata
cmp [ eax ] 0x7d
jne r-xdata
lea esi [ esi + esi * 4 ]
inc eax
lea esi [ edx + esi * 2 - 0x30 ]
movzx edx [ eax ]
test [ edx + r--data ] bl
jne r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x7d
je r-xdata
mov ecx esi
cmp esi 0xffff
ja r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
mov edx [ ebp + 0x10 ]
pop esi
mov [ edx ] ecx
pop ebx
pop ebp
retn
movzx edx dl
xor ecx ecx
test [ edx + r--data ] bl
je r-xdata
mov [ edi ] 0x5
pop edi
pop esi
pop ebx
pop ebp
retn
cmp ecx esi
jge r-xdata
lea ecx [ ecx + ecx * 4 ]
inc eax
lea ecx [ edx + ecx * 2 - 0x30 ]
movzx edx [ eax ]
test [ edx + r--data ] bl
jne r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp ecx 0xffff
ja r-xdata
sub_42f7d2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov cl [ ecx + r--data ]
mov dl 0x4
inc eax
and cl dl
jne r-xdata
movzx ecx [ eax ]
test [ ecx + r--data ] dl
je r-xdata
xor eax eax
pop ebp
retn
mov cl [ eax ]
cmp cl 0x7d
jne r-xdata
movzx ecx [ eax + 0x1 ]
inc eax
test [ ecx + r--data ] dl
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov eax 0x1
pop ebp
retn
mov cl [ eax + 0x1 ]
cmp cl 0x7d
je r-xdata
movzx ecx cl
mov cl [ ecx + r--data ]
add eax 0x2
and cl dl
je r-xdata
movzx ecx [ eax ]
test [ ecx + r--data ] dl
je r-xdata
xor edx edx
cmp [ eax ] 0x7d
sete dl
mov eax edx
pop ebp
retn
jmp r-xdata
movzx ecx [ eax + 0x1 ]
inc eax
test [ ecx + r--data ] dl
jne r-xdata
sub_42f85b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
movzx eax [ ecx + 0x1 ]
sub esp 0x8
push esi
mov esi [ ebp + 0x14 ]
shr esi 0xb
add ecx 0x2
and esi 0x1
je r-xdata
dec ecx
test eax eax
jne r-xdata
cmp eax 0xc0
jl r-xdata
lea edx [ eax - 0x30 ]
push ebx
push edi
cmp edx 0x4a
ja r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x1
jmp r-xdata
movzx edx [ ecx ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp eax 0xfffffff4
jne r-xdata
movsx ebx [ edx * 2 + r--data ]
mov [ ebp - 0x8 ] ebx
test ebx ebx
je r-xdata
test [ ebp + 0x14 ] 0x20000000
pop esi
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc ecx
jmp r-xdata
pop edi
pop ebx
cmp [ ecx + 0x1 ] 0x7b
jne r-xdata
cmp edx 0x48
ja r-xdata
mov eax ebx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov esp ebp
pop ebp
retn
lea edx [ eax + 0xb ]
cmp edx 0x5
ja r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or edx eax
movzx eax [ ecx + 0x1 ]
shl edx 0x6
and eax 0x3f
or eax edx
add ecx 0x2
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x25
test [ ebp + 0x14 ] 0x40
je r-xdata
movzx edi [ edx + lookup_table_42fcb7 ]
jmp [ edi * 4 + jump_table_42fc9b ]
sub eax 0x17
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or edx eax
movzx eax [ ecx + 0x1 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ ecx + 0x2 ]
shl edx 0x6
and eax 0x3f
or eax edx
add ecx 0x3
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x3
mov edx [ ebp + 0xc ]
mov [ edx ] 0x25
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al 0x3c
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
sub eax 0x30
lea esp [ esp ]
cmp [ ecx + 0x1 ] 0x7b
jne r-xdata
movzx eax [ ecx + 0x1 ]
inc ecx
test eax eax
jne r-xdata
and eax 0x1
shl eax 0x6
or edx eax
movzx eax [ ecx + 0x1 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ ecx + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ ecx + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ ecx + 0x4 ]
shl edx 0x6
and eax 0x3f
or eax edx
add ecx 0x5
and eax 0x3
shl eax 0x6
or edx eax
movzx eax [ ecx + 0x1 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ ecx + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ ecx + 0x3 ]
shl edx 0x6
and eax 0x3f
or eax edx
add ecx 0x4
jmp r-xdata
mov eax 0xffffffe5
jmp r-xdata
cmp al 0x27
je r-xdata
movzx eax [ ecx ]
cmp eax 0x38
jl r-xdata
mov eax edx
movzx edx [ ecx + 0x1 ]
test [ edx + r--data ] 0x4
mov edi ecx
je r-xdata
test esi esi
jne r-xdata
cmp dl 0x37
ja r-xdata
xor eax eax
lea esp [ esp ]
movzx edi [ ecx + 0x2 ]
lea edx [ ecx + 0x2 ]
xor eax eax
test [ edi + r--data ] 0x8
mov [ ebp - 0x4 ] eax
je r-xdata
cmp eax 0x7f
jle r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x2
jmp r-xdata
cmp al 0x7b
jne r-xdata
dec ecx
xor eax eax
jmp r-xdata
test eax eax
jns r-xdata
movzx edx [ ecx + 0x1 ]
inc ecx
lea eax [ eax + eax * 4 ]
lea eax [ edx + eax * 2 - 0x30 ]
movzx edx [ ecx + 0x1 ]
test [ edx + r--data ] 0x4
jne r-xdata
cmp eax 0xff
jle r-xdata
movzx edx [ ecx + 0x1 ]
inc ecx
lea eax [ edx + eax * 8 - 0x30 ]
cmp ebx 0x2
jl r-xdata
movzx esi [ ecx + 0x1 ]
inc ecx
cmp esi 0x61
jl r-xdata
cmp [ edx ] 0x7d
jne r-xdata
inc edx
test eax eax
jne r-xdata
lea edx [ eax - 0x61 ]
cmp edx 0x19
ja r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x44
jmp r-xdata
xor esi esi
mov al [ ecx + 0x2 ]
lea edx [ ecx + 0x2 ]
test al al
je r-xdata
cmp eax 0xa
jl r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x3d
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x33
jmp r-xdata
mov dl [ ecx + 0x1 ]
inc ebx
cmp dl 0x30
jb r-xdata
xor edx edx
cmp esi 0x41
setge dl
shl eax 0x4
dec edx
and edx 0xfffffff9
add edx 0x37
sub eax edx
add eax esi
cmp ebx 0x2
jl r-xdata
sub esi 0x20
test eax eax
js r-xdata
inc [ ebp - 0x4 ]
cmp edi 0x61
jl r-xdata
cmp edi 0x30
je r-xdata
xor eax 0x40
jmp r-xdata
sub eax 0x20
xor edx edx
mov edx 0x1
inc ecx
jmp r-xdata
mov esi 0x1
inc ecx
jmp r-xdata
jmp r-xdata
mov edx 0xffffffdd
sub edx eax
mov eax edx
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jle r-xdata
movzx edx [ ecx + 0x1 ]
inc ebx
test [ edx + r--data ] 0x8
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x22
neg esi
sbb esi esi
and esi 0x6
add esi 0x2
cmp [ ebp - 0x4 ] esi
jle r-xdata
xor ebx ebx
cmp edi 0x41
setge bl
shl eax 0x4
dec ebx
and ebx 0xfffffff9
add ebx 0x37
sub eax ebx
mov ebx [ ebp - 0x8 ]
add eax edi
sub edi 0x20
movzx edi [ edx ]
test [ edi + r--data ] 0x8
jne r-xdata
test esi esi
je r-xdata
lea ebx [ ebx ]
movzx edi [ ecx + 0x1 ]
xor eax eax
test [ edi + r--data ] 0x4
je r-xdata
cmp [ ecx + 0x1 ] 0x2d
jne r-xdata
cmp al 0x7d
je r-xdata
mov ecx edi
mov ecx edx
jmp r-xdata
test eax eax
jne r-xdata
inc ecx
cmp [ ecx ] 0x7d
je r-xdata
movzx edi [ ecx + 0x1 ]
inc ecx
lea eax [ eax + eax * 4 ]
lea eax [ edi + eax * 2 - 0x30 ]
movzx edi [ ecx + 0x1 ]
test [ edi + r--data ] 0x4
jne r-xdata
test eax eax
jns r-xdata
mov dl [ edx ]
test dl dl
je r-xdata
cmp al 0x2d
je r-xdata
test edx edx
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x3a
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x39
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x3d
jmp r-xdata
cmp dl 0x7d
je r-xdata
mov al [ edx + 0x1 ]
inc edx
test al al
jne r-xdata
movzx eax al
test [ eax + r--data ] 0x4
je r-xdata
mov edx [ ebp + 0x10 ]
cmp eax edx
jle r-xdata
mov eax 0xffffffe4
jmp r-xdata
sub edx eax
lea eax [ edx + 0x1 ]
mov edx [ ebp + 0xc ]
mov [ edx ] 0xf
jmp r-xdata
sub_42fd00
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax r--data
test ecx ecx
jle r-xdata
pop ebp
retn
nop
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
cmp [ eax ] dl
je r-xdata
mov eax r--data
dec ecx
test ecx ecx
jg r-xdata
pop ebp
retn
sub_42fd29
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
push eax
mov [ rw-data ] 0x0
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
push esi
call [ StrokePath@IAT ]
cmp edi 0xfffffffe
je r-xdata
push esi
call [ StrokeAndFillPath@IAT ]
jmp r-xdata
sub_42fda6
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0x14 ]
movzx eax si
movzx ecx di
shl eax 0x10
or eax ecx
push eax
push edx
push 0x200
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x8 ]
push eax
push ebx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] esi
call [ ClientToScreen@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push ecx
push edx
call [ ImageList_DragMove@IAT ]
sub_42fe05
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0xffffffec
push esi
call [ GetWindowLongW@IAT ]
test eax 0x10000
je r-xdata
movzx eax [ ebp + 0x10 ]
movzx ecx [ ebp + 0xc ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x84
push esi
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0xc
mov eax 0x2
pop esi
pop ebp
retn 0xc
sub_42fe47
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0xc
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov [ eax ] ecx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42fe94
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_442253
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x4 ] ecx
sub_42fed8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ eax + 0x8 ]
push eax
mov [ esi + 0x4 ] ecx
call sub_442253
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
dec [ esi + 0x8 ]
mov [ esi ] 0x0
mov [ eax + 0x4 ] 0x0
dec [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_42ff16
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ ebp + 0xc ]
push 0xc
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_42fe47
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_42fe47
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_42ffda
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
push eax
call sub_4111dc
dec [ esi ]
add esp 0x4
mov [ esi + 0x4 ] edi
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x8 ] edi
sub_430003
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax + 0x1cc ]
mov ebx esi
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
cmp esi [ eax + 0x78 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x1cc ]
cmp [ ebx ] eax
je r-xdata
jmp r-xdata
mov ebx esi
mov esi [ esi ]
mov edx [ esi ]
mov [ ecx + 0x1cc ] edx
cmp esi eax
je r-xdata
push edi
mov edi [ edi + 0x4 ]
call sub_4111dc
add esp 0x4
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop edi
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x1cc ]
mov ebx esi
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
test esi esi
jne r-xdata
push esi
call sub_4111dc
add esp 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
sub_43009d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x24
cmp [ eax ] 0x0
push ebx
push esi
push edi
je r-xdata
mov [ ebp + 0xc ] 0x0
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov [ esi + 0x60 ] eax
mov esi [ esi ]
push 0x172
push esi
call [ SendMessageW@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
call [ DeleteObject@IAT ]
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
push 0x2
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push esi
call [ GlobalLock@IAT ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push ebx
push eax
push edi
call [ ReadFile@IAT ]
push esi
call [ GlobalUnlock@IAT ]
push edi
call [ CloseHandle@IAT ]
lea edx [ ebp - 0x8 ]
push edx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
push 0x0
push ecx
mov [ ebp - 0x4 ] 0x0
call [ OleLoadPicture@IAT ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
push esi
call [ GlobalFree@IAT ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
push ecx
push 0x18
push edx
call [ GetObjectW@IAT ]
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
mov eax [ ebp + 0x14 ]
jne r-xdata
mov eax [ eax ]
mov ecx [ ecx ]
mov edx [ ebp + 0xc ]
push 0x2000
push eax
push ecx
push 0x0
push edx
call [ CopyImage@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov edx [ ebp - 0x1c ]
mov [ eax ] edx
sub_4301f8
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
push esi
or ecx 0x50000000
push edi
mov edi [ ebp + 0x8 ]
test eax 0x80000
je r-xdata
mov edx [ rw-data ]
push 0x0
push edx
mov edx [ ebp + 0x2c ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp + 0x28 ]
push edx
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
push edx
push eax
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
and eax 0xfff7ffff
pop edi
mov eax esi
pop esi
pop ebp
retn 0x2c
cmp [ ebp + 0x30 ] 0x0
je r-xdata
cmp [ edi + 0x190 ] 0x0
jl r-xdata
push 0x0
push 0x11
call [ GetStockObject@IAT ]
push eax
push 0x30
push esi
call [ SendMessageW@IAT ]
cmp [ edi + 0x19c ] 0x0
je r-xdata
push 0x0
push esi
call [ ShowWindow@IAT ]
sub_43028b
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x3a ] 0x0
je r-xdata
movzx eax [ esi + 0x7e ]
mov edx [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
push edx
mov [ ebp + 0xc ] eax
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov ecx [ edi + 0x44 ]
mov ebx [ edi + 0x48 ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] edx
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x8 ] ebx
test eax eax
jne r-xdata
cmp [ esi + 0x88 ] 0x7
mov ax [ edi + 0x58 ]
mov [ esi + 0x80 ] ax
mov cx [ edi + 0x5c ]
mov [ esi + 0x82 ] cx
jne r-xdata
test edx edx
jne r-xdata
mov [ ebp + 0x10 ] 0x1
test ecx ecx
je r-xdata
mov dx [ edi + 0x60 ]
mov [ esi + 0x84 ] dx
mov ax [ edi + 0x64 ]
mov [ esi + 0x86 ] ax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x1
test ebx ebx
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp [ edi + 0x5c ] ebx
jne r-xdata
mov ax [ ebp - 0x24 ]
mov [ esi + 0x80 ] ax
mov edx [ esi ]
lea ecx [ ebp - 0x24 ]
push ecx
push edx
call [ GetClientRect@IAT ]
or ebx 0xffffffff
cmp [ edi + 0x58 ] ebx
jne r-xdata
mov ecx [ esi ]
lea eax [ ebp - 0x34 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
sub eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
sub eax edx
mov [ ebp - 0x18 ] edx
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
push edx
push eax
mov [ ebp - 0x1c ] ecx
call [ ScreenToClient@IAT ]
mov ecx [ ebp - 0x1c ]
mov eax ecx
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov edi [ ebp - 0x18 ]
mov [ esi + 0x80 ] ax
mov eax edi
imul eax ebx
cdq
idiv [ ebp - 0x14 ]
mov ebx [ ebp - 0x14 ]
mov [ esi + 0x82 ] ax
mov eax [ ebp - 0xc ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ esi + 0x84 ] ax
mov eax [ ebp - 0x10 ]
imul eax [ ebp - 0x8 ]
cdq
idiv ebx
mov [ esi + 0x86 ] ax
mov eax [ ebp + 0xc ]
test ax ax
je r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
sub ebx eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov eax [ esi ]
lea edx [ ebp - 0x24 ]
push edx
push eax
call [ GetWindowRect@IAT ]
cmp [ edi + 0x60 ] ebx
jne r-xdata
mov cx [ ebp - 0x20 ]
mov [ esi + 0x82 ] cx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test eax 0x100
je r-xdata
cmp [ edi + 0x64 ] ebx
je r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x24 ]
mov [ esi + 0x84 ] cx
test eax 0x200
je r-xdata
mov dx [ ebp - 0xc ]
mov [ esi + 0x84 ] dx
test al 0x6
jne r-xdata
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
mov [ esi + 0x86 ] dx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x88 ] 0x0
jne r-xdata
mov edx eax
and edx 0x2
je r-xdata
mov dx [ ebp - 0x10 ]
mov [ esi + 0x86 ] dx
test al 0x60
jne r-xdata
test al 0x8
je r-xdata
test al 0x4
je r-xdata
mov [ esi + 0x80 ] cx
test al al
jns r-xdata
mov eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
cmp ecx eax
jle r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
mov edx ecx
sub edx eax
mov [ esi + 0x80 ] dx
jmp r-xdata
mov ecx eax
and ecx 0x20
je r-xdata
test dx dx
je r-xdata
mov eax ebx
cdq
sub eax edx
sar eax 0x1
cmp edi eax
jle r-xdata
mov eax [ ebp - 0x8 ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
mov edx edi
sub edx eax
mov [ esi + 0x82 ] dx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov eax ecx
sub eax ebx
add eax [ ebp - 0xc ]
imul eax [ ebp + 0x8 ]
cdq
idiv ebx
mov ebx [ ebp - 0x14 ]
sub eax [ ebp - 0xc ]
add eax [ ebp + 0x8 ]
mov [ esi + 0x80 ] ax
test al 0x40
je r-xdata
mov [ esi + 0x82 ] di
sub ecx [ ebp + 0x10 ]
sub cx [ esi + 0x84 ]
add cx [ ebp + 0x8 ]
add cx [ ebp - 0xc ]
mov [ esi + 0x80 ] cx
sub cx [ esi + 0x80 ]
sub cx [ ebp + 0x10 ]
add cx [ ebp + 0x8 ]
add cx [ ebp - 0xc ]
mov [ esi + 0x84 ] cx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax edi
sub eax ebx
add eax [ ebp - 0x10 ]
imul eax [ ebp - 0x8 ]
cdq
idiv ebx
sub eax [ ebp - 0x10 ]
add eax [ ebp - 0x8 ]
mov [ esi + 0x82 ] ax
test cx cx
je r-xdata
sub di [ esi + 0x86 ]
sub di bx
add di [ ebp - 0x8 ]
add di [ ebp - 0x10 ]
mov [ esi + 0x82 ] di
sub di [ esi + 0x82 ]
sub di bx
add di [ ebp - 0x8 ]
add di [ ebp - 0x10 ]
mov [ esi + 0x86 ] di
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4305ae
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0x10 ]
cmp esi 0x1
jne r-xdata
cmp esi 0x2
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp edx 0xffffffff
je r-xdata
mov [ eax + 0x58 ] ecx
cmp edx 0xffffffff
je r-xdata
add [ eax + 0x58 ] ecx
cmp edx 0xffffffff
je r-xdata
mov esi [ eax + 0x60 ]
add esi ecx
add [ eax + 0x58 ] esi
test edi edi
jle r-xdata
mov [ eax + 0x5c ] edx
jmp r-xdata
add [ eax + 0x5c ] edx
mov ecx [ eax + 0x64 ]
add ecx edx
add [ eax + 0x5c ] ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax + 0x60 ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
mov [ eax + 0x64 ] ebx
sub_430626
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
push ecx
push eax
call sub_413e46
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov edx [ edi ]
push edx
call sub_4111c1
add esp 0x4
mov esi eax
mov esi ebx
sub esi [ edi ]
sar esi 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x8 ]
push esi
push eax
push ecx
call sub_412fba
mov eax [ ebp + 0x8 ]
xor edx edx
add esp 0xc
mov [ eax + esi * 2 ] dx
test ebx ebx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0xc
cmp esi 0xffe
jle r-xdata
lea ecx [ esi + esi ]
add [ edi ] ecx
pop edi
test esi esi
pop esi
setne al
pop ebx
pop ebp
retn 0xc
inc esi
sub_430699
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov esi [ ebp - 0x4 ]
mov ebx [ ebp - 0xc ]
mov edx ecx
sub edx eax
sub esi ebx
imul esi edx
mov edx [ rw-data ]
cmp edx eax
jl r-xdata
mov eax 0x1
cmp edx ecx
jg r-xdata
mov eax [ rw-data ]
cmp eax ebx
jl r-xdata
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp esi [ rw-data ]
jg r-xdata
push edi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push edi
call [ GetDlgCtrlID@IAT ]
test eax eax
mov eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_430737
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x10
ja r-xdata
push 0x7f00
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_4308ab ]
push 0x7f89
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f8a
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f03
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f8b
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f01
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f88
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f86
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f83
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f85
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f82
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f84
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f04
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x7f02
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
push 0x0
call [ SetCursor@IAT ]
pop ebp
retn 0x4
sub_4308ef
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0x18 ]
mov ecx eax
and ecx 0x10
and eax 0x6
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp eax 0xffffffff
jne r-xdata
push 0xe
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
push eax
push esi
call [ SetTextColor@IAT ]
push 0x12
call [ GetSysColor@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ CreateSolidBrush@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x44 ]
push 0xf
call [ GetSysColorBrush@IAT ]
push 0xf
mov [ ebp + 0x8 ] eax
call [ GetSysColor@IAT ]
jmp r-xdata
mov eax 0x743c00
push 0x11
call [ GetSysColor@IAT ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push 0x0
push 0x0
push 0xe
push eax
call [ SendMessageW@IAT ]
inc eax
xor ecx ecx
mov [ ebp - 0x10 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
add esp 0x4
push ecx
push eax
mov [ ebp - 0x18 ] eax
mov eax [ edx ]
push eax
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x125
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
mov ebx [ SelectObject@IAT ]
push eax
push esi
mov [ ebp - 0x24 ] eax
call ebx
mov ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x20 ] eax
call [ SetBkColor@IAT ]
mov edx [ ebp + 0x8 ]
push edx
push esi
mov [ ebp - 0x28 ] eax
call ebx
mov ecx [ edi + 0x20 ]
mov edx [ edi + 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x1c ]
push 0xffffffff
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] eax
mov eax [ edi + 0x28 ]
push 0xffffffff
lea ecx [ ebp - 0x38 ]
push ecx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x2c ] eax
call [ InflateRect@IAT ]
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push 0x5
push 0x5
push edx
mov edx [ ebp - 0x38 ]
push eax
push ecx
push edx
push esi
call [ RoundRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0xfffffff0
push ecx
mov [ ebp - 0x8 ] 0x105
call [ GetWindowLongW@IAT ]
test eax 0x2000
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ edi + 0x20 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
push 0xfffffffd
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x38 ] ecx
mov ecx [ edi + 0x28 ]
push 0xfffffffd
lea edx [ ebp - 0x38 ]
push edx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
call [ InflateRect@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push esi
call [ DrawFocusRect@IAT ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
push 0xffffffff
push edi
push esi
call [ DrawTextW@IAT ]
push edi
call sub_4111dc
mov eax [ ebp - 0x1c ]
add esp 0x4
push eax
push esi
call ebx
mov ecx [ ebp + 0x8 ]
mov edi [ DeleteObject@IAT ]
push ecx
call edi
mov edx [ ebp - 0x20 ]
push edx
push esi
call ebx
mov eax [ ebp - 0x24 ]
push eax
call edi
mov ecx [ ebp - 0x4 ]
push ecx
push esi
call [ SetTextColor@IAT ]
mov edx [ ebp - 0x28 ]
push edx
push esi
call [ SetBkColor@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x11
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetTextColor@IAT ]
sub_430b0f
push ebp
mov ebp esp
push 0x44
push 0x0
push rw-data
call sub_412f40
push 0x10
push 0x0
push rw-data
call sub_412f40
mov ecx [ ebp + 0x8 ]
add esp 0x18
push rw-data
push rw-data
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
push ecx
mov eax 0x1
push 0x0
mov [ rw-data ] 0x44
mov [ rw-data ] 0x1
mov [ rw-data ] ax
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
pop ebp
retn 0x4
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
sub_430b87
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x39 ] 0x0
push edi
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
lea eax [ ebp - 0x1c ]
push eax
push edx
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov edi [ ScreenToClient@IAT ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push edx
push eax
mov [ ebp - 0x8 ] ecx
call edi
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x10 ]
push edx
push eax
mov [ ebp - 0x8 ] ecx
call edi
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] ecx
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
mov edx [ esi ]
push ecx
push edx
call [ InvalidateRect@IAT ]
sub_430c09
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
cmp eax [ edi + 0x64 ]
jae r-xdata
pop edi
or eax 0xffffffff
pop esi
pop ebp
retn 0x8
mov ecx [ edi + 0x60 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx ] esi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_430c57
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
lea ecx [ ecx ]
pop ebp
retn
add eax 0x2
dec ecx
jne r-xdata
mov dx [ eax ]
cmp dx [ ebp + 0xc ]
je r-xdata
sub_430c7f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_430ce2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
nop
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_4111dc
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jb r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
pop ebp
retn 0x4
sub_430d31
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
cmp [ esi + 0x8 ] 0x0
mov eax [ ebx + 0x8 ]
mov [ esi + 0xc ] eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor edi edi
add esp 0x4
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] edi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_430dc1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_430e0d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430df3
test al al
je r-xdata
mov eax sub_40c4af
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_430e30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x0
call sub_4148b3
mov [ esi ] eax
add esp 0x4
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_430e7b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_430f0e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
push edi
mov [ ecx ] 0x0
test eax eax
jne r-xdata
mov edx [ eax ]
mov edx [ edx + 0x10 ]
lea ecx [ ebp - 0x8 ]
push ecx
push 0x800
push 0x0
push eax
call edx
test eax eax
js r-xdata
mov eax 0x80004003
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
lea edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
mov edi eax
test edi edi
jns r-xdata
mov eax [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
call edx
mov edi eax
xor ebx ebx
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x1c ] ebx
test edi edi
je r-xdata
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x30 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push 0x0
mov edi 0x1
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x2c ]
call eax
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
js r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax 0x80028017
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] di
jb r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
lea ecx [ ebp - 0x34 ]
push ecx
push esi
call edx
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edi [ eax + 0x28 ]
mov ebx [ eax ]
mov [ ebp - 0x3c ] edx
mov edx [ esi ]
push eax
mov [ ebp - 0x40 ] ecx
mov ecx [ eax + 0xc ]
mov eax [ edx + 0x4c ]
push esi
mov [ ebp - 0x38 ] ecx
call eax
cmp edi 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] 0x0
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x14 ]
call eax
cmp [ ebp - 0x18 ] 0x5
jne r-xdata
mov esi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x3c ]
mov [ eax ] esi
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
xor eax eax
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
mov eax 0x80028ca0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
cmp ebx edi
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push ebx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
movzx edi [ eax + 0x30 ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
cmp edi 0x1
jbe r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edi [ ebp - 0x30 ]
xor eax eax
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0xc ] eax
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x24 ]
push edx
mov edx [ ebp - 0xc ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax edi
jb r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x24 ]
push edx
push eax
mov eax [ ecx + 0x38 ]
call eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
mov edx [ ebp - 0xc ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push 0x0
push eax
mov eax [ ecx + 0x48 ]
call eax
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov al [ ebp - 0x2c ]
test al 0x1
je r-xdata
test al 0x2
jne r-xdata
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
sub_43119b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push esi
call edx
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx [ edx ]
lea eax [ ebp + 0x8 ]
push eax
push r--data
push esi
call ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push eax
mov esi eax
call edx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
pop esi
pop ebp
retn
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
push 0x0
mov esi eax
push eax
mov eax [ edx + 0x14 ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
sub_4311fc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
test esi esi
jne r-xdata
push esi
call sub_4111c1
inc eax
add esp 0x4
add eax eax
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov [ edi ] esi
pop edi
xor eax eax
pop esi
pop ebp
retn
push esi
push eax
call sub_411567
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
pop edi
mov eax 0x8007000e
pop esi
pop ebp
retn
sub_431245
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_43129a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_4312cc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_4312fe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_43137e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
sub esp 0x10
xor edx edx
push esi
mov esi [ ebp + 0xc ]
cmp eax edx
jne r-xdata
mov [ esi ] edx
mov [ esi + 0x4 ] edx
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
pop esi
mov esp ebp
pop ebp
retn 0xc
pop esi
mov esp ebp
pop ebp
retn 0xc
push esi
push ecx
call [ ClientToScreen@IAT ]
sub_4313ca
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
cmp eax ecx
push edi
mov edi [ esi + 0xc ]
setl [ ebp + 0x13 ]
cmp edi edx
setl [ ebp - 0x1 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx + 0x104 ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call sub_43137e
mov eax [ ebp - 0x18 ]
add [ esi ] eax
add [ esi + 0x8 ] eax
mov ecx [ ebp - 0x14 ]
mov eax [ esi + 0x8 ]
add [ esi + 0xc ] ecx
mov ebx [ esi + 0xc ]
sub eax [ esi ]
add [ esi + 0x4 ] ecx
sub ebx [ esi + 0x4 ]
inc eax
push 0x0
mov [ ebp + 0xc ] eax
inc ebx
call [ GetDC@IAT ]
mov ecx [ ebp + 0xc ]
push ebx
mov edi eax
push ecx
push edi
mov [ ebp - 0xc ] edi
call [ CreateCompatibleBitmap@IAT ]
push edi
mov [ ebp - 0x8 ] eax
call [ CreateCompatibleDC@IAT ]
mov edx [ ebp - 0x8 ]
mov edi eax
push edx
push edi
call [ SelectObject@IAT ]
mov dl [ ebp - 0x1 ]
mov [ ebp - 0x10 ] eax
mov ecx ebx
test dl dl
je r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edx
cmp [ ebp + 0x13 ] 0x0
mov eax [ ebp + 0xc ]
je r-xdata
neg ecx
test dl dl
je r-xdata
neg eax
mov edx [ esi + 0x4 ]
mov edx [ esi + 0xc ]
jmp r-xdata
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
mov [ ebp + 0x8 ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4111dc
xor eax eax
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
push 0xcc0020
push ecx
mov ecx [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push ecx
push ebx
push edx
push 0x0
push 0x0
push edi
call [ StretchBlt@IAT ]
mov esi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
push 0x0
mov ecx ebx
neg ecx
mov [ ebp - 0x3c ] ecx
lea ecx [ ebp - 0x44 ]
push ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
mov [ ebp - 0x44 ] 0x28
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] 0x200001
mov [ ebp - 0x34 ] 0x0
call [ GetDIBits@IAT ]
mov eax [ ebp - 0x30 ]
mov edx [ ebp + 0x14 ]
push eax
mov [ edx ] eax
call sub_4115d7
add esp 0x4
push 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push eax
push ebx
push 0x0
push esi
push edi
mov [ ebp + 0x10 ] eax
call [ GetDIBits@IAT ]
mov edx [ ebp - 0x10 ]
push edx
push edi
mov ebx eax
call [ SelectObject@IAT ]
push esi
call [ DeleteObject@IAT ]
push edi
call [ DeleteDC@IAT ]
mov eax [ ebp - 0xc ]
push eax
push 0x0
call [ ReleaseDC@IAT ]
pop edi
pop esi
test ebx ebx
pop ebx
je r-xdata
sub_43156c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ ecx + edx ]
mov edx edi
imul edx esi
add edx edx
add esi esi
or eax 0xffffffff
add edx edx
lea edi [ ecx + edi * 4 ]
add esi esi
mov [ ebp + 0x8 ] edi
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x14 ] ecx
cmp esi [ ebp + 0x8 ]
jb r-xdata
add esi [ ebp + 0x10 ]
mov [ ebp + 0x14 ] esi
mov ecx esi
movzx edi [ ecx + 0x2 ]
mov esi eax
and esi 0xff
xor esi edi
movzx edi [ ecx + 0x1 ]
shr eax 0x8
xor eax [ esi * 4 + rw-data ]
mov esi eax
and esi 0xff
xor esi edi
movzx edi [ ecx ]
shr eax 0x8
xor eax [ esi * 4 + rw-data ]
add ecx edx
mov esi eax
and esi 0xff
xor esi edi
shr eax 0x8
xor eax [ esi * 4 + rw-data ]
mov esi [ ebp + 0x14 ]
cmp ecx ebx
jb r-xdata
not eax
mov [ ebp + 0x14 ] eax
fild [ ebp + 0x14 ]
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
fadd [ r--data ]
sub_431613
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
add ecx edx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp + 0x8 ] ecx
mov ecx edi
imul ecx ebx
add ecx ecx
add ebx ebx
lea edi [ edx + edi * 4 ]
add ebx ebx
xor esi esi
add ecx ecx
mov eax 0x1
mov [ ebp - 0x4 ] edi
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x14 ] edx
cmp edx edi
jae r-xdata
mov edx esi
shr edx 0x10
mov ecx edx
shl ecx 0x4
sub ecx edx
movzx edx si
pop edi
add ecx edx
pop esi
pop ebx
cmp ecx 0xfff1
jb r-xdata
lea esp [ esp ]
shl ecx 0x10
or ecx eax
mov [ ebp + 0x14 ] ecx
fild [ ebp + 0x14 ]
jns r-xdata
sub ecx 0xfff1
movzx ebx [ edx + 0x2 ]
add eax ebx
movzx ebx [ edx + 0x1 ]
add esi eax
add eax ebx
movzx ebx [ edx ]
add esi eax
add eax ebx
add edx ecx
add esi eax
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov esp ebp
pop ebp
retn 0x10
fadd [ r--data ]
sub [ ebp + 0x10 ] 0x3
je r-xdata
mov edx [ ebp + 0x14 ]
add edx [ ebp + 0xc ]
mov [ ebp + 0x14 ] edx
mov edi eax
shr edi 0x10
mov ebx edi
shl ebx 0x4
sub ebx edi
mov edi esi
movzx eax ax
shr edi 0x10
add eax ebx
mov ebx edi
shl ebx 0x4
sub ebx edi
mov edi [ ebp - 0x4 ]
movzx esi si
add esi ebx
cmp [ ebp + 0x14 ] edi
jb r-xdata
cmp [ ebp + 0x14 ] edi
jb r-xdata
mov [ ebp + 0x10 ] 0x15ae
jmp r-xdata
cmp eax 0xfff1
jb r-xdata
sub eax 0xfff1
sub_431706
push ebp
mov ebp esp
movzx ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov edx ecx
sub edx esi
mov eax 0x0
sets al
push edi
mov edi [ ebp + 0x14 ]
dec eax
and eax edx
mov edx [ ebp + 0x10 ]
mov [ edx ] al
lea eax [ ecx + esi ]
cmp eax 0xff
jle r-xdata
mov [ edi ] al
pop edi
pop esi
pop ebp
retn 0x10
mov eax 0xff
sub_431740
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp al [ ecx ]
jb r-xdata
xor eax eax
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
cmp al [ edx ]
ja r-xdata
mov eax 0x1
pop ebp
retn 0xc
sub_4317b1
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x8
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push edi
add eax eax
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
xor eax eax
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx ]
mov [ eax ] ecx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x8
sub_431877
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
push ebx
xor ebx ebx
dec eax
je r-xdata
xor al al
pop ebx
pop ebp
retn 0x4
dec eax
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn 0x4
push edi
mov edi [ InternetQueryOptionW@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
push ebx
push 0x26
push ebx
mov [ ebp + 0x8 ] ebx
call edi
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
pop edi
mov al bl
pop ebx
pop ebp
retn 0x4
push esi
push eax
call sub_4115d7
mov edx [ ebp + 0x8 ]
push edx
mov esi eax
push ebx
push esi
call sub_412f40
add esp 0x10
lea eax [ ebp + 0x8 ]
push eax
push esi
push 0x26
push ebx
call edi
cmp [ esi + 0x4 ] ebx
push esi
setne bl
call sub_4111dc
add esp 0x4
pop esi
sub_4318eb
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
push 0x20000013
push eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x4
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_431930
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor eax eax
cmp edi eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp ebx eax
jbe r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_4317b1
push 0x0
call sub_4111dc
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 - 0x4 ]
mov [ eax ] edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 - 0x4 ]
add esp 0x4
pop edi
mov [ eax + 0x4 ] ebx
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4319ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
push eax
call [ WaitForSingleObject@IAT ]
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x8
sub_4319d2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x4
push eax
call [ SetEvent@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_4319f5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
xor ecx ecx
mov [ esi ] eax
test eax eax
setne al
pop esi
pop ebp
retn 0x4
push eax
call [ CloseHandle@IAT ]
mov [ esi ] 0x0
sub_431a2b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push ebx
push esi
push edi
xor eax eax
xor edi edi
test edx edx
je r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
mov [ ebp - 0x4 ] ecx
mov edi edi
inc edi
inc eax
cmp edi edx
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx ]
movzx ebx [ ebx + eax * 2 ]
movzx ecx cx
xor esi esi
test cx cx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + esi * 2 + 0x2 ]
inc esi
test cx cx
jne r-xdata
cmp bx cx
je r-xdata
mov ecx [ ebp - 0x4 ]
sub_431a86
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ esp + 0x10 ]
mov [ esp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
mov esi [ FindClose@IAT ]
call esi
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea ecx [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push r--data
call edi
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ esp + 0x10 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push edi
call esi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ SetCurrentDirectoryW@IAT ]
lea edx [ esp + 0x3c ]
push r--data
push edx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x3c ]
push ecx
call [ GetFileAttributesW@IAT ]
or eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
not edx
and eax edx
push eax
lea eax [ esp + 0x40 ]
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl 0x1
test [ esp + 0x10 ] 0x10
je r-xdata
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x3c ]
push edx
call ebx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push eax
call sub_431a86
test al al
je r-xdata
push edi
call esi
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x10
push r--data
call ebx
sub_431be8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0xa28
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xa28 ]
push ecx
push 0x104
push edx
call [ GetFullPathNameW@IAT ]
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0xa28 ]
push eax
lea ecx [ ebp - 0x208 ]
push r--data
push ecx
call sub_41329b
lea edx [ ebp - 0x208 ]
push edx
call sub_4111c1
mov edi eax
add esp 0x10
cmp [ ebp + edi * 2 - 0x20a ] 0x5c
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x0
push ebx
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + edi * 2 - 0x20c ] 0x3a
je r-xdata
push esi
push 0x0
push 0x2200000
push 0x3
push 0x0
push 0x0
push 0x40000000
push ebx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
xor eax eax
mov [ ebp + edi * 2 - 0x20a ] ax
push ebx
call [ RemoveDirectoryW@IAT ]
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x14
lea ecx [ ebp - 0x820 ]
push 0x0
push ecx
call sub_412f40
lea edx [ edi + edi ]
mov [ ebp - 0x816 ] dx
mov eax [ ebp - 0x816 ]
push 0x104
lea ecx [ ebp - 0x208 ]
push ecx
lea edx [ ebp - 0x810 ]
add eax 0x2
push edx
mov [ ebp - 0x820 ] 0xa0000003
mov [ ebp - 0x814 ] ax
call sub_412fba
mov eax [ ebp - 0x816 ]
add esp 0x18
push 0x0
add eax 0xc
lea ecx [ ebp + 0x8 ]
push ecx
push 0x0
movzx edx ax
push 0x0
add edx 0x8
push edx
mov [ ebp - 0x81c ] ax
lea eax [ ebp - 0x820 ]
push eax
push 0x900a4
push esi
call [ DeviceIoControl@IAT ]
push esi
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
call [ CloseHandle@IAT ]
sub_431d57
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push 0x1
push 0x467
push eax
call [ SendMessageW@IAT ]
sub_431d7f
mov eax [ rw-data ]
push esi
mov esi [ eax + 0x4 ]
push eax
call sub_4111dc
dec [ rw-data ]
add esp 0x4
mov [ rw-data ] esi
test esi esi
pop esi
jne r-xdata
retn
mov [ rw-data ] 0x0
sub_431ddb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push 0x0
push edx
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_431e1f
push ebp
mov ebp esp
sub esp 0x20c
lea eax [ ebp - 0x20c ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push r--data
lea edx [ ebp - 0x20c ]
push edx
call [ GetTempFileNameW@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_431e71
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push 0x104
push eax
lea ecx [ esi + 0x22e ]
push ecx
call sub_412fba
add esp 0xc
xor edx edx
mov [ esi + 0x436 ] dx
pop esi
pop ebp
retn 0x8
sub_431e9e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push 0x104
push eax
lea ecx [ esi + 0x24 ]
push ecx
call sub_412fba
add esp 0xc
xor edx edx
mov [ esi + 0x22c ] dx
pop esi
pop ebp
retn 0x8
sub_431ec8
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ esi + eax * 4 + 0x8 ]
push edi
push 0x9
push ecx
call sub_414e3c
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + edx * 4 + 0x8 ]
push 0xd
push eax
call sub_414e3c
mov ecx [ esi ]
add edi eax
add esp 0x10
mov [ esi + ecx * 4 + 0x8 ] edi
dec [ esi ]
jns r-xdata
dec [ esi + 0x4 ]
jns r-xdata
mov [ esi ] 0x10
mov eax [ esi ]
mov edx [ esi + eax * 4 + 0x8 ]
cmp edx [ esi + 0x4c ]
jne r-xdata
mov [ esi + 0x4 ] 0x10
mov esi [ esi + 0xd4 ]
sub esi 0x0
je r-xdata
mov ecx 0x24
sub ecx eax
push 0x44
lea edx [ esi + ecx * 4 ]
push edx
lea eax [ esi + 0x8 ]
push eax
call sub_4119e3
add esp 0xc
test eax eax
jne r-xdata
mov edx edi
shr edi 0xc
shl edx 0x14
or edi 0x3ff00000
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
fld [ ebp - 0x8 ]
pop edi
fsub [ r--data ]
pop esi
mov esp ebp
pop ebp
retn 0x4
dec esi
je r-xdata
fldz
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
shr edi 0xc
shl ecx 0x14
or edi 0x3ff00000
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x8 ]
pop edi
fsub [ r--data ]
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp + 0x8 ] edi
fild [ ebp + 0x8 ]
test edi edi
jns r-xdata
fmul [ r--data ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
fadd [ r--data ]
sub_431fbb
push ebp
mov ebp esp
cmp [ rw-data ] 0x1000
push esi
mov esi [ ebp + 0x8 ]
jbe r-xdata
inc [ rw-data ]
pop esi
pop ebp
retn 0x4
push edi
mov edi [ esi + 0x454 ]
mov [ rw-data ] 0x0
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
mov eax ecx
imul eax eax 0x64
xor edx edx
div [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push ecx
push eax
call edi
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x448 ] 0x1
sub_432017
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x464 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x45c ]
push eax
push 0x10000
push 0x1
push ecx
call sub_414d04
add esp 0x10
mov [ esi + 0x464 ] 0x0
cmp eax 0x10000
jne r-xdata
mov ecx [ esi + 0x464 ]
mov edx [ esi + 0x45c ]
mov al [ ecx + edx ]
inc ecx
mov [ esi + 0x464 ] ecx
pop esi
pop ebp
retn 0x4
sub_43206e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x460 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x458 ]
push ecx
push eax
push 0x1
push edx
call sub_4142b6
add esp 0x10
mov [ esi + 0x460 ] 0x0
sub_4320a4
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x460 ]
mov eax [ esi + 0x458 ]
mov [ eax + ecx ] dl
inc [ esi + 0x460 ]
cmp [ esi + 0x460 ] 0x10000
jne r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x458 ]
push eax
push 0x10000
push 0x1
push ecx
call sub_4142b6
add esp 0x10
mov [ esi + 0x460 ] 0x0
sub_4320f8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x438 ]
test eax eax
je r-xdata
mov eax [ esi + 0x45c ]
test eax eax
je r-xdata
push eax
call sub_413748
add esp 0x4
mov esi [ esi + 0x458 ]
test esi esi
je r-xdata
push eax
call sub_413748
add esp 0x4
pop esi
pop ebp
retn 0x4
push esi
call sub_413748
add esp 0x4
sub_43213d
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x20000
call sub_4135bb
mov edi eax
push 0x10000
mov [ esi + 0x438 ] edi
call sub_4135bb
mov ebx eax
push 0x10000
mov [ esi + 0x45c ] ebx
call sub_4135bb
add esp 0xc
mov [ esi + 0x458 ] eax
test edi edi
je r-xdata
push esi
call sub_4320f8
pop edi
pop esi
mov eax 0x5
pop ebx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_4321a4
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x1
jne r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x8
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_414d04
add esp 0x10
mov eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push 0x8
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_410e60
add esp 0xc
jmp r-xdata
movzx ecx [ ebp - 0x4 ]
movzx edx [ ebp - 0x3 ]
movzx eax [ ebp - 0x2 ]
add [ esi + 0xc ] 0x8
shl ecx 0x8
or ecx edx
movzx edx [ ebp - 0x1 ]
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0xc ]
shl ecx 0x8
or ecx edx
mov [ eax ] ecx
lea ecx [ ebp - 0x8 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_414d30
add esp 0x8
neg eax
sbb eax eax
neg eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_432229
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x2 ]
push esi
movzx esi [ eax ]
push edi
xor edi edi
test ebx ebx
jle r-xdata
shl ecx 0x10
add ecx esi
pop edi
mov [ eax ] ecx
pop esi
lea ecx [ ecx ]
mov eax [ ebp + 0xc ]
movzx eax [ edi + eax ]
add eax esi
xor edx edx
mov esi 0xfff1
div esi
inc edi
mov esi edx
lea eax [ ecx + esi ]
xor edx edx
mov ecx 0xfff1
div ecx
mov ecx edx
cmp edi ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
sub_432281
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov edx 0x1
mov eax rw-data
push edi
mov ecx [ eax ]
mov edi ecx
shr edi 0x1e
xor edi ecx
imul edi edi 0x6c078965
add edi edx
mov [ eax + 0x4 ] edi
add eax 0x4
inc edx
cmp eax rw-data
jl r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
pop edi
pop ebp
retn
sub_4322cd
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
sub esp 0x18
fld st0
push ebx
fldz
push esi
fld st0
push edi
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
pop edi
fstp st1
pop esi
fstp st0
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
fld st1
fld [ r--data ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fxch st1
fst [ ebp - 0x18 ]
fld st0
call sub_425ab6
mov edi [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
fild [ ebp + 0x8 ]
fst [ ebp - 0x10 ]
fxch st1
fcomp st2
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fadd [ r--data ]
mov esi [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx esi
sbb eax edx
sub ecx 0xa
sbb eax 0x0
sub edi esi
mov esi [ ebp - 0x14 ]
sbb esi edx
cmp esi eax
jl r-xdata
fsub [ r--data ]
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx edx
sbb eax ebx
sub ecx 0xa
sbb eax 0x0
sub edi edx
sbb esi ebx
cmp esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jg r-xdata
jg r-xdata
add [ ebp + 0x8 ] 0x1
adc [ ebp + 0xc ] 0x0
cmp edi ecx
jb r-xdata
or eax 0xffffffff
add [ ebp + 0x8 ] eax
adc [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi ecx
jb r-xdata
sub_4323c5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x10
push eax
push ecx
call sub_4119e3
add esp 0xc
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_4323e1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
test ecx ecx
jne r-xdata
js r-xdata
mov eax [ eax + 0x20c ]
pop ebp
retn 0x8
cmp ecx [ eax + 0x20c ]
jg r-xdata
mov eax [ eax + ecx * 4 + 0x8 ]
pop ebp
retn 0x8
sub_432416
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x8
jne r-xdata
xor al al
pop ebp
retn 0x4
mov eax [ eax ]
test eax eax
je r-xdata
movzx ecx [ eax ]
cmp ecx 0x9
jne r-xdata
cmp ecx 0xd
je r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn 0x4
sub_432447
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
xor edi edi
cmp eax 0x3
jne r-xdata
cmp eax 0x1
jne r-xdata
fld [ esi ]
sub esp 0x8
fstp [ esp ]
call sub_414816
mov edi eax
add esp 0x8
test edi 0x1f8
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi ]
cdq
mov ecx eax
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
fld [ esi ]
call sub_425ab6
mov ecx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fld [ esi ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
mov eax edi
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax ecx
or eax edx
je r-xdata
jmp r-xdata
or edi 0x40000
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax ecx
and eax 0x1
xor esi esi
or eax esi
je r-xdata
or edi 0x200000
or edi 0x100000
jmp r-xdata
or edi 0x20000
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
jl r-xdata
test edx edx
jg r-xdata
or edi 0x10000
test ecx ecx
jae r-xdata
sub_432559
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x20
jl r-xdata
xor al al
pop ebp
retn 0x4
cmp ax 0x2f
jg r-xdata
mov al 0x1
pop ebp
retn 0x4
sub_43257b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x10
jl r-xdata
xor al al
pop ebp
retn 0x4
cmp ax 0x1f
jg r-xdata
mov al 0x1
pop ebp
retn 0x4
sub_43259d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x8 ]
test ax ax
js r-xdata
xor al al
pop ebp
retn 0x4
cmp ax 0xf
jg r-xdata
mov al 0x1
pop ebp
retn 0x4
sub_4325be
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x30
jl r-xdata
xor al al
pop ebp
retn 0x4
cmp ax 0x3f
jg r-xdata
mov al 0x1
pop ebp
retn 0x4
sub_4325e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push ecx
push 0x0
push eax
call esi
push eax
push edi
call esi
push eax
call [ DuplicateHandle@IAT ]
pop esi
pop edi
pop ebp
retn
mov [ eax ] edi
pop edi
pop ebp
retn
sub_432614
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
mov [ esi ] 0x0
sub_432631
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax ] 0x1
je r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax 0x1
pop ebp
retn 0x4
sub_432664
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
je r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax 0x1
pop ebp
retn 0x4
sub_432684
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax ] 0x2
je r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x1
pop ebp
retn 0x4
sub_4326a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
xor ecx ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x2 ] dx
mov ecx [ eax ]
test cl 0x8
je r-xdata
test [ eax ] 0x10
je r-xdata
or ecx 0x6
mov [ eax ] ecx
pop ebp
retn 0x8
mov [ eax ] 0x10
sub_432704
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x2c ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
push edi
mov edi [ VariantClear@IAT ]
lea eax [ esi + 0x48 ]
push eax
call edi
lea ecx [ esi + 0x68 ]
push ecx
call edi
lea edx [ esi + 0x78 ]
push edx
call edi
lea eax [ esi + 0x88 ]
push eax
call edi
lea ecx [ esi + 0x98 ]
push ecx
call edi
lea edx [ esi + 0x58 ]
push edx
call edi
lea eax [ esi + 0xa8 ]
push eax
call edi
lea ecx [ esi + 0xb8 ]
push ecx
call edi
lea edx [ esi + 0xc8 ]
push edx
call edi
cmp [ esi + 0x8 ] 0x0
pop edi
je r-xdata
mov [ rw-data ] 0x0
sub_432770
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
test [ ebp + 0x8 ] 0x2
je r-xdata
mov eax 0x8002000e
pop ebp
retn 0x10
mov eax 0x80020003
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
push ecx
push edx
call [ VariantCopy@IAT ]
xor ecx ecx
test eax eax
setns cl
lea eax [ ecx - 0x1 ]
and eax 0x80020009
pop ebp
retn 0x10
sub_4327b5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
push ebx
push esi
push edi
jne r-xdata
pop edi
pop esi
mov eax 0x80020006
pop ebx
pop ebp
retn 0x18
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov edi [ ebp + 0x1c ]
test edi edi
je r-xdata
xor esi esi
nop
mov eax [ esi * 8 + rw-data ]
mov [ edi ] eax
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x18
inc esi
cmp esi 0xd
jl r-xdata
mov ecx [ esi * 8 + rw-data ]
mov edx [ ebx ]
push ecx
push edx
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
sub_432810
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax 0x8002000b
pop esi
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax 0x80070057
pop esi
pop ebp
retn 0x10
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov [ edi ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ esi + 0x28 ]
mov [ edi ] eax
pop edi
xor eax eax
pop esi
pop ebp
retn 0x10
pop edi
mov eax 0x8002000b
pop esi
pop ebp
retn 0x10
sub_43288e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x4
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_4328ae
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax 0x80004005
pop esi
retn
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ esi + 0xc ]
push edx
push esi
push eax
mov eax [ ecx + 0x14 ]
call eax
push eax
test eax eax
jns r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
sub_4328ec
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
cdq
cmp ecx esi
jge r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
idiv esi
test edx edx
je r-xdata
idiv ecx
test edx edx
je r-xdata
mov eax edx
pop esi
pop ebp
retn 0xc
sub esi edx
mov edx esi
sub ecx edx
mov eax ecx
pop esi
pop ebp
retn 0xc
sub_43293f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push 0x0
push 0x0
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push esi
mov edi eax
push edi
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
pop esi
pop ebx
pop ebp
retn
sub_43299a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp esi 0xffffffff
jne r-xdata
push 0x0
push 0x0
push esi
push edi
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
call sub_413530
add esp 0x4
lea esi [ eax + 0x1 ]
xor ecx ecx
push ebx
lea edx [ ecx + 0x2 ]
mov eax esi
cmp edi esi
jl r-xdata
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn
mov eax edi
sub_432a10
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
call [ GetLocalTime@IAT ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_4111c1
add esp 0x4
cmp eax 0x4
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push esi
call sub_4111c1
add esp 0x4
cmp eax 0x2
jb r-xdata
push 0x4
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_412fba
lea edx [ ebp - 0xc ]
xor ecx ecx
push edx
mov [ ebp - 0x4 ] cx
call sub_413190
lea esi [ esi + ebx * 2 + 0x8 ]
push esi
mov [ edi ] ax
call sub_4111c1
add esp 0x14
cmp eax 0x2
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_412fba
lea edx [ ebp - 0xc ]
xor ecx ecx
push edx
mov [ ebp - 0x8 ] cx
call sub_413190
lea esi [ esi + ebx * 2 + 0x4 ]
push esi
mov [ edi + 0x8 ] ax
lea ebx [ ebx + ebx + 0x4 ]
call sub_4111c1
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_412fba
lea edx [ ebp - 0xc ]
xor ecx ecx
push edx
mov [ ebp - 0x8 ] cx
call sub_413190
lea esi [ esi + ebx * 2 + 0x4 ]
push esi
mov [ edi + 0x2 ] ax
call sub_4111c1
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_412fba
lea edx [ ebp - 0xc ]
xor ecx ecx
push edx
mov [ ebp - 0x8 ] cx
call sub_413190
add esi ebx
push esi
mov [ edi + 0xa ] ax
call sub_4111c1
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_412fba
lea edx [ ebp - 0xc ]
xor ecx ecx
push edx
mov [ ebp - 0x8 ] cx
call sub_413190
add esi 0x4
push esi
mov [ edi + 0x6 ] ax
call sub_4111c1
add esp 0x14
test eax eax
je r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_412fba
lea edx [ ebp - 0xc ]
xor ecx ecx
push edx
mov [ ebp - 0x8 ] cx
call sub_413190
add esp 0x10
mov [ edi + 0xc ] ax
xor eax eax
mov [ edi + 0xe ] ax
lea esi [ esi + ebx * 2 ]
sub_432b92
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax eax
jle r-xdata
pop ebp
retn
push esi
mov edx eax
mov esi eax
sar edx 0x10
and esi 0xff
shl esi 0x10
and edx 0xff
or edx esi
and eax 0xff00
or edx eax
mov [ ecx ] edx
pop esi
sub_432bc3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x8
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
lea ecx [ eax - 0x1 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
cmp ecx 0x7
ja r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
push ebx
lea ebx [ edi + 0x1 ]
mov [ ebp - 0x4 ] edi
cmp eax edi
jle r-xdata
pop ebx
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edx [ ebp + 0x8 ]
movzx eax [ edi + edx ]
mov ecx [ ebp - 0x4 ]
push ecx
cdq
push ebx
push edx
push eax
call sub_420460
add [ esi ] eax
adc [ esi + 0x4 ] edx
mov edx [ ebp - 0x4 ]
shld edx ebx 0x8
inc edi
shl ebx 0x8
mov [ ebp - 0x4 ] edx
cmp edi [ ebp + 0xc ]
jl r-xdata
sub_432c30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push ebx
call sub_4111c1
add esp 0x4
dec eax
mov [ esi ] 0x0
mov edx 0x1
xor edi edi
cmp eax 0xffffffff
je r-xdata
movzx ecx [ ebx + eax * 2 ]
cmp ecx 0x30
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x2 ]
cmp eax 0x78
je r-xdata
cmp ecx 0x41
jb r-xdata
cmp ecx 0x39
ja r-xdata
cmp [ ebx ] 0x30
jne r-xdata
cmp eax 0x58
jne r-xdata
cmp ecx 0x61
jb r-xdata
cmp ecx 0x46
ja r-xdata
add ecx 0xffffffd0
jmp r-xdata
pop edi
mov [ esi ] 0x0
pop esi
xor al al
pop ebx
pop ebp
retn
cmp ecx 0x66
ja r-xdata
add ecx 0xffffffc9
jmp r-xdata
imul ecx edx
add [ esi ] ecx
inc edi
dec eax
shl edx 0x4
cmp edi 0x8
jl r-xdata
add ecx 0xffffffa9
test eax eax
js r-xdata
sub_432cc2
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push eax
call sub_4111c1
xor edx edx
xor ecx ecx
add esp 0x4
lea edi [ eax - 0x1 ]
mov [ esi ] edx
mov [ esi + 0x4 ] edx
lea ebx [ edx + 0x1 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] edx
cmp [ ebp + 0x10 ] edx
jg r-xdata
cmp edi edx
jl r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax + edi * 2 ]
cmp eax 0x30
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov [ esi + 0x4 ] edx
mov [ esi ] edx
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x41
jb r-xdata
cmp eax 0x39
ja r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
lea eax [ eax - 0x30 ]
jmp r-xdata
cmp eax 0x66
ja r-xdata
lea eax [ eax - 0x37 ]
jmp r-xdata
push ecx
cdq
push ebx
push edx
push eax
call sub_420460
add [ esi ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
adc [ esi + 0x4 ] edx
shld ecx ebx 0x4
inc eax
dec edi
shl ebx 0x4
xor edx edx
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] eax
cmp eax [ ebp + 0x10 ]
jl r-xdata
lea eax [ eax - 0x57 ]
mov ecx [ ebp - 0x4 ]
jmp r-xdata
sub_432d76
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push edi
push ebx
call sub_4111c1
mov edi eax
cdq
sub eax edx
sar eax 0x1
add eax eax
add esp 0x4
cmp edi eax
je r-xdata
push esi
xor esi esi
test edi edi
jle r-xdata
pop edi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ax [ ebx + esi * 2 ]
mov cx [ ebx + esi * 2 + 0x2 ]
mov [ ebp - 0x8 ] ax
push 0x8
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x6 ] cx
push eax
lea ecx [ ebp - 0x8 ]
xor edx edx
push ecx
mov [ ebp - 0x4 ] dx
call sub_432cc2
add esp 0xc
test al al
je r-xdata
pop esi
pop edi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov eax esi
cdq
sub eax edx
mov dl [ ebp - 0x10 ]
sar eax 0x1
add esi 0x2
mov [ eax + ecx ] dl
cmp esi edi
jl r-xdata
sub_432dfc
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov ecx 0x8
mov esi r--data
lea edi [ ebp - 0x24 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edi [ ebp + 0x10 ]
lea ecx [ edi - 0x1 ]
mov [ ebx ] 0x780030
test ecx ecx
js r-xdata
xor edx edx
mov [ ebx + edi * 4 + 0x4 ] dx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebx + ecx * 4 + 0x4 ]
mov edx eax
and edx 0x8000000f
jns r-xdata
add eax 0x100
mov dx [ ebp + edx * 2 - 0x24 ]
mov [ esi + 0x2 ] dx
cdq
and edx 0xf
add eax edx
sar eax 0x4
mov ax [ ebp + eax * 2 - 0x24 ]
mov [ esi ] ax
sub esi 0x4
dec ecx
jns r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov edx [ ebp + 0x8 ]
movzx eax [ ecx + edx ]
test eax eax
jns r-xdata
xor ecx ecx
mov [ ebx + edi * 4 + 0x4 ] cx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432e88
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov ecx 0x8
mov esi r--data
lea edi [ ebp - 0x24 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi [ ebp + 0x14 ]
lea ecx [ esi - 0x1 ]
test ecx ecx
js r-xdata
xor ecx ecx
or eax edx
pop edi
mov [ ebx + esi * 2 ] cx
pop esi
pop ebx
je r-xdata
lea ecx [ ecx ]
mov al 0x1
mov esp ebp
pop ebp
retn
xor al al
mov esp ebp
pop ebp
retn
mov edi eax
and edi 0xf
mov di [ ebp + edi * 2 - 0x24 ]
shrd eax edx 0x4
mov [ ebx + ecx * 2 ] di
shr edx 0x4
dec ecx
jns r-xdata
sub_432ee9
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0xb ] 0x0
test edi edi
jne r-xdata
mov eax [ esi ]
movzx ecx [ edi + eax * 2 ]
push ecx
call sub_413225
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
movzx eax [ edi + ecx * 2 ]
sub eax 0x2b
mov [ ebx ] 0x0
je r-xdata
jmp r-xdata
inc ecx
mov [ esi ] ecx
sub eax 0x2
jne r-xdata
inc [ esi ]
mov edx [ esi ]
movzx eax [ edi + edx * 2 ]
push eax
call sub_413225
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebx ]
imul ecx [ ebp - 0x4 ]
mov al [ ebp + 0xb ]
pop edi
pop esi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi edi
mov ecx [ esi ]
cmp [ edi + ecx * 2 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
movzx edx [ edi + eax * 2 ]
mov ecx [ ebx ]
lea ecx [ ecx + ecx * 4 ]
inc eax
cmp [ edi + eax * 2 ] 0x0
lea edx [ edx + ecx * 2 - 0x30 ]
mov [ ebx ] edx
mov [ ebp + 0xb ] 0x1
mov [ esi ] eax
jne r-xdata
mov edx [ esi ]
movzx eax [ edi + edx * 2 ]
push eax
call sub_4137d3
add esp 0x4
test eax eax
je r-xdata
sub_432fad
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub esp 0x10
cmp eax 0x80000000
jne r-xdata
cmp ecx 0x80000000
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
add eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
add ecx [ ebp + 0x14 ]
push 0x0
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
call [ MonitorFromRect@IAT ]
mov esp ebp
pop ebp
retn
xor ecx ecx
sub_432fee
push ebx
push esi
push 0x8
push 0x0
push 0x0
xor bl bl
call [ OpenSCManagerW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
mov al bl
pop ebx
retn
push esi
call [ LockServiceDatabase@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x41f
jne r-xdata
push eax
call [ UnlockServiceDatabase@IAT ]
push esi
mov bl 0x1
call [ CloseServiceHandle@IAT ]
pop esi
mov al bl
pop ebx
retn
push esi
call [ CloseServiceHandle@IAT ]
mov bl 0x1
sub_43303f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jns r-xdata
cmp ecx 0x1
jne r-xdata
or eax 0xffffffff
sub eax ecx
pop ebp
retn
neg ecx
mov eax ecx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_43305f
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x10 ]
push esi
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_41329b
mov ecx [ ebp + 0x14 ]
push ecx
lea edx [ ebp - 0x18 ]
push r--data
push edx
call sub_41329b
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call sub_4114ab
add esp 0x20
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
push 0xe
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ FindResourceW@IAT ]
test eax eax
jne r-xdata
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push ebx
push edi
push eax
call [ LockResource@IAT ]
xor edx edx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x10 ] 0x0
cmp dx [ eax + 0x4 ]
jae r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x10
lea ebx [ eax + 0x6 ]
lea ebx [ ebx ]
pop edi
pop ebx
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
push edi
push esi
call [ LoadResource@IAT ]
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x14 ]
push ecx
mov edi eax
call [ LockResource@IAT ]
movzx edx [ ebx ]
mov ecx [ rw-data ]
cmp edx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
movzx edx [ ecx + 0x4 ]
inc eax
add ebx 0xe
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
movzx edx [ ebx + 0x1 ]
cmp edx [ rw-data ]
jne r-xdata
movzx eax [ ebx + 0xc ]
push 0x3
push eax
push esi
call [ FindResourceW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x10
movzx edx [ ebx + 0x6 ]
cmp edx [ rw-data ]
je r-xdata
mov edx [ rw-data ]
push 0x0
push edx
push ecx
push 0x30000
push 0x1
push edi
push eax
call [ CreateIconFromResourceEx@IAT ]
mov [ rw-data ] eax
sub_4331a2
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
jne r-xdata
cmp esi 0xf
jae r-xdata
push 0x0
call [ Sleep@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ Sleep@IAT ]
mov edi [ QueryPerformanceCounter@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call edi
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
call [ QueryPerformanceFrequency@IAT ]
push 0x0
call [ Sleep@IAT ]
lea edx [ ebp - 0x10 ]
push edx
call edi
fnstcw [ ebp + 0xa ]
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
sbb ecx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
fild [ ebp - 0x20 ]
movzx eax [ ebp + 0xa ]
fild [ ebp - 0x28 ]
or eax 0xc00
mov [ ebp - 0x4 ] eax
fdivp st1
fmul [ r--data ]
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
fldcw [ ebp + 0xa ]
cmp edx esi
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_433244
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
lea eax [ esi - 0x1 ]
push eax
push ecx
push edi
call sub_412fba
add esp 0xc
xor edx edx
mov [ edi + esi * 2 - 0x2 ] dx
sub_43326f
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp ecx esi
jne r-xdata
jge r-xdata
mov edx [ ebp + 0x1c ]
cmp [ edx ] edi
jne r-xdata
cmp ecx esi
jle r-xdata
mov eax esi
sub eax ecx
cdq
idiv ebx
test eax eax
je r-xdata
cmp ecx esi
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
cmp ecx edi
jge r-xdata
mov eax ecx
sub eax esi
cdq
idiv ebx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
jle r-xdata
mov eax edi
sub eax ecx
cdq
idiv ebx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
add ecx eax
cmp ecx esi
jg r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
mov eax ecx
sub eax edi
cdq
idiv ebx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
sub ecx eax
cmp ecx esi
jge r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ecx ] edi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
add ecx eax
cmp ecx edi
jle r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] edi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
sub ecx eax
cmp ecx edi
jge r-xdata
sub_43333c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x78
push eax
push eax
push 0x800
call [ mouse_event@IAT ]
mov al 0x1
pop esi
pop ebp
retn
xor al al
pop esi
pop ebp
retn
push eax
push 0xffffff88
push eax
push eax
push 0x800
call [ mouse_event@IAT ]
mov al 0x1
pop esi
pop ebp
retn
sub_433396
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1388
push 0x2
push 0x0
push 0x0
push 0x0
push ecx
call [ SendMessageTimeoutW@IAT ]
test eax eax
sete al
mov esp ebp
pop ebp
retn
sub_4333be
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
push ecx
push r--data
push 0x0
call [ LookupPrivilegeValueW@IAT ]
mov eax [ ebp - 0x4 ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push 0x0
push eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
cmp ebx 0x20
je r-xdata
mov eax 0x1
push 0x0
push eax
call [ SetSystemPowerState@IAT ]
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x40
je r-xdata
xor eax eax
push eax
push eax
call [ SetSystemPowerState@IAT ]
pop ebx
mov esp ebp
pop ebp
retn
test bl 0xb
jne r-xdata
xor ecx ecx
test bl 0x14
je r-xdata
push 0x0
push ebx
call [ ExitWindowsEx@IAT ]
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
test bl 0x2
je r-xdata
mov ecx 0x1
mov edx [ ebp + 0xc ]
push edx
push eax
push ecx
push 0x0
push 0x0
push 0x0
call [ InitiateSystemShutdownExW@IAT ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_433493
push ebp
mov ebp esp
sub esp 0x298
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x298 ]
push eax
push 0x101
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
jne r-xdata
push r--data
push edi
call sub_411567
add esp 0x8
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x100
lea ecx [ ebp - 0x108 ]
push ecx
call [ Ordinal_WSOCK32_57@IAT ]
lea edx [ ebp - 0x108 ]
push edx
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
xor edx edx
cmp [ eax ] edx
je r-xdata
cmp esi edx
jle r-xdata
mov ecx eax
lea ecx [ ecx ]
mov eax [ eax + esi * 4 - 0x4 ]
push 0x4
push eax
lea ecx [ ebp - 0x4 ]
push ecx
call sub_410e60
mov edx [ ebp - 0x4 ]
add esp 0xc
push edx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call sub_413650
lea ecx [ ebp - 0x108 ]
push 0xffffffff
push ecx
call sub_43299a
mov esi eax
push esi
push edi
call sub_411567
push esi
call sub_4111dc
add esp 0x1c
call [ Ordinal_WSOCK32_116@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_411567
add esp 0x8
call [ Ordinal_WSOCK32_116@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
add ecx 0x4
inc edx
cmp [ ecx ] 0x0
jne r-xdata
sub_433584
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4111c1
add esp 0x4
cmp eax 0x7fff
jae r-xdata
xor edx edx
mov [ esi + eax * 2 ] dx
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
lea ebx [ ebx ]
xor ecx ecx
mov [ esi + eax * 2 ] cx
pop esi
pop ebp
retn
mov [ esi + eax * 2 ] cx
inc eax
add edx 0x2
cmp eax 0x7fff
jb r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
sub_4335cd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x20c
push 0x104
push eax
lea ecx [ ebp - 0x20c ]
push ecx
call sub_433244
lea edx [ ebp - 0x20c ]
push edx
call sub_4111c1
add esp 0x10
test eax eax
je r-xdata
lea edx [ ebp - 0x20c ]
push edx
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp + eax * 2 - 0x20e ]
jne r-xdata
test al 0x10
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
xor ecx ecx
mov [ eax ] cx
mov al 0x1
mov esp ebp
pop ebp
retn
xor al al
mov esp ebp
pop ebp
retn
cmp eax 0x3
jne r-xdata
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
push esi
push edi
lea edi [ ebp - 0x20c ]
call sub_410160
mov esi eax
push 0x5c
push esi
call sub_413e8a
add esp 0x8
test eax eax
jne r-xdata
push ebx
xor ecx ecx
push esi
mov [ eax ] cx
call sub_4335cd
push esi
mov bl al
call sub_4111dc
add esp 0x8
test bl bl
je r-xdata
push esi
call sub_4111dc
add esp 0x4
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
mov al bl
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea edx [ ebp - 0x20c ]
push edx
call [ CreateDirectoryW@IAT ]
test eax eax
setne bl
sub_4336c5
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
push 0x2a
push eax
xor edi edi
xor esi esi
xor ebx ebx
call sub_413e1f
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
push r--data
push edx
call sub_413e46
add esp 0x8
pop edi
pop esi
test bl bl
pop ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax [ ecx ]
cmp eax 0x2a
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
push eax
push ecx
call sub_411567
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test ax ax
je r-xdata
lea ebx [ ebx ]
cmp [ ecx + edi * 2 + 0x2 ] 0x0
lea eax [ ecx + edi * 2 + 0x2 ]
je r-xdata
lea ecx [ ecx ]
mov edx [ ebp + 0x14 ]
inc edi
mov [ edx + esi * 2 ] ax
movzx eax [ ecx + edi * 2 ]
inc esi
cmp eax 0x2a
jne r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ecx + esi * 2 ] ax
mov bl 0x1
movzx ecx [ eax ]
cmp ecx 0x2a
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + esi * 2 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax + ebx * 2 + 0x2 ]
inc ebx
inc esi
test ax ax
jne r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + esi * 2 ] cx
inc esi
sub_433784
push ebp
mov ebp esp
mov eax 0x1060
call sub_422240
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x18 ]
push 0x2a
push esi
call sub_413e1f
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x1060 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0xc48 ]
push edx
lea eax [ ebp - 0x830 ]
push eax
push ecx
call sub_413a0e
lea edx [ ebp - 0x624 ]
push edx
lea eax [ ebp - 0xe54 ]
push eax
lea ecx [ ebp - 0xc48 ]
push ecx
lea edx [ ebp - 0x830 ]
push edx
push esi
call sub_413a0e
mov esi 0x2e
add esp 0x28
cmp [ ebp - 0x20c ] si
jne r-xdata
push esi
push edi
call sub_411567
add esp 0x8
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x624 ] si
jne r-xdata
lea eax [ ebp - 0x20a ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
call sub_411567
add esp 0x8
lea ecx [ ebp - 0x830 ]
push ecx
push edi
call sub_411567
lea edx [ ebp - 0xc48 ]
push edx
push edi
call sub_411536
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0xa3c ]
push eax
lea ecx [ ebp - 0x624 ]
push ecx
push edx
lea eax [ ebp - 0x20c ]
push eax
call sub_4336c5
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x418 ]
push ecx
lea edx [ ebp - 0xe54 ]
push edx
push eax
lea ecx [ ebp - 0x1060 ]
push ecx
call sub_4336c5
add esp 0x30
cmp [ ebp - 0xa3c ] 0x0
je r-xdata
lea edx [ ebp - 0x622 ]
push edx
lea eax [ ebp - 0x624 ]
push eax
call sub_411567
add esp 0x8
cmp [ ebp - 0x20c ] 0x0
je r-xdata
lea edx [ ebp - 0x418 ]
push r--data
push edx
call sub_411536
lea eax [ ebp - 0xa3c ]
jmp r-xdata
lea edx [ ebp - 0x418 ]
push edx
push edi
call sub_411536
add esp 0x8
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x418 ]
push r--data
push edx
call sub_411536
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x418 ]
push ecx
call sub_411536
add esp 0x10
sub_433908
push ebp
mov ebp esp
sub esp 0x820
lea eax [ ebp - 0x214 ]
push eax
lea ecx [ ebp - 0x61c ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x820 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_413a0e
lea edx [ ebp - 0x214 ]
push edx
lea eax [ ebp - 0x61c ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x418 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_413a0e
add esp 0x28
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_4114ab
test eax eax
setne al
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x418 ]
push ecx
lea edx [ ebp - 0x820 ]
push edx
call sub_4114ab
test eax eax
setne al
mov esp ebp
pop ebp
retn
sub_433998
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
xor al al
pop ebp
retn
test al 0x10
je r-xdata
mov al 0x1
pop ebp
retn
sub_4339b6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x8 ]
push eax
push esi
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov eax [ esp + 0x8 ]
or eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_433a13
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ GetFileVersionInfoSizeW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
push esi
call sub_4115d7
mov edx [ ebp + 0x8 ]
add esp 0x4
mov ebx eax
push ebx
push esi
push 0x0
push edx
call [ GetFileVersionInfoW@IAT ]
push edi
call sub_4111c1
xor ecx ecx
add eax 0x1a
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov esi eax
push r--data
push esi
call sub_411567
push r--data
push edi
call sub_41313c
add esp 0x18
test eax eax
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_411536
push r--data
push edi
call sub_4134bd
add esp 0x10
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
push esi
push ebx
call [ VerQueryValueW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
push 0x8
lea eax [ esi + 0x20 ]
push eax
push edi
call sub_412fba
xor ecx ecx
push ebx
mov [ edi + 0x10 ] cx
call sub_4111dc
push esi
call sub_4111dc
add esp 0x14
pop ebx
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
push edi
push esi
call sub_411536
add esp 0x8
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push r--data
push ebx
call [ VerQueryValueW@IAT ]
test eax eax
je r-xdata
push ebx
call sub_4111dc
push esi
call sub_4111dc
add esp 0x8
pop ebx
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_411536
add esp 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push 0x4
lea ecx [ esi + 0x20 ]
push ecx
push 0x0
push eax
mov [ ebp - 0xc ] eax
call sub_432e88
mov eax [ ebp - 0xc ]
push 0x4
lea edx [ esi + 0x28 ]
push edx
shr eax 0x10
push 0x0
push eax
call sub_432e88
add esp 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push 0x200
push eax
push edi
call sub_412fba
add esp 0xc
xor ecx ecx
mov [ edi + 0x400 ] cx
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
movzx edx cx
push edx
mov edx [ ebp + 0xc ]
shr ecx 0x10
push ecx
movzx ecx ax
push ecx
shr eax 0x10
push eax
push r--data
push edx
call sub_41329b
add esp 0x18
jmp r-xdata
push r--data
push esi
call sub_411536
push edi
push esi
call sub_411536
add esp 0x10
jmp r-xdata
push ebx
call sub_4111dc
push esi
call sub_4111dc
add esp 0x8
pop ebx
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_433c08
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x2000080
push 0x3
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
test ebx ebx
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn
push 0x0
cmp ebx 0x1
jne r-xdata
push edi
push ebx
jmp r-xdata
push edi
push 0x0
push edi
jmp r-xdata
push 0x0
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
sub_433c6a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor edx edx
cmp [ ecx ] ax
je r-xdata
lea eax [ edx + eax + 0x1 ]
pop ebp
retn
push esi
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
inc edx
mov si [ ecx + eax * 2 ]
inc eax
cmp si 0xa
jne r-xdata
pop esi
sub_433c94
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
xor ecx ecx
mov [ edx + eax * 2 ] cx
pop ebp
retn
push esi
mov [ edx + eax * 2 ] si
inc eax
mov esi 0xd
mov [ edx + eax * 2 ] si
mov si [ ecx ]
mov [ edx + eax * 2 + 0x2 ] si
add eax 0x2
jmp r-xdata
movzx esi [ ecx ]
cmp esi 0xa
jne r-xdata
pop esi
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
sub_433cda
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx ] ax
je r-xdata
xor ecx ecx
mov [ edx + eax * 2 ] cx
pop ebp
retn
mov ecx edx
push esi
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
mov [ edx + eax * 2 ] si
inc eax
movzx esi [ ecx ]
cmp esi 0xd
je r-xdata
pop esi
sub_433d09
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x100
lea eax [ ebp - 0x200 ]
push eax
push esi
mov edi 0x1
call [ GetClassNameW@IAT ]
lea ecx [ ebp - 0x200 ]
push r--data
push ecx
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
mov [ rw-data ] esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_433d5f
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] si
je r-xdata
push edi
call sub_41319b
add esp 0x4
pop edi
pop esi
pop ebp
retn
mov eax edi
pop edi
xor eax eax
pop esi
pop ebp
retn
inc esi
cmp [ edi + esi * 2 ] 0x0
lea eax [ edi + esi * 2 ]
jne r-xdata
movzx eax [ eax ]
push eax
call sub_4131fc
add esp 0x4
test eax eax
je r-xdata
sub_433d9e
push ebp
mov ebp esp
mov eax 0x102c
call sub_422240
lea eax [ ebp - 0x4 ]
push eax
push 0x800
lea ecx [ ebp - 0x102c ]
push ecx
call [ EnumProcesses@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push edi
mov edi [ ebp - 0x4 ]
push eax
shr edi 0x2
mov [ edx ] 0x0
call sub_433d5f
add esp 0x4
xor ebx ebx
mov [ ebp - 0xc ] eax
test edi edi
je r-xdata
xor al al
mov esp ebp
pop ebp
retn
pop edi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jne r-xdata
pop esi
mov edx [ ebp + ebx * 4 - 0x102c ]
push edx
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push esi
call [ EnumProcessModules@IAT ]
mov eax [ ebp - 0x8 ]
push 0x104
lea edx [ ebp - 0x424 ]
push edx
push eax
push esi
call [ GetModuleBaseNameW@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
inc ebx
cmp ebx edi
jb r-xdata
lea ecx [ ebp - 0x628 ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
lea eax [ ebp - 0x82c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x424 ]
push edx
call sub_413a0e
lea eax [ ebp - 0x628 ]
push eax
lea ecx [ ebp - 0x218 ]
push ecx
call sub_411536
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x218 ]
push eax
call sub_4114ab
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + ebx * 4 - 0x102c ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp + ebx * 4 - 0x102c ]
cmp ecx eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] eax
sub_433ee0
push ebp
mov ebp esp
sub esp 0x840
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x0
push 0x2
mov [ ebp - 0x234 ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
lea eax [ ebp - 0x234 ]
push eax
push edi
call [ Process32FirstW@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
mov [ esi ] 0x0
call sub_433d5f
add esp 0x4
cmp [ esi ] 0x0
mov ebx eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
lea eax [ ebp - 0x63c ]
push eax
lea ecx [ ebp - 0x438 ]
push ecx
lea edx [ ebp - 0x840 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
call sub_413a0e
lea edx [ ebp - 0x63c ]
push edx
lea eax [ ebp - 0x438 ]
push eax
call sub_411536
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x438 ]
push edx
call sub_4114ab
add esp 0x24
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x22c ]
cmp ebx eax
jne r-xdata
mov [ esi ] 0x1
lea edx [ ebp - 0x234 ]
push edx
push edi
call [ Process32NextW@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] eax
sub_433fce
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x10
push esi
call [ PostMessageW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push 0x1f4
push 0x2
push 0x0
push 0x0
push 0x10
push esi
call [ SendMessageTimeoutW@IAT ]
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call [ GetWindowThreadProcessId@IAT ]
mov edx [ ebp - 0x4 ]
push edx
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_434034
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x408
push esi
mov esi [ GetModuleHandleW@IAT ]
push edi
push 0x100
lea eax [ ebp - 0x204 ]
push eax
push ecx
push 0x0
call esi
mov edi [ LoadStringW@IAT ]
push eax
call edi
push 0x100
lea edx [ ebp - 0x408 ]
push edx
push 0x1389
push 0x0
call esi
push eax
call edi
cmp [ ebp + 0xc ] 0x0
pop edi
pop esi
lea eax [ ebp - 0x408 ]
je r-xdata
push 0x11010
lea edx [ ebp - 0x204 ]
push edx
push eax
push 0x0
call [ MessageBoxW@IAT ]
mov esp ebp
pop ebp
retn
push r--data
push r--data
push eax
push 0x0
lea ecx [ ebp - 0x204 ]
push ecx
push r--data
call sub_413abe
mov esp ebp
pop ebp
retn
sub_4340f8
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x2c ]
dec eax
je r-xdata
mov eax 0x20
pop ebp
retn 0x4
dec eax
je r-xdata
mov eax 0x40
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov eax [ ecx + 0x30 ]
neg eax
sbb eax eax
and eax 0xffffff80
add eax 0x100
pop ebp
retn 0x4
xor eax eax
pop ebp
retn 0x4
sub_434137
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x8
call sub_4115d7
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
add esp 0x4
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
cmp [ esi + 0x4 ] 0x0
je r-xdata
inc [ esi ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] eax
inc [ esi ]
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x8
sub_434179
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ eax ] 0xffffffff
test ecx ecx
jns r-xdata
mov [ eax ] ecx
mov eax ecx
cmp eax 0x207
jge r-xdata
mov ecx [ edx + 0x9d4 ]
cmp ecx 0xffffffff
jne r-xdata
xor al al
pop ebp
retn 0xc
cmp [ edx + eax * 4 + 0x1b4 ] 0x0
setne al
pop ebp
retn 0xc
sub_4341ba
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ edi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ edi ] 0x0
je r-xdata
push eax
call [ DestroyIcon@IAT ]
sub_4341e6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
mov [ edi ] al
mov [ ebp + 0x14 ] eax
cmp [ esi ] ax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1b0 ]
pop edi
pop esi
pop ebp
retn 0x10
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push 0x7f04
push eax
call [ LoadIconW@IAT ]
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push 0x7f02
push eax
call [ LoadIconW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push 0x7f01
push eax
call [ LoadIconW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push edx
push esi
call [ ExtractIconExW@IAT ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push 0x7f03
push eax
call [ LoadIconW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
mov [ edi ] 0x1
pop edi
pop esi
pop ebp
retn 0x10
sub_4342dd
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
xor eax eax
lea ecx [ edx + 0x4 ]
nop
cmp eax 0x10
je r-xdata
inc eax
add ecx 0x8
cmp eax 0x10
jl r-xdata
pop esi
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edx [ edx + eax * 8 ]
push 0x0
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push esi
push edx
call [ ReadProcessMemory@IAT ]
cmp [ ecx ] esi
je r-xdata
sub_434319
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
lea ecx [ edx + 0x4 ]
nop
cmp eax 0x10
je r-xdata
inc eax
add ecx 0x8
cmp eax 0x10
jl r-xdata
pop esi
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edx [ edx + eax * 8 ]
push 0x0
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push esi
push edx
call [ WriteProcessMemory@IAT ]
cmp [ ecx ] esi
je r-xdata
sub_434355
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea eax [ edi + 0x4 ]
lea ecx [ ecx ]
mov edx [ edi + esi * 8 + 0x4 ]
mov eax [ edi + esi * 8 ]
push ebx
push 0x8000
lea ebx [ edi + esi * 8 + 0x4 ]
push 0x0
push edx
push eax
call [ VirtualFreeEx@IAT ]
mov ecx [ edi + esi * 8 ]
push ecx
call [ CloseHandle@IAT ]
mov [ ebx ] 0x0
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_4343ad
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea eax [ edi + 0x4 ]
lea ecx [ ecx ]
cmp esi 0x10
jne r-xdata
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
call [ GetWindowThreadProcessId@IAT ]
mov edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x438
call [ OpenProcess@IAT ]
mov ecx [ ebp + 0xc ]
push 0x4
push 0x1000
push ecx
push 0x0
push eax
mov [ edi + esi * 8 ] eax
call [ VirtualAllocEx@IAT ]
mov [ edi + esi * 8 + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
cmp [ eax ] 0x0
je r-xdata
sub_434418
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov edi [ ebp + 0x8 ]
mov esi eax
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push esi
push r--data
call [ FindWindowW@IAT ]
mov esi eax
push edi
mov [ ebp - 0x8 ] 0x0
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
push 0x9
push edi
call [ ShowWindow@IAT ]
pop edi
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
push eax
push esi
mov esi [ GetWindowThreadProcessId@IAT ]
call esi
mov edi eax
call [ GetCurrentThreadId@IAT ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call esi
mov esi [ AttachThreadInput@IAT ]
push 0x1
push eax
push ebx
mov [ ebp - 0x4 ] eax
call esi
push 0x1
push edi
push ebx
call esi
mov ecx [ ebp - 0x4 ]
push 0x1
push ecx
push edi
call esi
mov edx [ ebp + 0x8 ]
push edx
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x3
push eax
push eax
push eax
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
push 0x0
push 0x2
push 0x0
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
push 0x0
push 0x0
push 0x0
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
push 0x0
push 0x2
push 0x0
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
mov eax [ ebp + 0x8 ]
push eax
call [ SetForegroundWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
push 0x0
push ecx
push ebx
call esi
push 0x0
push edi
push ebx
call esi
mov edx [ ebp - 0x4 ]
push 0x0
push edx
push edi
call esi
mov eax [ ebp - 0x8 ]
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
sub_434582
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
jne r-xdata
push edi
cmp esi 0xf
jae r-xdata
push 0x0
call [ Sleep@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ Sleep@IAT ]
pop edi
mov edi [ QueryPerformanceCounter@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call edi
test eax eax
je r-xdata
mov [ ebp + 0x8 ] esi
fild [ ebp + 0x8 ]
test esi esi
jns r-xdata
fstp [ ebp - 0x28 ]
lea esp [ esp ]
fadd [ r--data ]
push 0x0
call [ Sleep@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
call edi
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sbb eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
call sub_40dbd0
fdivr [ ebp - 0x20 ]
fcomp [ ebp - 0x28 ]
fnstsw ax
test ah 0x5
jpo r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_434621
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call [ GetCurrentThreadId@IAT ]
mov esi eax
cmp [ ebp + 0x10 ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x9 ] bl
je r-xdata
cmp edi ebx
mov edi [ AttachThreadInput@IAT ]
je r-xdata
push ebx
call [ GetForegroundWindow@IAT ]
push eax
call [ GetWindowThreadProcessId@IAT ]
mov ebx [ AttachThreadInput@IAT ]
push 0x1
push eax
push esi
mov [ rw-data ] eax
call ebx
mov [ ebp + 0x10 ] eax
test edi edi
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
push ebx
push ecx
push esi
call edi
mov eax [ rw-data ]
push ebx
push eax
push esi
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
je r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x4 ]
push ecx
push edi
call [ GetWindowThreadProcessId@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp ecx eax
je r-xdata
push ebx
push eax
push ecx
call edi
pop esi
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x1
push eax
push esi
call ebx
jmp r-xdata
push 0x1
push eax
push ecx
call ebx
mov [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp esi eax
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov edx [ ebp + 0x8 ]
pop esi
pop edi
mov [ edx + 0x20 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43471d
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x4
pop esi
je r-xdata
push 0x0
push eax
push ecx
push edx
call [ keybd_event@IAT ]
mov esp ebp
pop ebp
retn 0x10
movzx edx dl
mov [ ebp - 0x18 ] dx
push 0x1c
lea edx [ ebp - 0x1c ]
movzx ecx cl
mov [ ebp - 0x14 ] eax
xor eax eax
push edx
push 0x1
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x16 ] cx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ SendInput@IAT ]
mov esp ebp
pop ebp
retn 0x10
sub_43477c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x20 ] eax
je r-xdata
mov ecx [ ecx + 0x4 ]
cmp ecx eax
jge r-xdata
mov eax 0x2
push ecx
call sub_434582
pop ebp
retn 0x4
push eax
call sub_434582
pop ebp
retn 0x4
sub_4347a9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x20 ] eax
je r-xdata
mov ecx [ ecx ]
cmp ecx eax
jge r-xdata
mov eax 0x2
push ecx
call sub_434582
pop ebp
retn 0x4
push eax
call sub_434582
pop ebp
retn 0x4
sub_4347d5
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi bl
push edi
call [ GetKeyState@IAT ]
and al 0x1
mov [ ebp + 0xf ] al
cmp [ ebp + 0x10 ] al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
push 0x0
push edi
call [ MapVirtualKeyW@IAT ]
push eax
push ebx
push esi
call sub_43471d
push esi
call sub_43477c
push 0x2
push 0x0
push edi
call [ MapVirtualKeyW@IAT ]
push eax
push ebx
push esi
call sub_43471d
push esi
call sub_4347a9
mov al [ ebp + 0xf ]
sub_434831
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
pop ebp
retn 0x8
movzx edx [ ecx ]
mov [ eax ] dl
movzx edx [ ecx + 0x1 ]
mov [ eax + 0x1 ] dl
movzx edx [ ecx + 0x3 ]
mov [ eax + 0x3 ] dl
movzx edx [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
movzx edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] dl
mov cl [ ecx + 0x5 ]
mov [ eax + 0x5 ] cl
sub_4348aa
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x4 ]
pop ebp
retn 0x4
dec ecx
mov eax [ eax + 0xc ]
jne r-xdata
sub_4348de
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x4
cmp eax [ rw-data ]
jg r-xdata
test eax eax
jle r-xdata
mov eax [ ecx + eax * 4 - 0x4 ]
pop ebp
retn 0x4
sub_434908
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jge r-xdata
xor eax eax
pop ebp
retn 0x4
test eax eax
js r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
pop ebp
retn 0x4
sub_43492f
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x8 ]
pop ebp
retn 0x4
dec ecx
mov eax [ eax + 0xc ]
jne r-xdata
sub_434963
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push ecx
call sub_4111c1
push ebx
mov edi eax
call sub_4111c1
xor ecx ecx
lea eax [ eax + edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push ecx
push edi
call sub_411567
push ebx
push edi
call sub_411536
mov edx [ esi + 0xc ]
mov eax [ edx ]
push eax
call sub_4111dc
mov ecx [ esi + 0xc ]
add esp 0x20
mov [ ecx ] edi
pop edi
sub_4349d1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41324e
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn
push esi
call sub_413225
add esp 0x4
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
sub_434a13
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
sub_434a40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0xc ]
mov eax [ eax ]
cmp edx ecx
jae r-xdata
add eax ecx
pop ebp
retn 0x8
add eax edx
pop ebp
retn 0x8
sub_434a5e
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x7f
ja r-xdata
cmp al 0xdf
ja r-xdata
mov eax 0x1
pop ebp
retn 0x4
mov cl 0xef
cmp cl al
sbb eax eax
neg eax
add eax 0x3
pop ebp
retn 0x4
mov eax 0x2
pop ebp
retn 0x4
sub_434aa8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
js r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
push edx
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
push edx
call sub_4111dc
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
sub_434b02
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push eax
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
push ebx
mov ebx [ edi + 0x8 ]
push esi
xor esi esi
test ebx ebx
je r-xdata
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn 0xc
push 0xc
call sub_4115d7
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
mov [ edx ] eax
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_436299
jmp r-xdata
inc esi
add eax 0x4
cmp esi ebx
jb r-xdata
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
call eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ edx ] esi
pop esi
pop ebx
mov [ eax + 0x8 ] ecx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push ecx
call [ FreeLibrary@IAT ]
mov edx [ edi + 0x4 ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
push ecx
call sub_4111dc
mov edx [ edi + 0x4 ]
mov eax [ edx + esi * 4 ]
add esp 0x4
mov [ eax ] ebx
pop esi
lea eax [ ebx + 0x3 ]
pop ebx
pop edi
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ edi + 0x4 ]
mov eax [ ecx + esi * 4 ]
mov edx [ eax ]
mov eax [ edx ]
push r--data
push eax
call [ GetProcAddress@IAT ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx [ eax ]
cmp [ ecx ] 0x0
je r-xdata
sub_434c09
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor eax eax
push ebx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] eax
call [ lstrlenW@IAT ]
mov edi eax
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov esi eax
push ebx
push esi
call [ lstrcpyW@IAT ]
xor eax eax
lea ecx [ esi + edi * 2 - 0x2 ]
mov [ esi + edi * 2 ] ax
movzx eax [ ecx ]
cmp eax 0x2a
je r-xdata
xor edx edx
mov [ ecx ] dx
mov [ ebp + 0x8 ] 0x4000
cmp eax 0x5e
jne r-xdata
mov bx [ ebp + 0x8 ]
add bx [ edi * 2 + rw-data ]
mov edi 0x1
inc edi
cmp edi 0x24
jl r-xdata
xor edi edi
pop edi
pop esi
mov eax 0xffff
pop ebx
mov esp ebp
pop ebp
retn 0x4
pop edi
pop esi
mov ax bx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi * 4 + rw-data ]
push esi
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov bx [ ebp + 0x8 ]
mov edi [ ebp - 0x4 ]
jmp r-xdata
push esi
call sub_4111dc
add esp 0x4
test edi edi
je r-xdata
sub_434cc9
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov [ eax ] 0x4
call sub_434c09
mov ecx [ ebp + 0x10 ]
mov edx 0xffff
mov [ ecx ] ax
cmp ax dx
jne r-xdata
pop ebx
pop ebp
retn 0xc
push esi
push edi
push ebx
call [ lstrlenW@IAT ]
mov edi eax
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov esi eax
push ebx
push esi
call [ lstrcpyW@IAT ]
xor eax eax
mov [ esi + edi * 2 ] ax
xor edi edi
cmp [ esi ] ax
je r-xdata
push esi
call sub_4111dc
add esp 0x4
pop edi
pop esi
mov eax esi
lea ebx [ ebx ]
push r--data
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
inc edi
cmp [ esi + edi * 2 ] 0x0
lea eax [ esi + edi * 2 ]
jne r-xdata
xor eax eax
push esi
mov [ esi + edi * 2 ] ax
call sub_434c09
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov edx [ ebp + 0xc ]
mov [ edx ] 0x1
cmp [ eax ] 0x3a
je r-xdata
push esi
call sub_4111dc
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_434d99
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp [ edx ] cx
je r-xdata
pop ebp
retn 0x8
mov eax edx
push esi
cmp [ eax ] 0x2e
jne r-xdata
cmp [ eax ] 0x2c
jne r-xdata
inc ecx
cmp [ edx + ecx * 2 ] 0x0
lea eax [ edx + ecx * 2 ]
jne r-xdata
mov esi 0x2c
mov esi 0x2e
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop esi
mov [ eax ] si
sub_434dda
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
push ebx
push edi
lea edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edi [ eax + 0x28 ]
movzx ebx [ eax + 0x30 ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
cmp edi 0x3
je r-xdata
pop edi
pop ebx
cmp [ esi + 0x4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
test ebx ebx
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push edi
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
jne r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi ebx
jb r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x38 ]
call eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov edi [ eax + 0x28 ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
cmp edi 0x3
je r-xdata
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x8 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edi [ ebp - 0x4 ]
sub_434ec4
push ebp
mov ebp esp
mov cx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub esp 0x64
push ebx
push esi
xor esi esi
push edi
cmp cx 0x1f
jne r-xdata
cmp cx 0x1e
jne r-xdata
mov eax [ eax + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
cmp cx 0x8
jne r-xdata
mov edi [ eax + 0x8 ]
push 0x0
push 0x0
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
xor ecx ecx
mov ebx eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push ebx
mov esi eax
push esi
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push esi
call [ SysAllocString@IAT ]
push esi
mov edi eax
call sub_4111dc
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ecx
call [ SysAllocString@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx eax
cmp cx 0x48
jne r-xdata
mov esi [ eax + 0x8 ]
push esi
call [ SysAllocString@IAT ]
push esi
mov edi eax
call [ SysFreeString@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edx [ eax + 0xc ]
push 0x28
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x4 ] edx
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
call [ SysAllocString@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_434fd0
push ebp
mov ebp esp
mov cx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub esp 0x50
push esi
xor esi esi
cmp cx 0x1f
jne r-xdata
push edi
cmp cx 0x1e
jne r-xdata
mov eax [ eax + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
cmp cx 0x8
jne r-xdata
mov eax [ eax + 0x8 ]
mov edi [ eax ]
push ebx
push 0x0
push 0x0
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
xor ecx ecx
mov ebx eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push ebx
mov esi eax
push esi
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push esi
call [ SysAllocString@IAT ]
push esi
mov edi eax
call sub_4111dc
add esp 0x4
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push ecx
call [ SysAllocString@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
cmp cx 0x48
jne r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax ]
push esi
call [ SysAllocString@IAT ]
push esi
mov edi eax
call [ SysFreeString@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax + 0x8 ]
push 0x28
lea ecx [ ebp - 0x50 ]
push ecx
push eax
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
push edx
call [ SysAllocString@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4350c1
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x8
call sub_4115d7
mov ecx [ edi + 0xc ]
push 0x8
lea edx [ ebp - 0x8 ]
mov esi eax
mov eax [ edi + 0x8 ]
push edx
push esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
call sub_410e60
add esp 0x10
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4350fa
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x4
call sub_4115d7
add esp 0x4
cmp [ edi ] 0x9
mov esi eax
jne r-xdata
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi ] eax
cmp [ edi + 0x8 ] 0x0
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_43513e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x10
call sub_4115d7
add esp 0x4
mov esi eax
push esi
call [ VariantInit@IAT ]
push edi
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
sub_435175
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax + 0x8 ]
push edi
push esi
call [ SysStringLen@IAT ]
mov edi eax
mov eax 0x10000
cmp edi eax
jle r-xdata
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov ebx eax
test esi esi
je r-xdata
mov eax edi
xor eax eax
mov [ ebx + edi * 2 ] ax
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push esi
push ebx
call [ lstrcpyW@IAT ]
sub_4351cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
mov esi eax
mov eax 0x10000
cmp esi eax
jle r-xdata
inc eax
push eax
call sub_4115d7
add esp 0x4
push 0x0
push 0x0
inc esi
push esi
mov edi eax
push edi
push 0xffffffff
push ebx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
sub_435215
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x10
call sub_4115d7
mov esi eax
movzx eax [ edi ]
add esp 0x4
cmp eax 0x8
jne r-xdata
test eax 0x2000
je r-xdata
mov eax [ edi + 0x8 ]
push esi
push eax
call [ CLSIDFromString@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
pop edi
mov [ esi + 0xc ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
mov edi [ edi + 0x8 ]
lea ecx [ ebp + 0x8 ]
push ecx
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
push esi
call sub_4111dc
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x73747263
jne r-xdata
push edi
call [ SafeArrayUnaccessData@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
mov [ esi ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
sub_4352c2
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x20 ]
mov eax 0x2013
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx 0x4000
test [ eax ] cx
je r-xdata
mov ebx [ ebx + 0x8 ]
lea ecx [ ebp + 0x20 ]
push ecx
push ebx
mov [ ebp + 0x8 ] ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov edx 0x13
push edx
mov [ eax ] dx
mov eax [ esi ]
push 0x0
push ebx
add eax eax
push ebx
mov [ edi + eax * 8 ] dx
call [ VariantChangeType@IAT ]
mov edx [ esi ]
mov eax [ ebx + 0x8 ]
add edx edx
mov [ edi + edx * 8 + 0x8 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov edx [ ebp + 0x20 ]
cmp [ edx ] 0x73747263
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ SafeArrayUnaccessData@IAT ]
mov ebx [ ebp + 0xc ]
mov eax 0x4000
test [ ebx ] ax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
sub eax 0x2
je r-xdata
mov edx [ esi ]
shl edx 0x4
add edx edi
mov ecx 0x13
push edx
mov [ ebx ] cx
call [ VariantClear@IAT ]
mov eax [ esi ]
mov cx [ ebx ]
shl eax 0x4
add edi eax
mov [ edi ] cx
mov edx [ ebp + 0x20 ]
mov eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
push edx
mov [ edi + 0x8 ] eax
call [ SafeArrayUnaccessData@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
dec [ esi ]
mov [ ebp + 0xc ] 0x8
mov [ ebp + 0x10 ] eax
mov edi edi
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
mov ebx [ edx + eax ]
shl ecx 0x4
add ecx edi
push ecx
call [ VariantClear@IAT ]
mov eax [ esi ]
add [ ebp + 0xc ] 0x4
mov ecx eax
shl ecx 0x4
add ecx edi
mov edx 0x13
mov [ ecx ] dx
mov [ ecx + 0x8 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebx + eax * 2 ] dx
mov edx [ ebp + 0x1c ]
mov [ edx + eax * 4 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax * 4 ] 0x0
inc eax
dec [ ebp + 0x10 ]
mov [ esi ] eax
jne r-xdata
sub_435403
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_435215
push esi
mov edi eax
call [ VariantClear@IAT ]
mov eax 0x13
mov [ esi ] ax
mov [ esi + 0x8 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_43542d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4351cc
push esi
mov edi eax
call [ VariantClear@IAT ]
mov eax 0x1e
mov [ esi ] ax
mov [ esi + 0x8 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_435457
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_435175
push esi
mov edi eax
call [ VariantClear@IAT ]
mov eax 0x1f
mov [ esi ] ax
mov [ esi + 0x8 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_435481
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
push ebx
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
cmp di 0xc
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
movzx eax di
add eax 0xffffffe2
cmp eax 0x1
ja r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0xc
movzx eax [ ebx ]
cmp ax di
je r-xdata
mov edi 0x8
cmp eax 0x8
jne r-xdata
push edi
push 0x0
push esi
push esi
call [ VariantChangeType@IAT ]
cmp [ esi ] 0x8
mov edi eax
jne r-xdata
mov eax [ esi + 0x8 ]
push 0x0
push eax
call sub_434d99
xor eax eax
test edi edi
pop edi
pop esi
setns al
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x8 ]
push 0x1
push ecx
call sub_434d99
sub_43550b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
movzx eax bx
push esi
mov esi [ ebp + 0xc ]
add eax 0xfffffff8
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x40
ja r-xdata
push edi
push esi
call [ VariantCopyInd@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_4355bb ]
jmp [ eax * 4 + jump_table_4355b3 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp bx 0xc
jne r-xdata
push esi
call [ VariantClear@IAT ]
push ebx
mov ecx 0x8
push edi
mov [ esi ] cx
call sub_434fd0
mov [ esi + 0x8 ] eax
mov edi [ edi + 0x8 ]
movzx ebx [ edi ]
push esi
call [ VariantClear@IAT ]
lea eax [ ebx - 0x8 ]
cmp eax 0x40
ja r-xdata
mov [ esi ] bx
mov ecx [ edi + 0x8 ]
pop edi
mov [ esi + 0x8 ] ecx
pop esi
pop ebx
pop ebp
retn 0xc
movzx edx [ eax + lookup_table_435607 ]
jmp [ edx * 4 + jump_table_4355ff ]
push ebx
mov eax 0x8
push edi
mov [ esi ] ax
call sub_434ec4
pop edi
mov [ esi + 0x8 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
sub_435609
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ebp - 0x75 ] dl
in al dx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x18
mov edx [ ebp + 0x1c ]
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
pop ebp
retn 0x18
sub_435680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
mov edx [ ebp + 0x14 ]
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
pop ebp
retn 0x10
sub_4356b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0x8
sub_4356d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax 0x80004001
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0xc
sub_435703
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
add esi 0x20
push esi
call [ InterlockedIncrement@IAT ]
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov [ esi + 0x20 ] eax
pop esi
pop ebp
retn 0x4
sub_435732
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push edi
xor edi edi
cmp [ eax + 0x4 ] edi
jbe r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ esi + 0x8 ]
push ecx
call sub_4111dc
mov edx [ esi + 0xc ]
push edx
call sub_4111dc
mov eax [ esi + 0x10 ]
push eax
call sub_4111dc
mov ecx [ esi + 0x4 ]
push ecx
call sub_4111dc
add esp 0x10
pop edi
mov edi edi
pop esi
pop ebp
retn 0x4
mov esi [ esi + 0x14 ]
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
mov ecx [ esi + 0x8 ]
mov edx [ ecx + edi * 4 ]
push edx
call sub_4111dc
mov eax [ esi + 0x10 ]
inc edi
add esp 0x4
cmp edi [ eax + 0x4 ]
jb r-xdata
sub_4357b7
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xor esi esi
cmp [ ebp + 0xc ] 0x1
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x54 ]
push 0x1
push ecx
call [ GetDlgItem@IAT ]
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
mov edi [ MoveWindow@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x54 ]
push 0x3e9
push ecx
call [ GetDlgItem@IAT ]
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp ecx eax
jle r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
cmp esi ecx
jle r-xdata
mov ecx edx
mov edx eax
mov eax ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
push 0x3ea
push edx
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jle r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
cmp edx ecx
jle r-xdata
mov [ ebp - 0x10 ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
sub eax edx
mov edx eax
sub ecx esi
push 0x0
push ecx
push edx
mov eax 0xa
sub eax edx
cdq
sub eax edx
sub edi ecx
mov ecx eax
mov eax ebx
cdq
and edx 0x3
add eax edx
mov edx [ ebp + 0x10 ]
lea esi [ edi - 0xa ]
mov edi [ MoveWindow@IAT ]
sar ecx 0x1
sar eax 0x2
push esi
add ecx eax
push ecx
push edx
call edi
jmp r-xdata
mov [ ebp + 0x14 ] esi
mov esi ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x54 ]
push 0x1
push 0x0
push ecx
call [ InvalidateRect@IAT ]
push 0x0
add esi 0xfffffffb
push esi
add ebx 0xffffffec
push ebx
push 0xa
push 0xa
push eax
call edi
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp ecx eax
jle r-xdata
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
sub eax [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
push 0x0
push ecx
push eax
add eax 0xa
cdq
sub eax edx
mov ecx eax
lea eax [ ebx + ebx * 2 ]
cdq
and edx 0x3
add eax edx
mov edx [ ebp + 0x14 ]
sar ecx 0x1
sar eax 0x2
push esi
sub eax ecx
push eax
push edx
call edi
mov [ ebp - 0xc ] ecx
mov ecx edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x54 ]
push 0x2
push ecx
call [ GetDlgItem@IAT ]
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
sub eax ecx
push 0x0
push eax
mov ecx 0xfffffffb
sub ecx eax
mov eax [ ebp + 0x14 ]
lea edx [ ebx - 0x14 ]
push edx
add esi ecx
push esi
push 0xa
push eax
call edi
mov edx ecx
mov ecx eax
mov eax edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
sub_435976
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0xc ]
jle r-xdata
mov edx [ eax + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
pop ebp
retn
mov edx [ eax + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] ecx
sub_43599e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor dl dl
mov [ ebp + 0xc ] 0x0
test ecx ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ ecx + 0x88 ] 0x1d
jne r-xdata
pop ebp
retn 0x8
cmp [ eax + 0x18 ] 0x0
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
jne r-xdata
push esi
mov esi [ ecx + 0x78 ]
test esi esi
je r-xdata
mov edx [ ecx + 0x1c ]
push 0x0
push eax
call edx
pop ebp
retn 0x8
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov dl [ esi + 0x3c ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push eax
call edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop ebp
retn 0x8
cmp [ eax + 0x18 ] 0x0
jne r-xdata
test dl dl
jne r-xdata
pop esi
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push 0x0
push eax
call edx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
lea edx [ esi + 0x10 ]
push edx
mov edx [ esi + 0x8 ]
push edx
mov edx [ esi + 0x28 ]
push 0xffffffff
push edx
push 0x0
push 0xffffffff
push eax
mov eax [ ecx + 0x2c ]
call eax
sub_435a50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
pop edi
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
pop edi
pop esi
mov eax 0x80004002
pop ebx
pop ebp
retn 0xc
mov ecx [ edi + 0xc ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
sub_435b09
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
xor eax eax
cmp edx 0x3
jl r-xdata
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
push ebx
push esi
push edi
add ecx 0xc
lea esi [ edx - 0x2 ]
lea esp [ esp ]
add ecx 0x4
dec esi
jne r-xdata
mov edi [ edx + 0x4 ]
mov ebx [ ebp + 0x8 ]
cmp edi [ ebx + 0x4 ]
jne r-xdata
mov edx [ ecx ]
mov edx [ edx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
cmp [ edx + 0x88 ] 0x1d
jne r-xdata
cmp [ edx + 0x78 ] 0x0
je r-xdata
inc eax
sub_435b59
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x8 ] edi
mov eax [ esi ]
cmp eax edi
je r-xdata
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] edi
pop edi
pop esi
pop ebp
retn 0x4
push eax
call sub_4111dc
add esp 0x4
mov [ esi ] edi
sub_435bb6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x28 ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi + 0x30 ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi + 0x30 ]
pop edi
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0xc ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi + 0x34 ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
push r--data
push ebx
call sub_4323c5
add esp 0x8
test eax eax
jne r-xdata
mov edx [ edi + 0x2c ]
pop edi
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edi [ edi ]
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x80004002
pop ebx
pop ebp
retn 0xc
push esi
push ebx
push edi
call sub_435a50
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_435ce8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
sub_435d35
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax 0x80004003
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx ] edx
xor eax eax
pop ebp
retn 0x8
sub_435d6a
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
push edx
push eax
call [ MkParseDisplayName@IAT ]
pop ebp
retn 0x14
sub_435da2
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push eax
call edx
test eax eax
js r-xdata
lea esi [ edi + 0x8 ]
mov [ esi ] eax
jmp r-xdata
mov eax [ eax ]
mov [ eax + 0x18 ] 0x0
pop edi
mov eax 0x80004005
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
lea esi [ edi + 0x8 ]
push esi
push 0x0
push 0x0
push 0x0
push eax
call edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov edx [ edi + 0x4 ]
mov eax [ esi ]
mov edx [ edx + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
push 0x1
push eax
call edx
mov edx [ edi + 0x4 ]
mov eax [ esi ]
mov ecx [ eax ]
add edx 0x10
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov esi [ esi ]
mov ecx [ esi ]
mov edx [ ecx + 0x24 ]
push 0x1
push esi
call edx
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
pop edi
mov [ ecx + 0x18 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_435e6c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x8 ] 0x0
sub_435eb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop esi
pop ebp
retn 0x10
mov eax [ eax + 0x14 ]
push eax
call [ GetMenu@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x14 ]
mov eax [ eax + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push esi
push edx
push eax
push ecx
call [ OleSetMenuDescriptor@IAT ]
sub_435eec
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov edx [ edi + 0x4 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov eax [ edi + 0x4 ]
mov [ eax + 0x10 ] esi
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ edi + 0x4 ]
mov [ eax + 0x10 ] esi
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ edx + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_435f33
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push edx
call [ GetClientRect@IAT ]
sub_435f58
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
push edx
call [ GetClientRect@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
call [ CopyRect@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_435f99
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0xfffffd3b
jne r-xdata
cmp eax 0xfffffd2b
jne r-xdata
mov eax [ ebp + 0x20 ]
mov ecx 0xb
mov edx 0x1
mov [ eax ] cx
mov [ eax + 0x8 ] dx
xor eax eax
pop ebp
retn 0x24
cmp eax 0xffffea83
jne r-xdata
mov eax [ ebp + 0x20 ]
mov ecx 0x3
mov [ eax ] cx
mov [ eax + 0x8 ] 0x400
xor eax eax
pop ebp
retn 0x24
cmp eax 0xffffea82
jne r-xdata
mov eax [ ebp + 0x20 ]
xor ecx ecx
mov edx 0xb
mov [ eax ] dx
mov [ eax + 0x8 ] cx
xor eax eax
pop ebp
retn 0x24
mov eax 0x80020003
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov edx 0xb
mov ecx 0x1
mov [ eax ] dx
mov [ eax + 0x8 ] cx
xor eax eax
pop ebp
retn 0x24
sub_436045
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
movsx edx [ eax + 0x80 ]
mov [ ecx + 0x10 ] edx
movsx edx [ eax + 0x80 ]
movsx ecx [ eax + 0x84 ]
add ecx edx
mov edx [ esi + 0x4 ]
mov [ edx + 0x18 ] ecx
movsx ecx [ eax + 0x82 ]
mov edx [ esi + 0x4 ]
mov [ edx + 0x14 ] ecx
movsx edx [ eax + 0x82 ]
movsx ecx [ eax + 0x86 ]
mov eax [ esi + 0x4 ]
add ecx edx
mov [ eax + 0x1c ] ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push eax
call edx
test eax eax
js r-xdata
mov eax 0x8000ffff
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
add eax 0x20
push eax
mov eax [ edx + 0x48 ]
push 0x1
push ecx
call eax
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add edx 0x10
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0x8
sub_436108
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0x14 ]
push edi
mov edi [ CopyRect@IAT ]
add edx 0x10
push edx
push eax
call edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
add ecx 0x10
push ecx
push edx
call edi
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x14
mov [ eax + 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov ecx [ edx + 0x14 ]
pop edi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x18
sub_4361b0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax 0x1
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x14 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x8
sub_4361e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
sub_436204
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
sub_436299
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push edi
add eax eax
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
xor eax eax
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_436327
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
push 0x1388
push 0x2
push 0x0
push 0x0
push 0x0
push ecx
call [ SendMessageTimeoutW@IAT ]
test eax eax
sete al
pop ebp
retn 0x4
sub_436399
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ eax ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov al 0x1
pop ebp
retn 0x8
mov eax [ eax ]
push 0x4
push eax
call [ ShowWindow@IAT ]
mov al 0x1
pop ebp
retn 0x8
sub_4363c7
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ eax ]
push 0x0
push ecx
call [ EnableWindow@IAT ]
mov al 0x1
pop ebp
retn 0x8
mov eax [ eax ]
push 0x1
push eax
call [ EnableWindow@IAT ]
mov al 0x1
pop ebp
retn 0x8
sub_4363f5
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push 0x1
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ ecx ]
push eax
push edx
call [ MoveWindow@IAT ]
test eax eax
setne al
pop ebp
retn 0x14
sub_43641f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax eax
jns r-xdata
push esi
call [ GetParent@IAT ]
pop esi
pop ebp
retn 0x4
xor eax eax
pop esi
pop ebp
retn 0x4
sub_43646a
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
lea eax [ ebp + 0xc ]
push eax
push 0x1388
push 0x2
push 0x0
push 0x0
push 0x0
push esi
call [ SendMessageTimeoutW@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
push 0x1
jmp r-xdata
push 0x0
push esi
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_4364b5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ GetParent@IAT ]
push eax
call esi
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x8
push eax
call esi
test eax eax
jne r-xdata
sub_4364e6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
cmp edx eax
jae r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 2 ]
pop ebp
retn 0x8
mov eax [ ecx ]
lea eax [ eax + edx * 2 ]
pop ebp
retn 0x8
sub_436508
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x8
sub_43652f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push 0x4
mov [ esi ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov [ eax ] 0x1
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_436577
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_436446
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push 0x111
push eax
call [ SendMessageW@IAT ]
mov al 0x1
pop esi
pop ebp
retn 0x8
sub_43659e
push ebp
mov ebp esp
sub esp 0xa8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebp - 0xa4 ]
call sub_410620
mov ecx [ ebx ]
mov eax [ ebp + 0xc ]
push ecx
push 0x10
lea edx [ ebp - 0xa4 ]
push edx
mov [ ebp - 0x14 ] eax
call sub_4343ad
push 0x10
mov esi eax
push esi
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xa4 ]
push ecx
call sub_434319
mov edx [ ebx ]
push esi
push 0x0
push 0x1104
push edx
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push esi
lea ecx [ ebp - 0xa4 ]
push ecx
call sub_4342dd
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edi [ ebp - 0x14 ]
sub eax ecx
cdq
sub eax edx
mov edx [ ebp + 0x10 ]
sar eax 0x1
add eax ecx
mov [ edx + 0x4 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ ebx ]
push eax
push 0x10
lea ecx [ ebp - 0xa4 ]
push ecx
call sub_4343ad
mov esi eax
cmp edi [ ebp - 0xc ]
jg r-xdata
lea edi [ ebp - 0xa4 ]
call sub_410640
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ecx ]
cmp edi [ ebp - 0xc ]
jle r-xdata
inc edi
cmp edi [ ebp - 0xc ]
jle r-xdata
mov [ ebp + 0x8 ] edi
lea ebx [ ebx ]
push 0x10
push esi
lea edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x24 ] edi
call sub_434319
mov ecx [ ebx ]
push esi
push 0x0
push 0x1111
push ecx
call [ SendMessageW@IAT ]
push 0x10
lea edx [ ebp - 0x24 ]
push edx
push esi
lea eax [ ebp - 0xa4 ]
push eax
call sub_4342dd
test [ ebp - 0x1c ] 0x40
jne r-xdata
lea edi [ ebp - 0xa4 ]
call sub_410640
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi [ ebp - 0xc ]
jg r-xdata
inc edi
cmp edi [ ebp - 0xc ]
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov eax edi
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov ecx [ ebp + 0x10 ]
lea edi [ ebp - 0xa4 ]
mov [ ecx ] eax
call sub_410640
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x10
push esi
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0xa4 ]
push edx
mov [ ebp - 0x24 ] edi
call sub_434319
mov eax [ ebx ]
push esi
push 0x0
push 0x1111
push eax
call [ SendMessageW@IAT ]
push 0x10
lea ecx [ ebp - 0x24 ]
push ecx
push esi
lea edx [ ebp - 0xa4 ]
push edx
call sub_4342dd
test [ ebp - 0x1c ] 0x40
je r-xdata
lea edi [ ebp - 0xa4 ]
call sub_410640
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_436764
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x2
push eax
push 0x102c
push edx
call [ SendMessageW@IAT ]
test eax eax
setne al
pop ebp
retn 0x8
sub_4367a3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x101f
push ecx
call esi
push 0x0
push 0x0
push 0x1200
push eax
call esi
pop esi
pop ebp
retn 0x4
sub_4367eb
push ebp
mov ebp esp
sub esp 0xac
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0xa8 ]
call sub_410620
movzx eax [ ebp + 0xc ]
mov ecx [ ebx ]
neg eax
push ecx
sbb eax eax
push 0x28
lea edx [ ebp - 0xa8 ]
and eax 0x2
push edx
mov [ ebp - 0x18 ] 0x2
mov [ ebp - 0x1c ] eax
call sub_4343ad
push 0x28
mov esi eax
push esi
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0xa8 ]
push ecx
call sub_434319
cmp edi 0xffffffff
je r-xdata
mov eax [ ebx ]
push esi
push 0xffffffff
push 0x102b
push eax
call [ SendMessageW@IAT ]
cmp edi [ ebp + 0x14 ]
jg r-xdata
lea edi [ ebp - 0xa8 ]
call sub_410640
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebx ]
push esi
push edi
push 0x102b
push edx
call [ SendMessageW@IAT ]
inc edi
cmp edi [ ebp + 0x14 ]
jle r-xdata
lea edi [ ebp - 0xa8 ]
call sub_410640
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4368a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
push edi
mov edi [ SendMessageW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push 0xb0
push edx
call edi
mov eax [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0xc9
push eax
call edi
mov ebx eax
cmp ebx 0x1
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
pop edi
inc edx
pop esi
mov [ eax ] edx
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
push 0x0
push ecx
push 0xc9
push edx
call edi
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
dec eax
push 0x0
push eax
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
push 0xc9
push eax
call edi
cmp ebx eax
je r-xdata
sub_436934
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0xffffffff
push 0xc9
push ecx
call [ SendMessageW@IAT ]
mov edx [ ebp + 0xc ]
inc eax
mov [ edx ] eax
mov al 0x1
pop ebp
retn 0x8
sub_436958
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0xba
push ecx
call [ SendMessageW@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov al 0x1
pop ebp
retn 0x8
sub_43697b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0xf0
push ecx
call [ SendMessageW@IAT ]
cmp eax 0x1
sete al
pop ebp
retn 0x4
sub_43699d
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push 0x0
je r-xdata
mov ecx [ eax ]
push 0x0
push 0x14f
push ecx
jmp r-xdata
mov eax [ eax ]
push 0x1
push 0x14f
push eax
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
mov al 0x1
pop ebp
retn 0x8
xor al al
pop ebp
retn 0x8
sub_4369d7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0xc ]
push 0x0
push 0x0
push 0x130b
push ecx
call [ SendMessageW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
inc eax
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x8
xor al al
pop esi
pop ebp
retn 0x8
sub_436a0b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
push edx
call [ GetWindowRect@IAT ]
cmp edi 0xffffffff
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
mov edi eax
sar edi 0x1
movzx esi si
movzx eax di
shl esi 0x10
or esi eax
mov eax [ ebp + 0xc ]
mov ecx 0x1
mov [ ebp + 0x14 ] 0x201
mov [ ebp + 0x18 ] 0x203
mov ebx 0x202
mov edi ecx
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp eax ecx
jne r-xdata
mov [ ebp + 0x14 ] 0x204
mov ebx 0x205
mov edi eax
jmp r-xdata
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0x10 ] ecx
jge r-xdata
mov [ ebp + 0x14 ] 0x207
mov ebx 0x208
mov edi 0x10
mov [ ebp + 0x18 ] 0x206
mov eax ecx
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
sar eax 0x1
add eax eax
push esi
cmp eax ecx
mov eax [ edx ]
push edi
jne r-xdata
pop edi
pop esi
mov al cl
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x14
push ecx
push eax
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
push 0x0
push ebx
push edx
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax [ ebp + 0x10 ]
jle r-xdata
sub_436b2b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ebx
mov ebx [ GetTokenInformation@IAT ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push esi
push 0x0
push ecx
push 0x2
push edi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push edx
call sub_436b91
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
mov edx [ esi ]
push esi
push edx
push eax
push 0x2
push edi
call ebx
test eax eax
je r-xdata
sub_436bc5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ebx
mov ebx [ GetTokenInformation@IAT ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push esi
push 0x0
push ecx
push 0x3
push edi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push edx
call sub_436b91
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
mov edx [ esi ]
push esi
push edx
push eax
push 0x3
push edi
call ebx
test eax eax
je r-xdata
sub_436c2b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push edx
call [ UnloadUserProfile@IAT ]
mov eax [ esi + 0x8 ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
mov ecx [ esi ]
push ecx
call edi
push esi
call sub_436ba9
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
sub_436c6e
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_436b19
mov edi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
mov esi eax
push 0x0
push esi
call edi
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call edi
mov ebx [ DuplicateHandle@IAT ]
push eax
call ebx
push 0x2
push 0x0
push 0x0
lea edx [ esi + 0x8 ]
push edx
call edi
push eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
call edi
push eax
call ebx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push 0x0
push 0x0
push esi
push sub_436c2b
push 0x0
push 0x0
mov [ esi + 0x4 ] eax
call [ CreateThread@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_436cd7
push ebp
mov ebp esp
movsx eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
and eax 0x2
or eax 0x4
push 0x0
shr eax 0x1
push eax
mov eax [ ebp + 0xc ]
push edx
push eax
push ecx
call [ LogonUserW@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x14
sub_436d09
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
xor ebx ebx
push edx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_436b2b
mov edi [ ebp - 0x8 ]
test al al
je r-xdata
push edi
call sub_436ba9
add esp 0x4
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
push esi
xor esi esi
cmp eax ebx
jbe r-xdata
pop esi
lea ecx [ edi + 0x8 ]
jmp r-xdata
mov edx [ ecx ]
and edx 0xc0000000
cmp edx 0xc0000000
je r-xdata
mov eax [ edi + esi * 8 + 0x4 ]
push eax
call [ GetLengthSid@IAT ]
push eax
mov [ ebp - 0x4 ] eax
call sub_436b91
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
inc esi
add ecx 0x8
cmp esi eax
jb r-xdata
mov edx [ edi + esi * 8 + 0x4 ]
push edx
push eax
mov eax [ ebp - 0x4 ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
pop esi
push edi
call sub_436ba9
add esp 0x4
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov bl 0x1
sub_436dbf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_436b91
mov ecx [ ebp + 0x8 ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x2
push esi
push eax
call [ InitializeAcl@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x8
sub_436df7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_436b91
mov ecx [ ebp + 0x8 ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
push 0x1
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x8
sub_436e2b
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push 0x0
push ecx
push edi
push ebx
call [ GetUserObjectSecurity@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x10
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x10
mov edx [ esi ]
push edx
call sub_436b91
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
mov edx [ esi ]
push esi
push edx
push eax
push edi
push ebx
call [ GetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
sub_436e94
push ebp
mov ebp esp
push ecx
mov al [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
push edi
xor ecx ecx
xor edi edi
mov [ ebp + 0x14 ] ecx
test al 0x1
je r-xdata
test al 0x2
je r-xdata
lea edi [ ecx + 0x1 ]
jmp r-xdata
xor bl bl
test al 0x4
je r-xdata
mov edi 0x2
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
or esi 0x400
push esi
push edx
mov edx [ ebp + 0x8 ]
push 0x0
push edi
push eax
push ecx
push edx
call [ CreateProcessWithLogonW@IAT ]
test eax eax
setne bl
lea eax [ ebp + 0x1c ]
push eax
push 0xa
mov [ ebp + 0x1c ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov ecx [ ebp + 0x1c ]
push 0x1
push ecx
lea edx [ ebp + 0x14 ]
push edx
call [ CreateEnvironmentBlock@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x24
push eax
call [ DestroyEnvironmentBlock@IAT ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
sub_436f47
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ GetCurrentProcess@IAT ]
push edi
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
xor bl bl
mov [ ebp - 0x10 ] edi
call esi
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
push ecx
call sub_436bc5
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x8
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x8 ]
mov esi [ LookupPrivilegeValueW@IAT ]
lea edx [ ebp - 0x28 ]
push edx
push r--data
xor edi edi
push edi
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push edi
call sub_436ba9
add esp 0x4
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x1c ]
push eax
push r--data
push edi
mov [ ebp - 0x20 ] edi
call esi
test eax eax
je r-xdata
mov [ ebp - 0x14 ] edi
mov edi [ ebp - 0x8 ]
xor esi esi
cmp [ edi ] esi
jbe r-xdata
mov bl 0x1
xor eax eax
lea ecx [ ebp - 0x20 ]
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x8 ] ecx
xor bl bl
jmp r-xdata
inc eax
add ecx 0xc
cmp eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
push 0x8
lea edx [ ebx - 0x8 ]
push edx
push eax
call sub_4119e3
add esp 0xc
test eax eax
mov eax 0x1
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
add ebx 0xc
sub [ ebp - 0xc ] eax
jne r-xdata
mov [ ebx ] eax
add [ ebp - 0x8 ] 0xc
inc esi
cmp esi [ edi ]
jb r-xdata
lea ebx [ ebp - 0x20 ]
mov [ ebp - 0xc ] 0x2
jmp r-xdata
sub_437063
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ VariantClear@IAT ]
mov eax [ ebp + 0xc ]
push eax
push esi
call [ VariantCopy@IAT ]
pop esi
pop ebp
retn 0x8
sub_4370f4
push ebp
mov ebp esp
push 0x8
call sub_4115d7
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
mov edx [ ecx ]
add esp 0x4
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
inc [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn 0x4
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
inc [ rw-data ]
mov [ rw-data ] eax
pop ebp
retn 0x4
sub_437144
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
push 0x4
push eax
call sub_42e645
add esp 0x8
cmp eax 0x50435245
je r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov ecx 0xa
mov esi ebx
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
push 0x4
push ecx
call sub_42e645
mov esi [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
push 0x4
push edx
call sub_42e645
mov [ esi + 0x8 ] eax
movzx eax [ ebx + 0xc ]
push 0x2
push eax
call sub_42e645
mov [ esi + 0xc ] ax
movzx ecx [ ebx + 0x10 ]
push 0x2
push ecx
call sub_42e645
mov [ esi + 0x10 ] ax
movzx edx [ ebx + 0x12 ]
push 0x2
push edx
call sub_42e645
mov [ esi + 0x12 ] ax
movzx eax [ ebx + 0x14 ]
push 0x2
push eax
call sub_42e645
mov [ esi + 0x14 ] ax
movzx ecx [ ebx + 0x16 ]
push 0x2
push ecx
call sub_42e645
mov [ esi + 0x16 ] ax
movzx edx [ ebx + 0x18 ]
push 0x2
push edx
call sub_42e645
mov [ esi + 0x18 ] ax
movzx eax [ ebx + 0x1a ]
add esp 0x40
push 0x2
push eax
call sub_42e645
mov [ esi + 0x1a ] ax
movzx ecx [ ebx + 0x1c ]
push 0x2
push ecx
call sub_42e645
mov ebx [ ebp + 0x10 ]
add esp 0x10
mov [ esi + 0x1c ] ax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
pop ebp
retn
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x14 ]
mov ecx 0xb
mov esi ebx
[ edi ] [ esi ]
mov edx [ ebx ]
push 0x4
push edx
call sub_42e645
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
push 0x4
push eax
call sub_42e645
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x28 ]
push 0x4
push ecx
call sub_42e645
mov [ esi + 0x28 ] eax
mov esi [ ebp + 0xc ]
add esp 0x18
sub_437262
push ebp
mov ebp esp
sub esp 0x124
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
mov eax [ edi + 0x44 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi ]
cmp eax [ edi + 0x4 ]
jae r-xdata
inc [ edi ]
mov eax 0xfffffff8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax 0xffffffeb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x28 ] 0x2
mov edx [ ebp + 0x20 ]
mov [ ebp - 0x20 ] edx
je r-xdata
movzx ecx [ ebx ]
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ecx
cmp ecx 0x76
ja r-xdata
mov eax [ ebp + 0x24 ]
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] eax
mov [ ebp + 0x24 ] ecx
mov eax 0xfffffffb
movzx edx [ ecx + lookup_table_43ec3e ]
jmp [ edx * 4 + jump_table_43eb0e ]
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
cmp [ ebx + 0x3 ] 0x53
mov [ ebp + 0x1c ] eax
jne r-xdata
movzx eax [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl eax 0x8
or eax edx
lea ecx [ eax + eax ]
mov [ edi + 0x84 ] eax
cmp ecx [ edi + 0x14 ]
jl r-xdata
cmp [ edi + 0x94 ] eax
je r-xdata
movzx eax [ ebx + 0x1 ]
mov [ ebp + 0x20 ] eax
add ebx 0x2
jmp r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
push 0x0
push 0x0
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
lea edx [ ebx + 0x3 ]
push edx
push esi
call sub_437262
add esp 0x28
cmp eax 0x1
je r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
inc eax
push eax
mov eax [ ebp + 0x20 ]
push 0x0
push 0x0
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
lea ecx [ ebx + 0x3 ]
push ecx
push esi
call sub_437262
add esp 0x28
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1c ] eax
movzx ecx [ ebx + 0x2 ]
movzx eax [ ebx + 0x1 ]
je r-xdata
cmp [ rw-data ] eax
je r-xdata
mov [ ebp + 0x1c ] ebx
mov [ ebp - 0x18 ] esi
lea esp [ esp ]
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
cmp [ ebx ] 0x54
je r-xdata
mov edx [ ebp + 0x2c ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
inc edx
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
inc ebx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
inc ebx
mov eax ebx
nop
inc ebx
jmp r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
mov edx ebx
sub edx eax
mov al [ edx ]
mov [ ebp + 0x1c ] edx
cmp al 0x61
jb r-xdata
cmp [ edi + 0x3c ] eax
je r-xdata
cmp esi [ edi + 0x68 ]
jne r-xdata
mov ecx [ edi + 0x88 ]
add ecx [ edi + 0x68 ]
cmp esi ecx
jne r-xdata
mov [ ebp + 0x10 ] esi
inc ebx
jmp r-xdata
test [ ebp + 0x20 ] 0x2
je r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi + 0x6c ]
mov edx esi
mov ecx 0x1
add esi ecx
cmp edx eax
jae r-xdata
mov ecx esi
mov eax 0x1
add esi eax
cmp ecx [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
mov ecx [ edi + 0x6c ]
cmp esi ecx
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add eax eax
add ebx 0x3
mov [ ebp - 0x18 ] eax
cmp eax [ ebp + 0x18 ]
jge r-xdata
lea eax [ ebx + 0x1 ]
add ebx 0x21
mov [ ebp - 0x18 ] eax
movzx eax [ ebx ]
lea edx [ eax - 0x46 ]
cmp edx 0x7
ja r-xdata
movzx edx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl edx 0x8
or edx eax
lea ecx [ ebx + 0x3 ]
add ebx edx
mov [ ebp - 0x18 ] ecx
mov cl [ ebx ]
movzx eax cl
lea edx [ eax - 0x46 ]
cmp edx 0x7
ja r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
movzx eax [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl eax 0x8
or eax edx
mov [ ebp - 0x8 ] eax
add ebx 0x3
mov edx 0x1
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
movzx ecx [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
movzx eax [ ebx + 0x1 ]
shl eax 0x8
xor edx edx
or eax ecx
cmp [ ebx ] 0x26
sete dl
add ebx 0x3
mov [ ebp - 0x14 ] edx
mov edx 0x1
jmp r-xdata
mov edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x8 ] eax
add ebx edx
jmp r-xdata
mov edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x8 ] edx
add ebx edx
jmp r-xdata
mov edx 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] edx
mov eax edx
add ebx edx
jmp r-xdata
add ecx 0xffffffe1
movzx eax cl
mov edx 0x1
and eax edx
mov [ ebp - 0x14 ] eax
movsx eax [ ecx + r--data ]
mov [ ebp - 0x8 ] eax
movsx eax [ ecx + r--data ]
add ebx edx
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx ecx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl ecx 0x8
or ecx eax
mov eax ecx
add ebx 0x3
jmp r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0xc ] ecx
xor ecx ecx
xor eax eax
cmp [ ebx ] 0x33
sete cl
add ebx 0x3
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx 0x1
xor eax eax
mov [ ebp - 0x18 ] edx
add ebx edx
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x18 ] eax
add ebx eax
jmp r-xdata
mov ecx 0x1
xor eax eax
mov [ ebp - 0x18 ] ecx
add ebx ecx
jmp r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
xor eax eax
or ecx edx
mov [ ebp - 0x18 ] 0x1
add ebx 0x3
jmp r-xdata
add ecx 0xffffffd4
movzx eax cl
and eax 0x1
mov [ ebp - 0x14 ] eax
movsx eax [ ecx + r--data ]
movsx ecx [ ecx + r--data ]
inc ebx
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
movzx edx [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl edx 0x8
or edx ecx
mov ecx edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] 0x1
add ebx 0x3
jmp r-xdata
movzx eax [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl eax 0x8
or eax edx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
xor eax eax
xor ecx ecx
cmp [ ebx ] 0x40
mov [ ebp - 0x8 ] ecx
sete al
add ebx 0x3
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x8 ] ecx
inc ebx
jmp r-xdata
mov ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] ecx
add ebx ecx
jmp r-xdata
mov edx 0x1
xor ecx ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x8 ] ecx
add ebx edx
jmp r-xdata
movzx edx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl edx 0x8
xor ecx ecx
or edx eax
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x8 ] ecx
add ebx 0x3
jmp r-xdata
lea eax [ ecx - 0x39 ]
movsx edx [ eax + r--data ]
movzx ecx al
and ecx 0x1
mov [ ebp - 0x14 ] ecx
movsx ecx [ eax + r--data ]
inc ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
test edx edx
jne r-xdata
movzx eax [ ebx + 0x3 ]
movzx edx [ ebx + 0x4 ]
shl eax 0x8
or eax edx
lea edx [ eax + eax ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
cmp edx [ edi + 0x14 ]
jl r-xdata
xor eax eax
cmp ecx 0x61
movzx ecx [ ebx + 0x2 ]
setl al
dec eax
and eax 0x2
mov [ ebp + 0x28 ] eax
movzx eax [ ebx + 0x1 ]
shl eax 0x8
or eax ecx
cmp [ eax + ebx ] 0x54
jne r-xdata
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x28 ]
inc edx
push edx
mov edx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
movzx ecx [ ebx ]
push edi
push edx
movzx edx [ ecx + r--data ]
lea eax [ ebx + 0x2 ]
push eax
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebx + 0x1 ]
add edx ebx
add eax edx
push eax
push esi
call sub_437262
mov ebx eax
add esp 0x28
cmp ebx 0xfffffc1d
jne r-xdata
mov edx [ ebp + 0x2c ]
mov eax [ ebp + 0x28 ]
mov ecx [ ebp + 0x24 ]
inc edx
push edx
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
movzx eax [ ebx ]
push ecx
movzx ecx [ eax + r--data ]
push edx
add ecx ebx
push ecx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
movzx ecx [ ebx ]
push edx
movzx edx [ ecx + r--data ]
push eax
add edx ebx
push edx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
inc ecx
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
movzx edx [ ebx ]
push eax
movzx eax [ edx + r--data ]
push ecx
movzx ecx [ ebx + 0x1 ]
add eax ebx
add ecx eax
push ecx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov edx [ ebp + 0x2c ]
mov eax [ ebp + 0x28 ]
mov ecx [ ebp + 0x24 ]
inc edx
push edx
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
movzx eax [ ebx ]
push ecx
movzx ecx [ eax + r--data ]
push edx
add ecx ebx
push ecx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
movzx ecx [ ebx ]
push edx
movzx edx [ ecx + r--data ]
push eax
movzx eax [ ebx + 0x1 ]
add edx ebx
add eax edx
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
inc ecx
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
movzx edx [ ebx ]
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebx
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
inc ecx
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
movzx edx [ ebx ]
push eax
movzx eax [ edx + r--data ]
push ecx
movzx ecx [ ebx + 0x3 ]
add eax ebx
add ecx eax
push ecx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add eax [ edi + 0x64 ]
mov [ ebp + 0x1c ] eax
cmp eax [ edi + 0x64 ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
movzx ecx [ ebx + 0x3 ]
lea eax [ ebx + 0x3 ]
cmp ecx 0x66
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ edi + 0x10 ]
sub edx eax
mov eax [ edi + 0xc ]
mov edx [ eax + edx * 4 ]
mov [ eax + ecx * 4 ] edx
mov edx [ edi + 0xc ]
mov eax esi
sub eax [ edi + 0x68 ]
mov [ edx + ecx * 4 + 0x4 ] eax
cmp [ ebp + 0x18 ] ecx
jg r-xdata
mov [ edi + 0x38 ] 0x1
add ebx 0x3
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp esi eax
jne r-xdata
mov ebx [ edi + 0x94 ]
cmp [ ebx + 0x4 ] eax
jne r-xdata
mov edx [ edi + 0x70 ]
mov [ ebp + 0x10 ] edx
cmp eax 0xfffffc19
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
cmp eax 0xfffffc19
je r-xdata
shl eax 0x8
or eax ecx
sub esi eax
cmp esi [ edi + 0x68 ]
jb r-xdata
shl eax 0x8
or eax ecx
jle r-xdata
add ebx 0x6
jmp r-xdata
mov [ ebp - 0x74 ] 0x1
movzx edx [ ebx + 0x1 ]
mov [ ebp - 0x70 ] edx
mov eax [ edi + 0xc ]
mov [ ebp - 0x6c ] eax
mov ecx [ edi + 0x68 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x68 ] ecx
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x68 ]
mov ecx esi
mov [ ebp - 0x64 ] edx
sub eax [ edi + 0x68 ]
mov [ ebp - 0x60 ] eax
sub ecx [ edi + 0x68 ]
mov [ ebp - 0x5c ] ecx
movzx edx [ ebx + 0x2 ]
movzx eax [ ebx + 0x3 ]
shl edx 0x8
or edx eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4c ] edx
movzx ecx [ ebx + 0x4 ]
movzx edx [ ebx + 0x5 ]
shl ecx 0x8
or ecx edx
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x58 ] eax
mov eax [ edi + 0x84 ]
mov [ ebp - 0x54 ] eax
mov ecx [ edi + 0x98 ]
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x50 ] ecx
call [ rw-data ]
add esp 0x4
test eax eax
jg r-xdata
mov edx [ edi + 0x70 ]
mov [ ebp + 0x10 ] edx
test eax eax
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
je r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x24 ]
inc ecx
push ecx
mov ecx [ ebp + 0x20 ]
push 0x0
push edx
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edi
push edx
mov edx [ ebp + 0x10 ]
push ecx
push edx
add eax 0x3
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
cmp [ ebx ] 0x54
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov [ ebp + 0x24 ] ecx
jmp r-xdata
test [ ebp + 0x20 ] 0x2
je r-xdata
cmp esi [ edi + 0x68 ]
je r-xdata
inc ebx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x9c ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
jmp r-xdata
cmp [ edi + 0x40 ] eax
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
cmp esi [ edi + 0x68 ]
jne r-xdata
cmp esi [ edi + 0x68 ]
je r-xdata
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x1c ]
cmp esi edx
ja r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
add ebx eax
jmp r-xdata
cmp [ edi + 0x7c ] eax
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ edi + 0x7c ] eax
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ edi + 0x48 ] 0x0
je r-xdata
mov edx [ edi + 0xc ]
mov ecx [ edx + eax * 4 ]
lea eax [ edx + eax * 4 ]
test ecx ecx
js r-xdata
mov eax 0x1
mov edx eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
movzx edx [ edx + lookup_table_43ecce ]
jmp [ edx * 4 + jump_table_43ecc6 ]
mov eax 0x1
mov ecx eax
mov [ ebp - 0x8 ] ecx
movzx edx [ edx + lookup_table_43ecde ]
jmp [ edx * 4 + jump_table_43ecd6 ]
mov edx [ edi + 0x6c ]
sub edx esi
mov eax 0x1
cmp edx eax
jl r-xdata
mov edx 0x1
movzx ecx [ ebx + edx ]
add ebx edx
mov eax edx
cmp ecx 0xc0
jb r-xdata
mov ecx [ edi + 0x6c ]
sub ecx esi
mov eax 0x1
cmp ecx eax
jl r-xdata
movzx eax [ ebx + 0x1 ]
inc ebx
mov ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0x1c ] eax
cmp eax 0xc0
jb r-xdata
mov [ ebp - 0xc ] eax
mov eax 0x7fffffff
cmp [ ebp - 0x1c ] 0x0
movzx ecx [ ebx ]
mov [ ebp - 0x4 ] ecx
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0xc ] ecx
movzx edx [ ebx ]
inc ebx
test [ ebp + 0x20 ] 0x1
mov [ ebp - 0x4 ] edx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0xc ] edx
movzx eax [ ebx ]
inc ebx
mov [ ebp - 0x10 ] eax
test ecx ecx
jle r-xdata
mov edx 0x7fffffff
mov eax [ edi + 0xc ]
mov edx [ eax + edx * 4 ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x18 ]
mov edx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x20 ] edx
mov edx [ edi + 0x10 ]
sub edx [ ebp - 0x14 ]
lea eax [ eax + edx * 4 ]
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov edx [ edi + 0x84 ]
mov [ ebp + 0x1c ] edx
mov edx esi
sub edx [ edi + 0x68 ]
mov [ eax ] edx
xor eax eax
cmp ecx 0x62
mov ecx [ ebp + 0x2c ]
setne al
dec eax
and eax 0x2
inc ecx
mov [ ebp + 0x28 ] eax
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
nop
cmp [ edi + 0x9c ] 0x0
jne r-xdata
mov ecx [ edi + 0x70 ]
mov edx [ ebp + 0x14 ]
push ecx
push edx
call sub_414d30
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x9c ] edx
mov eax 0xfffffc1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xfffffc1b
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
mov eax 0xfffffc1b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xfffffc1e
jne r-xdata
add ebx 0x2
mov [ edi + 0x9c ] ebx
mov eax 0xfffffc1b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xfffffc1e
jne r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x70 ] esi
mov [ edi + 0x9c ] edx
mov eax 0xfffffc1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xfffffc1b
je r-xdata
add ebx 0x2
mov [ edi + 0x70 ] ebx
mov eax 0xfffffc1d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xfffffc1b
je r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
mov eax [ ebp + 0x14 ]
shl ecx 0x8
or ecx edx
sub ebx ecx
mov [ edi + 0x70 ] ebx
mov [ edi + 0x9c ] eax
mov eax 0xfffffc1e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl edx 0x8
or edx eax
mov ecx ebx
sub ecx edx
add ebx 0x4
mov [ edi + 0x70 ] ecx
mov [ edi + 0x9c ] ebx
mov eax 0xfffffc1e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ eax + 0x3 ]
movzx eax [ eax + 0x4 ]
shl edx 0x8
or edx eax
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
cmp [ edi + 0x94 ] 0x0
jne r-xdata
cmp ecx 0x67
je r-xdata
add ebx 0x6
mov [ ebp - 0xa4 ] 0x1
movzx edx [ ebx + 0x4 ]
mov [ ebp - 0xa0 ] edx
mov eax [ edi + 0xc ]
mov [ ebp - 0x9c ] eax
mov ecx [ edi + 0x68 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x98 ] ecx
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x68 ]
mov ecx esi
mov [ ebp - 0x94 ] edx
sub eax [ edi + 0x68 ]
mov [ ebp - 0x90 ] eax
sub ecx [ edi + 0x68 ]
mov [ ebp - 0x8c ] ecx
movzx edx [ ebx + 0x5 ]
movzx eax [ ebx + 0x6 ]
shl edx 0x8
or edx eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x7c ] edx
movzx ecx [ ebx + 0x7 ]
movzx edx [ ebx + 0x8 ]
shl ecx 0x8
or ecx edx
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x88 ] eax
mov eax [ edi + 0x84 ]
mov [ ebp - 0x84 ] eax
mov ecx [ edi + 0x98 ]
lea edx [ ebp - 0xa4 ]
push edx
mov [ ebp - 0x80 ] ecx
call [ rw-data ]
add esp 0x4
test eax eax
jg r-xdata
add ebx 0x3
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x18 ] ecx
mov edx [ ebp + 0x18 ]
neg ecx
mov [ edi + 0x74 ] esi
sbb ecx ecx
mov [ edi + 0x80 ] edx
and ecx 0xfffffc18
mov [ edi + 0x70 ] eax
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x54 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ edi + 0x94 ] eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ edi + 0xc ]
add ecx ecx
add ecx ecx
push ecx
push edx
push eax
call sub_4165d0
mov ecx [ ebx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov ebx [ ebx + 0x8 ]
add esp 0xc
mov [ ebp + 0x18 ] ecx
mov [ ebp + 0x20 ] edx
jmp r-xdata
test [ ebp + 0x28 ] 0x1
jne r-xdata
test eax eax
je r-xdata
cmp eax 0xfffffc1c
je r-xdata
cmp esi [ edi + 0x78 ]
jae r-xdata
mov ecx [ edi + 0x68 ]
js r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
cmp [ ebx ] 0x54
je r-xdata
cmp al 0x54
jne r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
cmp [ ebx ] 0x54
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
movzx edx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl edx 0x8
or edx eax
add ebx edx
cmp [ ebx ] 0x54
je r-xdata
jmp r-xdata
add ebx 0x3
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x74 ] esi
mov [ edi + 0x80 ] edx
mov [ edi + 0x70 ] eax
mov [ edi + 0x9c ] ecx
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp al 0x59
je r-xdata
cmp al 0x58
je r-xdata
mov ecx [ edi + 0x68 ]
cmp esi ecx
je r-xdata
cmp [ edi + 0x50 ] eax
je r-xdata
cmp [ edi + 0x40 ] eax
jne r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
cmp [ edi + 0x7c ] eax
je r-xdata
inc ebx
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x1c ]
cmp esi edx
ja r-xdata
mov edx [ ebp - 0x1c ]
push edx
lea ecx [ edi + 0x1c ]
push ecx
mov ecx [ edi + 0x6c ]
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
je r-xdata
cmp esi [ edi + 0x78 ]
ja r-xdata
xor ecx ecx
jmp r-xdata
xor ecx ecx
mov cl [ esi - 0x1 ]
lea eax [ esi - 0x1 ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edi + 0x6c ]
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
add ebx ecx
jmp r-xdata
cmp esi eax
jae r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0xd
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0xc0
jb r-xdata
mov edx [ edi + 0x6c ]
sub edx esi
inc edx
xor edx edx
jmp r-xdata
mov edx [ eax + 0x4 ]
sub edx ecx
jmp r-xdata
mov [ ebp + 0x1c ] eax
cmp edx eax
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp edx 0x1
jl r-xdata
add eax 0xffffffba
movzx edx al
and edx 0x1
mov [ ebp - 0x14 ] edx
movsx edx [ eax + r--data ]
movsx eax [ eax + r--data ]
inc ebx
mov [ ebp - 0xc ] eax
test eax eax
mov [ ebp - 0x8 ] edx
mov eax 0x1
jne r-xdata
movzx edx [ ebx + 0x2 ]
xor eax eax
cmp [ ebx ] 0x4d
sete al
mov [ ebp - 0x14 ] eax
movzx eax [ ebx + 0x1 ]
shl eax 0x8
or eax edx
movzx edx [ ebx + 0x4 ]
mov [ ebp - 0x8 ] eax
movzx eax [ ebx + 0x3 ]
shl eax 0x8
or eax edx
mov [ ebp - 0xc ] eax
jne r-xdata
cmp ecx eax
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
add eax 0xffffffba
movzx ecx al
and ecx 0x1
mov [ ebp - 0x14 ] ecx
movsx ecx [ eax + r--data ]
movsx eax [ eax + r--data ]
inc ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
movzx edx [ ebx + 0x2 ]
xor eax eax
cmp cl 0x4d
movzx ecx [ ebx + 0x1 ]
sete al
shl ecx 0x8
or ecx edx
movzx edx [ ebx + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] eax
movzx eax [ ebx + 0x3 ]
shl eax 0x8
or eax edx
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov cl [ esi ]
add esi eax
cmp [ ebx + 0x1 ] cl
jne r-xdata
mov ecx [ edi + 0x6c ]
sub ecx esi
cmp eax ecx
jg r-xdata
test cl 0x20
jne r-xdata
movzx ecx [ esi ]
mov eax [ edi + 0x30 ]
movzx edx [ ebx + 0x1 ]
mov cl [ ecx + eax ]
inc esi
cmp [ edx + eax ] cl
jne r-xdata
mov edx [ edi + 0x6c ]
sub edx esi
cmp ecx edx
jg r-xdata
test al 0x20
jne r-xdata
add ebx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] ebx
cmp ecx 0xc0
jb r-xdata
test [ ebp + 0x20 ] 0x1
je r-xdata
cmp eax 0xc0
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
mov edx 0x1
mov [ ebp + 0x1c ] edx
je r-xdata
cmp [ ebp - 0x1c ] 0x0
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x1c ] 0x1
je r-xdata
cmp ecx edx
je r-xdata
add eax 0xfffffffa
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edi + 0x84 ] edx
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
or ecx edx
add ebx ecx
cmp [ ebx ] 0x54
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
inc ecx
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
movzx edx [ ebx ]
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebx
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
movzx edx [ ebx ]
movzx eax [ edx + r--data ]
add ebx eax
jmp r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
or ecx edx
movzx eax [ ebx + ecx + 0x1 ]
add ebx ecx
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
cmp [ eax + ebx ] 0x54
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
mov [ edi + 0x70 ] esi
lea eax [ ebx - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xfffffc1c
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
cmp eax 0xfffffc1e
jne r-xdata
lea eax [ ecx * 4 ]
push eax
call [ rw-data ]
add esp 0x4
mov [ ebp - 0x30 ] eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x120 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ edi + 0x94 ]
mov [ ebp - 0x3c ] ecx
lea edx [ ebp - 0x3c ]
mov [ edi + 0x94 ] edx
add ebx 0x3
mov [ ebp - 0x34 ] ebx
mov ecx [ edi + 0x10 ]
mov [ ebp - 0x2c ] ecx
cmp ecx 0x1e
jg r-xdata
movzx eax [ ebx + 0x4 ]
movzx edx [ ebx + 0x5 ]
shl eax 0x8
or eax edx
mov [ ebp - 0x24 ] eax
cmp eax 0xffff
je r-xdata
movzx edx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl edx 0x8
or edx eax
add ebx edx
jmp r-xdata
cmp ecx 0x64
je r-xdata
js r-xdata
cmp [ edi + 0x58 ] 0x0
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
cmp [ ebx ] 0x54
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
or ecx edx
add ebx ecx
cmp [ ebx ] 0x54
je r-xdata
cmp eax 0xfffffc1b
je r-xdata
add ebx 0x3
jmp r-xdata
mov [ edi + 0x78 ] esi
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp [ ebx ] 0x55
mov edx [ edi + 0x80 ]
mov esi [ edi + 0x74 ]
mov [ ebp + 0x18 ] edx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
inc eax
push eax
mov eax [ ebp + 0x24 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
lea edx [ ebx + 0x3 ]
push edx
push esi
call sub_437262
add esp 0x28
cmp eax 0x1
je r-xdata
jmp r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
add ebx 0x3
jmp r-xdata
cmp al 0x5a
je r-xdata
inc ebx
jmp r-xdata
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax [ edi + 0x6c ]
sub eax [ edi + 0x1c ]
cmp esi eax
ja r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov edx [ edi + 0x6c ]
lea ecx [ edi + 0x1c ]
push ecx
push edx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
jmp r-xdata
movzx edx [ esi - 0x1 ]
mov ecx [ edi + 0x34 ]
movzx ecx [ edx + ecx ]
shr ecx 0x4
and ecx 0x1
lea eax [ esi - 0x1 ]
mov [ edi + 0x78 ] eax
cmp esi [ edi + 0x6c ]
jb r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp eax [ edi + 0x78 ]
jae r-xdata
mov dl [ eax - 0x1 ]
dec eax
and dl 0xc0
cmp dl 0x80
je r-xdata
cmp [ edi + 0x1c ] 0x1
je r-xdata
jmp r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jle r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jle r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
test al 0x20
jne r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
je r-xdata
test al 0x20
jne r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
test al 0x20
jne r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
je r-xdata
test al 0x20
jne r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
test al 0x20
jne r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
je r-xdata
test al 0x20
jne r-xdata
cmp eax 0x85
je r-xdata
je r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
test al 0x20
jne r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
test al 0x20
jne r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
test al 0x20
jne r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
test al 0x20
jne r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
push eax
push edi
push ecx
push esi
push edx
call sub_42ebce
add esp 0x14
test eax eax
je r-xdata
movzx ecx [ ecx + lookup_table_43ecbe ]
jmp [ ecx * 4 + jump_table_43ecb6 ]
movzx eax [ ebx ]
lea ecx [ eax - 0x46 ]
mov [ ebp - 0x10 ] edx
cmp ecx 0x7
ja r-xdata
cmp edx [ ebp - 0xc ]
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x7fffffff
jmp r-xdata
mov edx [ ebp - 0x8 ]
add ebx 0x5
mov eax 0x1
jmp r-xdata
mov [ ebp - 0xc ] 0x7fffffff
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov eax 0x7fffffff
jmp r-xdata
add ebx 0x5
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0xc ] eax
cmp esi [ edi + 0x78 ]
jbe r-xdata
add ebx 0x2
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
test eax eax
jle r-xdata
test cl 0x10
jne r-xdata
lea eax [ edx + 0x1 ]
jmp r-xdata
add ebx 0x2
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx ecx [ esi ]
inc esi
cmp eax 0x80
jae r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
and ecx 0x3f
and edx 0x3f
test al 0x10
jne r-xdata
movzx edx [ ebx + 0x1 ]
and eax 0x1f
and edx 0x3f
shl eax 0x6
or eax edx
mov ecx 0x2
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp + 0x1c ] 0x1
cmp edx 0x1
jl r-xdata
mov edx [ edi + 0x30 ]
movzx ecx [ ecx + edx ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov [ ebp + 0x1c ] edx
cmp ecx edx
jl r-xdata
add ebx edx
cmp edx 0x1
jle r-xdata
movzx edx [ ebx + 0x1 ]
and edx 0x3f
test cl 0x20
jne r-xdata
movzx edx [ ebx + 0x1 ]
add ebx 0x2
cmp edx eax
jne r-xdata
cmp eax 0x100
jae r-xdata
test al 0x20
jne r-xdata
cmp eax edx
jl r-xdata
cmp eax edx
jl r-xdata
cmp eax 0x1
jl r-xdata
cmp eax 0x1
jl r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp eax 0xf
ja r-xdata
cmp eax 0xf
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x28 ]
mov ecx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
movzx eax [ ebx ]
push ecx
movzx ecx [ eax + r--data ]
push edx
add ecx ebx
push ecx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov esi [ edi + 0xc ]
mov ebx [ ebp - 0x24 ]
lea ecx [ edx + edx ]
mov [ esi + ecx * 4 ] ebx
mov esi [ edi + 0xc ]
mov ebx [ ebp - 0x20 ]
mov [ esi + ecx * 4 + 0x4 ] ebx
mov ecx [ edi + 0x10 ]
mov esi [ ebp - 0x18 ]
sub ecx edx
mov edx [ edi + 0xc ]
mov [ edx + ecx * 4 ] esi
cmp eax 0xfffffc1e
je r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov ecx [ edi + 0x44 ]
mov [ ebp - 0x1c ] ecx
cmp eax [ edi + 0x4 ]
jb r-xdata
mov eax [ ebp + 0x2c ]
mov edx [ ebp + 0x28 ]
mov ecx [ ebp + 0x20 ]
inc eax
push eax
mov eax [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
movzx edx [ ebx ]
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebx
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
cmp eax 0xfffffc1d
je r-xdata
mov ecx [ ebp - 0x2c ]
mov eax 0xfffffffa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
add ecx ecx
add ecx ecx
push ecx
push edx
push eax
call sub_410e60
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x2c ]
mov [ ebp - 0x28 ] eax
mov al [ ecx ]
add esp 0xc
cmp al 0x61
sbb ecx ecx
and ecx 0xfffffffe
add ecx 0x2
inc edx
mov [ ebp + 0x28 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] 0x1
mov eax 0x3
jmp r-xdata
mov edx [ edi + 0x94 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx ] 0x54
je r-xdata
movzx eax [ ebx + 0x4 ]
movzx edx [ ebx + 0x5 ]
shl eax 0x8
or eax edx
add eax eax
cmp eax [ ebp + 0x18 ]
jge r-xdata
cmp ecx 0x65
je r-xdata
mov edx [ edi + 0x88 ]
add edx [ edi + 0x68 ]
cmp eax edx
je r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
cmp [ ebx ] 0x54
je r-xdata
mov edx [ edi + 0x80 ]
add ebx 0x3
mov [ ebp + 0x18 ] edx
jmp r-xdata
jmp r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
test [ ebp + 0x28 ] 0x1
jne r-xdata
cmp eax 0xfffffc1a
je r-xdata
test eax eax
jg r-xdata
mov dl [ esi - 0x1 ]
dec esi
and dl 0xc0
cmp dl 0x80
je r-xdata
add ebx 0x3
jmp r-xdata
cmp esi [ ebp - 0x18 ]
jne r-xdata
mov al [ ebx ]
cmp al 0x5d
je r-xdata
cmp al 0x5b
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov cl [ esi ]
cmp cl [ edi + 0x2c ]
jne r-xdata
inc ebx
jmp r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
jmp r-xdata
cmp [ edi + 0x1c ] 0x1
je r-xdata
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x1c ]
cmp esi edx
jne r-xdata
movzx edx [ esi ]
mov eax [ edi + 0x34 ]
movzx eax [ edx + eax ]
shr eax 0x4
and eax 0x1
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp eax 0x100
jae r-xdata
movzx edx [ esi + 0x1 ]
and edx 0x3f
test al 0x20
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
movzx ecx [ eax ]
cmp ecx 0xc0
jb r-xdata
mov [ edi + 0x78 ] eax
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add esi ecx
cmp esi eax
jb r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x9c ] edx
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
jmp r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
inc ebx
jmp r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
inc ebx
jmp r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
inc ebx
jmp r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
inc ebx
jmp r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
inc ebx
jmp r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
cmp [ edi + 0x60 ] 0x0
jne r-xdata
cmp eax 0x2027
jbe r-xdata
cmp esi ecx
jae r-xdata
cmp eax 0xa
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
test al 0x10
jne r-xdata
movzx ecx [ esi ]
and eax 0x1f
shl eax 0x6
and ecx 0x3f
or eax ecx
inc esi
jmp r-xdata
cmp eax 0x3000
jne r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
cmp eax 0x2029
jbe r-xdata
cmp eax 0xa
jb r-xdata
test al 0x10
jne r-xdata
movzx ecx [ esi ]
and eax 0x1f
shl eax 0x6
and ecx 0x3f
or eax ecx
inc esi
jmp r-xdata
cmp eax 0x2029
ja r-xdata
cmp eax 0xa
jb r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
add esi [ ebp - 0x10 ]
jmp r-xdata
add eax 0xffffffba
movzx ecx al
and ecx 0x1
mov [ ebp - 0x14 ] ecx
movsx ecx [ eax + r--data ]
movsx eax [ eax + r--data ]
inc ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
movzx ecx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
xor edx edx
cmp [ ebx ] 0x4d
sete dl
shl ecx 0x8
or ecx eax
movzx eax [ ebx + 0x3 ]
shl eax 0x8
mov [ ebp - 0x14 ] edx
movzx edx [ ebx + 0x4 ]
or eax edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ ebp + 0x1c ] edx
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x18 ]
shr eax 0x3
mov al [ eax + ecx ]
inc esi
test al dl
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
push 0x0
push edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov edx [ ebp - 0x18 ]
push edx
push eax
call sub_42e2fd
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc0
jb r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
mov dl [ ebx ]
mov cl [ esi ]
dec eax
inc esi
inc ebx
cmp dl cl
jne r-xdata
test cl 0x8
jne r-xdata
mov eax 0x3
jmp r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
cmp ecx 0xc0
jb r-xdata
mov eax [ edi + 0x30 ]
mov dl [ ecx + eax ]
mov ecx [ ebp + 0x1c ]
inc ebx
cmp [ ecx + eax ] dl
je r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax ecx
shl eax 0x6
or eax edx
mov ecx 0x3
jmp r-xdata
mov [ ebp - 0x10 ] ecx
cmp edx eax
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp ecx eax
je r-xdata
jmp r-xdata
test [ ebp + 0x20 ] 0x1
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
or ecx edx
mov edx 0x2
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x9c ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ ebx + 0x1 ]
mov edx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
add ebx 0x2
cmp ecx eax
jne r-xdata
mov edx [ edi + 0x30 ]
movzx eax [ edx + eax ]
test al 0x10
jne r-xdata
movzx ecx [ esi ]
and eax 0x1f
shl eax 0x6
and ecx 0x3f
or eax ecx
inc esi
jmp r-xdata
cmp eax ecx
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
mov edx [ ebp - 0xc ]
cmp eax edx
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0xfffffffa
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] esi
je r-xdata
mov eax 0xfffffff2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_43ed26 ]
jmp [ eax * 4 + jump_table_43ece6 ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x2c ]
inc eax
mov [ edi ] eax
cmp ecx [ edi + 0x8 ]
jae r-xdata
cmp eax 0xfffffc1e
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ edi + 0x94 ] eax
mov eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x120 ]
cmp eax ecx
je r-xdata
cmp eax 0xfffffc19
je r-xdata
add ebx eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x0
cmp ecx 0x67
jne r-xdata
add ebx 0x3
cmp [ ebp - 0x4 ] 0x63
jne r-xdata
add ebx 0x3
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
cmp ecx 0x65
jne r-xdata
mov edx [ edi + 0xc ]
cmp [ edx + eax * 4 ] 0x0
jge r-xdata
cmp ecx 0x68
jne r-xdata
cmp [ ebx ] 0x55
je r-xdata
add ebx 0x3
jmp r-xdata
test eax eax
je r-xdata
dec esi
dec eax
cmp esi ecx
jb r-xdata
jmp r-xdata
cmp [ ebx + 0x3 ] 0x19
lea eax [ ebx + 0x3 ]
mov [ ebp - 0x24 ] eax
jne r-xdata
cmp al 0x5d
je r-xdata
mov edx [ edi + 0x68 ]
add edx [ edi + 0x1c ]
cmp esi edx
jb r-xdata
cmp esi ecx
jbe r-xdata
cmp [ edi + 0x1c ] 0x1
je r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
jne r-xdata
cmp eax ecx
je r-xdata
cmp eax ecx
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x10
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
jmp r-xdata
mov dl [ ebx ]
inc ebx
cmp dl 0x5
jne r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp ecx 0x100
jae r-xdata
test cl 0x20
jne r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
inc ebx
jmp r-xdata
cmp eax 0x2029
ja r-xdata
cmp [ esi ] 0xa
jne r-xdata
jbe r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
inc ebx
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
test al 0x8
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x2
jmp r-xdata
inc ebx
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
inc ebx
jmp r-xdata
cmp eax 0xd
jbe r-xdata
test al 0x8
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x2
jmp r-xdata
inc ebx
jmp r-xdata
cmp eax 0xd
ja r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
test edx edx
je r-xdata
mov eax 0x7fffffff
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
add ebx 0x5
mov eax 0x7fffffff
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp + 0x2c ]
inc eax
cmp [ ebp - 0x1c ] 0x0
push eax
mov [ ebp - 0x8 ] eax
push 0x0
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jle r-xdata
cmp eax 0xff
jbe r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc eax
push eax
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov ecx 0x1
mov ecx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] ecx
jge r-xdata
mov eax 0x1
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0x8 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
test al 0x20
jne r-xdata
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jle r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
test eax eax
jle r-xdata
test cl 0x4
mov eax 0x0
setne al
add eax 0x5
mov eax 0x4
jmp r-xdata
jmp r-xdata
add ebx [ ebp - 0x10 ]
movzx edx [ esi ]
and edx 0x3f
test cl 0x20
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ ebx + 0x3 ]
shl ecx 0x6
or ecx edx
shl ecx 0x6
and eax 0x3f
or eax ecx
mov ecx 0x4
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ ebp + 0x1c ] edx
jne r-xdata
movzx edx [ esi ]
inc esi
cmp ecx edx
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp ecx eax
je r-xdata
mov eax [ edi + 0x6c ]
sub eax edx
cmp esi eax
ja r-xdata
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or edx ecx
movzx ecx [ ebx + 0x2 ]
shl edx 0x6
and ecx 0x3f
or ecx edx
mov edx 0x3
jmp r-xdata
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test al 0x8
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x2
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx ecx [ esi ]
add esi edx
cmp [ ebp - 0x4 ] ecx
je r-xdata
movzx ecx [ esi ]
add esi edx
cmp ecx 0xc0
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
inc esi
cmp [ ebp - 0x4 ] ecx
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jb r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
push 0x0
push edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x2c ]
inc eax
push eax
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp eax 0xf
ja r-xdata
cmp eax 0xf
ja r-xdata
cmp ecx 0x1
jl r-xdata
mov eax [ edi + 0x6c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov eax [ edi + 0x6c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov eax [ edi + 0x6c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x9c ] edx
push eax
call [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
mov eax [ edi + 0x28 ]
xor ecx ecx
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x1c ] ecx
cmp [ edi + 0x20 ] ecx
jle r-xdata
mov [ ebp + 0x28 ] 0x0
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc eax
push eax
mov eax [ ebp + 0x18 ]
push 0x2
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x28 ]
sar eax 0x1
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0x1c ] eax
cmp [ edi + 0x20 ] eax
jle r-xdata
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x20 ]
inc edx
push edx
mov edx [ ebp + 0x18 ]
push 0x1
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edi
push edx
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
push esi
call sub_437262
add esp 0x28
cmp eax 0x1
je r-xdata
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
jmp r-xdata
movzx edx [ ebx + 0x1 ]
movzx eax [ ebx + 0x2 ]
shl edx 0x8
or edx eax
add ebx edx
cmp [ ebx ] 0x54
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
cmp [ ebx ] 0x57
jne r-xdata
mov edx [ ebp + 0x20 ]
movzx ecx [ ebx + 0x4 ]
and edx 0xfffffff8
or ecx edx
mov [ ebp + 0x20 ] ecx
cmp al 0x5f
je r-xdata
mov ecx [ edi + 0x1c ]
mov eax esi
sub eax ecx
mov dl [ eax ]
cmp dl [ edi + 0x2c ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edi + 0x68 ]
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e7e1
add esp 0x14
test eax eax
je r-xdata
mov dl [ esi + 0x1 ]
cmp dl [ edi + 0x2d ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov eax 0x1
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
jmp r-xdata
or eax edx
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x10
je r-xdata
movzx edx [ eax + 0x1 ]
and edx 0x3f
test cl 0x10
jne r-xdata
movzx eax [ eax + 0x1 ]
and ecx 0x1f
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
inc esi
inc ebx
jmp r-xdata
cmp eax 0xc
ja r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
cmp eax 0x200a
jbe r-xdata
inc ebx
jmp r-xdata
cmp eax 0x9
je r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
test al 0x4
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
cmp eax 0x200a
jbe r-xdata
inc ebx
jmp r-xdata
cmp eax 0x9
je r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
inc ebx
jmp r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
test al 0x4
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
inc ebx
jmp r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov [ ebp + 0x1c ] 0x1
cmp ecx 0x1
jl r-xdata
cmp edx [ ebp - 0xc ]
jge r-xdata
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x18 ]
shr eax 0x3
mov al [ eax + ecx ]
test al dl
je r-xdata
cmp ecx 0x4e
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
lea esp [ esp ]
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
movzx eax [ esi ]
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
test al 0x10
jne r-xdata
movzx ecx [ esi ]
and eax 0x1f
shl eax 0x6
and ecx 0x3f
or eax ecx
inc esi
jmp r-xdata
mov [ edi + 0x5c ] edx
cmp [ edi + 0x7c ] edx
jle r-xdata
jmp r-xdata
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
or ecx edx
inc esi
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ ebx + 0x3 ]
shl ecx 0x6
or ecx edx
movzx edx [ ebx + 0x4 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ ebx + 0x5 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
shl ecx 0x6
and eax 0x3f
or eax ecx
mov ecx 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ ebx + 0x3 ]
shl ecx 0x6
or ecx edx
movzx edx [ ebx + 0x4 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
mov ecx 0x5
jmp r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
inc eax
push eax
push 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] esi
cmp edx eax
jge r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
inc ecx
mov [ ebp + 0x1c ] ecx
cmp ecx edx
mov ecx [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x2c ]
inc eax
push eax
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] esi
cmp ecx eax
jge r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
inc esi
cmp [ ebp - 0x4 ] ecx
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
push ecx
push edx
push esi
call sub_4119e3
add esp 0xc
test eax eax
jne r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or edx ecx
movzx ecx [ ebx + 0x2 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ ebx + 0x3 ]
shl edx 0x6
and ecx 0x3f
or ecx edx
mov edx 0x4
jmp r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
test al 0x4
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x2c ]
inc eax
cmp [ ebp - 0x1c ] 0x0
push eax
mov [ ebp - 0x8 ] eax
push 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] esi
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov ecx [ ebp + 0x1c ]
mov edx 0x1
add ecx edx
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jle r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
test cl 0x20
jne r-xdata
mov [ ebp + 0x1c ] eax
mov eax [ ebp + 0x2c ]
inc eax
cmp [ ebp - 0x1c ] 0x0
push eax
mov [ ebp - 0x8 ] eax
push 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] esi
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov ecx [ ebp + 0x1c ]
inc ecx
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jle r-xdata
cmp ecx 0x100
jae r-xdata
movzx edx [ esi ]
and edx 0x3f
test cl 0x20
jne r-xdata
lea ebx [ ebx ]
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x1c ] eax
jge r-xdata
jmp [ eax * 4 + jump_table_43ee32 ]
jmp [ eax * 4 + jump_table_43edf2 ]
mov [ ebp + 0x1c ] 0x1
add esi ecx
jmp r-xdata
add esi ecx
jmp r-xdata
jmp r-xdata
mov edi edi
lea ebx [ ebx ]
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
add esi ecx
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
lea ecx [ ebp - 0x3c ]
mov [ edi + 0x94 ] ecx
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
lea eax [ edx * 4 ]
mov edx [ edi + 0xc ]
push eax
push ecx
push edx
call sub_410e60
mov eax [ ebp + 0x1c ]
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
mov [ ebp + 0x1c ] eax
mov al [ eax ]
add esp 0xc
cmp al 0x54
je r-xdata
cmp eax 0xfffffc1e
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax [ edi + 0x20 ]
jge r-xdata
lea ecx [ ecx ]
mov eax [ ebp + 0x1c ]
cmp eax [ edi + 0x20 ]
jge r-xdata
jmp r-xdata
movzx edx [ ebx + 0x4 ]
movzx eax [ ebx + 0x5 ]
shl edx 0x8
or edx eax
cmp [ ebx + edx + 0x3 ] 0x54
lea ebx [ ebx + edx + 0x3 ]
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
inc ecx
push ecx
mov ecx [ ebp + 0x18 ]
push 0x2
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
mov ecx [ ebp + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc eax
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
mov eax [ ebp - 0x24 ]
push ecx
push edx
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ edx + 0x4 ]
shl eax 0x8
or eax ecx
lea ecx [ eax + eax ]
mov [ edi + 0x84 ] eax
mov [ ebp - 0x14 ] eax
cmp ecx [ edi + 0x14 ]
jl r-xdata
cmp al 0x62
jne r-xdata
cmp ecx 0x1
je r-xdata
inc ebx
jmp r-xdata
inc ebx
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x3 ]
jmp r-xdata
shl edx 0x6
and eax 0x3f
mov ecx 0x1
jmp r-xdata
test cl 0x8
jne r-xdata
movzx eax [ eax + 0x2 ]
and ecx 0xf
shl ecx 0x6
jmp r-xdata
and eax 0x3f
shl ecx 0x6
or ecx eax
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
je r-xdata
and eax 0x1
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp ecx eax
je r-xdata
lea ecx [ ecx ]
mov edx [ ebp + 0x2c ]
inc edx
mov [ ebp - 0x8 ] edx
cmp esi [ edi + 0x6c ]
jae r-xdata
mov eax [ ebp + 0x2c ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
inc eax
push eax
push 0x0
push edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax 0x1
mov [ ebp - 0x20 ] eax
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
lea esp [ esp ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov edx [ ebp - 0x18 ]
push edx
push eax
call sub_42e2fd
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x1c ] 0x0
je r-xdata
test al 0x8
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x2
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x2
jmp r-xdata
lea ecx [ ecx ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
lea ecx [ ecx ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov [ ebp + 0x1c ] ecx
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x8 ]
inc edx
mov [ ebp + 0x1c ] edx
cmp edx ecx
jle r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
push 0x0
push edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
inc eax
add esi edx
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
and ecx 0x1
shl ecx 0x6
or edx ecx
movzx ecx [ ebx + 0x2 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ ebx + 0x3 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ ebx + 0x4 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ ebx + 0x5 ]
shl edx 0x6
and ecx 0x3f
or ecx edx
mov edx 0x6
and ecx 0x3
shl ecx 0x6
or edx ecx
movzx ecx [ ebx + 0x2 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ ebx + 0x3 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ ebx + 0x4 ]
shl edx 0x6
and ecx 0x3f
or ecx edx
mov edx 0x5
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov edx eax
cmp eax ecx
jge r-xdata
mov [ ebp + 0x1c ] eax
cmp eax ecx
jge r-xdata
mov [ edi + 0x5c ] edx
cmp [ edi + 0x7c ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ ebp + 0x1c ]
mov edx 0x1
add ecx edx
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jle r-xdata
test cl 0x10
jne r-xdata
movzx edx [ esi ]
and ecx 0x1f
shl ecx 0x6
and edx 0x3f
or ecx edx
inc esi
jmp r-xdata
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp eax edx
jge r-xdata
mov [ ebp + 0x1c ] eax
cmp eax edx
jge r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jle r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
mov edx [ edi + 0x30 ]
movzx ecx [ ecx + edx ]
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
or ecx edx
inc esi
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
sub edx ecx
mov ecx [ edi + 0x6c ]
sub ecx esi
cmp edx ecx
jbe r-xdata
cmp ecx edx
jge r-xdata
cmp ecx edx
jge r-xdata
cmp ecx edx
jge r-xdata
cmp ecx edx
jge r-xdata
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp edx 0x7fffffff
jge r-xdata
cmp edx 0x7fffffff
jge r-xdata
mov eax [ edi + 0x6c ]
sub edx ecx
sub eax esi
cmp edx eax
jbe r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0x9
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0x9
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xa
jl r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx edx [ esi ]
mov eax [ edi + 0x34 ]
mov dl [ edx + eax ]
inc esi
and dl 0x4
jne r-xdata
movzx eax [ esi ]
mov edx [ edi + 0x34 ]
mov al [ eax + edx ]
inc esi
and al 0x4
je r-xdata
movzx edx [ esi ]
mov eax [ edi + 0x34 ]
mov dl [ edx + eax ]
inc esi
and dl 0x1
jne r-xdata
movzx eax [ esi ]
mov edx [ edi + 0x34 ]
mov al [ eax + edx ]
inc esi
and al 0x1
je r-xdata
movzx edx [ esi ]
mov eax [ edi + 0x34 ]
mov dl [ edx + eax ]
inc esi
and dl 0x10
jne r-xdata
movzx eax [ esi ]
mov edx [ edi + 0x34 ]
mov al [ eax + edx ]
inc esi
and al 0x10
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi + 0x6c ]
cmp esi eax
jae r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] eax
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] eax
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] eax
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] eax
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] eax
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
inc esi
mov [ ebp - 0x4 ] eax
cmp eax 0xc0
jb r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x28 ]
push ecx
mov ecx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
movzx edx al
movzx eax [ edx + r--data ]
add eax [ ebp + 0x1c ]
push ecx
push eax
push esi
call sub_437262
add esp 0x28
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x3c ]
mov [ edi + 0x94 ] eax
mov eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x120 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x120 ]
cmp ecx edx
je r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp eax [ edi + 0x28 ]
jbe r-xdata
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x1c ]
add eax [ edi + 0x24 ]
inc ecx
mov [ ebp + 0x1c ] ecx
cmp ecx [ edi + 0x20 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp eax [ edi + 0x28 ]
jbe r-xdata
movzx eax [ ecx ]
movzx edx [ ecx + 0x1 ]
shl eax 0x8
or eax edx
cmp eax [ ebp - 0x24 ]
je r-xdata
mov edi edi
add ebx [ ebp + 0x1c ]
jmp r-xdata
cmp eax 0xfffffc1e
jne r-xdata
mov ebx [ ebp - 0x24 ]
jmp r-xdata
mov ebx [ ebp + 0x1c ]
jmp r-xdata
mov edx [ edi + 0x10 ]
sub edx eax
mov eax [ edi + 0xc ]
mov edx [ eax + edx * 4 ]
mov [ eax + ecx * 4 ] edx
mov edx [ edi + 0xc ]
mov eax esi
sub eax [ edi + 0x68 ]
mov [ edx + ecx * 4 + 0x4 ] eax
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x14 ]
cmp [ ebp + 0x18 ] ecx
jg r-xdata
mov [ edi + 0x38 ] 0x1
jmp r-xdata
cmp [ ebx ] 0x55
mov eax [ ebp - 0x20 ]
mov [ ebp + 0x20 ] eax
je r-xdata
mov al [ eax + 0x1 ]
cmp al [ edi + 0x2d ]
jne r-xdata
and eax 0x1
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x5 ]
and eax 0x3
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x4 ]
jmp r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or edx ecx
movzx ecx [ eax + 0x2 ]
movzx eax [ eax + 0x3 ]
jmp r-xdata
or ecx edx
inc ebx
jmp r-xdata
inc ebx
jmp r-xdata
inc ebx
jmp r-xdata
inc ebx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax [ ebp - 0x8 ]
jle r-xdata
dec esi
cmp esi [ ebp - 0x14 ]
jae r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x18 ]
shr eax 0x3
mov al [ eax + ecx ]
test al dl
je r-xdata
mov ecx esi
dec esi
cmp ecx [ ebp - 0x14 ]
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
mov edx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] edx
jge r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] edx
jle r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jg r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x20 ]
mov ecx 0x1
add eax ecx
mov [ ebp + 0x1c ] eax
cmp eax [ ebp - 0xc ]
jl r-xdata
test al 0x20
jne r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
push eax
call sub_42e2fd
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc0
jb r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
test al 0x4
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x3
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx edx [ esi ]
cmp ecx edx
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
cmp [ ebp - 0x4 ] ecx
jne r-xdata
mov [ edi + 0x5c ] edx
cmp [ edi + 0x7c ] edx
jle r-xdata
mov edx 0x1
mov ecx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] ecx
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ edi + 0x6c ]
sub eax edx
cmp esi eax
ja r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx 0x1
cmp esi [ edi + 0x6c ]
jae r-xdata
jle r-xdata
jmp r-xdata
test cl 0x8
jne r-xdata
movzx edx [ esi ]
and ecx 0xf
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x2
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] edx
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax 0x1
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
inc ecx
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jle r-xdata
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0xc
jne r-xdata
cmp [ ebp - 0x10 ] 0xc
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
add esi edx
jmp r-xdata
mov esi [ edi + 0x6c ]
lea esp [ esp ]
mov edi edi
lea esp [ esp ]
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
lea ebx [ ebx ]
mov edi edi
lea ebx [ ebx ]
cmp ecx edx
jge r-xdata
cmp ecx edx
jge r-xdata
mov esi [ edi + 0x6c ]
jmp r-xdata
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jge r-xdata
add esi edx
jmp r-xdata
mov esi [ edi + 0x6c ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx 0x1
cmp esi [ edi + 0x6c ]
jae r-xdata
mov ecx 0x1
lea ecx [ ecx ]
mov ecx 0x1
mov edi edi
mov ecx 0x1
lea esp [ esp ]
jmp r-xdata
mov ecx 0x1
lea esp [ esp ]
lea esp [ esp ]
mov ecx 0x1
lea esp [ esp ]
mov eax [ edi + 0x6c ]
sub eax [ edi + 0x1c ]
cmp esi eax
ja r-xdata
mov edx [ edi + 0x6c ]
push 0x0
lea ecx [ edi + 0x1c ]
push ecx
push edx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
movzx eax [ esi ]
sub eax 0xa
inc esi
cmp eax 0x7b
ja r-xdata
cmp eax 0x20
je r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
cmp eax 0x20
je r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
cmp eax 0xd
jle r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xa
jl r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ edi + 0x6c ]
sub eax [ edi + 0x1c ]
cmp esi eax
ja r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edi + 0x6c ]
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
inc esi
cmp esi eax
jae r-xdata
cmp [ ebp - 0x4 ] 0xd
ja r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp [ ebp - 0x4 ] 0x180e
ja r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp [ ebp - 0x4 ] 0x180e
ja r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp [ ebp - 0x4 ] 0x85
ja r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp [ ebp - 0x4 ] 0x85
ja r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp [ ebp - 0x4 ] 0x80
jae r-xdata
movzx edx [ esi ]
and edx 0x3f
test al 0x20
jne r-xdata
mov edx [ edi + 0x34 ]
movzx eax al
mov al [ eax + edx ]
inc esi
and al 0x4
je r-xdata
inc esi
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx edx al
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x1
jne r-xdata
movzx edx al
mov eax [ edi + 0x34 ]
mov dl [ edx + eax ]
inc esi
and dl 0x1
je r-xdata
inc esi
cmp esi [ edi + 0x6c ]
jae r-xdata
mov edx [ edi + 0x34 ]
movzx eax al
test [ eax + edx ] 0x10
jne r-xdata
movzx edx al
mov eax [ edi + 0x34 ]
mov dl [ edx + eax ]
inc esi
and dl 0x10
je r-xdata
push eax
call [ rw-data ]
add esp 0x4
push ecx
call [ rw-data ]
mov eax [ ebp - 0x24 ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax [ edi + 0x20 ]
jge r-xdata
lea ebx [ ebx ]
movzx ecx [ eax ]
movzx edx [ eax + 0x1 ]
shl ecx 0x8
or ecx edx
cmp ecx [ ebp - 0x24 ]
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax [ edi + 0x20 ]
jge r-xdata
lea ebx [ ebx ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x1c ]
add ecx [ edi + 0x24 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax [ edi + 0x20 ]
jl r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
or ecx edx
add ebx ecx
cmp [ ebx ] 0x54
je r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
cmp [ edi + 0x94 ] 0x0
je r-xdata
add ecx 0x2
mov [ ebp + 0x18 ] ecx
add ebx 0x3
jmp r-xdata
cmp esi [ ebp - 0x18 ]
jne r-xdata
and ecx 0x1
shl ecx 0x6
or edx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl edx 0x6
or edx ecx
movzx ecx [ eax + 0x3 ]
and ecx 0x3f
shl edx 0x6
or edx ecx
movzx ecx [ eax + 0x4 ]
movzx eax [ eax + 0x5 ]
and ecx 0x3
shl ecx 0x6
or edx ecx
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
shl edx 0x6
or edx ecx
movzx ecx [ eax + 0x3 ]
movzx eax [ eax + 0x4 ]
jmp r-xdata
shl edx 0x6
and ecx 0x3f
mov [ ebp - 0x14 ] esi
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
push 0x0
push edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
push eax
push edi
push ecx
push esi
push edx
call sub_42ebce
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0xff
jbe r-xdata
movzx edx [ esi + 0x1 ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
mov eax esi
dec esi
cmp eax [ ebp - 0x14 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov [ ebp - 0x20 ] ecx
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
test al 0x10
jne r-xdata
movzx ecx [ esi + 0x1 ]
and eax 0x1f
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
test al 0x20
jne r-xdata
and eax 0x1
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
and ecx 0x1
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x4 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x5
and ecx 0x3
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x4
jmp r-xdata
movzx eax [ esi ]
inc esi
cmp [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x2c ]
inc eax
mov [ ebp - 0x8 ] eax
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov edx [ ebp + 0x1c ]
inc edx
inc esi
mov [ ebp + 0x1c ] edx
cmp edx eax
jl r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x30 ]
movzx eax [ ecx + edx ]
inc esi
cmp [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x2c ]
inc eax
mov [ ebp - 0x8 ] eax
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov ecx [ ebp + 0x1c ]
inc ecx
inc esi
mov [ ebp + 0x1c ] ecx
cmp ecx eax
jl r-xdata
jmp r-xdata
mov edx [ edi + 0x6c ]
sub edx [ ebp - 0x10 ]
cmp esi edx
ja r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
inc eax
push eax
push 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
push ecx
push edx
push esi
call sub_4119e3
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x1c ] eax
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] ecx
jge r-xdata
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc eax
push eax
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
test cl 0x4
jne r-xdata
movzx edx [ esi ]
and ecx 0x7
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x3
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x1c ] eax
jge r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
cmp [ ebp - 0x4 ] ecx
je r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
inc eax
push eax
push 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ecx 0xc0
jb r-xdata
jmp r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x3
jmp r-xdata
mov ecx [ ebp - 0x10 ]
movzx eax [ esi ]
add ecx 0xfffffffa
inc esi
cmp ecx 0xf
ja r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xd
jne r-xdata
movzx eax [ esi ]
cmp eax 0x9
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0x9
je r-xdata
movzx eax [ esi ]
cmp eax 0xa
je r-xdata
movzx eax [ esi ]
cmp eax 0xa
je r-xdata
movzx eax [ esi ]
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx eax [ esi ]
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
movzx eax [ esi ]
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
je r-xdata
movzx eax [ esi ]
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
je r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
mov eax [ edi + 0x6c ]
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax [ ebp + 0x2c ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
inc eax
push eax
push 0x0
push edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
mov eax 0x1
mov [ ebp - 0x10 ] eax
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ eax + lookup_table_43ed76 ]
jmp [ eax * 4 + jump_table_43ed66 ]
cmp eax 0xa0
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp eax 0xa0
jne r-xdata
jmp r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0xd
jle r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
inc esi
cmp esi [ edi + 0x6c ]
jae r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp [ ebp - 0x4 ] 0x85
je r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x205f
ja r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x205f
ja r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2028
jb r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
mov eax [ edi + 0x34 ]
mov edx [ ebp - 0x4 ]
test [ edx + eax ] 0x4
jne r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
inc esi
jmp r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x2
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x14 ]
movzx edx [ eax ]
movzx ecx [ eax + 0x1 ]
shl edx 0x8
or ecx edx
mov edx [ edi + 0x94 ]
cmp ecx [ edx + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x2
mov [ ebp - 0x24 ] ecx
lea ebx [ ebx ]
mov ecx [ ebp - 0x14 ]
movzx eax [ ecx ]
movzx edx [ ecx + 0x1 ]
shl eax 0x8
or eax edx
add eax eax
cmp eax [ ebp + 0x18 ]
jge r-xdata
mov ecx [ edi + 0x94 ]
cmp [ ecx + 0x4 ] eax
jne r-xdata
cmp [ edx ] 0x61
mov edx [ ebp + 0x2c ]
sbb eax eax
and eax 0xfffffffe
add eax 0x2
inc edx
cmp [ ebx ] 0x57
mov [ ebp + 0x28 ] eax
push edx
jne r-xdata
mov eax [ ebp + 0x2c ]
inc eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
push edx
push edi
push eax
push esi
push ecx
call sub_42ebce
add esp 0x14
test eax eax
je r-xdata
lea esp [ esp ]
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
lea esp [ esp ]
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x18 ]
shr eax 0x3
mov al [ eax + ecx ]
test al dl
je r-xdata
cmp ecx 0x4e
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
movzx eax [ esi ]
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x18 ]
shr eax 0x3
mov al [ eax + ecx ]
inc esi
test al dl
je r-xdata
cmp eax 0xff
jbe r-xdata
test al 0x20
jne r-xdata
mov dl [ esi - 0x1 ]
dec esi
and dl 0xc0
cmp dl 0x80
je r-xdata
test al 0x8
jne r-xdata
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x6
and eax 0x3f
or eax edx
mov [ ebp - 0x20 ] 0x3
jmp r-xdata
and ecx 0x3f
shl eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
cmp esi [ ebp - 0x14 ]
jae r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
cmp esi [ ebp - 0x14 ]
jae r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x24 ]
push eax
push ecx
push esi
call sub_4119e3
add esp 0xc
test eax eax
jne r-xdata
cmp esi [ ebp - 0x14 ]
je r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x10 ]
inc eax
add esi edx
mov [ ebp + 0x1c ] eax
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
mov edx [ ebp + 0x14 ]
mov [ edi + 0x9c ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x2c ]
inc ecx
mov [ ebp - 0x8 ] ecx
lea esp [ esp ]
cmp esi [ edi + 0x78 ]
jbe r-xdata
inc edx
inc esi
cmp edx ecx
jl r-xdata
mov eax esi
dec esi
cmp eax [ ebp - 0x14 ]
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
movzx edx [ esi + 0x1 ]
and edx 0x3f
test al 0x20
jne r-xdata
and ecx edx
movzx edx [ esi ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x4 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x5
movzx edx [ esi ]
and ecx 0x3
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x4
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x9c ] ecx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x2c ]
inc eax
mov [ ebp - 0x8 ] eax
cmp esi [ edi + 0x78 ]
jbe r-xdata
inc eax
inc esi
cmp eax [ ebp - 0xc ]
jl r-xdata
nop
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp ecx 0x100
jae r-xdata
movzx eax [ esi + 0x1 ]
and eax 0x3f
test cl 0x20
jne r-xdata
and ecx 0x1
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x4 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x5
and ecx 0x3
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x1 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x2 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
movzx edx [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
add esi 0x4
jmp r-xdata
jmp [ ecx * 4 + jump_table_43eeb2 ]
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x1c ]
cmp esi edx
ja r-xdata
mov ecx [ edi + 0x6c ]
push 0x0
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffa
cmp ecx 0xf
ja r-xdata
test al 0x20
jne r-xdata
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x1c ]
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edi + 0x6c ]
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x2c ]
inc edx
mov [ ebp - 0x8 ] edx
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax [ edi + 0x6c ]
sub eax [ edi + 0x1c ]
cmp esi eax
ja r-xdata
mov ecx [ edi + 0x6c ]
push 0x0
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0xa
je r-xdata
inc esi
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp eax 0x20
je r-xdata
inc ecx
inc esi
cmp ecx edx
jl r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0xb
je r-xdata
inc ecx
inc esi
cmp ecx edx
jl r-xdata
cmp eax 0xb
je r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
movzx eax [ esi ]
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
je r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
inc esi
cmp esi eax
jae r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov ecx esi
dec esi
cmp ecx [ ebp - 0x14 ]
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0xd
jne r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x180e
ja r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x85
ja r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp eax 0x100
jae r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp [ edi + 0x1c ] 0x1
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ edi + 0x60 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax ecx
jle r-xdata
cmp eax 0x85
jne r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
lea ebx [ ebx ]
cmp [ edi + 0x1c ] 0x1
je r-xdata
jmp r-xdata
inc esi
cmp esi [ edi + 0x6c ]
jb r-xdata
cmp [ edi + 0x60 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ ebp - 0x4 ] 0xa
je r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x3000
je r-xdata
je r-xdata
cmp [ ebp - 0x4 ] 0xa0
ja r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x3000
jne r-xdata
je r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
cmp [ ebp - 0x4 ] 0xa0
ja r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
cmp [ ebp - 0x4 ] 0x2029
jbe r-xdata
cmp [ ebp - 0x4 ] 0xa
jb r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xfffffff6
cmp eax 0x3
ja r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx edx [ eax ]
movzx ecx [ eax + 0x1 ]
mov eax [ edi + 0x94 ]
shl edx 0x8
or ecx edx
cmp ecx [ eax + 0x4 ]
je r-xdata
mov [ ebp - 0x18 ] 0x0
cmp eax [ edi + 0x28 ]
ja r-xdata
mov ecx [ ebp - 0x14 ]
movzx eax [ ecx ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax ecx
add eax eax
cmp eax [ ebp + 0x18 ]
jge r-xdata
mov [ ebp - 0x18 ] 0x0
cmp ecx [ edi + 0x28 ]
ja r-xdata
mov edx [ edi + 0xc ]
cmp [ edx + eax * 4 ] 0x0
jge r-xdata
mov ebx ecx
mov eax [ ebx ]
mov [ edi + 0x94 ] eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ edi + 0xc ]
add ecx ecx
add ecx ecx
push ecx
push edx
push eax
call sub_410e60
mov ecx [ ebx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov ebx [ ebx + 0x8 ]
add esp 0xc
mov [ ebp + 0x18 ] ecx
mov [ ebp + 0x20 ] edx
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
mov eax [ ebp + 0x1c ]
push ecx
push edx
push eax
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
add ebx 0x3
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp + 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
push edx
push edi
push eax
push esi
push ecx
call sub_42ebce
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ esi - 0x1 ]
dec esi
and al 0xc0
cmp al 0x80
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x20 ] 0x3
jmp r-xdata
or eax edx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ ebp - 0x18 ]
shr eax 0x3
mov al [ eax + ecx ]
test al dl
je r-xdata
cmp [ ebp - 0x4 ] 0x4e
je r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
test al 0x4
jne r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
and ecx 0x3f
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
shl ecx 0x6
and eax 0x3f
mov [ ebp - 0x20 ] 0x4
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] edx
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
dec esi
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x1c ] eax
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
dec esi
test eax eax
jne r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x20 ]
add esi [ ebp - 0x10 ]
inc [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
sub esi [ ebp - 0x10 ]
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
jmp r-xdata
movzx ecx [ esi ]
inc esi
cmp [ ebp - 0x4 ] ecx
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
dec esi
cmp esi [ ebp - 0x14 ]
jae r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
jmp r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
mov [ edi + 0x5c ] edx
cmp [ edi + 0x7c ] edx
jg r-xdata
mov eax [ ebp + 0x1c ]
inc eax
add esi edx
mov [ ebp + 0x1c ] eax
cmp eax ecx
jl r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax edx
mov edx 0x2
jmp r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x30 ]
movzx eax [ ecx + edx ]
inc esi
cmp [ ebp - 0x4 ] eax
je r-xdata
cmp eax 0x100
jae r-xdata
test al 0x20
jne r-xdata
dec esi
cmp esi [ ebp - 0x14 ]
jae r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
jmp r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
mov edx [ edi + 0x30 ]
movzx ecx [ ecx + edx ]
mov edx [ ebp - 0xc ]
test cl 0x10
jne r-xdata
and ecx 0x1f
shl ecx 0x6
or ecx eax
mov eax 0x2
jmp r-xdata
add eax 0xfffffff6
cmp eax 0x7b
ja r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0xa
jb r-xdata
cmp eax 0xa
jb r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x4
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x1
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
jmp r-xdata
jmp [ ecx * 4 + jump_table_43ee72 ]
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
jmp r-xdata
cmp esi [ ebp - 0x14 ]
jae r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov cl [ esi ]
cmp cl [ edi + 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
inc esi
cmp [ edi + 0x60 ] 0x0
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp eax 0xa0
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp eax 0xa0
jne r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
inc eax
inc esi
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi + 0x6c ]
sub eax [ edi + 0x1c ]
cmp esi eax
ja r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edi + 0x6c ]
lea edx [ edi + 0x1c ]
push edx
push ecx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov ecx [ ebp + 0x1c ]
inc ecx
mov [ ebp + 0x1c ] ecx
cmp ecx edx
jl r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
jmp r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jg r-xdata
cmp eax 0xa
je r-xdata
inc esi
cmp esi [ edi + 0x6c ]
jae r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or eax ecx
mov ecx 0x2
jmp r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jg r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jg r-xdata
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
movzx ecx [ esi + 0x1 ]
and ecx 0x3f
test al 0x20
jne r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jg r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov [ edi + 0x5c ] ecx
cmp [ edi + 0x7c ] ecx
jg r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
je r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x2d ]
je r-xdata
cmp [ esi ] 0xa
jne r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
inc esi
cmp esi [ edi + 0x6c ]
jb r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x2d ]
je r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
cmp [ esi ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xfffffff5
cmp eax 0x1
ja r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] ecx
jle r-xdata
cmp [ ebp - 0x4 ] 0x2000
jb r-xdata
cmp [ ebp - 0x4 ] 0x1680
je r-xdata
je r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2000
jb r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1680
jne r-xdata
je r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xd
jbe r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
jmp r-xdata
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp + 0x1c ] eax
cmp eax [ edi + 0x20 ]
jl r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ edi + 0x24 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
push eax
mov eax [ ebp - 0x10 ]
add eax 0x2
push eax
call sub_414d30
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp + 0x1c ] eax
cmp eax [ edi + 0x20 ]
jl r-xdata
mov edx [ edi + 0xc ]
cmp [ edx + eax * 4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ edi + 0x24 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
push eax
mov eax [ ebp - 0x10 ]
add eax 0x2
push eax
call sub_414d30
add esp 0x8
test eax eax
jne r-xdata
add ebx 0x3
cmp [ ebp + 0x28 ] eax
jne r-xdata
sub esi [ ebp - 0x10 ]
cmp esi [ ebp - 0x14 ]
jae r-xdata
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
add esi [ ebp - 0x10 ]
inc [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x20 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax [ ebp - 0xc ]
jl r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x20 ] 0x4
jmp r-xdata
shl edx 0x6
and eax 0x3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
jmp r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
movzx edx [ esi + 0x1 ]
and eax ecx
movzx ecx [ esi + 0x3 ]
and edx 0x3f
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x4 ]
shl edx 0x6
and ecx 0x3f
or edx ecx
movzx ecx [ esi + 0x5 ]
shl edx 0x6
and eax 0x3f
or eax edx
mov [ ebp - 0x20 ] 0x6
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
and eax 0x3
shl eax 0x6
and ecx 0x3f
or ecx eax
movzx eax [ esi + 0x3 ]
and edx 0x3f
shl ecx 0x6
or ecx edx
movzx edx [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
mov [ ebp - 0x20 ] 0x5
jmp r-xdata
or eax ecx
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
test al 0x20
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov edi edi
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x6
and eax 0x3f
or eax edx
mov edx 0x3
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
mov edx [ edi + 0x30 ]
movzx eax [ eax + edx ]
test al 0x10
jne r-xdata
movzx ecx [ esi ]
and eax 0x1f
shl eax 0x6
and ecx 0x3f
or eax ecx
inc esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x18 ]
push 0x0
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edi
push edx
push eax
push ecx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
mov cl [ esi - 0x1 ]
dec esi
and cl 0xc0
cmp cl 0x80
je r-xdata
add esi eax
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
test cl 0x8
jne r-xdata
and ecx 0xf
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
mov eax 0x3
jmp r-xdata
movzx edx [ eax + lookup_table_43ef02 ]
jmp [ edx * 4 + jump_table_43eef2 ]
cmp eax 0x20
je r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0xd
jbe r-xdata
cmp eax 0xd
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] ecx
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x1c ] 0x1
je r-xdata
cmp eax 0xd
ja r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
cmp [ edi + 0x1c ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
dec esi
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ edi + 0x1c ] 0x1
je r-xdata
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp eax 0xb
je r-xdata
inc ecx
cmp ecx edx
jl r-xdata
jmp r-xdata
inc ecx
inc esi
cmp ecx edx
jl r-xdata
cmp eax 0xd
je r-xdata
cmp eax 0xd
je r-xdata
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
mov eax [ edi + 0x6c ]
sub eax [ edi + 0x1c ]
cmp esi eax
ja r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov edx [ edi + 0x6c ]
lea ecx [ edi + 0x1c ]
push ecx
push edx
push eax
push esi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
mov eax [ edi + 0x6c ]
inc esi
cmp esi eax
jae r-xdata
mov cl [ esi ]
cmp cl [ edi + 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp esi eax
jae r-xdata
jmp r-xdata
inc esi
cmp esi eax
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
push edx
push eax
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
lea ebx [ ebx ]
jmp r-xdata
add esi ecx
cmp [ edi + 0x60 ] 0x0
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
mov ecx 0x3
jmp r-xdata
jmp r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
mov ecx 0x1
cmp eax 0xa0
ja r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
or eax ecx
jmp r-xdata
xor ecx ecx
mov ecx 0x1
jmp r-xdata
cmp eax 0xa
jb r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
or eax ecx
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x10 ] eax
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
or eax ecx
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
mov ecx 0x1
add eax ecx
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
or eax ecx
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
mov ecx 0x1
add eax ecx
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
or eax ecx
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x10 ] eax
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
or eax ecx
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x10 ]
mov ecx 0x1
add eax ecx
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
or eax ecx
inc esi
jmp r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
jmp r-xdata
inc esi
jmp r-xdata
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x200a
jbe r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x9
je r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
cmp [ ebp - 0x4 ] 0x200a
jbe r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x9
je r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x1 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax [ edi + 0x24 ]
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
push eax
push edx
call sub_414d30
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax [ edi + 0x24 ]
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
push eax
push edx
call sub_414d30
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
inc eax
push eax
mov eax [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edi
push ecx
mov ecx [ ebp + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_437262
add esp 0x28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x1c ]
jmp r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
cmp esi [ edi + 0x6c ]
jb r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] ecx
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
and eax 0x1
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x20 ] 0x6
and eax 0x3
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x20 ] 0x5
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ebp + 0x1c ] ecx
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
test al 0x10
jne r-xdata
movzx edx [ esi ]
and eax 0x1f
shl eax 0x6
and edx 0x3f
or eax edx
inc esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ esi - 0x1 ]
dec esi
and dl 0xc0
cmp dl 0x80
je r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x3 ]
shl edx 0x6
and eax 0x3f
or eax edx
mov edx 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
inc [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edi
push eax
push ecx
push edx
push ebx
push esi
call sub_437262
add esp 0x28
test eax eax
je r-xdata
test al 0x8
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x2
jmp r-xdata
mov edx esi
dec esi
cmp edx [ ebp - 0x14 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
test cl 0x4
jne r-xdata
and ecx 0x7
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
mov eax 0x4
jmp r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp [ edi + 0x60 ] 0x0
jne r-xdata
cmp eax 0xa0
je r-xdata
cmp eax 0xa0
jne r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x85
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
cmp eax 0x85
je r-xdata
je r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x4
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x1
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x10
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x2d ]
je r-xdata
cmp eax 0xc
je r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x85
jne r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
mov eax [ edi + 0x6c ]
inc esi
cmp esi eax
jae r-xdata
mov cl [ esi ]
cmp cl [ edi + 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
lea esp [ esp ]
cmp [ edi + 0x1c ] 0x1
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ esi - 0x1 ]
dec esi
and al 0xc0
cmp al 0x80
je r-xdata
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
inc esi
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ esi + 0x3 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
mov ecx 0x4
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp eax 0x2000
jb r-xdata
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x8 ]
mov ecx 0x1
add eax ecx
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
mov eax [ ebp + 0x1c ]
add esi [ ebp - 0x8 ]
mov ecx 0x1
add eax ecx
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0x14
sete al
cmp ecx eax
je r-xdata
cmp eax 0xd
jbe r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
mov [ ebp - 0x10 ] ecx
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
jmp r-xdata
jmp r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
or eax ecx
mov [ ebp - 0x10 ] ecx
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
mov [ ebp - 0x10 ] ecx
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
cmp [ ebp - 0x4 ] 0x202f
je r-xdata
cmp [ ebp - 0x4 ] 0x20
je r-xdata
cmp [ ebp - 0x4 ] 0x202f
jne r-xdata
cmp [ ebp - 0x4 ] 0x20
jne r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jg r-xdata
cmp esi [ edi + 0x78 ]
jbe r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test al 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0xf
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x2
jmp r-xdata
and eax 0x1
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x3 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x4 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x5 ]
shl edx 0x6
and eax 0x3f
or eax edx
mov edx 0x6
and eax 0x3
shl eax 0x6
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x3 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ esi + 0x4 ]
shl edx 0x6
and eax 0x3f
or eax edx
mov edx 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
test al 0x4
jne r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x3
jmp r-xdata
and ecx 0x1
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x5 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
mov eax 0x6
and ecx 0x3
shl ecx 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or ecx eax
mov eax 0x5
jmp r-xdata
cmp [ esi ] 0xa
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ edi + 0x60 ] 0x0
jne r-xdata
cmp eax 0x2027
jbe r-xdata
cmp esi [ edi + 0x6c ]
jae r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
cmp eax 0x3000
jne r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
cmp eax 0x2029
jbe r-xdata
cmp eax 0xa
jb r-xdata
cmp eax 0x2029
ja r-xdata
cmp eax 0xa
jb r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
cmp eax 0x85
jne r-xdata
inc ecx
inc esi
cmp ecx edx
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
inc eax
mov [ ebp + 0x1c ] eax
cmp eax edx
jl r-xdata
mov edi edi
cmp [ edi + 0x1c ] 0x1
je r-xdata
jmp r-xdata
inc esi
cmp esi eax
jb r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x2d ]
je r-xdata
cmp eax 0xc
je r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ esi + 0x3 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ esi + 0x4 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ esi + 0x5 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
mov ecx 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ esi + 0x3 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ esi + 0x4 ]
shl ecx 0x6
and eax 0x3f
or eax ecx
mov ecx 0x5
jmp r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0x12
sete al
cmp ecx eax
je r-xdata
cmp eax 0x200a
jbe r-xdata
mov [ ebp - 0x8 ] ecx
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp eax 0x9
je r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x8 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
mov [ ebp - 0x8 ] ecx
cmp esi [ edi + 0x6c ]
jae r-xdata
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x8 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x10 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x10 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
shl ecx 0x6
and eax 0x3f
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x10 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x10 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x10 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax 0x1
mov [ edi + 0x5c ] eax
cmp [ edi + 0x7c ] eax
jle r-xdata
movzx edx [ esi ]
movzx ecx [ esi + 0x1 ]
and edx 0x3f
and ecx 0x3f
test al 0x4
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and eax 0x7
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x3
jmp r-xdata
and eax 0x1
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x6
or eax edx
movzx edx [ esi + 0x3 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x4
jmp r-xdata
inc esi
jmp r-xdata
jmp r-xdata
cmp eax 0x2029
ja r-xdata
cmp [ esi ] 0xa
jne r-xdata
jbe r-xdata
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp eax 0xd
jbe r-xdata
jmp r-xdata
cmp eax 0xd
ja r-xdata
jmp r-xdata
jmp r-xdata
inc esi
cmp esi eax
jb r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x2d ]
je r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
jne r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x5 ]
mov [ ebp - 0x10 ] 0x6
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ esi + 0x2 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x3 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x9c ] eax
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
and eax 0x1
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
movzx edx [ esi + 0x4 ]
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add esi 0x5
and eax 0x3
shl eax 0x6
or eax edx
movzx edx [ esi + 0x2 ]
shl eax 0x6
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
add esi 0x4
jmp r-xdata
inc esi
jmp r-xdata
cmp eax 0xc
ja r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp eax 0x2028
je r-xdata
xor ecx ecx
jmp r-xdata
jmp r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0x2029
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_43ef7e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x54
push esi
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0xfffffffe
pop esi
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ eax ] 0x50435245
je r-xdata
movzx eax [ eax + 0x10 ]
mov [ esi ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x54 ]
push ecx
push 0x0
lea edx [ ebp - 0x28 ]
push edx
push eax
call sub_437144
add esp 0x10
test eax eax
jne r-xdata
mov eax 0xfffffffc
pop esi
mov esp ebp
pop ebp
retn
sub_43efd3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
or esi 0xffffffff
nop
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn
movzx edx [ edx + lookup_table_43f08f ]
jmp [ edx * 4 + jump_table_43f07f ]
xor edx edx
cmp ecx 0x58
sete dl
push edx
push edi
push eax
call sub_43efd3
add esp 0xc
test eax eax
js r-xdata
add eax 0x2
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test esi esi
jns r-xdata
test esi esi
jns r-xdata
cmp esi eax
je r-xdata
mov esi eax
jmp r-xdata
movzx eax [ eax + 0x1 ]
cmp esi eax
jne r-xdata
test [ edi ] 0x1
movzx esi [ eax + 0x1 ]
je r-xdata
movzx ecx [ ebx + 0x1 ]
movzx edx [ ebx + 0x2 ]
shl ecx 0x8
or ecx edx
add ebx ecx
cmp [ ebx ] 0x54
je r-xdata
or esi 0x100
jmp r-xdata
push 0x1
push 0x1
lea eax [ ebx + 0x3 ]
push edi
push eax
call sub_42f272
movzx ecx [ eax ]
lea edx [ ecx - 0x1c ]
add esp 0x10
cmp edx 0x44
ja r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_43f0d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esp [ esp ]
cmp eax 0x5e
jne r-xdata
add esi 0x3
cmp [ esi ] 0x53
jne r-xdata
cmp eax 0x5f
jne r-xdata
mov edx [ ebp + 0xc ]
push ebx
push edx
jmp r-xdata
mov al [ esi ]
cmp al 0x64
jb r-xdata
add esi 0x6
cmp eax 0x58
je r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ esi + 0x4 ]
shl ecx 0x8
or ecx eax
mov eax 0x1
cmp ecx 0x20
jge r-xdata
push esi
call sub_43f0d4
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
push ebx
push edx
push esi
call sub_43f0d4
add esp 0xc
test eax eax
je r-xdata
cmp al 0x68
jbe r-xdata
mov ecx [ ebp + 0xc ]
push ebx
push ecx
push esi
call sub_43f0d4
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x5d
je r-xdata
or eax [ ebp + 0xc ]
push ebx
push eax
shl eax cl
movzx edx [ edi + 0x1 ]
movzx eax [ edi + 0x2 ]
shl edx 0x8
or edx eax
add edi edx
cmp [ edi ] 0x54
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
lea esp [ esp ]
cmp eax 0x39
je r-xdata
movzx eax [ edi ]
movzx ecx [ eax + r--data ]
push 0x0
push 0x0
add ecx edi
push 0x0
push ecx
call sub_42f272
mov esi eax
movzx eax [ esi ]
add esp 0x10
cmp eax 0x60
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
push 0x0
push 0x0
push 0x0
add esi 0x3
push esi
call sub_42f272
mov esi eax
movzx eax [ esi ]
add esp 0x10
cmp [ esi + 0x1 ] 0xc
jne r-xdata
cmp eax 0x3a
je r-xdata
test [ ebp + 0xc ] ebx
jne r-xdata
cmp eax 0x42
je r-xdata
jmp r-xdata
cmp eax 0x1a
jne r-xdata
jmp r-xdata
sub_43f203
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
nop
cmp ecx 0x5f
jne r-xdata
mov edx [ ebp + 0x10 ]
jmp r-xdata
cmp ecx 0x58
je r-xdata
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x4 ]
shl ecx 0x8
or ecx edx
mov edx 0x1
cmp ecx 0x20
jge r-xdata
push ebx
push edx
push esi
push eax
call sub_43f203
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push ecx
push esi
push eax
call sub_43f203
add esp 0x10
test eax eax
je r-xdata
cmp ecx 0x5d
je r-xdata
or edx [ ebp + 0x10 ]
shl edx cl
movzx edx [ edi + 0x1 ]
movzx eax [ edi + 0x2 ]
shl edx 0x8
or edx eax
add edi edx
cmp [ edi ] 0x54
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
cmp ecx 0x60
je r-xdata
movzx eax [ edi ]
movzx ecx [ eax + r--data ]
push 0x0
push 0x2
add ecx edi
push esi
push ecx
call sub_42f272
movzx ecx [ eax ]
add esp 0x10
cmp ecx 0x5e
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp ecx 0x39
je r-xdata
cmp [ eax + 0x1 ] 0xd
jne r-xdata
cmp ecx 0x3a
je r-xdata
test [ ebp + 0x10 ] ebx
jne r-xdata
cmp ecx 0x42
je r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x2
je r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x1a
jne r-xdata
jmp r-xdata
sub_43f2e8
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
and eax 0x8
mov [ ebp - 0x8 ] eax
je r-xdata
mov al [ esi ]
cmp al 0x5c
jne r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
movzx eax al
test [ eax + edx ] 0x80
jne r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x34 ]
push 0x0
push eax
push edx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0x10 ]
push ecx
mov [ ebp + 0x8 ] 0x0
call sub_42f85b
add esp 0x14
cmp [ ebp + 0x8 ] 0x0
mov ebx eax
je r-xdata
movzx ecx [ esi ]
mov eax [ ebx + 0xc ]
test [ ecx + eax ] 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
mov ebx eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi ] 0x23
jne r-xdata
lea esp [ esp ]
inc esi
inc esi
cmp ebx 0xc0
jl r-xdata
mov al [ esi ]
cmp al 0x2a
je r-xdata
mov ecx [ ebp + 0x18 ]
lea esp [ esp ]
mov al [ esi + 0x1 ]
inc esi
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
movzx edx [ esi + 0x1 ]
inc esi
test [ edx + eax ] 0x1
jne r-xdata
mov [ ebp + 0x10 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test bl 0x20
jne r-xdata
cmp al 0x3f
je r-xdata
cmp [ esi ] 0x23
jne r-xdata
lea esp [ esp ]
mov ecx [ ebx + 0x58 ]
test ecx ecx
je r-xdata
test bl 0x10
jne r-xdata
movzx eax [ esi ]
and ebx 0x1f
and eax 0x3f
shl ebx 0x6
or ebx eax
jmp r-xdata
push 0x3
push r--data
push esi
call sub_416931
add esp 0xc
test eax eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
movzx edx [ esi + 0x1 ]
inc esi
test [ edx + eax ] 0x1
jne r-xdata
mov ecx [ ebx + 0x5c ]
mov edx [ ebx + 0x1c ]
sub edx ecx
cmp esi edx
ja r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jae r-xdata
test bl 0x8
jne r-xdata
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
and ebx 0xf
shl ebx 0x6
and ecx 0x3f
or ebx ecx
shl ebx 0x6
and edx 0x3f
or ebx edx
add esi 0x2
jmp r-xdata
test ebx ebx
js r-xdata
movzx edx [ esi ]
mov eax [ ecx + 0xc ]
test [ edx + eax ] 0x1
je r-xdata
lea esp [ esp ]
inc esi
cmp [ ebp + 0xc ] 0x0
mov [ ebp + 0x10 ] esi
je r-xdata
cmp al [ ebx + 0x60 ]
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
lea edx [ ebx + 0x5c ]
push edx
push eax
push ecx
push esi
call sub_42e9b5
add esp 0x14
test eax eax
je r-xdata
test bl 0x4
jne r-xdata
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
and eax 0x3f
and ebx 0x7
shl ebx 0x6
or eax ebx
shl eax 0x6
and ecx 0x3f
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
mov ebx eax
add esi 0x3
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xfffffffa
cmp eax 0x17
ja r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ecx - 0x6 ]
cmp eax 0x18
ja r-xdata
mov edx [ ecx + 0x5c ]
mov ecx [ ecx + 0x1c ]
sub ecx edx
cmp esi ecx
mov ecx [ ebp + 0x18 ]
ja r-xdata
mov eax [ ecx + 0x1c ]
cmp esi eax
jae r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov cl [ esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp ecx 0x1
je r-xdata
add esi [ ebx + 0x5c ]
mov [ ebp + 0x10 ] esi
jmp r-xdata
movzx edx [ esi ]
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
and ebx 0x1
shl ebx 0x6
and edx 0x3f
or ebx edx
shl ebx 0x6
and eax 0x3f
or ebx eax
movzx eax [ esi + 0x3 ]
shl ebx 0x6
and ecx 0x3f
or ebx ecx
movzx ecx [ esi + 0x4 ]
shl ebx 0x6
and eax 0x3f
or ebx eax
shl ebx 0x6
and ecx 0x3f
or ebx ecx
add esi 0x5
jmp r-xdata
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
and eax 0x3f
and ebx 0x3
shl ebx 0x6
or eax ebx
shl eax 0x6
and ecx 0x3f
or eax ecx
movzx ecx [ esi + 0x3 ]
shl eax 0x6
and edx 0x3f
or eax edx
shl eax 0x6
and ecx 0x3f
or eax ecx
mov ebx eax
add esi 0x4
jmp r-xdata
movzx eax [ eax + lookup_table_43fe64 ]
jmp [ eax * 4 + jump_table_43fe34 ]
movzx eax [ eax + lookup_table_43fe18 ]
jmp [ eax * 4 + jump_table_43fde8 ]
inc esi
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp al [ ecx + 0x60 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x18 ]
add ecx 0x5c
push ecx
push eax
push edx
push esi
call sub_42e9b5
mov ecx [ ebp + 0x18 ]
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esi + 0x1 ]
inc esi
and dl 0xc0
cmp dl 0x80
je r-xdata
mov al [ esi + 0x1 ]
cmp al [ ebx + 0x61 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
movzx eax [ edi + 0x1 ]
je r-xdata
cmp ebx 0xfffffffa
je r-xdata
cmp ebx 0xffffffeb
pop edi
xor eax eax
cmp ebx 0xfffffff9
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0xfffffff8
je r-xdata
cmp ebx 0xfffffff7
je r-xdata
cmp ebx 0xfffffff8
je r-xdata
pop edi
xor eax eax
cmp ebx 0xffffffed
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0xffffffec
je r-xdata
cmp ebx 0xfffffff6
je r-xdata
cmp ebx 0xfffffff5
je r-xdata
cmp [ ebp + 0xc ] 0x0
movzx eax [ edi + 0x1 ]
je r-xdata
mov ecx [ ebp + 0xc ]
movzx eax [ edi + 0x1 ]
test ecx ecx
je r-xdata
movzx eax [ edi + 0x1 ]
cmp eax ebx
je r-xdata
cmp ebx 0x7f
jg r-xdata
cmp ebx 0x7f
jg r-xdata
cmp ebx 0x7f
jg r-xdata
cmp ebx 0x7f
jg r-xdata
cmp ebx 0x7f
jg r-xdata
cmp ebx 0x7f
jg r-xdata
cmp ebx 0x180e
jg r-xdata
cmp ebx 0x85
jg r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp edx 0x1
je r-xdata
add esi [ ecx + 0x5c ]
jmp r-xdata
mov [ ebp + 0x10 ] esi
neg ebx
lea ecx [ ebx - 0x6 ]
cmp ecx 0xf
ja r-xdata
cmp eax 0xc0
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0xfffffff7
je r-xdata
cmp ebx 0xffffffef
cmp ebx 0xfffffff9
je r-xdata
cmp ebx 0xffffffed
je r-xdata
cmp ebx 0xffffffee
je r-xdata
cmp ebx 0xfffffff9
je r-xdata
cmp ebx 0xfffffff7
jmp r-xdata
cmp ebx 0xfffffff9
jmp r-xdata
xor ecx ecx
cmp eax ebx
setne cl
pop edi
pop esi
pop ebx
mov eax ecx
mov esp ebp
pop ebp
retn
cmp eax 0xc0
jl r-xdata
cmp eax ebx
je r-xdata
cmp eax 0xc0
jl r-xdata
test [ ebp + 0x14 ] 0x1
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax + 0xc ]
test [ ebx + ecx ] 0x4
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
test [ ebx + eax ] 0x4
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0xc ]
test [ ebx + edx ] 0x1
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax + 0xc ]
test [ ebx + ecx ] 0x1
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
test [ ebx + eax ] 0x10
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0xc ]
test [ ebx + edx ] 0x10
je r-xdata
cmp ebx 0x205f
jg r-xdata
je r-xdata
cmp ebx 0x2028
jl r-xdata
je r-xdata
mov edx [ ecx + 0x58 ]
test edx edx
je r-xdata
jmp r-xdata
mov dl [ esi + 0x1 ]
inc esi
and dl 0xc0
cmp dl 0x80
je r-xdata
mov dl [ esi + 0x1 ]
cmp dl [ ecx + 0x61 ]
je r-xdata
movzx ecx [ ecx + lookup_table_43fea0 ]
jmp [ ecx * 4 + jump_table_43fe7c ]
test al 0x20
jne r-xdata
cmp ebx 0xfffffff6
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0xfffffff5
jmp r-xdata
cmp ebx 0xffffffeb
jmp r-xdata
cmp ebx 0xfffffff9
je r-xdata
cmp ebx 0xfffffff5
jmp r-xdata
je r-xdata
je r-xdata
test al 0x20
jne r-xdata
test ecx ecx
je r-xdata
movzx edx [ edi + 0x2 ]
and edx 0x3f
test al 0x20
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x3000
je r-xdata
je r-xdata
pop edi
xor eax eax
cmp ecx 0x12
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0xa0
jg r-xdata
pop edi
xor eax eax
cmp ecx 0x14
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x2029
jg r-xdata
pop edi
xor eax eax
cmp ecx 0x14
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0xa
jl r-xdata
cmp eax 0x7f
jg r-xdata
cmp eax 0x7f
jg r-xdata
cmp eax 0x7f
jg r-xdata
cmp eax 0x7f
jg r-xdata
cmp eax 0x7f
jg r-xdata
cmp eax 0x7f
jg r-xdata
cmp eax 0x180e
jg r-xdata
cmp eax 0x85
jg r-xdata
test al 0x10
jne r-xdata
movzx ecx [ edi + 0x2 ]
and eax 0x1f
and ecx 0x3f
shl eax 0x6
jmp r-xdata
cmp ebx 0xffffffed
je r-xdata
cmp ebx 0xfffffff5
jmp r-xdata
test al 0x10
jne r-xdata
movzx ecx [ edi + 0x2 ]
and eax 0x1f
and ecx 0x3f
shl eax 0x6
or eax ecx
xor ecx ecx
cmp eax ebx
setne cl
pop edi
pop esi
pop ebx
mov eax ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x4 ]
movzx ecx [ edx + ebx ]
xor edx edx
cmp eax ecx
setne dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
cmp ebx 0x80
jge r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x4 ]
movzx ecx [ edx + ebx ]
xor edx edx
cmp eax ecx
sete dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
cmp ebx 0x80
jge r-xdata
pop edi
xor eax eax
cmp ecx 0x12
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x2000
jl r-xdata
cmp ebx 0x1680
je r-xdata
je r-xdata
cmp ebx 0xd
jle r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0xc ]
test [ eax + ecx ] 0x4
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0xc ]
test [ eax + ecx ] 0x4
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0xc ]
test [ eax + ecx ] 0x1
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0xc ]
test [ eax + ecx ] 0x1
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0xc ]
test [ eax + ecx ] 0x10
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0xc ]
test [ eax + ecx ] 0x10
je r-xdata
cmp eax 0x205f
jg r-xdata
je r-xdata
cmp eax 0x2028
jl r-xdata
je r-xdata
movzx ecx [ edi + 0x2 ]
movzx edx [ edi + 0x3 ]
and ecx 0x3f
test al 0x8
jne r-xdata
movzx edx [ edi + 0x2 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or edx eax
movzx eax [ edi + 0x3 ]
shl edx 0x6
and eax 0x3f
or eax edx
jmp r-xdata
or eax ecx
je r-xdata
movzx ecx [ edi + 0x2 ]
movzx edx [ edi + 0x3 ]
and ecx 0x3f
test al 0x8
jne r-xdata
movzx edx [ edi + 0x2 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or edx eax
movzx eax [ edi + 0x3 ]
and eax 0x3f
shl edx 0x6
or eax edx
xor ecx ecx
cmp eax ebx
setne cl
pop edi
pop esi
pop ebx
mov eax ecx
mov esp ebp
pop ebp
retn
xor edx edx
or ecx 0xffffffff
cmp eax ecx
setne dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x4 ]
movzx ecx [ edx + ebx ]
xor edx edx
cmp eax ecx
setne dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or edx eax
movzx eax [ edi + 0x3 ]
jmp r-xdata
or eax edx
xor edx edx
or ecx 0xffffffff
cmp eax ecx
sete dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x4 ]
movzx ecx [ edx + ebx ]
xor edx edx
cmp eax ecx
sete dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
cmp ebx 0x200a
jle r-xdata
pop edi
xor eax eax
cmp ecx 0x12
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x9
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x3000
je r-xdata
je r-xdata
pop edi
xor eax eax
cmp ebx 0x13
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xa0
jg r-xdata
pop edi
xor eax eax
cmp ebx 0x15
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x2029
jg r-xdata
pop edi
xor eax eax
cmp ebx 0x15
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xa
jl r-xdata
and edx 0x3f
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x4 ]
jmp r-xdata
and edx 0x3f
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x4 ]
jmp r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or edx eax
movzx eax [ edi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ edi + 0x4 ]
jmp r-xdata
shl edx 0x6
and eax 0x3f
cmp ebx 0x202f
je r-xdata
cmp ebx 0x20
jne r-xdata
pop edi
xor eax eax
cmp ebx 0x13
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x2000
jl r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
cmp eax 0xd
jle r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x4 ]
shl ecx 0x6
or ecx edx
movzx edx [ edi + 0x5 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ edi + 0x6 ]
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x4 ]
shl ecx 0x6
or ecx edx
movzx edx [ edi + 0x5 ]
and eax 0x3f
shl ecx 0x6
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
jmp r-xdata
shl ecx 0x6
and edx 0x3f
or ecx edx
shl ecx 0x6
and eax 0x3f
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x4 ]
shl ecx 0x6
or ecx edx
movzx edx [ edi + 0x5 ]
and eax 0x3f
shl ecx 0x6
or ecx eax
movzx eax [ edi + 0x6 ]
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x4 ]
shl ecx 0x6
or ecx edx
movzx edx [ edi + 0x5 ]
and eax 0x3f
shl ecx 0x6
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
xor ecx ecx
cmp eax ebx
setne cl
pop edi
pop esi
pop ebx
mov eax ecx
mov esp ebp
pop ebp
retn
shl ecx 0x6
and edx 0x3f
or ecx edx
shl ecx 0x6
and eax 0x3f
or eax ecx
and eax 0x1
shl eax 0x6
or edx eax
movzx eax [ edi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ edi + 0x4 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ edi + 0x5 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ edi + 0x6 ]
and eax 0x3
shl eax 0x6
or edx eax
movzx eax [ edi + 0x3 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ edi + 0x4 ]
and eax 0x3f
shl edx 0x6
or edx eax
movzx eax [ edi + 0x5 ]
jmp r-xdata
pop edi
xor eax eax
cmp ecx 0x12
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x200a
jle r-xdata
pop edi
xor eax eax
cmp ebx 0x13
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x9
je r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
jne r-xdata
pop edi
xor eax eax
cmp ebx 0x13
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
sub_43feb0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x18 ]
mov edx [ edi + 0x24 ]
cmp esi edx
jae r-xdata
cmp esi [ edi + 0x24 ]
jb r-xdata
mov ecx [ edi + 0x14 ]
mov [ ebp - 0x4 ] ecx
lea edi [ eax + 0x1 ]
add eax 0x3
jmp r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
mov edx [ edi + 0x14 ]
add edx ecx
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov ebx [ ebp + 0xc ]
lea edx [ ecx + ebx ]
sar edx 0x8
mov [ esi ] dl
lea edx [ ecx + ebx ]
mov [ esi + 0x1 ] dl
add esi 0x2
cmp esi edx
jb r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push eax
call sub_42ecee
add esp 0x8
test eax eax
je r-xdata
lea edx [ ecx + ebx ]
sar edx 0x8
mov [ eax + 0x1 ] dl
lea edx [ ecx + ebx ]
mov [ eax + 0x2 ] dl
movzx ecx [ esi ]
movzx ebx [ esi + 0x1 ]
shl ecx 0x8
or ecx ebx
mov ebx [ ebp - 0x4 ]
add ebx ecx
cmp ebx edi
je r-xdata
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov edi [ ebp + 0x14 ]
sub_43ff53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
movzx edx [ ecx + r--data ]
push ebx
push esi
push edi
push 0x1
push 0x0
add edx eax
push 0x0
push edx
call sub_42f272
mov esi eax
add esp 0x10
cmp esi [ ebp + 0xc ]
jae r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
nop
cmp ebx 0x69
je r-xdata
jmp r-xdata
movzx ecx [ ebx + r--data ]
add esi ecx
mov edi edi
cmp ebx 0x6a
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
movzx edx [ esi + 0x1 ]
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
add esi edx
cmp [ esi ] 0x54
je r-xdata
movzx ebx [ esi ]
cmp ebx 0x76
je r-xdata
jmp r-xdata
movzx ebx [ esi ]
cmp ebx 0x58
jne r-xdata
cmp ebx 0x52
jne r-xdata
cmp ebx 0x5e
je r-xdata
movzx edi [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
mov eax [ ebp + 0x14 ]
shl edi 0x8
or edi edx
add edi [ eax + 0x14 ]
movzx ecx [ edi + 0x1 ]
movzx edx [ edi + 0x2 ]
shl ecx 0x8
or ecx edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
je r-xdata
cmp ebx 0x5f
je r-xdata
nop
cmp ebx 0x60
jne r-xdata
cmp ebx 0x5d
je r-xdata
movzx ecx [ ebx + r--data ]
push 0x1
push 0x0
add ecx esi
push 0x0
push ecx
call sub_42f272
mov esi eax
add esp 0x10
cmp esi [ ebp + 0xc ]
jb r-xdata
movzx eax [ edi + 0x1 ]
movzx ecx [ edi + 0x2 ]
shl eax 0x8
or eax ecx
add edi eax
cmp [ edi ] 0x54
je r-xdata
xor edi edi
cmp [ eax + esi ] 0x54
je r-xdata
cmp ebx 0x60
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push edi
call sub_43ff53
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
movzx edx [ esi + 0x1 ]
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
add esi edx
cmp [ esi ] 0x54
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
push esi
call sub_43ff53
add esp 0x10
test eax eax
je r-xdata
add esi eax
jmp r-xdata
lea eax [ ebx - 0x6 ]
cmp eax 0x6b
ja r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
mov edi 0x1
movzx edx [ eax + lookup_table_440213 ]
jmp [ edx * 4 + jump_table_4401e7 ]
jmp r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
mov eax esi
jmp r-xdata
lea eax [ esi + 0x21 ]
mov al [ esi + 0x1 ]
mov al [ esi + 0x3 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx ecx [ esi + 0x1 ]
add esi ecx
jmp r-xdata
movzx edx [ esi + 0x3 ]
add esi edx
jmp r-xdata
movzx ecx [ eax ]
add ecx 0xffffffba
cmp ecx 0x7
ja r-xdata
movzx edx [ ecx + lookup_table_44028b ]
jmp [ edx * 4 + jump_table_44027f ]
add esi 0x2
jmp r-xdata
cmp al 0xf
jne r-xdata
cmp al 0x10
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0xc0
jb r-xdata
mov al [ esi + 0x3 ]
cmp al 0xc0
jb r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
jg r-xdata
movzx eax al
and eax 0x3f
movzx ecx [ eax + r--data ]
add esi ecx
jmp r-xdata
movzx edx al
and edx 0x3f
movzx eax [ edx + r--data ]
add esi eax
jmp r-xdata
jmp r-xdata
sub_440293
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
push edi
mov edi [ ebp + 0x18 ]
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push ebx
push edx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push esi
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_42f373
add esp 0x1c
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push edi
push ebx
push ecx
push edx
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_42f373
add esp 0x1c
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
inc ecx
mov [ ebp + 0x8 ] ecx
test dl dl
je r-xdata
sub_440306
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
mov [ eax + 0x1ac ] 0x1
mov eax [ ebp + 0xc ]
push 0x212
push eax
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x10
sub_440338
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
mov [ eax + 0x1ac ] 0x0
mov eax [ ebp + 0xc ]
push 0x211
push eax
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x10
sub_44036a
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
push esi
mov esi [ edx ]
add esi 0x28
push esi
call sub_436565
test al al
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
push edx
push 0x53
push eax
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
push eax
call sub_430b0f
pop esi
pop ebp
retn 0x10
sub_4403ae
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push eax
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
mov ecx [ esi ]
lea eax [ ebp - 0x1c ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
sub edi [ esi + 0x3c ]
sub ebx [ esi + 0x40 ]
cmp [ esi + 0xc ] 0x80000000
jne r-xdata
add [ esi + 0x3c ] edi
add [ esi + 0x40 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
cmp eax ecx
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebp - 0xc ]
jb r-xdata
mov eax [ eax ]
mov edx [ eax + 0x8 ]
inc [ ebp + 0x8 ]
cmp edx [ esi ]
jne r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x18 ]
sub [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
sub [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
push 0x1
push edx
mov edx [ ebp - 0x14 ]
add eax ebx
push edx
add ecx edi
push eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
push ecx
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push ecx
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x8 ]
sub_44048e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push edi
push rw-data
call sub_430c09
test esi esi
je r-xdata
mov [ rw-data ] 0xffffffff
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
cmp [ ecx + 0x18 ] 0x0
mov [ rw-data ] eax
jne r-xdata
movzx eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
movzx ecx si
push edx
shl eax 0x10
or eax ecx
push eax
push 0x6
push edi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
sub_4404e8
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
cmp [ edi + 0x1a0 ] 0x0
mov eax [ edi + 0x44 ]
mov ecx [ edi + 0x48 ]
mov [ ebp - 0x14 ] edi
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
sub [ ebp + 0xc ] eax
movzx eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
shl eax 0x10
or eax ecx
push eax
push ebx
push 0x5
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp ebx 0x1
je r-xdata
mov eax 0x3
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] eax
jl r-xdata
mov edx [ edi ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov [ edi + 0x188 ] 0x1
mov [ edi + 0x3a ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ecx ]
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp eax [ rw-data ]
jle r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov esi [ eax ]
test esi esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
movsx eax [ esi + 0x80 ]
imul eax [ ebp + 0x10 ]
cdq
idiv [ ebp + 0x8 ]
movsx ecx [ esi + 0x84 ]
movsx edi [ esi + 0x86 ]
mov [ ebp - 0x4 ] eax
movsx eax [ esi + 0x82 ]
imul eax [ ebp + 0x14 ]
cdq
idiv [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax ecx
imul eax [ ebp + 0x10 ]
cdq
idiv [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax edi
imul eax [ ebp + 0x14 ]
cdq
idiv [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
movzx eax [ esi + 0x7e ]
test ax ax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
test eax 0x100
je r-xdata
cmp al 0x16
jne r-xdata
mov eax [ esi ]
push 0xffff
push 0x0
push 0x142
push eax
call [ SendMessageW@IAT ]
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
test al 0x6
jne r-xdata
mov edi [ ebp - 0x14 ]
test [ esi + 0x8a ] 0x20
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edi
test al 0x60
jne r-xdata
test al 0x8
mov eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ esi + 0x30 ]
mov edx [ esi ]
push 0x0
push ecx
push 0x469
push edx
call [ SendMessageW@IAT ]
mov al [ esi + 0x8b ]
cmp al 0xff
je r-xdata
test [ ebp - 0x10 ] 0x4
je r-xdata
movsx ebx [ esi + 0x80 ]
test al al
mov eax [ ebp + 0x14 ]
jns r-xdata
mov ebx [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
cmp ebx eax
jle r-xdata
sub eax [ ebp + 0x8 ]
cdq
sub eax edx
mov ebx eax
movsx eax [ esi + 0x80 ]
sar ebx 0x1
add ebx eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov edi [ ebp - 0x14 ]
movzx eax al
cmp eax [ edi + 0x194 ]
je r-xdata
mov edx [ ebp - 0x10 ]
mov ecx edx
and ecx 0x20
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cdq
sub eax edx
mov edx eax
mov eax [ ebp - 0x10 ]
sar edx 0x1
cmp eax edx
jle r-xdata
sub eax [ ebp + 0xc ]
cdq
sub eax edx
movsx edx [ esi + 0x82 ]
sar eax 0x1
add eax edx
jmp r-xdata
movzx eax [ esi + 0x7e ]
test eax 0x200
je r-xdata
mov ebx [ ebp + 0x8 ]
movsx edx [ esi + 0x80 ]
mov eax ebx
sub eax edx
sub eax [ ebp - 0xc ]
imul eax [ ebp + 0x10 ]
cdq
idiv ebx
mov ebx [ ebp + 0x10 ]
sub ebx eax
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov ecx [ esi ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
jmp r-xdata
test dl 0x40
je r-xdata
movsx eax [ esi + 0x82 ]
sub ecx [ ebp - 0xc ]
movsx ebx [ esi + 0x80 ]
sub ecx [ ebp + 0x8 ]
add ebx ecx
add ebx [ ebp + 0x10 ]
movsx edx [ esi + 0x80 ]
sub ecx ebx
sub ecx [ ebp + 0x8 ]
add ecx edx
add ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
movzx edx [ esi + 0x7e ]
mov [ ebp - 0x10 ] edx
and edx 0x2
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx [ ebp + 0xc ]
movsx edx [ esi + 0x82 ]
mov eax ebx
sub eax edx
sub eax [ ebp - 0x8 ]
imul eax [ ebp + 0x14 ]
cdq
idiv ebx
mov ebx [ ebp - 0x4 ]
mov edx eax
mov eax [ ebp + 0x14 ]
sub eax edx
sub eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push 0x0
push ecx
push edx
push eax
mov eax [ esi ]
push ebx
push eax
call [ MoveWindow@IAT ]
mov al [ esi + 0x88 ]
test al al
jne r-xdata
test cx cx
je r-xdata
sub edi [ ebp - 0x8 ]
movsx eax [ esi + 0x82 ]
sub edi [ ebp + 0xc ]
add eax edi
add eax [ ebp + 0x14 ]
jmp r-xdata
movsx ecx [ esi + 0x82 ]
sub edi eax
sub edi [ ebp + 0xc ]
add edi ecx
add edi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edi
jmp r-xdata
sub_440826
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42ffbe
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_440847
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov eax [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
pop ebp
retn 0x8
mov ecx [ ecx + 0x4 ]
mov [ edx ] ecx
sub_440863
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_435b59
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_440880
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x1c ]
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x100
cmp edi 0xffffffff
jne r-xdata
xor ecx ecx
cmp ebx 0xffffffff
jne r-xdata
mov edi 0x96
mov edx [ ebp + 0x10 ]
push 0x1
push edx
mov edx [ ebp + 0x18 ]
push ebx
push edi
push edx
mov edx [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push r--data
push r--data
push ecx
push eax
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
mov ebx 0x96
mov cx [ ebp + 0x14 ]
mov dx [ ebp + 0x18 ]
push 0x910
mov [ esi + 0x80 ] cx
mov [ esi + 0x82 ] dx
mov [ esi + 0x84 ] di
mov [ esi + 0x86 ] bx
mov [ esi + 0x48 ] 0xffffffff
call sub_4115d7
mov edx [ ebp + 0x8 ]
xor edi edi
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ esi + 0x78 ] eax
mov [ eax + 0x8 ] esi
mov [ eax ] edi
mov ecx [ edx + 0x1cc ]
add esp 0x4
cmp ecx edi
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x24
cmp [ ecx ] edi
je r-xdata
mov [ edx + 0x1cc ] eax
mov eax 0x300
or [ esi + 0x7e ] ax
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x24
mov [ ecx ] eax
mov eax 0x300
or [ esi + 0x7e ] ax
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x24
nop
mov ecx [ ecx ]
cmp [ ecx ] edi
jne r-xdata
sub_44097a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ eax + 0x78 ]
push edi
xor edi edi
cmp [ esi + 0x4 ] edi
je r-xdata
mov ecx [ esi + 0xc ]
add ecx [ ebp + 0x18 ]
cmp ecx 0x100
jl r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] edi
jne r-xdata
mov edi [ esi + 0xc ]
mov [ edi + esi + 0x810 ] bl
cmp ebx 0x8
jne r-xdata
push 0x910
call sub_4115d7
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ esi + 0x4 ] eax
add esp 0x4
mov esi eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ esi + edi * 8 + 0x10 ] ecx
mov [ esi + edi * 8 + 0x14 ] edx
inc edi
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
or ebx 0xffffffff
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_432b92
add esp 0x4
lea eax [ ebp + 0x14 ]
push eax
call sub_432b92
add esp 0x4
sub_440a0d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ ebx + 0x194 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp + 0xc ] eax
cmp ecx [ ebp + 0x10 ]
je r-xdata
mov edi 0x3
cmp [ esi + 0x84 ] edi
jl r-xdata
mov edi 0x3
cmp [ esi + 0x84 ] edi
jl r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebx + 0x18c ]
push 0x0
push edx
push 0x130c
push eax
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebx + 0x194 ] ecx
mov edx [ esi + 0x74 ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0x74 ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
cmp [ eax + 0x88 ] 0xb
je r-xdata
cmp [ eax + 0x88 ] 0xb
je r-xdata
mov cl [ eax + 0x8b ]
movzx edx cl
cmp edx [ ebx + 0x194 ]
je r-xdata
movzx edx [ eax + 0x8b ]
cmp edx [ ebx + 0x194 ]
jne r-xdata
mov eax [ eax ]
push 0x0
push eax
call [ ShowWindow@IAT ]
mov ecx [ esi + 0x74 ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
test [ eax + 0x8a ] 0x40
je r-xdata
cmp [ ebx + 0x19c ] 0x0
je r-xdata
test [ eax + 0x8a ] 0x20
jne r-xdata
cmp [ eax + 0x88 ] 0x1a
jne r-xdata
cmp cl 0xff
je r-xdata
mov eax [ eax ]
push 0x0
push eax
call [ ShowWindow@IAT ]
mov ecx [ esi + 0x74 ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push 0x4
push ecx
call [ ShowWindow@IAT ]
mov edx [ esi + 0x74 ]
mov eax [ edx + edi * 4 ]
mov eax [ eax ]
test [ eax + 0x8a ] 0x40
je r-xdata
mov eax [ eax ]
push 0x0
push eax
call [ EnableWindow@IAT ]
cmp [ eax + 0x88 ] 0xa
je r-xdata
cmp [ eax + 0x88 ] 0x1a
jne r-xdata
mov ecx [ eax ]
push 0x1
push ecx
call [ EnableWindow@IAT ]
sub_440b82
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18c ]
test eax eax
jne r-xdata
cmp [ edx ] 0x0
je r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0x38 ] 0x0
mov eax [ esi + 0x198 ]
je r-xdata
inc [ esi + 0x190 ]
mov ecx [ esi + 0x190 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
lea edx [ ebp - 0x1c ]
push edx
push ecx
push 0x133e
push eax
mov [ ebp - 0x1c ] 0x9
call [ SendMessageW@IAT ]
mov eax [ esi + 0x190 ]
mov edx [ ebp + 0xc ]
mov [ esi + 0x194 ] eax
mov [ esi + 0x19c ] 0x1
or ecx 0xffffffff
mov [ edx + 0x80 ] cx
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
push eax
push esi
push rw-data
call sub_440a0d
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ esi + 0x194 ]
mov [ esi + 0x194 ] 0xffffffff
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
sub_440c49
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x10
jge r-xdata
mov eax 0x2
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
or eax 0x2
cmp edx 0xffffffff
jne r-xdata
mov ecx 0x96
cmp [ ebp + 0x2c ] 0x0
jge r-xdata
mov edx 0x96
cmp [ ebx ] 0x0
je r-xdata
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push edi
push edx
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x1c ]
push ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push r--data
push 0x0
push eax
call sub_4301f8
mov [ esi ] eax
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
mov edi [ SendMessageW@IAT ]
push ebx
push 0x0
push 0x467
push eax
call edi
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov ecx 0x300
mov [ esi + 0x7e ] cx
mov ecx [ ebp + 0x2c ]
mov edx [ esi ]
push ecx
push eax
push 0x467
push edx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
push eax
call [ DestroyWindow@IAT ]
sub_440d32
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax + 0x58 ] ecx
mov [ eax + 0x5c ] edx
test esi esi
jle r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x14
cmp eax 0xffffffff
jne r-xdata
test edi edi
jle r-xdata
mov [ eax + 0x60 ] esi
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x14
mov [ eax + 0x64 ] edi
sub_440d98
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0x0
push 0x0
push 0xf0
push edx
mov esi edi
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
push ebx
mov bl 0x1a
cmp edi 0x3
jl r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
inc esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
dec edi
mov ebx esi
cmp esi edi
jg r-xdata
nop
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x1
pop ebx
jne r-xdata
nop
mov eax [ eax ]
cmp [ eax + 0x88 ] bl
jne r-xdata
mov eax [ eax ]
cmp [ eax + 0x88 ] bl
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0xfffffff0
push edx
call [ GetWindowLongW@IAT ]
or eax 0x10000
push eax
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0xfffffff0
push eax
call [ SetWindowLongW@IAT ]
mov edx [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0x0
push 0x1
push 0xf1
push edx
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x0
push 0x0
push 0xf1
push eax
call [ SendMessageW@IAT ]
inc ebx
cmp ebx edi
jle r-xdata
mov eax [ ecx + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0xfffffff0
push edx
call [ GetWindowLongW@IAT ]
test eax 0x20000
jne r-xdata
mov eax [ ecx + esi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0xfffffff0
push edx
call [ GetWindowLongW@IAT ]
test eax 0x20000
jne r-xdata
inc edi
cmp edi [ rw-data ]
jle r-xdata
inc edi
cmp edi [ rw-data ]
jg r-xdata
dec esi
cmp esi 0x3
jge r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
sub_440edc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x60 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov [ eax + 0x68 ] 0x0
pop esi
pop ebp
retn 0x8
push eax
push esi
call sub_430c09
mov [ esi + 0x6c ] eax
sub_440f0a
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x1c ]
mov [ ebp + 0x1c ] eax
mov eax [ ebx + 0x40 ]
push edi
test eax eax
je r-xdata
push 0x0
call [ GetDC@IAT ]
push 0x5a
push eax
mov [ ebp + 0xc ] eax
call [ GetDeviceCaps@IAT ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
mov edi eax
call [ ReleaseDC@IAT ]
imul edi [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov eax [ ebp + 0x20 ]
push 0x0
push eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x4
push 0x1
mov ecx esi
and ecx 0x8
push ecx
mov edx esi
and edx 0x4
push edx
and esi 0x2
push esi
push eax
mov eax 0x49f49f49
imul edi
sub edx edi
sar edx 0x9
push 0x0
mov ecx edx
push 0x0
shr ecx 0x1f
push 0x0
add ecx edx
push ecx
call [ CreateFontW@IAT ]
mov edx [ ebp + 0x1c ]
mov edi [ SendMessageW@IAT ]
push 0x1
mov esi eax
push esi
push 0x30
push edx
call edi
cmp [ ebx + 0x88 ] 0x1
jne r-xdata
push eax
call [ DeleteObject@IAT ]
cmp [ ebx + 0x88 ] 0x0
jne r-xdata
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push ebx
push eax
mov [ ebx + 0x40 ] esi
call sub_430b87
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
cmp [ ebp + 0x24 ] 0x0
je r-xdata
movsx eax [ ebx + 0x86 ]
movsx ecx [ ebx + 0x84 ]
movsx edx [ ebx + 0x82 ]
push 0x0
push eax
movsx eax [ ebx + 0x80 ]
push ecx
mov ecx [ ebx ]
push edx
push eax
push ecx
call [ MoveWindow@IAT ]
mov edx [ ebp + 0x1c ]
push 0x0
push 0x0
push 0x142
push edx
call edi
sub_441018
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push esi
mov esi [ eax ]
push edi
mov edi [ GetWindowLongW@IAT ]
push 0xfffffff0
push esi
call edi
mov ecx [ ebp + 0x8 ]
push 0xffffffec
push esi
mov [ ecx ] eax
call edi
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] eax
mov eax 0x1
pop esi
pop ebp
retn 0xc
xor eax eax
pop ebp
retn 0xc
cmp eax 0xffffffff
jne r-xdata
sub_441078
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push ebx
mov ebx [ edx ]
push esi
mov esi [ ebx ]
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
xor ecx ecx
and eax 0xc00000
cmp eax 0xc00000
sete cl
mov [ ebp + 0x10 ] ecx
cmp edi 0xffffffff
je r-xdata
xor eax eax
pop edi
pop ebp
retn 0xc
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
push edi
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn 0xc
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn 0xc
and edi 0xc00000
xor eax eax
cmp edi 0xc00000
sete al
cmp [ ebp + 0x10 ] eax
je r-xdata
push 0x47
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ SetWindowPos@IAT ]
push 0x4
test eax eax
je r-xdata
call [ GetSystemMetrics@IAT ]
sub [ ebx + 0x48 ] eax
call [ GetSystemMetrics@IAT ]
add [ ebx + 0x48 ] eax
jmp r-xdata
sub_441165
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x3a ] 0x0
push edi
mov edi [ esi ]
je r-xdata
xor eax eax
pop ebx
pop ebp
retn 0x8
cmp eax 0xffffffff
jne r-xdata
cmp ebx 0x43
ja r-xdata
cmp [ esi + 0x190 ] 0x0
mov [ esi + 0x3a ] 0x0
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
movzx ecx [ ebx + lookup_table_44131d ]
jmp [ ecx * 4 + jump_table_4412f5 ]
cmp [ esi + 0x19c ] 0x0
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push 0x0
push edi
call [ ShowWindow@IAT ]
pop edi
mov [ esi + 0x38 ] 0x0
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x38 ] 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
push 0x0
push edi
call [ EnableWindow@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
push 0x1
push edi
call [ EnableWindow@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
push edi
mov [ esi + 0x39 ] 0x1
call [ LockWindowUpdate@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
push 0x0
mov [ esi + 0x39 ] 0x0
call [ LockWindowUpdate@IAT ]
mov edx [ esi ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax [ esi + 0x198 ]
push eax
push esi
push rw-data
call sub_440a0d
mov [ esi + 0x19c ] 0x0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push ebx
push edi
call [ ShowWindow@IAT ]
push edi
call sub_434418
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
push ebx
push edi
call [ ShowWindow@IAT ]
cmp ebx 0x8
je r-xdata
push 0x6
push edi
call [ ShowWindow@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
cmp ebx 0x4
je r-xdata
push edi
call sub_434418
sub_441361
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push ecx
call [ DestroyWindow@IAT ]
mov eax 0x1
pop ebp
retn 0x4
xor eax eax
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
sub_4413aa
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
call sub_431285
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
dec [ edx + 0x4 ]
mov ecx [ ecx ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
call sub_440847
jmp r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx + 0x8 ]
push eax
call [ DeleteObject@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push rw-data
call sub_42fe94
push ecx
lea eax [ ebp - 0x4 ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
sub_441432
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0x1
call [ CreateSolidBrush@IAT ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42ff16
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
cmp [ ecx ] edi
je r-xdata
mov eax ecx
mov ecx [ ebp + 0xc ]
add [ eax + 0x4 ] ecx
mov edx [ esi ]
mov eax [ edx + 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_440847
mov esi [ ebp + 0x8 ]
jmp r-xdata
push ecx
lea eax [ ebp + 0x8 ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
sub_4414b5
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
push esi
push edi
mov edi [ edx ]
push 0xf
call [ GetSysColor@IAT ]
mov esi eax
mov eax [ edi + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push eax
call [ SetBkColor@IAT ]
push 0x0
push esi
call sub_441432
pop edi
pop esi
pop ebp
retn 0x8
mov esi eax
sub_4414f4
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push 0x0
push 0x0
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] edx
mov eax [ eax ]
push 0x20
push eax
call [ PostMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
sub_441544
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp eax 0xffffffff
je r-xdata
test edi edi
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
pop esi
mov ecx [ ebp + 0xc ]
push ecx
push edi
call [ CreateAcceleratorTableW@IAT ]
mov [ esi + 0x18 ] eax
call [ GetForegroundWindow@IAT ]
cmp [ esi ] eax
jne r-xdata
mov eax [ esi + 0x18 ]
push eax
call [ DestroyAcceleratorTable@IAT ]
mov [ esi + 0x18 ] 0x0
mov [ rw-data ] 0xffffffff
mov edx [ rw-data ]
mov [ rw-data ] edx
sub_4415d1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
pop ebx
pop ebp
retn 0x8
cmp ebx 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
push esi
mov esi [ edx ]
mov eax [ esi + 0x1d0 ]
push edi
mov edi [ ecx ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push eax
call sub_43599e
mov eax [ edi ]
mov ecx [ esi ]
push 0x1
push eax
push 0x28
mov [ esi + 0x1c ] ebx
mov ebx [ PostMessageW@IAT ]
push ecx
mov [ ebp + 0xc ] eax
call ebx
cmp [ edi + 0x88 ] 0x2
jne r-xdata
pop edi
mov [ esi + 0x1c ] 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
pop esi
mov edx [ esi + 0x1c4 ]
mov eax [ esi + 0x1c0 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
push 0xb1
push ecx
call ebx
sub_441672
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push ebx
or eax 0xffffffff
push esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
push edi
lea eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ ClientToScreen@IAT ]
mov ebx [ rw-data ]
xor esi esi
test ebx ebx
jle r-xdata
push 0x0
call [ MessageBeep@IAT ]
or eax 0xffffffff
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov edx [ edx ]
mov [ ebp - 0x10 ] edx
test edx edx
je r-xdata
inc esi
cmp esi ebx
jl r-xdata
mov edi 0x3
cmp [ rw-data ] edi
jl r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
js r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
test ecx ecx
js r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edi
cmp edi [ rw-data ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
test [ eax + 0x8a ] 0x20
jne r-xdata
mov cl [ eax + 0x8b ]
cmp cl 0xff
je r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
lea eax [ ebp - 0x20 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
movzx ecx cl
cmp ecx [ edx + 0x194 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] esi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
test [ ecx + 0x8a ] 0x8
jne r-xdata
mov [ ebp - 0xc ] esi
cmp [ eax ] esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov [ ebp - 0x8 ] edi
sub_4417bf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
je r-xdata
mov eax [ esi + 0x10 ]
mov edi [ esi + 0x18 ]
mov ebx eax
mov ecx eax
and ebx 0x6
and ecx 0x10
and eax 0x1
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_4308ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x48 ]
cmp eax 0xffffffff
jne r-xdata
push 0xe
jmp r-xdata
push eax
push edi
call [ SetTextColor@IAT ]
mov edx [ ebp + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ edx + 0x44 ]
cmp eax 0xffffffff
jne r-xdata
push 0x12
call [ GetSysColor@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x44 ]
push 0xf
call [ GetSysColorBrush@IAT ]
push 0xf
mov [ esp + 0x14 ] eax
call [ GetSysColor@IAT ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
push 0x10
call [ GetSysColor@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edi
mov [ esp + 0x2c ] eax
call [ FrameRect@IAT ]
mov edx [ esp + 0x20 ]
push edx
call [ DeleteObject@IAT ]
jmp r-xdata
push eax
push edi
call [ SetBkColor@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push edi
mov [ esp + 0x34 ] eax
call [ SelectObject@IAT ]
cmp [ esp + 0x14 ] 0x0
mov edx [ esi + 0x1c ]
mov ecx [ esi + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x20 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x28 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
je r-xdata
push 0x10
push 0x4
lea ecx [ esp + 0x38 ]
push ecx
push edi
call [ DrawFrameControl@IAT ]
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x14 ] 0x0
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x28 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
jmp r-xdata
push 0xfffffffe
push 0xfffffffe
lea edx [ esp + 0x38 ]
push edx
push 0xfffffffd
push 0xfffffffd
lea ecx [ esp + 0x38 ]
push ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edi
call [ FillRect@IAT ]
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov eax 0x2
add [ esp + 0x30 ] eax
add [ esp + 0x34 ] eax
test ebx ebx
je r-xdata
call [ InflateRect@IAT ]
mov eax 0x1
sub [ esp + 0x30 ] eax
sub [ esp + 0x34 ] eax
mov eax [ ebx ]
push 0x0
push 0x0
push 0xe
push eax
call [ SendMessageW@IAT ]
lea ebx [ eax + 0x1 ]
xor ecx ecx
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push ebx
push eax
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
call [ GetWindowTextW@IAT ]
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x34 ]
push eax
push 0xffffffff
push ebx
push edi
call [ DrawTextW@IAT ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov [ esp + 0x14 ] 0x125
mov ebx [ ebp + 0xc ]
mov edx [ ebx ]
push 0xfffffff0
push edx
mov [ esp + 0x1c ] 0x105
call [ GetWindowLongW@IAT ]
test eax 0x2000
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov [ esp + 0x38 ] edx
mov edx [ esi + 0x28 ]
inc eax
inc ecx
push 0x11
mov [ esp + 0x40 ] edx
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
call [ GetSysColor@IAT ]
push eax
push edi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push 0xffffffff
push ebx
push edi
call [ DrawTextW@IAT ]
push ebx
call sub_4111dc
mov eax [ esp + 0x2c ]
add esp 0x4
push eax
push edi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esp + 0x1c ]
push edx
push edi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x2c ]
push eax
push edi
call [ SetBkColor@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x28 ]
push 0x0
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] edx
call [ CreateSolidBrush@IAT ]
mov esi eax
push esi
lea eax [ esp + 0x34 ]
push eax
push edi
call [ FrameRect@IAT ]
push esi
call [ DeleteObject@IAT ]
push 0xfffffffc
push 0xfffffffc
lea ecx [ esp + 0x38 ]
push ecx
call [ InflateRect@IAT ]
lea edx [ esp + 0x30 ]
push edx
push edi
call [ DrawFocusRect@IAT ]
sub_441af5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
test eax eax
jns r-xdata
cmp eax 0x3
jl r-xdata
mov edx [ ecx + 0x98 ]
cmp edx 0xffffffff
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x10
cmp eax [ ecx + 0x84 ]
jg r-xdata
mov eax [ ecx + 0x94 ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx + 0x74 ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
mov [ edi ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ edx ]
mov edx [ eax + 0x4 ]
mov eax edx
mov [ esi ] edx
mov edx [ ecx + 0x60 ]
mov eax [ edx + eax * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi ]
cmp eax 0x3
jl r-xdata
cmp eax [ ecx + 0x84 ]
jg r-xdata
mov ecx [ ecx + 0x74 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x10
sub_441b7c
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx + 0x84 ]
mov eax 0x3
push esi
cmp edx eax
jl r-xdata
cmp eax [ ecx + 0x84 ]
jg r-xdata
pop esi
or eax 0xffffffff
pop edi
pop ebp
retn 0x8
mov ecx [ ecx + 0x74 ]
add ecx 0xc
mov edx [ ecx + 0x74 ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jle r-xdata
mov esi [ esi ]
cmp [ esi ] edi
je r-xdata
mov edx [ edx ]
cmp [ edx ] edi
je r-xdata
mov esi [ ecx ]
cmp [ esi ] 0x0
je r-xdata
mov [ rw-data ] eax
pop esi
pop edi
pop ebp
retn 0x8
sub_441be8
push esi
push 0x0
push 0x1a0
push 0x111
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push eax
call [ PostMessageW@IAT ]
mov eax [ esi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0x4
xor eax eax
pop esi
retn 0x8
sub_441c20
push esi
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push 0x0
push 0x197
push 0x111
push eax
call [ PostMessageW@IAT ]
mov eax [ esi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0x4
xor eax eax
pop esi
retn 0x8
sub_441c58
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430cb1
test al al
je r-xdata
mov eax sub_430c7a
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_441c7b
push ebp
mov ebp esp
sub esp 0x224
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x220 ]
push edx
push 0x0
push esi
mov [ ebp - 0x4 ] 0xff
call [ RegEnumKeyExW@IAT ]
cmp eax 0x103
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
mov eax edi
or eax 0x20019
mov [ ebp - 0xc ] eax
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push 0x0
lea edx [ ebp - 0x220 ]
push edx
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_441c7b
mov ecx [ ebp - 0x8 ]
add esp 0x8
push ecx
mov bl al
call [ RegCloseKey@IAT ]
test bl bl
je r-xdata
lea edx [ ebp - 0x18 ]
xor ebx ebx
push edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ebx
call sub_430cb1
test al al
je r-xdata
lea edx [ ebp - 0x220 ]
push edx
push esi
call [ RegDeleteKeyW@IAT ]
push ebx
push edi
lea eax [ ebp - 0x220 ]
push eax
push esi
lea ecx [ ebp - 0x18 ]
push ecx
call sub_441c58
call eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
call sub_430ccb
lea eax [ ebp - 0x18 ]
push eax
call sub_430ccb
lea ecx [ ebp - 0x20 ]
push ecx
push ebx
push ebx
push ebx
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0x220 ]
push eax
push ebx
push esi
mov [ ebp - 0x4 ] 0xff
call [ RegEnumKeyExW@IAT ]
cmp eax 0x103
jne r-xdata
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0xc ]
sub_441db4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
lea ebx [ ebx ]
cmp eax 0x48
jne r-xdata
inc esi
jmp r-xdata
cmp eax 0x7f
je r-xdata
dec esi
jns r-xdata
test esi esi
jne r-xdata
xor eax eax
test esi esi
pop edi
setne al
pop esi
pop ebp
retn 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
inc edx
mov [ edi ] edx
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov ecx [ ecx + edx * 4 ]
movsx eax [ ecx + 0x8 ]
cmp eax 0x47
jne r-xdata
cmp eax 0x40
je r-xdata
mov ecx [ ecx ]
cmp ecx 0x3
je r-xdata
add ecx 0xffffffd9
cmp ecx 0x2
ja r-xdata
inc edx
mov [ edi ] edx
jmp r-xdata
sub_441e23
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_430e30
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_441e49
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_430e4d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_441e6a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430ec5
test al al
je r-xdata
mov eax sub_43628e
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_441e8d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push esi
push edi
call sub_430ef3
test al al
je r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x8
push esi
push edi
call sub_431245
pop edi
pop esi
pop ebp
retn 0x8
sub_441eba
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
test edi edi
je r-xdata
mov edx [ ebp + 0x10 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax ebx
pop ebx
pop ebp
retn
push edi
call sub_4111c1
add esp 0x4
test eax eax
je r-xdata
call sub_410160
mov ecx [ ebp + 0x10 ]
push ecx
push 0x800
push 0x1
lea edx [ ebp + 0xc ]
push edx
mov [ ebp + 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x14 ]
push r--data
push esi
call eax
mov ecx [ ebp + 0xc ]
push ecx
mov esi eax
call sub_41351d
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_441f1e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
push esi
call sub_430ef3
test al al
je r-xdata
mov eax [ esi ]
pop edi
pop esi
pop ebp
retn 0x8
push edi
push esi
call sub_431245
pop edi
pop esi
pop ebp
retn 0x8
sub_441f49
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_431330
test al al
je r-xdata
mov eax sub_431280
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_441f6c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43134a
test al al
je r-xdata
mov eax sub_4361db
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_441f8f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_431364
test al al
je r-xdata
mov eax sub_4370c0
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_441fb2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x44 ]
call sub_402250
lea ecx [ esi + 0x34 ]
call sub_402250
lea ecx [ esi + 0x24 ]
call sub_402250
pop esi
pop ebp
retn 0x4
sub_441fd6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
call [ GetForegroundWindow@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x100 ]
push eax
lea eax [ esp + 0x1c ]
push eax
push edx
call sub_43137e
add esi [ esp + 0x18 ]
add edi [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea eax [ esi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x30 ]
lea esi [ eax - 0x1 ]
lea eax [ edi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x34 ]
lea edi [ eax - 0x1 ]
test ebx ebx
jne r-xdata
jle r-xdata
push ebx
push ebx
push edi
push esi
push 0x8001
call [ mouse_event@IAT ]
cmp [ ebp + 0x18 ] bl
je r-xdata
mov ebx 0xa
cmp ebx 0x64
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0xa
call sub_4331a2
add esp 0x4
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push ecx
push edx
push 0x8001
call [ mouse_event@IAT ]
push 0xa
call sub_4331a2
add esp 0x4
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x30 ]
imul eax eax 0xffff
cdq
lea ecx [ ecx - 0x1 ]
idiv ecx
mov ecx [ esp + 0x34 ]
lea ecx [ ecx - 0x1 ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x24 ]
imul eax eax 0xffff
cdq
idiv ecx
inc eax
mov [ esp + 0x10 ] eax
lea ebx [ ebx ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push 0x20
push ebx
push edi
push esi
call sub_43326f
add esp 0x18
test al al
je r-xdata
sub_4420f6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_431763
test al al
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
movzx eax [ esi + 0x1 ]
push eax
push edi
call sub_43177e
test al al
je r-xdata
movzx eax [ esi + 0x2 ]
push eax
push edi
call sub_431799
test al al
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
sub_442140
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push eax
call sub_432b92
add esp 0x4
test edi edi
jns r-xdata
cmp edi 0xff
jle r-xdata
xor edi edi
jmp r-xdata
mov ebx [ ebp + 0xc ]
lea ecx [ esi + 0x1 ]
push ecx
push esi
push edi
push ebx
call sub_431706
lea edx [ esi + 0x3 ]
push edx
lea eax [ esi + 0x2 ]
push eax
mov ecx ebx
push edi
shr ecx 0x8
push ecx
call sub_431706
lea edx [ esi + 0x5 ]
push edx
lea eax [ esi + 0x4 ]
push eax
push edi
sar ebx 0x10
push ebx
call sub_431706
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi 0xff
sub_4421bd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
cmp [ esi + 0x8 ] 0x0
mov eax [ ebx + 0x8 ]
mov [ esi + 0xc ] eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor edi edi
add esp 0x4
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] edi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x8
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_442253
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push eax
call sub_4111dc
push esi
call sub_4111dc
add esp 0x8
mov eax esi
pop esi
pop ebp
retn 0x4
sub_442272
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
nop
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push eax
call sub_442253
mov eax [ esi + 0x4 ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
pop ebp
retn 0x4
sub_4422cb
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xdeadbeef
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
jne r-xdata
add esi 0xd4
push esi
call sub_4319d2
mov al [ ebp + 0x14 ]
pop esi
pop ebp
retn 0x10
call [ GetLastError@IAT ]
mov [ esi + 0x1c ] eax
sub_4422fe
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax 0x1
push 0x0
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
push 0x0
lea eax [ ebp + 0xc ]
push eax
push ebx
call [ InternetQueryDataAvailable@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp + 0xc ] 0x400
mov edx [ esi + 0x8 ]
or edx [ esi + 0xc ]
jne r-xdata
lea esp [ esp ]
push 0x1
push 0x0
push 0x0
push esi
call sub_4422cb
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push edx
push 0xdeadbeef
push 0x21
push esi
call sub_4422cb
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
call sub_4111dc
add esp 0x4
push 0x0
push 0xdeadbeef
push 0x20
push esi
call sub_4422cb
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push edi
call sub_4111dc
add esp 0x4
push eax
push edi
lea ecx [ esi + 0x44 ]
push ecx
call sub_431930
mov eax [ ebp + 0x8 ]
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_431995
add esp 0x4
mov edi eax
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x8 ]
push edx
push eax
push edi
push ebx
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
sub_4423da
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x34 ]
push edi
push r--data
push eax
mov [ ebp - 0x4 ] sub_414a46
call sub_4149c2
mov edi eax
add esp 0x8
mov [ ebp - 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
push eax
push 0xdeadbeef
push 0x1f
push esi
call sub_4422cb
mov bl al
lea eax [ ebp - 0x8 ]
push eax
call sub_431848
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x400
lea edx [ ebp - 0x408 ]
push edx
push eax
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push 0xdeadbeef
push 0x20
push esi
call sub_4422cb
lea edx [ ebp - 0x8 ]
push edx
mov bl al
call sub_431848
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
or eax [ esi + 0xc ]
jne r-xdata
push edi
push 0x1
push eax
lea ecx [ ebp - 0x408 ]
push ecx
call sub_4142b6
mov eax [ ebp + 0x8 ]
add esp 0x10
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push esi
call sub_4422cb
lea edx [ ebp - 0x8 ]
push edx
mov bl al
call sub_431848
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
push 0xdeadbeef
push 0x21
push esi
call sub_4422cb
lea ecx [ ebp - 0x8 ]
push ecx
mov bl al
call sub_431848
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4424f3
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x0
push ecx
push eax
je r-xdata
call sub_4423da
pop ebp
retn 0x8
call sub_4422fe
pop ebp
retn 0x8
sub_442516
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x70 ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea ecx [ edx + 0x90 ]
cmp eax 0x1
je r-xdata
lea esi [ edx + 0xa0 ]
jmp r-xdata
lea ecx [ edx + 0x5c ]
lea esi [ edx + 0x6c ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ecx ]
push edi
mov edi [ InternetSetOptionW@IAT ]
inc eax
push eax
push ecx
push 0x2b
push ebx
call edi
mov edx [ esi + 0x4 ]
mov eax [ esi ]
inc edx
push edx
push eax
push 0x2c
push ebx
call edi
pop edi
sub_44256c
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
cmp ecx 0x1
jne r-xdata
movzx eax [ esi + 0x58 ]
movzx eax [ esi + 0x8c ]
jmp r-xdata
mov eax [ esi + 0xc0 ]
push 0x0
cmp edx 0x1
jne r-xdata
lea ecx [ esi + 0x7c ]
cmp ecx 0x1
movsx edx ax
lea ecx [ esi + 0xb0 ]
je r-xdata
cmp edx 0x2
jne r-xdata
push 0x0
push 0x0
push edx
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov ecx [ ecx ]
push r--data
push ecx
push 0x3
jmp r-xdata
push eax
call [ InternetOpenW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
cmp [ esi + 0xdc ] 0x0
je r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x8
lea eax [ ebp - 0x8 ]
push eax
push 0x32
push 0x0
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x0
call [ InternetSetOptionW@IAT ]
sub_44260e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x60 ]
call sub_402250
lea ecx [ esi + 0x50 ]
call sub_402250
lea ecx [ esi + 0x40 ]
call sub_402250
lea ecx [ esi + 0x30 ]
call sub_402250
lea ecx [ esi + 0x20 ]
call sub_402250
lea ecx [ esi + 0x10 ]
call sub_402250
mov ecx esi
call sub_402250
pop esi
pop ebp
retn 0x4
sub_442651
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ InternetCloseHandle@IAT ]
push eax
call edi
mov ecx [ esi ]
push ecx
call edi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x2710
add esi 0xd4
push esi
call sub_4319ac
pop edi
pop esi
pop ebp
retn 0x4
sub_4426cd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x20 ]
xor eax eax
cmp ebx 0x7fffffff
sete al
push esi
mov esi [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp + 0x20 ] 0x0
mov [ ebp + 0x18 ] eax
test edi edi
jns r-xdata
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_4111c1
mov edi eax
add esp 0x4
test edi edi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
jle r-xdata
neg ecx
mov [ ebp + 0x14 ] ecx
test esi esi
js r-xdata
test esi esi
jns r-xdata
mov esi eax
sub esi edi
cmp esi eax
jge r-xdata
cmp esi eax
jge r-xdata
xor esi esi
test ebx ebx
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov ecx 0x1
sub ecx edi
add esi ecx
jmp r-xdata
test ebx ebx
jns r-xdata
lea eax [ esi + 0x1 ]
cmp ebx eax
jle r-xdata
lea ebx [ esi + 0x1 ]
test esi esi
jns r-xdata
sub eax esi
cmp ebx eax
jle r-xdata
mov ebx eax
sub ebx esi
mov eax esi
sub eax ebx
mov [ ebp + 0x1c ] eax
cmp esi eax
jle r-xdata
mov ebx eax
mov eax esi
sub eax edi
lea ebx [ eax + ebx + 0x1 ]
cmp esi ebx
jge r-xdata
mov ebx eax
mov eax [ ebp + 0x20 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov ebx [ ebp + 0x14 ]
cmp [ ebp + 0x20 ] ebx
jge r-xdata
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x1c
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ebp + 0x20 ] ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
push ecx
mov ecx [ edx ]
lea edx [ ecx + esi * 2 ]
push edx
mov ecx edi
mov edx edi
call sub_40e790
mov eax [ edx ]
lea eax [ eax + esi * 2 ]
mov edx edi
call sub_40d260
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
dec esi
mov eax [ ebp + 0x20 ]
inc eax
mov [ ebp + 0x20 ] eax
cmp eax ebx
je r-xdata
test eax eax
jne r-xdata
push ecx
mov ecx [ edx ]
lea edx [ ecx + esi * 2 ]
push edx
mov ecx edi
mov edx edi
call sub_40e790
mov eax [ edx ]
lea eax [ eax + esi * 2 ]
mov edx edi
call sub_40d260
jmp r-xdata
sub esi edi
jmp r-xdata
inc esi
mov eax [ ebp + 0x20 ]
inc eax
mov [ ebp + 0x20 ] eax
cmp eax [ ebp + 0x14 ]
je r-xdata
test eax eax
jne r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
jmp r-xdata
add esi edi
jmp r-xdata
cmp esi ebx
jl r-xdata
sub_442886
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ ebp - 0x258 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
mov esi [ FindClose@IAT ]
call esi
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x258 ]
push edx
push r--data
call edi
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp - 0x22c ]
push r--data
push edx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push edi
call esi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ SetCurrentDirectoryW@IAT ]
lea ecx [ ebp - 0x258 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x258 ]
push ecx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
lea eax [ ebp - 0x22c ]
push eax
call sub_433c08
add esp 0xc
test al al
je r-xdata
test [ ebp - 0x258 ] 0x10
je r-xdata
lea ecx [ ebp - 0x22c ]
push r--data
push ecx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl 0x1
lea edx [ ebp - 0x22c ]
push edx
call ebx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push edx
push eax
call sub_442886
test al al
je r-xdata
push edi
call esi
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x10
push r--data
call ebx
sub_442a17
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_442a01
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_442a34
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_431dad
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_442a67
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov eax [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
pop ebp
retn 0x8
mov ecx [ ecx + 0x8 ]
mov [ edx ] ecx
sub_442a83
push ebp
mov ebp esp
sub esp 0x1c
cmp [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
mov edi [ PeekMessageW@IAT ]
mov ebx 0x1
push ebx
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
cmp [ esi + 0xf8 ] 0x0
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
lea esp [ esp ]
cmp [ esi + 0xf8 ] ebx
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ esi + 0xf8 ] ebx
mov [ esi + 0xfc ] bl
mov [ esi + 0xf8 ] ebx
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx rw-data
call sub_40d150
test eax eax
jne r-xdata
movzx eax [ rw-data ]
neg eax
pop edi
sbb eax eax
pop ebx
and eax 0xb
pop esi
mov esp ebp
pop ebp
retn 0x4
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov ebx rw-data
call sub_40d170
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x12
je r-xdata
jmp r-xdata
mov ebx 0x1
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageW@IAT ]
sub_442b97
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_442b7b
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_442bb4
push ebp
mov ebp esp
movzx eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x8 ]
mov ecx edi
mov edx 0x11
push ebx
jmp r-xdata
imul eax eax 0x53a9b4fb
mov ebx 0x1
sub ebx eax
mov eax ebx
mov [ ecx ] eax
add ecx 0x4
dec edx
jne r-xdata
push 0x44
lea eax [ esi + 0x4c ]
push edi
push eax
mov [ esi ] edx
mov [ esi + 0x4 ] 0xa
call sub_410e60
push 0x44
lea ecx [ esi + 0x90 ]
push edi
push ecx
call sub_410e60
add esp 0x18
mov edi 0x9
pop ebx
push esi
call sub_431ec8
fstp st0
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_442c29
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_431ec8
fstp st0
push esi
call sub_431ec8
fmul [ r--data ]
call sub_425a80
pop esi
cmp eax 0x100
jl r-xdata
pop ebp
retn 0x4
mov eax 0xff
sub_442c5a
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push 0x0
call sub_4148b3
add esp 0x4
push eax
push esi
call sub_442bb4
fld1
fstp [ ebp - 0x8 ]
mov eax 0x3ff00000
cmp [ ebp - 0x4 ] eax
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x8 ] eax
mov eax esi
setne cl
inc ecx
mov [ esi + 0xd4 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0xd4 ] 0x0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_442caf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi + 0x44e ] ax
shl [ esi + 0x44c ] 0x1
dec [ esi + 0x450 ]
mov eax [ esi + 0x44c ]
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
dec edi
cmp [ esi + 0x450 ] 0x0
jne r-xdata
pop edi
shr eax 0x10
pop esi
pop ebp
retn 0x8
push esi
call sub_432017
movzx eax al
shl eax 0x8
or [ esi + 0x44c ] eax
push esi
call sub_432017
movzx eax al
or [ esi + 0x44c ] eax
add [ esi + 0xc ] 0x2
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
movzx edx [ ecx + eax ]
inc eax
shl edx 0x8
or [ esi + 0x44c ] edx
mov [ esi + 0xc ] eax
movzx ecx [ eax + ecx ]
or [ esi + 0x44c ] ecx
inc eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov [ esi + 0x450 ] 0x10
sub_442d48
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x444 ]
push edi
mov edi 0x1
cmp [ esi + 0x18 ] edi
jne r-xdata
cmp eax [ esi + 0x43c ]
jae r-xdata
cmp eax [ esi + 0x43c ]
jae r-xdata
pop edi
mov [ esi + 0x440 ] 0x0
pop esi
pop ebp
retn 0x4
lea ecx [ ecx ]
push ebx
jmp r-xdata
mov ecx [ esi + 0x444 ]
mov edx [ esi + 0x438 ]
and ecx 0x1ffff
movzx eax [ ecx + edx ]
push eax
push esi
call sub_4320a4
add [ esi + 0x444 ] edi
add [ esi + 0x8 ] edi
mov ecx [ esi + 0x444 ]
cmp ecx [ esi + 0x43c ]
jb r-xdata
mov ecx [ esi + 0x444 ]
mov edx [ esi + 0x438 ]
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
and ecx 0x1ffff
mov cl [ ecx + edx ]
mov [ eax + ebx ] cl
add [ esi + 0x8 ] edi
add [ esi + 0x444 ] edi
mov edx [ esi + 0x444 ]
cmp edx [ esi + 0x43c ]
jb r-xdata
pop ebx
pop edi
mov [ esi + 0x440 ] 0x0
pop esi
pop ebp
retn 0x4
sub_442e0c
cmp [ rw-data ] 0x0
push esi
push edi
mov esi rw-data
jne r-xdata
mov [ rw-data ] 0x270
mov [ rw-data ] esi
mov edx 0xe3
push 0x0
call sub_4148b3
push eax
call sub_432281
add esp 0x8
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
mov al cl
and al 0x1
movzx eax al
neg eax
sbb eax eax
xor edi ecx
and edi 0x7ffffffe
xor edi [ esi ]
and eax 0x9908b0df
shr edi 0x1
xor edi [ esi + 0x634 ]
add esi 0x4
xor edi eax
dec edx
mov [ esi - 0x4 ] edi
jne r-xdata
mov edx 0x18c
lea esp [ esp ]
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
mov al cl
and al 0x1
movzx eax al
neg eax
sbb eax eax
xor edi ecx
and edi 0x7ffffffe
xor edi [ esi ]
and eax 0x9908b0df
shr edi 0x1
xor edi [ esi - 0x38c ]
add esi 0x4
xor edi eax
dec edx
mov [ esi - 0x4 ] edi
jne r-xdata
mov ecx [ rw-data ]
mov dl cl
and dl 0x1
movzx eax dl
mov edx [ esi ]
neg eax
sbb eax eax
xor edx ecx
and edx 0x7ffffffe
xor edx [ esi ]
and eax 0x9908b0df
shr edx 0x1
xor edx [ esi - 0x38c ]
pop edi
xor edx eax
mov [ esi ] edx
pop esi
retn
sub_442ee0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
inc eax
push esi
mov esi [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
call sub_4115d7
add esp 0x4
mov [ esi ] eax
push esi
mov [ eax ] 0x0
call sub_434a13
mov eax esi
pop esi
pop ebp
retn 0x8
sub_442f10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40ce70
test al al
jne r-xdata
mov eax 0x1
pop ebp
retn
mov ecx [ ebp + 0xc ]
call sub_40ce70
test al al
jne r-xdata
xor eax eax
pop ebp
retn
sub_442f4c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
dec eax
cmp eax 0xa
ja r-xdata
xor al al
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_442fc0 ]
mov al [ ecx ]
pop ebp
retn 0x4
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ecx + 0xc ]
push eax
call sub_436565
test al al
jne r-xdata
mov edx [ ecx ]
or edx [ ecx + 0x4 ]
je r-xdata
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
xor eax eax
cmp [ ecx ] eax
setne al
pop ebp
retn 0x4
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn 0x4
mov al 0x1
pop ebp
retn 0x4
mov al 0x1
pop ebp
retn 0x4
mov al 0x1
pop ebp
retn 0x4
sub_443006
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
dec eax
sub esp 0x8
cmp eax 0xa
ja r-xdata
xor eax eax
xor edx edx
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_4430da ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
cdq
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ecx ]
sub esp 0x8
fstp [ esp ]
call sub_4322cd
mov esp ebp
pop ebp
retn 0x4
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ecx ]
cmp [ ecx ] 0x8
jg r-xdata
push eax
call sub_41319b
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
mov eax 0x1
xor edx edx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
lea edx [ esp ]
push edx
push eax
push ecx
call sub_432bc3
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
add esp 0xc
mov esp ebp
pop ebp
retn 0x4
push 0x10
lea ecx [ esp + 0x4 ]
push ecx
add eax 0x4
push eax
call sub_432cc2
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
add esp 0xc
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x58
jne r-xdata
sub_443106
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
dec eax
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_44315e ]
mov eax 0x4
pop ebp
retn 0x4
mov eax 0x8
pop ebp
retn 0x4
mov eax 0x1
pop ebp
retn 0x4
mov eax [ ecx + 0xc ]
mov eax [ eax + 0x4 ]
lea eax [ eax + eax + 0x2 ]
pop ebp
retn 0x4
mov ecx [ ecx ]
mov eax [ ecx ]
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0xc ]
pop ebp
retn 0x4
sub_44318e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x8 ]
call sub_402250
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4431ad
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_402250
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4431cb
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
cmp esi edi
jbe r-xdata
mov ecx [ eax ]
mov eax [ ebx ]
mov edx esi
call sub_40d260
test eax eax
js r-xdata
mov esi edi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn
cmp esi edi
jae r-xdata
sub_443206
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ecx
call sub_43259d
test al al
jne r-xdata
mov al 0x1
pop ebp
retn 0x4
push ecx
call sub_43257b
test al al
jne r-xdata
push ecx
call sub_432559
test al al
jne r-xdata
pop ebp
retn 0x4
sub_443234
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edx
call sub_4325be
test al al
jne r-xdata
mov al 0x1
pop ebp
retn 0x4
push edx
call sub_443206
test al al
jne r-xdata
cmp [ edx + 0x8 ] 0x0
sete al
pop ebp
retn 0x4
sub_443260
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0xfa0
lea eax [ esi + 0x14 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push eax
mov [ esi + 0xc ] 0x0
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov edx [ ebp + 0xc ]
push 0x0
lea ecx [ esi + 0x2c ]
push ecx
push edx
mov [ esi + 0x30 ] 0x0
call sub_4325e0
add esp 0xc
push 0x1f4
lea eax [ esi + 0x34 ]
push eax
call [ InterlockedExchange@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4432c0
push ebp
mov ebp esp
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_443260
pop ebp
retn
sub_4432e1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push eax
call sub_432651
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x14
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x18 ]
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push esi
call sub_432614
push ebx
call sub_432614
mov edx [ edi ]
push 0x0
push esi
push edx
call sub_4325e0
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push 0x0
push ebx
push ecx
call sub_4325e0
mov eax [ edi ]
add esp 0x20
sub_44334f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
test al 0x10
je r-xdata
test al 0x1
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x1
push esi
push eax
call sub_4325e0
mov eax [ esi ]
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0x80
push 0x3
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push edx
push esi
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0xc
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
lea ecx [ ebp + 0xc ]
push ecx
push edx
call sub_4325e0
push esi
call sub_432614
mov eax [ ebp + 0xc ]
add esp 0x10
mov [ esi ] eax
pop esi
mov esp ebp
pop ebp
retn 0xc
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_443442
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
test al 0x10
je r-xdata
test [ ebp + 0xc ] eax
je r-xdata
push ecx
call [ GetStdHandle@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
push ecx
call [ GetStdHandle@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn 0x14
push 0x1
push esi
push eax
call sub_4325e0
mov eax [ esi ]
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn 0x14
push 0x0
push 0x80
push 0x3
lea eax [ ebp - 0xc ]
push eax
push 0x2
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x18 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push esi
push edx
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x14
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push edx
call sub_4325e0
push esi
call sub_432614
mov eax [ ebp + 0x14 ]
add esp 0x10
mov [ esi ] eax
pop esi
mov esp ebp
pop ebp
retn 0x14
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_443537
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
call sub_432614
lea ecx [ esi + 0xc ]
push ecx
call sub_432614
add esi 0x14
push esi
call sub_432614
add esp 0xc
pop esi
pop ebp
retn 0x4
sub_443561
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
xor edx edx
push ecx
mov [ ebp + 0x10 ] edx
call sub_432631
test al al
je r-xdata
pop edi
mov eax edx
pop ebx
pop ebp
retn 0xc
test ebx ebx
je r-xdata
test edi edi
je r-xdata
push esi
push edx
lea eax [ ebp + 0x10 ]
push eax
lea esi [ ecx + 0x18 ]
mov ecx [ esi ]
push edi
push ebx
push ecx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
pop esi
pop edi
pop ebx
pop ebp
retn 0xc
push esi
call sub_432614
add esp 0x4
sub_4435d1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
lea edi [ esi + 0x10 ]
push edi
lea ebx [ esi + 0x14 ]
push ebx
push esi
call sub_4432e1
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
push ebx
push 0xfffffff4
push 0x4
push esi
call sub_443442
sub_443607
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0x14 ]
push ecx
lea edi [ esi + 0x8 ]
push edi
lea ebx [ esi + 0xc ]
push ebx
push esi
call sub_4432e1
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
push ebx
push 0xfffffff5
push 0x2
push esi
call sub_443442
sub_44363d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx 0x1
test eax eax
je r-xdata
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
test eax eax
je r-xdata
add [ eax + 0x4 ] ecx
mov eax [ edi + 0x8 ]
push 0x0
lea edx [ esi + 0x8 ]
push edx
push eax
call sub_4325e0
mov edx [ edi + 0xc ]
push 0x0
lea ecx [ esi + 0xc ]
push ecx
push edx
call sub_4325e0
mov ecx [ edi + 0x10 ]
push 0x0
lea eax [ esi + 0x10 ]
push eax
push ecx
call sub_4325e0
mov eax [ edi + 0x14 ]
push 0x0
lea edx [ esi + 0x14 ]
push edx
push eax
call sub_4325e0
mov edx [ edi + 0x18 ]
push 0x0
lea ecx [ esi + 0x18 ]
push ecx
push edx
call sub_4325e0
mov ecx [ edi + 0x1c ]
push 0x0
lea eax [ esi + 0x1c ]
push eax
push ecx
call sub_4325e0
add esp 0x48
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
add [ eax + 0x4 ] ecx
sub_4436d6
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_4436f8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push r--data
push esi
call sub_4323c5
mov edi [ ebp + 0x8 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_4323c5
add esp 0x8
test eax eax
jne r-xdata
lea eax [ edi + 0x30 ]
push eax
push esi
call sub_4323c5
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
sub_443758
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4370df
test al al
je r-xdata
mov eax [ esi ]
mov cx [ ebp + 0xc ]
mov [ esi + 0x4 ] 0x1
mov [ eax ] cx
mov edx [ esi ]
xor eax eax
mov [ edx + 0x2 ] ax
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_4013a0
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov [ esi ] eax
sub_4437bd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
push esi
lea esi [ eax - 0x4 ]
push sub_4437b5
push ecx
push 0x20
push eax
call sub_410c20
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4437e8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_4437bd
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebp
retn 0x4
dec [ eax ]
jne r-xdata
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x10 ]
push eax
call sub_4111dc
mov ecx [ esi + 0x8 ]
push ecx
call sub_4111dc
add esp 0x8
sub_44389a
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
call sub_410160
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43652f
mov edi [ ebp - 0x10 ]
xor ebx ebx
push edi
mov [ esi + 0x4 ] ebx
mov [ esi ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0x10 ] 0x1
call sub_4111c1
add esp 0x4
test eax eax
je r-xdata
push r--data
push edi
call sub_413eb8
mov edi eax
add esp 0x8
test edi edi
je r-xdata
nop
mov eax [ esi + 0x4 ]
imul eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ esi ] edx
call sub_436508
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
push edi
inc ebx
call sub_4111c1
add esp 0x4
cmp ebx eax
jb r-xdata
inc [ ebp + 0x10 ]
push r--data
push 0x0
call sub_413eb8
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov [ ebp - 0x8 ] eax
cmp [ edi + ebx * 2 ] 0xa
jne r-xdata
push esi
push edi
call sub_4111c1
mov ecx [ ebp + 0x8 ]
add esp 0x4
push eax
push edi
push ecx
call [ GetTextExtentPoint32W@IAT ]
mov eax [ esi ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
sub_44395e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x10
push 0x10
push 0x1
push 0x63
push esi
call [ LoadImageW@IAT ]
push 0x63
push sub_43305f
push 0xe
push 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x10
mov [ rw-data ] 0x10
mov [ rw-data ] eax
call [ EnumResourceNamesW@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn
sub_4439c1
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push esi
call sub_433396
add esp 0x4
test al al
jne r-xdata
pop esi
pop ebp
retn
push 0x1
jmp r-xdata
push 0x0
push esi
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_4439fb
push ebp
mov ebp esp
sub esp 0x8
push esi
push 0x10000
call sub_4115d7
add esp 0x4
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43652f
mov esi [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push 0x7fff
push esi
push ecx
call [ GetClassNameW@IAT ]
cmp [ esi ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
push edx
call sub_436508
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0xc ]
push edi
push esi
call sub_433584
push edi
push r--data
call sub_433584
add esp 0x10
pop edi
sub_443a87
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_433396
add esp 0x4
test al al
jne r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x8
push esi
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push edi
push 0x0
push 0x0
push 0xe
push esi
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push ebx
xor ecx ecx
lea ebx [ edi + 0x1 ]
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ebx
push 0xd
push eax
call [ SendMessageW@IAT ]
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop ebx
test eax eax
jle r-xdata
mov edi 0x7fff
push esi
call sub_4111dc
add esp 0x4
pop edi
mov edi [ ebp + 0xc ]
push edi
push esi
call sub_433584
push edi
push r--data
call sub_433584
add esp 0x10
sub_443b32
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ ebp + 0xc ]
push rw-data
push sub_443a87
xor eax eax
push edx
mov [ rw-data ] ax
mov [ rw-data ] cl
call [ EnumChildWindows@IAT ]
mov eax rw-data
pop ebp
retn
sub_443b61
push ebp
mov ebp esp
push ebx
push esi
push edi
call [ timeGetTime@IAT ]
cmp [ rw-data ] 0x0
mov esi eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov edi edi
mov eax [ ebx ]
push 0x0
push sub_433d09
push eax
mov [ rw-data ] ecx
call [ EnumThreadWindows@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
jl r-xdata
push 0x0
push r--data
push 0x0
push eax
mov [ rw-data ] 0x1
call [ FindWindowExW@IAT ]
mov ecx [ rw-data ]
mov esi eax
test esi esi
je r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax edi
jae r-xdata
push 0x0
push 0x0
push 0x10
push ecx
call [ SendMessageW@IAT ]
push 0xfa
call [ Sleep@IAT ]
mov edx [ rw-data ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x1
push ecx
call sub_4439c1
mov edx [ rw-data ]
add esp 0x8
push edx
call [ SetActiveWindow@IAT ]
push 0x0
push 0x0
push 0xf5
push esi
call [ SendMessageW@IAT ]
mov eax [ rw-data ]
push 0x0
push eax
call sub_4439c1
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
call sub_40c620
mov edi [ ebx + 0x4 ]
xor ecx ecx
cmp edx ecx
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax [ rw-data ]
push 0x0
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_443c87
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi [ ebp + 0x18 ]
xor esi esi
mov [ rw-data ] 0x0
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call [ MessageBoxW@IAT ]
mov edi eax
test esi esi
je r-xdata
mov [ rw-data ] 0x1
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x18 ]
push eax
push esi
lea ecx [ ebp - 0x8 ]
push ecx
push sub_443b61
push esi
push esi
mov [ ebp - 0x4 ] edi
call sub_413d7f
add esp 0x18
mov esi eax
cmp [ rw-data ] 0x1
jne r-xdata
push 0xffffffff
push esi
mov [ rw-data ] 0x0
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
sub_443d19
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
je r-xdata
push edi
push ebx
push esi
call sub_433ee0
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
push esi
call sub_4111c1
add esp 0x4
cmp eax 0xf
jbe r-xdata
push edi
push ebx
push esi
call sub_433d9e
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_443d73
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x14 ]
push edi
mov edi [ esi + 0x10 ]
push 0x2
push 0x0
push 0x0
call sub_40df90
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x14 ]
push 0x0
push ebx
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
call sub_40df90
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_443db4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_40e050
mov ecx [ esi + 0x10 ]
sub ecx eax
mov eax [ esi + 0x14 ]
push 0x1
push 0x0
sbb eax edx
push eax
mov eax [ esi ]
push ecx
push eax
call [ SetFilePointerEx@IAT ]
push esi
call sub_40e050
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
pop esi
pop ebp
retn 0x4
sub_443df9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push esi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call sub_40e050
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
pop esi
pop ebp
retn 0x4
sub_443e36
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_443e19
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x0
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi ]
push ecx
push edx
push eax
call [ WriteFile@IAT ]
mov eax [ ebp + 0x8 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
pop esi
pop ebp
retn 0xc
sub_443e69
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x2
push edi
mov edi [ ebp + 0xc ]
test [ esi + 0x2c ] bl
je r-xdata
push edi
call sub_403910
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_403910
cmp eax ebx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
mov cl [ ebp + 0xd ]
mov [ ebp + 0xd ] al
mov [ ebp + 0xc ] cl
mov dx [ ebp + 0xc ]
mov [ edi ] dx
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
sub_443ec4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ebx 0x1
call sub_403910
test eax eax
pop esi
setne al
pop ebx
pop ebp
retn 0x8
sub_443ee5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ edi ]
push eax
call sub_403910
mov [ edi ] eax
pop edi
test eax eax
pop esi
setne al
pop ebx
pop ebp
retn 0xc
sub_443f0a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ eax ]
push esi
mov esi [ eax + 0x4 ]
push edi
add esi esi
push esi
call sub_4115d7
add esp 0x4
xor ecx ecx
mov edi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
push eax
call sub_443e36
push edi
mov ebx eax
call sub_4111dc
add esp 0x4
xor eax eax
cmp ebx esi
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x8
mov edx edi
mov eax ebx
sub edx ebx
jmp r-xdata
movzx ebx [ eax + 0x1 ]
mov [ edx + eax ] bl
movzx ebx [ eax ]
mov [ edi + ecx + 0x1 ] bl
add ecx 0x2
add eax 0x2
cmp ecx esi
jb r-xdata
sub_443f76
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
add esi esi
push esi
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_443e36
xor ecx ecx
cmp eax esi
sete al
pop esi
pop ebp
retn 0x8
sub_443f9b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push esi
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_443e36
xor ecx ecx
cmp eax esi
sete al
pop esi
pop ebp
retn 0x8
sub_443fbe
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push esi
push eax
push ecx
call sub_443e36
xor ecx ecx
cmp eax esi
sete al
pop esi
pop ebp
retn 0xc
sub_443fdf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
call sub_40da20
xor eax eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
call sub_402250
push esi
call sub_4340db
pop esi
pop ebp
retn 0x4
sub_444006
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp + 0xc ] 0xffffffff
test esi esi
jne r-xdata
cmp esi 0x5
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
lea eax [ esi + 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi 0x6
je r-xdata
push edi
cmp esi 0x3
je r-xdata
mov edi esi
jmp r-xdata
cmp esi 0x4
je r-xdata
cmp [ edi * 4 + rw-data ] 0x0
je r-xdata
lea ecx [ ebp + 0xc ]
push ecx
push esi
push rw-data
call sub_434179
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi * 4 + rw-data ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
mov [ ebp - 0x30 ] 0x30
call sub_412f40
add esp 0xc
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x2c ] 0x4
mov edx [ edi * 4 + rw-data ]
mov eax [ edx ]
push 0x0
push esi
push eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
pop edi
pop esi
mov [ ebx ] ecx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4440e0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp + 0x10 ] 0xffffffff
cmp eax 0x5
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp eax 0x6
je r-xdata
push ebx
cmp eax 0x3
je r-xdata
mov ebx eax
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ esi ] 0x0
test eax eax
je r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
push eax
push rw-data
call sub_434179
test al al
jne r-xdata
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
mov edi [ eax ]
push 0x2c
lea edx [ ebp - 0x2c ]
push 0x0
push edx
mov [ ebp - 0x30 ] 0x30
call sub_412f40
add esp 0xc
test edi edi
je r-xdata
mov ebx [ ebp + 0x10 ]
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x208
call sub_4115d7
mov ecx [ ebp + 0xc ]
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
push 0x0
push ebx
push edi
mov [ ecx ] eax
mov [ ebp - 0x2c ] 0x11
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
call sub_4111dc
add esp 0x4
test [ ebp - 0x28 ] 0x800
jne r-xdata
mov eax [ ebp - 0x24 ]
test al 0x3
je r-xdata
or [ esi ] 0x40
or [ esi ] 0x80
jmp r-xdata
test al 0x8
je r-xdata
or [ esi ] 0x100
test eax 0x8080
je r-xdata
or [ esi ] 0x4
or [ esi ] 0x1
jmp r-xdata
pop edi
pop ebx
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
or [ esi ] 0x200
test eax 0x1000
je r-xdata
sub_44420e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_402250
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44422d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp esi 0x207
jge r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + esi * 4 + 0x1b4 ]
push edi
lea edi [ ebx + esi * 4 + 0x1b4 ]
test eax eax
je r-xdata
mov [ edi ] 0x0
cmp esi [ ebx + 0x9d0 ]
jne r-xdata
push eax
call sub_44318e
pop edi
mov eax esi
cmp esi 0x7
jl r-xdata
xor eax eax
cmp [ edi ] 0x0
jne r-xdata
cmp eax 0x7
jge r-xdata
dec eax
sub edi 0x4
cmp eax 0x7
jge r-xdata
mov [ ebx + 0x9d0 ] eax
pop edi
xor eax eax
pop esi
mov [ ebx + 0x9d0 ] eax
pop ebx
pop ebp
retn 0x8
sub_44429f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1a4 ] 0x0
push edi
jne r-xdata
push ebx
lea eax [ esi + 0x1ac ]
push eax
lea edi [ esi + 0x1a8 ]
push edi
call sub_4341ba
lea ebx [ esi + 0x4c ]
push ebx
call sub_436565
test al al
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
push ebx
call sub_436565
pop ebx
test al al
jne r-xdata
mov eax [ ebx ]
lea ecx [ esi + 0x1ac ]
push ecx
mov ecx [ esi + 0x14 ]
push eax
push ecx
push esi
call sub_4341e6
mov [ edi ] eax
mov edx [ esi + 0x1a4 ]
mov [ edi ] edx
cmp [ edi ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_444310
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x10 ]
push esi
xor esi esi
cmp eax esi
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x20 ] esi
jne r-xdata
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
pop edi
push edi
call sub_434418
push 0xf
call sub_434582
inc esi
cmp esi 0x3
jl r-xdata
mov edi [ ebx + 0x10 ]
call [ GetForegroundWindow@IAT ]
cmp eax edi
je r-xdata
sub_444362
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ eax + 0x4 ]
dec edi
mov [ esi ] 0x0
mov ebx 0x1
mov [ ebp + 0xc ] 0x0
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x30
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
pop edi
mov [ esi ] 0x0
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
cmp eax 0x41
jb r-xdata
cmp eax 0x39
ja r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
lea edx [ eax - 0x30 ]
imul edx ebx
add [ esi ] edx
jmp r-xdata
cmp eax 0x66
ja r-xdata
add eax 0xffffffc9
imul eax ebx
add [ esi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
inc eax
dec edi
shl ebx 0x4
mov [ ebp + 0xc ] eax
cmp eax 0x8
jl r-xdata
lea ecx [ eax - 0x57 ]
imul ecx ebx
add [ esi ] ecx
test edi edi
js r-xdata
sub_4443fc
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
push ebx
test eax eax
je r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
movzx eax [ esi + 0x27 ]
push 0x2
push eax
push 0xa0
push esi
call sub_43471d
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x3 ] 0x0
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
movzx ecx [ esi + 0x28 ]
push 0x2
push ecx
push 0xa1
push esi
call sub_43471d
cmp [ edi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
cmp [ edi ] 0x0
mov al 0x80
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x3 ] 0x0
je r-xdata
movzx edx [ esi + 0x24 ]
push 0x2
push edx
push 0x11
push esi
call sub_43471d
movzx edx [ esi + 0x26 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0xc0000001
push edx
push 0x10
push 0x101
push eax
call ebx
cmp [ edi + 0x1 ] 0x0
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
xor [ ebp - 0xf0 ] al
xor [ ebp - 0x60 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x4 ] 0x0
je r-xdata
movzx eax [ esi + 0x25 ]
push 0x2
push eax
push 0x12
push esi
call sub_43471d
mov al [ edi + 0x3 ]
test al al
je r-xdata
movzx ecx [ esi + 0x24 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0xc0000001
push ecx
push 0x11
push 0x101
push edx
call ebx
cmp [ edi + 0x2 ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
xor [ ebp - 0xf0 ] al
xor [ ebp - 0x5f ] al
push esi
call sub_4347a9
pop ebx
movzx ecx [ esi + 0x29 ]
push 0x2
push ecx
push 0x5b
push esi
call sub_43471d
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
cmp [ edi + 0x3 ] 0x0
je r-xdata
xor [ ebp - 0xef ] al
movzx ecx [ esi + 0x29 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0xc0000001
push ecx
push 0x5b
push 0x101
push edx
call ebx
push esi
call sub_4347a9
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
xor [ ebp - 0xee ] al
movzx edx [ esi + 0x25 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0xc0000001
push edx
push 0x12
push 0x101
push eax
movzx eax [ esi + 0x25 ]
mov ecx [ esi + 0x20 ]
shl eax 0x10
or eax 0xe0000001
push eax
push 0x12
push 0x105
push ecx
jmp r-xdata
lea ecx [ ebp - 0x100 ]
push ecx
call [ SetKeyboardState@IAT ]
xor [ ebp - 0xa5 ] al
call ebx
sub_4445f4
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
push ebx
test eax eax
je r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
movzx eax [ esi + 0x27 ]
push 0x0
push eax
push 0xa0
push esi
call sub_43471d
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x3 ] 0x0
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
movzx ecx [ esi + 0x28 ]
push 0x0
push ecx
push 0xa1
push esi
call sub_43471d
cmp [ edi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
cmp [ edi ] 0x0
mov al 0x80
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x3 ] 0x0
je r-xdata
movzx edx [ esi + 0x24 ]
push 0x0
push edx
push 0x11
push esi
call sub_43471d
movzx edx [ esi + 0x26 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0x1
push edx
push 0x10
push 0x100
push eax
call ebx
cmp [ edi + 0x1 ] 0x0
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
or [ ebp - 0xf0 ] al
or [ ebp - 0x60 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x4 ] 0x0
je r-xdata
movzx eax [ esi + 0x25 ]
push 0x0
push eax
push 0x12
push esi
call sub_43471d
mov al [ edi + 0x3 ]
test al al
je r-xdata
movzx ecx [ esi + 0x24 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0x1
push ecx
push 0x11
push 0x100
push edx
call ebx
cmp [ edi + 0x2 ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
or [ ebp - 0xf0 ] al
or [ ebp - 0x5f ] al
push esi
call sub_43477c
pop ebx
movzx ecx [ esi + 0x29 ]
push 0x0
push ecx
push 0x5b
push esi
call sub_43471d
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
cmp [ edi + 0x3 ] 0x0
je r-xdata
or [ ebp - 0xef ] al
movzx ecx [ esi + 0x29 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0x1
push ecx
push 0x5b
push 0x100
push edx
call ebx
push esi
call sub_43477c
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
or [ ebp - 0xee ] al
movzx edx [ esi + 0x25 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0x1
push edx
push 0x12
push 0x100
push eax
movzx eax [ esi + 0x25 ]
mov ecx [ esi + 0x20 ]
shl eax 0x10
or eax 0x20000001
push eax
push 0x12
push 0x104
push ecx
jmp r-xdata
lea ecx [ ebp - 0x100 ]
push ecx
call [ SetKeyboardState@IAT ]
or [ ebp - 0xa5 ] al
call ebx
sub_4447e0
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
je r-xdata
push ebx
mov ebx [ GetAsyncKeyState@IAT ]
push 0xa0
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call [ GetKeyState@IAT ]
mov edx 0x8000
test dx ax
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al 0x80
cmp [ ebp - 0x60 ] al
je r-xdata
push 0xa1
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi ] 0x1
cmp [ edi + 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0xf0 ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call [ GetKeyState@IAT ]
mov edx 0x8000
test dx ax
je r-xdata
cmp [ ebp - 0x5f ] al
jne r-xdata
mov [ esi ] 0x1
push 0x11
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x1 ] 0x1
cmp [ ebp - 0xef ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x11
call [ GetKeyState@IAT ]
mov edx 0x8000
test dx ax
je r-xdata
cmp [ ebp - 0xee ] al
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov [ esi + 0x1 ] 0x1
push 0x12
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x2 ] 0x1
cmp [ ebp - 0xa5 ] al
jne r-xdata
cmp [ edi + 0x1d ] 0x0
jne r-xdata
mov [ esi + 0x2 ] 0x1
cmp [ edi + 0x1d ] 0x0
jne r-xdata
push 0x12
call [ GetKeyState@IAT ]
mov edx 0x8000
test dx ax
je r-xdata
cmp [ edi + 0x1e ] 0x0
mov eax esi
jne r-xdata
mov [ esi + 0x3 ] 0x1
push 0x5b
call ebx
mov ecx 0x8000
pop ebx
test cx ax
jne r-xdata
mov [ esi + 0x3 ] 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
mov [ esi + 0x4 ] 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x1e ] 0x0
mov eax esi
jne r-xdata
push 0x5b
call [ GetKeyState@IAT ]
mov edx 0x8000
test dx ax
je r-xdata
mov [ esi + 0x4 ] 0x1
sub_444980
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xa ] 0x0
je r-xdata
push esi
call sub_43487c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
mov al [ esi ]
cmp al 0x2d
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
mov al 0x1
pop esi
pop ebp
retn 0x4
cmp al 0x2e
je r-xdata
cmp al 0x23
je r-xdata
cmp al 0x28
je r-xdata
cmp al 0x22
je r-xdata
cmp al 0x25
je r-xdata
cmp al 0x27
je r-xdata
cmp al 0x24
je r-xdata
cmp al 0x26
je r-xdata
cmp al 0x21
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x5d
je r-xdata
cmp al 0x5b
je r-xdata
cmp al 0x5c
je r-xdata
cmp al 0xa5
je r-xdata
cmp al 0xa3
je r-xdata
cmp al 0x5f
je r-xdata
cmp al 0xa6
je r-xdata
cmp al 0xa7
je r-xdata
cmp al 0xa8
je r-xdata
cmp al 0xa9
je r-xdata
cmp al 0xaa
je r-xdata
cmp al 0xab
je r-xdata
cmp al 0xac
je r-xdata
cmp al 0xad
je r-xdata
cmp al 0xae
je r-xdata
cmp al 0xaf
je r-xdata
cmp al 0xb0
je r-xdata
cmp al 0xb1
je r-xdata
cmp al 0xb2
je r-xdata
cmp al 0xb3
je r-xdata
cmp al 0xb4
je r-xdata
cmp al 0xb5
je r-xdata
cmp al 0xb6
je r-xdata
cmp al 0xb7
jne r-xdata
sub_444a4e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor cl cl
mov [ eax + 0x1 ] 0x0
mov [ eax + 0x5 ] 0x0
xor edx edx
mov [ eax + 0x8 ] dx
mov [ eax + 0x7 ] cl
mov [ eax ] 0xff
mov [ eax + 0x2 ] edx
mov [ eax + 0x6 ] cl
mov [ eax + 0xa ] cl
pop ebp
retn 0x4
sub_444a7e
push ebp
mov ebp esp
push esi
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ esi * 4 + rw-data ]
push eax
push ecx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
inc esi
cmp esi 0x2b
jl r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn 0x4
sub_444ad7
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43488e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_444af8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
lea ecx [ eax + 0x4 ]
push edi
mov edi [ eax + edx ]
mov [ esi ] ecx
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx eax
lea eax [ edi + edi ]
push eax
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push eax
push ebx
call sub_410e60
lea eax [ edi + edi ]
add [ esi ] eax
xor ecx ecx
mov [ eax + ebx ] cx
add esp 0x10
xor eax eax
test edi edi
jle r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
xor [ ebx + eax * 2 ] di
inc eax
cmp eax edi
jl r-xdata
sub_444b5f
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
xor ebx ebx
lea ecx [ ecx ]
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
inc esi
jmp r-xdata
xor edx edx
mov [ edi + ebx * 2 ] dx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ ebx ]
movzx eax [ edi + esi * 2 ]
push eax
call sub_4349d1
add esp 0x4
test eax eax
je r-xdata
inc esi
mov [ edi + ebx * 2 ] ax
movzx eax [ edi + esi * 2 ]
inc ebx
test ax ax
jne r-xdata
xor ecx ecx
mov [ edi + ebx * 2 ] cx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_444bbb
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4111c1
add esp 0x4
test eax eax
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
xor ecx ecx
mov [ edi + esi * 2 + 0x2 ] cx
pop esi
lea esp [ esp ]
dec esi
jns r-xdata
movzx eax [ edi + esi * 2 ]
push eax
call sub_4349d1
add esp 0x4
test eax eax
je r-xdata
sub_444bfc
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
inc eax
jmp r-xdata
cmp ecx 0x9
jne r-xdata
movzx ecx [ esi + eax * 2 ]
cmp ecx 0x20
je r-xdata
movzx ecx [ esi + eax * 2 ]
cmp ecx 0x22
jne r-xdata
cmp ecx 0x27
jne r-xdata
mov edx ecx
mov [ ebp + 0x13 ] 0x1
jmp r-xdata
cmp ecx 0x3c
jne r-xdata
mov edx ecx
mov [ ebp + 0x13 ] 0x1
jmp r-xdata
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
xor ebx ebx
cmp cx dx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ ecx + 0x2 ]
mov [ ebp + 0x13 ] 0x0
cmp [ esi + eax * 2 ] dx
jne r-xdata
test cx cx
je r-xdata
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
cmp ecx 0x20
je r-xdata
inc eax
mov [ edi + ebx * 2 ] cx
movzx ecx [ esi + eax * 2 ]
inc ebx
cmp cx dx
jne r-xdata
cmp ecx 0x9
je r-xdata
movzx eax [ esi + eax * 2 ]
test ax ax
je r-xdata
xor eax eax
mov [ edi + ebx * 2 ] ax
call sub_410160
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_43652f
mov esi [ ebp - 0x8 ]
push esi
call sub_444b5f
push esi
call sub_444bbb
cmp [ ebp + 0x13 ] 0x0
je r-xdata
cmp eax 0x3b
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor ebx ebx
cmp [ ecx + 0x3c ] ebx
jbe r-xdata
push edi
call sub_4339fa
add esp 0x4
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_436508
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_411567
push esi
push edi
call sub_411536
push edi
call sub_4339fa
add esp 0x14
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x3c ]
dec ebx
js r-xdata
lea edx [ ebp - 0x8 ]
push edx
call sub_436508
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
push edi
call sub_411567
mov edx [ ebp + 0x8 ]
inc ebx
add esp 0x8
cmp ebx [ edx + 0x3c ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov eax [ edx + ebx * 4 ]
push eax
push edi
call sub_411567
push esi
push edi
call sub_411536
push edi
call sub_4339fa
add esp 0x14
test al al
jne r-xdata
push esi
push edi
call sub_411567
add esp 0x8
dec ebx
jns r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_436508
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_444d96
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4370df
test al al
je r-xdata
mov eax [ esi ]
mov [ esi + 0x4 ] 0x0
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_434a13
push 0x10
mov [ esi + 0x8 ] 0x10
call sub_4115d7
add esp 0x4
mov [ esi ] eax
sub_444df3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0xc
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push edi
add eax eax
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410e60
mov edx [ esi + 0x4 ]
push edx
call sub_4111dc
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + edx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx ]
mov [ eax ] ecx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ ecx + edx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x8
sub_444e90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_413530
mov [ esi + 0x4 ] eax
add esp 0x4
inc eax
push eax
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
mov ecx [ esi + 0x4 ]
inc ecx
push ecx
push edi
push eax
mov [ esi ] eax
call sub_410e60
add esp 0x10
push esi
call sub_434a13
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_444ed6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4370df
test al al
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
dec [ eax ]
push edi
push esi
call sub_434a13
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
inc ecx
push ecx
mov edi eax
push edx
push edi
call sub_410e60
add esp 0x10
mov [ esi ] edi
pop edi
sub_444f21
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
push ebx
push esi
push edi
xor esi esi
xor edi edi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x4 ]
cmp ebx esi
jle r-xdata
mov ecx [ ecx ]
cmp ecx 0xffffffff
je r-xdata
mov [ eax ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
lea ebx [ ebx ]
mov esi eax
mov edi ecx
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_434a40
movzx ecx [ eax ]
push ecx
call sub_434a5e
add esi eax
inc edi
cmp ebx esi
jg r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_444f80
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xor esi esi
xor ecx ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
cmp eax ecx
jle r-xdata
mov edx [ edx ]
cmp edx 0xffffffff
je r-xdata
mov [ ebx + 0x4 ] esi
pop esi
pop ebx
pop ebp
retn 0xc
sub eax ecx
push edi
mov edi eax
lea ecx [ ecx ]
mov esi eax
mov ecx edx
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_434a40
movzx ecx [ eax ]
push ecx
call sub_434a5e
add esi eax
dec edi
jne r-xdata
pop edi
sub_444fd2
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
call [ lstrlenW@IAT ]
mov [ ebp - 0x18 ] eax
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov [ esi + 0x4 ] eax
xor eax eax
add esp 0x4
xor ebx ebx
mov [ ebp + 0x8 ] 0x2
cmp [ ebp - 0x18 ] eax
jle r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
lea ebx [ ebx ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1c
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov [ esi + 0xc ] eax
mov [ eax ] r--data
mov eax [ esi + 0xc ]
xor edi edi
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0xc ]
or eax 0xffffffff
mov [ ecx + 0x8 ] eax
mov edx [ esi + 0xc ]
mov [ edx + 0xc ] eax
mov ecx [ esi + 0xc ]
mov [ ecx + 0x10 ] 0x4
mov edx [ esi + 0xc ]
mov [ edx + 0x14 ] edi
mov ecx [ esi + 0xc ]
mov edx 0x1
mov [ ecx + 0x18 ] dx
mov ecx [ esi + 0xc ]
xor edx edx
mov [ ecx + 0x1a ] dx
mov ecx [ esi + 0xc ]
mov [ ecx + 0x1c ] edi
mov edx [ esi + 0xc ]
mov [ edx + 0x20 ] edi
mov ecx [ esi + 0xc ]
mov [ ecx + 0x24 ] edi
mov edx [ esi + 0xc ]
mov [ edx + 0x28 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x2c ] 0x4
mov ecx [ esi + 0xc ]
mov [ ecx + 0x30 ] edi
mov edx [ esi + 0xc ]
mov eax 0x2
mov [ edx + 0x34 ] ax
mov ecx [ esi + 0xc ]
mov edx 0x13
mov [ ecx + 0x36 ] dx
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov [ eax ] edi
mov ecx [ esi + 0x8 ]
add esp 0x8
mov [ ecx + 0x4 ] edi
cmp [ esi + 0x24 ] edi
je r-xdata
add [ ebp + 0x8 ] 0x3
movzx ecx [ edi + eax * 2 ]
cmp ecx 0x20
je r-xdata
inc eax
cmp [ edi + eax * 2 ] 0x20
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edi
cmp ebx edi
jle r-xdata
mov edx [ esi + 0xc ]
mov [ edx + 0x38 ] r--data
mov eax [ esi + 0xc ]
mov [ eax + 0x40 ] 0x1
mov ecx [ esi + 0xc ]
mov [ ecx + 0x44 ] edi
mov edx [ esi + 0xc ]
mov [ edx + 0x48 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x4c ] 0x2
mov ecx [ esi + 0xc ]
mov edx 0x1
mov [ ecx + 0x50 ] dx
mov eax [ esi + 0xc ]
mov ecx 0x3
push 0x10
mov [ ebp + 0xc ] 0x5
mov [ eax + 0x52 ] cx
call sub_4115d7
mov edx [ esi + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx 0x48
mov [ ecx + 0x4 ] dx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx 0x4013
mov [ ecx + 0xc ] dx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] edi
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ eax + 0x8 ] edi
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x8 ]
mov edx [ esi + 0xc ]
mov [ edx + 0x3c ] eax
mov ecx [ esi + 0xc ]
mov [ ecx + 0x54 ] r--data
mov edx [ esi + 0xc ]
mov [ edx + 0x58 ] edi
mov ecx [ esi + 0xc ]
mov eax 0x2
mov [ ecx + 0x5c ] eax
mov edx [ esi + 0xc ]
mov [ edx + 0x60 ] 0x1
mov ecx [ esi + 0xc ]
mov [ ecx + 0x64 ] 0x4
mov edx [ esi + 0xc ]
mov [ edx + 0x68 ] edi
mov ecx [ esi + 0xc ]
mov edx 0x1
mov [ ecx + 0x6c ] dx
mov ecx [ esi + 0xc ]
mov edx 0x13
mov [ ecx + 0x6e ] dx
mov ecx [ esi + 0x8 ]
mov [ ecx + 0xc ] edi
mov edx [ esi + 0xc ]
mov [ edx + 0x70 ] r--data
mov ecx [ esi + 0xc ]
mov [ ecx + 0x74 ] edi
mov edx [ esi + 0xc ]
mov [ edx + 0x78 ] 0x3
mov ecx [ esi + 0xc ]
mov [ ecx + 0x7c ] eax
mov edx [ esi + 0xc ]
mov [ edx + 0x80 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x84 ] edi
mov ecx [ esi + 0xc ]
mov edx 0x1
mov [ ecx + 0x88 ] dx
mov eax [ esi + 0xc ]
mov ecx 0x13
mov [ eax + 0x8a ] cx
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx + 0x10 ] edi
mov ecx [ esi + 0x4 ]
inc [ ebp + 0x8 ]
mov edx 0x7c
mov [ ecx + ebx * 2 ] dx
inc ebx
cmp [ edi + eax * 2 ] 0x20
jne r-xdata
mov edx [ esi + 0x4 ]
inc eax
mov [ edx + ebx * 2 ] cx
movzx ecx [ edi + eax * 2 ]
inc ebx
cmp ecx 0x20
jne r-xdata
push 0x8
call sub_4115d7
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
add esp 0x4
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ edx ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
lea edi [ eax * 8 ]
sub edi eax
add edi edi
lea ecx [ eax * 4 ]
add edi edi
add eax 0xfffffffe
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
movzx ecx [ edi + eax * 2 ]
cmp ecx 0x20
je r-xdata
inc eax
cmp [ edi + eax * 2 ] 0x20
je r-xdata
cmp edx 0xa
je r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
lea edx [ ecx + eax * 2 + 0x2 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx 0x3b
mov [ ecx + ebx * 2 ] dx
mov ecx 0x1
add ebx ecx
cmp [ edi + eax * 2 ] 0x20
jne r-xdata
cmp cx 0x28
je r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x14 ]
mov [ edi + eax ] ecx
mov eax [ ebp - 0x1c ]
mov edx [ esi + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ edx + edi + 0x8 ] ecx
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0xc ]
mov [ ecx + edi + 0xc ] eax
mov edx [ esi + 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax 0x1
mov [ edx + edi + 0x18 ] ax
xor edx edx
xor eax eax
mov [ ebp - 0x8 ] edx
cmp [ ecx ] dx
je r-xdata
test dx dx
jne r-xdata
inc eax
mov [ ebp - 0x10 ] eax
cmp eax ebx
jl r-xdata
cmp [ edi + eax * 2 ] 0x28
jne r-xdata
add eax ecx
cmp [ edi + eax * 2 ] 0x20
je r-xdata
mov edx [ esi + 0x4 ]
inc eax
mov [ edx + ebx * 2 ] cx
movzx ecx [ edi + eax * 2 ]
inc ebx
cmp ecx 0x20
jne r-xdata
mov [ ebp - 0xc ] edx
xor edx edx
test eax eax
jle r-xdata
mov edx ecx
mov edi edi
movzx edx [ ecx + eax * 2 ]
cmp edx 0x7c
jne r-xdata
cmp [ edi + eax * 2 ] 0x20
jne r-xdata
add eax ecx
mov eax [ esi + 0xc ]
add eax edi
lea edx [ eax + 0x1a ]
push edx
add eax 0x10
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_434cc9
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0xc ]
mov [ ecx + edi + 0x14 ] eax
test eax eax
je r-xdata
cmp [ ecx + edx * 2 ] 0x3b
je r-xdata
inc eax
cmp [ ecx + eax * 2 ] 0x0
lea edx [ ecx + eax * 2 ]
jne r-xdata
cmp [ edx + 0x2 ] 0x0
je r-xdata
mov [ ebp + 0xc ] ecx
lea esp [ esp ]
lea ecx [ ecx ]
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx ] 0x0
mov ecx [ esi + 0xc ]
mov [ ecx + edi + 0x4 ] 0x0
xor ecx ecx
mov edx 0x8
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x4
cmp [ ebp - 0xc ] 0x0
mov [ edx + ecx ] eax
je r-xdata
xor eax eax
cmp [ ecx + edx * 2 + 0x2 ] 0x0
mov [ ecx + edx * 2 ] ax
lea eax [ ecx + edx * 2 + 0x2 ]
je r-xdata
inc edx
cmp edx eax
jl r-xdata
cmp [ edx ] 0x3b
jne r-xdata
xor edx edx
xor ecx ecx
mov [ edx ] cx
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
movzx ecx [ edi + eax * 2 ]
cmp ecx 0x3b
je r-xdata
inc eax
cmp [ edi + eax * 2 ] 0x20
je r-xdata
add eax ecx
cmp [ edi + eax * 2 ] 0x20
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ esi + 0xc ]
mov ecx [ eax + ecx ]
mov [ edx + edi + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x0
mov [ ebp - 0x14 ] 0x0
mov eax ecx
mov [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
xor ecx ecx
cmp cx 0x20
jne r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
add [ ebp + 0xc ] 0x4
mov [ ebp - 0x1c ] edx
lea edx [ eax + ecx * 2 + 0x2 ]
mov eax ecx
mov ecx [ ebp - 0x18 ]
add edi 0x1c
mov [ ebp - 0x14 ] edx
push eax
call sub_434c09
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov edx [ ecx + edx ]
mov ecx [ ebp - 0x14 ]
mov [ edx + ecx * 8 + 0x4 ] ax
mov eax [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ eax + edx ]
mov [ eax + ecx * 8 ] 0x0
mov edx ecx
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0xc ] ecx
mov ecx [ esi + 0x4 ]
mov edx 0xa
je r-xdata
inc eax
cmp [ edi + eax * 2 ] 0x20
je r-xdata
movzx ecx [ edi + eax * 2 ]
cmp ecx 0x29
je r-xdata
mov edi edi
mov edx [ ebp - 0x1c ]
inc edx
cmp [ ecx + edx * 2 ] 0x0
mov [ ebp - 0x1c ] edx
lea edx [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] edx
jne r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
push eax
mov [ edx ] cx
call sub_434c09
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov edx [ ecx + edx ]
mov ecx [ ebp - 0x14 ]
mov [ edx + ecx * 8 + 0x4 ] ax
mov eax [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ eax + edx ]
mov [ eax + ecx * 8 ] 0x0
mov eax [ ebp - 0x8 ]
add eax 0x2
inc ecx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + ebx * 2 ] dx
inc ebx
cmp [ edi + eax * 2 ] 0x3b
jne r-xdata
mov edx 0x3b
xor ecx ecx
mov [ ebp + 0xc ] ecx
inc eax
jmp r-xdata
mov edx [ esi + 0x4 ]
inc eax
mov [ edx + ebx * 2 ] cx
movzx ecx [ edi + eax * 2 ]
inc ebx
cmp ecx 0x3b
jne r-xdata
inc eax
cmp [ edi + eax * 2 ] 0x20
je r-xdata
cmp [ edx ] 0x3b
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
inc eax
cmp [ edi + eax * 2 ] 0x20
jne r-xdata
cmp [ edi + eax * 2 ] 0x20
jne r-xdata
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp [ edi + eax * 2 ] 0x20
jne r-xdata
sub_4455ed
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_435732
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44560a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
lea esi [ edi + 0x20 ]
test eax eax
je r-xdata
push esi
call [ InterlockedDecrement@IAT ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push edi
call sub_4455ed
xor eax eax
mov eax [ esi ]
test eax eax
jne r-xdata
sub_445643
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_435e6c
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_445660
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x3c ] bl
cmp eax ebx
je r-xdata
mov ecx [ eax ]
lea edx [ esi + 0x10 ]
push edx
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push edx
mov edx [ esi + 0x28 ]
push 0xffffffff
push edx
push ebx
push 0xfffffffd
push eax
mov eax [ ecx + 0x2c ]
call eax
cmp [ esi + 0x3d ] bl
jne r-xdata
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x34 ] ebx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x3c ] bl
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax ebx
je r-xdata
push eax
call sub_445643
mov [ esi + 0x2c ] ebx
mov eax [ esi + 0xc ]
push ebx
push eax
call [ OleSetContainedObject@IAT ]
mov eax [ esi + 0xc ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x3d ] bl
je r-xdata
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x30 ] ebx
mov eax [ esi + 0xc ]
mov edx [ esi + 0x38 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x50 ]
call eax
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push ebx
push eax
call edx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push ebx
push r--data
push eax
call edx
mov eax [ esi + 0x8 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push ebx
push 0x2
push 0x1
push eax
call edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp + 0x8 ] ebx
cmp [ esi + 0x3c ] bl
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push eax
call edx
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0xc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0xc ] ebx
mov ecx [ esi + 0x8 ]
push ecx
call [ DestroyWindow@IAT ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push eax
call edx
sub_4457df
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
call sub_4109e0
mov eax [ ebx + 0x8 ]
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor edi edi
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x8
mov [ esi + 0x4 ] edi
pop edi
lea esp [ esp ]
xor eax eax
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
mov [ eax ] ecx
jmp r-xdata
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_445870
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0xe
push esi
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x5 ] 0x1
jne r-xdata
push ebx
xor ecx ecx
lea ebx [ edi + 0x1 ]
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov esi eax
mov eax [ ebp + 0xc ]
push esi
push ebx
push 0xd
push eax
call [ SendMessageW@IAT ]
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop ebx
test eax eax
jg r-xdata
mov edi 0x7fff
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xc ] cl
jne r-xdata
push esi
mov eax [ edi + 0x24 ]
push eax
push esi
call sub_4134bd
add esp 0x8
push esi
test eax eax
je r-xdata
push esi
call sub_4111c1
add esp 0x4
push eax
push esi
call [ CharUpperBuffW@IAT ]
call sub_4111dc
add esp 0x4
mov [ edi + 0xe8 ] 0x1
call sub_4111dc
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_445948
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea eax [ esi + 0x24 ]
push eax
call sub_436565
test al al
je r-xdata
push edi
call sub_436327
test al al
je r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x8
push esi
push sub_445934
push edi
mov [ esi + 0xe8 ] 0x0
call [ EnumChildWindows@IAT ]
cmp [ esi + 0xe8 ] 0x0
pop edi
setne al
pop esi
pop ebp
retn 0x8
pop edi
xor al al
pop esi
pop ebp
retn 0x8
sub_44599e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x4 ] 0x0
ja r-xdata
mov eax [ ebp + 0xc ]
push esi
push edi
push eax
call sub_4111c1
mov edi [ ebx + 0x4 ]
add esp 0x4
xor esi esi
mov [ ebp + 0x8 ] eax
test edi edi
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov ebx [ ebx ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
inc esi
add ebx 0x2
cmp esi edi
jb r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax ebx
call sub_40d260
test eax eax
je r-xdata
sub_445a11
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_436458
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ esi ]
push eax
push 0x0
push 0xc
push ecx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
xor al al
pop esi
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov al 0x1
pop esi
pop ebp
retn 0xc
mov edx [ esi ]
push 0x1
push 0x0
push edx
call [ GetParent@IAT ]
push eax
call [ InvalidateRect@IAT ]
sub_445a61
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push edi
mov edi [ GetWindowLongW@IAT ]
push 0xfffffff0
push esi
call edi
test eax 0x40000000
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
lea esp [ esp ]
push esi
call sub_43641f
mov esi eax
push 0xfffffff0
push esi
call edi
test eax 0x40000000
jne r-xdata
push esi
call sub_43641f
test eax eax
je r-xdata
sub_445aa7
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push esi
call sub_436327
test al al
jne r-xdata
pop esi
pop ebp
retn 0x8
push 0x1
jmp r-xdata
push 0x0
push esi
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_445ae0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_4111c1
add esp 0x4
cmp esi eax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx esi
mov ecx edi
call sub_40d260
test eax eax
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
sub_445b19
push ebp
mov ebp esp
sub esp 0x204
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x100
lea eax [ ebp - 0x204 ]
push eax
push edi
call [ GetClassNameW@IAT ]
call [ GetFocus@IAT ]
lea ecx [ ebp - 0x204 ]
mov ebx eax
mov eax [ esi + 0x8c ]
push ecx
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc [ esi + 0x130 ]
cmp edi [ esi + 0xd8 ]
jne r-xdata
mov edx [ esi + 0xd4 ]
push edx
push ebx
call sub_4364b5
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_445bc3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx ]
mov edx [ edx + 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_40e790
pop ebp
retn 0xc
sub_445be4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
sub esp 0x204
push esi
mov esi [ ebp + 0xc ]
push edi
push ecx
call [ GetParent@IAT ]
push 0x100
lea edx [ ebp - 0x204 ]
mov edi eax
push edx
push edi
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
push r--data
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
push r--data
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x7029
jmp r-xdata
mov eax [ esi ]
push r--data
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x702c
jmp r-xdata
push 0x111
push edi
call [ SendMessageW@IAT ]
mov esi [ esi ]
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x702a
jmp r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
push eax
push 0x702b
sub_445cb9
push ebp
mov ebp esp
sub esp 0x8b8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4367cf
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xb4 ]
call sub_410620
mov eax [ esi ]
push eax
push 0x28
lea ecx [ ebp - 0xb4 ]
push ecx
call sub_4343ad
mov edx [ esi ]
push edx
mov edi eax
push 0x800
lea eax [ ebp - 0xb4 ]
push eax
call sub_4343ad
mov ecx [ ebp + 0x10 ]
push 0x28
push edi
mov ebx eax
lea edx [ ebp - 0x30 ]
push edx
lea eax [ ebp - 0xb4 ]
push eax
mov [ ebp - 0x18 ] 0x400
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x1c ] ebx
call sub_434319
cmp [ ebp - 0x8 ] 0x0
mov [ ebp + 0x8 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea edi [ ebp - 0xb4 ]
cmp [ ebp + 0x8 ] ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
push edi
push ecx
push 0x1073
push edx
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x8b4 ]
push eax
push ebx
lea ecx [ ebp - 0xb4 ]
push ecx
call sub_4342dd
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
lea eax [ ebp - 0x8b4 ]
push eax
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
call sub_410640
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_410640
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
sub_445db6
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4367cf
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov eax [ edi ]
push 0x2
push esi
push 0x102c
push eax
call [ SendMessageW@IAT ]
push esi
push esi
test eax eax
je r-xdata
push 0x1
push 0x0
jmp r-xdata
push edi
call sub_4367eb
inc esi
cmp esi ebx
jl r-xdata
sub_445dfe
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push ecx
push 0x1
push 0xc2
push eax
call [ SendMessageW@IAT ]
mov al 0x1
pop ebp
retn 0x8
sub_445e20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43697b
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp al 0x1
jne r-xdata
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x8
push 0xffffffff
push 0xffffffff
push 0x1
push 0x0
push esi
call sub_436a0b
jmp r-xdata
sub_445e52
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
push 0x1
push eax
call sub_445aa7
mov ebx [ MapVirtualKeyW@IAT ]
push 0x0
push 0x25
call ebx
shl eax 0x10
or eax 0x1
cmp [ ebp + 0xc ] 0x0
push eax
jge r-xdata
mov eax [ esi ]
push 0x27
push 0x100
push eax
call [ PostMessageW@IAT ]
mov edi [ Sleep@IAT ]
push 0x0
call edi
push 0x0
push 0x25
call ebx
mov ecx [ esi ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x27
push 0x101
push ecx
mov ecx [ esi ]
push 0x25
push 0x100
push ecx
call [ PostMessageW@IAT ]
mov edi [ Sleep@IAT ]
push 0x0
call edi
push 0x0
push 0x25
call ebx
mov edx [ esi ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x25
push 0x101
push edx
jmp r-xdata
call [ PostMessageW@IAT ]
push 0x0
call edi
mov edx [ esi ]
push 0x0
push edx
call sub_445aa7
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
sub_445f03
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
push 0x1
push eax
call sub_445aa7
mov ecx [ esi ]
push ecx
call [ SetFocus@IAT ]
mov edx [ esi ]
push 0x0
push edx
mov edi eax
call sub_445aa7
test edi edi
pop edi
setne al
pop esi
pop ebp
retn 0x4
sub_445f35
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
xor esi esi
xor ebx ebx
push eax
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] 0x4
call sub_436e2b
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_436ba9
mov eax [ ebp - 0x14 ]
push eax
call sub_436ba9
push ebx
call sub_436ba9
push esi
call sub_436ba9
mov al [ ebp - 0x1 ]
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_436df7
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ ebp - 0x8 ] esi
call [ GetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
push 0xc
lea ecx [ ebp - 0x30 ]
push esi
push ecx
call sub_412f40
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp - 0x2c ] 0x8
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLengthSid@IAT ]
mov ecx [ ebp - 0x2c ]
lea eax [ ecx + eax * 2 + 0x10 ]
push eax
lea edx [ ebp - 0xc ]
push edx
call sub_436dbf
mov ebx [ ebp - 0xc ]
test al al
je r-xdata
push 0x2
push 0xc
lea edx [ ebp - 0x30 ]
push edx
push eax
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLengthSid@IAT ]
lea edi [ eax + 0x8 ]
push edi
call sub_436b91
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp - 0x30 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esi + 0x8 ]
push ecx
push eax
mov [ esi + 0x2 ] di
call [ GetLengthSid@IAT ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
xor edi edi
cmp eax esi
jbe r-xdata
mov edi [ ebp + 0x10 ]
mov [ ebp + 0xc ] 0x0
add edi 0x4
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push edi
push ecx
call [ GetAce@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
add edi 0xc
mov [ ebp + 0xc ] eax
cmp eax 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
movzx edx [ eax + 0x2 ]
push edx
push eax
push 0xffffffff
push 0x2
push ebx
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov dl [ edi - 0x4 ]
mov al [ edi - 0x3 ]
mov ecx [ edi ]
mov [ esi ] dl
movzx edx [ esi + 0x2 ]
push edx
push esi
push 0xffffffff
push 0x2
push ebx
mov [ esi + 0x1 ] al
mov [ esi + 0x4 ] ecx
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x14 ]
push 0x0
push ebx
push 0x1
push edi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x30 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x18 ]
push eax
push ecx
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x1
sub_446124
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
xor esi esi
xor ebx ebx
push eax
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] 0x4
call sub_436e2b
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_436ba9
mov eax [ ebp - 0x14 ]
push eax
call sub_436ba9
push ebx
call sub_436ba9
push esi
call sub_436ba9
mov al [ ebp - 0x1 ]
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_436df7
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ ebp - 0x8 ] esi
call [ GetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
push 0xc
lea ecx [ ebp - 0x30 ]
push esi
push ecx
call sub_412f40
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp - 0x2c ] 0x8
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLengthSid@IAT ]
mov ecx [ ebp - 0x2c ]
lea eax [ ecx + eax * 2 + 0x10 ]
push eax
lea edx [ ebp - 0xc ]
push edx
call sub_436dbf
mov ebx [ ebp - 0xc ]
test al al
je r-xdata
push 0x2
push 0xc
lea edx [ ebp - 0x30 ]
push edx
push eax
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLengthSid@IAT ]
lea edi [ eax + 0x8 ]
push edi
call sub_436b91
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp - 0x30 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esi + 0x8 ]
push ecx
push eax
mov [ esi + 0x2 ] di
call [ GetLengthSid@IAT ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
xor edi edi
cmp eax esi
jbe r-xdata
mov edi [ ebp + 0x10 ]
mov [ ebp + 0xc ] 0x0
add edi 0x4
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push edi
push ecx
call [ GetAce@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
add edi 0xc
mov [ ebp + 0xc ] eax
cmp eax 0x2
jb r-xdata
mov eax [ ebp - 0xc ]
movzx edx [ eax + 0x2 ]
push edx
push eax
push 0xffffffff
push 0x2
push ebx
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov dl [ edi - 0x4 ]
mov al [ edi - 0x3 ]
mov ecx [ edi ]
mov [ esi ] dl
movzx edx [ esi + 0x2 ]
push edx
push esi
push 0xffffffff
push 0x2
push ebx
mov [ esi + 0x1 ] al
mov [ esi + 0x4 ] ecx
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x14 ]
push 0x0
push ebx
push 0x1
push edi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x30 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x18 ]
push eax
push ecx
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x1
sub_446313
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x20
lea eax [ ebp - 0x54 ]
push esi
push eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x1c ] esi
xor ebx ebx
mov [ ebp - 0x18 ] esi
call sub_412f40
mov eax [ ebp + 0x14 ]
add esp 0xc
mov [ ebp - 0x54 ] 0x20
mov [ ebp - 0x4c ] edi
mov [ ebp + 0xb ] bl
test al 0x1
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
mov eax [ ebp + 0xc ]
push edx
push eax
push edi
call sub_436cd7
test al al
je r-xdata
mov [ ebp + 0xb ] 0x1
mov eax [ ebp - 0x38 ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_436ba9
add esp 0x4
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
push eax
push ecx
call [ UnloadUserProfile@IAT ]
push 0x60000
push 0x0
push r--data
call [ OpenWindowStationW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0xc ]
lea ecx [ ebp + 0x10 ]
push ecx
push 0x1
push 0x2
push 0x0
push 0x0
push edx
call [ DuplicateTokenEx@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push esi
call [ CloseWindowStation@IAT ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call [ CloseDesktop@IAT ]
call [ GetProcessWindowStation@IAT ]
push esi
mov [ ebp - 0x1c ] eax
call [ SetProcessWindowStation@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
push ebx
call sub_4111dc
mov eax [ ebp - 0x18 ]
add esp 0x4
test eax eax
je r-xdata
push eax
call [ SetProcessWindowStation@IAT ]
push 0x60081
push 0x0
push 0x0
push r--data
call [ OpenDesktopW@IAT ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
push eax
call [ DestroyEnvironmentBlock@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
push edx
push eax
call sub_436d09
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push edx
push esi
mov [ ebp - 0x34 ] 0xb00
mov [ ebp - 0x30 ] 0xf0000000
mov [ ebp - 0x28 ] 0x400
mov [ ebp - 0x24 ] 0xf037f
call sub_446124
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
push ecx
push edx
mov [ ebp - 0x28 ] bx
mov [ ebp - 0x24 ] 0xf01ff
call sub_445f35
test al al
je r-xdata
mov eax [ ebp + 0x24 ]
mov edi [ eax + 0x2c ]
mov [ eax + 0x8 ] r--data
mov eax [ ebp + 0x18 ]
and edi 0x100
mov [ ebp + 0x10 ] edi
test eax eax
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
push eax
call sub_4111c1
lea edi [ eax + 0x1 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx eax
mov eax [ ebp + 0x18 ]
push edi
push eax
push ebx
call sub_412fba
mov edi [ ebp + 0x10 ]
add esp 0x14
test [ ebp + 0x14 ] 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x54 ]
push ecx
push edx
call [ LoadUserProfileW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push ecx
push edx
or eax 0x400
push eax
mov eax [ ebp - 0xc ]
push edi
push 0x0
push 0x0
push ebx
push 0x0
push eax
call [ CreateProcessAsUserW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
push 0x0
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call [ CreateEnvironmentBlock@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x28 ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
push eax
call sub_436c6e
sub_4465bb
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x28 ]
push edi
mov edi [ ebp + 0x24 ]
call sub_436f47
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push esi
push edi
push ebx
test al al
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
je r-xdata
call sub_436e94
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
call sub_446313
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_446618
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
pop ebp
retn 0x4
mov eax 0x8
pop ebp
retn 0x4
sub_44663b
push ebp
mov ebp esp
sub esp 0x140
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
mov [ ebp - 0x18 ] edi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xc8 ] edi
xor edi edi
lea ebx [ edx + eax ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0xdc ] edi
mov [ ebp - 0x10 ] edi
lea edi [ ebx - 0x1 ]
mov [ ebp - 0xd4 ] edi
test ecx 0xe20f5a6f
je r-xdata
test esi esi
je r-xdata
mov eax 0xfffffffd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xfffffffe
test edx edx
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jge r-xdata
cmp [ ebp + 0x20 ] 0x0
jg r-xdata
test eax eax
js r-xdata
mov eax 0xfffffff1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xffffffe8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ ebp + 0x10 ]
jg r-xdata
movzx eax [ esi + 0x18 ]
movzx edx [ esi + 0x1c ]
add eax esi
mov [ ebp - 0x9c ] eax
movzx eax [ esi + 0x1a ]
mov [ ebp - 0xa0 ] eax
mov eax 0x989680
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
cmp [ esi ] 0x50435245
je r-xdata
mov [ ebp - 0x8 ] r--data
mov eax [ esi + 0x8 ]
movzx edi al
shr eax 0x12
and eax 0x1
mov [ ebp - 0xcc ] eax
movzx eax [ esi + 0x1a ]
movzx edx cl
or edx edi
shr edx 0x4
and edx 0x1
mov [ ebp - 0xd0 ] edx
movzx edx [ esi + 0xc ]
shr edx 0x3
and edx 0x1
mov [ ebp - 0xe4 ] edx
movzx edx [ esi + 0x1c ]
imul edx eax
movzx eax [ esi + 0x18 ]
add edx [ ebp + 0x8 ]
add eax edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x10 ]
add eax edx
mov [ ebp - 0x58 ] eax
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x5c ] edx
movzx eax [ esi + 0x8 ]
shr eax 0x5
and eax 0x1
mov [ ebp - 0x74 ] eax
mov edi [ esi + 0x8 ]
shr edi 0xb
and edi 0x1
mov [ ebp - 0x80 ] edi
mov eax [ esi + 0x8 ]
shr eax 0x1d
and eax 0x1
mov [ ebp - 0x78 ] eax
mov eax [ esi + 0x8 ]
shr eax 0x19
and eax 0x1
mov [ ebp - 0x7c ] eax
mov eax 0x0
test cl 0x80
setne al
mov [ ebp - 0xc ] edi
mov [ ebp - 0x88 ] eax
mov eax ecx
shr eax 0x8
and eax 0x1
mov [ ebp - 0x84 ] eax
mov eax ecx
shr eax 0xa
and eax 0x1
mov [ ebp - 0x70 ] eax
mov eax ecx
shr eax 0x1c
and eax 0x1
mov [ ebp - 0x6c ] eax
test ecx 0x8000000
je r-xdata
lea ecx [ ebp - 0x140 ]
push ecx
push 0x0
lea edx [ ebp - 0x114 ]
push edx
push esi
call sub_437144
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov eax ecx
shr eax 0xf
and eax 0x1
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x18 ]
lea eax [ esi - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
test eax 0x1800000
je r-xdata
cmp eax 0x800000
je r-xdata
mov [ ebp - 0x48 ] eax
xor eax eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x94 ] eax
add eax 0x340
mov [ ebp - 0x90 ] eax
mov eax ecx
and eax 0x1800000
je r-xdata
mov [ ebp - 0x64 ] 0x0
shr eax 0x17
and eax 0x1
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov [ ebp - 0x64 ] 0x1
jmp r-xdata
cmp eax 0x1000000
je r-xdata
and ecx 0x700000
cmp ecx 0x300000
ja r-xdata
mov ecx [ esi + 0x8 ]
test ecx 0x700000
jne r-xdata
mov eax 0xffffffe9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx __dos_header
je r-xdata
je r-xdata
mov [ ebp - 0xac ] 0x1
jmp r-xdata
cmp ecx 0x500000
jne r-xdata
mov eax 0xd0a
jmp r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov [ ebp - 0xac ] 0x2
jmp r-xdata
mov [ ebp - 0xac ] 0x0
cmp eax 0xff
jle r-xdata
mov eax 0xa
cmp ecx 0x100000
je r-xdata
test edi edi
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov [ ebp - 0xa8 ] 0x1
mov [ ebp - 0x98 ] al
mov ecx eax
sar ecx 0x8
mov [ ebp - 0xa8 ] 0x2
mov [ ebp - 0x98 ] cl
mov [ ebp - 0x97 ] al
jmp r-xdata
mov eax 0xd
jmp r-xdata
cmp ecx 0x200000
jne r-xdata
mov eax [ esi + 0x8 ]
and eax 0x7
mov [ ebp - 0xec ] eax
mov eax 0x55555556
imul [ ebp + 0x20 ]
mov eax edx
shr eax 0x1f
add eax edx
lea edi [ eax + eax * 2 ]
movzx eax [ esi + 0x12 ]
test ax ax
je r-xdata
test [ ebp + 0x18 ] 0x2000
jne r-xdata
mov eax 0xfffffff3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x1c ]
mov [ ebp - 0xb8 ] edx
mov ecx eax
mov eax 0x55555556
imul edi
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jl r-xdata
mov edi [ ebp + 0x10 ]
push edi
push edx
call sub_42e688
add esp 0x8
test eax eax
js r-xdata
cmp [ ebp - 0xb8 ] 0x0
je r-xdata
mov ecx edi
mov [ ebp - 0xd8 ] edi
lea edi [ ecx + ecx * 2 + 0x3 ]
lea ecx [ edi * 4 ]
push ecx
call [ rw-data ]
add esp 0x4
mov [ ebp - 0xb8 ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
cmp eax edi
jne r-xdata
cmp [ ebp - 0xd0 ] 0x0
jne r-xdata
mov edx [ ebp - 0xb8 ]
lea edi [ edx + edi * 4 ]
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov edx 0x1
sub edx eax
lea eax [ edi + edx * 4 ]
sub edi 0x4
cmp edi eax
jb r-xdata
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov eax 0xfffffffa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax edi
jge r-xdata
mov eax 0xfffffff6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x48 ] 0x1
mov eax 0xffffffe7
jg r-xdata
test [ esi + 0xc ] 0x4
je r-xdata
test [ esi + 0xc ] 0x2
je r-xdata
mov [ edi ] 0xffffffff
sub edi 0x4
cmp edi eax
jae r-xdata
lea ecx [ edi + edi ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x40 ] 0xffffffff
movzx ecx [ esi + 0x10 ]
lea ecx [ ecx + ecx + 0x2 ]
mov [ ebp - 0xd8 ] ecx
cmp ecx [ ebp + 0x20 ]
jle r-xdata
mov dl [ ebx ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x18 ]
and eax 0x4000000
mov [ ebp - 0xe8 ] eax
movzx eax [ esi + 0x16 ]
movzx edx al
shr eax 0x8
and eax 0x1
mov [ ebp - 0xdc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xe0 ] edx
movzx edx [ eax + edx + 0x100 ]
mov [ ebp - 0xc8 ] edx
movzx eax [ esi + 0x14 ]
movzx edx al
mov [ ebp - 0x18 ] edx
test eax 0x100
je r-xdata
mov eax 0xfffffff5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xcc ] 0x0
je r-xdata
lea eax [ edi + ecx * 4 ]
cmp edi eax
jae r-xdata
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x94 ]
movzx edx [ eax + edx ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x18 ] edx
mov eax [ esi + 0x8 ]
or eax [ ebp + 0x18 ]
test eax 0x4000000
jne r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x58 ]
mov edi ebx
je r-xdata
mov ecx eax
sub ecx edi
dec ecx
shr ecx 0x2
inc ecx
or eax 0xffffffff
[ edi ]
cmp [ ebp - 0xe8 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] edx
jne r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
js r-xdata
cmp ebx eax
jae r-xdata
cmp ebx eax
jae r-xdata
mov edx [ ebp - 0xec ]
mov ecx [ ebp - 0x60 ]
push 0x0
push 0x0
push 0x0
push edx
lea eax [ ebp - 0xc4 ]
push eax
push 0x2
push 0x0
push ebx
push ecx
push ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0xc4 ] 0x0
call sub_437262
mov edi [ ebp - 0x10 ]
add esp 0x28
cmp [ ebp - 0x68 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0xe4 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx edi
mov [ ebp + 0x8 ] edx
cmp [ ebp - 0xac ] 0x0
je r-xdata
cmp [ ebp - 0xac ] 0x0
je r-xdata
test eax eax
jg r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0xe0 ]
test edi edi
js r-xdata
mov ecx [ ebp - 0x5c ]
add ecx [ ebp + 0x14 ]
cmp ebx ecx
jbe r-xdata
cmp ebx edx
jae r-xdata
cmp ebx edx
jae r-xdata
mov ecx [ ebp - 0xa8 ]
mov edx eax
sub edx ecx
cmp edi edx
ja r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0xac ]
push 0x0
lea edx [ ebp - 0xa8 ]
push edx
push eax
push ecx
push edi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
mov ecx eax
mov eax [ ebp - 0xa8 ]
sub ecx eax
cmp edi ecx
ja r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0xac ]
lea ecx [ ebp - 0xa8 ]
push ecx
push edx
push eax
push edi
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
cmp eax 0x1
je r-xdata
je r-xdata
mov edi [ ebp - 0x4c ]
mov [ ebp - 0x10 ] edi
mov ecx edx
sub ecx ebx
cmp ecx 0x3e8
jge r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
lea esp [ esp ]
inc edi
cmp edi eax
jb r-xdata
mov dl [ ebp - 0x98 ]
cmp [ edi ] dl
jne r-xdata
mov eax [ ebp - 0x58 ]
jmp r-xdata
inc edi
cmp edi edx
jae r-xdata
mov cl [ edi ]
cmp cl [ ebp - 0x98 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x20 ]
je r-xdata
cmp eax 0xfffffc19
je r-xdata
cmp [ ebp - 0xc ] 0x0
lea edi [ ebx + 0x1 ]
je r-xdata
lea ecx [ eax + 0x3e6 ]
cmp ecx 0x4
ja r-xdata
xor eax eax
cmp [ ebp - 0x18 ] eax
setge al
add eax ebx
cmp eax [ ebp - 0xd4 ]
jbe r-xdata
cmp ebx edx
jae r-xdata
cmp ebx edx
jae r-xdata
movzx ecx [ ebx ]
cmp ecx eax
je r-xdata
inc ebx
cmp ebx edx
jb r-xdata
cmp ecx 0x1
je r-xdata
mov eax [ ebp - 0x58 ]
cmp edi eax
jb r-xdata
mov cl [ edi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8c ] 0x0
je r-xdata
cmp esi 0x4
jl r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x10 ]
cmp [ ebp - 0xcc ] 0x0
mov ecx [ ebp - 0xac ]
mov [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
cmp edi eax
jae r-xdata
jmp [ ecx * 4 + jump_table_447143 ]
cmp [ ebp - 0xdc ] 0x0
je r-xdata
cmp [ ebx - 0x1 ] 0xd
jne r-xdata
cmp [ ebp - 0xac ] 0x0
je r-xdata
cmp [ ebp - 0xac ] 0x0
je r-xdata
inc ebx
cmp ebx edx
jb r-xdata
movzx ecx [ ebx ]
mov edi [ ebp - 0x94 ]
movzx ecx [ ecx + edi ]
cmp ecx eax
je r-xdata
jmp r-xdata
mov cl [ ebp - 0x97 ]
cmp [ edi + 0x1 ] cl
je r-xdata
jmp r-xdata
inc edi
cmp edi edx
jb r-xdata
mov al [ edi + 0x1 ]
cmp al [ ebp - 0x97 ]
je r-xdata
mov eax [ ebp - 0x44 ]
cdq
sub eax edx
sar eax 0x1
xor eax eax
jmp r-xdata
cmp [ ebp - 0x44 ] esi
jle r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ ebp + 0x1c ]
lea edx [ esi * 4 - 0x8 ]
push edx
add eax 0x8
push eax
add ecx 0x8
push ecx
call sub_410e60
add esp 0xc
test esi esi
je r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call [ rw-data ]
add esp 0x4
cmp [ ebp - 0xd0 ] 0x0
mov ebx edi
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
mov edi [ ebp - 0x54 ]
cmp edi ebx
jne r-xdata
xor esi esi
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
mov eax [ ebp - 0xac ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xa8 ]
add ecx [ ebp - 0x5c ]
cmp ebx ecx
jb r-xdata
cmp ebx [ ebp - 0x5c ]
jbe r-xdata
mov eax [ ebp - 0xa8 ]
add eax [ ebp - 0x5c ]
cmp ebx eax
jb r-xdata
cmp ebx [ ebp - 0x5c ]
jbe r-xdata
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x54 ]
mov edx [ ebp + 0x1c ]
sub esi ecx
mov [ edx ] esi
mov esi [ ebp - 0x50 ]
sub esi ecx
mov [ edx + 0x4 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x2
jge r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call [ rw-data ]
add esp 0x4
mov [ ebp - 0x8c ] 0x1
test edi edi
je r-xdata
cmp esi 0xfffffff4
je r-xdata
cmp edi [ ebp - 0x14 ]
ja r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0xa8 ]
sub edx eax
cmp ebx edx
ja r-xdata
mov eax [ ebp - 0x58 ]
cmp ebx eax
jae r-xdata
inc edi
cmp edi eax
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
movzx ecx [ eax ]
inc eax
cmp ecx edi
je r-xdata
movzx ecx [ eax ]
inc eax
cmp ecx edi
je r-xdata
cmp ebx edx
jae r-xdata
cmp eax 0x2
jne r-xdata
inc ebx
cmp ebx edx
jb r-xdata
mov cl [ ebp - 0x98 ]
mov edi ebx
sub edi [ ebp - 0xa8 ]
cmp [ edi ] cl
jne r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0xac ]
push 0x0
lea ecx [ ebp - 0xa8 ]
push ecx
push edx
push eax
push ebx
call sub_42e7e1
mov edx [ ebp + 0x8 ]
add esp 0x14
test eax eax
jne r-xdata
inc ebx
cmp ebx edx
jae r-xdata
mov al [ ebp - 0x98 ]
mov edi ebx
sub edi [ ebp - 0xa8 ]
cmp [ edi ] al
jne r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
push ecx
push edx
push ebx
call sub_42e7e1
mov edx [ ebp + 0x8 ]
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x1
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi - 0x1 ] 0xd
jne r-xdata
mov dl [ ebx ]
cmp dl [ ebp - 0x98 ]
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0xa8 ]
push edx
push eax
push ecx
push ebx
call sub_42e9b5
add esp 0x14
test eax eax
jne r-xdata
mov dl [ edi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
dec eax
cmp eax edx
jae r-xdata
cmp eax edx
jb r-xdata
cmp ecx [ ebp - 0xc8 ]
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
cmp [ ebp - 0xa8 ] 0x1
je r-xdata
jmp r-xdata
mov al [ ebx ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp [ ebp - 0xa8 ] 0x1
je r-xdata
jmp r-xdata
mov eax 0xfffffff4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
sub edi ecx
sub edx ecx
mov [ eax ] edi
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
cmp edi [ ebp - 0x14 ]
jae r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xac ]
jmp r-xdata
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp eax edx
jb r-xdata
inc ebx
lea esp [ esp ]
mov al [ ebp - 0x97 ]
cmp [ edi + 0x1 ] al
je r-xdata
cmp ebx edx
jb r-xdata
inc ebx
cmp ebx edx
jb r-xdata
mov cl [ ebp - 0x97 ]
cmp [ edi + 0x1 ] cl
je r-xdata
mov edi [ ebp - 0xb8 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edx
test edi edi
je r-xdata
cmp [ edi ] 0xa
jne r-xdata
mov al [ ebx + 0x1 ]
cmp al [ ebp - 0x97 ]
je r-xdata
jmp r-xdata
jmp r-xdata
test [ esi + 0xc ] 0x20
jne r-xdata
cmp ecx 0x1
je r-xdata
lea ebx [ edi + 0x1 ]
mov eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0xa8 ] eax
jne r-xdata
sub_447157
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ecx
push eax
call sub_43ff53
add esp 0x10
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn
mov esi [ esi ]
test esi esi
jne r-xdata
sub_44719b
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x18 ]
cmp esi 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp eax 0xfffffffe
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
push 0x0
push eax
call sub_441432
push eax
push esi
call [ SelectObject@IAT ]
xor eax eax
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
cmp edi 0x1
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
cmp [ rw-data ] ebx
je r-xdata
push eax
push eax
lea eax [ ebp - 0xc ]
push eax
push edi
push ebx
call [ ExtCreatePen@IAT ]
mov esi [ ebp + 0x8 ]
push eax
push esi
mov [ rw-data ] eax
call [ SelectObject@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
or ebx 0x10000
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push esi
call [ BeginPath@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
sub_447275
push ebp
mov ebp esp
test [ ebp + 0x14 ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push 0x1
push 0x0
push 0xffffffff
push 0x0
push esi
call sub_44719b
push 0x0
push edi
lea eax [ ebx - 0x2 ]
push eax
push esi
call [ MoveToEx@IAT ]
push edi
lea ecx [ ebx + 0x3 ]
push ecx
push esi
call [ LineTo@IAT ]
push 0x0
lea edx [ edi - 0x2 ]
push edx
push ebx
push esi
call [ MoveToEx@IAT ]
add edi 0x3
push edi
push ebx
push esi
call [ LineTo@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ StrokePath@IAT ]
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_4472f1
push ebp
mov ebp esp
test [ ebp + 0x1c ] 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
pop esi
pop ebp
retn 0x18
push 0x1
push 0x2
push 0xffffffff
push 0x0
push esi
call sub_44719b
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push 0x0
push eax
push ecx
push esi
call [ MoveToEx@IAT ]
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push edx
push eax
push esi
call [ LineTo@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ StrokePath@IAT ]
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_44734f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov ebx 0xfffffffe
mov [ ebp + 0xf ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
push ebx
push esi
call sub_42fd29
mov al [ ebp + 0xf ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
push eax
push 0x0
push ebx
push ecx
push esi
mov [ ebp - 0x8 ] 0x0
call sub_44719b
cmp [ edi + 0xc ] 0x0
jle r-xdata
mov edi [ edi + 0x4 ]
mov [ ebp - 0x18 ] edi
test edi edi
jne r-xdata
lea edx [ edi + 0x10 ]
add edi 0x14
mov [ ebp - 0x4 ] edx
mov [ ebp + 0x8 ] edi
mov edi [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov ecx 0x8
add [ ebp + 0x8 ] ecx
add [ ebp - 0x4 ] ecx
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ edx + 0xc ]
jl r-xdata
movzx ecx [ eax + lookup_table_4475bb ]
jmp [ ecx * 4 + jump_table_447597 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
movzx eax [ edx + eax + 0x810 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add eax 0xfffffff8
cmp eax 0x10
ja r-xdata
mov ebx [ ebp - 0xc ]
mov edi edx
test edi edi
je r-xdata
mov [ ebp - 0x14 ] edi
jmp r-xdata
or edi 0xffffffff
cmp [ ebp - 0x10 ] edi
je r-xdata
mov edx [ ebp - 0xc ]
inc [ ebp - 0x8 ]
mov eax 0x8
add [ ebp + 0x8 ] eax
add [ ebp - 0x4 ] eax
push edx
push esi
call sub_42fd29
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
push eax
push 0x0
push ecx
push edx
push esi
call sub_44719b
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add ecx ebx
push ecx
add eax edi
push eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
inc [ ebp - 0x8 ]
mov eax 0x8
add [ ebp + 0x8 ] eax
add [ ebp - 0x4 ] eax
push ecx
push esi
call sub_42fd29
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
push edx
push 0x0
push eax
push ecx
push esi
call sub_44719b
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add eax ebx
push eax
add edx edi
push edx
push ebx
push edi
push esi
call [ Ellipse@IAT ]
jmp r-xdata
push 0x0
push ebx
push edi
push esi
call [ MoveToEx@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
fild [ ecx + 0x8 ]
mov edx [ eax + 0x8 ]
inc [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
fstp [ ebp - 0x1c ]
fild [ eax + 0x10 ]
add eax 0x10
sub esp 0x8
add ecx 0x10
fstp [ esp + 0x4 ]
mov [ ebp + 0x8 ] ecx
fld [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
fstp [ esp ]
push edx
push ebx
push edi
push esi
call [ AngleArc@IAT ]
push ebx
push edi
push esi
call [ LineTo@IAT ]
push esi
call [ CloseFigure@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
push ebx
push edi
push esi
call [ SetPixel@IAT ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebx + eax + 0x1 ]
lea ecx [ edi + eax + 0x1 ]
push edx
sub ebx eax
push ecx
sub edi eax
mov [ ebp + 0xf ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ ebp - 0xc ]
push edx
push esi
call sub_42fd29
push ebx
push edi
push esi
call [ Rectangle@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
push edx
push 0x0
push eax
push ecx
push esi
call sub_44719b
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_4475cc
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
xor ecx ecx
push ebx
xor ebx ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
cmp eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0xffffffff
push eax
call sub_42fd29
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
jmp r-xdata
mov [ ebp + 0xc ] ecx
cmp [ eax + 0xc ] ecx
jle r-xdata
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ecx
jne r-xdata
lea edi [ eax + 0x10 ]
lea esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov ecx [ ebp + 0xc ]
inc ecx
add esi 0x8
add edi 0x8
mov [ ebp + 0xc ] ecx
cmp ecx [ eax + 0xc ]
jl r-xdata
cmp cl 0x7
jbe r-xdata
mov ecx [ esi ]
mov edx [ edi ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov cl [ eax + ecx + 0x810 ]
mov [ ebp - 0x14 ] edx
cmp cl 0x2
jb r-xdata
xor ecx ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
push edx
push ecx
call sub_447275
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov cl [ edx + eax + 0x810 ]
and cl 0xfe
cmp cl 0x4
jne r-xdata
cmp cl 0x14
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
inc [ ebp + 0xc ]
push ebx
push edx
mov edx [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_4472f1
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call sub_447275
mov ecx [ esi + 0x8 ]
mov eax [ edi + 0x8 ]
mov edx [ edi + 0x10 ]
inc [ ebp + 0xc ]
push ebx
push ecx
push eax
mov [ ebp - 0x10 ] ecx
mov ecx [ esi + 0x10 ]
add esi 0x10
add edi 0x10
push ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_4472f1
mov ecx [ esi ]
mov edx [ edi ]
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call sub_447275
jmp r-xdata
mov ebx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub_44770d
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push ebx
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] 0xfffffffe
mov [ ebp - 0xc ] 0x1
call [ BeginPath@IAT ]
mov [ rw-data ] 0x1
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push ebx
call sub_42fd29
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea ebx [ ebx ]
mov eax [ esi + 0xc ]
cmp edi eax
je r-xdata
mov ecx esi
lea eax [ esi + 0x10 ]
neg ecx
lea ebx [ esi + 0x810 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub eax edi
push eax
lea eax [ edi + esi + 0x810 ]
push eax
lea ecx [ esi + edi * 8 + 0x10 ]
push ecx
push ebx
call [ PolyDraw@IAT ]
add [ ebp - 0x8 ] 0x8
inc ebx
lea edx [ ecx + ebx - 0x810 ]
cmp edx [ esi + 0xc ]
jl r-xdata
lea eax [ ecx + ebx - 0x810 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
push eax
xor edi edi
push edi
push ecx
push edx
push ebx
call sub_44719b
cmp [ esi + 0xc ] edi
jle r-xdata
pop edi
cmp [ ebx ] 0x8
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov al [ ebx ]
lea edi [ ecx + ebx - 0x80f ]
cmp al 0x14
je r-xdata
sub eax edi
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ esi + edi + 0x810 ]
push ecx
lea edx [ esi + edi * 8 + 0x10 ]
push edx
push eax
call [ PolyDraw@IAT ]
mov ecx [ ebp - 0x10 ]
cmp al 0x8
jne r-xdata
cmp al 0x18
jne r-xdata
or edx 0xffffffff
cmp [ ebp - 0x4 ] edx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
cmp eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_42fd29
or edx 0xffffffff
mov eax [ ecx + 0x4 ]
cmp eax edx
je r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_44719b
mov ecx [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
sub_44786a
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
call sub_40ec00
call eax
push esi
mov [ rw-data ] eax
call sub_430ccb
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push 0x31a
push eax
call [ DefDlgProcW@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4478ac
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
cmp ebx esi
jne r-xdata
push ebx
push rw-data
call sub_441b7c
mov [ ebp + 0xc ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
shl eax 0x10
or eax ecx
push eax
push ebx
push 0x7b
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov al [ ecx + 0x88 ]
cmp al 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x1a4 ]
push 0x0
push esi
push ecx
push edx
push 0x0
push eax
call [ TrackPopupMenuEx@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp al 0xf
je r-xdata
cmp al 0x13
je r-xdata
cmp al 0x10
je r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ edi ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push 0x0
push ecx
mov ecx [ rw-data ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push 0x0
push edx
call [ TrackPopupMenuEx@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4479a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_430c09
mov edi eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov ebx [ ecx ]
lea edx [ esp + 0x20 ]
push edx
push esi
call [ GetClientRect@IAT ]
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push esi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
call [ ScreenToClient@IAT ]
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x20 ]
jl r-xdata
movzx eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
shl eax 0x10
or eax ecx
push eax
push edx
push 0x20
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax [ esp + 0x28 ]
jg r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x24 ]
jl r-xdata
cmp eax [ esp + 0x2c ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push edx
call sub_430737
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
call [ WindowFromPoint@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax esi
je r-xdata
push eax
push rw-data
call sub_441b7c
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
movzx eax [ eax + 0x7c ]
cmp ax 0xffff
je r-xdata
movsx ecx ax
push ecx
call sub_430737
sub_447abc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push edi
push rw-data
call sub_430c09
cmp [ esi ] 0x4
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
jne r-xdata
mov edx [ esi + 0x4 ]
push esi
push edx
push 0x2b
push edi
call [ DefDlgProcW@IAT ]
mov eax [ esi + 0x14 ]
push eax
push rw-data
call sub_441b7c
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
push eax
push esi
call sub_4417bf
test [ esi + 0x10 ] 0x10
je r-xdata
mov [ ebx + 0x1c8 ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx ]
push 0x0
push edi
push 0x401
push ecx
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_447b4e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x1c ]
push edx
push eax
call sub_4415d1
mov eax [ ebp + 0xc ]
push 0x0
push eax
push 0x7
push esi
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0x8
sub_447ba8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push eax
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
mov ecx [ ebx ]
mov esi [ ebx + 0x1cc ]
lea eax [ esp + 0x28 ]
push eax
push ecx
mov [ esp + 0x14 ] ebx
call [ BeginPaint@IAT ]
mov edi eax
test esi esi
je r-xdata
mov ecx [ ebx ]
lea eax [ esp + 0x28 ]
push eax
push ecx
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x8a ] 0x10
je r-xdata
movzx edx [ eax + 0x8b ]
cmp edx [ ebx + 0x194 ]
jne r-xdata
cmp [ eax + 0x8b ] 0xff
je r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
lea eax [ esp + 0x18 ]
push eax
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx ]
push edx
push eax
mov [ esp + 0x1c ] ecx
call [ ScreenToClient@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x0
push ecx
push edx
push edi
call [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x44 ]
mov eax [ eax + 0x48 ]
test ebx ebx
js r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x1
push 0x0
push ebx
push eax
push edi
call sub_44719b
mov eax [ esi + 0x8 ]
movsx ecx [ eax + 0x86 ]
movsx edx [ eax + 0x84 ]
push ecx
push edx
push 0x0
push 0x0
push edi
call [ Rectangle@IAT ]
push ebx
push edi
call sub_42fd29
test ebx ebx
js r-xdata
mov eax ebx
mov ebx [ esp + 0xc ]
push esi
push edi
call sub_4475cc
push esi
push edi
call sub_44734f
push esi
push edi
mov bl al
call sub_44770d
test bl bl
je r-xdata
sub_447d22
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov ecx [ ecx + 0x10 ]
mov [ eax + 0x10 ] ecx
inc [ ecx ]
pop ebp
retn 0x8
sub_447d63
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x14
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_447d22
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_447da4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_447d4d
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_447dc1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_447da4
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x4 ] ecx
sub_447e05
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ ebp + 0xc ]
push 0xc
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_447d63
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_447d63
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_447e8e
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x88 ] 0x1b
jne r-xdata
xor eax eax
pop edi
pop ebp
retn 0x20
pop esi
xor eax eax
pop edi
pop ebp
retn 0x20
lea eax [ edi - 0x1 ]
cmp eax 0x17
ja r-xdata
movzx eax [ eax + lookup_table_44802e ]
jmp [ eax * 4 + jump_table_44800e ]
mov edx [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
pop esi
mov eax 0x1
pop edi
pop ebp
retn 0x20
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x1
push eax
push ecx
push edi
push esi
call sub_44097a
pop esi
mov eax 0x1
pop edi
pop ebp
retn 0x20
mov edx [ esi + 0x78 ]
mov eax [ edx + 0xc ]
dec eax
js r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push 0x2
push ecx
push edx
push edi
push esi
call sub_44097a
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
push 0x1
push eax
push ecx
push edi
push esi
call sub_44097a
pop esi
mov eax 0x1
pop edi
pop ebp
retn 0x20
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push 0x2
push edx
push eax
push edi
push esi
call sub_44097a
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x3
push eax
push ecx
push edi
push esi
call sub_44097a
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
push 0x1
push edx
push eax
push edi
push esi
call sub_44097a
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ebx
push 0x3
push ecx
mov ebx edi
push edx
and ebx 0xfffffffe
push ebx
push esi
call sub_44097a
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
push 0x1
push eax
push ecx
push ebx
push esi
call sub_44097a
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push 0x1
push edx
push eax
push edi
push esi
call sub_44097a
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn 0x20
push 0x1
push ecx
push edx
push edi
push esi
call sub_44097a
pop esi
mov eax 0x1
pop edi
pop ebp
retn 0x20
sub_448046
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
push eax
push rw-data
call sub_441af5
test al al
jne r-xdata
cmp [ edi + 0x1a4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
mov ebx [ ebp + 0xc ]
mov ecx [ eax + ebx * 4 ]
mov ecx [ ecx ]
mov al [ ecx + 0x88 ]
mov edi [ edx ]
cmp al 0xe
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0xc
pop edi
mov [ esi + 0x8a ] 0x0
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0xc
call [ CreatePopupMenu@IAT ]
mov [ edi + 0x1a4 ] eax
mov [ edi + 0x1a8 ] eax
mov [ esi + 0x8 ] eax
cmp [ edi + 0x1a4 ] 0x0
jne r-xdata
cmp al 0xf
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0xc
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
call [ CreatePopupMenu@IAT ]
mov [ esi + 0x8 ] eax
mov [ edi + 0x1a8 ] eax
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov edx [ esi + 0x8 ]
mov [ ecx + 0x8 ] edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
sub_448123
push ebp
mov ebp esp
mov eax 0x203c
call sub_422240
mov edx [ ebp + 0x14 ]
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x14 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov eax [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov ebx [ ebp - 0x4 ]
mov edx [ ecx + ebx * 4 ]
mov edi [ SendMessageW@IAT ]
push 0x0
mov [ ebp - 0xc ] eax
mov eax [ edx ]
mov esi [ eax ]
mov eax [ ebp + 0x8 ]
push 0x0
mov [ eax + 0x30 ] esi
mov ecx [ rw-data ]
mov edx [ ecx + ebx * 4 ]
mov ecx [ edx ]
mov dl [ ecx + 0x8b ]
push 0x1200
push 0x0
push 0x0
push 0x101f
push esi
mov [ eax + 0x8b ] dl
call edi
push eax
call edi
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8c ] ax
mov edx [ rw-data ]
mov ecx [ edx + ebx * 4 ]
mov edx [ ecx ]
push 0xfffffff0
push esi
mov [ ebp - 0x10 ] eax
mov [ edx + 0x8c ] ax
call [ GetWindowLongW@IAT ]
push 0x28
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x38 ]
push 0x0
push eax
call sub_412f40
add esp 0xc
push 0x0
push 0x0
push 0x1004
push esi
call edi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x80 ] ax
mov ecx [ rw-data ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x1c ] 0xfffffffe
mov [ ebp + 0x10 ] edx
mov edx [ ecx + ebx * 4 ]
mov ecx [ edx ]
mov ecx [ ecx + 0x94 ]
mov [ ebp + 0x14 ] 0x1
cmp ecx 0xffffffff
jle r-xdata
push rw-data
lea ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x2038 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
push ecx
push edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x30 ] 0x0
call sub_430626
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0x104d
push esi
call edi
mov [ ebp - 0x4 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1c ] ecx
push rw-data
lea ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x2038 ]
push edx
call sub_430626
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8b ] 0xff
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x10 ]
jg r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
mov eax [ ebp - 0xc ]
push 0x1
push edx
push eax
call sub_430b87
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
push ecx
push 0x1008
push esi
call edi
cmp [ ebp - 0x2038 ] 0x0
je r-xdata
test [ ebp - 0x8 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
push ecx
push 0x1074
push esi
call edi
test eax eax
je r-xdata
inc [ ebp + 0x14 ]
jmp r-xdata
lea edx [ ebp - 0x2038 ]
push edx
push 0x0
push 0x1057
push esi
call edi
add eax 0xc
mov [ ebp + 0xc ] eax
cmp eax 0x96
jle r-xdata
mov eax [ ebp + 0x14 ]
push 0x0
push eax
push 0x101d
push esi
call edi
mov ecx [ ebp + 0xc ]
cmp eax ecx
jg r-xdata
mov [ ebp + 0xc ] 0x96
mov edx [ ebp + 0x14 ]
movzx ecx cx
push ecx
push edx
push 0x101e
push esi
call edi
sub_44835a
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
sub esp 0x64
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x14 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
xor edx edx
cmp [ ebx + 0x1b0 ] edx
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebx + 0x1b8 ]
mov [ ebp - 0x2c ] 0x5
cmp eax edx
jge r-xdata
mov [ ebp - 0x2c ] 0x27
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
cmp [ ebx + 0x1bc ] edx
jl r-xdata
mov eax [ ebx + 0x1bc ]
cmp eax edx
jl r-xdata
mov [ ebp - 0x10 ] eax
cmp eax edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] eax
mov ecx 0xa
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
mov eax [ ebx + 0x1b4 ]
mov [ ebp - 0x5c ] 0xffff0001
cmp eax edx
je r-xdata
mov [ ebp - 0x14 ] eax
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov cl [ eax + 0x88 ]
cmp cl 0x10
jne r-xdata
mov [ ebp - 0x5c ] eax
mov esi [ eax + 0x30 ]
mov esi [ eax ]
jmp r-xdata
mov ecx [ eax + 0xc ]
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x60 ] 0xffff0000
jmp r-xdata
cmp cl 0x10
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push edx
push 0x1132
push esi
call [ SendMessageW@IAT ]
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x1105
push esi
mov [ edi + 0xc ] eax
mov [ edi + 0x30 ] esi
call [ SendMessageW@IAT ]
mov ecx [ edi + 0xc ]
mov [ edi + 0x80 ] ax
pop edi
pop esi
mov [ ebx + 0x1b4 ] ecx
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_448480
push ebp
mov ebp esp
sub esp 0x38
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push 0x2c
lea eax [ ebp - 0x30 ]
push 0x0
push eax
mov [ ebp - 0x34 ] 0x30
call sub_412f40
add esp 0xc
cmp edi 0xffffffff
jne r-xdata
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp + 0x14 ]
push eax
push edi
push rw-data
call sub_441af5
test al al
je r-xdata
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebp + 0x14 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ebx [ eax ]
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov ecx [ ebx + 0x1a0 ]
mov [ esi + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0xe
jne r-xdata
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x30 ] 0x13
mov [ ebp - 0x2c ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov edx [ esi + 0x8 ]
lea ecx [ ebp - 0x34 ]
push ecx
push 0x0
push edi
push edx
mov [ ebp - 0x30 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x200
mov eax [ ebp - 0x20 ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x2c ] 0x800
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ esi + 0x80 ] di
mov edx [ ebx ]
push edx
call [ DrawMenuBar@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov edi [ ebp + 0x1c ]
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0x34 ]
push eax
push 0x1
push edi
push ecx
mov [ ebp - 0x24 ] edx
call [ InsertMenuItemW@IAT ]
test eax eax
je r-xdata
sub_4485cb
push ebp
mov ebp esp
sub esp 0x34
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
mov [ ebp - 0x30 ] 0x30
call sub_412f40
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp + 0x14 ]
push eax
push esi
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ edi + 0x1a0 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov ecx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
mov edi [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0xc
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ ebx + 0x8 ] eax
jmp r-xdata
call [ CreateMenu@IAT ]
mov ecx [ edi ]
push eax
push ecx
mov [ edi + 0x1a0 ] eax
call [ SetMenu@IAT ]
mov eax [ edi + 0x1a0 ]
mov [ edi + 0x1a8 ] eax
mov ecx [ ebx + 0x8 ]
push ecx
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x0
push esi
push edx
mov [ ebp - 0x2c ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
call [ CreatePopupMenu@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x8 ] eax
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x1c ]
push 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x8 ]
push edx
push eax
mov [ ebp - 0x2c ] 0x16
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x1c ] esi
call [ InsertMenuItemW@IAT ]
mov ecx [ edi ]
push ecx
call [ DrawMenuBar@IAT ]
mov [ edi + 0x1a8 ] esi
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_44870c
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x8 ]
sub esp 0x8c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x24 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov edi [ esp + 0x18 ]
mov edx [ ecx + edi * 4 ]
mov esi [ edx ]
mov cl [ esi + 0x88 ]
mov [ esp + 0x20 ] eax
mov eax [ esi ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x17 ] cl
mov [ esp + 0x10 ] 0x0
test ebx ebx
jns r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
and eax 0x100
mov [ esp + 0x18 ] eax
je r-xdata
xor ebx ebx
test ebx 0x800
je r-xdata
mov edx [ esp + 0x24 ]
push edi
push edx
call sub_4415d1
mov [ esp + 0x10 ] 0x1
movzx eax [ esp + 0x17 ]
add eax 0xfffffff7
cmp eax 0x11
ja r-xdata
mov eax [ esp + 0x1c ]
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov [ esp + 0x10 ] 0x1
and ebx 0x10f8
mov eax ebx
mov [ esp + 0x18 ] eax
jle r-xdata
movzx ecx [ eax + lookup_table_448d50 ]
jmp [ ecx * 4 + jump_table_448d24 ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esp + 0x1c ]
xor ebx ebx
mov [ esp + 0x10 ] 0x1
test al al
jns r-xdata
mov eax ebx
and eax 0x7
je r-xdata
mov eax ebx
and eax 0x7
je r-xdata
mov eax 0x3
cmp [ rw-data ] eax
jl r-xdata
test bl 0x10
je r-xdata
mov ecx [ esi + 0x30 ]
push 0xfffffff0
push ecx
call [ GetWindowLongW@IAT ]
mov edx [ esi + 0xc ]
mov al bl
and al 0x1
movsx eax al
neg eax
sbb eax eax
and eax 0x1000
add eax 0x1000
mov [ esp + 0x5c ] edx
mov [ esp + 0x58 ] 0x8
mov [ esp + 0x64 ] 0xf010
mov [ esp + 0x60 ] eax
test ebx 0x200
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push edi
push ecx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x38 ] 0x30
mov [ esp + 0x3c ] 0x1
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
test ebx 0x200
je r-xdata
mov eax ebx
and eax 0x7
sub eax 0x0
je r-xdata
mov esi [ esi + 0x30 ]
lea edx [ esp + 0x80 ]
push edx
push 0xffffffff
push 0x1053
push esi
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x90 ] 0x1
mov [ esp + 0x98 ] edi
call [ SendMessageW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x40
je r-xdata
push 0x0
push edi
mov ebx 0xc0
call [ EnableWindow@IAT ]
mov eax [ esp + 0x18 ]
and eax 0x3
push eax
push edi
call sub_440d98
jmp r-xdata
mov edx [ esp + 0x1c ]
push 0x0
and eax 0x3
push eax
push 0xf1
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
nop
mov ecx [ esp + 0x20 ]
cmp [ ecx + 0x19c ] 0x0
movzx eax [ esi + 0x8b ]
je r-xdata
mov edx [ esi + 0x30 ]
mov edi [ SendMessageW@IAT ]
lea ecx [ esp + 0x58 ]
push ecx
push 0x0
push 0x113f
push edx
call edi
test ebx 0x400
je r-xdata
or eax 0x10
mov [ esp + 0x60 ] eax
test bl 0x20
jne r-xdata
mov edx [ esp + 0x20 ]
mov eax [ edx ]
push 0x0
push edi
push 0x401
push eax
call [ SendMessageW@IAT ]
call [ GetFocus@IAT ]
cmp eax [ esi ]
jne r-xdata
mov ecx [ esp + 0x1c ]
push 0x0
push 0x0
push 0x466
push ecx
jmp r-xdata
dec eax
je r-xdata
push 0xffffffec
push esi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x30 ] 0x8
call [ GetWindowLongW@IAT ]
test al 0x4
je r-xdata
mov edx eax
and edx 0x20
je r-xdata
push 0x1
push edi
mov ebx 0xc0
call [ EnableWindow@IAT ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x1
inc eax
cmp eax [ rw-data ]
jle r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x4 ]
mov edi [ esp + 0x20 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
push eax
mov edi ecx
push edi
push rw-data
call sub_440a0d
movzx eax [ esi + 0x8b ]
mov [ edi + 0x198 ] eax
jmp r-xdata
mov edx [ ecx + 0x198 ]
mov [ ecx + 0x194 ] edx
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x30 ]
push eax
push 0x2
push 0x1102
push ecx
call edi
test bl bl
jns r-xdata
mov ecx [ esp + 0x24 ]
push edi
push ecx
call sub_4415d1
jmp r-xdata
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
push 0xffff0000
push 0xffffffff
push 0x465
push eax
mov edx [ esp + 0x1c ]
push 0x0
push 0x0
push 0x467
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
test ebx 0x2100
je r-xdata
test bl 0x5
je r-xdata
mov ecx eax
and ecx 0x10
mov [ esp + 0x18 ] ecx
je r-xdata
add ebx 0x30
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ecx + 0x88 ] 0x3
jne r-xdata
mov edx [ esi + 0x30 ]
push edx
push rw-data
call sub_441b7c
push eax
mov eax [ esp + 0x28 ]
push eax
call sub_4415d1
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x30 ]
push ecx
push 0x9
push 0x110b
push edx
call edi
jmp r-xdata
test bl 0x1
je r-xdata
mov [ esp + 0x10 ] 0x3
cmp [ esp + 0x18 ] 0x0
je r-xdata
lea eax [ ebx - 0x1 ]
neg eax
lea ecx [ esp + 0x28 ]
push ecx
sbb eax eax
push 0x0
and eax 0xfffff000
push 0x104c
add eax 0x2000
push esi
mov [ esp + 0x48 ] 0xf000
mov [ esp + 0x44 ] eax
call [ SendMessageW@IAT ]
mov [ esp + 0x10 ] eax
test al 0x8
je r-xdata
add ebx 0x30
mov ecx [ ecx ]
cmp ecx [ esi + 0x30 ]
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
or [ esp + 0x10 ] 0x8
test ebx 0x2000
je r-xdata
mov [ esp + 0x34 ] 0xffffffff
test eax 0x1000
je r-xdata
add ebx 0x1008
mov cl [ esi + 0x8a ]
test bl cl
jne r-xdata
test [ esp + 0x34 ] 0x8
je r-xdata
or [ esp + 0x10 ] 0x80
lea edx [ esp + 0x28 ]
push edx
push edi
push 0x102b
push esi
mov [ esp + 0x48 ] 0x3
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x34 ] 0x0
not bl
and bl [ esi + 0x8a ]
or bl al
mov al [ esi + 0x8b ]
mov [ esi + 0x8a ] bl
cmp al 0xff
je r-xdata
add ebx 0x1008
test cl 0x10
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push edi
push ecx
mov [ esp + 0x44 ] edx
call [ SetMenuItemInfoW@IAT ]
test ebx 0x200
je r-xdata
test bl 0x4
jne r-xdata
mov ebx [ ShowWindow@IAT ]
test edx edx
je r-xdata
mov ecx [ esp + 0x20 ]
mov ecx [ ecx + 0x194 ]
movzx eax al
cmp eax ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov eax [ eax ]
movsx ecx [ eax + 0x86 ]
movsx edx [ eax + 0x84 ]
push 0x0
push ecx
movsx ecx [ eax + 0x82 ]
push edx
movsx edx [ eax + 0x80 ]
mov eax [ eax ]
push ecx
push edx
push eax
call [ MoveWindow@IAT ]
mov ecx [ esi + 0x30 ]
mov edx [ esp + 0x1c ]
push 0x0
push ecx
push 0x469
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push edi
push ecx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push 0x0
push edi
jmp r-xdata
or [ esp + 0x10 ] 0x8
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0x0
push edi
call ebx
cmp ecx 0xffffffff
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push ecx
call [ DrawMenuBar@IAT ]
jmp r-xdata
test [ esp + 0x34 ] 0x1000
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call [ SetMenuDefaultItem@IAT ]
mov ecx [ esp + 0x20 ]
push 0x1
push esi
push ecx
call sub_430b87
push 0x4
push edi
call ebx
cmp [ esp + 0x17 ] 0x1a
jne r-xdata
push 0x0
push 0xffffffff
test [ esi + 0x8a ] 0x40
je r-xdata
push 0x1
push edi
call [ EnableWindow@IAT ]
sub_448d62
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0xc
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov edx [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + ecx * 4 ]
mov esi [ eax ]
mov bl [ esi + 0x88 ]
mov edi [ esi ]
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0xb ] bl
call sub_432b92
mov eax [ esi + 0x44 ]
add esp 0x4
test eax eax
js r-xdata
movzx eax bl
cmp eax 0x1b
ja r-xdata
push eax
call sub_4413aa
movzx edx [ eax + lookup_table_448f86 ]
mov ebx [ ebp + 0xc ]
jmp [ edx * 4 + jump_table_448f62 ]
mov ebx [ ebp + 0xc ]
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
js r-xdata
test ebx ebx
js r-xdata
push 0x1
push ebx
mov [ esi + 0x44 ] ebx
call sub_441432
mov edx [ ebp - 0x4 ]
push 0x1
push esi
push edx
call sub_430b87
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
jl r-xdata
cmp ebx 0xfe000000
jne r-xdata
push 0x1
push eax
mov [ esi + 0x44 ] eax
call sub_441432
jmp r-xdata
push eax
push 0x0
push 0x2001
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
push eax
push 0x0
push 0x111d
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x1
push eax
mov [ esi + 0x44 ] eax
call sub_441432
mov ecx [ esi + 0x30 ]
push 0x1
push 0x0
push ecx
call [ InvalidateRect@IAT ]
jmp r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
or eax 0xb
push eax
push 0xfffffff0
push edi
call [ SetWindowLongW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
push eax
mov [ esi + 0x44 ] eax
call sub_441432
test [ esi + 0x8a ] 0x20
jne r-xdata
push ebx
push 0x0
push 0x1001
push edi
call [ SendMessageW@IAT ]
push ebx
push 0x0
push 0x1026
push edi
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x4 ]
push 0x1
push esi
push eax
call sub_430b87
jmp r-xdata
push 0x1
push ebx
mov [ esi + 0x44 ] ebx
call sub_441432
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xb ] 0x8
jne r-xdata
mov eax [ esi ]
mov edi [ ShowWindow@IAT ]
push 0x0
push eax
call edi
mov ecx [ esi ]
push 0x5
push ecx
call edi
mov edx [ esi ]
push edx
call [ SetFocus@IAT ]
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448fa2
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx ]
mov cx [ ebp + 0xc ]
push 0x0
push 0x0
mov [ edx + 0x7c ] cx
mov edx [ eax ]
push 0x20
push edx
mov [ eax + 0x16c ] 0x1
call [ PostMessageW@IAT ]
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_44900d
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ edx + ecx * 4 ]
mov esi [ eax ]
mov edi [ esi ]
mov bl [ esi + 0x88 ]
lea ecx [ ebp + 0xc ]
push ecx
call sub_432b92
movzx eax bl
add esp 0x4
cmp eax 0x1b
ja r-xdata
movzx edx [ eax + lookup_table_449159 ]
jmp [ edx * 4 + jump_table_44913d ]
mov eax [ ebp + 0xc ]
push eax
push 0x0
push 0x1024
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
push 0x409
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
push 0x0
push 0x111e
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov eax [ ebp + 0xc ]
push 0x1
push 0x0
push ecx
mov [ esi + 0x48 ] eax
call [ InvalidateRect@IAT ]
jmp r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
or eax 0xb
push eax
push 0xfffffff0
push edi
call [ SetWindowLongW@IAT ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push 0x1
push esi
push eax
mov [ esi + 0x48 ] edx
call sub_430b87
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp bl 0x8
je r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp bl 0x4
je r-xdata
cmp bl 0x1a
je r-xdata
cmp bl 0x19
jne r-xdata
sub_449175
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx ]
test esi 0x20000
je r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
push 0x0
push rw-data
call sub_440edc
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ edi + 0x68 ] 0x1
or esi 0x20000
sub_4491b9
push ebp
mov ebp esp
mov eax 0x2108
call sub_422240
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ebx [ eax ]
movzx eax [ ebx + 0x88 ]
mov edi [ ebx ]
mov [ ebp + 0xc ] ecx
cmp eax 0x3
ja r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
jmp [ eax * 4 + jump_table_4497c5 ]
cmp eax 0x1c
ja r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x143
mov [ ebp - 0xc ] 0x158
mov [ ebp - 0x8 ] 0x14e
mov [ ebp - 0x10 ] 0x14b
jmp r-xdata
mov [ ebp - 0x14 ] 0x180
mov [ ebp - 0xc ] 0x1a2
mov [ ebp - 0x8 ] 0x186
mov [ ebp - 0x10 ] 0x184
jmp r-xdata
test esi esi
je r-xdata
movzx edx [ eax + lookup_table_44980d ]
jmp [ edx * 4 + jump_table_4497d5 ]
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
push edi
call [ SetWindowTextW@IAT ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
push 0x1
push ebx
push edx
call sub_430b87
mov eax [ ebp - 0xc ]
push esi
push 0xffffffff
push eax
push edi
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
push esi
push edi
call [ SetWindowTextW@IAT ]
push 0xf423f
push 0xf4240
push 0xb1
push edi
call [ SendMessageW@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x1c8 ] 0xffffffff
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ eax ] 0x0
je r-xdata
movzx eax [ esi ]
mov [ ebp + 0x8 ] esi
cmp ax [ rw-data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
push 0x0
push eax
push ecx
push edi
call [ SendMessageW@IAT ]
mov edx [ ebp + 0xc ]
push 0x1
push ebx
push edx
call sub_430b87
push esi
push 0x1
push 0xc2
push edi
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
call [ CharNextW@IAT ]
mov esi [ SendMessageW@IAT ]
push 0x0
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x10 ]
push 0x0
push eax
push edi
call esi
jmp r-xdata
test ax ax
jne r-xdata
push rw-data
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2104 ]
push edx
call sub_430626
test al al
je r-xdata
mov esi [ SendMessageW@IAT ]
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x2104 ]
push eax
push 0x0
push ecx
push edi
call esi
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0xc ]
push eax
push 0xffffffff
push edx
push edi
call esi
cmp eax 0xffffffff
je r-xdata
push 0x0
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
call esi
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44936c
push 0x0
push esi
call sub_413bed
fnstcw [ ebp + 0xa ]
movzx eax [ ebp + 0xa ]
or eax 0xc00
mov [ ebp + 0x10 ] eax
add esp 0x4
fldcw [ ebp + 0x10 ]
fistp [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
push ecx
push 0x402
push edi
fldcw [ ebp + 0xa ]
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4493ad
push esi
call sub_413bed
add esp 0x4
call sub_425a80
push eax
push 0x1
push 0x405
push edi
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44948e
push 0x1
push 0x1
lea edx [ ebp - 0x54 ]
push edx
push esi
call sub_432a10
add esp 0x10
lea eax [ ebp - 0x54 ]
push eax
jmp r-xdata
push 0x0
push 0x1002
push edi
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4496e9
push 0x208
call sub_4115d7
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x8 ]
add esp 0x4
mov edi eax
lea eax [ ebp - 0xa4 ]
push eax
push 0x0
push ecx
push edx
mov [ ebp - 0xa4 ] 0x30
mov [ ebp - 0xa0 ] 0x10
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x7c ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push edi
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x9c ] 0x800
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x8 ]
lea eax [ ebp - 0xa4 ]
push eax
push 0x0
push ecx
push edx
mov [ ebp - 0x80 ] esi
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
call [ DrawMenuBar@IAT ]
push edi
call sub_4111dc
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44982a
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push rw-data
mov [ ebp + 0xc ] 0x0
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx + edx * 4 ]
push ebx
mov ebx [ eax ]
push edi
mov edi [ ebx ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
je r-xdata
movzx eax [ ebx + 0x88 ]
add eax 0xfffffffe
cmp eax 0x14
ja r-xdata
mov al [ ebx + 0x8b ]
cmp al 0xff
je r-xdata
push esi
push 0xffffffec
push edi
call [ SetWindowLongW@IAT ]
mov edx [ rw-data ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0x13
jne r-xdata
or esi 0x50000000
push esi
push 0xfffffff0
push edi
call [ SetWindowLongW@IAT ]
mov [ ebp + 0xc ] eax
movzx ecx [ eax + lookup_table_4499c6 ]
jmp [ ecx * 4 + jump_table_4499aa ]
mov edx [ ebp - 0x4 ]
push 0x1
push ebx
push edx
call sub_430b87
mov ecx [ ebp - 0x4 ]
movzx eax al
cmp eax [ ecx + 0x194 ]
je r-xdata
push esi
push 0x0
push 0x1036
push edi
call [ SendMessageW@IAT ]
mov [ ebp + 0xc ] eax
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
or esi 0xe
jmp r-xdata
or esi 0x3
jmp r-xdata
or esi 0x4
push 0x0
test esi 0x800
je r-xdata
or esi 0x4000000
mov eax [ ebx ]
push 0x27
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
cmp al 0x3
je r-xdata
push 0x0
push edi
call [ ShowWindow@IAT ]
jmp r-xdata
push 0x0
push 0xcf
push edi
or esi 0x10000
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x1
push 0xcf
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ ebx + 0x88 ]
cmp al 0x2
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
pop edi
pop ebx
setne al
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4499db
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ edx ]
mov edx [ ecx + eax * 4 ]
or eax 0xffffffff
push edi
mov edi [ edx ]
cmp ebx eax
jne r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ edi ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
mov [ ebp + 0xc ] eax
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0x18 ]
or ecx 0xffffffff
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ ebp + 0x18 ] ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax edx
mov [ ebp + 0x14 ] eax
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov [ ebp - 0x8 ] edx
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push edx
push eax
call [ ScreenToClient@IAT ]
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0xc ]
sub ecx eax
mov [ ebp + 0x18 ] ecx
cmp [ ebp + 0x18 ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x8 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] edx
movsx edx [ edi + 0x80 ]
cmp edx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x18 ]
push 0x1
push edx
push ecx
push eax
push ebx
mov ebx [ ebp + 0xc ]
push ebx
call [ MoveWindow@IAT ]
push 0x1
push edi
push esi
call sub_43028b
mov ecx 0x3
cmp [ edi + 0x88 ] cl
jne r-xdata
movsx edx [ edi + 0x82 ]
cmp edx eax
jne r-xdata
push 0x1
push edi
push esi
call sub_430b87
mov [ ebp + 0x18 ] ecx
cmp [ rw-data ] ecx
jl r-xdata
movsx edx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
jmp r-xdata
movsx ecx [ edi + 0x86 ]
cmp ecx [ ebp + 0x18 ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
inc ecx
mov [ ebp + 0x18 ] ecx
cmp ecx [ rw-data ]
jle r-xdata
mov eax [ eax ]
mov edx [ eax + 0x4 ]
cmp edx [ esi + 0x4 ]
jne r-xdata
cmp [ eax + 0x88 ] 0x16
jne r-xdata
cmp [ eax + 0x30 ] ebx
jne r-xdata
mov eax [ eax ]
push 0x0
push ebx
push 0x469
push eax
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x18 ]
sub_449b77
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
cmp [ eax + 0x7e ] 0x0
jne r-xdata
cmp esi 0x400
jge r-xdata
test esi esi
js r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov eax [ eax ]
cmp [ eax + 0x3a ] 0x0
jne r-xdata
lea edx [ esi - 0x1 ]
cmp edx 0x3fe
ja r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x8
mov edx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx ]
push 0x0
push edx
push eax
call sub_43028b
mov [ eax + 0x7e ] si
sub_449c00
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax ]
movzx eax [ eax + 0x88 ]
dec eax
cmp eax 0x15
ja r-xdata
xor eax eax
pop edi
pop ebp
retn 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn 0xc
movzx eax [ eax + lookup_table_449d18 ]
mov ebx [ SendMessageW@IAT ]
jmp [ eax * 4 + jump_table_449d00 ]
test edi edi
jle r-xdata
push 0xffffffff
push 0x0
push 0xb1
push esi
call ebx
test edi edi
jle r-xdata
movzx ecx [ ebp + 0x10 ]
movzx edx di
shl ecx 0x10
or ecx edx
push ecx
push 0x0
push 0x465
push esi
call [ SendMessageW@IAT ]
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn 0xc
movzx ecx [ ebp + 0x10 ]
movzx eax di
shl eax 0x10
or eax ecx
push eax
push 0x1
push 0x406
push esi
call [ SendMessageW@IAT ]
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn 0xc
push 0x0
push edi
push 0x194
push esi
call [ SendMessageW@IAT ]
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn 0xc
push 0x0
push edi
push 0xc5
push esi
call ebx
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn 0xc
sub_449d2e
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x13
jne r-xdata
or eax 0xffffffff
mov esp ebp
pop ebp
retn 0x4
movzx eax [ eax + 0x8a ]
mov esp ebp
pop ebp
retn 0x4
movsx eax [ eax + 0x8e ]
mov esp ebp
pop ebp
retn 0x4
sub_449d86
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edi
push rw-data
call sub_441af5
test al al
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edx [ edx ]
movzx edx [ edx + 0x88 ]
cmp edx 0x1c
ja r-xdata
movzx edx [ edx + lookup_table_449e6e ]
jmp [ edx * 4 + jump_table_449e5a ]
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ esi ] edx
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ esi ] edx
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x4
mov eax [ ecx + eax * 4 ]
mov edx [ eax ]
mov eax [ edx + 0x8 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x0
push edi
push eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
mov [ esi ] ecx
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x1c ]
mov [ esi ] ecx
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_449e8b
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x1c ]
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp + 0x18 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
xor eax eax
sub edx eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x24
push edi
push ebx
push esi
push ecx
call [ SendMessageW@IAT ]
dec edx
je r-xdata
mov eax [ ebp + 0x28 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
push ecx
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x10 ]
lea edx [ ebp - 0x10 ]
push edx
push eax
push esi
push ecx
call [ SendMessageW@IAT ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ebx ] ecx
mov ecx [ ebp - 0x8 ]
mov [ edi ] edx
mov edx [ ebp + 0x20 ]
pop edi
mov [ edx ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x24 ]
pop esi
mov [ edx ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_449f40
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 ]
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ eax ]
push edx
push ecx
call [ SendMessageW@IAT ]
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub_449f8f
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0xc ]
push edi
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov edi [ eax ]
jmp r-xdata
mov [ rw-data ] eax
cmp esi 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
call sub_430c09
mov [ ebp + 0xc ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp + 0xc ]
push eax
push esi
push rw-data
call sub_441af5
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov ecx [ ecx ]
cmp [ ecx + 0x88 ] 0xb
mov eax [ eax ]
jne r-xdata
mov [ eax + 0x19c ] 0x1
movzx edx [ ecx + 0x8b ]
mov [ eax + 0x194 ] edx
sub_44a032
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ edx ]
push esi
push edi
push eax
push rw-data
call sub_441b7c
push 0xf
mov edi eax
mov [ ebp + 0xb ] 0x0
call [ GetSysColor@IAT ]
mov esi eax
mov eax [ ebx + 0x4c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov esi eax
mov eax [ ebp + 0xc ]
push esi
push eax
call [ SetBkColor@IAT ]
push 0x0
push esi
call sub_441432
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov edi [ edx ]
mov eax [ edi + 0x44 ]
test eax eax
js r-xdata
movzx ecx [ edi + 0x88 ]
cmp ecx 0x1b
ja r-xdata
cmp [ edi + 0x88 ] 0x1b
je r-xdata
cmp eax 0xfffffffe
sete [ ebp + 0xb ]
movzx ecx [ ecx + lookup_table_44a2b6 ]
jmp [ ecx * 4 + jump_table_44a29a ]
mov esi eax
jmp r-xdata
mov edi [ edi + 0x48 ]
cmp edi 0xffffffff
je r-xdata
cmp [ edi + 0x44 ] 0xffffffff
jne r-xdata
cmp [ edi + 0x8b ] 0xff
je r-xdata
mov edx [ edi ]
push 0xfffffff0
push edx
call [ GetWindowLongW@IAT ]
test eax 0x8000800
je r-xdata
push 0x5
call [ GetSysColor@IAT ]
mov esi eax
jmp r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
cmp [ edi + 0x8b ] 0xff
je r-xdata
push 0x8
call [ GetSysColor@IAT ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
mov eax [ ebp + 0xc ]
push edi
push eax
jmp r-xdata
mov al [ edi + 0x88 ]
cmp al 0x17
je r-xdata
mov eax [ ebx + 0x18c ]
lea edx [ ebp - 0x10 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov edx [ ebx + 0x18c ]
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x1328
push edx
call [ SendMessageW@IAT ]
mov eax [ ebx + 0x18c ]
push eax
call [ GetWindowDC@IAT ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
push ecx
push edx
push eax
mov [ ebp + 0x10 ] eax
call [ GetPixel@IAT ]
mov ecx [ ebx + 0x18c ]
mov esi eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
call [ ReleaseDC@IAT ]
cmp esi 0xffffffff
jne r-xdata
push 0xf
call [ GetSysColor@IAT ]
mov esi eax
jmp r-xdata
mov edx [ ebp + 0xc ]
push 0x1
push edx
call [ SetBkMode@IAT ]
push 0x5
call [ GetStockObject@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call [ SetTextColor@IAT ]
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov [ ebp + 0xb ] 0x1
cmp al 0x7
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp al 0x1
je r-xdata
push 0xf
call [ GetSysColor@IAT ]
mov esi eax
jmp r-xdata
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
test al al
je r-xdata
mov eax [ edi ]
push eax
call [ GetWindowDC@IAT ]
push 0x0
mov ebx eax
push 0x0
push ebx
call [ GetPixel@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ edi ]
push ebx
push edx
call [ ReleaseDC@IAT ]
cmp esi 0xffffffff
jne r-xdata
movsx ecx [ edi + 0x84 ]
push 0x0
dec ecx
push ecx
push ebx
call [ GetPixel@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
movsx edx [ edi + 0x86 ]
dec edx
push edx
push 0x0
push ebx
call [ GetPixel@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
movsx eax [ edi + 0x86 ]
movsx ecx [ edi + 0x84 ]
dec eax
push eax
dec ecx
push ecx
push ebx
call [ GetPixel@IAT ]
mov esi eax
sub_44a2d2
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov esi eax
call [ GetFocus@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
push rw-data
call sub_430c09
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
push edi
push rw-data
call sub_441b7c
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
mov [ esi + 0x1c ] eax
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x2
jne r-xdata
mov edx [ eax ]
lea ecx [ esi + 0x1c4 ]
push ecx
add esi 0x1c0
push esi
push 0xb0
push edx
call [ SendMessageW@IAT ]
sub_44a357
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
mov ecx 0x9
jbe r-xdata
mov [ rw-data ] ecx
xor eax eax
pop ebp
retn 0x8
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40c650
test eax eax
js r-xdata
mov eax 0x9
cmp eax 0x7f
jle r-xdata
mov [ rw-data ] eax
xor eax eax
pop ebp
retn 0x8
sub_44a397
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
mov [ esi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x10
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
fild [ ecx + 0x4 ]
test edx edx
jns r-xdata
fld [ ebp + 0x10 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fadd [ r--data ]
mov [ esi ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_440847
mov edi [ ebp + 0x8 ]
jmp r-xdata
push ecx
lea eax [ ebp + 0x8 ]
mov [ esp ] 0x0
call sub_40f1d0
test al al
je r-xdata
sub_44a403
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x28
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_44363d
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_44a444
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ ebp + 0xc ]
push 0xc
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_44a403
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_44a403
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_44a4f7
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_415658
add esp 0x8
test eax eax
je r-xdata
push 0x80004005
call sub_4457c1
push esi
push edi
mov edi ebx
mov ecx 0x9
lea esi [ ebp - 0x24 ]
[ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44a545
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
push esi
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x38 ]
mov [ ebp + 0x8 ] 0x0
mov esi 0x1d
call eax
test eax eax
jns r-xdata
push 0x80070057
call sub_4457c1
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x0
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
test eax eax
mov eax [ ebp - 0x4 ]
js r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
test eax eax
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
mov ax si
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
mov ecx [ eax + 0x28 ]
cmp ecx 0x6
je r-xdata
movzx edx [ eax + 0x40 ]
cmp edx esi
jne r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x0
je r-xdata
mov eax [ eax + 0x3c ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_44a545
movzx esi ax
mov eax [ ebp - 0x4 ]
add esp 0x8
jmp r-xdata
mov esi 0x3
sub ecx 0x3
je r-xdata
mov esi 0xd
jmp r-xdata
dec ecx
je r-xdata
mov esi 0x9
jmp r-xdata
mov esi edx
jmp r-xdata
sub_44a625
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
inc [ edx ]
movzx edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] dl
movzx edx [ ecx + 0x11 ]
mov [ eax + 0x11 ] dl
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
mov ecx [ ecx + 0x18 ]
mov [ eax + 0x18 ] ecx
pop ebp
retn 0x8
sub_44a664
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x1c
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_44a625
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_44a6a5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ ebp + 0xc ]
push 0xc
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_44a664
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_44a664
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_44a72e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
mov [ ebp + 0x8 ] 0x1f4
mov ebx 0x3e8
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40c650
mov [ ebp + 0x8 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push edx
call [ Beep@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
mov ebx eax
sub_44a7bc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x3
push edi
mov edi ecx
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push 0x0
push eax
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
push edi
call sub_441fd6
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
sub_44a835
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4422ae
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_44a856
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x54 ]
mov eax [ esi + 0x20 ]
mov edx [ esi + 0x4 ]
push edi
push 0x0
and ecx 0x80000000
push ecx
push 0x0
push 0x0
push eax
push edx
call [ InternetOpenUrlW@IAT ]
mov edi eax
mov eax [ InternetCloseHandle@IAT ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push edi
push esi
call sub_442516
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
push edi
push 0xdeadbeef
push 0x29
push esi
call sub_4422cb
lea ecx [ ebp - 0xc ]
push ecx
mov bl al
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0xdeadbeef
push 0x2a
push esi
call sub_4422cb
mov bl al
lea eax [ ebp - 0xc ]
push eax
call sub_431861
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
call sub_4318eb
cmp eax 0xc8
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push 0x5
push edi
mov [ ebp + 0x8 ] 0x0
mov [ ebp + 0xc ] 0x20
call [ HttpQueryInfoW@IAT ]
lea eax [ ebp - 0x2c ]
push eax
call sub_41319b
add esp 0x4
cmp [ ebp + 0x10 ] 0x0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
je r-xdata
push 0x1
push 0x0
push 0x0
push esi
call sub_4422cb
lea edx [ ebp - 0xc ]
push edx
mov bl al
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
push esi
call sub_4424f3
lea ecx [ ebp - 0xc ]
push ecx
mov bl al
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44a983
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
mov ebx [ esi + 0x70 ]
mov ecx [ edi + 0x54 ]
mov eax [ esi + 0x30 ]
mov edx [ esi + 0x10 ]
push 0x0
push 0x0
push ebx
push eax
movzx eax [ esi + 0x78 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ esi + 0x20 ]
push ecx
mov ecx [ edi + 0x4 ]
push eax
push edx
push ecx
call [ InternetConnectW@IAT ]
mov [ edi ] eax
push 0x0
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
push edi
call sub_44a856
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
mov esi [ esi + 0x60 ]
push edx
push 0x80000000
push esi
push eax
call [ FtpOpenFileW@IAT ]
mov esi eax
mov eax [ InternetCloseHandle@IAT ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
push 0xdeadbeef
push 0x15
push edi
call sub_4422cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp + 0x10 ]
push edx
push esi
call [ FtpGetFileSize@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ebp + 0xc ] eax
xor eax eax
or eax [ ebp + 0xc ]
xor edx edx
or ecx edx
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ecx
cmp [ ebp + 0x14 ] dl
je r-xdata
push esi
push 0xdeadbeef
push 0x16
jmp r-xdata
push 0x1
push 0x0
push 0x0
push esi
push edi
call sub_4424f3
mov bl al
lea eax [ ebp - 0x8 ]
push eax
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edi
call sub_4422cb
lea ecx [ ebp - 0x8 ]
push ecx
mov bl al
call sub_431861
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_44aa86
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x74 ] 0x4
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x54 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov ebx [ esi + 0x70 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x10 ]
push 0x0
push 0x0
push ebx
push eax
push ecx
movzx ecx [ esi + 0x78 ]
push ecx
push edx
mov edx [ edi + 0x4 ]
push edx
call [ InternetConnectW@IAT ]
mov [ edi ] eax
push 0x0
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x800000
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x60 ]
push edx
push 0x0
push 0x0
push 0x0
push ecx
push 0x0
push eax
call [ HttpOpenRequestW@IAT ]
mov ebx eax
mov eax [ InternetCloseHandle@IAT ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] eax
test ebx ebx
jne r-xdata
push 0xdeadbeef
push 0xb
push edi
call sub_4422cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push ebx
push 0xdeadbeef
push 0xc
push edi
call sub_4422cb
lea ecx [ ebp - 0x8 ]
push ecx
mov bl al
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test [ ebp + 0xc ] 0x1000
je r-xdata
push esi
push ebx
push edi
call sub_442516
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp + 0x10 ]
push eax
push 0x1f
push ebx
mov [ ebp + 0xc ] 0x4
call [ InternetQueryOptionW@IAT ]
or [ ebp + 0x10 ] 0x100
push 0x4
lea ecx [ ebp + 0x10 ]
push ecx
push 0x1f
push ebx
call [ InternetSetOptionW@IAT ]
push 0x0
push 0xdeadbeef
push 0xd
push edi
call sub_4422cb
lea edx [ ebp - 0x8 ]
push edx
mov bl al
call sub_431861
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ebx
call sub_4318eb
cmp eax 0xc8
jne r-xdata
lea edx [ ebp + 0x10 ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push 0x5
push ebx
mov [ ebp + 0x10 ] 0x0
mov [ ebp + 0xc ] 0x20
call [ HttpQueryInfoW@IAT ]
lea edx [ ebp - 0x28 ]
push edx
call sub_41319b
add esp 0x4
cmp [ ebp + 0x14 ] 0x0
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
je r-xdata
push 0x1
push 0x0
push 0x0
push edi
call sub_4422cb
lea ecx [ ebp - 0x8 ]
push ecx
mov bl al
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ebx
push edi
call sub_4424f3
mov bl al
lea eax [ ebp - 0x8 ]
push eax
call sub_431861
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_44ac3d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_40bc70
lea ecx [ esi + 0x10 ]
call sub_40bc70
lea ecx [ esi + 0x20 ]
call sub_40bc70
lea ecx [ esi + 0x30 ]
call sub_40bc70
lea ecx [ esi + 0x40 ]
call sub_40bc70
lea ecx [ esi + 0x50 ]
call sub_40bc70
lea ecx [ esi + 0x60 ]
call sub_40bc70
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44ac82
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_442651
mov eax [ esi + 0xd4 ]
push eax
call [ CloseHandle@IAT ]
lea edi [ esi + 0x58 ]
call sub_40db70
lea ecx [ esi + 0x44 ]
call sub_4422ae
lea ecx [ esi + 0x34 ]
call sub_402250
lea ecx [ esi + 0x20 ]
call sub_402250
pop edi
pop esi
pop ebp
retn 0x4
sub_44acc3
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov dx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] dx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
inc [ edx ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ ecx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ ecx + 0x1c ]
mov [ eax + 0x1c ] edx
mov edx [ ecx + 0x20 ]
mov [ eax + 0x20 ] edx
inc [ edx ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x24 ] edx
mov edx [ ecx + 0x28 ]
mov [ eax + 0x28 ] edx
mov edx [ ecx + 0x2c ]
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x30 ]
mov [ eax + 0x30 ] ecx
inc [ ecx ]
pop ebp
retn 0x8
sub_44ad24
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
push esi
call sub_44acc3
lea eax [ edi + 0x34 ]
push eax
lea ecx [ esi + 0x34 ]
push ecx
call sub_44acc3
mov edx [ edi + 0x68 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
mov [ esi + 0x6c ] eax
mov ecx [ edi + 0x70 ]
mov [ esi + 0x70 ] ecx
mov edi [ edi + 0x74 ]
mov [ esi + 0x74 ] edi
inc [ edi ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_44ad65
push ebp
mov ebp esp
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
lea esi [ ebx + 0x20 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
call sub_401b10
mov edi [ ebp + 0x10 ]
lea esi [ ebx + 0x34 ]
call sub_401b10
lea eax [ ebx + 0x44 ]
push eax
call sub_44268e
lea ecx [ ebp + 0x1c ]
push ecx
lea edx [ ebx + 0x58 ]
xor esi esi
push edx
mov [ ebx + 0x54 ] esi
call sub_44ad24
mov al [ ebp + 0x18 ]
mov [ ebx + 0xd0 ] al
mov eax [ rw-data ]
mov edx 0x1
add eax edx
mov [ ebx + 0xd4 ] esi
mov [ rw-data ] eax
mov [ ebx + 0xd8 ] eax
xor eax eax
cmp [ ebx + 0x38 ] esi
mov [ ebx + 0xdc ] dl
sete al
mov [ ebx + 0x30 ] al
mov eax [ ebp + 0x14 ]
test dl al
je r-xdata
test al 0x2
je r-xdata
or [ ebx + 0x54 ] 0x80000000
mov ecx eax
and ecx 0x4
je r-xdata
or [ ebx + 0x54 ] 0x3000
test al 0x8
je r-xdata
test al 0x8
jne r-xdata
test al 0x10
je r-xdata
cmp ecx esi
jne r-xdata
or [ ebx + 0x54 ] edx
lea edi [ ebp + 0x1c ]
call sub_40db70
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8c
mov [ ebx + 0xdc ] 0x0
or [ ebx + 0x54 ] 0x2
sub_44ae3e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_443fdf
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44ae5b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x10
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_44aeb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ ebp + 0xc ]
push 0xc
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_44ae5b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_44ae5b
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_44af39
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x10 ]
mov ebx ecx
call sub_401b10
push esi
add ebx 0xfffffc80
push ebx
call sub_44aeb0
mov ecx esi
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44af6c
push ebp
mov ebp esp
mov eax 0x2000
call sub_422240
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
push edi
push ecx
mov [ ebp - 0x2000 ] cx
push 0xfff
cmp eax 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x2000 ]
push ecx
push 0x0
lea edx [ ebp - 0x2000 ]
push edx
push ecx
call [ GetLastError@IAT ]
jmp r-xdata
push eax
push 0x0
push 0x1000
call [ FormatMessageW@IAT ]
lea edi [ ebp - 0x2000 ]
call sub_401b10
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_44afd1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_410ba0
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44afef
push ebp
mov ebp esp
sub esp 0xe0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0xdc ]
push eax
call sub_442c5a
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0xdc ]
push edx
call sub_442bb4
xor esi esi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0xdc ]
push eax
call sub_442c29
xor [ esi + ebx ] al
inc esi
cmp esi edi
jb r-xdata
sub_44b040
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x2
push edi
xor esi esi
call sub_442caf
cmp eax 0x3
jne r-xdata
pop edi
lea eax [ eax + esi + 0x3 ]
pop esi
pop ebp
retn 0x4
push eax
push edi
mov esi eax
call sub_442caf
cmp eax 0x7
jne r-xdata
push 0x5
push edi
lea esi [ eax + 0x3 ]
call sub_442caf
cmp eax 0x1f
jne r-xdata
push 0x8
push edi
lea esi [ eax + 0xa ]
call sub_442caf
cmp eax 0xff
jne r-xdata
push 0x8
push edi
lea esi [ eax + 0x29 ]
call sub_442caf
cmp eax 0xff
jne r-xdata
lea esp [ esp ]
push 0x8
push edi
add esi 0xff
call sub_442caf
cmp eax 0xff
je r-xdata
sub_44b0bf
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
push edi
mov [ ebp + 0x8 ] eax
cmp [ esi + 0x43c ] eax
jae r-xdata
push esi
call sub_43206e
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ebx 0x1
push 0xf
push esi
call sub_442caf
push esi
mov edi eax
call sub_44b040
mov ecx [ esi + 0x43c ]
sub ecx edi
test eax eax
je r-xdata
push 0x8
push esi
call sub_442caf
mov ecx [ esi + 0x43c ]
mov edx [ esi + 0x438 ]
and ecx 0x1ffff
mov [ ecx + edx ] al
add [ esi + 0x43c ] ebx
add [ esi + 0x440 ] ebx
jmp r-xdata
push esi
call sub_442d48
push esi
call sub_431fbb
cmp [ esi + 0x448 ] 0x0
jne r-xdata
mov edi [ esi + 0x438 ]
sub eax ebx
mov ebx [ esi + 0x43c ]
mov edx ecx
and edx 0x1ffff
mov dl [ edx + edi ]
and ebx 0x1ffff
mov [ ebx + edi ] dl
mov ebx 0x1
add [ esi + 0x43c ] ebx
add [ esi + 0x440 ] ebx
add ecx ebx
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp [ esi + 0x43c ] eax
jb r-xdata
push ebx
push esi
call sub_442caf
cmp eax ebx
jne r-xdata
sub_44b1a9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
lea eax [ esi + 0x24 ]
push r--data
push eax
call sub_4149c2
add esp 0x8
mov [ esi + 0x1c ] eax
cmp eax ebx
jne r-xdata
mov [ esi + 0x20 ] ebx
lea ecx [ esi + 0x22e ]
push r--data
push ecx
call sub_4149c2
add esp 0x8
mov [ esi + 0x20 ] eax
cmp eax ebx
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
pop esi
lea eax [ ebx + 0x2 ]
pop ebx
pop ebp
retn 0x4
push edi
push esi
call sub_43213d
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
lea edx [ esi + 0x10 ]
push edx
push esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x43c ] ebx
mov [ esi + 0x440 ] ebx
mov [ esi + 0x444 ] ebx
mov [ esi + 0x44c ] ebx
mov [ esi + 0x450 ] ebx
mov [ esi + 0x448 ] bl
mov [ esi + 0x460 ] ebx
mov [ esi + 0x464 ] ebx
call sub_4321a4
test eax eax
je r-xdata
mov esi [ esi + 0x1c ]
cmp esi ebx
je r-xdata
push esi
call sub_44b0bf
push esi
call sub_4320f8
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov esi [ esi + 0x20 ]
cmp esi ebx
je r-xdata
push eax
call sub_414a46
add esp 0x4
pop esi
mov eax 0x3
pop ebx
pop ebp
retn 0x4
push esi
call sub_414a46
add esp 0x4
mov esi [ esi + 0x20 ]
cmp esi ebx
je r-xdata
push eax
call sub_414a46
add esp 0x4
mov esi [ esi + 0x20 ]
cmp esi ebx
je r-xdata
push eax
call sub_414a46
add esp 0x4
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
push esi
call sub_414a46
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
push esi
call sub_414a46
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_414a46
add esp 0x4
sub_44b304
push ebp
mov ebp esp
push ecx
dec [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx ]
add ecx 0x4
mov [ rw-data ] ecx
mov ecx eax
shr ecx 0xb
xor eax ecx
mov edx eax
and edx 0xff3a58ad
shl edx 0x7
xor eax edx
mov ecx eax
and ecx 0xffffdf8c
shl ecx 0xf
xor eax ecx
mov edx eax
shr edx 0x12
xor edx eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x4 ]
jns r-xdata
call sub_442e0c
fmul [ r--data ]
mov esp ebp
pop ebp
retn
fadd [ r--data ]
sub_44b366
dec [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
add eax 0x4
mov [ rw-data ] eax
mov eax ecx
shr eax 0xb
xor ecx eax
mov edx ecx
and edx 0xff3a58ad
shl edx 0x7
xor ecx edx
mov eax ecx
and eax 0xffffdf8c
shl eax 0xf
xor ecx eax
mov eax ecx
shr eax 0x12
xor eax ecx
shr eax 0x1
retn
call sub_442e0c
sub_44b3ac
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
test eax eax
jle r-xdata
xor eax eax
pop ebp
retn 0x4
cmp eax 0x4
jle r-xdata
push ecx
call sub_443006
pop ebp
retn 0x4
cmp eax 0x7
jne r-xdata
mov eax [ ecx ]
pop ebp
retn 0x4
sub_44b3d9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4437e8
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44b3f6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x10 ]
mov ecx [ ecx + 0x14 ]
inc [ ecx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
pop ebp
retn 0x8
sub_44b41c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4325be
test al al
je r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
pop ebx
pop ebp
retn 0x8
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi eax
call sub_401b10
pop edi
mov [ ebx ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
push eax
call sub_4431ad
sub_44b469
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4325be
test al al
je r-xdata
pop ebp
retn 0x4
mov eax [ ecx ]
test eax eax
je r-xdata
push eax
call sub_4431ad
sub_44b489
push ebp
mov ebp esp
mov eax 0x10010
call sub_422240
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x34 ]
push 0x1f5
push edi
mov [ ebp - 0x10 ] edi
call [ InterlockedExchange@IAT ]
push 0xffff
mov [ esi + 0x10 ] 0xffff
call sub_4115d7
mov edx [ esi + 0x2c ]
add esp 0x4
push 0x0
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0xffff
lea ecx [ ebp - 0x10010 ]
push ecx
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x1f6
push edi
call [ InterlockedExchange@IAT ]
pop edi
mov eax 0x1f6
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
pop ebx
lea ebx [ esi + 0x14 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
add eax [ ebp - 0x4 ]
cmp [ esi + 0x10 ] eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
add eax [ esi + 0x8 ]
push ecx
lea edx [ ebp - 0x10010 ]
push edx
push eax
call sub_410e60
mov ecx [ ebp - 0x4 ]
add [ esi + 0xc ] ecx
add esp 0xc
push ebx
call [ LeaveCriticalSection@IAT ]
mov ecx [ esi + 0x2c ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push 0xffff
lea eax [ ebp - 0x10010 ]
push eax
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
add ecx [ ebp - 0x4 ]
mov edi [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
fild [ ebp + 0x8 ]
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
fmul [ r--data ]
fnstcw [ ebp + 0xa ]
movzx eax [ ebp + 0xa ]
or eax 0xc00
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fistp [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov [ esi + 0x10 ] eax
fldcw [ ebp + 0xa ]
call sub_4115d7
mov edx [ esi + 0xc ]
push edx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x8 ]
push edi
push eax
call sub_410e60
push edi
call sub_4111dc
mov edi [ ebp - 0x10 ]
add esp 0x14
fadd [ r--data ]
sub_44b5e8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x34 ]
lea eax [ esi + 0x34 ]
push ecx
push eax
call [ InterlockedExchange@IAT ]
cmp eax 0x1f6
jne r-xdata
push edi
mov bl 0x1
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
mov edx [ esi + 0xc ]
test edx edx
jne r-xdata
push edi
xor bl bl
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
sub_44b63b
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x30 ] 0x0
lea esi [ edi + 0x30 ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x34 ]
push ebx
lea ebx [ edi + 0x34 ]
push eax
push ebx
call [ InterlockedExchange@IAT ]
cmp eax 0x1f6
je r-xdata
pop ebx
add edi 0x14
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi ]
push 0x1f6
push ecx
call [ TerminateThread@IAT ]
mov edx [ esi ]
push 0x3e8
push edx
call [ WaitForSingleObject@IAT ]
push esi
call sub_432614
add esp 0x4
push 0x1f6
push ebx
call [ InterlockedExchange@IAT ]
push edi
call [ LeaveCriticalSection@IAT ]
sub_44b6ab
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
push 0x0
push esi
push sub_44b5cb
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ esi + 0x30 ] eax
sub_44b6d6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
push edi
xor edi edi
xor bl bl
test eax eax
je r-xdata
push esi
call sub_432651
test al al
je r-xdata
push eax
call sub_44b5e8
mov bl al
test bl bl
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_432614
mov ecx [ esi + 0x20 ]
add esp 0x4
push ecx
call sub_4326ed
mov [ esi + 0x20 ] edi
mov edi 0x2
jmp r-xdata
push esi
call sub_432631
test al al
je r-xdata
push eax
call sub_44b5e8
test al al
je r-xdata
lea edx [ esi + 0x10 ]
push edx
call sub_432614
add esp 0x4
jmp r-xdata
or edi 0x8
jmp r-xdata
test edi edi
jne r-xdata
or edi 0x1
lea eax [ esi + 0x10 ]
push eax
call sub_432614
mov ecx [ esi + 0x24 ]
add esp 0x4
push ecx
call sub_4326ed
mov [ esi + 0x24 ] 0x0
or edi 0x4
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
sub_44b79b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
pop esi
test eax eax
je r-xdata
push eax
call sub_44b63b
pop ebp
retn 0x4
push eax
call sub_44b63b
sub_44b7c1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
push esi
call sub_432684
test al al
je r-xdata
pop esi
pop ebp
retn 0x4
push esi
call sub_432664
test al al
je r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_4432c0
add esp 0x4
push eax
mov [ esi + 0x20 ] eax
call sub_44b6ab
push esi
call sub_432651
test al al
jne r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_4432c0
add esp 0x4
push eax
mov [ esi + 0x24 ] eax
call sub_44b6ab
sub_44b821
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_443537
lea eax [ esi + 0x8 ]
push eax
call sub_432614
lea ecx [ esi + 0x10 ]
push ecx
call sub_432614
lea edx [ esi + 0x18 ]
push edx
call sub_432614
add esp 0xc
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn 0x4
sub_44b877
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_44b821
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
push eax
call sub_4326ed
pop esi
pop ebp
retn 0x4
push esi
call sub_4326ed
sub_44b8a3
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov ecx [ ecx + 0x14 ]
mov [ eax + 0x14 ] ecx
inc [ ecx ]
pop ebp
retn 0x8
sub_44b8d4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x29
mov [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] eax
inc [ eax ]
lea ecx [ ebp + 0xc ]
call sub_402250
mov eax esi
pop esi
pop ebp
retn 0x14
sub_44b92d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push esi
mov edi edi
mov esi [ eax + 0x10 ]
push eax
call sub_44b911
mov eax esi
test esi esi
jne r-xdata
pop esi
sub_44b960
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_443869
test al al
jne r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x4
push esi
call sub_443857
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
sub_44b98c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x2
pop esi
pop ebp
retn
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
mov eax 0x3
pop esi
pop ebp
retn
call sub_40f210
xor ecx ecx
test al al
setne cl
pop esi
lea eax [ ecx + 0x1 ]
pop ebp
retn
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
call sub_40f210
movzx eax al
neg eax
sbb eax eax
add eax 0x2
pop esi
pop ebp
retn
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_44ba68
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_44b98c
add esp 0x4
dec eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x4
push 0x0
push eax
call [ mouse_event@IAT ]
mov al 0x1
pop ebp
retn
dec eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x10
push 0x0
push eax
call [ mouse_event@IAT ]
mov al 0x1
pop ebp
retn
dec eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x40
push 0x0
push eax
call [ mouse_event@IAT ]
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_44bacc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_44b98c
add esp 0x4
dec eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x2
push 0x0
push eax
call [ mouse_event@IAT ]
mov al 0x1
pop ebp
retn
dec eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x8
push 0x0
push eax
call [ mouse_event@IAT ]
mov al 0x1
pop ebp
retn
dec eax
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x20
push 0x0
push eax
call [ mouse_event@IAT ]
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_44bb30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x22c
lea eax [ ebp - 0x22c ]
call sub_410120
lea eax [ ebp - 0x22c ]
push eax
call sub_433998
add esp 0x4
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] bl
jne r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x22c ]
push edx
call sub_4111c1
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
add esp 0x4
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x22c ]
mov eax 0x614
push ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xa ] ebx
mov [ ebp - 0x6 ] ebx
mov [ ebp - 0xe ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] 0x3
mov [ ebp - 0x10 ] ax
call [ SHFileOperationW@IAT ]
test eax eax
sete al
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x22c ]
push ecx
call [ RemoveDirectoryW@IAT ]
test eax eax
setne al
pop ebx
mov esp ebp
pop ebp
retn
sub_44bbd2
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x438
push ebx
mov bl [ ebp + 0x10 ]
lea eax [ ebp - 0x438 ]
call sub_410120
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x22c ]
call sub_410120
lea eax [ ebp - 0x22c ]
push eax
lea ecx [ ebp - 0x438 ]
push ecx
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x438 ]
push eax
call sub_433998
add esp 0x4
test al al
je r-xdata
test bl bl
je r-xdata
xor al al
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x22c ]
push ecx
call sub_433998
add esp 0x4
test al al
je r-xdata
lea edx [ ebp - 0x22c ]
push edx
lea eax [ ebp - 0x438 ]
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x22c ]
push edx
call sub_4335cd
add esp 0x4
test al al
je r-xdata
test bl bl
jne r-xdata
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x22c ]
push ecx
lea edx [ ebp - 0x438 ]
push edx
call [ MoveFileW@IAT ]
lea eax [ ebp - 0x22c ]
push eax
call sub_433998
add esp 0x4
test al al
je r-xdata
lea ecx [ ebp - 0x438 ]
push r--data
push ecx
call sub_411536
lea edx [ ebp - 0x438 ]
push edx
call sub_4111c1
lea edx [ ebp - 0x22c ]
xor ecx ecx
push edx
mov [ ebp + eax * 2 - 0x436 ] cx
call sub_4111c1
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
lea edx [ ebp - 0x438 ]
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x18 ] edx
add esp 0x10
mov [ ebp - 0x14 ] eax
xor eax eax
lea edx [ ebp - 0x20 ]
mov ecx 0x614
push edx
mov [ ebp - 0xa ] eax
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xe ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x10 ] cx
call [ SHFileOperationW@IAT ]
test eax eax
sete al
pop ebx
mov esp ebp
pop ebp
retn
sub_44bd27
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x10b4
call sub_422240
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
lea eax [ esp + 0x438 ]
xor bl bl
call sub_410120
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x648 ]
call sub_410120
lea eax [ esp + 0x648 ]
push eax
lea ecx [ esp + 0x43c ]
push ecx
call sub_433908
lea edx [ esp + 0x440 ]
push edx
mov [ esp + 0x1b ] al
call sub_433998
add esp 0xc
test al al
je r-xdata
lea ecx [ esp + 0x648 ]
push ecx
call sub_433998
add esp 0x4
test al al
je r-xdata
lea eax [ esp + 0x438 ]
push r--data
push eax
call sub_411536
add esp 0x8
lea eax [ esp + 0xcb0 ]
push eax
lea ecx [ esp + 0xebc ]
push ecx
lea edx [ esp + 0xab0 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x448 ]
push ecx
call sub_413a0e
add esp 0x14
lea edx [ esp + 0x858 ]
push edx
lea eax [ esp + 0x43c ]
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
mov [ esp + 0xe ] 0x1
cmp esi 0xffffffff
je r-xdata
lea edx [ esp + 0x648 ]
push r--data
push edx
call sub_411536
add esp 0x8
push esi
call [ FindClose@IAT ]
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ CopyFileW@IAT ]
test [ esp + 0x858 ] 0x10
jne r-xdata
lea ecx [ esp + 0x858 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x64c ]
push edx
lea eax [ esp + 0xcb8 ]
push eax
lea ecx [ esp + 0xec4 ]
push ecx
lea edx [ esp + 0x894 ]
push edx
call sub_433784
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call sub_411567
lea edx [ esp + 0xab0 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_411536
lea ecx [ esp + 0x894 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_411536
lea eax [ esp + 0x240 ]
push eax
call sub_4339fa
add esp 0x1c
test al al
je r-xdata
cmp [ esp + 0xe ] 0x1
jne r-xdata
mov [ esp + 0xe ] al
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0x0
lea eax [ esp + 0x22c ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call edi
cmp [ esp + 0xf ] 0x0
jne r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov bl 0x1
push 0x0
lea eax [ esp + 0x22c ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call edi
test eax eax
je r-xdata
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ MoveFileW@IAT ]
jmp r-xdata
lea edx [ esp + 0x228 ]
push edx
lea eax [ esp + 0x1c ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x228 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x18 ]
push edx
call [ DeleteFileW@IAT ]
jmp r-xdata
test eax eax
jne r-xdata
sub_44bf8b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa88
mov ecx [ ebp + 0x8 ]
push ebx
push esi
lea eax [ esp + 0x18 ]
mov [ esp + 0xf ] 0x0
call sub_410120
lea eax [ esp + 0x18 ]
push eax
call sub_433998
add esp 0x4
test al al
je r-xdata
lea edx [ esp + 0x680 ]
push edx
lea eax [ esp + 0x88c ]
push eax
lea ecx [ esp + 0x480 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_413a0e
add esp 0x14
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ FindFirstFileW@IAT ]
mov esi eax
mov bl 0x1
cmp esi 0xffffffff
je r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_411536
add esp 0x8
push esi
call [ FindClose@IAT ]
mov al [ esp + 0xf ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp bl 0x1
jne r-xdata
test [ esp + 0x228 ] 0x10
jne r-xdata
lea ecx [ esp + 0x228 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x17 ] bl
call sub_411567
lea edx [ esp + 0x480 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_411536
lea ecx [ esp + 0x264 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_411536
add esp 0x18
lea eax [ esp + 0x18 ]
push eax
call [ DeleteFileW@IAT ]
cmp eax 0x1
jne r-xdata
xor bl bl
jmp r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c0a3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
inc eax
cmp [ esi + 0x8 ] eax
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x41c2
jae r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
jmp r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
mov [ esi + 0x8 ] eax
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
fmul [ r--data ]
fnstcw [ ebp + 0xe ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp + 0x8 ] eax
fldcw [ ebp + 0x8 ]
fistp [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x8 ] ecx
fldcw [ ebp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov [ esi ] edi
pop edi
mov edx [ esi + 0x4 ]
inc edx
push edx
push eax
push edi
call sub_410e60
mov eax [ esi ]
push eax
call sub_4111dc
add esp 0x10
fmul [ r--data ]
fnstcw [ ebp + 0xe ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp + 0x8 ] eax
fldcw [ ebp + 0x8 ]
fistp [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
fldcw [ ebp + 0xe ]
fadd [ r--data ]
fmul [ r--data ]
fnstcw [ ebp + 0xe ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp + 0x8 ] eax
fldcw [ ebp + 0x8 ]
fistp [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ esi + 0x8 ] edx
fldcw [ ebp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov ecx [ esi + 0x8 ]
push edi
push ecx
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
mov edi eax
mov eax [ esi ]
add esp 0x4
test eax eax
je r-xdata
sub_44c1b5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4370df
test al al
je r-xdata
mov eax [ esi + 0x4 ]
inc eax
push eax
push esi
call sub_44c0a3
mov eax [ esi + 0xc ]
dec [ eax ]
push edi
push esi
call sub_434a13
mov eax [ esi + 0x4 ]
add eax 0x2
push eax
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
inc ecx
push ecx
mov edi eax
push edx
push edi
call sub_410e60
add esp 0x10
mov [ esi ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov al [ ebp + 0xc ]
mov [ ecx + edx ] al
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_44c228
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push eax
call sub_444d96
xor esi esi
xor bl bl
cmp [ edi ] esi
jbe r-xdata
mov [ edi ] esi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0xc
lea ebx [ ebx ]
test bl bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
mov bl 0x1
call sub_44c1b5
inc esi
cmp esi [ edi ]
jb r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
lea ecx [ ebp + 0x10 ]
push ecx
push edx
call sub_443ec4
test al al
je r-xdata
sub_44c2c9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x9d0 ]
cmp ecx 0x206
jge r-xdata
mov esi 0x7
cmp esi ecx
jg r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
pop ebp
retn 0x4
lea eax [ edi + 0x1d0 ]
xor eax eax
push eax
call sub_44c2b3
jmp r-xdata
cmp esi ecx
jg r-xdata
inc esi
add eax 0x4
cmp esi ecx
jle r-xdata
inc ecx
mov [ edi + 0x9d0 ] ecx
mov esi ecx
jmp r-xdata
mov [ edi + 0x9d0 ] 0x7
mov esi [ edi + 0x9d0 ]
jmp r-xdata
mov ecx [ edi + 0x9d0 ]
test ecx ecx
jne r-xdata
push 0x18
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov [ edi + esi * 4 + 0x1b4 ] eax
mov [ eax + 0x4 ] 0xff
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
xor eax eax
push eax
call sub_44c2b3
jmp r-xdata
sub_44c37a
push ebp
mov ebp esp
sub esp 0x11c
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov al [ edi ]
mov cl [ edi + 0x7 ]
movzx esi [ edi + 0x8 ]
mov [ ebp + 0xc ] al
mov [ ebp + 0x8 ] cl
je r-xdata
push edi
call sub_43487c
test al al
je r-xdata
cmp al 0x14
je r-xdata
push 0x1c
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
push 0x1
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] ax
mov [ ebp - 0x16 ] si
mov [ ebp - 0x14 ] 0x6
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ SendInput@IAT ]
push edi
call sub_444980
cmp al 0x1
jne r-xdata
cmp al 0x90
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push 0x2
push ecx
push edx
push ebx
call sub_43471d
push ebx
call sub_4347a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push 0x3
push edx
push eax
push ebx
call sub_43471d
push ebx
call sub_4347a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp al 0x91
je r-xdata
push edi
call sub_43487c
test al al
je r-xdata
push ebx
call sub_4347a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x11c ]
push edx
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
movzx esi [ ebp + 0x8 ]
shl esi 0x10
push edi
or esi 0xc0000001
call sub_444980
cmp al 0x1
jne r-xdata
movzx eax [ ebp + 0xc ]
xor [ ebp + eax - 0x11c ] 0x80
lea eax [ ebp + eax - 0x11c ]
lea eax [ ebp - 0x11c ]
push eax
call [ SetKeyboardState@IAT ]
cmp [ ebx + 0x17 ] 0x0
jne r-xdata
or esi 0x1000000
mov al [ ebp + 0xc ]
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov ecx [ ebx + 0x20 ]
push esi
movzx eax al
push eax
push 0x101
push ecx
call [ PostMessageW@IAT ]
push ebx
call sub_4347a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov al [ ebp + 0xc ]
cmp al 0x12
je r-xdata
mov edx [ ebx + 0x20 ]
movzx ecx al
or esi 0x20000000
push esi
push ecx
push 0x105
push edx
call [ PostMessageW@IAT ]
push ebx
call sub_4347a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x16 ] 0x0
jne r-xdata
sub_44c514
push ebp
mov ebp esp
sub esp 0x120
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x20 ]
push edi
mov edi [ ebp + 0xc ]
movzx edx [ edi + 0x8 ]
mov al [ edi ]
mov cl [ edi + 0x7 ]
mov [ ebp + 0xc ] al
mov [ ebp + 0x8 ] cl
mov [ ebp - 0x4 ] edx
test esi esi
je r-xdata
push edi
call sub_43487c
test al al
je r-xdata
cmp al 0x14
je r-xdata
mov ax [ ebp - 0x4 ]
push 0x1c
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ax
xor eax eax
push ecx
xor edx edx
push 0x1
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] dx
mov [ ebp - 0x18 ] 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
call [ SendInput@IAT ]
push ebx
call sub_43477c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_444980
cmp al 0x1
jne r-xdata
cmp al 0x90
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push 0x0
push eax
push ecx
push ebx
call sub_43471d
push ebx
call sub_43477c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push 0x1
push ecx
push edx
push ebx
call sub_43471d
push ebx
call sub_43477c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp al 0x91
je r-xdata
push edi
call sub_43487c
test al al
je r-xdata
movzx eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x102
push esi
call [ PostMessageW@IAT ]
push ebx
call sub_43477c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x120 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
movzx esi [ ebp + 0x8 ]
shl esi 0x10
push edi
or esi 0x1
call sub_444980
cmp al 0x1
jne r-xdata
movzx eax [ ebp + 0xc ]
or [ ebp + eax - 0x120 ] 0x80
lea ecx [ ebp - 0x120 ]
lea eax [ ebp + eax - 0x120 ]
push ecx
call [ SetKeyboardState@IAT ]
cmp [ ebx + 0x17 ] 0x0
jne r-xdata
or esi 0x1000000
mov al [ ebp + 0xc ]
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
push esi
movzx ecx al
push ecx
push 0x100
push edx
call [ PostMessageW@IAT ]
push ebx
call sub_43477c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov al [ ebp + 0xc ]
cmp al 0x12
je r-xdata
movzx edx al
mov eax [ ebx + 0x20 ]
or esi 0x20000000
push esi
push edx
push 0x104
push eax
call [ PostMessageW@IAT ]
push ebx
call sub_43477c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x16 ] 0x0
jne r-xdata
sub_44c6d7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push esi
push edi
call sub_44c514
push esi
push edi
call sub_44c37a
pop edi
pop esi
pop ebp
retn 0x8
sub_44c6f6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esi + 0x7 ] bl
mov [ esi ] 0xff
mov [ esi + 0x2 ] ebx
mov [ esi + 0x6 ] bl
push esi
mov [ esi + 0xa ] bl
mov [ esi + 0x8 ] di
call sub_434869
test al al
je r-xdata
xor al al
push edi
call [ VkKeyScanW@IAT ]
movzx eax ax
cmp ax 0xffff
jne r-xdata
movzx edx al
mov ecx eax
push ebx
sar ecx 0x8
push edx
mov [ esi ] al
mov [ ebp + 0xf ] cl
call [ MapVirtualKeyW@IAT ]
mov cl [ ebp + 0xf ]
mov [ esi + 0x7 ] al
mov al 0x1
test al cl
je r-xdata
test cl 0x2
je r-xdata
mov [ esi + 0x1 ] al
test cl 0x4
je r-xdata
mov [ esi + 0x3 ] al
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov [ esi + 0x4 ] al
pop esi
pop ebx
pop ebp
retn 0x8
sub_44c777
push ebp
mov ebp esp
mov cl [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
xor eax eax
mov [ esi + 0x8 ] ax
mov [ esi + 0x7 ] bl
mov [ esi + 0x1 ] ebx
mov [ esi + 0x5 ] bx
push esi
mov [ esi + 0xa ] bl
mov [ esi ] cl
call sub_43487c
test al al
jne r-xdata
movzx edx [ ebp + 0xc ]
push ebx
push edx
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
pop esi
pop ebx
pop ebp
retn 0x8
sub_44c7c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_44b469
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44c7dd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push 0xb
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
push 0xd
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
pop esi
mov [ ebx ] 0x1
mov eax 0x1
pop ebx
pop ebp
retn 0x8
push 0x16
push r--data
push esi
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x1 ] 0x1
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ esi + 0x2c ]
call sub_410160
mov esi eax
push esi
call sub_444b5f
push esi
call sub_444bbb
push esi
call sub_4111c1
add esp 0x4
cmp [ esi + eax * 2 - 0x2 ] 0x22
jne r-xdata
mov ebx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push esi
mov ecx ebx
call eax
push esi
call sub_4111dc
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
xor ecx ecx
lea edi [ esi + 0x2 ]
push edi
mov [ esi + eax * 2 - 0x2 ] cx
call sub_444b5f
push edi
call sub_444bbb
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push edi
call eax
push esi
call sub_4111dc
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
sub_44c8cd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push esi
call sub_444ed6
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
sub ecx edi
inc ecx
push ecx
lea edx [ eax + edi ]
push edx
push eax
call sub_410e60
add esp 0xc
sub [ esi + 0x4 ] edi
sub_44c901
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
push esi
call sub_4349ff
test al al
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ edi + 0x1 ]
push eax
call sub_444dd6
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_4115d7
mov [ esi ] eax
add esp 0x4
mov [ eax + edi ] 0x0
push eax
call sub_4111dc
add esp 0x4
sub_44c94a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push esi
call sub_444ed6
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
cmp edi ecx
jae r-xdata
pop edi
add eax ecx
pop esi
pop ebp
retn 0x8
add eax edi
pop edi
pop esi
pop ebp
retn 0x8
sub_44c974
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
push esi
call sub_44c8cd
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
cmp ebx eax
jae r-xdata
cmp edi 0xffffffff
je r-xdata
sub eax ebx
mov edi eax
lea ecx [ ebx + edi ]
cmp ecx eax
jbe r-xdata
push edi
push esi
call sub_44c901
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_434a13
lea edx [ edi + 0x1 ]
push edx
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
add esp 0x4
mov [ esi ] eax
jmp r-xdata
push esi
call sub_4370df
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ esi ]
mov [ esi + 0x4 ] edi
mov ecx [ eax ]
push edi
add ecx ebx
push ecx
push edx
call sub_410e60
mov eax [ esi ]
add esp 0xc
mov [ edi + eax ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_44ca07
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
or ebx 0xffffffff
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
jg r-xdata
cmp [ edi ] ebx
je r-xdata
mov ebx [ esi + 0x30 ]
mov edx [ esi ]
push ebx
mov ebx [ esi + 0x2c ]
push ebx
mov ebx [ esi + 0x40 ]
or ebx [ esi + 0x38 ]
push ebx
push eax
push ecx
mov ecx [ esi + 0x24 ]
push edx
push ecx
call sub_44663b
xor ecx ecx
add esp 0x1c
mov [ esi + 0x34 ] eax
cmp eax ecx
jg r-xdata
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x2c ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] edx
mov [ esi + 0x38 ] ecx
cmp [ ebp + 0x10 ] cl
je r-xdata
or ebx 0xffffffff
cmp eax ebx
jne r-xdata
push edi
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_444f80
lea edx [ ebp - 0x8 ]
push edx
push edi
push esi
call sub_444f21
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_434a8d
mov eax [ esi + 0x34 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
cmp [ esi + 0x38 ] ecx
je r-xdata
mov ecx [ esi + 0x28 ]
cmp [ eax ] ecx
jne r-xdata
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x4 ]
push edx
push esi
call sub_44c94a
mov al [ eax ]
mov [ ebp + 0xc ] al
mov ecx [ ebp + 0xc ]
push ecx
mov [ ebp - 0x8 ] ebx
call sub_434a5e
add eax [ edi + 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_444f21
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_434a8d
jmp r-xdata
mov [ esi + 0x38 ] 0x10000010
inc ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
sub_44cb39
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov edx [ esi + 0x30 ]
mov ecx [ esi ]
push edx
mov edx [ esi + 0x2c ]
push edx
mov edx [ esi + 0x40 ]
push edx
mov edx [ esi + 0x28 ]
push 0x0
push edx
push ecx
push eax
call sub_44663b
add esp 0x1c
mov [ esi + 0x34 ] eax
test eax eax
jle r-xdata
mov [ esi + 0x34 ] 0x0
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_44cb87
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x1c ]
mov [ esi ] r--data
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ edi ] ebx
mov [ esi + 0x20 ] 0x1
mov [ ebp + 0x8 ] ebx
mov [ esi + 0x24 ] ecx
cmp eax ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push eax
push esi
call sub_444fd2
mov edx [ esi + 0x10 ]
push edi
push 0x800
push edx
call [ CreateDispTypeInfo@IAT ]
cmp eax ebx
jl r-xdata
cmp [ edi ] ebx
je r-xdata
push esi
call sub_434dda
mov ecx [ edi ]
mov edi [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
push ecx
push edi
push ebx
call [ CreateStdDispatch@IAT ]
test eax eax
js r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov [ esi + 0x14 ] edi
mov edx [ eax ]
mov edx [ edx ]
push r--data
push eax
call edx
mov edi eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
sub_44cc34
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_445660
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44cc51
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
push 0x80004003
call sub_4457c1
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push 0x5a
push esi
mov [ ebp + 0xc ] eax
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ ebp + 0x8 ] eax
call [ ReleaseDC@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ edi ]
mov esi [ MulDiv@IAT ]
push eax
push ecx
push 0x9ec
call esi
mov edx [ ebp + 0x8 ]
mov [ ebx ] eax
mov eax [ edi + 0x4 ]
push edx
push eax
push 0x9ec
call esi
pop edi
pop esi
mov [ ebx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
push 0x80004003
call sub_4457c1
sub_44ccd4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x20 ]
call sub_408f40
mov esi edi
call sub_408f40
pop edi
pop esi
pop ebp
retn 0x4
sub_44ccf1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_44ccd4
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44cd1c
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
push esi
push eax
call [ GetWindowRect@IAT ]
test eax eax
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
call sub_445a61
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ esi + 0xc ]
mov [ ebp - 0x8 ] ecx
sub edi ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov [ ebp - 0x4 ] edx
sub ebx edx
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add edi eax
add ebx ecx
mov [ esi + 0xc ] ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edi
pop ebx
sub_44cd93
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_445ae0
xor ecx ecx
add esp 0x8
test al al
sete al
pop ebp
retn
sub_44cdaf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_445bac
xor eax eax
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x8
sub_44cde9
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
add eax [ ebx + 0x4 ]
mov ecx esi
call sub_4013c0
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov edx [ esi ]
add eax eax
push eax
push ecx
push edx
call sub_410e60
mov eax [ ebx + 0x4 ]
mov ecx [ edi + 0x4 ]
mov edx [ esi ]
inc eax
add eax eax
push eax
mov eax [ ebx ]
lea ecx [ edx + ecx * 2 ]
push eax
push ecx
call sub_410e60
mov ecx [ edi + 0x4 ]
add esp 0x18
add ecx [ ebx + 0x4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_44ce43
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
lea eax [ ebp + 0x8 ]
push eax
call sub_432520
mov ebx [ eax + 0x8 ]
lea ecx [ ebp + 0x8 ]
push ecx
call sub_443106
mov [ ebp - 0x4 ] eax
dec eax
shr eax 0x2
lea esi [ eax * 4 + 0x4 ]
shr esi 0x2
add esi 0x2
push esi
push 0x0
push 0x13
call [ SafeArrayCreateVector@IAT ]
mov edi eax
test edi edi
je r-xdata
lea esi [ ebp + 0x8 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x4 ]
push edx
lea eax [ edi + 0x20 ]
push ebx
mov [ edi + 0x18 ] 0x73747263
mov [ edi + 0x1c ] ebx
push eax
mov [ edi + esi * 4 + 0x14 ] 0x0
call sub_410e60
add esp 0xc
lea esi [ ebp + 0x8 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_44cecd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_446606
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
cmp [ eax ] 0x29
jne r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x4
sub_44cef6
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410ba0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_44cf17
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
shr eax 0xb
and eax 0x1
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x2c ]
shr eax 0x9
and eax 0x1
mov [ ebp - 0xb4 ] eax
xor eax 0x1
mov [ ebp - 0xb8 ] eax
mov eax 0xfffffffe
push ebx
mov ebx [ ecx ]
mov ecx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x38 ] eax
movsx eax [ ebp - 0x2c ]
push esi
mov esi [ ebp + 0x24 ]
push edi
mov edi [ ecx ]
xor ecx ecx
and eax 0x1
shl eax 0x8
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0xb0 ] edx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x9c ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x68 ] eax
mov eax [ esi + 0x10 ]
add eax 0xf9c
cmp [ esi + 0x24 ] eax
ja r-xdata
mov ecx [ esi + 0x10 ]
add ecx 0xf9c
cmp ebx ecx
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x34
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x54 ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x34
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x74 ]
cmp ebx ecx
jae r-xdata
mov edx [ ebp - 0x8 ]
cmp edx 0x2a
je r-xdata
cmp [ ebp - 0x8 ] edx
je r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ edx ]
mov edx ebx
sub edx ecx
mov ecx 0x7fffffeb
sub ecx eax
cmp ecx edx
jl r-xdata
mov ebx ecx
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
cmp edx 0x2b
je r-xdata
cmp [ ebp - 0x8 ] 0x5c
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x14
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub eax [ ebp - 0x74 ]
mov edx [ ebp + 0x28 ]
add eax ebx
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
xor edx edx
cmp eax edx
je r-xdata
mov eax [ ebp - 0x2c ]
and eax 0x8
mov [ ebp - 0x28 ] eax
je r-xdata
cmp edx 0x3f
je r-xdata
cmp ecx edx
je r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
mov ebx [ ebp - 0xa4 ]
cmp eax [ ebp - 0xa4 ]
jbe r-xdata
test [ ebp - 0x2c ] 0x4000
je r-xdata
mov eax [ esi + 0xc ]
test [ edx + eax ] 0x1
jne r-xdata
cmp edx 0x7b
jne r-xdata
test [ ebp - 0x2c ] 0x4000
mov edx [ ebp - 0x8 ]
je r-xdata
cmp [ ebp + 0x28 ] edx
jne r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x54 ] edx
inc edi
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x74 ] ebx
jmp r-xdata
mov edi [ ebp - 0xa4 ]
mov ecx ebx
sub ecx eax
push ecx
push eax
push edi
call sub_4165d0
mov ecx [ ebp - 0x5c ]
mov edx edi
sub edx [ ebp - 0x10 ]
add esp 0xc
add ebx edx
mov [ ebp - 0x10 ] edi
mov edi [ ebp - 0x4 ]
xor edx edx
mov [ ebp - 0x74 ] ebx
jmp r-xdata
cmp edx 0x7c
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
cmp edx 0x23
jne r-xdata
mov ecx [ ebp - 0x5c ]
xor eax eax
mov [ ebp - 0x14 ] eax
cmp ecx eax
je r-xdata
lea edx [ edi + 0x1 ]
push edx
call sub_42f7d2
mov edx [ ebp - 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
mov ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xac ] dl
je r-xdata
mov [ ebx ] 0x53
mov [ ebx + 0x1 ] 0xff
mov eax edi
mov ecx eax
sub ecx [ esi + 0x18 ]
mov [ ebp - 0x5c ] ebx
sar ecx 0x8
mov [ ebx + 0x2 ] cl
sub al [ esi + 0x18 ]
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x3 ] al
mov edi [ ebp - 0x4 ]
add ebx 0x6
mov [ ebp - 0x5c ] edx
movzx edx [ ecx + 0x2 ]
movzx eax [ ecx + 0x3 ]
shl edx 0x8
or edx eax
mov eax edi
sub eax edx
sub eax [ esi + 0x18 ]
mov edx eax
sar edx 0x8
mov [ ecx + 0x4 ] dl
mov [ ecx + 0x5 ] al
mov edi [ ebp - 0x4 ]
xor edx edx
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x28 ] edx
je r-xdata
movzx eax [ edx + lookup_table_45017b ]
jmp [ eax * 4 + jump_table_450147 ]
mov [ ebx ] 0x53
mov [ ebx + 0x1 ] 0xff
mov eax edi
mov ecx eax
sub ecx [ esi + 0x18 ]
mov [ ebp - 0x5c ] ebx
sar ecx 0x8
mov [ ebx + 0x2 ] cl
sub al [ esi + 0x18 ]
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x3 ] al
mov edi [ ebp - 0x4 ]
add ebx 0x6
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
test al al
je r-xdata
mov eax [ ebp - 0xb0 ]
mov edx eax
dec eax
mov [ ebp - 0xb0 ] eax
test edx edx
jg r-xdata
movsx eax [ ebp - 0x2c ]
and eax 0x1
or al 0x1c
mov [ ebp - 0x10 ] ebx
mov [ ebx ] al
inc ebx
test ecx ecx
jle r-xdata
cmp edx 0xc0
jl r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x1c ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x44 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x28 ]
mov [ edx ] eax
mov edx [ ebp + 0x10 ]
mov [ edx ] edi
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov edi edi
mov edx [ ebp - 0x8 ]
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
mov dl [ ebp - 0xac ]
cmp dl 0xd
je r-xdata
mov edi [ ebp - 0xc ]
push edi
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_410e60
add esp 0xc
add ebx edi
mov ecx edi
mov dl [ edi + 0x1 ]
inc edi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
inc edi
push edi
call sub_42f739
mov edi eax
mov eax [ ebp + 0x14 ]
add esp 0x10
cmp [ eax ] 0x0
mov [ ebp - 0x4 ] edi
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx ebx
sub edx [ ebp - 0x74 ]
mov esi 0x7fffffeb
sub esi eax
cmp esi edx
jge r-xdata
mov ecx [ esi + 0x5c ]
mov edx [ esi + 0x1c ]
sub edx ecx
cmp edi edx
ja r-xdata
mov eax [ esi + 0x1c ]
cmp edi eax
jae r-xdata
mov [ ebp - 0x5c ] 0x0
movzx edx [ ecx + 0x2 ]
movzx eax [ ecx + 0x3 ]
shl edx 0x8
or edx eax
mov eax edi
sub eax edx
sub eax [ esi + 0x18 ]
mov edx eax
sar edx 0x8
mov [ ecx + 0x4 ] dl
mov [ ecx + 0x5 ] al
mov edi [ ebp - 0x4 ]
or [ esi + 0x48 ] 0x20
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x4 ] edi
mov al [ edi ]
mov dl [ edi + 0x1 ]
inc edi
mov [ ebp + ecx - 0xac ] al
and dl 0xc0
inc ecx
cmp dl 0x80
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
sub eax [ ebp - 0x74 ]
add eax ebx
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x14
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
inc edi
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
cmp al [ esi + 0x60 ]
jne r-xdata
mov edx [ ebp - 0x24 ]
push edx
lea edx [ esi + 0x5c ]
push edx
push eax
push ecx
push edi
call sub_42e9b5
add esp 0x14
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x60 ] edx
cmp ecx 0x1
je r-xdata
mov edi [ ebp - 0x44 ]
or eax 0xffffffff
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x60 ] edi
cmp ecx 0x1
je r-xdata
mov eax [ ebp - 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
cmp edx ecx
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov cl [ edi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp ecx 0x1
je r-xdata
mov eax [ esi + 0x5c ]
lea edi [ edi + eax - 0x1 ]
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x0
jne r-xdata
movzx eax [ ebx - 0x1 ]
or eax [ esi + 0x4c ]
or eax [ ebp - 0x68 ]
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x68 ] 0x0
jne r-xdata
movzx eax dl
or eax [ ebp - 0x68 ]
mov [ ebp - 0x38 ] eax
cmp ecx 0x1
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x9
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x40 ] ecx
jne r-xdata
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
jmp r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov dl [ edi ]
and dl 0xc0
cmp dl 0x80
je r-xdata
mov al [ edi + 0x1 ]
cmp al [ esi + 0x61 ]
je r-xdata
mov edi [ ebp - 0x4 ]
movzx eax [ ebx - 0x1 ]
or eax [ esi + 0x4c ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x44 ] eax
xor edx edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x44 ] eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] ecx
neg eax
sbb eax eax
and eax 0x200
mov [ ebp - 0x20 ] ecx
mov ecx edx
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x3c ] ecx
mov al [ edi + 0x1 ]
cmp al 0x2b
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x44 ] eax
cmp al 0x3f
jne r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
inc edi
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov eax [ ebp - 0xb8 ]
inc edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov dl [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x49 ] dl
cmp dl 0x1c
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp dl 0x1d
je r-xdata
cmp [ ebp - 0x40 ] 0x1
movzx ecx [ ebx - 0x1 ]
mov [ ebp - 0x8 ] ecx
jle r-xdata
test [ ebx - 0x1 ] 0x80
lea ecx [ ebx - 0x1 ]
je r-xdata
cmp dl 0x1e
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c ]
or eax ecx
or eax [ ebp - 0x68 ]
mov [ ebp - 0x44 ] eax
mov dl [ ecx ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp dl 0x17
jae r-xdata
cmp [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx + 0x1 ]
mov [ ebp - 0x28 ] 0xd
mov [ ebp - 0x8 ] edx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ecx ]
cmp al 0x10
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax ebx
sub eax ecx
push eax
push ecx
lea ecx [ ebp - 0xc0 ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_410e60
mov edi [ ebp - 0x4 ]
add esp 0xc
or [ ebp - 0x8 ] 0x80
jmp r-xdata
lea esp [ esp ]
cmp dl 0x4e
je r-xdata
cmp [ ebp - 0x20 ] 0x0
movzx eax dl
mov [ ebp - 0x28 ] 0x1a
mov [ ebp - 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax [ ecx + 0x2 ]
mov [ ebp - 0x14 ] edx
cmp al 0xf
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
push esi
push edx
inc edi
push edi
push eax
push ecx
call sub_43f2e8
add esp 0x14
test eax eax
je r-xdata
mov al [ ecx - 0x1 ]
dec ecx
and al 0xc0
cmp al 0x80
je r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jne r-xdata
cmp dl 0x4f
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x10 ]
push esi
push eax
inc edi
push edi
push ecx
push edx
mov ecx [ ebp - 0x70 ]
or [ esi + 0x4c ] ecx
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
add eax ecx
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
or eax 0xffffffff
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x70 ]
or [ esi + 0x4c ] ecx
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
cmp dl 0x50
je r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
push esi
push ecx
inc edi
push edi
push edx
push eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov ebx [ ebp - 0x10 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
mov edx ebx
mov [ ebp - 0xc ] eax
mov ebx ecx
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp dl 0x51
je r-xdata
call sub_43f2e8
add esp 0x14
test eax eax
je r-xdata
mov ebx [ ebp - 0x10 ]
add cl 0x27
mov [ ebx ] cl
mov ecx [ ebp - 0x40 ]
mov edx ecx
sar edx 0x8
mov [ ebx + 0x1 ] dl
mov [ ebx + 0x2 ] cl
add ebx 0x3
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0x1
jne r-xdata
add al 0x1f
mov [ ebx ] al
inc ebx
jmp r-xdata
add al 0x4c
mov [ ebx ] al
mov eax [ ebp - 0x40 ]
mov edx eax
sar edx 0x8
mov [ ebx + 0x1 ] dl
mov [ ebx + 0x2 ] al
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0x1
jne r-xdata
add al 0x46
mov [ ebx ] al
jmp r-xdata
cmp dl 0x5e
je r-xdata
mov ecx [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] ecx
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ebx edx
cmp ecx 0x1
je r-xdata
mov ebx [ ebp - 0x10 ]
add al 0x21
mov [ ebx ] al
inc ebx
jmp r-xdata
add al 0x25
mov edx ecx
sar edx 0x8
mov [ ebx ] al
mov [ ebx + 0x1 ] dl
jmp r-xdata
add al 0x23
mov [ ebx ] al
inc ebx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax ecx
sar eax 0x8
mov [ ebx + 0x3 ] al
mov [ ebx + 0x4 ] cl
add ebx 0x5
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x30 ] ecx
add al 0x48
mov [ ebx ] al
jmp r-xdata
add al 0x4a
mov [ ebx ] al
jmp r-xdata
inc ebx
mov edx [ ebp - 0x10 ]
mov eax ebx
sub eax edx
cmp [ ebp - 0x49 ] 0x60
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] 0x0
jne r-xdata
cmp dl 0x5f
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov cl [ ebp - 0x8 ]
mov [ ebx ] cl
mov ecx [ ebp - 0x14 ]
inc ebx
test ecx ecx
js r-xdata
cmp [ ebp - 0x8 ] 0x80
jl r-xdata
mov al [ ebp - 0x18 ]
add al 0x25
mov [ edx ] al
mov eax [ ebp - 0x30 ]
lea ecx [ eax - 0x1 ]
lea ebx [ edx + 0x1 ]
sar ecx 0x8
dec al
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
add ebx 0x2
jmp r-xdata
mov [ ebx + 0x2 ] cl
add ebx 0x3
mov dl [ ebp - 0x8 ]
mov [ ebx ] dl
cmp [ ebp - 0x8 ] 0x80
jl r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov al [ ecx ]
cmp al 0x41
jne r-xdata
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
cmp [ edx + 0x3 ] 0x68
je r-xdata
cmp dl 0x5d
je r-xdata
mov cl [ ebp - 0x8 ]
mov [ ebx ] cl
inc ebx
cmp [ ebp - 0x8 ] 0x80
jl r-xdata
add al 0x1f
mov [ ebx ] al
inc ebx
jmp r-xdata
mov dl [ ebp - 0xc ]
mov [ ebx ] cl
mov [ ebx + 0x1 ] dl
add ebx 0x2
mov edi [ ebp - 0x8 ]
and edi 0x7
push edi
lea eax [ ebp - 0xc0 ]
push eax
push ebx
call sub_410e60
mov eax [ ebp - 0x18 ]
add ebx edi
add al 0x1f
add esp 0xc
mov [ ebx ] al
inc ebx
jmp r-xdata
mov edi [ ebp - 0x8 ]
and edi 0x7
push edi
lea ecx [ ebp - 0xc0 ]
push ecx
push ebx
call sub_410e60
add esp 0xc
add ebx edi
jmp r-xdata
cmp al 0x27
je r-xdata
mov al [ ecx + 0x3 ]
cmp al 0x10
je r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x34 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x37
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp dl 0x60
je r-xdata
sub ecx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] ecx
cmp ecx 0x1
jne r-xdata
movzx edx [ ebp - 0x14 ]
mov [ ebx ] dl
movzx edx [ ebp - 0xc ]
mov [ ebx + 0x1 ] dl
add ebx 0x2
mov edi [ ebp - 0x8 ]
and edi 0x7
push edi
lea edx [ ebp - 0xc0 ]
push edx
push ebx
call sub_410e60
mov eax [ ebp - 0x18 ]
add esp 0xc
add ebx edi
jmp r-xdata
movzx eax al
movzx edx [ eax + r--data ]
add ecx edx
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x3c ] ecx
je r-xdata
cmp al 0x34
jne r-xdata
mov eax 0x2
lea ecx [ ecx + eax + 0x4 ]
jmp r-xdata
cmp al 0xf
je r-xdata
cmp eax 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x1
mov [ ebx ] al
jg r-xdata
movzx edx [ eax + 0x1 ]
movzx eax [ eax + 0x2 ]
shl edx 0x8
or edx eax
mov eax [ ebp - 0x34 ]
add eax edx
cmp [ eax ] 0x55
mov [ ebp - 0x34 ] eax
jne r-xdata
mov edx ebx
sub edx eax
mov [ ebp - 0x14 ] edx
cmp dl 0x73
je r-xdata
add al 0x25
mov [ ebx ] al
mov eax ecx
sar eax 0x8
mov [ ebx + 0x1 ] al
add al 0x23
mov [ ebx ] al
inc ebx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x30 ]
jl r-xdata
mov eax ebx
sub eax ecx
mov [ ebp - 0x34 ] eax
test eax eax
jle r-xdata
mov al [ ecx - 0x1 ]
cmp al 0xc0
jb r-xdata
mov [ ebp - 0x3c ] ecx
xor eax eax
lea ecx [ ecx + eax + 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
test edx edx
jle r-xdata
cmp [ ebp + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
push edx
push esi
push eax
push 0x4
push ecx
call sub_43feb0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push edx
push eax
add eax 0x4
push eax
call sub_4165d0
mov cl [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
add cl 0x69
mov [ eax ] cl
mov [ eax + 0x1 ] 0x5e
add eax 0x2
mov [ eax ] 0x0
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x1c ] eax
add eax 0x2
add esp 0x20
add ebx 0x4
dec [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
push ecx
push esi
push edx
push 0x1
push eax
call sub_43feb0
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push ecx
lea edi [ eax + 0x1 ]
push eax
push edi
call sub_4165d0
add esp 0x20
inc ebx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0xb
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ ecx ]
add eax 0xffffffe1
cmp eax 0x20
ja r-xdata
movzx eax al
and eax 0x3f
movzx edx [ eax + r--data ]
add ecx edx
js r-xdata
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x64 ]
dec eax
mov [ ebp - 0x50 ] eax
imul eax edx
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
imul edx
test edx edx
jg r-xdata
test edx edx
mov al [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
add al 0x69
dec [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
mov [ ecx ] al
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx ] 0x76
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
push ecx
push esi
push edx
mov [ ebx ] 0x0
mov eax [ ebp - 0x3c ]
push 0x3
push eax
call sub_43feb0
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x3c ]
push ecx
push eax
add eax 0x3
push eax
call sub_4165d0
mov edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x34 ]
add ecx 0x3
mov [ edx ] 0x5d
mov [ ebx + 0x3 ] 0x55
mov eax ecx
sar eax 0x8
mov [ ebx + 0x4 ] al
mov [ ebx + 0x5 ] cl
mov edx [ ebp - 0x3c ]
mov [ edx + 0x1 ] al
mov eax [ ebp - 0x3c ]
add esp 0x20
add ebx 0x6
mov [ eax + 0x2 ] cl
movzx eax [ eax + lookup_table_45026f ]
jmp [ eax * 4 + jump_table_45023b ]
mov edi ebx
sub edi [ ebp - 0x14 ]
movzx eax [ edi + 0x1 ]
movzx ecx [ edi + 0x2 ]
shl eax 0x8
or eax ecx
mov ecx edi
sub ecx eax
mov al [ ebp - 0x18 ]
add al 0x56
cmp [ ebp + 0x28 ] 0x0
mov [ ebp - 0x50 ] ecx
mov [ edi ] al
jne r-xdata
cmp [ ebp + 0x28 ] 0x0
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jle r-xdata
cmp [ ebp - 0x44 ] 0x0
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x14
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jl r-xdata
mov edi [ ebp - 0x4 ]
mov [ ecx ] 0x28
jmp r-xdata
mov [ ecx ] 0x29
jmp r-xdata
mov [ ecx ] 0x2a
jmp r-xdata
mov [ ecx ] 0x2b
jmp r-xdata
mov [ ecx ] 0x42
jmp r-xdata
mov [ ecx ] 0x43
jmp r-xdata
mov [ ecx ] 0x44
jmp r-xdata
mov [ ecx ] 0x45
jmp r-xdata
mov [ ecx ] 0x35
jmp r-xdata
mov [ ecx ] 0x36
jmp r-xdata
mov [ ecx ] 0x37
jmp r-xdata
mov [ ecx ] 0x38
jmp r-xdata
cmp [ ecx ] 0x5d
je r-xdata
dec edx
mov [ ebp - 0x14 ] edx
js r-xdata
test edx edx
jle r-xdata
mov ecx [ ebp - 0x40 ]
mov edi [ ebp - 0x58 ]
dec ecx
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] eax
mov edx [ ebp + 0x28 ]
mov eax [ edx ]
mov edx 0x7fffffeb
sub edx eax
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0x34 ]
cmp [ ebp - 0x50 ] edx
jl r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov [ ebp - 0x28 ] ecx
lea esp [ esp ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov al [ ebp - 0x18 ]
add al 0x69
mov [ ebp - 0x49 ] al
mov edi edi
mov eax [ ebp - 0x64 ]
add eax 0x7
mov [ ebp - 0x50 ] eax
imul eax edx
sub eax 0x6
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
imul edx
test edx edx
jg r-xdata
mov edi [ ebp - 0x28 ]
add ebx eax
dec [ ebp - 0x34 ]
mov [ ebp - 0x58 ] edi
jne r-xdata
movzx edx [ edi ]
movzx ecx [ edi + 0x1 ]
shl edx 0x8
or edx ecx
mov ecx [ esi + 0x24 ]
add edx eax
sar edx 0x8
mov [ ecx ] dl
mov dl [ edi + 0x1 ]
mov ecx [ esi + 0x24 ]
add dl al
mov [ ecx + 0x1 ] dl
add [ esi + 0x24 ] 0x2
add edi 0x2
cmp edi [ ebp - 0x28 ]
jb r-xdata
mov eax [ ebp + 0x28 ]
mov eax [ eax ]
add eax edx
mov edx [ ebp + 0x28 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
add [ eax ] 0x3
jmp r-xdata
mov eax [ ebp - 0x28 ]
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
mov [ ebp - 0x28 ] eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push edx
push eax
push ebx
call sub_410e60
mov ecx [ ebp - 0x58 ]
add esp 0xc
cmp ecx edi
jae r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebx ] 0x5e
inc ebx
test ecx ecx
jne r-xdata
jl r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ esi + 0x24 ]
push eax
push ecx
push ebx
mov [ ebp - 0x28 ] edx
call sub_410e60
mov eax [ ebp - 0xc ]
add esp 0xc
cmp edi [ ebp - 0x28 ]
jae r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
push esi
push edx
push edi
push eax
call sub_43ff53
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x1c ]
mov edi ebx
inc eax
sub edi eax
movzx ecx [ edi + 0x1 ]
movzx edx [ edi + 0x2 ]
shl ecx 0x8
or ecx edx
jne r-xdata
add ebx [ ebp - 0xc ]
dec [ ebp - 0x14 ]
mov [ ebp - 0x58 ] edi
jns r-xdata
lea ecx [ ecx ]
mov eax ebx
sub eax ecx
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ edx ]
mov edx 0x7fffffeb
sub edx eax
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0x34 ]
cmp [ ebp - 0x50 ] edx
jl r-xdata
cmp eax 0x7fffffff
ja r-xdata
sub [ ebp - 0x1c ] ecx
xor edx edx
xor edx edx
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edi [ esi + 0x24 ]
mov al [ ebp - 0x49 ]
mov [ ebx ] al
inc ebx
cmp [ ebp - 0x14 ] 0x0
mov [ ebp - 0x34 ] edi
je r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
movzx edx [ ecx ]
movzx eax [ ecx + 0x1 ]
mov edi [ ebp - 0x14 ]
neg edi
sbb edi edi
shl edx 0x8
or edx eax
add edx [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
and edi 0x3
inc edi
add edx edi
sar edx 0x8
mov [ eax ] dl
mov eax [ ebp - 0x14 ]
mov dl [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax 0x3
inc eax
add dl al
add dl [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
mov [ eax + 0x1 ] dl
add [ esi + 0x24 ] 0x2
add ecx 0x2
cmp ecx [ ebp - 0x34 ]
jb r-xdata
mov edi [ ebp - 0x34 ]
mov ecx eax
sar ecx 0x8
mov [ ebp - 0x1c ] ebx
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
add ebx 0x2
mov eax [ ebp + 0x28 ]
mov eax [ eax ]
add eax edx
mov edx [ ebp + 0x28 ]
mov [ edx ] eax
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0x55
mov ecx eax
sar ecx 0x8
mov [ ebx + 0x1 ] cl
mov [ ebx + 0x2 ] al
add ebx 0x3
mov [ edi + 0x1 ] cl
mov [ edi + 0x2 ] al
cmp [ ebp - 0x1c ] edx
jne r-xdata
sub_44d357
test [ ebp - 0x2c ] 0x2
je r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebx ] 0x1a
mov edi [ ebp - 0x4 ]
inc ebx
inc edi
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
cmp [ ebp - 0x38 ] 0xfffffffe
jne r-xdata
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x28 ] edx
je r-xdata
mov [ ebp - 0x38 ] 0xffffffff
mov eax [ esi + 0x10 ]
add eax 0xf9c
cmp [ esi + 0x24 ] eax
ja r-xdata
mov ecx [ esi + 0x10 ]
add ecx 0xf9c
cmp ebx ecx
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x34
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x54 ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x34
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x74 ]
cmp ebx ecx
jae r-xdata
mov edx [ ebp - 0x8 ]
cmp edx 0x2a
je r-xdata
cmp [ ebp - 0x8 ] edx
je r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ edx ]
mov edx ebx
sub edx ecx
mov ecx 0x7fffffeb
sub ecx eax
cmp ecx edx
jl r-xdata
mov ebx ecx
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
cmp edx 0x2b
je r-xdata
cmp [ ebp - 0x8 ] 0x5c
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x14
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub eax [ ebp - 0x74 ]
mov edx [ ebp + 0x28 ]
add eax ebx
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
xor edx edx
cmp eax edx
je r-xdata
mov eax [ ebp - 0x2c ]
and eax 0x8
mov [ ebp - 0x28 ] eax
je r-xdata
cmp edx 0x3f
je r-xdata
cmp ecx edx
je r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
mov ebx [ ebp - 0xa4 ]
cmp eax [ ebp - 0xa4 ]
jbe r-xdata
test [ ebp - 0x2c ] 0x4000
je r-xdata
mov eax [ esi + 0xc ]
test [ edx + eax ] 0x1
jne r-xdata
cmp edx 0x7b
jne r-xdata
test [ ebp - 0x2c ] 0x4000
mov edx [ ebp - 0x8 ]
je r-xdata
cmp [ ebp + 0x28 ] edx
jne r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x54 ] edx
inc edi
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x74 ] ebx
jmp r-xdata
mov edi [ ebp - 0xa4 ]
mov ecx ebx
sub ecx eax
push ecx
push eax
push edi
call sub_4165d0
mov ecx [ ebp - 0x5c ]
mov edx edi
sub edx [ ebp - 0x10 ]
add esp 0xc
add ebx edx
mov [ ebp - 0x10 ] edi
mov edi [ ebp - 0x4 ]
xor edx edx
mov [ ebp - 0x74 ] ebx
jmp r-xdata
cmp edx 0x7c
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
cmp edx 0x23
jne r-xdata
mov ecx [ ebp - 0x5c ]
xor eax eax
mov [ ebp - 0x14 ] eax
cmp ecx eax
je r-xdata
lea edx [ edi + 0x1 ]
push edx
call sub_42f7d2
mov edx [ ebp - 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
mov ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xac ] dl
je r-xdata
mov [ ebx ] 0x53
mov [ ebx + 0x1 ] 0xff
mov eax edi
mov ecx eax
sub ecx [ esi + 0x18 ]
mov [ ebp - 0x5c ] ebx
sar ecx 0x8
mov [ ebx + 0x2 ] cl
sub al [ esi + 0x18 ]
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x3 ] al
mov edi [ ebp - 0x4 ]
add ebx 0x6
mov [ ebp - 0x5c ] edx
movzx edx [ ecx + 0x2 ]
movzx eax [ ecx + 0x3 ]
shl edx 0x8
or edx eax
mov eax edi
sub eax edx
sub eax [ esi + 0x18 ]
mov edx eax
sar edx 0x8
mov [ ecx + 0x4 ] dl
mov [ ecx + 0x5 ] al
mov edi [ ebp - 0x4 ]
xor edx edx
movzx eax [ edx + lookup_table_45017b ]
jmp [ eax * 4 + jump_table_450147 ]
mov [ ebx ] 0x53
mov [ ebx + 0x1 ] 0xff
mov eax edi
mov ecx eax
sub ecx [ esi + 0x18 ]
mov [ ebp - 0x5c ] ebx
sar ecx 0x8
mov [ ebx + 0x2 ] cl
sub al [ esi + 0x18 ]
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x3 ] al
mov edi [ ebp - 0x4 ]
add ebx 0x6
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
test al al
je r-xdata
mov eax [ ebp - 0xb0 ]
mov edx eax
dec eax
mov [ ebp - 0xb0 ] eax
test edx edx
jg r-xdata
movsx eax [ ebp - 0x2c ]
and eax 0x1
or al 0x1c
mov [ ebp - 0x10 ] ebx
mov [ ebx ] al
inc ebx
test ecx ecx
jle r-xdata
cmp edx 0xc0
jl r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebx ] 0x1b
mov edi [ ebp - 0x4 ]
inc ebx
inc edi
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
test [ esi + 0x44 ] 0x2000000
je r-xdata
mov al [ edi + 0x1 ]
mov [ ebp - 0x10 ] ebx
cmp al 0x3a
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x30 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
mov edx [ ebp - 0x2c ]
mov ecx [ esi + 0x24 ]
xor eax eax
inc edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] edi
mov al [ edi ]
mov [ ebp - 0x50 ] edx
mov [ ebp - 0xc ] 0x5f
mov [ ebp - 0x58 ] ecx
cmp al 0x2a
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ esi + 0x34 ]
mov eax [ ebp + 0x14 ]
push 0x0
push ecx
push edx
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x98 ] edi
call sub_42f85b
mov edx [ ebp + 0x14 ]
add esp 0x14
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x1c ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x44 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x28 ]
mov [ edx ] eax
mov edx [ ebp + 0x10 ]
mov [ edx ] edi
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov edi edi
mov edx [ ebp - 0x8 ]
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
mov dl [ ebp - 0xac ]
cmp dl 0xd
je r-xdata
mov edi [ ebp - 0xc ]
push edi
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_410e60
add esp 0xc
add ebx edi
mov ecx edi
mov dl [ edi + 0x1 ]
inc edi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
movsx eax [ ebp - 0x2c ]
and eax 0x4
or eax 0x30
shr eax 0x2
mov [ ebx ] al
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x5c ]
inc ebx
inc edi
xor edx edx
jmp r-xdata
or eax 0xffffffff
mov [ ebp - 0x38 ] eax
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x40
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x98 ]
push edx
push edi
call sub_42eca2
add esp 0x8
test eax eax
jne r-xdata
cmp al 0x2e
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
inc edi
push edi
call sub_42f739
mov edi eax
mov eax [ ebp + 0x14 ]
add esp 0x10
cmp [ eax ] 0x0
mov [ ebp - 0x4 ] edi
jne r-xdata
mov [ ebp - 0x40 ] 0x0
mov edx [ ebp - 0x10 ]
xor ecx ecx
cmp edx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x9
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x40 ] ecx
jne r-xdata
cmp al 0x3f
jne r-xdata
mov dl [ edi + 0x1 ]
lea ecx [ edi + 0x1 ]
movzx edx dl
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0xc ]
test [ edx + ecx ] 0x2
jne r-xdata
mov edi [ ebp - 0x4 ]
test eax eax
jns r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx ebx
sub edx [ ebp - 0x74 ]
mov esi 0x7fffffeb
sub esi eax
cmp esi edx
jge r-xdata
mov ecx [ esi + 0x5c ]
mov edx [ esi + 0x1c ]
sub edx ecx
cmp edi edx
ja r-xdata
mov eax [ esi + 0x1c ]
cmp edi eax
jae r-xdata
mov [ ebp - 0x5c ] 0x0
movzx edx [ ecx + 0x2 ]
movzx eax [ ecx + 0x3 ]
shl edx 0x8
or edx eax
mov eax edi
sub eax edx
sub eax [ esi + 0x18 ]
mov edx eax
sar edx 0x8
mov [ ecx + 0x4 ] dl
mov [ ecx + 0x5 ] al
mov edi [ ebp - 0x4 ]
or [ esi + 0x48 ] 0x20
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x4 ] edi
mov al [ edi ]
mov dl [ edi + 0x1 ]
inc edi
mov [ ebp + ecx - 0xac ] al
and dl 0xc0
inc ecx
cmp dl 0x80
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edi + 0x1 ] 0x3a
mov [ ecx ] edi
setne al
pop edi
pop esi
pop ebx
dec eax
and eax 0xffffffee
add eax 0x1f
mov [ edx ] eax
xor eax eax
mov esp ebp
pop ebp
retn
xor eax eax
cmp al 0x3d
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] ecx
neg eax
sbb eax eax
and eax 0x200
mov [ ebp - 0x20 ] ecx
mov ecx edx
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x3c ] ecx
mov al [ edi + 0x1 ]
cmp al 0x2b
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x44 ] eax
test [ ebp - 0x2c ] 0x1000
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
movzx ecx al
add ecx 0xffffffdf
cmp ecx 0x5b
ja r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
cmp [ edx ] 0x3a
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx eax
neg ecx
cmp ecx 0x1a
jne r-xdata
sub eax [ ebp - 0x74 ]
add eax ebx
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x14
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
inc edi
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
cmp al [ esi + 0x60 ]
jne r-xdata
mov edx [ ebp - 0x24 ]
push edx
lea edx [ esi + 0x5c ]
push edx
push eax
push ecx
push edi
call sub_42e9b5
add esp 0x14
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x60 ] edx
cmp ecx 0x1
je r-xdata
mov edi [ ebp - 0x44 ]
or eax 0xffffffff
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x60 ] edi
cmp ecx 0x1
je r-xdata
mov eax [ ebp - 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
mov [ ebp - 0xc ] ecx
test eax eax
jne r-xdata
inc edi
cmp [ edi ] 0x45
je r-xdata
cmp al 0x3f
jne r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
inc edi
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] edi
jmp r-xdata
inc [ esi + 0x34 ]
mov edx [ esi + 0x34 ]
mov ecx [ ebp - 0xc ]
sar edx 0x8
mov [ ebx + 0x3 ] dl
mov al [ esi + 0x34 ]
mov [ ebx + 0x4 ] al
mov [ ebp - 0x14 ] 0x2
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov [ ebp - 0xc ] 0x5e
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x28 ] edx
lea ecx [ ebp - 0x28 ]
cmp al 0x29
je r-xdata
movzx ecx [ ecx + lookup_table_4502cf ]
jmp [ ecx * 4 + jump_table_450293 ]
inc edi
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test [ eax + ecx ] 0x2
jne r-xdata
mov eax edi
sub eax [ ebp - 0x1c ]
cmp [ edi ] 0x3a
mov [ ebp - 0x20 ] eax
jne r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp - 0xc ]
mov [ ebp - 0xac ] al
jmp r-xdata
cmp eax 0x7f
jle r-xdata
cmp ecx 0x19
je r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov cl [ edi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp ecx 0x1
je r-xdata
mov eax [ esi + 0x5c ]
lea edi [ edi + eax - 0x1 ]
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x0
jne r-xdata
movzx eax [ ebx - 0x1 ]
or eax [ esi + 0x4c ]
or eax [ ebp - 0x68 ]
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x68 ] 0x0
jne r-xdata
movzx eax dl
or eax [ ebp - 0x68 ]
mov [ ebp - 0x38 ] eax
cmp ecx 0x1
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp ecx 0x5d
jne r-xdata
cmp ecx 0x5e
jne r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ecx 0x5c
jne r-xdata
push 0x3
push r--data
push edi
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov eax [ ebp - 0xb8 ]
inc edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov dl [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x49 ] dl
cmp dl 0x1c
je r-xdata
mov [ ebx ] cl
mov eax [ esi + 0x4c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x28 ]
neg eax
sbb eax eax
lea edx [ ebp - 0x64 ]
and eax edx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x64 ] 0x0
cmp ecx 0x5a
je r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
or edx ecx
not eax
and eax edx
cmp [ edi ] 0x29
mov [ ebp - 0x50 ] eax
jne r-xdata
cmp al 0x3a
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x1
inc edi
mov [ ebp - 0xc ] 0x5e
mov [ ebp - 0x4 ] edi
cmp [ edi + 0x1 ] 0x3f
mov [ ebp - 0xc ] 0x60
jne r-xdata
mov ecx 0x58
inc edi
jmp r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x29
jne r-xdata
mov cl [ edi + 0x1 ]
cmp cl 0x21
je r-xdata
cmp al 0x3c
jne r-xdata
inc edi
mov [ ebp - 0xc ] 0x5d
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov [ ebx ] 0x53
mov edi [ ebp - 0x4 ]
inc edi
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
xor eax eax
test [ ecx + r--data ] 0x4
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0xb0 ] 0x1
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
cmp al 0x3d
je r-xdata
mov edx 0x29
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x18 ] 0x29
jmp r-xdata
cmp [ edi ] 0x29
jne r-xdata
inc edi
mov [ ebp - 0x18 ] edi
lea ecx [ ebp - 0xac ]
push ecx
push eax
call sub_42e796
add esp 0x8
mov [ ebp - 0xc ] eax
mov ecx eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov edx [ ebp - 0x38 ]
cmp edx 0xfffffffe
jne r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x54 ] 0x1
xor edx edx
jmp r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
jmp r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov dl [ edi ]
and dl 0xc0
cmp dl 0x80
je r-xdata
mov al [ edi + 0x1 ]
cmp al [ esi + 0x61 ]
je r-xdata
movzx eax [ ebx - 0x1 ]
or eax [ esi + 0x4c ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x44 ] eax
xor edx edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x44 ] eax
xor edx edx
jmp r-xdata
xor edi edi
push 0x20
lea eax [ ebp - 0x94 ]
push edi
push eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x14 ] 0xffffffff
call sub_412f40
add esp 0xc
cmp [ ebp - 0x8 ] edi
lea esi [ ebx + 0x4 ]
mov [ ebp - 0x1c ] edi
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x50 ] esi
je r-xdata
test [ esi + 0x44 ] 0x2000000
je r-xdata
lea eax [ ecx - 0x5d ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x48 ]
add edi 0x3
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp dl 0x1d
je r-xdata
mov ecx 0x1
cmp ecx 0x5b
je r-xdata
mov edx [ esi + 0x14 ]
add edx 0x3
cmp ebx edx
jne r-xdata
mov edx [ ebp - 0x28 ]
movzx eax al
inc edi
sub eax 0x2d
mov [ ebp - 0x4 ] edi
cmp eax 0x4b
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x12
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov [ ebx + 0x3 ] 0x64
mov edi [ ebp - 0x4 ]
mov al [ edi + 0x1 ]
or edx 0xffffffff
mov [ ebp - 0x14 ] 0x3
mov [ ebp - 0x10 ] edx
cmp al 0x52
jne r-xdata
mov al [ edi + 0x2 ]
cmp al 0x3d
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx 0x59
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebx ] 0x73
mov edi [ ebp - 0x4 ]
inc ebx
inc edi
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
mov ecx 0x5b
cmp cl 0x3d
je r-xdata
mov [ ebp - 0x18 ] 0x27
mov [ ebp - 0x18 ] 0x3e
jmp r-xdata
cmp [ edi ] 0x29
jne r-xdata
inc edi
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
test [ ecx + r--data ] 0x4
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx 0x29
jmp r-xdata
cmp al 0x3e
je r-xdata
mov ecx [ esi + 0xc ]
inc edi
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test [ eax + ecx ] 0x10
mov [ ebp - 0x20 ] edi
je r-xdata
mov al [ edi ]
movzx edx al
cmp edx 0x2b
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x3c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0x0
mov edi r--data
inc edi
jmp r-xdata
cmp al 0x5f
jne r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x48 ] edx
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x60 ] edx
cmp ecx 0x1b
jne r-xdata
cmp ecx 0x5
jle r-xdata
mov ecx [ ebp - 0x5c ]
add edi 0x2
inc edi
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x6
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x8 ]
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff9a
add eax 0x73
mov [ ebx ] al
mov eax [ ebp - 0x38 ]
inc ebx
cmp eax 0xfffffffe
jne r-xdata
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x40 ] 0x1
movzx ecx [ ebx - 0x1 ]
mov [ ebp - 0x8 ] ecx
jle r-xdata
test [ ebx - 0x1 ] 0x80
lea ecx [ ebx - 0x1 ]
je r-xdata
cmp dl 0x1e
jne r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx 0x60
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx eax
xor edx ecx
test dl 0x7
je r-xdata
mov edx [ ebp + 0x28 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
dec edi
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0xc
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ eax + lookup_table_45034f ]
jmp [ edx * 4 + jump_table_45032b ]
cmp [ edi ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
test al al
jne r-xdata
cmp al 0x3c
jne r-xdata
cmp [ edi + 0x2 ] 0x26
lea ecx [ edi + 0x2 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp al 0x21
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] 0x0
mov ecx 0x5a
jmp r-xdata
mov edx [ esi + 0xc ]
movzx ecx cl
test [ ecx + edx ] 0x10
je r-xdata
mov eax edi
sub eax ecx
xor ecx ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp + 0x28 ] ecx
je r-xdata
mov eax edx
lea esp [ esp ]
mov edx [ esi + 0xc ]
inc edi
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test [ eax + edx ] 0x10
mov ecx edi
mov [ ebp - 0x20 ] ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x27
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xff
jg r-xdata
mov [ ebp - 0x14 ] 0x1
mov edx 0x29
jmp r-xdata
cmp al 0x3c
je r-xdata
mov eax edi
sub eax [ ebp - 0x20 ]
xor ecx ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp + 0x28 ] ecx
je r-xdata
mov eax ecx
cmp edx 0x2d
jne r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
test [ eax + r--data ] 0x4
jne r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x28 ]
inc [ ebp - 0xc ]
add edi 0xc
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x28 ] edx
cmp edi r--data
jge r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x1c ]
push eax
push ecx
push edx
call sub_416931
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov al [ edi ]
movzx edx al
test [ edx + ecx ] 0x6
jne r-xdata
mov eax edi
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
cmp ecx 0x1c
jne r-xdata
mov eax [ esi + 0x24 ]
inc edi
xor edx edx
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x3c
mov cl [ edi + 0x1 ]
setne dl
mov [ ebp - 0x58 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x34 ] eax
lea eax [ edi + 0x1 ]
dec edx
and edx 0x17
add edx 0x27
mov [ ebp - 0x18 ] edx
cmp cl 0x2b
je r-xdata
cmp ecx 0x17
jge r-xdata
mov ecx [ ebp + 0x28 ]
test ecx ecx
je r-xdata
cmp eax 0x7f
jle r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x48 ] eax
xor edx edx
jmp r-xdata
or eax 0xffffffff
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c ]
or eax ecx
or eax [ ebp - 0x68 ]
mov [ ebp - 0x44 ] eax
mov dl [ ecx ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp dl 0x17
jae r-xdata
cmp [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx + 0x1 ]
mov [ ebp - 0x28 ] 0xd
mov [ ebp - 0x8 ] edx
jne r-xdata
mov eax [ ebp - 0xa0 ]
xor edx edx
cmp [ ebp + 0x28 ] edx
jne r-xdata
push eax
mov eax [ ebp + 0x20 ]
push esi
push eax
lea edx [ ebp - 0x6c ]
push edx
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xa0 ]
push eax
mov eax [ ebp - 0x34 ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
and ecx 0x7
push ecx
push edx
call sub_45493c
add esp 0x34
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x9
and ecx 0x1
mov [ ebp - 0xb4 ] ecx
xor ecx 0x1
mov [ ebp - 0xb8 ] ecx
movsx ecx al
and ecx 0x1
shl ecx 0x8
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ edx ] eax
inc edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
mov cl al
mov [ ebx ] 0x19
and cl 0x7
mov [ ebx + 0x1 ] cl
mov edi [ ebp - 0x4 ]
add ebx 0x2
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x5c ]
mov [ esi + 0x44 ] eax
mov [ edx ] eax
inc edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
cmp [ edx ] 0x6
jne r-xdata
lea ecx [ ebp - 0xc ]
jmp r-xdata
or [ ecx ] 0x80000
or [ esi + 0x48 ] 0x10
jmp r-xdata
or [ ecx ] 0x1
jmp r-xdata
or [ ecx ] 0x2
jmp r-xdata
or [ ecx ] 0x4
jmp r-xdata
or [ ecx ] 0x8
jmp r-xdata
or [ ecx ] 0x200
jmp r-xdata
or [ ecx ] 0x40
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
cmp al 0x29
je r-xdata
cmp al 0x27
jne r-xdata
inc edi
mov [ ebp - 0x18 ] 0x3e
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] ecx
mov [ ebx + 0x3 ] 0x66
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
cmp al 0x3c
je r-xdata
add edi 0x2
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
inc edi
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x18
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x28 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
cmp [ esi + 0x2c ] ecx
jle r-xdata
movzx ecx [ edi ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx edx [ edi ]
test [ edx + eax ] 0x10
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x26
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx + 0x1 ] al
mov ecx [ ebp - 0x4 ]
sub ecx [ esi + 0x18 ]
add ebx 0x6
inc ecx
sar ecx 0x8
mov [ ebx - 0x4 ] cl
mov dl [ ebp - 0x4 ]
sub dl [ esi + 0x18 ]
mov ecx [ ebp - 0x5c ]
inc dl
mov [ ebx - 0x3 ] dl
mov [ ebx - 0x2 ] 0x0
mov edi [ ebp - 0x4 ]
inc edi
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x29
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x28 ]
mov [ ebp - 0x10 ] ecx
cmp [ esi + 0x2c ] ecx
jle r-xdata
cmp eax ecx
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
test [ ecx + eax ] 0x10
jne r-xdata
movzx ecx [ edi ]
xor eax eax
test [ ecx + r--data ] 0x4
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ edi + 0x1 ]
test [ ecx + r--data ] 0x4
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x3f
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x3c
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov edi [ ebp - 0xc ]
lea edi [ edi + edi * 2 ]
add edi edi
add edi edi
cmp [ edi + r--data ] 0x74
jne r-xdata
cmp ecx 0x23
jl r-xdata
mov dl [ edi + 0x1 ]
cmp dl 0x3c
je r-xdata
lea ecx [ edi + 0x2 ]
mov [ ebp - 0xc ] ecx
movzx ecx [ ecx ]
test [ ecx + r--data ] 0x4
je r-xdata
cmp cl 0x2d
je r-xdata
or edx 0xffffffff
mov [ ebp - 0x38 ] edx
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov edx esi
mov esi [ ebp - 0x50 ]
sub edx esi
add [ ecx ] edx
movzx eax [ edi ]
mov [ ebp - 0x8 ] eax
cmp eax 0xc0
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ecx ]
cmp al 0x10
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax ebx
sub eax ecx
push eax
push ecx
lea ecx [ ebp - 0xc0 ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_410e60
mov edi [ ebp - 0x4 ]
add esp 0xc
or [ ebp - 0x8 ] 0x80
jmp r-xdata
lea esp [ esp ]
cmp dl 0x4e
je r-xdata
cmp [ ebp - 0x20 ] 0x0
movzx eax dl
mov [ ebp - 0x28 ] 0x1a
mov [ ebp - 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0xe
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x28 ]
test edx edx
je r-xdata
mov eax ebx
mov [ ebp - 0x14 ] edx
nop
mov al [ edi ]
cmp al 0x29
jne r-xdata
mov [ ebp - 0x18 ] 0x0
cmp al 0x2d
je r-xdata
inc edi
mov [ ebp - 0x18 ] 0x27
mov [ ebp - 0x4 ] edi
jmp r-xdata
movzx eax [ edi + 0x1 ]
mov edx [ esi + 0xc ]
inc edi
test [ eax + edx ] 0x10
je r-xdata
mov eax [ esi + 0x28 ]
xor ecx ecx
mov [ ebp - 0x10 ] ecx
cmp [ esi + 0x2c ] ecx
jle r-xdata
mov edi edx
lea ebx [ ebx ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x2a
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x2c ] 0x2710
jge r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ esi + 0x2c ]
jge r-xdata
lea ebx [ ebx ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x3e
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ edi ]
cmp ecx edx
jne r-xdata
movzx ecx [ edi ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
lea ebx [ ebx ]
inc edi
mov [ ebp - 0x4 ] edi
cmp eax [ edi ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x50 ] 0x1
test eax eax
je r-xdata
cmp ecx 0x16
je r-xdata
mov ecx 0xffffffdd
sub ecx eax
mov [ ebp - 0x8 ] ecx
inc edi
mov [ ebp - 0x4 ] edi
mov al [ edi ]
mov [ ebp - 0x14 ] 0x0
cmp al 0x3c
jne r-xdata
cmp dl 0x27
je r-xdata
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
movzx ecx [ ecx ]
test [ ecx + r--data ] 0x4
jne r-xdata
mov ecx eax
mov [ ebp - 0xc ] ecx
mov cl [ ecx ]
mov [ ebp - 0x1c ] 0x1
test cl cl
je r-xdata
cmp eax 0x5b
jne r-xdata
cmp eax 0x5c
jne r-xdata
test al 0x20
jne r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax [ ecx + 0x2 ]
mov [ ebp - 0x14 ] edx
cmp al 0xf
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
push esi
push edx
inc edi
push edi
push eax
push ecx
call sub_43f2e8
add esp 0x14
test eax eax
je r-xdata
mov al [ ecx - 0x1 ]
dec ecx
and al 0xc0
cmp al 0x80
je r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jne r-xdata
cmp dl 0x4f
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x10 ]
push esi
push eax
inc edi
push edi
push ecx
push edx
mov ebx [ ebp - 0x3c ]
cmp ecx 0x68
je r-xdata
mov eax [ edx ]
mov edx [ ebp - 0x64 ]
mov ecx 0x7fffffeb
sub ecx eax
add edx 0xfffffffa
cmp ecx edx
jl r-xdata
movzx edx [ eax + 0x1 ]
movzx edi [ eax + 0x2 ]
inc [ ebp - 0x14 ]
shl edx 0x8
or edx edi
add eax edx
cmp [ eax ] 0x55
jne r-xdata
cmp [ ebx + 0x3 ] 0x68
jne r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx edx [ edi ]
mov [ ebp - 0x10 ] edx
cmp al 0x2b
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x1c
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
xor eax eax
test [ edx + ecx ] 0x10
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x20 ] edi
je r-xdata
mov edx [ esi + 0x34 ]
mov edi [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
inc edx
sar edx 0x8
mov [ edi ] dl
mov al [ esi + 0x34 ]
mov edx [ ebp - 0x20 ]
inc al
push ecx
mov [ edi + 0x1 ] al
push edx
lea eax [ edi + 0x2 ]
push eax
call sub_410e60
mov ecx [ ebp - 0x1c ]
mov [ edi + ecx + 0x2 ] 0x0
mov edi [ ebp - 0x4 ]
add esp 0xc
lea esp [ esp ]
js r-xdata
mov eax [ ebp - 0x1c ]
cmp [ edi + eax + 0x2 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x31
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax + 0x3 ]
cmp ecx [ esi + 0x30 ]
jle r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
xor eax eax
cmp [ ebp - 0x28 ] eax
push edx
setne al
push eax
mov eax [ ebp - 0x1c ]
push eax
push ecx
push esi
call sub_440293
add esp 0x14
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
movzx ecx [ edi ]
movzx eax [ edi + 0x1 ]
shl ecx 0x8
or eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add edi [ esi + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ esi + 0x2c ]
jl r-xdata
mov edx [ ebp - 0x1c ]
cmp [ edi + edx + 0x2 ] al
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x2a
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x20
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x1d
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x2d
jne r-xdata
inc edi
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
test [ ecx + r--data ] 0x4
jne r-xdata
mov [ ebp - 0x8 ] eax
cmp [ edi + r--data ] 0x0
jl r-xdata
cmp [ edi + r--data ] 0x0
jl r-xdata
mov [ ebx ] 0x75
mov cl [ eax + 0x5 ]
mov [ ebx + 0x1 ] cl
mov dl [ eax + 0x4 ]
mov [ ebx + 0x2 ] dl
mov eax [ eax ]
add ebx 0x3
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x2d
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xf
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
sar eax 0x8
mov [ ebx ] 0x51
mov [ ebx + 0x1 ] al
mov [ ebp - 0x10 ] ebx
mov [ ebx + 0x2 ] cl
add ebx 0x3
mov eax 0x1
cmp ecx 0x20
jge r-xdata
mov [ ebp - 0x38 ] 0xffffffff
xor edx edx
cmp al 0x27
setne dl
dec edx
and edx 0xffffffaa
add edx 0x7d
mov edx 0x3e
jmp r-xdata
cmp dl 0x7b
jne r-xdata
mov edi eax
mov [ ebp - 0x4 ] edi
mov edx [ ebp + 0x14 ]
mov ecx [ ebp - 0x5c ]
mov [ edx ] 0x39
inc edi
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx ]
cmp ecx edx
je r-xdata
movzx ecx cl
cmp ecx edx
je r-xdata
cmp eax 0x5c
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x3a
je r-xdata
xor ecx ecx
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
test al 0x10
jne r-xdata
movzx ecx [ edi + 0x1 ]
and eax 0x1f
and ecx 0x3f
shl eax 0x6
or eax ecx
inc edi
jmp r-xdata
mov ecx [ ebp - 0x70 ]
or [ esi + 0x4c ] ecx
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x10 ] 0x0
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
add eax ecx
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
or eax 0xffffffff
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x70 ]
or [ esi + 0x4c ] ecx
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
cmp dl 0x50
je r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
push esi
push ecx
inc edi
push edi
push edx
push eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x60 ] edx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x9c ] 0x0
cmp ecx 0x5d
jl r-xdata
mov ecx [ ebp - 0x64 ]
lea edx [ eax + ecx - 0x6 ]
mov eax [ ebp + 0x28 ]
mov ecx [ ebp - 0x5c ]
mov [ eax ] edx
mov [ ebx ] 0x5e
mov [ ebx + 0x2 ] 0x5503
mov [ ebx + 0x4 ] 0x300
mov edi [ ebp - 0x4 ]
add ebx 0x6
inc edi
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0x2
jg r-xdata
cmp [ ebp - 0x14 ] 0x1
jg r-xdata
mov ecx edi
sub ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x18 ]
test ecx ecx
jle r-xdata
test eax eax
js r-xdata
dec ecx
movzx ecx [ eax ]
movzx edx [ eax + 0x1 ]
shl ecx 0x8
or edx ecx
mov ecx [ esi + 0x34 ]
inc ecx
cmp edx ecx
je r-xdata
mov ecx [ esi + 0x2c ]
mov eax [ esi + 0x30 ]
sub ecx [ ebp - 0x10 ]
imul ecx eax
push ecx
push edi
add edi eax
push edi
call sub_4165d0
add esp 0xc
mov ecx 0x1
movzx eax [ edi ]
movzx edx [ edi + 0x1 ]
shl eax 0x8
or edx eax
mov eax [ esi + 0x34 ]
mov ecx 0x1
add eax ecx
cmp edx eax
je r-xdata
inc [ esi + 0x2c ]
inc edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x30 ] ecx
cmp eax 0x20
jle r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0xf
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
push edx
lea eax [ edi + 0x2 ]
push eax
push ecx
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x30
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x1c ]
mov ecx [ ebp - 0x24 ]
xor eax eax
cmp [ ebp - 0x28 ] eax
push ecx
setne al
mov [ ebp - 0x70 ] edx
mov edx [ ebp - 0x1c ]
mov [ esi + 0x1c ] edi
push eax
mov eax [ ebp - 0x20 ]
push edx
push eax
push esi
call sub_440293
mov ecx [ ebp - 0x70 ]
add esp 0x14
mov [ ebp - 0x8 ] eax
mov [ esi + 0x1c ] ecx
test eax eax
jns r-xdata
cmp edx 0x2b
jne r-xdata
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x3b
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov al [ edi + r--data ]
mov [ ebx ] al
inc ebx
cmp al 0x71
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x42
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov al [ edi + r--data ]
mov [ ebx ] al
inc ebx
cmp al 0x70
jne r-xdata
cmp ecx 0x10
je r-xdata
or [ esi + 0x40 ] eax
cmp ecx [ esi + 0x3c ]
jle r-xdata
shl eax cl
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp - 0x5c ]
mov [ edx ] 0x39
inc edi
xor edx edx
jmp r-xdata
mov edx [ esi + 0xc ]
mov cl [ ecx + edx ]
test cl 0x4
jne r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x34 ]
mov edi [ ebp + 0x14 ]
push 0x1
push eax
push edx
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_42f85b
add esp 0x14
cmp [ edi ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x98 ]
push eax
push edi
call sub_42eca2
add esp 0x8
test eax eax
je r-xdata
cmp al 0x2e
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] edi
cmp eax 0xd
je r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
mov [ ebp - 0x54 ] 0x0
inc edi
jmp r-xdata
movzx ecx [ edi + 0x1 ]
movzx edx [ edi + 0x2 ]
and ecx 0x3f
and edx 0x3f
test al 0x8
jne r-xdata
movzx edx [ edi + 0x1 ]
and eax 0xf
shl eax 0x6
and edx 0x3f
or edx eax
movzx eax [ edi + 0x2 ]
shl edx 0x6
and eax 0x3f
or eax edx
add edi 0x2
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov ebx [ ebp - 0x10 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
mov edx ebx
mov [ ebp - 0xc ] eax
mov ebx ecx
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp dl 0x51
je r-xdata
call sub_43f2e8
add esp 0x14
test eax eax
je r-xdata
cmp ecx 0x58
jne r-xdata
cmp edx 0xfffffffe
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x1b
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp - 0x4 ]
mov [ ecx ] 0x36
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x68
mov cl [ edi ]
inc edi
mov [ ebp - 0x4 ] edi
cmp cl 0x29
jne r-xdata
movzx edx [ edi ]
inc edi
mov [ ebp - 0x4 ] edi
cmp edx ecx
jne r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx ecx [ edi ]
test [ ecx + edx ] 0x10
jne r-xdata
test [ ecx + r--data ] 0x4
je r-xdata
cmp eax [ ebp - 0x14 ]
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x41
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
push eax
lea ecx [ edi + 0x2 ]
push ecx
push edx
call sub_4119e3
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x28 ] ecx
jmp r-xdata
test [ ebp - 0x2c ] 0x80000
je r-xdata
cmp [ ebp - 0x38 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0x28 ] 0x0
mov eax [ esi + 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x3a
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x34 ]
sub edx eax
lea eax [ edx + 0x1 ]
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov [ ebx ] al
mov eax [ ebp - 0x18 ]
push eax
inc ebx
push ebx
call sub_410e60
add ebx [ ebp - 0x14 ]
add esp 0xc
mov [ ebx ] 0x0
inc ebx
mov eax [ ebp + 0x20 ]
mov ecx ebx
sub ecx [ eax + 0x4 ]
mov dl bl
dec ecx
sar ecx 0x8
mov [ ebx ] cl
sub dl [ eax + 0x4 ]
dec dl
mov [ ebx + 0x1 ] dl
add ebx 0x2
cmp [ ebp - 0xc ] 0x9
jl r-xdata
mov eax [ ebp + 0x20 ]
mov ecx ebx
sub ecx [ eax + 0x4 ]
mov dl bl
dec ecx
sar ecx 0x8
mov [ ebx ] cl
sub dl [ eax + 0x4 ]
dec dl
mov [ ebx + 0x1 ] dl
add ebx 0x2
jmp r-xdata
cmp ecx 0x5
jle r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] ecx
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x18 ]
test cl 0x10
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx eax
neg eax
cmp eax 0x5
jne r-xdata
cmp [ edi + 0x1 ] 0x3a
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x28 ] edx
jne r-xdata
cmp al 0x3d
jne r-xdata
mov eax [ ebp + 0x24 ]
or [ eax + 0x48 ] 0x20
cmp eax 0xa
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi + 0x1 ] 0x5c
mov [ ebp - 0x54 ] ecx
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
movzx eax [ edi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x3 ]
shl ecx 0x6
or ecx edx
shl ecx 0x6
and eax 0x3f
or eax ecx
add edi 0x3
jmp r-xdata
mov ebx [ ebp - 0x10 ]
add cl 0x27
mov [ ebx ] cl
mov ecx [ ebp - 0x40 ]
mov edx ecx
sar edx 0x8
mov [ ebx + 0x1 ] dl
mov [ ebx + 0x2 ] cl
add ebx 0x3
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0x1
jne r-xdata
add al 0x1f
mov [ ebx ] al
inc ebx
jmp r-xdata
add al 0x4c
mov [ ebx ] al
mov eax [ ebp - 0x40 ]
mov edx eax
sar edx 0x8
mov [ ebx + 0x1 ] dl
mov [ ebx + 0x2 ] al
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0x1
jne r-xdata
add al 0x46
mov [ ebx ] al
jmp r-xdata
cmp dl 0x5e
je r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
js r-xdata
test eax eax
js r-xdata
test eax eax
js r-xdata
or eax 0xffffffff
mov [ ebp - 0x6c ] eax
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
dec edi
mov [ ecx ] 0x1a
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] eax
or eax 0xffffffff
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
add eax [ esi + 0x30 ]
inc ecx
mov [ ebp - 0x10 ] ecx
cmp ecx [ esi + 0x2c ]
jl r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
add edi [ esi + 0x30 ]
add eax ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] eax
cmp eax [ esi + 0x2c ]
jl r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x2b
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x5206005d
mov edx eax
sub edx [ esi + 0x14 ]
add ebx 0x9
sar edx 0x8
mov [ ebx - 0x5 ] dl
sub al [ esi + 0x14 ]
cmp [ ebp - 0x38 ] 0xfffffffe
mov [ ebx - 0x4 ] al
mov [ ebx - 0x3 ] 0x55
mov [ ebx - 0x1 ] 0x6
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x64 ] 0x9
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ ebx ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x3a
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
add eax [ esi + 0x34 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0xf
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x10 ] ebx
cmp ecx 0x17
jl r-xdata
movzx ecx [ eax + 0x4 ]
cmp ecx [ ebp - 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
mov cl [ ecx ]
test cl cl
jne r-xdata
cmp eax 0x1a
jne r-xdata
mov [ ebp - 0x8 ] 0x8
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x1f
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5e
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ edi + 0x1 ] 0x2d
jne r-xdata
cmp [ ebp - 0x54 ] ecx
jne r-xdata
cmp eax 0x5d
jne r-xdata
and eax 0x1
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x3 ]
shl ecx 0x6
or ecx edx
movzx edx [ edi + 0x4 ]
shl ecx 0x6
and eax 0x3f
or ecx eax
movzx eax [ edi + 0x5 ]
shl ecx 0x6
and edx 0x3f
or ecx edx
shl ecx 0x6
and eax 0x3f
or eax ecx
add edi 0x5
and eax 0x3
shl eax 0x6
or ecx eax
movzx eax [ edi + 0x3 ]
shl ecx 0x6
or ecx edx
movzx edx [ edi + 0x4 ]
and eax 0x3f
shl ecx 0x6
or eax ecx
shl eax 0x6
and edx 0x3f
or eax edx
add edi 0x4
jmp r-xdata
mov ecx [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] ecx
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ebx edx
cmp ecx 0x1
je r-xdata
mov ebx [ ebp - 0x10 ]
add al 0x21
mov [ ebx ] al
inc ebx
jmp r-xdata
add al 0x25
mov edx ecx
sar edx 0x8
mov [ ebx ] al
mov [ ebx + 0x1 ] dl
jmp r-xdata
add al 0x23
mov [ ebx ] al
inc ebx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax ecx
sar eax 0x8
mov [ ebx + 0x3 ] al
mov [ ebx + 0x4 ] cl
add ebx 0x5
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x30 ] ecx
add al 0x48
mov [ ebx ] al
jmp r-xdata
add al 0x4a
mov [ ebx ] al
jmp r-xdata
inc ebx
mov edx [ ebp - 0x10 ]
mov eax ebx
sub eax edx
cmp [ ebp - 0x49 ] 0x60
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] 0x0
jne r-xdata
cmp dl 0x5f
je r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x44 ] eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0x6c ]
test ecx ecx
js r-xdata
mov ecx [ ebp - 0x6c ]
test ecx ecx
jns r-xdata
or eax 0xffffffff
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov [ ebp - 0x38 ] eax
or eax 0xffffffff
mov [ ebp - 0x9c ] 0x1
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi ] 0x29
jne r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x5c ]
inc edi
mov [ ebp - 0x38 ] 0xffffffff
xor edx edx
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ esi + 0x14 ]
push edx
push eax
push ecx
call sub_42ee0a
add esp 0xc
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x5c ]
neg al
mov [ ebx ] al
mov edi [ ebp - 0x4 ]
inc ebx
inc edi
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov edx 0x1
mov [ eax + 0x6 ] dx
mov edi [ ebp - 0x4 ]
inc edi
xor edx edx
jmp r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
cmp eax 0x19
je r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
mov eax [ ebp - 0x98 ]
sub eax edi
push eax
push edi
call sub_42ec51
add esp 0x8
test eax eax
js r-xdata
mov eax 0x1
add edi eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x8 ]
mov eax ecx
cdq
and edx 0x7
add eax edx
and ecx 0x7
mov dl 0x1
shl dl cl
sar eax 0x3
lea eax [ ebp + eax - 0x94 ]
or [ eax ] dl
test [ ebp - 0x2c ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax 0xff
jg r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov cl [ ebp - 0x8 ]
mov [ ebx ] cl
mov ecx [ ebp - 0x14 ]
inc ebx
test ecx ecx
js r-xdata
cmp [ ebp - 0x8 ] 0x80
jl r-xdata
mov al [ ebp - 0x18 ]
add al 0x25
mov [ edx ] al
mov eax [ ebp - 0x30 ]
lea ecx [ eax - 0x1 ]
lea ebx [ edx + 0x1 ]
sar ecx 0x8
dec al
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
add ebx 0x2
jmp r-xdata
mov [ ebx + 0x2 ] cl
add ebx 0x3
mov dl [ ebp - 0x8 ]
mov [ ebx ] dl
cmp [ ebp - 0x8 ] 0x80
jl r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov al [ ecx ]
cmp al 0x41
jne r-xdata
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
cmp [ edx + 0x3 ] 0x68
je r-xdata
cmp dl 0x5d
je r-xdata
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
or eax [ ebp - 0x70 ]
mov [ ebp - 0x6c ] eax
cmp [ esi + 0x2c ] 0x0
mov edi [ esi + 0x28 ]
mov [ ebp - 0x10 ] 0x0
jle r-xdata
test eax eax
jle r-xdata
movzx edx [ eax + 0x1 ]
movzx ecx [ eax + 0x2 ]
shl edx 0x8
or edx ecx
jne r-xdata
cmp [ ebp - 0x28 ] eax
mov edx [ ebp - 0x24 ]
setne al
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push esi
call sub_440293
add esp 0x14
test eax eax
js r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x5c ]
inc edi
xor edx edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
test ecx ecx
jns r-xdata
mov [ ebp - 0x54 ] 0x1
jmp r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp - 0x4 ]
mov [ ecx ] 0x1e
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0x2c ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
inc [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
movzx ecx [ ecx + edx ]
mov eax ecx
cdq
and edx 0x7
add eax edx
mov [ ebp - 0x8 ] ecx
and ecx 0x7
mov dl 0x1
sar eax 0x3
shl dl cl
lea eax [ ebp + eax - 0x94 ]
or [ eax ] dl
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x1
inc esi
push esi
push eax
mov [ ebp - 0x1c ] 0x1
call sub_42e796
add esp 0x8
jmp r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
mov edi [ ebp - 0xc ]
mov ecx [ ebp - 0x48 ]
cmp edi 0x1
jne r-xdata
mov cl [ ebp - 0x8 ]
mov [ ebx ] cl
inc ebx
cmp [ ebp - 0x8 ] 0x80
jl r-xdata
add al 0x1f
mov [ ebx ] al
inc ebx
jmp r-xdata
mov dl [ ebp - 0xc ]
mov [ ebx ] cl
mov [ ebx + 0x1 ] dl
add ebx 0x2
mov edi [ ebp - 0x8 ]
and edi 0x7
push edi
lea eax [ ebp - 0xc0 ]
push eax
push ebx
call sub_410e60
mov eax [ ebp - 0x18 ]
add ebx edi
add al 0x1f
add esp 0xc
mov [ ebx ] al
inc ebx
jmp r-xdata
mov edi [ ebp - 0x8 ]
and edi 0x7
push edi
lea ecx [ ebp - 0xc0 ]
push ecx
push ebx
call sub_410e60
add esp 0xc
add ebx edi
jmp r-xdata
cmp al 0x27
je r-xdata
mov al [ ecx + 0x3 ]
cmp al 0x10
je r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x34 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x37
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp dl 0x60
je r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ esi + 0x2c ]
jge r-xdata
lea ebx [ ebx ]
cmp ecx 0x2d
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp - 0xc ]
push esi
push edx
push eax
push ebx
push ecx
call sub_447157
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp - 0x4 ]
mov [ ecx ] 0xf
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x8 ]
lea edx [ eax + ecx ]
mov ecx ebx
sub ecx eax
add ecx 0x4
sar ecx 0x8
mov [ ebp - 0xc ] edx
mov edx [ esi + 0x24 ]
mov [ edx ] cl
mov ecx [ esi + 0x24 ]
mov al bl
sub al [ esi + 0x14 ]
add al 0x4
mov [ ecx + 0x1 ] al
add [ esi + 0x24 ] 0x2
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
mov edi [ ecx + 0x8 ]
mov ecx 0x2
add [ ebp - 0xc ] ecx
add eax 0xfffffffa
cmp eax 0xf
ja r-xdata
add edi 0x2
jmp r-xdata
lea edi [ eax + eax * 2 ]
mov ecx [ edi * 4 + r--data ]
add ecx [ ebp - 0x28 ]
push 0x20
push ecx
lea edx [ ebp - 0xe0 ]
push edx
call sub_410e60
mov ecx [ edi * 4 + r--data ]
mov edi [ edi * 4 + r--data ]
add esp 0xc
test ecx ecx
js r-xdata
cmp eax 0x2
jg r-xdata
add esi eax
cmp eax 0x7f
jle r-xdata
mov edi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x54 ]
test ecx ecx
jne r-xdata
cmp [ edi ] 0x5c
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
je r-xdata
mov eax [ ebp - 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
sub ecx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] ecx
cmp ecx 0x1
jne r-xdata
movzx edx [ ebp - 0x14 ]
mov [ ebx ] dl
movzx edx [ ebp - 0xc ]
mov [ ebx + 0x1 ] dl
add ebx 0x2
mov edi [ ebp - 0x8 ]
and edi 0x7
push edi
lea edx [ ebp - 0xc0 ]
push edx
push ebx
call sub_410e60
mov eax [ ebp - 0x18 ]
add esp 0xc
add ebx edi
jmp r-xdata
movzx eax al
movzx edx [ eax + r--data ]
add ecx edx
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x3c ] ecx
je r-xdata
cmp al 0x34
jne r-xdata
mov eax 0x2
lea ecx [ ecx + eax + 0x4 ]
jmp r-xdata
cmp al 0xf
je r-xdata
cmp eax 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x1
mov [ ebx ] al
jg r-xdata
movzx edx [ eax + 0x1 ]
movzx eax [ eax + 0x2 ]
shl edx 0x8
or edx eax
mov eax [ ebp - 0x34 ]
add eax edx
cmp [ eax ] 0x55
mov [ ebp - 0x34 ] eax
jne r-xdata
mov edx ebx
sub edx eax
mov [ ebp - 0x14 ] edx
cmp dl 0x73
je r-xdata
mov ecx [ ebp - 0x24 ]
mov edi [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
xor eax eax
cmp [ ebp - 0x28 ] eax
push ecx
setne al
push eax
push edi
push edx
push esi
call sub_440293
add esp 0x14
test eax eax
jle r-xdata
movzx ecx [ edi ]
movzx eax [ edi + 0x1 ]
shl ecx 0x8
or eax ecx
mov ecx [ ebp - 0xc ]
mov edx eax
sar edx 0x8
inc [ ebx + 0x3 ]
mov [ ebx + 0x4 ] dl
mov [ ebx + 0x5 ] al
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add edi [ esi + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ esi + 0x2c ]
jl r-xdata
add eax [ esi + 0x34 ]
mov edx [ esi + 0x34 ]
sub edx eax
lea eax [ edx + 0x1 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x28
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
test [ ebp - 0x2c ] 0x40
mov edi [ ebp - 0x4 ]
jne r-xdata
jmp [ eax * 4 + jump_table_4501fb ]
test edi edi
jns r-xdata
add ecx [ ebp - 0x28 ]
xor eax eax
test edi edi
js r-xdata
xor eax eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp al 0x5d
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x60 ] eax
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x24 ]
test eax eax
je r-xdata
add al 0x25
mov [ ebx ] al
mov eax ecx
sar eax 0x8
mov [ ebx + 0x1 ] al
add al 0x23
mov [ ebx ] al
inc ebx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x30 ]
jl r-xdata
mov eax ebx
sub eax ecx
mov [ ebp - 0x34 ] eax
test eax eax
jle r-xdata
mov al [ ecx - 0x1 ]
cmp al 0xc0
jb r-xdata
mov [ ebp - 0x3c ] ecx
xor eax eax
lea ecx [ ecx + eax + 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
test edx edx
jle r-xdata
cmp [ ebp + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
push edx
push esi
push eax
push 0x4
push ecx
call sub_43feb0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push edx
push eax
add eax 0x4
push eax
call sub_4165d0
mov cl [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
add cl 0x69
mov [ eax ] cl
mov [ eax + 0x1 ] 0x5e
add eax 0x2
mov [ eax ] 0x0
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x1c ] eax
add eax 0x2
add esp 0x20
add ebx 0x4
dec [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
push ecx
push esi
push edx
push 0x1
push eax
call sub_43feb0
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push ecx
lea edi [ eax + 0x1 ]
push eax
push edi
call sub_4165d0
add esp 0x20
inc ebx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0xb
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx eax
sar ecx 0x8
inc [ ebx + 0x3 ]
mov [ ebx + 0x4 ] cl
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x5 ] al
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
push edx
lea eax [ edi + 0x2 ]
push eax
push ecx
call sub_416931
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0xf
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ esi + 0x38 ]
jg r-xdata
test eax eax
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x7
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ edi ]
sub [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
xor eax eax
nop
xor eax eax
lea ebx [ ebx ]
mov [ ebp - 0x20 ] 0x1
xor eax eax
jmp r-xdata
mov dl [ edi ]
or [ ebp - 0x94 ] dl
mov al [ edi + 0x1 ]
and al 0xf7
or [ ebp - 0x93 ] al
mov eax ecx
mov ecx edi
lea edx [ ebp - 0x94 ]
xor eax eax
mov [ ebp - 0x20 ] 0x1
sub ecx edx
jmp r-xdata
or [ ebp - 0x93 ] cl
or [ ebp - 0x90 ] 0x1
or [ ebp - 0x80 ] 0x1
cmp [ ebp - 0x24 ] 0x0
je r-xdata
xor eax eax
or [ ebp - 0x93 ] 0x3c
or [ ebp - 0x84 ] 0x20
cmp [ ebp - 0x24 ] 0x0
je r-xdata
xor eax eax
cmp edi 0x1
jne r-xdata
neg edi
mov dl [ ecx + eax ]
not dl
and [ ebp + eax - 0xe0 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov dl [ ecx + eax ]
or [ ebp + eax - 0xe0 ] dl
inc eax
cmp eax 0x20
jl r-xdata
movzx edx al
movzx eax al
mov [ ebp - 0x18 ] eax
cmp eax 0xc0
jl r-xdata
cmp [ edi + 0x1 ] 0x51
jne r-xdata
xor eax eax
cmp ecx [ ebp - 0x20 ]
setne al
inc ebx
add eax 0x4e
mov [ ebx - 0x1 ] al
test ecx ecx
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
movzx eax [ ecx ]
add eax 0xffffffe1
cmp eax 0x20
ja r-xdata
movzx eax al
and eax 0x3f
movzx edx [ eax + r--data ]
add ecx edx
js r-xdata
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x64 ]
dec eax
mov [ ebp - 0x50 ] eax
imul eax edx
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
imul edx
test edx edx
jg r-xdata
test edx edx
mov al [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
add al 0x69
dec [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
mov [ ecx ] al
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx ] 0x76
jmp r-xdata
mov edx [ ebp - 0x20 ]
cmp [ edx ] 0x52
jne r-xdata
mov ecx eax
sar ecx 0x8
mov [ ebx + 0x4 ] cl
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x5 ] al
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov dl [ edi + eax + 0x40 ]
or [ ebp + eax - 0x94 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov cl [ edi + eax + 0x40 ]
not cl
or [ ebp + eax - 0x94 ] cl
inc eax
cmp eax 0x20
jl r-xdata
jmp r-xdata
mov dl [ edi + eax + 0xa0 ]
or [ ebp + eax - 0x94 ] dl
inc eax
cmp eax 0x20
jl r-xdata
jmp r-xdata
mov cl [ edi + eax + 0xa0 ]
not cl
or [ ebp + eax - 0x94 ] cl
inc eax
cmp eax 0x20
jl r-xdata
mov cl [ edi + eax ]
or [ ebp + eax - 0x94 ] cl
inc eax
cmp eax 0x20
jl r-xdata
jmp r-xdata
lea edi [ ebp + eax - 0x94 ]
mov dl [ edi + ecx ]
not dl
or [ edi ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov [ esi ] 0x1
inc esi
push esi
push 0x1680
mov [ ebp - 0x1c ] 0x1
call sub_42e796
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x180e
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2000
call sub_42e796
add esi eax
push esi
push 0x200a
call sub_42e796
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x202f
call sub_42e796
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x205f
call sub_42e796
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x3000
call sub_42e796
add esp 0x38
mov edx 0xfd
sub ecx 0x3
je r-xdata
mov [ esi ] cl
inc esi
push esi
push 0x2028
mov [ ebp - 0x1c ] 0x1
call sub_42e796
add esi eax
push esi
push 0x2029
call sub_42e796
add esp 0x10
jmp r-xdata
mov edx 0xc3
sub ecx 0xf
jne r-xdata
cmp edi 0x2
jne r-xdata
and [ ebp - 0xdf ] 0xc3
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jl r-xdata
cmp [ ebp - 0x18 ] 0x5c
jne r-xdata
test ecx ecx
jne r-xdata
movzx edx [ edi + 0x1 ]
and edx 0x3f
test al 0x20
jne r-xdata
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
jne r-xdata
push 0x20
lea edx [ ebp - 0x94 ]
push edx
push ebx
call sub_410e60
add esp 0xc
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
xor eax eax
test ecx ecx
mov [ esi ] 0x0
setne al
mov [ ebx ] 0x50
mov [ ebx + 0x3 ] al
test edi edi
jle r-xdata
test [ ebp - 0x2c ] 0x20000000
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx 0x80
jl r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
push ecx
push esi
push edx
mov [ ebx ] 0x0
mov eax [ ebp - 0x3c ]
push 0x3
push eax
call sub_43feb0
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x3c ]
push ecx
push eax
add eax 0x3
push eax
call sub_4165d0
mov edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x34 ]
add ecx 0x3
mov [ edx ] 0x5d
mov [ ebx + 0x3 ] 0x55
mov eax ecx
sar eax 0x8
mov [ ebx + 0x4 ] al
mov [ ebx + 0x5 ] cl
mov edx [ ebp - 0x3c ]
mov [ edx + 0x1 ] al
mov eax [ ebp - 0x3c ]
add esp 0x20
add ebx 0x6
mov [ eax + 0x2 ] cl
movzx eax [ eax + lookup_table_45026f ]
jmp [ eax * 4 + jump_table_45023b ]
mov edi ebx
sub edi [ ebp - 0x14 ]
movzx eax [ edi + 0x1 ]
movzx ecx [ edi + 0x2 ]
shl eax 0x8
or eax ecx
mov ecx edi
sub ecx eax
mov al [ ebp - 0x18 ]
add al 0x56
cmp [ ebp + 0x28 ] 0x0
mov [ ebp - 0x50 ] ecx
mov [ edi ] al
jne r-xdata
cmp [ ebp + 0x28 ] 0x0
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jle r-xdata
cmp [ ebp - 0x44 ] 0x0
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0x14
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jl r-xdata
mov edi [ ebp - 0x4 ]
cmp edi 0x6
jne r-xdata
xor eax eax
lea ecx [ eax + 0x1 ]
cmp edi ecx
jle r-xdata
jmp r-xdata
jmp r-xdata
or [ ebp - 0x93 ] 0x8
jmp r-xdata
mov ecx eax
dec ecx
mov edx 0xff
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov edx 0xfe
jmp r-xdata
sub ecx 0x10
jne r-xdata
mov ecx eax
dec ecx
mov edx 0xff
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
or [ ebp + eax - 0x94 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov edx 0xdf
jmp r-xdata
xor eax eax
cmp [ ebp - 0x34 ] eax
je r-xdata
and [ ebp - 0xd5 ] 0x7f
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ eax ] 0x8
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x34 ]
mov edi [ ebp + 0x14 ]
push 0x1
push eax
push edx
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_42f85b
add esp 0x14
cmp [ edi ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
test al 0x10
jne r-xdata
and eax 0x1f
shl eax 0x6
or edx eax
inc edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ ebp - 0x54 ] 0x1
cmp [ edi + 0x1 ] 0x45
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp + 0x24 ]
mov ecx [ ebp - 0x5c ]
add ebx 0x20
inc edi
xor edx edx
jmp r-xdata
lea esi [ ebp - 0x94 ]
mov eax ebx
sub esi ebx
mov edi 0x20
lea ebx [ esi + 0x1 ]
or al 0x2
mov [ ebx + 0x3 ] al
add ebx 0x4
lea ecx [ esi + 0x1 ]
sub ecx ebx
push ecx
lea edx [ ebx + 0x20 ]
push ebx
push edx
call sub_4165d0
push 0x20
lea eax [ ebp - 0x94 ]
push eax
push ebx
call sub_410e60
add esp 0x18
lea ebx [ esi + 0x21 ]
jmp r-xdata
mov esi [ ebp + 0x24 ]
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp - 0xc ]
mov [ ebp - 0xac ] dl
jmp r-xdata
cmp edx 0x7f
jle r-xdata
mov esi [ ebp + 0x24 ]
mov ecx [ ebp - 0x5c ]
mov [ ebx ] 0x1e
mov [ ebx + 0x1 ] dl
mov edi [ ebp - 0x4 ]
add ebx 0x2
inc edi
mov [ ebp - 0x48 ] eax
xor edx edx
jmp r-xdata
or eax 0xffffffff
mov [ ebp - 0x38 ] eax
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x60 ] esi
test ecx ecx
je r-xdata
mov [ ecx ] 0x28
jmp r-xdata
mov [ ecx ] 0x29
jmp r-xdata
mov [ ecx ] 0x2a
jmp r-xdata
mov [ ecx ] 0x2b
jmp r-xdata
mov [ ecx ] 0x42
jmp r-xdata
mov [ ecx ] 0x43
jmp r-xdata
mov [ ecx ] 0x44
jmp r-xdata
mov [ ecx ] 0x45
jmp r-xdata
mov [ ecx ] 0x35
jmp r-xdata
mov [ ecx ] 0x36
jmp r-xdata
mov [ ecx ] 0x37
jmp r-xdata
mov [ ecx ] 0x38
jmp r-xdata
cmp [ ecx ] 0x5d
je r-xdata
dec edx
mov [ ebp - 0x14 ] edx
js r-xdata
test edx edx
jle r-xdata
mov ecx [ ebp - 0x40 ]
mov edi [ ebp - 0x58 ]
dec ecx
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] eax
mov edx [ ebp + 0x28 ]
mov eax [ edx ]
mov edx 0x7fffffeb
sub edx eax
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0x34 ]
cmp [ ebp - 0x50 ] edx
jl r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
jle r-xdata
push edi
push r--data
push edx
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov [ esi ] 0x2
inc esi
push esi
push 0x100
mov [ ebp - 0x1c ] 0x1
call sub_42e796
add esi eax
push esi
push 0x167f
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x1681
call sub_42e796
add esi eax
push esi
push 0x180d
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x180f
call sub_42e796
add esi eax
push esi
push 0x1fff
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x200b
call sub_42e796
add esi eax
push esi
push 0x202e
call sub_42e796
add esi eax
mov [ esi ] 0x2
add esp 0x40
inc esi
push esi
push 0x2030
call sub_42e796
add esi eax
push esi
push 0x205e
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2060
call sub_42e796
add esi eax
push esi
push 0x2fff
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x3001
call sub_42e796
add esi eax
push esi
push 0x7fffffff
call sub_42e796
add esp 0x30
jmp r-xdata
or [ ebp + eax - 0x94 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov [ esi ] 0x2
inc esi
push esi
push 0x100
mov [ ebp - 0x1c ] 0x1
call sub_42e796
add esi eax
push esi
push 0x2027
call sub_42e796
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2029
call sub_42e796
add esi eax
push esi
push 0x7fffffff
call sub_42e796
add esp 0x20
jmp r-xdata
mov dl [ ebp + eax - 0xe0 ]
or [ ebp + eax - 0x94 ] dl
inc eax
cmp eax 0x20
jl r-xdata
lea esp [ esp ]
cmp eax 0xd
je r-xdata
test eax eax
jns r-xdata
test al 0x8
jne r-xdata
and eax 0xf
shl eax 0x6
or edx eax
movzx eax [ edi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
add edi 0x2
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ ebp - 0x18 ] edx
add edi 0x2
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x5c
je r-xdata
mov cl [ esi + eax ]
not cl
mov [ eax ] cl
inc eax
dec edi
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ ebp + 0x24 ]
mov ecx [ ebp - 0x5c ]
add ebx 0x20
inc edi
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esi [ ebp + 0x24 ]
mov ecx ebx
sub ecx eax
mov dl bl
sar ecx 0x8
sub dl al
mov [ eax + 0x1 ] cl
mov ecx [ ebp - 0x5c ]
mov [ eax + 0x2 ] dl
mov edi [ ebp - 0x4 ]
inc edi
xor edx edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xac ]
push ecx
push edx
call sub_42e796
mov esi [ ebp + 0x24 ]
add esp 0x8
mov [ ebp - 0xc ] eax
mov ecx eax
jmp r-xdata
mov [ ebp - 0x28 ] ecx
lea esp [ esp ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov al [ ebp - 0x18 ]
add al 0x69
mov [ ebp - 0x49 ] al
mov edi edi
mov eax [ ebp - 0x64 ]
add eax 0x7
mov [ ebp - 0x50 ] eax
imul eax edx
sub eax 0x6
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
imul edx
test edx edx
jg r-xdata
mov edi [ ebp - 0x28 ]
add ebx eax
dec [ ebp - 0x34 ]
mov [ ebp - 0x58 ] edi
jne r-xdata
movzx edx [ edi ]
movzx ecx [ edi + 0x1 ]
shl edx 0x8
or edx ecx
mov ecx [ esi + 0x24 ]
add edx eax
sar edx 0x8
mov [ ecx ] dl
mov dl [ edi + 0x1 ]
mov ecx [ esi + 0x24 ]
add dl al
mov [ ecx + 0x1 ] dl
add [ esi + 0x24 ] 0x2
add edi 0x2
cmp edi [ ebp - 0x28 ]
jb r-xdata
mov eax [ ebp + 0x28 ]
mov eax [ eax ]
add eax edx
mov edx [ ebp + 0x28 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xffffffec
add eax 0x23
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ esi + 0x38 ]
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x3 ] 0x68
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] ebx
jmp r-xdata
movzx edx [ ecx + edx ]
test [ edx + r--data ] 0x4
je r-xdata
mov edi [ ebp - 0x98 ]
inc edi
mov [ ebp - 0xc ] 0xa
jmp r-xdata
mov cl [ ebp + eax - 0xe0 ]
not cl
or [ ebp + eax - 0x94 ] cl
inc eax
cmp eax 0x20
jl r-xdata
mov edi [ ebp - 0x98 ]
inc edi
mov [ ebp - 0xc ] 0xa
jmp r-xdata
mov edx [ ebp + 0x24 ]
or [ edx + 0x48 ] 0x20
cmp eax 0xa
jne r-xdata
mov edi [ ebp - 0x4 ]
cmp eax 0xfffffffb
jne r-xdata
test al 0x4
jne r-xdata
and eax 0x7
shl eax 0x6
or edx eax
movzx eax [ edi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ edi + 0x3 ]
shl edx 0x6
and eax 0x3f
or edx eax
add edi 0x3
mov [ ebp - 0x4 ] edi
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
add [ eax ] 0x3
jmp r-xdata
mov eax [ ebp - 0x28 ]
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
mov [ ebp - 0x28 ] eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push edx
push eax
push ebx
call sub_410e60
mov ecx [ ebp - 0x58 ]
add esp 0xc
cmp ecx edi
jae r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebx ] 0x5e
inc ebx
test ecx ecx
jne r-xdata
jl r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ esi + 0x24 ]
push eax
push ecx
push ebx
mov [ ebp - 0x28 ] edx
call sub_410e60
mov eax [ ebp - 0xc ]
add esp 0xc
cmp edi [ ebp - 0x28 ]
jae r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
mov edx eax
sar edx 0x8
mov [ ebx + 0x4 ] dl
mov [ ebx + 0x5 ] al
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov [ edx ] 0xf
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
inc ecx
lea eax [ eax + eax * 4 ]
lea eax [ edx + eax * 2 - 0x30 ]
cmp ecx edi
jl r-xdata
mov edx eax
sub edx ecx
cmp [ ebp + 0x28 ] 0x0
mov ecx [ ebp - 0xc ]
lea edx [ ecx + edx + 0x1 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp eax 0xff
jg r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x8
and eax 0x1
shl eax 0x6
or edx eax
movzx eax [ edi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ edi + 0x3 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ edi + 0x4 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ edi + 0x5 ]
shl edx 0x6
and eax 0x3f
or edx eax
add edi 0x5
mov [ ebp - 0x4 ] edi
jmp r-xdata
and eax 0x3
shl eax 0x6
or edx eax
movzx eax [ edi + 0x2 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ edi + 0x3 ]
shl edx 0x6
and eax 0x3f
or edx eax
movzx eax [ edi + 0x4 ]
shl edx 0x6
and eax 0x3f
or edx eax
add edi 0x4
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
push esi
push edx
push edi
push eax
call sub_43ff53
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x1c ]
mov edi ebx
inc eax
sub edi eax
movzx ecx [ edi + 0x1 ]
movzx edx [ edi + 0x2 ]
shl ecx 0x8
or ecx edx
jne r-xdata
add ebx [ ebp - 0xc ]
dec [ ebp - 0x14 ]
mov [ ebp - 0x58 ] edi
jns r-xdata
lea ecx [ ecx ]
mov eax ebx
sub eax ecx
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ edx ]
mov edx 0x7fffffeb
sub edx eax
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0x34 ]
cmp [ ebp - 0x50 ] edx
jl r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov edx [ ebp - 0x20 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x8 ] eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0x2
inc esi
push esi
push ecx
mov [ ebp - 0x1c ] 0x1
call sub_42e796
mov edx [ ebp - 0x18 ]
add esi eax
push esi
push edx
call sub_42e796
add esp 0x10
add esi eax
test [ ebp - 0x2c ] 0x1
je r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
sub [ ebp - 0x1c ] ecx
xor edx edx
xor edx edx
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edi [ esi + 0x24 ]
mov al [ ebp - 0x49 ]
mov [ ebx ] al
inc ebx
cmp [ ebp - 0x14 ] 0x0
mov [ ebp - 0x34 ] edi
je r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
movzx edx [ ecx ]
movzx eax [ ecx + 0x1 ]
mov edi [ ebp - 0x14 ]
neg edi
sbb edi edi
shl edx 0x8
or edx eax
add edx [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
and edi 0x3
inc edi
add edx edi
sar edx 0x8
mov [ eax ] dl
mov eax [ ebp - 0x14 ]
mov dl [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax 0x3
inc eax
add dl al
add dl [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
mov [ eax + 0x1 ] dl
add [ esi + 0x24 ] 0x2
add ecx 0x2
cmp ecx [ ebp - 0x34 ]
jb r-xdata
mov edi [ ebp - 0x34 ]
mov ecx eax
sar ecx 0x8
mov [ ebp - 0x1c ] ebx
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
add ebx 0x2
mov eax [ ebp + 0x28 ]
mov eax [ eax ]
add eax edx
mov edx [ ebp + 0x28 ]
mov [ edx ] eax
jmp r-xdata
mov ecx eax
sar ecx 0x8
mov [ ebx + 0x4 ] cl
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x3 ] 0x66
mov [ ebx + 0x5 ] al
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
and eax 0x1
mov [ ebp - 0x34 ] eax
lea esp [ esp ]
cmp [ ebp - 0x8 ] 0x7f
jg r-xdata
cmp eax 0x7f
jle r-xdata
jmp r-xdata
mov [ ebx ] 0x55
mov ecx eax
sar ecx 0x8
mov [ ebx + 0x1 ] cl
mov [ ebx + 0x2 ] al
add ebx 0x3
mov [ edi + 0x1 ] cl
mov [ edi + 0x2 ] al
cmp [ ebp - 0x1c ] edx
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
movzx ecx [ ecx + edx ]
mov eax ecx
cdq
and edx 0x7
add eax edx
and ecx 0x7
mov dl 0x1
sar eax 0x3
shl dl cl
lea eax [ ebp + eax - 0x94 ]
or [ eax ] dl
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] 0x7f
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax ecx
cdq
and edx 0x7
add eax edx
and ecx 0x7
mov dl 0x1
shl dl cl
sar eax 0x3
lea eax [ ebp + eax - 0x94 ]
or [ eax ] dl
cmp [ ebp - 0x34 ] 0x0
je r-xdata
jmp r-xdata
sub_45039b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
push ebx
push rw-data
call sub_430c09
push esi
push rw-data
mov [ ebp + 0x10 ] eax
mov edi esi
call sub_441b7c
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x14 ]
dec ecx
je r-xdata
push esi
call [ GetParent@IAT ]
mov edi eax
push edi
push rw-data
call sub_441b7c
cmp eax 0xffffffff
je r-xdata
dec ecx
je r-xdata
mov ecx [ ebp + 0xc ]
push esi
push ecx
push 0x133
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x88 ]
cmp al 0x2
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub ecx 0x4
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push edi
push edx
push eax
call sub_44a032
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp al 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
push esi
push ecx
push 0x134
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x1
je r-xdata
cmp eax 0xffffffff
je r-xdata
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
push eax
push 0x138
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x12
jne r-xdata
cmp [ eax + 0x44 ] 0xffffffff
jne r-xdata
sub_4504a4
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x88 ] 0x13
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
push esi
push edx
lea esi [ eax + 0x20 ]
call sub_40e0a0
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov al [ ebp + 0x10 ]
mov edx [ ecx ]
pop esi
mov [ edx + 0x90 ] al
mov eax 0x1
pop edi
mov esp ebp
pop ebp
retn 0xc
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0xc
sub_450517
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
jmp r-xdata
push ecx
lea eax [ ebp + 0xc ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
push edi
call sub_436565
test al al
je r-xdata
mov ecx [ esi ]
cmp [ ecx ] ebx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
call sub_44c29d
push edi
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ebx
call sub_40e0a0
lea eax [ ebp - 0x14 ]
push eax
push rw-data
call sub_447e05
mov ecx esi
call sub_402250
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_436565
test al al
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp + 0xc ]
push eax
call sub_440847
mov esi [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi ]
push edi
add esi 0x4
call sub_40e0a0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp + 0xc ]
push ecx
push rw-data
call sub_447dc1
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4505f0
push ebp
mov ebp esp
mov eax 0x2024
call sub_422240
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x2c ]
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
mov [ ebp + 0x2f ] 0x0
cmp eax edi
jne r-xdata
or eax 0x10001
push eax
call sub_449175
or ecx 0xffffffff
cmp ebx ecx
jne r-xdata
mov eax 0xc
test bl 0x10
je r-xdata
mov ebx 0x220
cmp [ ebp + 0x20 ] ecx
jne r-xdata
mov [ ebp + 0x2f ] 0x1
xor ebx 0x10
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov [ ebp + 0x20 ] 0x96
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x24 ]
push 0x0
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push eax
push r--data
push r--data
push ebx
push edx
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ ebp + 0x24 ] 0x96
cmp [ ebp + 0x2f ] 0x0
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov eax [ esi ]
push ebx
push 0x0
push 0x1036
push eax
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x18c ] 0x0
je r-xdata
push 0x10
push 0x10
push 0x1036
push eax
call [ SendMessageW@IAT ]
or ebx 0x10
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x2020 ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x24 ] ecx
jmp r-xdata
mov edx [ esi ]
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call [ SetWindowPos@IAT ]
push rw-data
lea edx [ ebp + 0x24 ]
push edx
lea eax [ ebp - 0x2020 ]
push eax
call sub_430626
test al al
je r-xdata
or edx 0xffffffff
mov [ esi + 0x8c ] di
mov [ esi + 0x8e ] dx
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2020 ]
push ecx
call sub_4111c1
lea edx [ ebp - 0x2020 ]
push r--data
push edx
mov ebx eax
call sub_411536
mov ecx [ esi ]
add esp 0xc
lea eax [ ebp - 0x2020 ]
push eax
push 0x0
push 0x1057
push ecx
call [ SendMessageW@IAT ]
mov [ ebp - 0x18 ] eax
cmp eax 0x96
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov eax 0x1
mov [ esi + 0x7e ] ax
mov ecx [ esi ]
lea eax [ ebp - 0x20 ]
push eax
inc edi
push edi
push 0x1061
xor edx edx
push ecx
mov [ ebp + ebx * 2 - 0x2020 ] dx
mov [ ebp - 0xc ] edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov [ ebp - 0x18 ] 0x96
sub_4507b7
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor bl bl
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_449175
test eax 0x100
je r-xdata
mov eax 0x37
cmp [ ebp + 0x28 ] 0xffffffff
jne r-xdata
xor eax 0x100
mov bl 0x1
cmp [ ebp + 0x1c ] 0xffffffff
mov ecx 0x96
jne r-xdata
mov [ ebp + 0x28 ] 0x0
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
mov [ ebp + 0x1c ] ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x20 ]
push 0x0
push ecx
mov ecx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x28 ]
push ecx
push eax
push r--data
push r--data
push edx
push esi
call sub_4301f8
mov [ edi ] eax
test eax eax
jne r-xdata
mov [ ebp + 0x20 ] ecx
cmp [ esi + 0x18c ] 0x0
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x24
mov eax [ edi ]
mov [ esi + 0x1b0 ] eax
test bl bl
je r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov ecx [ edi ]
push 0xfffffff0
push ecx
mov [ edi + 0x88 ] 0x10
call [ GetWindowLongW@IAT ]
mov edx [ edi ]
or eax 0x100
push eax
push 0xfffffff0
push edx
call [ SetWindowLongW@IAT ]
or eax 0xffffffff
mov [ esi + 0x1b8 ] eax
mov [ esi + 0x1bc ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ebx [ esi + 0x1c ]
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp + 0x20 ]
push ecx
push edx
push rw-data
call sub_441af5
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x20 ]
push eax
push ecx
call sub_4415d1
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x24
mov eax 0x1
mov [ edi + 0x7e ] ax
mov edx [ ebp + 0x20 ]
push ebx
push edx
call sub_4415d1
sub_4508f9
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x18c ] 0x0
push edi
mov edi [ ebp + 0x1c ]
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x24
cmp eax 0xffffffff
jne r-xdata
or eax 0x4010000
push eax
call sub_449175
cmp [ ebp + 0x28 ] 0xffffffff
jne r-xdata
xor eax eax
cmp edi 0xffffffff
jne r-xdata
mov [ ebp + 0x28 ] 0x0
cmp ebx 0xffffffff
jne r-xdata
mov edi 0x96
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push 0x1
push ecx
mov ecx [ ebp + 0x14 ]
push ebx
push edi
push edx
mov edx [ ebp + 0x28 ]
push ecx
push eax
push r--data
push r--data
push edx
push esi
call sub_4301f8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ebx 0x96
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push 0x20
push ebx
push edi
push edx
push ecx
or edi 0xffffffff
push edi
push eax
call [ SetWindowPos@IAT ]
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ esi + 0x18c ] edx
mov [ esi + 0x190 ] edi
mov [ esi + 0x194 ] edi
mov [ esi + 0x198 ] 0x0
mov [ esi + 0x19c ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x24
mov ecx 0x300
mov [ eax + 0x7e ] cx
sub_4509d8
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
test al 0xc
jne r-xdata
mov eax 0x4
or eax 0x2
push eax
call sub_449175
mov ecx [ ebp + 0x10 ]
push 0x0
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push r--data
push 0x0
push ebx
call sub_4301f8
mov esi eax
test esi esi
jne r-xdata
or eax 0x4
mov edx [ ebp + 0x14 ]
push edx
call sub_413bed
add esp 0x4
call sub_425a80
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp + 0x18 ]
push edx
push eax
push rw-data
call sub_441af5
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x14
push esi
call [ DestroyWindow@IAT ]
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ ebx ]
cmp ecx [ eax ]
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0x3
jne r-xdata
mov [ edi ] esi
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov eax [ eax ]
push 0x0
push eax
push 0x469
mov [ edi + 0x30 ] eax
mov edi [ SendMessageW@IAT ]
push esi
call edi
push 0x80017fff
push 0x0
push 0x465
push esi
call edi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x14
sub_450acc
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
push ebx
push esi
mov esi [ ebp + 0x28 ]
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_449175
mov ebx eax
cmp esi 0xffffffff
jne r-xdata
mov eax 0x1
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
push 0x0
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push ebx
push 0x0
push r--data
push esi
push edx
call sub_4301f8
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x405
push eax
call esi
test bl 0x1
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x24
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ edi ]
push 0x640000
push 0x0
push 0x406
push eax
call esi
mov ecx [ edi ]
push 0x0
push 0xa
push 0x414
push ecx
call esi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x24
mov edx 0x1
mov [ edi + 0x7e ] dx
sub_450b7c
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_449175
cmp edi 0xffffffff
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x20 ]
push 0x0
push ecx
mov ecx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push eax
push 0x0
push r--data
push edi
push edx
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
xor edi edi
mov edi [ SendMessageW@IAT ]
push 0xff000000
push 0x0
push 0x2001
push eax
call edi
mov eax [ esi ]
push 0xff000000
push 0x0
push 0x409
push eax
call edi
mov ecx [ esi ]
push 0x0
push 0x0
push 0x402
push ecx
call edi
mov edx [ esi ]
push 0x640000
push 0x0
push 0x401
push edx
call edi
mov eax [ esi ]
push 0x0
push 0x1
push 0x404
push eax
call edi
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x24
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x24
mov ecx 0x1
mov [ esi + 0x7e ] cx
sub_450c41
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x2c ]
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xe
push eax
call sub_449175
cmp esi 0xffffffff
jne r-xdata
mov eax 0x100
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
push 0x0
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push 0x0
push edx
push ecx
push eax
push 0x0
push r--data
push esi
push ebx
call sub_4301f8
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
or eax 0xffffffff
mov ecx 0x96
cmp [ ebp + 0x20 ] eax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov [ ebp + 0x20 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp + 0x24 ] ecx
mov edx [ ebp + 0x14 ]
lea eax [ ebp + 0x24 ]
push eax
lea ecx [ ebp + 0x20 ]
push ecx
push edx
push edi
call sub_43009d
test eax eax
je r-xdata
mov edx 0x300
mov [ edi + 0x7e ] dx
mov edx [ edi ]
push edx
call [ DestroyWindow@IAT ]
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
push 0x0
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ edi ]
push edx
push eax
push ecx
call [ MoveWindow@IAT ]
push 0x0
call [ CreateCompatibleDC@IAT ]
mov edx [ edi ]
push 0x0
push 0x0
push 0x173
push edx
mov esi eax
call [ SendMessageW@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
push 0x0
push 0x0
push esi
call [ GetPixel@IAT ]
push esi
mov edi eax
call [ DeleteDC@IAT ]
mov eax [ ebx ]
push 0xffffffec
push eax
call [ GetWindowLongW@IAT ]
test eax 0x80000
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov ecx [ ebx ]
push 0x1
push 0x0
push edi
push ecx
call [ SetLayeredWindowAttributes@IAT ]
sub_450d6b
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x24
push ebx
mov ebx [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x20 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_449175
cmp [ ebp + 0x2c ] 0xffffffff
jne r-xdata
xor eax eax
cmp edi 0xffffffff
jne r-xdata
mov [ ebp + 0x2c ] 0x200
cmp ebx 0xffffffff
jne r-xdata
xor edi edi
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
push 0x1
push ecx
mov ecx [ ebp + 0x18 ]
push ebx
push edi
push edx
mov edx [ ebp + 0x2c ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push r--data
push edx
push eax
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
xor ebx ebx
test edi edi
mov edi [ SendMessageW@IAT ]
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x1009
push eax
call edi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x1c ]
push 0x4
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ esi ]
push ecx
push edx
push 0x0
push eax
call [ SetWindowPos@IAT ]
test ebx ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov edx 0x300
mov [ esi + 0x7e ] dx
mov edx [ ebp + 0x14 ]
push 0x1
push 0x1
lea ecx [ ebp - 0x20 ]
push ecx
push edx
call sub_432a10
mov ecx [ esi ]
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1002
push ecx
call edi
cmp [ rw-data ] 0x0
jne r-xdata
sub_450e5d
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_449175
mov ebx eax
or eax 0xffffffff
cmp edi eax
jne r-xdata
mov eax 0x4
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov edi 0x200
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov [ ebp + 0x20 ] 0xc8
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push 0x1
push eax
mov eax [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push ebx
push 0x0
push r--data
push edi
push edx
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ ebp + 0x24 ] 0x14
mov ecx [ ebp + 0x14 ]
and bl 0x8
cmp bl 0x8
setne al
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_432a10
mov eax [ esi ]
add esp 0x10
lea edx [ ebp - 0x10 ]
push edx
push 0x0
push 0x1002
push eax
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov ecx 0x200
mov [ esi + 0x7e ] cx
sub_450f30
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x24 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10001
push eax
call sub_449175
cmp [ ebp + 0x2c ] 0xffffffff
jne r-xdata
mov eax 0xa00002
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp + 0x2c ] 0x200
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
push 0x1
push ecx
mov ecx [ ebp + 0x18 ]
push edi
push ebx
push edx
mov edx [ ebp + 0x2c ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push r--data
push edx
push eax
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi 0x96
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
push 0x0
push 0x180
push eax
call [ SendMessageW@IAT ]
mov ecx [ esi ]
push 0x0
push 0x0
push 0x186
push ecx
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ esi ]
push 0x0
push edi
push ebx
push eax
push ecx
push edx
call [ MoveWindow@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov edx 0x1
mov [ esi + 0x7e ] dx
sub_451006
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0x2c ]
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_449175
cmp esi 0xffffffff
jne r-xdata
mov eax 0x200042
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
mov esi 0x200
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp + 0x20 ] 0xc8
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x20 ]
push 0x1
push ecx
mov ecx [ ebp + 0x1c ]
push ebx
push edx
mov edx [ ebp + 0x18 ]
push ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push r--data
push esi
push eax
call sub_4301f8
mov [ edi ] eax
test eax eax
jne r-xdata
mov ebx 0x96
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ SendMessageW@IAT ]
push ecx
push 0x0
push 0x143
push eax
call esi
mov ecx [ edi ]
push 0x0
push 0x0
push 0x14e
push ecx
call esi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov edx 0x200
mov [ edi + 0x7e ] dx
sub_4510c5
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x9
push eax
call sub_449175
cmp [ esi + 0x69 ] 0x0
jne r-xdata
xor eax eax
cmp edi 0xffffffff
jne r-xdata
or eax 0x10000
mov [ esi + 0x69 ] 0x1
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x24 ]
push 0x1
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push ecx
push eax
push edx
push r--data
push edi
push esi
call sub_4301f8
mov [ ebx ] eax
test eax eax
jne r-xdata
xor edi edi
push 0x12
call [ GetSysColor@IAT ]
mov [ ebx + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov eax 0x200
mov [ ebx + 0x7e ] ax
sub_451159
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x2c ]
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
test al 0x7
jne r-xdata
mov eax 0x3
or eax 0x10000
push eax
call sub_449175
cmp esi 0xffffffff
jne r-xdata
or eax 0x3
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x24 ]
push 0x1
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push edx
push r--data
push esi
push eax
call sub_4301f8
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
push 0x12
call [ GetSysColor@IAT ]
mov [ edi + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x28
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x28
mov ecx 0x200
mov [ edi + 0x7e ] cx
sub_4511e7
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x2c ]
push edi
mov edi [ ebp + 0x24 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x20007
push eax
call sub_449175
cmp esi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
xor esi esi
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
push 0x1
push ecx
mov ecx [ ebp + 0x18 ]
push edi
push ebx
push edx
mov edx [ ebp + 0x14 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push edx
push r--data
push esi
push eax
call sub_4301f8
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi 0x96
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov ecx 0x1
mov [ esi + 0x7e ] cx
sub_451282
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x2c ]
push edi
mov edi [ ebp + 0x24 ]
cmp eax 0xffffffff
jne r-xdata
test eax 0x800
je r-xdata
mov eax 0x80
or eax 0x10000
and eax 0xfffffffb
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov esi 0x200
push eax
call sub_449175
cmp esi 0xffffffff
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
push 0x1
push ecx
mov ecx [ ebp + 0x18 ]
push edi
push ebx
push edx
mov edx [ ebp + 0x14 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push edx
push r--data
push esi
push eax
call sub_4301f8
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
pop ebx
test eax eax
jne r-xdata
mov edi 0x14
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
pop ebp
retn 0x28
mov al 0x1
pop ebp
retn 0x28
mov edx 0x200
mov [ ecx + 0x7e ] dx
sub_451321
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x24 ]
cmp eax 0xffffffff
jne r-xdata
test eax 0x800
je r-xdata
mov eax 0x3010c0
or eax 0x10004
or eax 0x4
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp + 0x2c ] 0x200
push eax
call sub_449175
cmp [ ebp + 0x2c ] 0xffffffff
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
push 0x1
push ecx
mov ecx [ ebp + 0x18 ]
push edi
push ebx
push edx
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x2c ]
push edx
push r--data
push eax
push ecx
call sub_4301f8
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi 0x96
push eax
call [ GetWindowTextLengthW@IAT ]
mov edx [ esi ]
push eax
push eax
push 0xb1
push edx
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov eax 0x1
mov [ esi + 0x7e ] ax
sub_4513e1
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x2c ]
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x100
push eax
call sub_449175
cmp esi 0xffffffff
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x24 ]
push 0x1
push ecx
mov ecx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push edx
push r--data
push esi
push eax
call sub_4301f8
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
push 0x12
call [ GetSysColor@IAT ]
mov [ edi + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x28
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x28
mov ecx 0x1
mov [ edi + 0x7e ] cx
sub_451465
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
mov esi [ ebp + 0x2c ]
xor bl bl
push edi
mov edi [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_449175
test al 0x1
je r-xdata
xor eax eax
cmp esi 0xffffffff
jne r-xdata
mov bl 0x1
xor eax 0x1
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push 0x1
push edi
push ecx
mov ecx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
push edx
push eax
mov eax [ ebp + 0x14 ]
push eax
push r--data
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4301f8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov esi 0x100
test bl bl
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x28
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ esi ]
push 0x0
push edi
push 0x401
push edx
call [ SendMessageW@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x28
mov ecx [ ebp + 0xc ]
mov eax 0x300
mov [ ecx + 0x7e ] ax
sub_451507
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push esi
push eax
mov eax [ edx + ecx * 4 ]
mov esi [ eax ]
add esi 0x10
call sub_40e0a0
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_451554
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
lea ecx [ esi + 0xd ]
cmp ecx 0xd
ja r-xdata
cmp eax 0xffffffff
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ rw-data ]
push edx
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
add esi esi
lea esi [ eax + esi * 8 + 0x15c ]
call sub_40e0a0
mov eax 0x1
pop esi
pop ebp
retn 0xc
sub_4515b4
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ ebp - 0x14 ]
call sub_401b10
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ edx ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
test [ ebx + 0x89 ] 0x1
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
fld [ ebp + 0x1c ]
fld st0
fld [ r--data ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
fmul [ r--data ]
call sub_425a80
mov eax [ edi + 0x7c ]
fstp st0
jmp r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov ecx [ edi + 0x80 ]
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_436565
test al al
je r-xdata
mov edx [ edi + 0x84 ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x1
push edx
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edi
call sub_440f0a
lea ecx [ ebp - 0x14 ]
call sub_402250
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x1c
lea ecx [ edi + 0x6c ]
push ecx
lea esi [ ebp - 0x14 ]
call sub_40e0a0
sub_4516ae
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
fld [ ebp + 0x1c ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
fld st0
fld [ r--data ]
push edi
mov edi [ edx ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x1c
cmp eax 0xffffffff
jne r-xdata
fstp st0
fmul [ r--data ]
call sub_425a80
mov [ edi + 0x7c ] eax
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
mov [ edi + 0x80 ] esi
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea esi [ edi + 0x6c ]
call sub_40e0a0
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x88 ] ecx
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x1c
mov [ edi + 0x84 ] ebx
sub_45174d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
push ecx
lea esi [ edi + 0x4 ]
mov [ edi ] eax
call sub_40e0a0
mov edx [ ebx + 0x14 ]
mov [ edi + 0x14 ] edx
mov eax [ ebx + 0x18 ]
mov [ edi + 0x18 ] eax
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45178a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x2c ] 0x0
push edi
lea edi [ eax + 0x2c ]
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ eax ]
push esi
push ecx
call sub_45174d
push edi
call sub_42ffda
test esi esi
je r-xdata
xor al al
pop edi
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
pop esi
mov [ rw-data ] 0x0
mov al 0x1
pop edi
pop ebp
retn 0x8
push esi
call sub_44420e
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x64
jge r-xdata
inc [ rw-data ]
push 0x0
call [ Sleep@IAT ]
xor al al
pop edi
pop ebp
retn 0x8
sub_451808
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push 0x24
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_44c29d
mov edi eax
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax eax
lea ecx [ ebx + eax * 8 + 0x15c ]
push ecx
lea esi [ edi + 0x4 ]
mov [ ebp + 0x10 ] edi
call sub_40e0a0
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ edi ] edx
mov eax [ ebx ]
mov edx [ ebp + 0x18 ]
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
add ecx 0x2c
push ecx
mov [ edi + 0x20 ] edx
call sub_434137
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_451877
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x1c8 ]
push edi
xor edi edi
cmp eax edi
jle r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push ebx
call sub_441af5
test al al
je r-xdata
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push ecx
push eax
mov [ ecx + 0x1c8 ] edi
call sub_4152bb
add esp 0x4
push eax
mov ecx ebx
call sub_451877
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0x24
call sub_4115d7
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebx + 0x74 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push esi
add eax 0x10
push eax
lea esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_40e0a0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edi ] ecx
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ edi + 0x18 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
add ebx 0x2c
mov [ edi + 0x1c ] edx
push ebx
mov [ edi + 0x20 ] eax
call sub_434137
pop esi
push eax
call sub_44c29d
mov edi eax
sub_451930
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x68 ]
call sub_408f40
lea ecx [ edi + 0x50 ]
call sub_402250
lea ecx [ edi + 0x20 ]
call sub_402250
lea ecx [ edi + 0x10 ]
call sub_402250
pop edi
pop esi
pop ebp
retn 0x4
sub_45195e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_451930
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_45197b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
push edi
lea edi [ ebx * 4 ]
mov ecx [ edi + eax ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x74 ]
mov eax [ edi + edx ]
mov [ eax ] 0x0
dec [ esi + 0x80 ]
cmp ebx [ esi + 0x84 ]
jne r-xdata
push eax
call sub_45195e
cmp [ esi + 0x78 ] 0x3
jbe r-xdata
cmp ebx 0x3
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
lea edi [ esi + 0x70 ]
nop
mov [ esi + 0x84 ] ebx
mov eax [ esi + 0x74 ]
add eax edi
lea esp [ esp ]
push edi
call sub_42ff9f
cmp [ esi + 0x78 ] 0x3
ja r-xdata
dec ebx
sub eax 0x4
cmp ebx 0x3
jge r-xdata
mov edx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 - 0x4 ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx ] 0x0
jne r-xdata
sub_451a0d
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
or edi 0xffffffff
lea ecx [ esi + 0x10 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_40bc70
lea ecx [ esi + 0x20 ]
call sub_40bc70
lea ecx [ esi + 0x50 ]
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] ebx
call sub_40bc70
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x70 ] 0x1
mov [ esi + 0x7c ] di
mov [ esi + 0x80 ] di
mov [ esi + 0x82 ] di
mov [ esi + 0x84 ] di
mov [ esi + 0x86 ] di
mov [ esi + 0x94 ] edi
pop edi
mov [ esi + 0x78 ] ebx
mov [ esi + 0x90 ] bl
mov [ esi + 0x8b ] 0xff
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_451aa8
push ebp
mov ebp esp
sub esp 0x124
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push ecx
call sub_44a4f7
lea edx [ ebp - 0x24 ]
push edx
push edi
lea eax [ ebp - 0x124 ]
push 0x80
push eax
call sub_416345
add esp 0x10
test eax eax
jne r-xdata
mov edi r--data
call sub_401b10
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
lea edi [ ebp - 0x124 ]
call sub_401b10
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
xor ecx ecx
mov [ ebp - 0x124 ] cx
sub_451b19
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x24
lea eax [ ebp - 0x24 ]
push eax
push ecx
call sub_44a4f7
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x18 ]
inc eax
mov esp ebp
pop ebp
retn 0x4
sub_451b42
push ebp
mov ebp esp
sub esp 0x48
cmp [ rw-data ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] 0x0
mov [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push ebx
add eax ecx
call sub_403c90
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_408f40
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea esi [ ebp - 0x24 ]
call sub_408f40
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax ecx
call sub_403c90
mov edx 0x3
mov [ eax + 0x48 ] dx
mov [ eax + 0x50 ] ebx
mov [ eax + 0xa8 ] dx
call [ GetLastError@IAT ]
mov edx [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ edx + 0xb0 ] eax
mov eax 0x3
mov [ edx + 0xb8 ] ax
mov eax [ ecx + 0xf4 ]
push eax
call sub_4348aa
mov [ edx + 0xc0 ] eax
test esi esi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40bc70
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edi [ VariantCopy@IAT ]
mov ecx 0x8
mov [ ebp - 0x14 ] cx
lea ecx [ ebp - 0x14 ]
push ecx
add edx 0x78
push edx
mov [ ebp - 0xc ] eax
call edi
mov ecx [ rw-data ]
mov edx [ esi + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
add ecx 0x68
push ecx
mov [ ebp - 0xc ] edx
call edi
mov ecx [ rw-data ]
mov edx [ esi + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
add ecx 0x88
push ecx
mov [ ebp - 0xc ] edx
call edi
mov eax [ rw-data ]
mov edx 0x3
mov [ eax + 0x98 ] dx
mov ecx [ esi + 0x10 ]
mov [ eax + 0xa0 ] ecx
mov [ eax + 0xc8 ] dx
movzx ecx [ esi ]
test cx cx
je r-xdata
mov eax [ rw-data ]
add eax 0x58
push eax
call [ VariantClear@IAT ]
mov eax [ ebp + 0x14 ]
mov edx [ rw-data ]
mov ecx 0x8
push eax
mov [ edx + 0x58 ] cx
call [ SysAllocString@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ ecx + 0x60 ] eax
mov eax [ edx + 0x20 ]
call eax
lea ecx [ ebp - 0x34 ]
call sub_402250
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_44af6c
push eax
lea esi [ ebp - 0x34 ]
call sub_40e0a0
lea ecx [ ebp - 0x44 ]
call sub_402250
mov edx [ ebp - 0x34 ]
mov [ ebp + 0x14 ] edx
mov esi [ esi + 0x1c ]
mov esi ecx
jmp r-xdata
mov [ ebp + 0x10 ] esi
mov [ eax + 0xd0 ] esi
test esi esi
je r-xdata
sub_451d2b
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
lea edx [ ebp + 0x8 ]
push edx
xor ecx ecx
push 0x800
mov [ ebx + 0xc ] ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ eax ]
push 0x0
push eax
mov eax [ ecx + 0x10 ]
mov [ ebx ] 0x0
call eax
mov esi eax
test esi esi
jns r-xdata
push 0x0
lea edx [ ebp + 0x8 ]
push edx
call sub_430edf
test al al
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
test esi esi
js r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_430ead
pop edi
pop esi
mov eax 0x80004001
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x28 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
push edx
push 0x1
lea edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0xffffffff
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
jns r-xdata
test [ ecx + 0x36 ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
xor esi esi
cmp dx [ eax + 0x2c ]
jae r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
lea edx [ ebp - 0xc ]
push edx
xor esi esi
mov [ ebp - 0xc ] esi
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x4c ]
call eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push 0xffffffff
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
mov eax [ ebp - 0x4 ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
movzx edx si
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov edi eax
test edi edi
js r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
cmp cx [ edx + 0x2c ]
jae r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x10 ] edi
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] 0x0
mov edx [ eax ]
mov edx [ edx + 0x38 ]
push ecx
push eax
call edx
test eax eax
jns r-xdata
movzx ecx [ eax + 0x18 ]
cmp cx 0x20
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x4c ]
push ecx
push eax
call edx
lea eax [ ebp + 0x8 ]
push eax
call sub_430ead
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x10 ] 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
movzx edx si
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test edi edi
js r-xdata
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_441e8d
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
test esi esi
jns r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_430ead
xor edx edx
mov [ ebx ] 0x1
mov [ ebp - 0xc ] edi
cmp dx cx
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x50 ]
push ecx
call eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x50 ]
call eax
mov ecx [ ebp - 0x8 ]
inc esi
mov [ ebp - 0x4 ] 0x0
cmp si [ ecx + 0x2c ]
jb r-xdata
mov edx [ ecx ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0xc ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
push edx
push eax
mov eax [ ecx + 0x30 ]
call eax
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x10 ] 0x3
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_430ead
lea ecx [ ebp - 0xc ]
push ecx
call sub_430ead
lea edx [ ebp + 0x8 ]
push edx
call sub_430ead
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + 0x24 ]
lea edx [ ecx - 0x16 ]
cmp edx 0x3
ja r-xdata
lea esi [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x50 ]
push ecx
push eax
call edx
mov eax [ ebp - 0x8 ]
inc esi
mov [ ebp - 0x4 ] 0x0
cmp si [ eax + 0x2c ]
jb r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0xc ]
push edx
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov edx [ eax + 0x14 ]
mov [ ebx + 0xc ] cx
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x4 ] ecx
mov cx [ eax + 0x18 ]
mov [ ebx + 0xe ] cx
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] edx
mov edx [ ecx ]
push eax
mov eax [ edx + 0x50 ]
push ecx
call eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_430ead
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45212b ]
cmp [ esi ] 0x1b
jne r-xdata
mov edx [ ecx ]
mov ebx 0x4000
or bx [ edx + 0x4 ]
mov [ esi ] bx
mov ebx [ ebp + 0x14 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call [ SysFreeString@IAT ]
mov ecx 0x3
jmp r-xdata
mov ecx 0x13
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ecx 0xa
cmp [ esi ] 0x1d
jne r-xdata
mov edx [ ecx ]
mov ebx 0x2000
or bx [ edx + 0x4 ]
mov [ esi ] bx
mov ebx [ ebp + 0x14 ]
mov edx [ eax + 0x8 ]
mov cx [ edx + edi + 0xc ]
movsx edx [ eax + 0x18 ]
mov [ esi + 0x2 ] cx
mov ecx [ ebp - 0xc ]
inc ecx
add edi 0x10
add esi 0x4
mov [ ebp - 0xc ] ecx
cmp ecx edx
jl r-xdata
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_44a545
mov [ esi ] ax
mov eax [ ebp - 0x4 ]
add esp 0x8
mov ecx [ eax + 0x8 ]
movzx edx [ ecx + edi + 0x4 ]
add ecx edi
mov [ esi ] dx
cmp edx 0x1a
jne r-xdata
sub_45213b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
push ebx
call sub_413530
add esp 0x4
mov edi eax
push esi
mov [ esi + 0x4 ] edi
call sub_4370df
test al al
je r-xdata
push esi
call sub_44c8cd
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push esi
call sub_44c901
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_434a13
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
inc ecx
push ecx
push ebx
push edx
call sub_410e60
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4521b3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_442a17
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x4 ] ecx
sub_4521f7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_44ac82
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_452214
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
inc [ eax ]
movzx edx [ edi + 0x30 ]
mov [ esi + 0x30 ] dl
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x40 ] eax
inc [ eax ]
lea eax [ edi + 0x44 ]
push eax
lea ecx [ esi + 0x44 ]
push ecx
call sub_4421bd
mov edx [ edi + 0x54 ]
lea eax [ edi + 0x58 ]
push eax
lea ecx [ esi + 0x58 ]
push ecx
mov [ esi + 0x54 ] edx
call sub_44ad24
movzx edx [ edi + 0xd0 ]
mov [ esi + 0xd0 ] dl
mov eax [ edi + 0xd4 ]
mov [ esi + 0xd4 ] eax
mov ecx [ edi + 0xd8 ]
mov [ esi + 0xd8 ] ecx
movzx edx [ edi + 0xdc ]
pop edi
mov [ esi + 0xdc ] dl
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4522f8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0xe0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_452214
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_45233c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4522e2
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_452359
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_45233c
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x4 ] ecx
sub_45239d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ eax + 0x8 ]
push eax
mov [ esi + 0x4 ] ecx
call sub_45233c
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
dec [ esi + 0x8 ]
mov [ esi ] 0x0
mov [ eax + 0x4 ] 0x0
dec [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_4523db
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ ebp + 0xc ]
push 0xc
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_4522f8
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_4522f8
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_452464
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0xd4 ]
push eax
call sub_4426a9
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x4
sub_452492
push ebp
mov ebp esp
sub esp 0x27c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
call sub_401b10
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] eax
mov edi r--data
mov eax esi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
call sub_40d200
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x278 ]
push eax
push ecx
mov bl 0x1
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ FindClose@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_402250
lea ecx [ ebp - 0x10 ]
call sub_402250
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x18
nop
xor bl bl
cmp eax 0xb
jne r-xdata
lea eax [ ebp - 0x24c ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x278 ]
push ecx
push edx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24c ]
push r--data
push ecx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
call sub_442a83
cmp eax 0x1
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x24 ]
push edx
lea esi [ ebp - 0x10 ]
call sub_40e0a0
lea edi [ ebp - 0x24c ]
mov eax esi
call sub_40d200
test [ ebp - 0x278 ] 0x10
je r-xdata
mov ecx [ ebp - 0x25c ]
mov eax [ ebp + 0xc ]
xor edx edx
or edx [ ebp - 0x258 ]
xor esi esi
or ecx esi
add [ eax ] edx
adc [ eax + 0x4 ] ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
mov esi [ ebp + 0x14 ]
je r-xdata
mov eax [ ebp + 0x10 ]
add [ eax ] 0x1
adc [ eax + 0x4 ] esi
cmp [ ebp + 0x1c ] 0x0
je r-xdata
add [ esi ] 0x1
adc [ esi + 0x4 ] 0x0
mov edi r--data
lea eax [ ebp - 0x10 ]
call sub_40d200
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
push esi
push edx
push eax
push ecx
mov ecx [ ebp - 0x14 ]
call sub_452492
mov bl al
test bl bl
je r-xdata
jmp r-xdata
sub_452620
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_44b877
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_452653
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_45263d
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_452670
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x20 ]
call sub_408f40
lea esi [ edi + 0x10 ]
call sub_408f40
pop edi
pop esi
pop ebp
retn 0x4
sub_45268e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_452670
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4526ab
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x38 ]
call sub_402250
lea ecx [ esi + 0x18 ]
call sub_402250
add esi 0x8
call sub_408f40
pop esi
pop ebp
retn 0x4
sub_4526cf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4526ab
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4526ec
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x1
mov [ esi + 0x14 ] eax
call sub_40bc70
lea ecx [ esi + 0x38 ]
call sub_40bc70
mov eax esi
pop esi
pop ebp
retn 0x4
sub_452719
push ebp
mov ebp esp
sub esp 0x430
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0x0
pop edi
pop esi
mov eax 0x6
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esi ]
add [ ebp - 0x4 ] edi
push ecx
push edi
lea edx [ ebp + 0x8 ]
push 0x4
push edx
call sub_414d04
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
push eax
xor edi 0xadbc
lea ebx [ edi + edi ]
push ebx
lea ecx [ ebp - 0x220 ]
push 0x1
push ecx
call sub_414d04
add esp 0x20
add edi 0xb33f
push edi
push ebx
lea edx [ ebp - 0x220 ]
push edx
call sub_44afef
lea ecx [ ebp - 0x220 ]
push ecx
lea edx [ ebp - 0x430 ]
xor eax eax
push edx
mov [ ebp + ebx - 0x220 ] ax
call sub_411567
mov eax [ esi ]
push eax
push 0x1
lea ecx [ ebp + 0x8 ]
push 0x4
push ecx
call sub_414d04
mov edi [ ebp + 0x8 ]
mov edx [ esi ]
push edx
xor edi 0xf820
lea ebx [ edi + edi ]
push ebx
lea eax [ ebp - 0x220 ]
push 0x1
push eax
call sub_414d04
add esp 0x28
add edi 0xf479
push edi
push ebx
lea ecx [ ebp - 0x220 ]
push ecx
call sub_44afef
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x220 ]
push eax
xor edx edx
push ecx
mov [ ebp + ebx - 0x220 ] dx
call sub_411567
mov edi [ ebp + 0xc ]
lea edx [ ebp - 0x430 ]
push edi
push edx
call sub_41313c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push r--data
push edi
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x1
push 0x1
push eax
call sub_4150d1
mov ecx [ esi ]
add esp 0xc
push ecx
push 0x1
lea edx [ ebp - 0x10 ]
push 0x4
push edx
call sub_414d04
mov eax [ ebp - 0x10 ]
xor eax 0x87bc
mov [ ebp - 0x10 ] eax
add eax 0x18
push 0x1
push eax
mov eax [ esi ]
push eax
call sub_4150d1
add esp 0x1c
jmp r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
push eax
push 0x4
mov edi 0x1
lea ecx [ ebp - 0xc ]
push edi
push ecx
call sub_414d04
add esp 0x10
push 0x18ee
push 0x4
lea edx [ ebp - 0xc ]
push edx
call sub_44afef
lea eax [ ebp - 0xc ]
push r--data
push eax
mov [ ebp - 0x8 ] 0x0
call sub_414d30
add esp 0x8
test eax eax
jne r-xdata
sub_4528bd
push ebp
mov ebp esp
sub esp 0x684
xor eax eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor ecx ecx
mov [ ebp - 0x470 ] eax
mov [ ebp - 0x46c ] eax
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x464 ] eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x44c ] cx
mov ecx [ esi ]
push eax
xor edx edx
push ecx
mov [ ebp - 0x242 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_4150d1
mov eax [ ebp + 0xc ]
add esp 0xc
lea edx [ ebp - 0x680 ]
push edx
push eax
push esi
call sub_452719
test eax eax
je r-xdata
mov ecx [ esi ]
push ecx
push 0x1
lea edx [ ebp + 0x17 ]
push 0x1
push edx
call sub_414d04
mov eax [ esi ]
push eax
push 0x1
lea ecx [ ebp + 0x8 ]
push 0x4
push ecx
call sub_414d04
mov edx [ esi ]
mov edi [ ebp + 0x8 ]
push edx
push 0x1
lea eax [ ebp + 0x8 ]
push 0x4
push eax
xor edi 0x87bc
call sub_414d04
mov edx [ esi ]
mov ecx [ ebp + 0x8 ]
push edx
push 0x1
lea eax [ ebp + 0x8 ]
xor ecx 0x87bc
push 0x4
push eax
mov [ ebx ] ecx
call sub_414d04
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
add esp 0x40
push 0x1
xor eax 0xa685
push 0x10
push ecx
mov [ ebp - 0x8 ] eax
call sub_4150d1
mov edx [ ebx ]
add esp 0xc
push edx
call sub_4135bb
add esp 0x4
push edi
mov [ ebp + 0xc ] eax
call sub_4135bb
add esp 0x4
mov ebx eax
mov eax [ esi ]
push eax
push 0x1
push edi
push ebx
call sub_414d04
mov ecx [ esi + 0x8 ]
add esp 0x10
add ecx 0x2477
push ecx
push edi
push ebx
call sub_44afef
push edi
push ebx
lea edx [ ebp - 0x4 ]
push edx
call sub_432229
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x17 ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_413748
add esp 0x4
push ebx
call sub_413748
add esp 0x4
mov eax 0xa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
push ecx
call sub_413748
mov [ ebp + 0xc ] ebx
xor eax eax
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x464 ] eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x1c ] eax
mov eax 0x1
xor edx edx
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x44c ] dx
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x470 ]
xor ecx ecx
push eax
mov [ ebp - 0x242 ] cx
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x470 ] edx
call sub_44b1a9
push ebx
call sub_413748
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add esp 0x4
pop edi
pop esi
mov [ edx ] eax
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_452ac7
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x111bc
call sub_422240
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea edx [ esp + 0x6b8 ]
xor eax eax
xor ecx ecx
push edx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ax
mov [ esp + 0x272 ] cx
mov [ esp + 0x498 ] ebx
call sub_442c5a
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push ebx
push eax
push ecx
mov [ esp + 0x2c ] 0x1
call sub_4150d1
add esp 0xc
push r--data
push edi
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0xba8 ]
push ecx
push edi
push esi
call sub_452719
test eax eax
jne r-xdata
lea edx [ esp + 0xba8 ]
push edx
push edi
push esi
call sub_452719
test eax eax
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x17 ]
push 0x1
push eax
call sub_414d04
mov ecx [ esi ]
push ecx
push 0x1
lea edx [ esp + 0x28 ]
push 0x4
push edx
call sub_414d04
mov eax [ esi ]
mov edi [ esp + 0x30 ]
push eax
push 0x1
lea ecx [ esp + 0x38 ]
push 0x4
xor edi 0x87bc
push ecx
mov [ esp + 0x44 ] edi
call sub_414d04
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x48 ]
push 0x4
push eax
call sub_414d04
mov ecx [ esi ]
mov eax [ esp + 0x50 ]
add esp 0x40
push ecx
push 0x1
lea edx [ esp + 0x3c ]
xor eax 0xa685
push 0x4
push edx
mov [ esp + 0x38 ] eax
call sub_414d04
mov eax [ esi ]
push eax
push 0x1
lea ecx [ esp + 0x48 ]
push 0x4
push ecx
call sub_414d04
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x64 ]
push 0x4
push eax
call sub_414d04
mov ecx [ esi ]
push ecx
push 0x1
lea edx [ esp + 0x70 ]
push 0x4
push edx
call sub_414d04
add esp 0x40
lea eax [ esp + 0x4a8 ]
push eax
call sub_431e1f
lea ecx [ esp + 0x4a8 ]
push r--data
push ecx
call sub_4149c2
add esp 0x8
mov [ esp + 0x18 ] eax
cmp eax ebx
jne r-xdata
lea eax [ esp + 0x9a0 ]
push eax
lea ecx [ esp + 0xdbc ]
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esp + 0xfc8 ]
push edx
lea eax [ esp + 0x34 ]
push eax
push ecx
call sub_413a0e
add esp 0x14
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x794 ]
push eax
call sub_411567
lea ecx [ esp + 0xfc8 ]
push ecx
lea edx [ esp + 0x79c ]
push edx
call sub_411536
lea eax [ esp + 0x9b0 ]
push eax
lea ecx [ esp + 0xdcc ]
push ecx
lea edx [ esp + 0xfd8 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0xbc8 ]
push ecx
call sub_413a0e
add esp 0x24
lea edx [ esp + 0xdb8 ]
push edx
lea eax [ esp + 0x794 ]
push eax
call sub_411536
lea ecx [ esp + 0x9a8 ]
push ecx
lea edx [ esp + 0x79c ]
push edx
call sub_411536
lea eax [ esp + 0x7a0 ]
add esp 0x10
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
add edx 0x2477
push edx
lea eax [ esp + 0x6bc ]
push eax
call sub_442bb4
xor eax eax
cmp edi ebx
jle r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esp + 0x18 ]
push ecx
call sub_414a46
mov edx [ esp + 0x24 ]
add esp 0x4
cmp [ esp + 0x28 ] edx
je r-xdata
jmp r-xdata
cmp [ esp + 0xf ] 0x1
jne r-xdata
lea eax [ esp + 0x4a8 ]
push eax
call [ DeleteFileW@IAT ]
mov eax 0xa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ eax + 0x10000 ]
cmp ecx edi
jle r-xdata
mov eax [ ebp + 0x10 ]
push ebx
push eax
lea ecx [ esp + 0x4b0 ]
push ecx
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
xor ecx ecx
lea eax [ esp + 0x4a8 ]
mov [ esp + 0x64 ] cx
push eax
lea ecx [ esp + 0x44 ]
xor edx edx
push ecx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x276 ] dx
mov [ esp + 0x49c ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
call sub_431e9e
mov edx [ ebp + 0x10 ]
push edx
lea eax [ esp + 0x44 ]
push eax
call sub_431e71
lea ecx [ esp + 0x40 ]
push ecx
call sub_44b1a9
test eax eax
je r-xdata
mov edi 0x10000
sub edi eax
jmp r-xdata
lea eax [ esp + 0x4a8 ]
push eax
call [ DeleteFileW@IAT ]
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push eax
call sub_431ddb
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x4a8 ]
push edx
call [ DeleteFileW@IAT ]
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x4a8 ]
push edx
call [ DeleteFileW@IAT ]
mov eax 0xb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
lea edx [ esp + 0x11cc ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_432229
mov ecx [ esp + 0x18 ]
push ecx
push edi
lea edx [ esp + 0x11d0 ]
push 0x1
push edx
call sub_4142b6
mov eax [ esp + 0x24 ]
add esp 0x10
cmp [ esp + 0x24 ] eax
jl r-xdata
lea ecx [ esp + 0x6b8 ]
push ecx
call sub_442c29
mov ecx [ esp + 0x1c ]
xor [ esp + ecx + 0x11c8 ] al
inc ecx
mov [ esp + 0x1c ] ecx
cmp ecx edi
jl r-xdata
mov edx [ esi ]
push edx
add eax edi
push edi
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x11d0 ]
push 0x1
push eax
call sub_414d04
add esp 0x10
mov [ esp + 0x1c ] ebx
cmp edi ebx
jle r-xdata
mov edi eax
mov eax [ esp + 0x24 ]
sub_452f05
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_40baa0
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
sub_452f37
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
dec eax
push edi
mov edi [ ebp + 0xc ]
cmp eax 0xa
ja r-xdata
call sub_403d80
pop edi
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
movzx eax [ eax + lookup_table_45307f ]
jmp [ eax * 4 + jump_table_453067 ]
mov eax [ edi + 0x8 ]
cmp eax 0x1
jne r-xdata
push esi
call sub_452f05
mov ecx edi
call sub_40baa0
fsubr [ esi ]
fstp [ esi ]
call sub_403d80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x8 ] 0x1
mov ebx [ esi ]
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ esi ]
mov eax [ edi ]
mov edi ecx
sub edi eax
cdq
mov [ ebp + 0xc ] eax
mov eax ecx
mov [ ebp + 0x8 ] edx
cdq
mov ecx eax
sub ecx [ ebp + 0xc ]
mov ebx edx
sbb ebx [ ebp + 0x8 ]
mov eax edi
cdq
cmp eax ecx
jne r-xdata
push edi
call sub_443006
sub [ esi ] eax
sbb [ esi + 0x4 ] edx
call sub_403d80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp eax 0x2
jne r-xdata
push edi
call sub_443006
sub ebx eax
mov [ esi ] ebx
mov ecx edi
call sub_40c650
sub ebx eax
mov [ esi ] ebx
call sub_403d80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ esi ]
cdq
sub eax [ edi ]
sbb edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] 0x2
call sub_403d80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ esi + 0x8 ] 0x2
mov [ esi ] ecx
mov [ esi + 0x4 ] ebx
call sub_403d80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp edx ebx
je r-xdata
mov [ esi ] edi
call sub_403d80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45308a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
call sub_408f40
push 0x18
mov [ esi + 0x8 ] 0xa
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_44b8a3
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4530e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
call sub_408f40
push 0x10
mov [ ebx + 0x8 ] 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ecx ]
mov esi eax
call sub_401b10
pop edi
mov [ ebx + 0xc ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
sub_453132
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
call sub_408f40
push 0x8
call sub_4115d7
add esp 0x4
mov [ esi ] eax
mov [ eax ] edi
test edi edi
je r-xdata
push 0x1
call sub_4115d7
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
mov ecx [ esi ]
mov [ esi + 0x8 ] 0xb
mov eax [ ecx + 0x4 ]
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax ]
push ecx
call sub_4115d7
mov edx [ esi ]
mov [ edx + 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push ecx
push 0x0
push edx
call sub_412f40
mov ecx [ esi ]
add esp 0x10
mov [ esi + 0x8 ] 0xb
mov eax [ ecx + 0x4 ]
pop edi
pop esi
pop ebp
retn 0x8
sub_4531b1
push ebp
mov ebp esp
sub esp 0x94
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp eax 0x4
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec eax
push esi
push edi
cmp eax 0xa
ja r-xdata
xor ecx ecx
mov [ ebp - 0x94 ] cx
jmp [ eax * 4 + jump_table_453385 ]
xor eax eax
pop edi
mov [ ebx + 0xc ] eax
pop esi
lea edi [ ebp - 0x94 ]
mov esi eax
call sub_401b10
pop edi
pop esi
mov [ ebx + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push 0xa
lea eax [ ebp - 0x94 ]
push eax
push ecx
call sub_41305c
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
push 0xa
lea edx [ ebp - 0x94 ]
push edx
push eax
push ecx
call sub_413109
add esp 0x10
jmp r-xdata
fld [ ebx ]
sub esp 0x8
fstp [ esp ]
lea edx [ ebp - 0x94 ]
push r--data
push edx
call sub_41329b
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x94 ]
push r--data
push ecx
call sub_41329b
add esp 0xc
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov edx [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
call sub_44b3f6
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x94 ]
push ecx
call sub_411567
add esp 0x8
lea ecx [ ebp - 0x10 ]
call sub_402250
jmp r-xdata
mov edx [ ebx ]
mov esi [ edx ]
xor ecx ecx
lea eax [ esi * 4 + 0x6 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ ebx ]
add esp 0x4
cmp [ eax ] 0x0
je r-xdata
mov esi ebx
call sub_403d80
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push r--data
push eax
call sub_411567
add esp 0x8
jmp r-xdata
lea edx [ ebp - 0x94 ]
push r--data
push edx
call sub_411567
add esp 0x8
jmp r-xdata
xor eax eax
mov [ edi ] ax
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push ecx
push edi
push edx
call sub_432dfc
add esp 0xc
jmp r-xdata
xor eax eax
push edi
mov [ ebx + 0xc ] eax
call sub_4111dc
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi eax
call sub_401b10
push edi
mov [ ebx + 0xc ] eax
call sub_4111dc
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi ebx
call sub_403d80
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
sub_4533b1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx + 0x4 ]
pop esi
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx + 0x4 ]
pop esi
pop ebp
retn 0x4
push esi
call sub_4531b1
mov eax [ esi + 0xc ]
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn 0x4
sub_4533eb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
mov eax [ esi + 0xc ]
pop esi
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
jne r-xdata
push esi
call sub_4531b1
sub_45340c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
pop esi
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx ]
pop esi
pop ebp
retn 0x4
push esi
call sub_4531b1
mov eax [ esi + 0xc ]
mov eax [ eax ]
pop esi
pop ebp
retn 0x4
sub_453443
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov [ edi ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x20
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
push eax
call sub_44a801
jmp r-xdata
test ebx ebx
je r-xdata
push ebx
mov esi eax
mov [ edi ] eax
call sub_40e0a0
mov eax [ edi ]
mov ecx [ ebx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov edx [ edi ]
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx [ ebp - 0x4 ]
call sub_453443
mov edi [ edi ]
mov ebx [ ebx + 0x1c ]
add edi 0x1c
jmp r-xdata
sub_4534c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
push eax
call sub_403ea0
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop esi
pop ebp
retn 0x8
sub_4534e3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_4534c0
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0xc
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
and edx 0xff00
mov [ ecx ] edx
pop ebp
retn 0xc
sub_453512
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
test eax eax
jns r-xdata
mov eax [ ecx ]
push eax
push esi
mov ecx esi
call sub_453443
mov eax esi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x4 ] 0x0
sub_453545
push esi
mov esi ecx
push edi
push esi
mov [ esi ] r--data
call sub_44b63b
mov eax [ esi + 0x2c ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
mov ecx [ esi + 0x30 ]
push ecx
call edi
mov edx [ esi + 0x8 ]
push edx
call sub_4111dc
add esp 0x4
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
pop edi
mov [ esi ] r--data
pop esi
retn
sub_453586
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x44 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x1
test eax eax
je r-xdata
push esi
call sub_432704
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_4111dc
add esp 0x4
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
add esi 0x18
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_408f40
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x28 ] 0x0
sub_45360e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push ebx
call sub_443833
test al al
je r-xdata
mov ecx ebx
call sub_40c650
mov [ esi ] eax
cmp [ edi ] 0x0
mov [ esi ] 0x0
jle r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] 0x2
xor eax eax
pop ebx
pop ebp
retn 0x10
test esi esi
js r-xdata
mov esi [ esi ]
cmp esi [ edi ]
jge r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
shl eax 0x5
mov eax [ eax + ecx + 0xc ]
push eax
push ebx
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
shl esi 0x5
mov eax [ esi + eax ]
add eax [ edi + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
inc [ esi ]
mov edx [ esi ]
cmp edx [ edi ]
jl r-xdata
jmp r-xdata
sub_453694
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
lea eax [ ebx + 0xc ]
push eax
lea esi [ edi + 0xc ]
mov [ edi + 0x8 ] edx
call sub_40e0a0
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4536cb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_44b960
test al al
jne r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x4
push esi
call sub_443845
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
sub_4536f7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_4026f0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
push ecx
call [ CharLowerBuffW@IAT ]
pop esi
pop ebp
retn 0x4
sub_453717
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x9 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
push ebx
push 0xc
call sub_4115d7
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx [ edi ]
mov eax [ esi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
inc [ esi ]
pop edi
mov [ esi + 0x9 ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
xor ebx ebx
mov [ ebx + 0x8 ] eax
inc [ esi ]
mov [ esi + 0x4 ] ebx
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
push edi
push ebx
call sub_453512
mov eax [ esi + 0x4 ]
mov [ ebx + 0x8 ] eax
inc [ esi ]
mov [ esi + 0x4 ] ebx
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
sub_45377f
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x10
ja r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
movzx eax [ eax + lookup_table_45382b ]
jmp [ eax * 4 + jump_table_453817 ]
push rw-data
call sub_430e6a
test al al
jne r-xdata
push esi
push edi
push rw-data
jmp r-xdata
push rw-data
call sub_430e6a
push esi
push edi
test al al
je r-xdata
push esi
push edi
push rw-data
push esi
push edi
push rw-data
call sub_432929
push eax
call sub_4534e3
test eax eax
jne r-xdata
call sub_4534e3
test eax eax
je r-xdata
push rw-data
call sub_432929
push eax
jmp r-xdata
push rw-data
jmp r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0xc
sub_45383c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push rw-data
mov [ ebp + 0x8 ] 0x0
call sub_430e6a
test al al
jne r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push rw-data
call sub_4534e3
neg eax
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
push esi
push rw-data
call sub_432929
push eax
call sub_4534e3
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn 0x4
sub_453893
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xa54
lea eax [ ebp - 0x440 ]
call sub_410120
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x234 ]
call sub_410120
lea eax [ ebp - 0x440 ]
push eax
call sub_433998
add esp 0x4
test al al
jne r-xdata
lea ecx [ ebp - 0x234 ]
push ebx
push ecx
call sub_433998
add esp 0x4
xor ebx ebx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x234 ]
push eax
lea ecx [ ebp - 0x440 ]
push ecx
call sub_433908
add esp 0x8
test al al
lea edx [ ebp - 0x234 ]
lea eax [ ebp - 0x440 ]
je r-xdata
cmp [ ebp + 0x10 ] bl
je r-xdata
push edx
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
push 0x1
push edx
push eax
call sub_44bbd2
add esp 0xc
test al al
je r-xdata
xor al al
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x234 ]
push edx
lea eax [ ebp - 0x440 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x440 ]
push ecx
call sub_4111c1
xor edx edx
mov [ ebp + eax * 2 - 0x43e ] dx
lea eax [ ebp - 0x234 ]
push eax
call sub_4111c1
xor ecx ecx
lea edx [ ebp - 0x440 ]
mov [ ebp + eax * 2 - 0x232 ] cx
mov [ ebp - 0x18 ] edx
add esp 0x8
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x234 ]
mov ecx 0x614
push edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xa ] ebx
mov [ ebp - 0x6 ] ebx
mov [ ebp - 0xe ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] cx
call [ SHFileOperationW@IAT ]
test eax eax
sete al
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x440 ]
push 0x1
push ecx
call sub_44bb30
add esp 0x8
test al al
setne al
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x644 ]
push edx
lea eax [ ebp - 0x848 ]
push eax
lea ecx [ ebp - 0xa54 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x440 ]
push eax
call sub_413a0e
lea ecx [ ebp - 0x234 ]
push r--data
push ecx
call sub_411536
lea edx [ ebp - 0x848 ]
push edx
lea eax [ ebp - 0x234 ]
push eax
call sub_411536
add esp 0x24
cmp [ ebp - 0x644 ] bx
je r-xdata
lea ecx [ ebp - 0x234 ]
push ecx
lea edx [ ebp - 0x440 ]
push edx
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x644 ]
push ecx
lea edx [ ebp - 0x234 ]
push edx
call sub_411536
add esp 0x8
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x234 ]
push eax
lea ecx [ ebp - 0x440 ]
push ecx
call [ MoveFileW@IAT ]
test eax eax
setne al
pop ebx
mov esp ebp
pop ebp
retn
sub_453a8b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0xe ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
shl esi 0x4
push ecx
add esi rw-data
call sub_40e0a0
mov eax 0x1
pop esi
pop ebp
retn 0x8
sub_453abd
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push rw-data
mov [ ebp - 0x4 ] 0xffffffff
call sub_434179
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x7
jl r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
cmp eax [ rw-data ]
jg r-xdata
mov edx [ ebp + 0xc ]
push esi
mov esi [ eax * 4 + rw-data ]
push edx
add esi 0x8
call sub_40e0a0
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_453b16
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_44c29d
mov edi eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax ebx
add eax eax
lea edx [ ecx + eax * 8 + 0x184 ]
push edx
lea esi [ edi + 0x4 ]
mov [ ebp + 0xc ] edi
call sub_40e0a0
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
add ecx 0x8c
push ecx
mov [ edi ] ebx
call sub_434137
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_453b6f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x14
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_44c29d
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + ebx * 4 + 0x1b4 ]
add ecx 0x8
push ecx
lea esi [ edi + 0x4 ]
mov [ ebp + 0xc ] edi
call sub_40e0a0
mov eax [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
push edx
add eax 0x8c
push eax
mov [ edi ] ebx
call sub_434137
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_453bc6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8c ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
lea ebx [ eax + 0x8c ]
je r-xdata
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ eax + 0x90 ]
push esi
push edi
mov edi [ eax ]
mov edx [ edi ]
lea eax [ edi + 0x4 ]
push eax
lea esi [ ecx + 0x4 ]
mov [ ecx ] edx
call sub_40e0a0
push ebx
call sub_42ffda
push edi
call sub_44420e
pop edi
pop esi
mov [ rw-data ] 0x0
mov al 0x1
pop ebx
pop ebp
retn 0x8
xor al al
pop ebx
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x64
jge r-xdata
inc [ rw-data ]
push 0x0
call [ Sleep@IAT ]
xor al al
pop ebx
pop ebp
retn 0x8
sub_453c57
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10c
cmp [ eax ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov cl 0x1
je r-xdata
cmp [ eax + 0x2 ] 0x0
je r-xdata
mov [ esi + 0x14 ] cl
cmp [ eax + 0x3 ] 0x0
je r-xdata
mov [ esi + 0x16 ] cl
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov [ esi + 0x17 ] cl
cmp [ esi + 0x15 ] 0x0
je r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
cmp [ esi + 0x16 ] 0x0
je r-xdata
cmp [ esi + 0x1b ] 0x0
je r-xdata
mov [ esi + 0x14 ] 0x0
cmp [ esi + 0x17 ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov [ esi + 0x15 ] 0x0
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp [ esi + 0x1d ] 0x0
je r-xdata
mov [ esi + 0x16 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp [ esi + 0x1e ] 0x0
je r-xdata
mov [ esi + 0x17 ] 0x0
push ebx
push edi
lea edx [ ebp - 0xc ]
push edx
call sub_444a4e
mov edi [ GetAsyncKeyState@IAT ]
push 0xa0
call edi
mov ebx [ GetKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ ebp - 0x10c ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] 0x0
cmp [ esi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call ebx
mov edx 0x8000
test dx ax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
mov cl [ esi + 0x1a ]
test cl cl
jne r-xdata
push 0xa1
call edi
mov edx 0x8000
test dx ax
jne r-xdata
push 0xa0
lea eax [ ebp - 0xc ]
push eax
call sub_44c777
lea ecx [ ebp - 0xc ]
push ecx
push esi
call sub_44c37a
mov al [ esi + 0x1b ]
test al al
jne r-xdata
mov [ ebp - 0x6c ] cl
cmp [ esi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
test cl cl
jne r-xdata
mov [ ebp - 0x6b ] al
push 0x11
call edi
mov ecx 0x8000
test cx ax
jne r-xdata
push 0xa1
lea edx [ ebp - 0xc ]
push edx
call sub_44c777
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_44c37a
cmp [ esi + 0x1c ] 0x0
jne r-xdata
test al al
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push 0x11
call ebx
mov edx 0x8000
test dx ax
je r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
mov [ ebp - 0xfb ] 0x0
mov [ ebp - 0xfc ] al
push 0x12
call edi
mov edx 0x8000
test dx ax
jne r-xdata
push 0x11
lea eax [ ebp - 0xc ]
push eax
call sub_44c777
lea ecx [ ebp - 0xc ]
push ecx
push esi
call sub_44c37a
test cl cl
jne r-xdata
mov [ ebp - 0xfa ] 0x0
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push 0x12
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
lea ecx [ ebp - 0x10c ]
push ecx
call [ SetKeyboardState@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xb1 ] cl
push 0x5b
call edi
mov ecx 0x8000
test cx ax
jne r-xdata
push 0x12
lea edx [ ebp - 0xc ]
push edx
call sub_44c777
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_44c37a
cmp [ esi + 0x1e ] 0x0
jne r-xdata
push 0x5b
call ebx
mov edx 0x8000
test dx ax
je r-xdata
pop edi
pop ebx
push 0x5b
lea eax [ ebp - 0xc ]
push eax
call sub_44c777
lea ecx [ ebp - 0xc ]
push ecx
push esi
call sub_44c37a
sub_453e8d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x14 ]
push eax
call sub_444a4e
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_44c777
lea eax [ ebp - 0x8 ]
push eax
xor ebx ebx
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bx
call sub_453c57
lea edi [ esi + 0x14 ]
push edi
push esi
call sub_4445f4
cmp [ ebp + 0x10 ] ebx
je r-xdata
push edi
push esi
call sub_4443fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push esi
call sub_44c6d7
dec [ ebp + 0x10 ]
jne r-xdata
sub_453ef0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
call sub_444a4e
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_44c6f6
lea eax [ ebp - 0xc ]
push eax
call sub_43487c
mov bl al
test bl bl
je r-xdata
test edi edi
je r-xdata
lea ecx [ ebp - 0xb ]
push ecx
push esi
call sub_453c57
lea edx [ esi + 0x14 ]
push edx
push esi
call sub_4445f4
test bl bl
je r-xdata
lea esp [ esp ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ esi + 0x14 ]
push ecx
push esi
call sub_4443fc
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_44c6d7
dec edi
jne r-xdata
sub_453f64
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x1
push eax
push esi
mov [ esi + 0x20 ] eax
call sub_434621
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ ebp + 0x8 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bx
jne r-xdata
mov [ ebp + 0x10 ] ebx
push edi
push ebx
push 0x14
push esi
call sub_4347d5
mov [ ebp + 0x8 ] al
lea eax [ ebp - 0xe ]
push eax
push esi
call sub_4447e0
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_434831
cmp [ esi + 0x8 ] 0x1
pop edi
jne r-xdata
inc [ ebp + 0x10 ]
push esi
call sub_444310
push 0x1
push edi
push esi
call sub_453ef0
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bx
jmp r-xdata
mov eax [ esi + 0x20 ]
push ebx
push eax
push esi
call sub_434621
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x8 ]
push ecx
push esi
call sub_4445f4
mov edx [ ebp + 0x8 ]
push edx
push 0x14
push esi
call sub_4347d5
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push edx
push eax
call sub_4364e6
movzx edi [ eax ]
cmp di bx
je r-xdata
sub_454014
push ebp
mov ebp esp
mov eax 0x2028
call sub_422240
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x48 ]
push esi
push edi
push 0xfff
lea eax [ ebp - 0x2024 ]
push eax
push ecx
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
lea edi [ ebp - 0x2024 ]
lea esi [ ebp - 0x24 ]
call sub_401b10
cmp [ ebx + 0x3 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push r--data
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push r--data
call sub_413abe
add esp 0x18
mov ecx esi
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp + 0x10 ]
push eax
push edx
lea eax [ ebp - 0x2024 ]
push r--data
push eax
call sub_41329b
add esp 0x10
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x2024 ]
push r--data
push ecx
call sub_41329b
add esp 0xc
jmp r-xdata
lea edi [ ebp - 0x2024 ]
lea esi [ ebp - 0x14 ]
call sub_401b10
mov edi [ ebp + 0x18 ]
mov eax esi
call sub_40d200
mov edi r--data
mov eax esi
call sub_40d200
mov edi [ ebp + 0x14 ]
mov eax esi
call sub_40d200
mov edi r--data
mov eax esi
call sub_40d200
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
push 0x11010
push ecx
push edx
push 0x0
call [ MessageBoxW@IAT ]
mov ecx esi
call sub_402250
lea ecx [ ebp - 0x24 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_45412d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
push esi
call sub_44c8cd
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp edi 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
push esi
call sub_4370df
test al al
je r-xdata
push edi
push esi
call sub_44c901
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_434a13
lea eax [ edi + 0x1 ]
push eax
call sub_444dd6
push eax
mov [ esi + 0x8 ] eax
call sub_4115d7
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov ecx [ esi ]
push edi
push ebx
push ecx
mov [ esi + 0x4 ] edi
call sub_410e60
mov edx [ esi ]
add esp 0xc
mov [ edi + edx ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4541a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
push 0x0
push 0x0
inc esi
push esi
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push edi
push ebx
call sub_4115d7
mov ecx [ ebp + 0x8 ]
add esp 0x4
push 0x0
push 0x0
push ebx
mov edi eax
mov eax [ ecx ]
push edi
push esi
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ ebp + 0xc ]
dec eax
push eax
push edi
push edx
call sub_45412d
push edi
call sub_4111dc
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_444d96
pop esi
pop ebx
pop ebp
retn 0x8
sub_454224
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ esi + 0x24 ] ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0x10 ] bl
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_430ce2
push 0x1
lea ecx [ ebp + 0x10 ]
push ecx
push esi
call sub_44ca07
test eax eax
jle r-xdata
or eax 0xffffffff
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
cmp [ esi + 0x34 ] ebx
jle r-xdata
mov eax [ esi + 0x34 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp + 0x8 ] ebx
mov edi [ esi + 0x2c ]
add edi [ ebp + 0x8 ]
lea edx [ ebp - 0x1c ]
mov ecx [ edi ]
push edx
lea eax [ ebp - 0x8 ]
push eax
push esi
mov [ ebp - 0x18 ] ecx
call sub_444f21
mov ecx [ edi + 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
push esi
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0xc ] ecx
call sub_444f21
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x14 ] ecx
call sub_444df3
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_434a8d
add [ ebp + 0x8 ] 0x8
inc ebx
cmp ebx [ esi + 0x34 ]
jl r-xdata
sub_4542ed
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x18 ]
push edi
xor edi edi
mov [ eax ] edi
mov [ ecx ] edi
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x18 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
test eax eax
jle r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jne r-xdata
mov edi [ ebp + 0x10 ]
mov eax edi
shl eax 0x4
push eax
call sub_4135bb
xor ebx ebx
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] ebx
test edi edi
jle r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] ecx
je r-xdata
mov edx [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
push edx
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
push edi
mov [ ebp - 0x8 ] 0x0
call [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
add esp 0x14
test eax eax
je r-xdata
mov edi eax
lea ebx [ ebx ]
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
cmp [ edx + 0x4 ] ecx
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ eax ]
add ecx 0xfffffffe
cmp ecx 0x3
ja r-xdata
mov [ edi ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 ]
call sub_40c650
jmp [ ecx * 4 + jump_table_454611 ]
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] ecx
mov ebx [ eax + 0x8 ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
jmp [ ecx * 4 + jump_table_454629 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + ebx * 4 ]
mov ecx [ edx + 0x8 ]
add ecx 0xfffffffe
cmp ecx 0x5
ja r-xdata
mov edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x4
mov eax [ eax + 0x4 ]
mov ebx [ eax + ebx * 4 ]
push ebx
call sub_45340c
or ecx 0xffffffff
mov ebx eax
call sub_40f6f0
mov ebx eax
push ebx
call sub_413530
inc eax
add esp 0x4
push eax
call sub_4135bb
add esp 0x4
mov [ edi + 0x8 ] eax
test eax eax
je r-xdata
mov [ edi ] 0x3
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 ]
call sub_40baa0
fstp [ edi + 0x8 ]
jmp r-xdata
mov [ edi ] 0x2
mov edx [ eax + 0x4 ]
mov eax [ edx + ebx * 4 ]
push eax
call sub_443006
mov [ edi + 0xc ] edx
jmp r-xdata
mov [ edi ] 0x5
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
push eax
call sub_44b3ac
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp + 0x10 ]
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
cmp edx [ ecx + eax + 0x4 ]
jl r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + edi * 4 ]
mov edx [ eax ]
add [ ebp + 0x8 ] 0xc
inc ecx
mov [ ebp - 0x4 ] ecx
cmp ecx [ edx + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_413748
mov eax [ ebp - 0xc ]
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
call sub_408f40
mov ecx [ ebp - 0x10 ]
mov [ esi + 0x8 ] 0x2
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ eax + 0x8 ]
fstp [ ebp - 0x14 ]
call sub_408f40
fld [ ebp - 0x14 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
jmp r-xdata
mov ebx [ eax + 0x8 ]
call sub_408f40
mov [ esi + 0x8 ] 0x7
jmp r-xdata
mov edx [ eax + 0x8 ]
push 0xffffffff
push edx
call sub_43299a
add esp 0x8
mov ebx esi
mov edi eax
call sub_40e710
push edi
call sub_4111dc
mov edi [ ebp + 0x10 ]
add esp 0x4
jmp r-xdata
push ebx
call sub_4111dc
mov ebx [ ebp + 0xc ]
add esp 0x4
jmp r-xdata
push ebx
push eax
call sub_413650
add esp 0x8
inc ebx
add edi 0x10
mov [ ebp + 0xc ] ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
mov [ edi + 0x8 ] eax
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp edx [ ecx + eax + 0x8 ]
jg r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + edx ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_422eed
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
call eax
add esp 0x4
add esi 0x10
dec edi
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_413748
add esp 0x4
mov [ esi ] ebx
test edi edi
jle r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
mov eax [ edx + eax ]
mov ecx [ ecx ]
mov edx [ ecx ]
push eax
push edx
call [ GetProcAddress@IAT ]
mov [ ebp + 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push r--data
push edx
call [ GetProcAddress@IAT ]
mov [ ebp - 0xc ] eax
cmp [ esi ] 0x4
jne r-xdata
sub_454639
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x63
push eax
call [ LoadIconW@IAT ]
mov ecx [ esi + 0x54 ]
push eax
push 0x0
push 0x80
push ecx
call [ SendMessageW@IAT ]
cmp [ esi + 0x28 ] 0x0
mov edi [ SetWindowTextW@IAT ]
jbe r-xdata
cmp [ esi + 0x48 ] 0x0
push ebx
mov ebx [ GetDlgItem@IAT ]
jbe r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x54 ]
push edx
push eax
call edi
cmp [ esi + 0x38 ] 0x0
jbe r-xdata
mov ecx [ esi + 0x54 ]
push 0x3ea
push ecx
call ebx
mov edx [ esi + 0x44 ]
push edx
push eax
call edi
movzx eax [ esi + 0x20 ]
mov edi [ SendDlgItemMessageW@IAT ]
test ax ax
je r-xdata
mov eax [ esi + 0x54 ]
push 0x3e9
push eax
call ebx
mov ecx [ esi + 0x34 ]
push ecx
push eax
call edi
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
push 0x0
push eax
mov eax [ esi + 0x54 ]
push 0xcc
push 0x3e9
push eax
call edi
mov eax [ esi + 0x54 ]
lea edx [ ebp - 0x18 ]
push edx
push eax
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
call sub_435976
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0xc ]
sub ebx eax
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x8 ]
add esp 0x4
sub edi ecx
mov [ ebp - 0x4 ] ecx
cmp eax 0x80000000
je r-xdata
mov ecx [ esi + 0x54 ]
push 0x0
push eax
push 0xc5
push 0x3e9
push ecx
call edi
mov eax [ esi + 0xc ]
cmp eax 0x80000000
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov ebx eax
lea eax [ esi + 0x24 ]
push r--data
push eax
call sub_44cd93
add esp 0x8
test al al
je r-xdata
mov edi eax
lea ecx [ ebp - 0x18 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea edx [ ebp - 0x18 ]
push edx
call sub_435976
add esp 0x4
test [ esi + 0x10 ] 0x40
je r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x54 ]
push edx
push eax
call [ SetWindowTextW@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
sub eax [ ebp - 0x18 ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
sub eax edi
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
test [ esi + 0x10 ] 0x80
je r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
fld [ esi + 0x18 ]
mov ecx [ esi + 0x54 ]
fmul [ r--data ]
push 0x0
fnstcw [ ebp + 0xa ]
movzx eax [ ebp + 0xa ]
or eax 0xc00
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push 0x40a
fldcw [ ebp + 0xa ]
push ecx
call [ SetTimer@IAT ]
mov [ esi + 0x58 ] eax
push 0x0
push edi
push ebx
push eax
mov eax [ esi + 0x54 ]
push ecx
push eax
call [ MoveWindow@IAT ]
mov edx [ esi + 0x54 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call sub_435976
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov edx [ esi + 0x54 ]
shl ecx 0x10
sub ecx [ ebp - 0x18 ]
add esp 0x4
add ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x5
push edx
call [ PostMessageW@IAT ]
fldz
fcomp [ esi + 0x18 ]
pop ebx
fnstsw ax
test ah 0x5
jpe r-xdata
sub_454855
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push eax
call sub_44cc34
mov [ esi + 0x78 ] 0x0
sub_454879
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0xc
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] esi
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x4 ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
jmp r-xdata
push 0xc
mov [ esi + 0x8 ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0xc ] eax
pop edi
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_45491b
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_44cd0e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_45493c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ edx ]
xor eax eax
push esi
mov esi [ ebp + 0x34 ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp + 0x30 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x44 ]
mov [ esp + 0x54 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ esp + 0x40 ] eax
mov eax 0xfffffffe
mov [ esp + 0x58 ] ebx
cmp [ ebx ] 0x5f
lea edx [ ecx + 0x6 ]
push edi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x10 ] edx
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ eax ] 0x0
mov [ esp + 0x48 ] eax
lea eax [ ebx + 0x2 ]
mov [ esp + 0x4c ] eax
mov [ eax ] 0x0
mov eax [ esi + 0x34 ]
lea ebx [ ebx + ecx + 0x3 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x40 ] eax
movzx eax [ ebx + 0x3 ]
movzx edx [ ebx + 0x4 ]
shl eax 0x8
or eax edx
mov [ esp + 0x3c ] eax
mov [ esp + 0x54 ] ax
mov eax [ esi + 0x20 ]
mov [ esp + 0x50 ] eax
xor edx edx
lea eax [ esp + 0x50 ]
mov [ esp + 0x56 ] dx
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx eax
and edx 0x7
cmp edx [ ebp + 0xc ]
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ esi + 0x34 ] ecx
cmp [ ebp + 0x1c ] 0x0
je r-xdata
and al 0x7
mov [ ebx ] 0x19
mov [ ebx + 0x1 ] al
add ebx 0x2
add [ esp + 0x10 ] 0x2
mov [ esp + 0x1c ] ebx
mov edi [ ebp + 0x38 ]
mov eax edi
neg eax
sbb eax eax
lea ecx [ esp + 0x10 ]
and eax ecx
push eax
push esi
lea edx [ esp + 0x60 ]
push edx
mov edx [ ebp + 0x18 ]
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
call sub_44cf17
add esp 0x24
test eax eax
je r-xdata
mov [ ebx ] 0x5c
inc ebx
mov [ esp + 0x38 ] ebx
mov [ ebx ] 0x0
add ebx 0x2
add [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] ebx
mov eax [ ebp + 0x14 ]
mov edx [ esp + 0x14 ]
mov [ eax ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x44 ]
cmp [ esp + 0x44 ] eax
je r-xdata
mov eax [ esi + 0x34 ]
cmp eax [ esp + 0x30 ]
jle r-xdata
and eax 0x7
mov [ ebp + 0xc ] eax
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
test edi edi
jne r-xdata
mov [ esp + 0x30 ] eax
mov ecx [ esp + 0x14 ]
cmp [ ecx ] 0x7c
jne r-xdata
cmp [ eax ] 0x54
je r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x34 ]
test ecx ecx
js r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x18 ] edx
jmp r-xdata
mov eax [ esp + 0x2c ]
mov ecx ebx
sub ecx eax
mov dl bl
mov [ ebx ] 0x55
sar ecx 0x8
sub dl al
mov [ ebx + 0x1 ] cl
mov [ ebx + 0x2 ] dl
add ebx 0x3
cmp [ esp + 0x3c ] 0x0
jle r-xdata
mov ecx ebx
sub ecx eax
mov edx ebx
sub edx eax
mov [ ebx ] 0x54
mov cl bl
sar edx 0x8
mov [ ebx + 0x1 ] dl
sub cl al
mov [ ebx + 0x2 ] cl
mov [ esp + 0x20 ] ebx
mov [ esp + 0x5c ] ebx
add ebx 0x3
inc [ esp + 0x14 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp + 0x24 ]
add [ esp + 0x10 ] 0x3
inc [ esp + 0x14 ]
lea ebx [ eax + ecx + 0x3 ]
jmp r-xdata
test edx edx
js r-xdata
cmp ecx edx
je r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x20 ]
cmp [ ecx + 0x6 ] 0x0
je r-xdata
movzx edi [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl edi 0x8
or edi edx
mov edx ecx
sar edx 0x8
mov [ eax + 0x2 ] cl
mov [ eax + 0x1 ] dl
sub eax edi
mov ecx edi
test edi edi
jg r-xdata
mov edi [ ebp + 0x38 ]
cmp [ ebp + 0x20 ] 0x0
mov [ esp + 0x1c ] ebx
je r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
test ecx ecx
jns r-xdata
cmp [ esp + 0x18 ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push 0x0
push ecx
push eax
mov [ ebx ] 0x0
call sub_42ef5a
add esp 0x10
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ ebp + 0x10 ]
mov [ esi + 0x34 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ edx ] ebx
mov edx [ esp + 0x14 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x28 ]
mov edx [ esp + 0x28 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x2c ]
mov edx [ esp + 0x18 ]
mov [ ecx ] edx
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
cmp [ ecx ] 0x29
jne r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
mov [ esi + 0x20 ] edx
jmp r-xdata
mov edx ebx
sub edx eax
push edx
push eax
add eax 0x3
push eax
call sub_4165d0
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x58 ]
add ebx 0x3
mov [ ecx ] 0x5d
mov eax ebx
sub eax ecx
mov ecx [ esp + 0x54 ]
sar eax 0x8
mov [ ecx ] al
mov cl bl
sub cl [ esp + 0x38 ]
add esp 0xc
mov [ edx ] cl
mov [ ebx ] 0x55
mov [ ebx + 0x1 ] al
mov eax [ esp + 0x10 ]
mov [ ebx + 0x2 ] cl
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
add ebx 0x3
add eax 0x6
mov [ esi + 0x20 ] edx
jmp r-xdata
or [ esp + 0x18 ] ecx
mov [ esp + 0x18 ] 0xffffffff
jmp r-xdata
mov edx ecx
xor edx [ esp + 0x18 ]
test edx 0xfffffdff
je r-xdata
mov ecx edx
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov [ esp + 0x28 ] 0xffffffff
mov [ esp + 0x18 ] ecx
test eax eax
js r-xdata
mov [ esi + 0x54 ] 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
mov edx 0x7fffffeb
sub edx ecx
cmp edx eax
jge r-xdata
mov dl [ ebp + 0xc ]
mov [ ebx ] 0x19
mov [ ebx + 0x1 ] dl
add ebx 0x2
add eax 0x2
mov ecx [ ebp + 0x8 ]
and ecx 0x7
cmp ecx [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0x18 ]
sub eax 0xfffffffe
neg eax
sbb eax eax
and eax 0xfffffff5
add eax 0x24
mov [ ecx ] eax
mov ecx [ esp + 0x38 ]
mov edx eax
sar edx 0x8
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
mov eax [ esp + 0x20 ]
add ecx eax
mov [ edi ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x14
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454cfc
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x188 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push 0x232
push edx
mov [ esi + 0x188 ] 0x0
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0x10
push 0x0
push 0x0
push esi
push 0xfffffff4
push rw-data
call sub_451808
sub_454d4a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push edi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov eax esi
and eax 0xfff0
cmp eax 0xf030
ja r-xdata
cmp eax 0xf060
je r-xdata
je r-xdata
push 0x0
push 0x0
push ecx
push 0xfffffffd
push rw-data
call sub_451808
pop edi
pop esi
pop ebp
retn 0x10
cmp eax 0xf120
jne r-xdata
push 0x0
push 0x0
push ecx
push 0xfffffffa
push rw-data
call sub_451808
test [ rw-data ] 0x1
jne r-xdata
sub eax 0xf000
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
shl eax 0x10
or eax ecx
push eax
push esi
push 0x112
push edi
call [ DefDlgProcW@IAT ]
push 0x0
push 0x0
push ecx
push 0xfffffffb
push rw-data
call sub_451808
test [ rw-data ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x10
jmp r-xdata
mov [ ecx + 0x188 ] 0x1
jmp r-xdata
sub eax 0x20
jne r-xdata
push eax
push eax
push ecx
push 0xfffffffc
push rw-data
call sub_451808
call sub_44a2d2
test [ rw-data ] 0x1
jne r-xdata
jmp r-xdata
sub_454e33
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x1d0 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push ebx
call sub_454855
mov eax [ edi + 0x84 ]
push eax
add edi 0x70
push edi
push esi
call sub_435b09
test eax eax
jne r-xdata
mov [ ebx ] 0x0
mov eax [ esi + 0x1d0 ]
test eax eax
je r-xdata
mov [ esi + 0x1d0 ] 0x0
push eax
call sub_440863
sub_454e8d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40c650
push edi
mov ebx eax
mov [ ebp + 0xf ] 0x0
call sub_4111c1
add esp 0x4
cmp eax 0x4
jbe r-xdata
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x2010
push eax
push ecx
push 0x1
push edi
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push r--data
push edi
call sub_4111c1
lea eax [ edi + eax * 2 - 0x8 ]
add esp 0x4
push eax
call sub_4114ab
add esp 0x8
test eax eax
push r--data
push edi
sete [ ebp + 0xf ]
call sub_4111c1
lea ecx [ edi + eax * 2 - 0x8 ]
add esp 0x4
push ecx
call sub_4114ab
add esp 0x8
test eax eax
push r--data
push edi
sete [ ebp + 0xb ]
call sub_4111c1
lea edx [ edi + eax * 2 - 0x8 ]
add esp 0x4
push edx
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x32
push 0x0
push edi
call [ LoadLibraryExW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_4536cb
test al al
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_443833
test al al
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ esi ]
mov ebx [ SendMessageW@IAT ]
push 0x0
push eax
push 0x170
push edi
mov [ esi + 0x64 ] eax
call ebx
push 0x1
push 0x172
push 0x64
push edi
call ebx
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
movsx edx [ esi + 0x82 ]
push 0x1
push eax
movsx eax [ esi + 0x80 ]
push ecx
push edx
push eax
push edi
call [ MoveWindow@IAT ]
cmp [ ebp - 0x4 ] 0x0
lea esi [ ebp + 0x10 ]
jne r-xdata
push eax
call [ DestroyIcon@IAT ]
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x0
push eax
push ecx
push 0x1
lea edx [ ebp + 0x10 ]
push edx
call sub_45340c
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call sub_408f40
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x18
call sub_408f40
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x18
jns r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
movsx edx [ esi + 0x86 ]
movsx eax [ esi + 0x84 ]
push 0x0
push edx
mov edx [ ebp + 0x8 ]
push eax
movzx ecx bx
push 0x1
push ecx
push edx
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ FreeLibrary@IAT ]
movsx ecx [ esi + 0x86 ]
movsx edx [ esi + 0x84 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
movzx eax bx
push 0x1
push eax
push ecx
jmp r-xdata
cmp [ esi + 0x84 ] 0x10
push 0x1
jle r-xdata
or eax 0xffffffff
sub eax ebx
mov ebx eax
test ebx ebx
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x0
push eax
push ecx
push 0x1
lea edx [ ebp + 0x10 ]
push edx
call sub_45340c
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
jmp r-xdata
push ebx
push edi
call [ ExtractIconExW@IAT ]
sub_4550fc
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x8 ]
sub esp 0x54
push ebx
push esi
push edi
mov esi ecx
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push edx
push esi
call sub_441af5
test al al
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
mov edi [ edx ]
mov eax [ esi + 0x74 ]
mov edx [ eax + ecx * 4 ]
mov ebx [ edx ]
mov dl [ ebx + 0x88 ]
movzx ecx dl
add ecx 0xfffffffe
cmp ecx 0x1b
ja r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push ecx
movzx ecx [ ecx + lookup_table_4557c4 ]
jmp [ ecx * 4 + jump_table_455790 ]
mov eax [ ebx + 0x60 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov ecx 0x3
mov [ esp + 0xc ] ecx
cmp [ esi + 0x84 ] ecx
jl r-xdata
cmp dl 0xe
jne r-xdata
mov eax [ esi + 0x84 ]
mov [ esp + 0xc ] eax
cmp eax 0x3
jl r-xdata
movzx edx [ ebx + 0x8b ]
mov eax [ edi + 0x18c ]
mov ecx [ edi + 0x194 ]
push 0x0
push edx
push 0x1308
push eax
mov [ esp + 0x20 ] ecx
call [ SendMessageW@IAT ]
mov ecx [ edi + 0x18c ]
push ecx
push esi
call sub_441b7c
mov edx [ esi + 0x74 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ ebp + 0x8 ]
lea edx [ esp + 0x18 ]
push edx
push 0xffffffff
push 0x1053
push eax
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x30 ] ecx
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x30 ]
push ecx
push 0x0
push 0x1101
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
push ebx
push edi
call sub_430003
mov eax [ ebx ]
push eax
jmp r-xdata
mov ecx 0x3
cmp [ esi + 0x84 ] ecx
jl r-xdata
mov eax [ edi + 0x1c8 ]
test eax eax
jle r-xdata
push edi
push ebx
push esi
call sub_454e33
jmp r-xdata
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov ecx [ ebx + 0x8 ]
mov eax [ edi + 0x1a4 ]
cmp ecx eax
jne r-xdata
lea ecx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x8 ]
push 0x0
push ecx
push edx
call [ DeleteMenu@IAT ]
test eax eax
jne r-xdata
push 0x2c
lea ecx [ esp + 0x38 ]
push 0x0
push ecx
mov [ esp + 0x3c ] 0x30
call sub_412f40
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
add esp 0xc
lea edx [ esp + 0x30 ]
push edx
push 0x0
push eax
push ecx
mov [ esp + 0x44 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
xor eax eax
or ecx 0xffffffff
mov [ edi + 0x18c ] eax
mov [ edi + 0x190 ] ecx
mov [ edi + 0x194 ] ecx
mov [ edi + 0x198 ] eax
mov [ edi + 0x19c ] al
mov eax [ ebx ]
push eax
call [ DestroyWindow@IAT ]
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov eax 0x3
mov [ esp + 0xc ] eax
cmp [ esi + 0x84 ] eax
jl r-xdata
movzx ecx [ ebx + 0x80 ]
cmp cx 0xffff
je r-xdata
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
push 0x0
push eax
mov eax [ ebx + 0x30 ]
push 0x1008
push eax
call [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
call [ DestroyWindow@IAT ]
add eax 0xc
mov [ esp + 0x10 ] eax
mov edx [ ebx ]
push edx
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov eax 0x3
mov [ esp + 0xc ] eax
cmp [ esi + 0x84 ] eax
jl r-xdata
push eax
call [ ImageList_Destroy@IAT ]
mov ebx [ ebx + 0x4c ]
test ebx ebx
je r-xdata
push eax
call [ DestroyIcon@IAT ]
push ecx
call [ DestroyMenu@IAT ]
jmp r-xdata
push eax
call [ DestroyMenu@IAT ]
mov [ edi + 0x1a4 ] 0x0
jmp r-xdata
inc ecx
mov [ esp + 0xc ] ecx
cmp ecx [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov edx [ eax + 0x8 ]
cmp edx [ ebx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x1a0 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x1a0 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
call [ DeleteMenu@IAT ]
mov eax [ esp + 0x44 ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
jmp r-xdata
dec eax
mov [ esp + 0xc ] eax
cmp eax 0x3
jge r-xdata
mov ecx [ ecx ]
cmp [ ecx + 0x88 ] 0xb
jne r-xdata
movzx ecx [ ebx + 0x8b ]
mov eax [ esp + 0x10 ]
cmp ecx eax
jne r-xdata
mov ecx [ esi + 0x74 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax ] 0x0
je r-xdata
movsx edx cx
push edx
push eax
call [ ImageList_Remove@IAT ]
mov eax 0x3
mov [ esp + 0xc ] eax
cmp [ esi + 0x84 ] eax
jl r-xdata
push eax
call [ ImageList_Destroy@IAT ]
mov eax [ esp + 0x10 ]
inc ecx
add eax 0x4
mov [ esp + 0x10 ] eax
cmp ecx [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x1c8 ] 0x0
jmp r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ edi + 0x1c ]
jne r-xdata
push ebx
call [ DestroyWindow@IAT ]
mov edx [ esi + 0x74 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ eax + 0x88 ]
cmp dl 0xf
je r-xdata
mov ecx [ edi ]
push ecx
call [ DrawMenuBar@IAT ]
jmp r-xdata
push eax
call [ GetMenuItemCount@IAT ]
test eax eax
jne r-xdata
mov eax 0x3
mov [ esp + 0xc ] eax
cmp [ esi + 0x84 ] eax
jl r-xdata
mov edx [ esi + 0x74 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_4550fc
mov eax [ esp + 0xc ]
mov [ edi + 0x194 ] 0xffffffff
movzx edx [ ebx + 0x8b ]
cmp eax edx
jle r-xdata
cmp eax [ edi + 0x190 ]
jne r-xdata
mov eax [ esp + 0xc ]
inc eax
mov [ esp + 0xc ] eax
cmp eax [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov cl [ eax + 0x8b ]
cmp cl 0xff
je r-xdata
mov eax [ ebx ]
push eax
jmp r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
cmp [ eax + 0x88 ] 0x3
jne r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_45197b
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ edi + 0x1c ] 0xffffffff
mov eax [ esp + 0xc ]
push eax
push esi
call sub_45197b
mov ecx [ esp + 0xc ]
cmp dl 0xe
je r-xdata
mov edx [ edi ]
push eax
push edx
call [ SetMenu@IAT ]
mov eax [ edi + 0x1a0 ]
push eax
call [ DestroyMenu@IAT ]
mov [ edi + 0x1a0 ] 0x0
mov edx [ esi + 0x74 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
push eax
push edi
push esi
mov [ ebx + 0x8b ] 0xff
call sub_440a0d
dec [ edi + 0x190 ]
mov [ edi + 0x198 ] 0x0
jmp r-xdata
dec eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov dl [ ebx + 0x8b ]
cmp cl dl
jne r-xdata
inc eax
mov [ esp + 0xc ] eax
cmp eax [ esi + 0x84 ]
jle r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov eax [ eax ]
cmp eax [ ebx + 0x30 ]
je r-xdata
inc eax
mov [ esp + 0xc ] eax
cmp eax [ esi + 0x84 ]
jle r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x30 ]
cmp edx [ ebx ]
jne r-xdata
mov [ eax + 0x8 ] 0x0
jmp r-xdata
inc eax
mov [ esp + 0xc ] eax
cmp eax [ esi + 0x84 ]
jle r-xdata
mov ecx [ ecx ]
mov edx [ esp + 0x10 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
jbe r-xdata
cmp [ eax + 0x88 ] 0xb
je r-xdata
cmp [ ecx + 0x88 ] 0x14
jne r-xdata
mov edx [ esi + 0x74 ]
mov eax [ edx + ecx * 4 ]
mov eax [ eax ]
movsx ecx [ eax + 0x86 ]
movsx edx [ eax + 0x84 ]
push 0x0
push ecx
movsx ecx [ eax + 0x82 ]
push edx
movsx edx [ eax + 0x80 ]
mov eax [ eax ]
push ecx
push edx
push eax
call [ MoveWindow@IAT ]
jmp r-xdata
cmp [ ecx + 0x88 ] 0x11
jne r-xdata
cmp [ ecx + 0x88 ] 0xf
jne r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0xb
jne r-xdata
dec [ eax + 0x8b ]
cmp cl dl
mov edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_4550fc
jmp r-xdata
mov ecx [ ecx + 0x30 ]
cmp ecx [ ebx ]
jne r-xdata
mov eax [ esp + 0xc ]
push eax
push esi
call sub_45197b
mov eax [ esp + 0xc ]
mov eax [ esp + 0xc ]
push eax
push esi
call sub_45197b
mov eax [ esp + 0xc ]
movzx ecx [ ebx + 0x80 ]
test cx cx
js r-xdata
mov edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_4550fc
mov eax [ esp + 0xc ]
movzx eax [ eax + 0x80 ]
test ax ax
js r-xdata
cmp ax cx
jle r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
dec [ eax + 0x80 ]
mov eax [ esi + 0x74 ]
mov [ esp + 0x30 ] 0x2
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
movsx ecx [ edx + 0x80 ]
mov [ esp + 0x44 ] ecx
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ edi + 0x18c ]
lea edx [ esp + 0x30 ]
push edx
movzx edx [ ecx + 0x8b ]
push edx
push 0x133d
push eax
call [ SendMessageW@IAT ]
sub_4557e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x40
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
push esi
push edi
mov edi [ rw-data ]
mov edx [ edi + eax * 4 ]
mov esi [ edx ]
mov al [ esi + 0x88 ]
mov [ ebp + 0x8 ] ecx
cmp al 0xe
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x18
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x18
cmp al 0xf
je r-xdata
cmp al 0xc
je r-xdata
cmp al 0x9
je r-xdata
cmp al 0x14
je r-xdata
cmp al 0x11
je r-xdata
cmp al 0x1d
je r-xdata
cmp al 0x1b
je r-xdata
cmp al 0x15
je r-xdata
movzx eax [ ebp + 0x1c ]
mov edx [ rw-data ]
neg eax
sbb eax eax
and eax 0x2
or eax 0x11
mov [ ebp - 0x40 ] 0x2c
mov [ ebp - 0x3c ] eax
mov eax [ esi ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x20 ] edx
mov eax [ esi ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x1c ] ebx
cmp [ esi + 0x88 ] 0xb
mov eax [ esi + 0x4c ]
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ecx + 0x18c ]
push ecx
push rw-data
call sub_441b7c
mov ebx eax
mov edx [ edi + ebx * 4 ]
mov eax [ edx ]
mov edi [ eax + 0x4c ]
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov edx [ esi ]
movzx eax [ ebp + 0x18 ]
push 0x0
push ecx
push 0x0
push edx
push 0x80000000
push 0x80000000
neg eax
push 0x80000000
sbb eax eax
push 0x80000000
and eax 0x40
or eax 0x80000003
push eax
push 0x0
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push eax
call [ DestroyWindow@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
movzx eax [ ebp + 0x18 ]
push 0x0
push ecx
mov ecx [ edx + 0x18c ]
push 0x0
push ecx
push 0x80000000
push 0x80000000
neg eax
push 0x80000000
sbb eax eax
push 0x80000000
and eax 0x40
or eax 0x80000003
push eax
push 0x0
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x432
push edi
call [ SendMessageW@IAT ]
lea eax [ esi + 0x50 ]
mov [ esi + 0x4c ] edi
call sub_402160
lea ecx [ ebp - 0x14 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0xc ]
mov esi [ SendMessageW@IAT ]
push edx
push 0x0
push 0x418
push edi
call esi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov [ ecx + 0x4c ] edi
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov eax [ eax ]
add eax 0x50
mov ebx r--data
call sub_402160
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
mov [ ebp - 0x38 ] ecx
mov edx [ eax + 0x18c ]
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x432
push edi
mov [ ebp - 0x34 ] edx
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18c ]
push 0x0
push edi
push 0x132e
push edx
call [ SendMessageW@IAT ]
mov ebx [ ebp + 0xc ]
lea eax [ esi + 0x50 ]
mov [ esi + 0x4c ] edi
call sub_402160
pop ebx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x18
push edi
call [ DestroyWindow@IAT ]
pop ebx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x18
push eax
mov eax [ ebp + 0x14 ]
push eax
push 0x421
push edi
call esi
sub_455a89
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0xb8
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
movzx eax [ edi + 0x88 ]
mov esi [ edi ]
mov [ ebx ] 0xffffffff
cmp eax 0x1c
ja r-xdata
mov [ ebx ] 0x0
mov ebx [ SendMessageW@IAT ]
movzx eax [ eax + lookup_table_4561bd ]
jmp [ eax * 4 + jump_table_456181 ]
mov ebx [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x188
push esi
call ebx
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x147
push esi
call [ SendMessageW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0x0
push 0x0
push 0x0
je r-xdata
push 0x0
push 0x0
push 0x408
push esi
call [ SendMessageW@IAT ]
mov [ ebx ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0x0
push 0x400
push esi
call [ SendMessageW@IAT ]
mov [ ebx ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x130b
push esi
call edi
cmp [ ebp + 0x10 ] 0x0
mov [ ebx ] eax
je r-xdata
mov eax [ edi + 0x8 ]
push eax
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x9
push 0x110a
push esi
mov [ ebx ] 0x0
call edi
test eax eax
je r-xdata
mov ecx [ edi + 0x30 ]
mov eax [ edi + 0xc ]
push 0xfffffff0
push ecx
mov [ ebp - 0x50 ] eax
mov [ ebx ] 0x0
call [ GetWindowLongW@IAT ]
cmp [ ebp + 0x10 ] 0x0
mov esi eax
mov [ ebp - 0x54 ] 0x8
mov [ ebp - 0x48 ] 0xf000
je r-xdata
mov edi [ SendMessageW@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push esi
call edi
push 0x28
lea edx [ ebp - 0x2c ]
push 0x0
push edx
mov [ ebx ] eax
call sub_412f40
mov eax [ ebx ]
add esp 0xc
lea ecx [ ebp - 0x2c ]
push ecx
push 0x0
push 0x104b
push esi
mov [ ebp - 0x2c ] 0x4
mov [ ebp - 0x28 ] eax
call edi
neg eax
sbb eax eax
and eax [ ebp - 0xc ]
mov [ ebx ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ edi + 0x30 ]
push 0xffffffec
push edx
mov [ ebx ] 0xffffffff
call [ GetWindowLongW@IAT ]
push 0x28
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_412f40
mov eax [ edi + 0x30 ]
mov ecx [ ebp + 0x8 ]
mov esi [ SendMessageW@IAT ]
add esp 0xc
lea edx [ ebp - 0x80 ]
push edx
push 0xffffffff
push 0x1053
push eax
mov [ ebp - 0x80 ] 0x1
mov [ ebp - 0x78 ] ecx
call esi
mov [ ebp - 0x28 ] eax
cmp eax 0xffffffff
je r-xdata
lea esi [ edi + 0x68 ]
push esi
call sub_443833
test al al
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x1001
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xe
push esi
call ebx
lea edi [ eax + 0x1 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push edi
mov ebx eax
push ebx
push esi
call [ GetWindowTextW@IAT ]
push 0x0
push edi
push 0x18a
push esi
call ebx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push eax
push edi
push 0x189
push esi
mov [ ebp + 0x10 ] eax
call ebx
push 0x0
push edi
push 0x149
push esi
call [ SendMessageW@IAT ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov ebx eax
push ebx
push edi
push 0x148
push esi
call [ SendMessageW@IAT ]
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0xf0
push esi
call [ SendMessageW@IAT ]
mov [ ebx ] eax
test eax eax
jne r-xdata
push 0xe
push esi
call [ SendMessageW@IAT ]
lea edi [ eax + 0x1 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push edi
push eax
push esi
mov [ ebp + 0x10 ] eax
call [ GetWindowTextW@IAT ]
test eax eax
mov eax [ ebp + 0x10 ]
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x84 ]
push ecx
push eax
push 0x133c
push esi
mov [ ebp - 0x84 ] 0x8
call edi
mov edx [ ebp - 0x6c ]
mov [ ebx ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x208
call sub_4115d7
mov edx [ ebp + 0x8 ]
add esp 0x4
cmp [ ebp + 0x10 ] 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x0
mov esi eax
mov eax [ edi + 0x8 ]
push edx
mov [ ebp - 0xb4 ] 0x30
push eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] 0x4
je r-xdata
mov edx [ edi + 0x30 ]
lea ecx [ ebp - 0x54 ]
push ecx
push 0x0
push 0x113e
push edx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x2000
call sub_4115d7
add esp 0x4
lea edx [ ebp - 0x54 ]
push edx
push 0x0
mov esi eax
mov eax [ edi + 0x30 ]
push 0x113e
push eax
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] 0xfff
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x4
je r-xdata
mov ecx esi
call sub_40c650
mov [ ebx ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_45340c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x16
call sub_4115d7
movzx ecx [ ebp - 0x5e ]
movzx edx [ ebp - 0x62 ]
push ecx
mov esi eax
movzx eax [ ebp - 0x64 ]
push edx
push eax
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x18
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebx ] 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebx ] 0x0
push eax
mov [ ebp - 0xb0 ] 0x1
call [ GetMenuItemInfoW@IAT ]
push esi
test eax eax
je r-xdata
mov [ ebp - 0xb0 ] 0x10
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x8c ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x54 ]
push ecx
push 0x0
push 0x113e
push esi
call edi
test eax eax
je r-xdata
push 0x2000
call sub_4115d7
add esp 0x4
mov ebx eax
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push 0x113e
push esi
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] 0xfff
call edi
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4c ]
test esi 0x100
je r-xdata
push esi
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x2000
call sub_4115d7
xor ecx ecx
add esp 0x4
xor esi esi
mov [ ebp + 0x10 ] eax
mov ebx eax
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x14 ] 0xfff
cmp cx [ edi + 0x8c ]
jge r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4111dc
mov ecx [ ebp - 0xa8 ]
mov dl cl
and dl 0x3
movsx eax dl
add esp 0x4
neg eax
sbb eax eax
and eax 0x40
add eax 0x40
mov [ ebx ] ecx
test ecx 0x8080
je r-xdata
mov [ ebx ] eax
mov edx [ ebp - 0x30 ]
mov [ ebx ] edx
mov eax ebx
push ebx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test al 0x2
je r-xdata
mov ecx eax
shr ecx 0xc
dec ecx
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x4
mov [ ebx ] ecx
mov edx [ edi + 0x30 ]
lea ecx [ ebp - 0x2c ]
push ecx
push 0x0
push 0x104b
push edx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x18 ] ebx
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi + 0x30 ]
lea edx [ ebp - 0x2c ]
push edx
push 0x0
push 0x104b
push eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x18 ] ebx
call [ SendMessageW@IAT ]
push ebx
call sub_4111c1
mov ecx 0xffe
sub ecx eax
add esp 0x4
mov [ ebp - 0x14 ] ecx
test ecx ecx
jle r-xdata
mov edx [ edi + 0x30 ]
lea ecx [ ebp - 0x2c ]
push ecx
push 0x0
push 0x104b
push edx
mov [ ebp - 0x2c ] 0x8
mov [ ebp - 0x1c ] 0xf000
call esi
test eax eax
je r-xdata
test cl 0x8
je r-xdata
or eax 0x100
test al 0x20
je r-xdata
or [ ebx ] 0x100
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ ebp + 0x10 ]
push ebx
call sub_4111c1
mov cx [ rw-data ]
lea eax [ ebx + eax * 2 ]
add esp 0x4
xor edx edx
push eax
mov [ eax ] cx
mov [ eax + 0x2 ] dx
call [ CharNextW@IAT ]
mov ebx eax
movsx eax [ edi + 0x8c ]
inc esi
cmp esi eax
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x20 ]
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
mov [ ebx ] eax
or eax 0x4
or eax 0x1
jmp r-xdata
test al 0x10
je r-xdata
or [ ebx ] 0x400
mov [ ebx ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
or eax 0x200
test ecx 0x1000
je r-xdata
or [ ebx ] 0x200
sub_4561da
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_430c09
mov [ rw-data ] eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp eax 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
add eax 0x28
call sub_402160
mov eax [ rw-data ]
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push 0x10
push 0x10
push 0x10
push 0x1
push edi
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp + 0xc ]
push edx
call sub_432b92
mov eax [ esi + 0x4c ]
add esp 0x4
test eax eax
js r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
push ecx
call sub_43303f
add esp 0x4
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push 0x0
mov ebx eax
push ebx
push edi
call [ ExtractIconExW@IAT ]
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0xc ]
push 0x1
push eax
mov [ esi + 0x4c ] eax
call sub_441432
push eax
call sub_4413aa
mov ecx [ ebp + 0x8 ]
mov edi [ SendMessageW@IAT ]
mov ebx [ DestroyIcon@IAT ]
test ecx ecx
je r-xdata
push 0x1
push eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
call sub_43303f
add esp 0x4
push eax
push edi
call [ ExtractIconExW@IAT ]
mov eax [ ebp + 0x10 ]
push 0x50
push 0x0
push 0x0
push 0x1
push edi
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp + 0x10 ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x38 ] 0x0
pop esi
je r-xdata
mov [ esi + 0x54 ] eax
test eax eax
je r-xdata
push ecx
mov ecx [ ebp + 0x18 ]
push 0x0
push 0x80
push ecx
call edi
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp + 0x18 ]
push 0x1
push 0x80
push eax
call edi
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ esi + 0x20 ] edx
mov eax [ ebp + 0x10 ]
push eax
call ebx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x24 ] ecx
mov eax [ ebp + 0x10 ]
push eax
call ebx
mov [ ebp - 0x4 ] eax
sub_456391
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push edi
mov [ esi + 0x170 ] ecx
mov [ esi + 0x174 ] edx
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp eax [ esi + 0x178 ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0x178 ] eax
mov [ esi + 0x17c ] ecx
jl r-xdata
cmp ecx [ esi + 0x17c ]
je r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
call [ GetAsyncKeyState@IAT ]
mov edx [ ebx + 0x1c ]
movzx edi ax
push edx
shr edi 0xf
call [ GetAsyncKeyState@IAT ]
movzx eax ax
shr eax 0xf
mov [ ebp + 0xc ] eax
cmp edi [ esi + 0x180 ]
je r-xdata
push ecx
push eax
push esi
push 0xfffffff5
push ebx
call sub_451808
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jl r-xdata
cmp eax [ esi + 0x184 ]
je r-xdata
mov [ esi + 0x180 ] edi
cmp [ esi + 0x1ac ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp ecx 0x1
jl r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ esi + 0x184 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push 0xfffffff8
push ebx
call sub_451808
cmp [ esi + 0x188 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push eax
push ecx
push esi
push 0xfffffff9
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push 0xfffffff6
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push eax
push ecx
push esi
push 0xfffffff7
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x188 ] 0x0
mov ecx [ esi ]
push 0xfffffff0
push ecx
call [ GetWindowLongW@IAT ]
test eax 0x1000000
je r-xdata
push ebx
call sub_451808
push ebx
call sub_451808
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push ecx
push edx
push esi
push 0xfffffff4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push 0xfffffffa
jmp r-xdata
sub_4564ef
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
push edi
cmp [ rw-data ] eax
jne r-xdata
mov esi 0x3
cmp eax esi
jle r-xdata
cmp [ rw-data ] 0xffff
jne r-xdata
push 0x98
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x98
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
xor edi edi
push eax
call sub_451a0d
mov edi eax
jmp r-xdata
inc esi
cmp esi eax
jl r-xdata
xor edi edi
push eax
call sub_451a0d
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edi
mov eax [ edx + 0x4 ]
mov [ edi + 0x4 ] eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx + esi * 4 ]
cmp [ edx ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov esi rw-data
mov [ ebp - 0x4 ] edi
call sub_40dc00
mov esi [ rw-data ]
inc esi
mov [ rw-data ] esi
jmp r-xdata
sub_4565b2
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x8 ]
xor eax eax
push edi
mov edi ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2 ] al
mov [ ebp + 0xb ] al
mov [ ebp - 0x1 ] al
cmp ebx 0x4
jb r-xdata
cmp ebx 0x5
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
mov [ ebp - 0x10 ] eax
call sub_44cecd
test al al
jne r-xdata
cmp ebx 0x6
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov [ ebp - 0x10 ] eax
call sub_44cecd
test al al
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call sub_45340c
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xb ] 0x0
mov [ ebp - 0x54 ] 0x2c
mov [ ebp - 0x50 ] 0x1a0
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov [ ebp - 0x10 ] eax
call sub_44cecd
test al al
jne r-xdata
mov ecx [ ebp - 0x10 ]
call sub_40c650
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x48 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov [ ebp - 0x30 ] eax
xor eax eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] eax
call [ GetCursorPos@IAT ]
mov eax 0x10
add [ ebp - 0xc ] eax
add [ ebp - 0x8 ] eax
lea edx [ ebp - 0x28 ]
push edx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
cmp ebx 0x2
jb r-xdata
mov [ ebp - 0x50 ] 0x1a2
mov ecx [ ebp - 0x10 ]
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
and al 0x1
mov [ ebp - 0x2 ] al
call sub_40c650
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
shr al 0x1
and al 0x1
mov [ ebp + 0xb ] al
call sub_40c650
shr al 0x2
and al 0x1
mov [ ebp - 0x1 ] al
cmp ebx 0x3
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_44cecd
test al al
jne r-xdata
mov bl [ ebp - 0x2 ]
push 0xfffffff0
test bl bl
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0x8 ]
push esi
call sub_44cecd
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40c650
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xe8 ]
push eax
call [ GetWindowLongW@IAT ]
test al 0x40
je r-xdata
mov edx [ edi + 0xe8 ]
push edx
call [ GetWindowLongW@IAT ]
test al 0x40
je r-xdata
mov ecx esi
call sub_40c650
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0xe8 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0xe8 ]
push ecx
call [ DestroyWindow@IAT ]
mov [ edi + 0xe8 ] 0x0
jmp r-xdata
lea edx [ ebp - 0x54 ]
push edx
push 0x0
push 0x439
push eax
call [ SendMessageW@IAT ]
mov ebx [ SendMessageW@IAT ]
mov eax 0x3
test bl bl
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi + 0xe8 ]
push 0x0
push 0x0
push 0x41d
push eax
call ebx
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push eax
push 0x0
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov ebx [ SendMessageW@IAT ]
lea edx [ ebp - 0x54 ]
push edx
push 0x0
push 0x432
push eax
mov [ edi + 0xe8 ] eax
call ebx
mov eax [ ebp - 0x20 ]
mov ecx [ edi + 0xe8 ]
push eax
push 0x0
push 0x418
push ecx
call ebx
jmp r-xdata
mov eax 0x43
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ edi + 0xe8 ]
push 0xd8f0d8f0
push eax
push 0x412
push edx
call ebx
mov ecx [ edi + 0xe8 ]
lea eax [ ebp - 0x54 ]
push eax
push 0x1
push 0x411
push ecx
call ebx
mov ecx [ edi + 0xe8 ]
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov edx [ edi + 0xe8 ]
push eax
push ecx
push 0x421
push edx
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov eax [ edi + 0xe8 ]
lea edx [ ebp - 0x64 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0x5c ]
mov ebx [ ebp - 0x58 ]
mov ecx [ ebp - 0x8 ]
sub esi [ ebp - 0x64 ]
sub ebx [ ebp - 0x60 ]
mov edx [ ebp - 0xc ]
push 0x2
push ecx
push edx
inc esi
inc ebx
call [ MonitorFromPoint@IAT ]
lea ecx [ ebp - 0x8c ]
push ecx
push eax
mov [ ebp - 0x8c ] 0x28
call [ GetMonitorInfoW@IAT ]
test eax eax
je r-xdata
movzx edx ax
movzx eax cx
mov ecx [ edi + 0xe8 ]
shl edx 0x10
or edx eax
push edx
push 0x0
push 0x412
push ecx
call ebx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
cmp ecx eax
jl r-xdata
lea edx [ ebp - 0x88 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call [ CopyRect@IAT ]
mov ecx eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x20 ]
sub eax esi
cmp ecx eax
jle r-xdata
mov eax edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x1c ]
sub edx ebx
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
cmp eax edx
jl r-xdata
mov ebx [ SendMessageW@IAT ]
sub_456929
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov ebx r--data
mov eax rw-data
mov [ ebp + 0x8 ] esi
mov [ rw-data ] 0x0
call sub_402160
test esi esi
je r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
push eax
mov esi rw-data
call sub_40e0a0
mov esi [ ebp + 0x8 ]
push rw-data
call sub_44429f
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
push eax
call sub_43303f
add esp 0x4
mov [ rw-data ] eax
sub_45699f
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_40c650
push eax
call sub_4440e0
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax esi
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_456a0d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
call sub_40c650
push eax
call sub_4440e0
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
call sub_4111dc
add esp 0x4
pop esi
sub_456a5a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
lea edx [ ebp + 0xc ]
push edx
call sub_40c650
push eax
call sub_444006
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
call sub_408f40
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] 0x7
mov [ esi ] eax
sub_456aa6
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x14 ]
push eax
mov esi ecx
call sub_44c29d
mov ebx 0x1
cmp [ rw-data ] bl
je r-xdata
mov ebx r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_402160
mov ebx 0x1
lea ecx [ ebp - 0x14 ]
push ecx
push rw-data
call sub_453bc6
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
call sub_402250
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax esi
call sub_403c90
cmp [ rw-data ] bl
jne r-xdata
sub_456b2a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call sub_41324e
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456b8f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call sub_4349d1
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456bf4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call [ IsCharUpperW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456c57
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call [ IsCharLowerW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456cba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call sub_41320f
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456d1f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call sub_4131fc
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456d84
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call [ IsCharAlphaNumericW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456de7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call [ IsCharAlphaW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456e4a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push eax
call sub_45340c
mov esi eax
mov edi 0x1
test esi esi
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
je r-xdata
push r--data
push esi
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
lea ecx [ ecx ]
movzx eax [ esi ]
add eax 0xffffffd5
cmp eax 0xe
ja r-xdata
dec eax
jne r-xdata
movzx edx [ eax + lookup_table_456efa ]
jmp [ edx * 4 + jump_table_456eee ]
cmp [ esi ] 0x0
jne r-xdata
movzx ecx [ esi ]
push ecx
call sub_4137d3
add esp 0x4
test eax eax
je r-xdata
add esi 0x2
mov edi 0x2
mov eax edi
dec eax
je r-xdata
add esi 0x2
jmp r-xdata
sub_456efd
add al [ edx ]
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_456e4a
mov esi [ ebp + 0xc ]
movzx edi al
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_456f38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push eax
call sub_45340c
mov esi eax
mov edi 0x1
test esi esi
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
je r-xdata
push r--data
push esi
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
lea eax [ edi - 0x1 ]
cmp eax 0x3
ja r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_457038 ]
cmp edi 0x4
jne r-xdata
movzx eax [ esi ]
add eax 0xffffffd5
cmp eax 0xe
ja r-xdata
movzx edx [ esi ]
push edx
call sub_4131fc
add esp 0x4
test eax eax
jne r-xdata
mov edi 0x4
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_4131fc
add esp 0x4
test eax eax
je r-xdata
lea eax [ edi - 0x3 ]
pop edi
pop esi
pop ebp
retn 0x4
movzx ecx [ eax + lookup_table_457058 ]
jmp [ ecx * 4 + jump_table_457048 ]
add esi 0x2
cmp [ esi ] 0x2e
jne r-xdata
add esi 0x2
mov edi 0x2
jmp r-xdata
mov edi 0x3
jmp r-xdata
sub_45705c
add eax [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add dl [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_456f38
mov esi [ ebp + 0xc ]
movzx edi al
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_457096
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
push eax
call sub_433c6a
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov esi eax
mov eax [ edi + 0x4 ]
mov eax [ eax ]
add esp 0x8
push esi
push eax
call sub_45340c
push eax
call sub_433c94
mov ebx [ ebp + 0xc ]
add esp 0x8
mov eax esi
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4570fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push ebx
push esi
push edi
push eax
call sub_45340c
mov edi eax
call sub_410160
mov esi eax
push esi
call sub_433cda
mov ebx [ ebp + 0xc ]
add esp 0x4
mov eax esi
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_45713e
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_410bc0
mov edi esi
mov esi [ ebp + 0xc ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_457190
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
call sub_4536f7
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4571e4
push ebp
mov ebp esp
sub esp 0x14
push ebx
or eax 0xffffffff
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov edi ecx
xor ebx ebx
mov [ ebp - 0xc ] 0x1
call sub_4533eb
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4533eb
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x8 ]
add eax 0xfffffffe
cmp eax 0x4
ja r-xdata
mov edi ebx
jmp [ eax * 4 + jump_table_457354 ]
call sub_408f40
inc edi
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_408f40
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
dec eax
mov [ ebp - 0x8 ] eax
jns r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov ebx eax
test ebx ebx
js r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ebp - 0xc ]
push eax
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4426cd
mov edi eax
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor ebx ebx
cmp ebx 0x3
jle r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
cmp edi [ edx + 0x4 ]
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_457368
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_4533eb
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4533eb
mov ebx eax
xor eax eax
cmp [ esi + 0x8 ] 0x3
jb r-xdata
push eax
push ebx
push edi
call sub_445bc3
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
test eax eax
js r-xdata
xor eax eax
cmp eax 0x3
jle r-xdata
cmp eax 0x1
jne r-xdata
mov ecx ebx
mov eax edi
call sub_40bcc0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4573de
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_4533eb
mov esi [ ebp + 0xc ]
mov edi [ eax + 0x4 ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45740d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_452653
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x4 ] ecx
sub_457451
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx ]
add esi 0x468
call sub_40baa0
sub esp 0x8
fstp [ esp ]
push esi
lea eax [ ebp + 0x8 ]
push eax
call sub_44a397
push ecx
lea eax [ ebp + 0x8 ]
mov [ esp ] 0x0
call sub_40f1d0
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
lea ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_45740d
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_4574b4
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
fld [ eax ]
push esi
push edi
fstp [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
call sub_403cc0
mov esi eax
call sub_408f40
fld [ ebp - 0x8 ]
lea eax [ edi + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_403cc0
pop edi
mov [ eax + 0x10 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4574f6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax ]
push ecx
call sub_4536cb
mov esi [ ebp + 0xc ]
test al al
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx ]
call sub_40c650
push eax
add edi 0x15c
push edi
call sub_434aa8
test eax eax
sete al
mov [ ebp + 0x8 ] al
mov ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_4530c9
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_457557
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov esi [ ecx ]
push esi
call sub_441da2
test al al
jne r-xdata
push esi
call sub_432520
mov esi [ ebp + 0xc ]
mov edi [ eax + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4575bf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_441da2
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_4575f1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
cmp eax [ esi + 0x1a0 ]
jg r-xdata
mov edx [ esi + 0x19c ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x10 ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_457655
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
cmp esi [ edi + 0x1a0 ]
jge r-xdata
mov edx [ edi + 0x19c ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x10 ]
push 0x8000
push 0x0
push ecx
call [ VirtualFree@IAT ]
mov edx [ edi + 0x19c ]
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ edi + 0x19c ]
mov edx [ ecx + esi * 4 ]
pop edi
mov [ edx ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call sub_44afd1
sub_4576e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
cmp esi [ edi + 0x190 ]
jge r-xdata
mov edx [ edi + 0x18c ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
push eax
call [ FreeLibrary@IAT ]
mov ecx [ edi + 0x18c ]
mov edx [ ecx + esi * 4 ]
pop edi
mov [ edx ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45774c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call [ LoadLibraryW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx [ esi + 0x190 ]
push edi
xor edi edi
test ecx ecx
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
cmp edi ecx
jne r-xdata
mov edx [ esi + 0x18c ]
push ebx
mov ecx [ esi + 0x18c ]
mov edx [ ecx + edi * 4 ]
mov [ edx ] eax
lea edx [ ebp + 0x8 ]
push edx
add esi 0x188
push esi
call sub_436299
jmp r-xdata
pop ebx
inc edi
add edx 0x4
cmp edi ecx
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
inc edi
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov ebx [ edx ]
cmp [ ebx ] 0x0
je r-xdata
sub_4577e9
push ebp
mov ebp esp
sub esp 0x8
push ebx
xor eax eax
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov [ edi + 0x2c ] eax
mov [ ebp - 0x8 ] eax
cmp [ edi + 0xc ] eax
jle r-xdata
lea ecx [ ebp + 0x14 ]
call sub_430e4d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ebx [ ebp + 0x10 ]
add ebx ebx
add ebx ebx
mov [ ebp - 0x4 ] ebx
lea ecx [ ecx ]
xor edx edx
mov [ eax + 0x44 ] edx
cmp ecx 0x10
ja r-xdata
lea edx [ esi + esi * 2 + 0x6 ]
mov [ edi + edx * 8 ] 0x0
mov eax [ ebp - 0x8 ]
inc eax
add ebx 0x8
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] eax
cmp eax [ edi + 0xc ]
jl r-xdata
jmp [ ecx * 4 + jump_table_457a95 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
lea eax [ esi + esi * 2 ]
mov ecx [ edi + eax * 8 + 0x38 ]
lea eax [ edi + eax * 8 ]
mov [ ebp + 0x10 ] eax
cmp ecx 0x10
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ ebx + ecx ]
push eax
call sub_45340c
push eax
call sub_4111c1
add esp 0x4
cmp eax 0x10000
jae r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov eax [ ebx + eax ]
push eax
call sub_45340c
push eax
call sub_4111c1
add esp 0x4
cmp eax 0x10000
jae r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebx + eax ]
call sub_40c650
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov eax [ ebx + eax ]
push eax
call sub_443006
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebx + eax ]
call sub_40c650
lea ecx [ esi + esi * 2 + 0x6 ]
mov [ edi + ecx * 8 ] ax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebx + eax ]
call sub_40c650
lea ecx [ esi + esi * 2 + 0x6 ]
mov [ edi + ecx * 8 ] al
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebx + eax ]
call sub_40baa0
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
lea ecx [ esi + esi * 2 + 0x6 ]
fstp [ edi + ecx * 8 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebx + eax ]
call sub_40baa0
lea ecx [ esi + esi * 2 + 0x6 ]
fstp [ edi + ecx * 8 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov eax [ ebx + eax ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov eax [ ebx + eax ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebx + edx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebx + ecx ]
push edx
call sub_432416
test al al
je r-xdata
cmp [ eax + 0x3c ] edx
je r-xdata
inc eax
push eax
call sub_4135bb
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ edx + 0x4 ]
mov ebx [ ebx + eax ]
add esp 0x4
push ebx
call sub_45340c
or ecx 0xffffffff
mov ebx eax
call sub_40f6f0
mov ecx [ ebp + 0x8 ]
mov ebx eax
push ebx
push ecx
call sub_413650
push ebx
call sub_4111dc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebp - 0x4 ]
lea edx [ esi + esi * 2 + 0x6 ]
add esp 0xc
mov [ edi + edx * 8 ] eax
mov [ ecx + 0x44 ] eax
jmp r-xdata
mov eax 0x10000
lea ecx [ eax + eax + 0x2 ]
push ecx
call sub_4135bb
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ edx + 0x4 ]
mov eax [ ebx + eax ]
add esp 0x4
push eax
call sub_45340c
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_411567
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
lea edx [ esi + esi * 2 + 0x6 ]
add esp 0x8
mov [ edi + edx * 8 ] eax
mov [ ecx + 0x44 ] eax
jmp r-xdata
mov eax 0x10000
lea ecx [ esi + esi * 2 + 0x6 ]
mov [ edi + ecx * 8 ] eax
push eax
call sub_44b3ac
push eax
call sub_443006
lea esi [ esi + esi * 2 + 0x6 ]
mov [ edi + esi * 8 ] eax
mov [ edi + esi * 8 + 0x4 ] edx
jmp r-xdata
lea edx [ esi + esi * 2 + 0x6 ]
mov [ edi + edx * 8 ] 0x0
jmp r-xdata
mov edx [ edx ]
mov ecx [ edx + 0x8 ]
lea eax [ esi + esi * 2 + 0x6 ]
mov [ edi + eax * 8 ] ecx
jmp r-xdata
mov [ eax + 0x3c ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ ebx + ecx ]
push eax
mov [ ebp + 0x8 ] eax
call sub_441da2
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push edx
call sub_432520
mov edx [ eax + 0x8 ]
lea ecx [ esi + esi * 2 + 0x6 ]
mov [ edi + ecx * 8 ] edx
jmp r-xdata
sub_457ad9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
lea edx [ ebp + 0xf ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_45340c
push eax
call sub_443d19
add esp 0xc
cmp [ ebp + 0xf ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x200
call [ OpenProcess@IAT ]
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
cmp eax 0x5
ja r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_457bcd ]
mov eax 0x40
jmp r-xdata
mov eax 0x4000
jmp r-xdata
mov eax 0x20
jmp r-xdata
mov eax 0x8000
jmp r-xdata
mov eax 0x80
jmp r-xdata
mov eax 0x100
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetPriorityClass@IAT ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x0
add eax edi
call sub_403c90
sub_457be5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x1
mov esi ecx
mov eax 0x80000000
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
push eax
call sub_40c650
push eax
call sub_4333be
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
or eax 0x40000000
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call [ GetLastError@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_457c53
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_40bc70
xor ebx ebx
push 0x3c
lea eax [ ebp - 0x54 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] 0x1
call sub_412f40
mov esi [ ebp + 0x10 ]
add esp 0xc
cmp [ ebp + 0x14 ] 0x2
jb r-xdata
cmp [ ebp + 0x14 ] 0x3
jb r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
cmp [ eax ] bx
je r-xdata
cmp [ ebp + 0x14 ] 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov [ ebp - 0x4 ] eax
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov ebx eax
cmp [ ebp + 0x14 ] 0x5
jb r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_45340c
cmp [ eax ] 0x0
je r-xdata
push 0x3c
lea edx [ ebp - 0x54 ]
push 0x0
push edx
call sub_412f40
mov eax [ ebp - 0x18 ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x54 ] 0x3c
mov [ ebp - 0x50 ] 0x40
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x48 ] eax
mov eax [ ecx ]
add esp 0xc
push eax
call sub_45340c
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edx
call [ ShellExecuteExW@IAT ]
mov esi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
movzx ecx ax
mov [ ebp - 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov edi [ edx + 0xc ]
push edi
call sub_44cecd
test al al
jne r-xdata
test edi edi
je r-xdata
push ebx
call sub_4111dc
add esp 0x4
push edi
call sub_4533eb
push eax
lea esi [ ebp - 0x18 ]
call sub_40e0a0
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
call sub_4111dc
add esp 0x4
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
push 0x1
add eax ecx
call sub_403c90
mov esi [ ebp + 0x18 ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov esi [ ebp + 0x18 ]
call sub_408f40
mov eax [ ebp - 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x450 ] eax
lea ecx [ ebp - 0x18 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ ebp - 0x18 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
push eax
call [ CloseHandle@IAT ]
lea ecx [ ebp - 0x18 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_457e22
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push esi
push edx
push eax
push 0x0
push ecx
call sub_457c53
pop esi
pop ebp
retn 0x8
sub_457e3f
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ ebp - 0x1 ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
push eax
mov [ ebp - 0x1 ] 0x0
call sub_45340c
push eax
call sub_443d19
mov esi [ ebp + 0xc ]
add esp 0xc
test al al
jne r-xdata
call sub_408f40
cmp [ ebp - 0x1 ] 0x0
je r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
fild [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x3
test eax eax
jns r-xdata
pop edi
fstp [ esi ]
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
fadd [ r--data ]
sub_457ee2
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
push esi
call sub_4536cb
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push eax
lea esi [ ebx + 0x438 ]
call sub_40e0a0
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
mov ecx esi
call sub_40c650
test eax eax
jne r-xdata
mov [ ebx + 0x448 ] 0x0
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
imul eax eax 0x3e8
mov [ ebx + 0x448 ] eax
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0xc
call [ timeGetTime@IAT ]
pop edi
mov [ ebx + 0x44c ] eax
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0xc
sub_457f66
push ebp
mov ebp esp
mov eax 0x2030
call sub_422240
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_40bc70
lea ecx [ ebp - 0x28 ]
call sub_40bc70
mov eax [ ebp + 0x8 ]
push eax
xor esi esi
call sub_45340c
mov edi eax
movzx eax [ edi ]
xor bl bl
mov [ ebp - 0x8 ] edi
test ax ax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_402250
lea ecx [ ebp - 0x18 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi edi
push eax
lea eax [ ebp - 0x18 ]
call sub_403020
cmp [ edi + esi * 2 ] ax
jne r-xdata
inc esi
cmp ax 0x25
jne r-xdata
test bl bl
je r-xdata
mov ebx r--data
lea eax [ ebp - 0x28 ]
call sub_402160
movzx eax [ edi + esi * 2 ]
cmp eax 0x25
je r-xdata
push 0x25
lea eax [ ebp - 0x18 ]
mov bl 0x1
call sub_403020
inc esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x18 ]
call sub_40e6a0
cmp [ edi + esi * 2 ] 0x0
je r-xdata
lea esp [ esp ]
movzx eax [ edi + esi * 2 ]
test ax ax
jne r-xdata
mov edi r--data
lea eax [ ebp - 0x18 ]
call sub_40d200
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x18 ]
call sub_40bd50
jmp r-xdata
mov eax [ ebp - 0x28 ]
push 0xfff
lea edx [ ebp - 0x202c ]
push edx
xor ecx ecx
push eax
inc esi
mov [ ebp - 0x202c ] cx
call [ GetEnvironmentVariableW@IAT ]
test eax eax
lea eax [ ebp - 0x18 ]
je r-xdata
movzx eax ax
push eax
lea eax [ ebp - 0x28 ]
call sub_403020
movzx eax [ edi + esi * 2 + 0x2 ]
inc esi
cmp eax 0x25
jne r-xdata
mov edi r--data
mov bl 0x1
call sub_40d200
lea ecx [ ebp - 0x28 ]
push ecx
lea eax [ ebp - 0x18 ]
call sub_40bd50
lea eax [ ebp - 0x18 ]
call sub_40d200
mov edi [ ebp - 0x8 ]
jmp r-xdata
lea edi [ ebp - 0x202c ]
call sub_40d200
mov edi [ ebp - 0x8 ]
mov bl 0x1
jmp r-xdata
test ax ax
je r-xdata
sub_4580c4
push ebp
mov ebp esp
sub esp 0x2a0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov eax r--data
mov esi ecx
call sub_40e710
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edx ]
push eax
call sub_432416
test al al
jne r-xdata
mov ebx 0x1
cmp [ edi + 0x8 ] ebx
jbe r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx ]
mov ecx [ eax ]
mov edi [ ecx + 0x8 ]
cmp ebx 0x5
jne r-xdata
mov ecx [ edx + 0x4 ]
call sub_40c650
mov ebx eax
cmp ebx 0x1
jl r-xdata
cmp ebx 0x7
jne r-xdata
lea edx [ ebp - 0x24 ]
xor ebx ebx
push edx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
call sub_430ec5
test al al
je r-xdata
cmp ebx 0x7
jg r-xdata
lea edx [ ebp - 0x3c ]
push edx
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi ]
mov eax [ ecx ]
push r--data
push edi
call eax
test eax eax
js r-xdata
mov edx [ edi ]
mov ecx [ edx + 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
push 0x800
push 0x0
push edi
call ecx
test eax eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push ebx
push 0x1
add eax esi
call sub_403c90
lea ecx [ ebp - 0x24 ]
push ecx
call sub_430ccb
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
mov eax [ eax ]
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push 0x6
lea edx [ ebp - 0x24 ]
push edx
call sub_441e6a
call eax
mov ecx [ ebp + 0x8 ]
push 0x104
lea eax [ ebp - 0x2a0 ]
push eax
push ecx
call [ GetModuleFileNameW@IAT ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x2a0 ]
call sub_40e710
lea edx [ ebp - 0x24 ]
push edx
call sub_430ccb
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
mov edx [ eax + 0x10 ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x800
push 0x0
push edi
call edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edi eax
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
mov [ ebp + 0x8 ] eax
call edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
push 0x1
add eax esi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
xor edi edi
cmp eax edi
jl r-xdata
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x28 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x24 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] edx
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
push 0x28
lea ecx [ ebp - 0x94 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
call [ StringFromGUID2@IAT ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x94 ]
call sub_40e710
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x1
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov ecx [ eax ]
push edi
push edi
push edi
lea edx [ ebp + 0x8 ]
push edx
push 0xffffffff
push eax
mov eax [ ecx + 0x30 ]
call eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
call sub_40e710
mov ecx [ ebp + 0x8 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
lea edx [ ebp - 0x38 ]
push edx
lea edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx + 0x30 ]
push edi
push edi
lea ecx [ ebp + 0x8 ]
push ecx
push edi
push 0xffffffff
push eax
call edx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
call sub_40e710
mov eax [ ebp + 0x8 ]
push eax
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp ebx 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ eax ]
mov edx [ edx + 0x14 ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x38 ]
push ecx
push eax
call edx
cmp [ ebp - 0x18 ] 0x5
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x10 ]
lea ecx [ ebp - 0xc ]
push ecx
movzx ecx [ eax + 0x1a ]
push edx
movzx edx [ eax + 0x18 ]
push ecx
push edx
push eax
call [ QueryPathOfRegTypeLib@IAT ]
mov edx [ ebp - 0x10 ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x30 ]
call eax
cmp esi edi
jne r-xdata
cmp ebx 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
call edx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x8 ] edi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
call sub_40e710
mov ecx [ ebp - 0xc ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
cmp [ ebp - 0x18 ] 0x5
jne r-xdata
cmp ebx 0x6
jne r-xdata
nop
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp - 0x28 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x24 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
push 0x28
lea ecx [ ebp - 0x94 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x14 ]
call eax
cmp [ ebp - 0x18 ] 0x5
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp ebx 0x6
jne r-xdata
inc edi
cmp edi [ ebp - 0x2c ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push edi
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x44 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp - 0x44 ]
movzx ecx [ eax + 0x30 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
xor eax eax
mov [ ebp - 0x34 ] 0xffffffff
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x30 ] eax
jbe r-xdata
cmp ebx 0x3
jne r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x94 ]
call sub_40e710
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
mov edx [ ebp - 0xc ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call [ ProgIDFromCLSID@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x38 ]
call eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x34 ]
push edx
push 0x0
push eax
mov eax [ ecx + 0x48 ]
call eax
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x10 ]
push eax
cmp ecx [ ebp - 0x38 ]
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] 0x1
call edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ eax ]
mov eax [ edx + 0x8 ]
call eax
push 0x0
push 0x1
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
call sub_40e710
mov edx [ ebp - 0x8 ]
push edx
call [ CoTaskMemFree@IAT ]
jmp r-xdata
sub_45861f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_432416
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_458651
push ebp
mov ebp esp
sub esp 0x268
push ebx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
call sub_40bc70
lea ecx [ ebp - 0x1c ]
call sub_40bc70
lea ecx [ ebp - 0x3c ]
call sub_40bc70
mov ebx r--data
lea eax [ ebp - 0x2c ]
call sub_402160
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_40d200
mov edi r--data
lea eax [ ebp - 0x2c ]
call sub_40d200
mov ebx r--data
lea eax [ ebp - 0x1c ]
call sub_402160
test esi esi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x5c
je r-xdata
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
push edx
push 0x80000002
push eax
call [ RegConnectRegistryW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x20
lea eax [ ebp - 0x5c ]
push 0x0
push eax
call sub_412f40
add esp 0xc
lea ecx [ ebp - 0x1c ]
push ecx
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x58 ] 0x0
call sub_40e0a0
mov edi r--data
mov eax esi
call sub_40d200
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x3c ]
push 0x0
push ebx
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x48 ] edx
call [ WNetAddConnection2W@IAT ]
mov edi eax
test edi edi
js r-xdata
cmp [ esi + 0x2 ] 0x5c
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_402250
lea ecx [ ebp - 0x1c ]
call sub_402250
lea ecx [ ebp - 0x2c ]
call sub_402250
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0xc ]
push ecx
push 0x20019
push eax
mov eax [ ebp - 0x8 ]
push edx
push eax
call [ RegOpenKeyExW@IAT ]
mov esi [ RegCloseKey@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov ebx r--data
lea eax [ ebp - 0x1c ]
call sub_402160
mov edi esi
lea eax [ ebp - 0x1c ]
call sub_40d200
mov edx [ ebp - 0x8 ]
push edx
call esi
mov eax [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x264 ]
push edx
push 0x0
push 0x0
push 0x0
push eax
mov [ ebp + 0xc ] 0x1fe
call [ RegQueryValueExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call esi
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
shr eax 0x1
xor ecx ecx
mov [ ebp + 0xc ] eax
mov [ ebp + eax * 2 - 0x264 ] cx
push edx
lea eax [ ebp - 0x264 ]
push eax
call [ CLSIDFromString@IAT ]
mov edi eax
sub_4587e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
dec eax
push ebx
cmp eax 0xb
ja r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_45890c ]
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_45893c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_4421ab
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45896e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
call [ Ordinal_WSOCK32_116@IAT ]
mov edi eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push edi
add eax esi
call sub_403c90
mov eax [ ebp + 0xc ]
test edi edi
sete cl
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x4 ]
push edx
push eax
call sub_4530c9
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4589ac
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x198
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
push 0x202
mov esi ecx
call [ Ordinal_WSOCK32_115@IAT ]
mov ecx [ esi ]
mov edi eax
mov eax [ ecx + 0x4 ]
push 0x0
push edi
add eax esi
call sub_403c90
mov ecx [ ebp + 0xc ]
test edi edi
sete dl
mov [ esp + 0xc ] dl
mov eax [ esp + 0xc ]
push eax
push ecx
call sub_4530c9
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4589fe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
push eax
call [ Ordinal_WSOCK32_3@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
push eax
push ecx
call sub_4530c9
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
push ecx
call sub_4530c9
xor eax eax
pop esi
pop ebp
retn 0x8
sub_458a61
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push edi
call sub_40c650
mov ecx [ esi + 0x478 ]
mov edi eax
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ ebp - 0x8 ]
push edx
push 0x0
sub ecx eax
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x108 ] edi
mov [ ebp - 0x10c ] 0x1
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10c ]
push ecx
push edi
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push edi
call [ Ordinal_WSOCK32_1@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_458b35
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_446606
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_458b67
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_410bc0
push esi
call sub_45383c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
lea ecx [ ebp - 0x10 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_458bc9
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ edi + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4533eb
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ ebp - 0x2c ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ edx + 0x8 ]
push eax
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x28 ] ecx
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ ebp - 0x1c ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ edx ]
mov [ ebp - 0x14 ] eax
xor ebx ebx
call sub_40c650
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
mov [ ebp + 0x8 ] eax
call sub_44cecd
test al al
jne r-xdata
cmp [ ebp - 0x1c ] 0x4000
jbe r-xdata
mov eax [ ebp - 0x8 ]
add eax 0xb8
push eax
lea esi [ ebp - 0x30 ]
call sub_40e0a0
mov esi [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
call sub_40c650
or eax 0x10000
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x5
jb r-xdata
push 0x4000
lea ecx [ ebp - 0x20 ]
push ecx
or eax 0xffffffff
call sub_40c600
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_44cecd
test al al
je r-xdata
cmp [ edi + 0x8 ] 0x4
jb r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_44b3ac
mov ebx eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
push ecx
push esi
push edx
push ebx
call [ MessageBoxW@IAT ]
mov eax [ edi + 0x4 ]
mov edi [ eax + 0xc ]
push edi
call sub_44cecd
test al al
jne r-xdata
mov ecx edi
call sub_40baa0
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fmul [ r--data ]
mov edx [ ebp - 0x4 ]
fnstcw [ ebp + 0xa ]
movzx eax [ ebp + 0xa ]
or eax 0xc00
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
push ecx
push edx
fldcw [ ebp + 0xa ]
push esi
push eax
push ebx
call sub_443c87
add esp 0x14
jmp r-xdata
fstp st0
fldz
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
lea ecx [ ebp - 0x20 ]
mov [ esi ] edi
mov [ esi + 0x8 ] 0x1
call sub_402250
lea ecx [ ebp - 0x30 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_458d56
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3a8
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] 0x3a8
mov [ esp + 0x14 ] 0x10
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x1
mov eax [ ecx ]
push 0x3f
push eax
call sub_45340c
push eax
lea edx [ esp + 0x334 ]
push edx
call sub_412fba
mov ecx [ esi + 0x4 ]
xor eax eax
add esp 0xc
mov [ esp + 0x3aa ] ax
mov eax [ ecx + 0x4 ]
push 0xff
push eax
call sub_45340c
push eax
lea edx [ esp + 0x130 ]
push edx
call sub_412fba
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ esp + 0x332 ] ax
mov ecx [ ecx + 0x8 ]
add esp 0xc
call sub_40c650
imul eax eax 0x3e8
mov [ esp + 0x328 ] eax
cmp edi 0x3
jbe r-xdata
mov [ esp + 0x3ac ] 0x0
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov [ esp + 0x3ac ] eax
jmp r-xdata
lea eax [ esp + 0x8 ]
push eax
push 0x1
call [ Shell_NotifyIconW@IAT ]
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_458e32
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
cmp eax 0x64
ja r-xdata
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop esi
xor eax eax
pop edi
pop ebp
retn 0x8
imul eax eax 0xffff
mov ecx eax
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
movzx eax ax
mov ecx eax
shl ecx 0x10
or ecx eax
push ecx
push 0x0
call [ waveOutSetVolume@IAT ]
xor eax eax
pop edi
pop ebp
retn 0x8
sub_458eab
push ebp
mov ebp esp
sub esp 0x54
push esi
mov esi [ LoadCursorW@IAT ]
push 0x7f8a
push 0x0
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x54 ] eax
call esi
push 0x7f03
push 0x0
mov [ ebp - 0x50 ] eax
call esi
push 0x7f8b
push 0x0
mov [ ebp - 0x4c ] eax
call esi
push 0x7f01
push 0x0
mov [ ebp - 0x48 ] eax
call esi
push 0x7f81
push 0x0
mov [ ebp - 0x44 ] eax
call esi
push 0x7f88
push 0x0
mov [ ebp - 0x40 ] eax
call esi
push 0x7f80
push 0x0
mov [ ebp - 0x3c ] eax
call esi
push 0x7f86
push 0x0
mov [ ebp - 0x38 ] eax
call esi
push 0x7f83
push 0x0
mov [ ebp - 0x34 ] eax
call esi
push 0x7f85
push 0x0
mov [ ebp - 0x30 ] eax
call esi
push 0x7f82
push 0x0
mov [ ebp - 0x2c ] eax
call esi
push 0x7f84
push 0x0
mov [ ebp - 0x28 ] eax
call esi
push 0x7f04
push 0x0
mov [ ebp - 0x24 ] eax
call esi
push 0x7f02
push 0x0
mov [ ebp - 0x20 ] eax
call esi
push 0x7f89
push 0x0
mov [ ebp - 0x1c ] eax
call esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x14
call [ GetCursorInfo@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push edi
xor edi edi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
inc edi
cmp edi 0xf
jle r-xdata
cmp eax [ ebp + edi * 4 - 0x54 ]
je r-xdata
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp edi 0xf
jg r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
inc edi
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_459001
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push edi
mov ebx ecx
call sub_4429ef
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_40c650
push eax
push esi
call sub_4323e1
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov ecx esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_40c650
test eax eax
jne r-xdata
push 0x1
push edi
call sub_4323e1
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov edx [ ebx ]
push eax
mov eax [ edx + 0x4 ]
push 0x2
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4590bd
push ebp
mov ebp esp
sub esp 0xac
push ebx
mov ebx [ ebp + 0x8 ]
or eax 0xffffffff
push edi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] eax
mov edi 0x88c00000
mov [ ebp - 0x18 ] 0x8
call sub_40bc70
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
mov [ rw-data ] 0x0
push esi
mov esi [ ebp + 0xc ]
cmp esi 0x3
jb r-xdata
lea ecx [ ebp - 0x28 ]
call sub_402250
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp esi 0x4
jb r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_4533eb
push eax
lea esi [ ebp - 0x28 ]
call sub_40e0a0
mov esi [ ebp + 0xc ]
cmp esi 0x5
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp esi 0x6
jb r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c650
mov [ ebp + 0x8 ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
or ecx 0xffffffff
cmp [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c650
test al 0x1
je r-xdata
cmp [ ebp + 0x8 ] ecx
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0xfffffed4
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c650
test al 0x2
je r-xdata
mov edi 0x88000000
push 0x64
push 0x12c
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
call [ SetRect@IAT ]
mov esi [ ebp - 0x18 ]
push esi
push 0x0
push edi
lea edx [ ebp - 0x14 ]
push edx
call [ AdjustWindowRectEx@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x10 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push edx
push ecx
push edi
push eax
call sub_45340c
mov edi [ CreateWindowExW@IAT ]
push eax
push r--data
push esi
call edi
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ rw-data ] eax
call [ GetClientRect@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push 0x0
push ecx
push 0x18
push 0x500
push 0x4
sub edx 0x119
push edx
push 0x50000000
push eax
call sub_45340c
push eax
push r--data
push 0x0
call edi
push 0x0
push 0x0
push 0x0
push r--data
mov [ rw-data ] eax
call [ CreateDCW@IAT ]
push 0x11
mov esi eax
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ ebp - 0xac ]
push eax
push 0x40
push esi
call [ GetTextFaceW@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov ebx eax
call [ DeleteDC@IAT ]
lea ecx [ ebp - 0xac ]
push ecx
push 0x0
push 0x2
mov ecx ebx
neg ecx
push 0x0
add ecx ecx
push 0x4
add ecx ecx
push 0x1
sub ecx ebx
add ecx ecx
push 0x0
mov eax 0x38e38e39
imul ecx
push 0x0
push 0x0
push 0x258
sar edx 0x4
push 0x0
mov eax edx
push 0x0
shr eax 0x1f
push 0x0
add eax edx
push eax
call [ CreateFontW@IAT ]
mov ecx [ rw-data ]
mov esi [ SendMessageW@IAT ]
push 0x1
push eax
push 0x30
push ecx
call esi
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
push 0x14
sub eax 0x104
push 0x104
cdq
push 0x1e
sub eax edx
sar eax 0x1
push eax
push 0x50000001
push 0x0
push r--data
push 0x200
call edi
push 0x640000
push 0x0
push 0x401
push eax
mov [ rw-data ] eax
call esi
mov eax [ rw-data ]
push 0x0
push 0x1
push 0x404
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
push 0x32
push 0x500
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
push 0x37
sub edx 0x118
push edx
push 0x50000000
push eax
push r--data
push 0x0
call edi
push 0x1
push 0x11
mov [ rw-data ] eax
call [ GetStockObject@IAT ]
mov ecx [ rw-data ]
push eax
push 0x30
push ecx
call esi
mov edx [ rw-data ]
push 0x4
push edx
call [ ShowWindow@IAT ]
lea ecx [ ebp - 0x28 ]
call sub_402250
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x8 ]
add eax 0xffffff9c
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0x8 ] eax
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c650
test al 0x10
je r-xdata
mov [ ebp - 0x18 ] 0x0
xor edi 0x8000000
sub_459407
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x8 ]
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
call sub_40c650
mov edi [ SendMessageW@IAT ]
test eax eax
js r-xdata
cmp ebx 0x2
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
cmp eax 0x65
jge r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx ]
push 0x0
call sub_40c650
push eax
mov eax [ rw-data ]
push 0x402
push eax
call edi
cmp ebx 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_45340c
push eax
mov eax [ rw-data ]
push 0x0
push 0xc
push eax
call edi
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_45340c
mov edx [ rw-data ]
push eax
push 0x0
push 0xc
push edx
call edi
sub_4594e9
push ebp
mov ebp esp
sub esp 0xb0
push ebx
or eax 0xffffffff
cmp [ rw-data ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] 0x1f4
mov [ ebp - 0x24 ] 0x190
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x8 ] 0x50000001
mov esi 0x88c00000
lea edi [ eax + 0x9 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov ebx [ DeleteObject@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x20 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
cmp [ ebp + 0xc ] 0x3
mov ebx [ ebp + 0x8 ]
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call ebx
mov [ rw-data ] 0x0
cmp [ ebp + 0xc ] 0x4
jb r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
call [ DestroyWindow@IAT ]
mov [ rw-data ] 0x0
push eax
call ebx
mov [ rw-data ] 0x0
cmp [ ebp + 0xc ] 0x5
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x6
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov [ ebp - 0x24 ] eax
cmp [ ebp + 0xc ] 0x7
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c650
mov [ ebp - 0xc ] eax
or ecx 0xffffffff
cmp [ ebp - 0x10 ] ecx
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c650
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c650
cmp [ ebp + 0x10 ] 0x1
mov [ ebp - 0x2c ] eax
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
push 0x0
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
call [ SetRect@IAT ]
push edi
push 0x0
push esi
lea edx [ ebp - 0x20 ]
push edx
call [ AdjustWindowRectEx@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x20 ]
push edx
mov edx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
push edx
push ecx
push esi
push eax
call sub_45340c
push eax
push r--data
push edi
call [ CreateWindowExW@IAT ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ rw-data ] eax
call [ GetClientRect@IAT ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
sub esi [ ebp - 0x20 ]
sub edi [ ebp - 0x1c ]
cmp [ ebp + 0x10 ] 0x0
push 0x0
push 0x0
push 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x24 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0xc ] eax
test al 0x2
je r-xdata
test al 0x8
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
mov edx [ ebp - 0x8 ]
push ecx
sub edi 0x16
push edi
sub esi 0x16
push esi
push 0xb
push 0xb
push edx
push eax
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0x24 ] 0x190
call sub_45340c
push eax
push r--data
push 0x0
call [ CreateWindowExW@IAT ]
push 0x0
push 0x0
push 0x0
push r--data
mov [ ebp + 0x10 ] eax
call [ CreateDCW@IAT ]
push 0x11
mov ebx eax
call [ GetStockObject@IAT ]
push eax
push ebx
call [ SelectObject@IAT ]
lea eax [ ebp - 0xb0 ]
push eax
push 0x40
push ebx
call [ GetTextFaceW@IAT ]
push 0x5a
push ebx
call [ GetDeviceCaps@IAT ]
push ebx
mov [ ebp - 0x8 ] eax
call [ DeleteDC@IAT ]
mov ebx [ ebp + 0xc ]
cmp ebx 0x8
jb r-xdata
mov eax [ rw-data ]
push eax
push edi
push esi
push 0x0
push 0x0
push 0x5000000e
push 0x0
push r--data
push 0x0
mov [ ebp + 0xc ] 0x0
call [ CreateWindowExW@IAT ]
mov ecx [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
mov [ ebp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
push 0x80000000
push eax
call sub_45340c
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
test al 0x1
je r-xdata
xor edi edi
test al 0x4
je r-xdata
mov [ ebp - 0x8 ] 0x50000002
cmp ebx 0x9
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call sub_45340c
push eax
call sub_4111c1
add esp 0x4
cmp eax 0x1
jb r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
push 0x2
call [ GlobalAlloc@IAT ]
mov edi eax
push edi
call [ GlobalLock@IAT ]
push 0x0
lea edx [ ebp - 0x2c ]
push edx
push ebx
push eax
push esi
call [ ReadFile@IAT ]
push edi
call [ GlobalUnlock@IAT ]
push esi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
call [ CreateStreamOnHGlobal@IAT ]
mov edx [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
push ecx
push r--data
push 0x0
push 0x0
push edx
call [ OleLoadPicture@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push edi
call [ GlobalFree@IAT ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
test al 0x10
je r-xdata
mov esi 0x88800000
movsx ecx [ ebp - 0x8 ]
and ecx 0x2
or ecx 0xa0000001
shr ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x20 ]
call sub_40c650
cmp eax 0x6
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x1c ]
push eax
call sub_45340c
push eax
lea edx [ ebp - 0xb0 ]
push edx
call sub_411567
add esp 0x8
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ ebp + 0x8 ]
push 0x2000
push 0x0
push 0x0
push 0x0
push ecx
call [ CopyImage@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
push ecx
push 0x0
push 0x172
push esi
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
push 0x20
push eax
push ecx
push 0x0
push 0x0
push 0x0
push esi
mov [ rw-data ] edx
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
push 0x4
push eax
call [ ShowWindow@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor esi 0x8000000
mov eax [ ebp - 0x24 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x24 ]
call sub_40c650
test eax eax
js r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x20 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push 0x4
push eax
call [ ShowWindow@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov ebx eax
push ecx
push ebx
call [ SelectObject@IAT ]
mov edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call sub_45340c
push eax
push ebx
call sub_44389a
mov edx [ ebp + 0xc ]
add esp 0xc
push edx
push ebx
call [ SelectObject@IAT ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
call [ ReleaseDC@IAT ]
mov ecx [ ebp - 0x24 ]
mov eax edi
sub eax ecx
cdq
push 0x1
push ecx
sub eax edx
push esi
sar eax 0x1
add eax 0xb
push eax
push 0xb
push ebx
call [ MoveWindow@IAT ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x24 ]
call sub_40c650
cmp eax 0x3e8
jg r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_40c650
jmp r-xdata
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0x8 ]
imul ecx [ ebp - 0x4 ]
push 0x0
push 0x2
push 0x0
push 0x4
push 0x1
push 0x0
push 0x0
push 0x0
push eax
mov eax 0xc71c71c7
imul ecx
sar edx 0x4
push 0x0
mov eax edx
push 0x0
shr eax 0x1f
push 0x0
add eax edx
push eax
call [ CreateFontW@IAT ]
mov ebx [ ebp + 0x10 ]
push 0x1
push eax
push 0x30
push ebx
mov [ rw-data ] eax
call [ SendMessageW@IAT ]
test [ ebp - 0x2c ] 0x20
je r-xdata
sub_459aaa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push esi
push edi
push 0x1
push ecx
push eax
call sub_4594e9
mov esi [ ebp + 0xc ]
mov edi [ rw-data ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_459add
push ebp
mov ebp esp
call sub_432fee
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_459b06
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_44ba68
add esp 0x4
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_459b41
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_44bacc
add esp 0x4
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_459b7c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x2
push esi
mov [ ebp - 0x4 ] ecx
mov esi 0x1
jb r-xdata
push edi
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov esi eax
test esi esi
jle r-xdata
pop edi
nop
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10c ]
push eax
call sub_4331a2
inc edi
add esp 0x4
cmp edi esi
jl r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_43333c
add esp 0x4
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_459c06
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov edi ecx
or ebx 0xffffffff
call sub_45340c
push eax
call sub_44b98c
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ esp + 0x14 ] eax
call sub_40c650
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
mov [ esp + 0x1c ] eax
call sub_40c650
cmp [ esi + 0x8 ] 0x6
mov [ esp + 0x18 ] eax
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push 0x1
push ebx
push eax
push ecx
push edi
call sub_441fd6
cmp ebx 0x2
jge r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c650
mov ebx eax
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
push eax
call sub_44bacc
mov eax [ edi + 0x114 ]
add esp 0x4
push eax
call sub_4331a2
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
add esp 0x4
push 0x1
push ebx
push ecx
push edx
push edi
call sub_441fd6
mov eax [ edi + 0x114 ]
push eax
call sub_4331a2
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
add esp 0x4
push eax
call sub_45340c
push eax
call sub_44ba68
mov edx [ edi + 0x10c ]
add esp 0x4
push edx
call sub_4331a2
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0xffffffff
je r-xdata
mov ebx 0x2
sub_459d36
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
mov edi ecx
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] 0xffffffff
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x2c ]
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx ]
push eax
mov ebx 0x1
mov [ esp + 0x20 ] edx
mov [ esp + 0x18 ] 0x0
call sub_45340c
push eax
call sub_44b98c
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x5
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x10 ] 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ esp + 0x24 ] eax
call sub_44cecd
test al al
jne r-xdata
cmp [ esp + 0x10 ] 0x5
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
mov ebx eax
test ebx ebx
jle r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
mov [ esp + 0x24 ] eax
call sub_44cecd
test al al
jne r-xdata
mov ecx [ esp + 0x20 ]
call sub_40c650
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x24 ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c650
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x4 ]
push edx
call sub_44cecd
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
call sub_40c650
mov [ esp + 0x18 ] eax
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x1c ]
push 0x1
push eax
mov eax [ esp + 0x20 ]
push eax
push ecx
push edi
call sub_441fd6
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov [ esp + 0x14 ] ebx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44cecd
test al al
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
push eax
call sub_44bacc
mov eax [ edi + 0x110 ]
add esp 0x4
push eax
call sub_4331a2
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
add esp 0x4
push eax
call sub_45340c
push eax
call sub_44ba68
mov edx [ edi + 0x10c ]
add esp 0x4
push edx
call sub_4331a2
add esp 0x4
dec ebx
jne r-xdata
sub_459ef1
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x3
mov [ ebp - 0x4 ] ecx
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b3ac
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_44b3ac
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
mov ebx eax
call sub_40c650
mov esi eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov edx [ ebp - 0x4 ]
push ebx
lea ecx [ ebp - 0xc ]
mov edi eax
mov eax [ edx + 0x104 ]
push ecx
push eax
call sub_43137e
add esi [ ebp - 0xc ]
add edi [ ebp - 0x8 ]
push 0x0
call [ GetDC@IAT ]
push edi
mov ebx eax
push esi
push ebx
call [ GetPixel@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov ecx edi
sar ecx 0x10
mov edx edi
and edx 0xff
and ecx 0xff
shl edx 0x10
or ecx edx
and edi 0xff00
push ebx
or ecx edi
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
call [ ReleaseDC@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_459fc0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ebx
mov [ ebp - 0x8 ] ecx
call sub_408f40
mov edi [ ebp + 0x8 ]
mov esi 0x1
mov [ ebx + 0x8 ] esi
mov [ ebx ] 0x0
cmp [ edi + 0x8 ] 0x7
mov [ ebp - 0x4 ] 0x0
jb r-xdata
cmp [ edi + 0x8 ] 0x5
mov [ ebp + 0xc ] esi
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x8 ] 0x6
jb r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
cmp eax esi
jle r-xdata
call [ GetForegroundWindow@IAT ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
call sub_44b3ac
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c650
mov [ ebp + 0xc ] eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x14 ]
push eax
call sub_44b3ac
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push esi
push ecx
push edi
call sub_431613
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push esi
push edx
push edi
call sub_43156c
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
mov [ ebp + 0x8 ] eax
call sub_40c650
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x18 ] eax
call sub_40c650
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
mov esi eax
mov [ ebp - 0x14 ] esi
call sub_40c650
sub esi [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
push esi
call sub_4152bb
mov edx [ ebp + 0x8 ]
add esp 0x4
lea esi [ eax + 0x1 ]
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
call sub_4313ca
mov edi eax
test edi edi
je r-xdata
mov esi ebx
fstp [ ebp - 0xc ]
call sub_408f40
fld [ ebp - 0xc ]
push edi
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
call sub_4111dc
add esp 0x4
sub_45a10f
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test ecx ecx
jne r-xdata
push esi
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push 0x2
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
call [ CloseClipboard@IAT ]
lea ecx [ ebp - 0x10 ]
call sub_402250
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax edi
call sub_403c90
lea ecx [ ebp - 0x10 ]
call sub_402250
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
push eax
call sub_411567
add esp 0x8
push esi
call [ GlobalUnlock@IAT ]
mov ecx [ rw-data ]
push ecx
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
push esi
push 0xd
call [ SetClipboardData@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
lea ecx [ ebp - 0x10 ]
call sub_402250
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ CloseClipboard@IAT ]
lea ecx [ ebp - 0x10 ]
call sub_402250
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
sub_45a26c
push ebp
mov ebp esp
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x3a98
push 0x1
push r--data
push 0x0
push 0x1a
push 0xffff
mov edi ecx
call [ SendMessageTimeoutW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop esi
sub_45a2c6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
mov eax [ eax + 0x4 ]
push esi
push edi
jb r-xdata
mov eax [ eax ]
push 0x0
push eax
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_45340c
push eax
push esi
jmp r-xdata
call sub_45340c
push eax
call [ SetEnvironmentVariableW@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45a312
push ebp
mov ebp esp
sub esp 0x8
push 0x10000
call sub_4115d7
add esp 0x4
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43652f
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] cx
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
push 0x7fff
push eax
push ecx
call sub_45340c
push eax
call [ GetEnvironmentVariableW@IAT ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_4530e8
lea ecx [ ebp - 0x8 ]
push ecx
call sub_436508
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_45a370
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c650
test eax eax
jne r-xdata
push 0x1
push eax
jmp r-xdata
call [ BlockInput@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45a3ac
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push 0x10000
call sub_4115d7
add esp 0x4
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43652f
mov esi [ ebp - 0x8 ]
mov ecx [ rw-data ]
push 0x7fff
push esi
push ecx
call [ GetWindowTextW@IAT ]
mov ebx [ ebp + 0xc ]
mov eax esi
call sub_40e710
lea edx [ ebp - 0x8 ]
push edx
call sub_436508
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a3fe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
mov edx [ rw-data ]
push eax
push edx
call [ SetWindowTextW@IAT ]
xor eax eax
pop ebp
retn 0x8
sub_45a423
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x460 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov edx [ eax + 0x4 ]
mov eax [ edx ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
call sub_410bc0
mov ebx [ edi + 0x458 ]
mov [ ebp + 0x8 ] ebx
lea ebx [ ebx ]
mov eax [ edi + 0x45c ]
mov ecx [ eax ]
mov [ ecx + 0x11 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
mov ebx [ ebp - 0x4 ]
mov esi [ ebx ]
lea eax [ ebp - 0x18 ]
call sub_40dbb0
test al al
jne r-xdata
mov eax [ edi + 0x458 ]
mov [ ebp + 0x8 ] eax
lea ecx [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
mov [ esi + 0x11 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_440847
mov ebx [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
call sub_440847
jmp r-xdata
inc ebx
push ecx
lea edx [ ebp + 0x8 ]
mov [ esp ] 0x0
push edx
call sub_442a55
test al al
je r-xdata
push ecx
lea ecx [ ebp + 0x8 ]
mov [ esp ] 0x0
push ecx
call sub_442a55
test al al
je r-xdata
sub_45a52f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
call sub_40d370
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_45f645
mov eax esi
pop esi
pop ebp
retn 0x8
sub_45a54c
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push ebx
push esi
push edi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_425a36
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
push esi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_443006
mov edi eax
mov ebx edx
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a5aa
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push ebx
push esi
push edi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_425a0e
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
push esi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_443006
mov edi eax
mov ebx edx
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a608
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259e2
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a647
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
mov eax [ edi ]
push eax
call sub_443869
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ edi ]
push ecx
call sub_44b960
test al al
je r-xdata
mov edi [ edi + 0x4 ]
push edi
call sub_443869
test al al
je r-xdata
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov esi [ esi ]
call sub_40baa0
sub esp 0x8
mov ecx esi
fstp [ esp ]
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259d1
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ edi + 0x4 ]
push edi
call sub_44b960
test al al
je r-xdata
mov ecx edi
call sub_40c650
test eax eax
je r-xdata
push edi
call sub_443006
or eax edx
je r-xdata
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
call sub_40c650
mov ecx edi
mov esi eax
call sub_40c650
cdq
idiv esi
mov esi [ ebp + 0xc ]
mov edi edx
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push eax
call sub_443006
push esi
mov edi eax
mov ebx edx
call sub_443006
push ebx
push edi
push edx
push eax
call sub_41ee60
mov esi [ ebp + 0xc ]
mov edi eax
mov ebx edx
call sub_408f40
mov [ esi + 0x4 ] ebx
pop ebx
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x2
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a768
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259c8
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a7a7
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259bf
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a7e6
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259b6
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a825
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_4259ab
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a864
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_425976
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a8a3
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_425947
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a8e2
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_42593c
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a921
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_42592f
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a960
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40baa0
sub esp 0x8
fstp [ esp ]
call sub_425914
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45a99f
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x3
mov ebx ecx
mov [ ebp - 0x1 ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi + 0x8 ]
cmp eax 0x3
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_45ab5b ]
mov [ ebp - 0x1 ] al
call sub_44b304
fstp [ ebp - 0x14 ]
call sub_408f40
fld [ ebp - 0x14 ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40baa0
fst [ ebp - 0xc ]
fldz
fcompp
fnstsw ax
test ah 0x1
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4429ef
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
call sub_44b304
fmul [ ebp - 0xc ]
fstp [ ebp - 0x14 ]
call sub_408f40
fld [ ebp - 0x14 ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_4429ef
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] al
je r-xdata
call sub_40baa0
fstp [ ebp - 0x14 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40baa0
fst [ ebp - 0xc ]
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x1
jne r-xdata
call sub_40c650
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
mov [ ebp + 0x8 ] eax
call sub_40c650
mov ecx [ ebp + 0x8 ]
mov edi ecx
sub edi eax
mov [ ebp + 0xc ] eax
cmp eax ecx
jge r-xdata
call sub_44b304
fld [ ebp - 0x14 ]
fld [ ebp - 0xc ]
fsub st1
fxch st2
fmulp st1
faddp st1
fstp [ ebp - 0x14 ]
call sub_408f40
fld [ ebp - 0x14 ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
test edi edi
jle r-xdata
push 0x0
push 0x1
add eax ebx
call sub_403c90
cmp edi 0x7ffffff
jge r-xdata
call sub_44b366
cdq
idiv edi
mov edi edx
add edi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
sub_45ab6b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_40c650
test eax eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
js r-xdata
mov edi [ eax ]
call sub_40c650
mov esi eax
mov ecx edi
neg esi
call sub_40c650
mov edi eax
mov ecx esi
shl edi cl
mov esi [ eax ]
call sub_40c650
push eax
mov ecx esi
call sub_40c650
mov edi eax
pop ecx
sar edi cl
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45abcf
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x3
push esi
mov esi 0x10
push edi
mov [ ebp - 0x4 ] ecx
lea edi [ esi - 0xf ]
jb r-xdata
cmp [ ebx + 0x8 ] 0x2
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x8 ] 0xa
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
mov ebx eax
mov [ ebp - 0x4 ] ebx
cmp esi 0x20
jge r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov edi eax
push ecx
call sub_45340c
test eax eax
je r-xdata
push ecx
call sub_442fec
cmp eax 0x29
je r-xdata
xor eax eax
or eax 0xffffffff
mov ecx esi
shl eax cl
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_45340c
movzx eax [ eax ]
add eax 0xffffffbe
cmp eax 0x35
ja r-xdata
cmp edi esi
jl r-xdata
add edi esi
js r-xdata
and eax ebx
mov [ ebp + 0x8 ] eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx edx [ eax + lookup_table_45ad6b ]
jmp [ edx * 4 + jump_table_45ad5b ]
test edi edi
jne r-xdata
mov edi edi
mov esi 0x8
jmp r-xdata
mov esi 0x20
mov ebx esi
sub ebx edi
mov ecx ebx
mov eax 0x1
shl eax cl
mov ecx edi
dec eax
mov edx eax
and edx [ ebp - 0x4 ]
shl edx cl
cmp esi 0x20
jge r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub edi esi
cmp edi esi
jge r-xdata
or [ ebp + 0x8 ] edx
cmp esi 0x20
jge r-xdata
mov edi 0x1
mov ecx esi
shl edi cl
dec edi
and edx edi
not eax
mov edi eax
mov edi 0x1
mov ecx esi
shl edi cl
sub edi eax
dec edi
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
and edi [ ebp - 0x4 ]
lea ecx [ ebx - 0x1 ]
mov eax 0x7fffffff
sar eax cl
mov ecx ebx
sar edi cl
mov [ esi + 0x8 ] 0x1
and eax edi
or eax [ ebp + 0x8 ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45ad6f
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] al
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ edi + 0x8 ]
call sub_40c650
mov esi 0x1
mov [ ebp + 0x8 ] eax
cmp ebx esi
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov edx [ ebp + 0x8 ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40c650
xor [ ebp + 0x8 ] eax
inc esi
cmp esi ebx
jb r-xdata
sub_45adf3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c650
mov esi [ ebp + 0xc ]
mov edi eax
not edi
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45ae22
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ edi + 0x8 ]
call sub_40c650
mov esi 0x1
mov [ ebp + 0x8 ] eax
cmp ebx esi
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov edx [ ebp + 0x8 ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40c650
or [ ebp + 0x8 ] eax
inc esi
cmp esi ebx
jb r-xdata
sub_45ae74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ edi + 0x8 ]
call sub_40c650
mov esi 0x1
mov [ ebp + 0x8 ] eax
cmp ebx esi
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov edx [ ebp + 0x8 ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40c650
and [ ebp + 0x8 ] eax
inc esi
cmp esi ebx
jb r-xdata
sub_45aec6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_4426bb
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45aef8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_44b3ac
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45af26
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ ecx ]
push edi
push esi
call sub_4426bb
test al al
je r-xdata
xor edi edi
push esi
call sub_44b3ac
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edi 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45af70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov edi ecx
call sub_44b3ac
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x7
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_44b3ac
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45afe3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push ebx
push eax
call sub_45340c
mov ebx [ ebp + 0xc ]
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_45b004
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_4536cb
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b036
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_408f40
mov ebx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
push edi
call sub_4536cb
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x3
jne r-xdata
mov ecx edi
call sub_40baa0
call sub_425ab6
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_40baa0
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_45b0b7
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_408f40
mov ebx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
push edi
call sub_4536cb
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_408f40
mov [ esi ] 0x1
mov [ esi + 0x8 ] 0x1
cmp eax 0x2
je r-xdata
mov ecx edi
call sub_40baa0
call sub_425ab6
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_40baa0
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
sub_45b13f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_443d61
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b171
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_443833
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b1a3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_4429ef
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b1d5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp eax 0xffff
jle r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_40bc70
push 0x0
lea edx [ ebp - 0x10 ]
push edx
call sub_443758
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp + 0x8 ] ax
xor ecx ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xa ] cx
call sub_40e710
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax r--data
call sub_40e710
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45b26a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
test eax eax
jne r-xdata
push ebx
cmp eax 0xff
jle r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_40bc70
push 0x0
lea edx [ ebp - 0x10 ]
push edx
call sub_443758
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x80
jge r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push 0xffffffff
push edx
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] 0x0
call sub_43299a
mov ebx [ ebp + 0xc ]
add esp 0x8
mov esi eax
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ax
xor ecx ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xa ] cx
call sub_40e710
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45b33b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_45340c
mov esi [ ebp + 0xc ]
movzx edi [ eax ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45b36a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push ebx
push esi
push edi
push eax
call sub_45340c
mov dx [ eax ]
xor eax eax
or ecx 0xffffffff
lea ebx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] dx
mov [ ebp + 0xa ] ax
call sub_40f6f0
mov esi [ ebp + 0xc ]
mov edi eax
movzx ebx [ edi ]
call sub_408f40
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_45b3be
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40c650
dec eax
je r-xdata
mov eax 0x1
mov [ ebx ] ax
dec eax
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4533eb
push eax
lea esi [ ebx + 0x24 ]
call sub_40e0a0
dec eax
je r-xdata
mov edx 0x2
mov [ ebx ] dx
jmp r-xdata
xor ecx ecx
mov [ ebx ] cx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_4533eb
push eax
lea esi [ ebx + 0x4 ]
call sub_40e0a0
dec eax
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_4533eb
push eax
lea esi [ ebx + 0x14 ]
call sub_40e0a0
sub_45b445
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
push edi
push esi
mov edi ecx
call sub_44cecd
test al al
jne r-xdata
lea eax [ edi + 0x78 ]
mov ebx r--data
call sub_402160
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push esi
call sub_4533eb
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push eax
lea esi [ edi + 0x78 ]
call sub_40e0a0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_45b4d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push edi
call sub_40c650
mov edx [ esi + 0x4 ]
mov ebx [ ebp + 0xc ]
add esi 0x4
mov edi eax
mov [ ebp + 0x8 ] edx
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
push ebx
call sub_4530c9
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0xd8 ] edi
jne r-xdata
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_440847
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
push esi
call sub_452359
mov [ ebp + 0xc ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push ebx
call sub_4530c9
push ecx
lea eax [ ebp + 0x8 ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
sub_45b578
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x88 ]
push esi
call sub_45b556
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_45b59e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
xor eax eax
push edi
test ecx ecx
je r-xdata
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_453132
xor ebx ebx
xor edi edi
mov [ ebp + 0x8 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov edx [ esi + 0x4 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + edi * 4 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push edx
push eax
lea edx [ ebx + ecx ]
push edx
call sub_410e60
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
add ebx [ ecx + 0x4 ]
inc edi
add esp 0xc
cmp edi [ esi + 0x8 ]
jb r-xdata
mov edi [ edx ]
add eax [ edi + 0x4 ]
add edx 0x4
dec ecx
jne r-xdata
sub_45b606
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jbe r-xdata
push esi
push edi
push eax
call sub_441361
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b3ac
sub_45b641
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi 0x4
xor edx edx
cmp [ edi + 0x8 ] esi
jne r-xdata
mov ecx [ ecx + 0xc ]
cmp [ ecx + 0x8 ] esi
jne r-xdata
lea edx [ esi - 0x3 ]
cmp edx 0x3
ja r-xdata
add edx 0x2
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push ebx
jmp [ edx * 4 + jump_table_45b765 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
mov ecx edi
call sub_40c650
push eax
mov ecx ebx
call sub_40c650
push eax
call sub_449f40
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40c650
push eax
push esi
call sub_45340c
push eax
mov ecx edi
call sub_40c650
push eax
mov ecx ebx
call sub_40c650
push eax
call sub_449f40
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
push ecx
call sub_45340c
push eax
mov ecx esi
call sub_40c650
push eax
mov ecx edi
call sub_40c650
push eax
mov ecx ebx
call sub_40c650
push eax
call sub_449f40
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
mov ecx edi
call sub_40c650
push eax
mov ecx ebx
call sub_40c650
push eax
call sub_449f40
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
mov [ esi + 0x8 ] 0x1
pop ebx
sub_45b775
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
or ebx 0xffffffff
xor edi edi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax 0x2
jbe r-xdata
cmp eax 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0x4
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
mov eax [ ebp - 0x4 ]
push edi
push ebx
push eax
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_440d32
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_44b3ac
mov edi eax
sub_45b80a
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x8 ]
or esi 0xffffffff
test ebx ebx
je r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40c650
mov esi eax
push 0x0
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
push eax
lea edx [ esp + 0x10 ]
push edx
jmp r-xdata
mov ebx [ ebp + 0xc ]
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_455a89
mov edi [ esp + 0xc ]
mov esi eax
test edi edi
jg r-xdata
sub_45b89d
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
xor ebx ebx
push edi
xor edi edi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x4 ] bl
cmp eax 0x3
jb r-xdata
cmp [ ebp + 0x8 ] 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov [ ebp - 0xc ] eax
call sub_44cecd
test al al
jne r-xdata
cmp [ ebp + 0x8 ] 0x5
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov [ ebp - 0xc ] eax
call sub_44cecd
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_45340c
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov esi [ eax ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push edi
push ebx
push ecx
call sub_45340c
push eax
mov ecx esi
call sub_40c650
push eax
call sub_4557e0
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_44cecd
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_40c650
mov edi eax
mov ecx [ ebp + 0x8 ]
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
and al 0x1
mov [ ebp - 0x8 ] al
call sub_40c650
shr al 0x1
and al 0x1
mov [ ebp - 0x4 ] al
sub_45b97b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x2
push edi
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push eax
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_44982a
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
sub_45b9ce
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c650
push eax
call sub_449d2e
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45ba01
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
lea edx [ ebp + 0x8 ]
push edx
call sub_40c650
push eax
call sub_449d86
mov esi [ ebp + 0xc ]
test al al
je r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
call sub_408f40
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45ba54
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
push eax
call sub_40c650
push eax
call sub_449b77
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
sub_45ba9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
or ebx 0xffffffff
cmp [ esi + 0x8 ] 0x4
push edi
mov [ ebp - 0x4 ] ebx
mov edi ebx
jbe r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
mov eax [ ebp - 0x4 ]
push eax
push ebx
push edi
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_4499db
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov edi eax
sub_45bb27
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
or edi 0xffffffff
mov ebx edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call sub_40c650
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x8 ] 0x7
jbe r-xdata
cmp [ esi + 0x8 ] 0x6
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x1c ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] 0x5
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c650
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c650
mov [ ebp - 0xc ] eax
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
mov [ ebp - 0x10 ] eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov esi [ esi ]
push edx
mov edx [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push edx
push eax
push ebx
push edi
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_447e8e
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov edi eax
sub_45bc38
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x2
push edi
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push eax
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_449c00
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
sub_45bc8a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push esi
push edi
lea ecx [ esp + 0x8 ]
call sub_40bc70
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_45340c
push eax
mov ecx esi
call sub_40c650
push eax
call sub_4491b9
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
lea ecx [ esp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_4533eb
push eax
lea esi [ esp + 0xc ]
call sub_40e0a0
sub_45bd04
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b3ac
push eax
push rw-data
call sub_440edc
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebp
retn 0x8
sub_45bd53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_44870c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45bd91
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_448fa2
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45bdcf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push esi
or esi 0xffffffff
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] esi
call sub_40bc70
mov edi [ ebp + 0xc ]
mov [ esp + 0x18 ] esi
mov esi edi
mov [ esp + 0x14 ] 0x2
call sub_408f40
mov esi [ esp + 0x10 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
cmp esi 0x5
jbe r-xdata
cmp esi 0x4
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c650
mov [ esp + 0x14 ] eax
cmp esi 0x3
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov esi [ edx + 0x10 ]
push esi
call sub_443833
test al al
je r-xdata
cmp esi 0x2
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x20 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_4533eb
push eax
lea esi [ esp + 0x24 ]
call sub_40e0a0
mov esi [ esp + 0x10 ]
mov esi [ esp + 0x1c ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
mov esi eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40baa0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
sub esp 0x8
fstp [ esp ]
push edx
push eax
push ecx
push esi
mov ecx ebx
call sub_40c650
push eax
call sub_4515b4
mov esi edi
mov ebx eax
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] ebx
sub_45bedf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c650
push eax
mov ecx rw-data
call sub_4550fc
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_45bf17
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b3ac
mov ebx eax
mov edx [ esi + 0x4 ]
mov ecx [ edx ]
push ebx
push edi
call sub_40c650
push eax
call sub_441078
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
mov edi eax
sub_45bf7a
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push esi
or esi 0xffffffff
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] esi
call sub_40bc70
mov edi [ ebp + 0xc ]
mov [ ebp - 0xc ] esi
mov esi edi
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x0
call sub_408f40
mov esi [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
cmp esi 0x5
jbe r-xdata
cmp esi 0x4
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c650
mov [ ebp - 0x8 ] eax
cmp esi 0x3
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov [ ebp + 0xc ] eax
call sub_4426bb
test al al
je r-xdata
cmp esi 0x2
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0xc ]
push esi
call sub_443833
test al al
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_44b3ac
mov [ ebp - 0x4 ] eax
cmp esi 0x1
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov [ ebp - 0xc ] eax
push esi
call sub_4533eb
push eax
lea esi [ ebp - 0x20 ]
call sub_40e0a0
mov esi [ ebp + 0x8 ]
mov esi [ ebp - 0x10 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov esi eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
call sub_40baa0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
sub esp 0x8
fstp [ esp ]
push edx
push eax
push ecx
lea edx [ ebp - 0x20 ]
push edx
push esi
call sub_4516ae
mov esi edi
mov ebx eax
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] ebx
sub_45c09c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp + 0x8 ] ebx
cmp esi ebx
jbe r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp esi 0x2
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push ebx
push eax
push ecx
call sub_4414f4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_44b3ac
mov ebx eax
sub_45c105
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
push 0xffffffff
push 0xffffffff
push eax
push 0xffffffff
push 0x0
push 0xffffffff
push ecx
call sub_45340c
push eax
call sub_4561da
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
sub_45c158
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b3ac
mov ebx eax
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0xffffffff
push 0xffffffff
push ebx
push edi
push eax
call sub_45340c
push eax
push 0xffffffff
push 0x0
call sub_4561da
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
mov edi eax
sub_45c1c4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
push eax
push 0xffffffff
push esi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_4561da
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
mov esi eax
sub_45c218
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
push 0xffffffff
call sub_40c650
push eax
push esi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_4561da
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
mov esi eax
sub_45c26c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
push 0xffffffff
push 0xffffffff
push eax
push 0xffffffff
push 0x0
call sub_40c650
push eax
push 0x0
call sub_4561da
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
sub_45c2be
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov edi 0x5
jbe r-xdata
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
mov ebx eax
push ebx
push edi
call sub_441165
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
mov edi eax
sub_45c317
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_44b3ac
push esi
push eax
call sub_449f8f
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov esi eax
sub_45c362
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ecx edi
call sub_40c650
lea esi [ eax - 0x1 ]
mov eax [ ebp + 0xc ]
mov [ eax ] esi
test esi esi
js r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x10
push edi
call sub_4536cb
test al al
je r-xdata
cmp esi [ ebx + 0x180 ]
jge r-xdata
mov ecx [ ebx + 0x17c ]
mov esi [ ecx + esi * 4 ]
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x10
mov edx [ esi ]
cmp [ edx ] eax
je r-xdata
sub_45c3c1
push ebp
mov ebp esp
sub esp 0x220
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] ecx
call sub_408f40
mov edi [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ edi + 0x8 ] 0x3
mov [ ebp + 0xf ] 0x0
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x220 ]
call sub_410120
push 0xfffe
call sub_4115d7
add esp 0x4
push eax
lea edx [ ebp - 0xc ]
push edx
call sub_43652f
mov eax [ edi + 0x4 ]
mov ebx [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x220 ]
push ecx
push 0x7fff
push ebx
push eax
call sub_45340c
push eax
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
test eax eax
setg [ ebp + 0xf ]
lea eax [ ebp - 0xc ]
push eax
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
lea ecx [ ebp - 0x220 ]
push ecx
push 0x3
lea edx [ ebp - 0x14 ]
push edx
push eax
call sub_45340c
push eax
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
lea edx [ ebp - 0x220 ]
push edx
push ebx
push eax
call sub_45340c
push eax
call [ WritePrivateProfileSectionW@IAT ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x220 ]
push ecx
push 0x0
push 0x0
push eax
call sub_45340c
mov edi [ WritePrivateProfileStringW@IAT ]
push eax
call edi
lea edx [ ebp - 0x220 ]
push edx
push 0x0
push 0x0
push 0x0
call edi
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
lea eax [ ebp - 0xc ]
push eax
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45c51e
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
call sub_453893
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x1
sub_45c587
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call [ SetCurrentDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45c5c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
push edi
mov [ esp + 0x10 ] 0x0
jb r-xdata
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi edi
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
test al 0x8
je r-xdata
mov [ esp + 0x10 ] 0x1
lea ecx [ esp + 0x18 ]
call sub_40bc70
push 0x8
call sub_4115d7
add esp 0x4
push 0x202
mov ebx eax
call sub_4115d7
mov edx [ ebp + 0x8 ]
add esp 0x4
push 0x0
mov esi eax
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x0
push esi
push ebx
push eax
mov [ esp + 0x28 ] esi
call sub_45340c
push eax
call sub_413a0e
add esp 0x14
mov edi ebx
lea eax [ esp + 0x18 ]
call sub_40d200
mov edi esi
lea eax [ esp + 0x18 ]
call sub_40d200
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
push ecx
call sub_4339fa
add esp 0x4
test al al
jne r-xdata
call sub_402250
mov esi [ ebp + 0x8 ]
jmp r-xdata
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x18 ]
push edx
call sub_4335cd
add esp 0x4
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
mov eax [ esp + 0x10 ]
push 0x1
push eax
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
call sub_44bd27
add esp 0x10
test al al
jne r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
call sub_408f40
mov esi [ esp + 0x14 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
jmp r-xdata
push ebx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
add esp 0x4
mov ecx edi
call sub_40c650
lea ecx [ esp + 0x18 ]
test eax eax
jne r-xdata
sub_45c730
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x224
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
push edi
mov [ esp + 0xc ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push 0x0
push edx
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
call sub_44bd27
add esp 0x10
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_408f40
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
test al 0x8
je r-xdata
mov [ esp + 0xc ] 0x1
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
call sub_45340c
push eax
call sub_413a0e
add esp 0x14
lea edi [ esp + 0x20 ]
lea esi [ esp + 0x10 ]
call sub_401b10
lea edi [ esp + 0x28 ]
mov eax esi
call sub_40d200
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx ebx
call sub_40c650
lea ecx [ esp + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_4339fa
add esp 0x4
test al al
jne r-xdata
call sub_402250
mov esi [ ebp + 0x8 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x10 ]
push ecx
call sub_4335cd
add esp 0x4
test al al
jne r-xdata
mov esi ebx
call sub_408f40
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
sub_45c862
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx ]
push edx
push eax
call sub_45340c
push eax
call sub_44bb30
add esp 0x8
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x1
sub_45c8c1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_4335cd
add esp 0x4
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45c8fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_4339fa
add esp 0x4
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45c937
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
call sub_44bbd2
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x1
sub_45c9a0
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov ebx [ ebp + 0xc ]
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x20c ]
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x20c ]
call sub_410120
lea eax [ ebp - 0x20c ]
jmp r-xdata
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push eax
call [ GetShortPathNameW@IAT ]
test eax eax
je r-xdata
sub_45ca50
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x1
push edi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov ebx [ ebp + 0xc ]
call sub_40e710
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax edi
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x210 ]
call sub_410120
lea eax [ ebp - 0x210 ]
jmp r-xdata
lea edi [ ebp - 0x210 ]
mov ebx eax
call sub_4102b0
cmp al 0x1
jne r-xdata
sub_45cafa
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
push ebx
push esi
push edi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_45340c
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ esp + 0x10 ]
push edx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
push 0x1
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
call [ FindClose@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x180 ]
xor ebx ebx
test eax eax
je r-xdata
push 0x14
cmp ebx eax
jne r-xdata
mov ecx [ esi + 0x17c ]
call sub_4115d7
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebx * 4 ]
add esp 0x4
mov [ ecx ] eax
call sub_4115d7
add esp 0x4
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
lea ecx [ esi + 0x178 ]
push ecx
call sub_436299
jmp r-xdata
inc ebx
add ecx 0x4
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x17c ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov [ ecx ] 0x1
mov edx [ esi + 0x17c ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov [ ecx + 0x8 ] edi
lea edi [ esp + 0x3c ]
call sub_410160
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebx * 4 ]
mov edx [ ecx ]
mov [ edx + 0xc ] eax
mov eax [ esi + 0x17c ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
call sub_408f40
inc ebx
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
sub_45cc7a
push ebp
mov ebp esp
sub esp 0x404
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x1
push esi
push edi
mov edi ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_45340c
mov esi eax
mov esi r--data
jmp r-xdata
push r--data
push esi
call sub_41313c
mov ebx [ ebp + 0xc ]
add esp 0x8
test eax eax
mov eax r--data
je r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x404 ]
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push esi
lea edx [ ebp - 0x404 ]
push edx
push eax
call sub_45340c
push eax
call sub_433a13
add esp 0xc
cmp al 0x1
jne r-xdata
call sub_40e710
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax r--data
sub_45cd1e
push ebp
mov ebp esp
sub esp 0xc3c
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ ebp - 0xc ] ecx
call sub_45340c
cmp [ edi + 0x8 ] 0x3
mov esi eax
mov ebx 0x1
jb r-xdata
mov [ ebp + 0x8 ] 0x0
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
mov [ ebp + 0x8 ] bl
cmp eax ebx
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx ]
push 0x104
push eax
call sub_45340c
push eax
lea eax [ ebp - 0x41c ]
push eax
call sub_412fba
xor ecx ecx
lea esi [ ebp - 0x41c ]
mov [ ebp - 0x214 ] cx
call sub_410290
mov eax esi
mov ecx esi
call sub_410120
lea edx [ ebp - 0xc3c ]
push edx
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0xa38 ]
push ecx
lea edx [ ebp - 0x834 ]
push edx
push esi
call sub_413a0e
lea ecx [ ebp - 0xa38 ]
push ecx
lea edx [ ebp - 0x834 ]
push edx
call sub_411536
lea eax [ ebp - 0xc3c ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
call sub_411536
add esp 0x30
lea edx [ ebp - 0x628 ]
push edx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x834 ]
push eax
call edi
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp eax 0x2b
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_433998
add esp 0x4
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x2d
jne r-xdata
add esi 0x2
lea ebx [ eax - 0x2a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_431a86
test al al
jne r-xdata
lea edx [ ebp - 0x210 ]
push edx
call [ GetFileAttributesW@IAT ]
or eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
not ecx
and eax ecx
push eax
lea edx [ ebp - 0x210 ]
push edx
call [ SetFileAttributesW@IAT ]
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp eax 0x52
je r-xdata
add esi 0x2
xor ebx ebx
lea edx [ ebp - 0x628 ]
push edx
call edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x628 ]
push eax
call edi
jmp r-xdata
mov eax 0x1
cmp eax 0x72
je r-xdata
lea edx [ ebp - 0x210 ]
push edx
call edi
lea eax [ ebp - 0x210 ]
push r--data
push eax
call sub_411567
add esp 0x8
lea ecx [ ebp - 0x628 ]
push ecx
call edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
or [ ebp - 0x8 ] eax
or [ ebp - 0x4 ] eax
jmp r-xdata
cmp eax 0x41
je r-xdata
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
mov eax 0x20
jmp r-xdata
cmp eax 0x61
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp eax 0x53
je r-xdata
mov eax 0x4
jmp r-xdata
cmp eax 0x73
je r-xdata
cmp eax 0x48
je r-xdata
mov eax 0x2
jmp r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x4e
je r-xdata
mov eax 0x80
jmp r-xdata
cmp eax 0x6e
je r-xdata
cmp eax 0x4f
je r-xdata
mov eax 0x1000
jmp r-xdata
cmp eax 0x6f
je r-xdata
cmp eax 0x54
je r-xdata
mov eax 0x100
jmp r-xdata
cmp eax 0x74
jne r-xdata
sub_45cfb1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x10 ]
call sub_40bc70
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_4339b6
mov esi [ ebp + 0xc ]
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
je r-xdata
mov eax r--data
mov ebx esi
call sub_40e710
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test bl 0x4
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test bl 0x2
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test bl bl
jns r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test bl 0x10
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test ebx 0x1000
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test ebx 0x800
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
test ebx 0x100
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
lea edi [ esp + 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
jmp r-xdata
sub_45d0d9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
je r-xdata
push 0x7
push eax
push 0x0
call [ SHEmptyRecycleBinW@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45d11d
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push edi
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x22c ]
call sub_410120
lea edx [ ebp - 0x22c ]
push edx
call sub_4111c1
xor ecx ecx
mov [ ebp + eax * 2 - 0x22a ] cx
xor edi edi
add esp 0x4
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x22c ]
mov eax 0x54
push ecx
mov [ ebp - 0xa ] edi
mov [ ebp - 0x6 ] edi
mov [ ebp - 0xe ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] 0x3
mov [ ebp - 0x10 ] ax
call [ SHFileOperationW@IAT ]
test eax eax
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop esi
sub_45d1af
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x0
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_433998
add esp 0x4
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
push ebx
push 0x0
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
mov ebx [ CreateHardLinkW@IAT ]
push eax
call ebx
mov esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_408f40
mov eax [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
call sub_40c650
test eax eax
jne r-xdata
mov edi [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edi + 0x4 ]
mov edi [ edi ]
push edx
push eax
call sub_45340c
push eax
push edi
call sub_45340c
push eax
call sub_431be8
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] al
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
push eax
call [ DeleteFileW@IAT ]
mov edi [ edi + 0x4 ]
mov eax [ edi ]
mov edi [ edi + 0x4 ]
push 0x0
push eax
call sub_45340c
push eax
push edi
call sub_45340c
push eax
call ebx
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
sub_45d2c7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0x1
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
mov edi [ ebp - 0x10 ]
dec edi
lea esi [ ebp - 0x14 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
mov esi [ ebp - 0x14 ]
push eax
call sub_45340c
push eax
push esi
call [ SetVolumeLabelW@IAT ]
test eax eax
jne r-xdata
mov edi r--data
mov eax esi
call sub_40d200
lea ecx [ ebp - 0x14 ]
call sub_402250
mov eax [ ebp - 0x4 ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_45d36d
push ebp
mov ebp esp
sub esp 0x424
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x18 ] ecx
call [ SetErrorMode@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
mov edi [ ebp - 0xc ]
dec edi
lea esi [ ebp - 0x10 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
push 0xff
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
push 0xff
lea ecx [ ebp - 0x224 ]
push ecx
push edx
call [ GetVolumeInformationW@IAT ]
mov ebx [ ebp + 0xc ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov eax r--data
call sub_40e710
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
lea eax [ ebp - 0x224 ]
call sub_40e710
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
mov ecx [ ebp - 0x14 ]
push ecx
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d448
push ebp
mov ebp esp
sub esp 0x424
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x14 ] ecx
call [ SetErrorMode@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
mov edi [ ebp - 0xc ]
dec edi
lea esi [ ebp - 0x10 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
push 0xff
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
push 0xff
lea ecx [ ebp - 0x224 ]
push ecx
push edx
call [ GetVolumeInformationW@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x224 ]
push r--data
push ecx
call sub_41329b
mov ebx [ ebp + 0xc ]
add esp 0xc
lea eax [ ebp - 0x224 ]
call sub_40e710
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
mov eax [ ebp - 0x18 ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d53e
push ebp
mov ebp esp
sub esp 0x420
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov eax r--data
mov [ ebp - 0x14 ] ecx
call sub_40e710
push 0x1
call [ SetErrorMode@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
mov edi [ ebp - 0xc ]
dec edi
lea esi [ ebp - 0x10 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
push 0xff
lea eax [ ebp - 0x220 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
push 0xff
lea ecx [ ebp - 0x420 ]
push ecx
push edx
call [ GetVolumeInformationW@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
lea eax [ ebp - 0x220 ]
call sub_40e710
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
mov ecx [ ebp + 0xc ]
push ecx
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d619
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x28 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea edi [ ecx - 0x1 ]
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] eax
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
mov ebx 0x3
mov [ ebp + 0x8 ] 0x0
cmp [ ebp - 0x24 ] ebx
jne r-xdata
push 0x5c
mov eax esi
call sub_403020
mov [ ebp + 0x8 ] ebx
jmp r-xdata
lea edi [ ebx - 0x2 ]
lea esi [ ebp - 0x28 ]
call sub_401c90
cmp [ eax ] 0x3a
jne r-xdata
mov edx [ ebp + 0x8 ]
movzx eax [ edx + sub_45d779 ]
jmp [ eax * 4 + jump_table_45d765 ]
lea edi [ ebx - 0x1 ]
call sub_401c90
cmp [ eax ] 0x5c
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
push ecx
call [ GetDiskFreeSpaceW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_402250
mov eax [ ebp - 0x8 ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
cmp eax 0x15
ja r-xdata
sub_45d779
add [ esp + eax ] al
add [ esp + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x3
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov esi ebx
mov [ ebp - 0xc ] eax
call sub_408f40
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ ebp - 0x34 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x2c ] edx
mov eax [ eax + 0xc ]
mov [ ebp - 0x28 ] eax
inc [ eax ]
mov edi [ ebp - 0x30 ]
dec edi
lea esi [ ebp - 0x34 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
push eax
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
fild [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_402250
mov eax [ ebp - 0xc ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d86d
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov esi ebx
mov [ ebp - 0xc ] eax
call sub_408f40
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ ebp - 0x34 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x2c ] edx
mov eax [ eax + 0xc ]
mov [ ebp - 0x28 ] eax
inc [ eax ]
mov edi [ ebp - 0x30 ]
dec edi
lea esi [ ebp - 0x34 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
push eax
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
fild [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_402250
mov eax [ ebp - 0xc ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d94b
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
inc [ eax ]
mov edi [ ebp - 0x14 ]
dec edi
lea esi [ ebp - 0x18 ]
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ GetDriveTypeW@IAT ]
cmp eax 0x1
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
add eax 0xfffffffe
cmp eax 0x4
ja r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
jmp [ eax * 4 + jump_table_45da5f ]
lea ecx [ ebp - 0x18 ]
call sub_402250
mov eax [ ebp - 0x8 ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
jmp r-xdata
sub_45da73
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_4533eb
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x3c ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] eax
call sub_4536f7
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov ebx r--data
lea eax [ esp + 0x20 ]
call sub_402160
push edi
call [ GetDriveTypeW@IAT ]
cmp eax 0x5
jne r-xdata
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b10
lea eax [ esp + 0x30 ]
push eax
mov eax esi
call sub_40bd50
mov edi r--data
mov eax esi
call sub_40d200
mov ecx [ esp + 0x10 ]
mov esi [ mciSendStringW@IAT ]
push 0x0
push 0x0
push 0x0
push ecx
call esi
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
lea ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402250
jmp r-xdata
mov ebx r--data
lea eax [ esp + 0x10 ]
call sub_402160
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x14 ]
call sub_40bd50
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d200
mov eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
call esi
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx r--data
lea eax [ esp + 0x10 ]
call sub_402160
mov ecx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push ecx
call esi
lea ecx [ esp + 0x10 ]
call sub_402250
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov esi [ mciSendStringW@IAT ]
sub_45dc4c
push ebp
mov ebp esp
mov eax 0x1654
call sub_422240
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x8 ]
push edi
xor eax eax
push 0x208
mov [ ebp - 0x10 ] ecx
push eax
lea ecx [ ebp - 0x242 ]
push ecx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x244 ] ax
call sub_412f40
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x44a ]
push eax
mov [ ebp - 0x44c ] dx
call sub_412f40
add esp 0x18
push 0x0
mov edi 0x200
mov [ ebp - 0x8 ] 0x0
call [ CoInitialize@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
call [ SHGetMalloc@IAT ]
test eax eax
jns r-xdata
cmp ebx 0x5
jb r-xdata
call [ CoUninitialize@IAT ]
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ebx [ ebp + 0x8 ]
cmp ebx 0x4
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_44b3ac
mov [ ebp - 0x8 ] eax
cmp ebx 0x3
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_45340c
push eax
lea ecx [ ebp - 0x44c ]
push ecx
call sub_411567
add esp 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_45340c
xor ebx ebx
cmp [ eax ] bx
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
test al 0x1
je r-xdata
mov [ ebp - 0x2c ] ebx
lea eax [ ebp + 0x8 ]
push eax
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test al 0x2
je r-xdata
mov edi 0x40
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push ebx
push 0x1
add eax ecx
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x244 ]
call sub_40e710
lea edx [ ebp - 0x244 ]
push edx
push esi
call [ SHGetPathFromIDListW@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push esi
push eax
call edx
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0x244 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] edx
mov eax [ eax ]
push eax
call sub_45340c
push eax
lea ecx [ ebp - 0x1654 ]
push ecx
call sub_411567
add esp 0x8
lea ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x1654 ]
lea eax [ ebp - 0x44c ]
push ecx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] sub_431d57
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x14 ] ebx
call [ SHBrowseForFolderW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0xc ] ebx
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
push eax
lea edx [ ebp - 0x654 ]
push edx
call sub_411567
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add esp 0x8
lea edx [ ebp - 0x38 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x34 ]
push edx
lea edx [ ebp - 0x654 ]
push edx
push ebx
push ebx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
test al 0x4
je r-xdata
or edi 0x40
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x244 ]
jmp r-xdata
or edi 0x10
call sub_40e710
sub_45de8f
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_45340c
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov ebx [ esp + 0x2c ]
mov esi [ ebp + 0xc ]
xor edx edx
xor edi edi
or edi [ esp + 0x30 ]
or ebx edx
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45df23
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc6c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
push eax
mov [ esp + 0x20 ] ecx
call sub_45340c
mov ebx eax
mov [ esp + 0xc ] 0x0
cmp edi 0x3
jb r-xdata
cmp edi 0x4
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
test eax eax
js r-xdata
mov [ esp + 0x10 ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
mov [ esp + 0x10 ] 0x1
cmp eax 0x1
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
cmp eax 0x2
jg r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ GetLocalTime@IAT ]
push 0x0
push 0x1
lea edx [ esp + 0x28 ]
push edx
push ebx
call sub_432a10
add esp 0x10
test al al
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov [ esp + 0xc ] eax
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x30 ]
push ecx
call sub_433998
add esp 0x4
test al al
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
call [ SystemTimeToFileTime@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push ecx
call [ LocalFileTimeToFileTime@IAT ]
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0x104
push eax
call sub_45340c
push eax
lea eax [ esp + 0x240 ]
push eax
call sub_412fba
xor ecx ecx
add esp 0xc
lea esi [ esp + 0x238 ]
mov [ esp + 0x440 ] cx
call sub_410290
mov eax esi
mov ecx esi
call sub_410120
lea edx [ esp + 0xa70 ]
push edx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x870 ]
push ecx
lea edx [ esp + 0x664 ]
push edx
push esi
call sub_413a0e
add esp 0x14
lea ecx [ esp + 0x868 ]
push ecx
lea edx [ esp + 0x65c ]
push edx
call sub_411536
lea eax [ esp + 0xa78 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_411536
add esp 0x10
lea edx [ esp + 0x448 ]
push edx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x658 ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x3c ]
push eax
call sub_442886
test al al
jne r-xdata
mov edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
call sub_433c08
add esp 0xc
test al al
jne r-xdata
lea ecx [ esp + 0x448 ]
push ecx
call edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea edx [ esp + 0x448 ]
push edx
call edi
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call edi
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_411567
add esp 0x8
lea eax [ esp + 0x448 ]
push eax
call edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45e17d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0xffffffff
push eax
lea edx [ ebp + 0x8 ]
push edx
push esi
call sub_45c362
test al al
jne r-xdata
mov eax [ esi + 0x17c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov edx [ eax + 0x8 ]
push edx
call [ FindClose@IAT ]
mov eax [ esi + 0x17c ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push eax
call sub_4111dc
add esp 0x4
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x17c ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
push eax
call sub_4111dc
mov ecx [ esi + 0x17c ]
mov edx [ ecx + edi * 4 ]
add esp 0x4
pop edi
mov [ edx ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call sub_44ae3e
jmp r-xdata
sub_45e227
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
push edi
push esi
mov edi ecx
call sub_443833
test al al
je r-xdata
push 0x0
push esi
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_45c362
test al al
je r-xdata
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
mov ecx [ edi + 0x17c ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov edi [ ecx + 0x4 ]
xor edi edi
call sub_40da60
mov edi eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi edi
call sub_40da20
xor eax eax
push edi
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
call sub_44ae3e
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push eax
or esi 0x2000
call sub_4533eb
push eax
mov eax esi
mov ecx edi
call sub_40de40
test al al
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
cmp eax 0x2
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
mov esi 0x4000
jb r-xdata
push edi
call sub_4340f8
mov esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_408f40
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_443833
test al al
je r-xdata
test edi edi
je r-xdata
xor esi esi
push edi
call sub_44ae3e
sub_45e332
push ebp
mov ebp esp
sub esp 0x20c
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x20c ]
call sub_410120
lea ecx [ ebp - 0x20c ]
push ecx
call sub_4339fa
add esp 0x4
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp - 0x20c ]
push edx
push 0x0
push 0x0
push eax
call sub_45340c
mov esi [ WritePrivateProfileStringW@IAT ]
push eax
call esi
test eax eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push 0x0
push 0x0
call esi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
lea edx [ ebp - 0x20c ]
push edx
push 0x0
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
mov esi [ WritePrivateProfileStringW@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_44cecd
test al al
jne r-xdata
sub_45e413
push ebp
mov ebp esp
sub esp 0x20c
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x20c ]
call sub_410120
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
lea edx [ ebp - 0x20c ]
push edx
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
push edi
call sub_45340c
mov esi [ WritePrivateProfileStringW@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push 0x0
push 0x0
call esi
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45e4a5
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
push 0x1fffe
call sub_4115d7
add esp 0x4
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43652f
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x214 ]
call sub_410120
mov eax [ esi + 0x4 ]
mov ebx [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
lea edx [ ebp - 0x214 ]
push edx
push 0xffff
push ebx
push ecx
call sub_45340c
push eax
push esi
call sub_45340c
push eax
push edi
call sub_45340c
push eax
call [ GetPrivateProfileStringW@IAT ]
mov eax ebx
mov ebx [ ebp + 0xc ]
call sub_40e710
lea eax [ ebp - 0x8 ]
push eax
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45e538
push ebp
mov ebp esp
mov eax 0x2054
call sub_422240
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xf8 ] 0x1
je r-xdata
mov edx [ rw-data ]
mov ebx [ LoadStringW@IAT ]
push 0xfff
lea ecx [ ebp - 0x2050 ]
push ecx
push 0x66
push edx
call ebx
lea edi [ ebp - 0x2050 ]
lea esi [ ebp - 0x4c ]
call sub_401b10
mov ecx [ rw-data ]
push 0xfff
push edi
push 0x72
push ecx
call ebx
lea esi [ ebp - 0x3c ]
call sub_401b10
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0xf4 ]
push esi
call sub_4348de
push esi
mov [ ebp - 0x4 ] eax
call sub_4348aa
mov edi eax
push esi
mov [ ebp - 0x18 ] edi
call sub_43492f
push eax
call sub_434908
mov ebx eax
mov [ ebp - 0x1c ] ebx
lea eax [ ebp - 0x2050 ]
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc8 ]
push edx
push esi
push ebx
push edi
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_40bc70
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov edi esi
lea eax [ ebp - 0x14 ]
call sub_40d200
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
push r--data
push eax
call sub_41329b
add esp 0x10
lea edi [ ebp - 0x2050 ]
lea esi [ ebp - 0x14 ]
call sub_401b10
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
lea edx [ ebp - 0x3c ]
push edx
lea eax [ ebp - 0x14 ]
call sub_40bd50
cmp [ rw-data ] 0x0
je r-xdata
mov ebx r--data
lea eax [ ebp - 0x2c ]
call sub_402160
lea eax [ ebp - 0x2c ]
call sub_40d200
lea ecx [ ebp - 0x2c ]
push ecx
lea eax [ ebp - 0x14 ]
call sub_40bd50
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
mov ebx [ ebp - 0x1c ]
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x14 ]
mov edx [ rw-data ]
push 0x11010
push eax
push ecx
push edx
call [ MessageBoxW@IAT ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x3c ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xf4 ]
mov edx [ esi + 0xc8 ]
push eax
push ecx
push edx
push r--data
call sub_413abe
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x18 ]
push eax
push esi
push ecx
push edx
push ebx
push r--data
call sub_413abe
add esp 0x18
jmp r-xdata
movzx eax [ esi + 0x118 ]
neg eax
sbb eax eax
and eax 0x7ffff071
inc eax
lea ecx [ ebp - 0x2c ]
mov [ esi + 0xf8 ] 0x1
mov [ rw-data ] eax
call sub_402250
lea ecx [ ebp - 0x14 ]
call sub_402250
lea ecx [ ebp - 0x3c ]
call sub_402250
lea ecx [ ebp - 0x4c ]
call sub_402250
mov esi [ ebp + 0x8 ]
sub_45e737
push ebp
mov ebp esp
mov eax 0x2058
call sub_422240
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xf8 ] 0x1
je r-xdata
mov edx [ rw-data ]
mov ebx [ LoadStringW@IAT ]
push 0xfff
lea ecx [ ebp - 0x2054 ]
push ecx
push 0x66
push edx
call ebx
lea edi [ ebp - 0x2054 ]
lea esi [ ebp - 0x50 ]
call sub_401b10
mov ecx [ ebp + 0xc ]
mov edx [ rw-data ]
push 0xfff
push edi
push ecx
push edx
call ebx
lea esi [ ebp - 0x40 ]
call sub_401b10
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xf4 ]
push esi
call sub_4348de
push esi
mov [ ebp - 0x20 ] eax
call sub_4348aa
mov edi eax
push esi
mov [ ebp - 0x18 ] edi
call sub_43492f
push eax
call sub_434908
mov ebx eax
mov [ ebp - 0x1c ] ebx
lea ecx [ ebp - 0x2054 ]
test ebx ebx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc8 ]
push eax
push esi
push ebx
push edi
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_40bc70
mov edi [ ebp + 0x10 ]
test edi edi
js r-xdata
mov edi esi
lea eax [ ebp - 0x14 ]
call sub_40d200
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
push r--data
push ecx
call sub_41329b
add esp 0x10
lea edi [ ebp - 0x2054 ]
lea esi [ ebp - 0x14 ]
call sub_401b10
mov esi [ ebp - 0x20 ]
test esi esi
je r-xdata
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
lea ecx [ ebp - 0x40 ]
push ecx
lea eax [ ebp - 0x14 ]
call sub_40bd50
cmp [ rw-data ] 0x0
je r-xdata
mov ebx esi
lea eax [ ebp - 0x30 ]
call sub_402160
push edi
lea edx [ ebp - 0x30 ]
push edx
or eax 0xffffffff
call sub_40c600
mov edi r--data
lea eax [ ebp - 0x30 ]
call sub_40d200
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x14 ]
call sub_40bd50
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
mov ebx [ ebp - 0x1c ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x14 ]
mov ecx [ rw-data ]
push 0x11010
push edx
push eax
push ecx
call [ MessageBoxW@IAT ]
test ebx ebx
je r-xdata
mov [ rw-data ] eax
mov edx [ ebp + 0xc ]
add edx 0x7ffff000
mov [ rw-data ] edx
jmp r-xdata
mov edx [ ebp - 0x40 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xf4 ]
mov ecx [ esi + 0xc8 ]
push edx
push eax
push ecx
push r--data
call sub_413abe
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x18 ]
push edx
push esi
push eax
push ecx
push ebx
push r--data
call sub_413abe
add esp 0x18
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_402250
lea ecx [ ebp - 0x14 ]
call sub_402250
lea ecx [ ebp - 0x40 ]
call sub_402250
lea ecx [ ebp - 0x50 ]
call sub_402250
cmp [ esi + 0x118 ] 0x0
mov eax 0x1
mov [ esi + 0xf8 ] eax
je r-xdata
mov esi [ ebp + 0x8 ]
sub_45e951
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x5
je r-xdata
mov ecx [ esi ]
mov [ ecx + 0x210 ] 0x0
pop esi
pop ebp
retn 0x4
mov eax esi
call sub_40e950
mov eax [ esi ]
mov [ eax + 0x210 ] 0x0
pop esi
pop ebp
retn 0x4
sub_45e987
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
pop esi
pop ebp
retn 0x4
push esi
call sub_4531b1
cmp [ esi + 0x8 ] 0x5
jne r-xdata
cmp [ esi + 0x8 ] 0xb
jne r-xdata
mov eax esi
call sub_40e270
mov [ esi + 0x8 ] 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4111dc
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x8
mov [ esi ] 0x0
sub_45e9d5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx 0x8
cmp [ esi + 0x8 ] ecx
je r-xdata
xor al al
pop esi
pop ebp
retn 0x8
cmp [ eax + 0x8 ] ecx
je r-xdata
push eax
call sub_4533eb
push eax
push esi
call sub_4533eb
mov esi eax
pop eax
call sub_40dbb0
pop esi
pop ebp
retn 0x8
sub_45ea0f
push ebp
mov ebp esp
sub esp 0x54
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
push edi
cmp eax 0x4002
jg r-xdata
sub eax 0x4003
cmp eax 0x12
ja r-xdata
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_45eebb ]
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
cmp eax 0x15
ja r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movsx edi [ esi ]
jmp r-xdata
jmp [ eax * 4 + jump_table_45ee63 ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x10
mov [ ebx + 0x8 ] 0x8
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ ebx ]
mov eax 0x9
mov [ edx ] ax
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ ebx ]
mov [ edx + 0x8 ] eax
mov ecx [ ebx ]
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
movsx edi [ esi ]
jmp r-xdata
movzx edi [ esi ]
jmp r-xdata
movzx edi [ esi ]
jmp r-xdata
mov edi [ esi ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
mov esi ebx
mov [ ebp - 0x4 ] ecx
call sub_408f40
mov edx [ ebp - 0x4 ]
mov [ ebx + 0x8 ] 0x2
mov [ ebx + 0x4 ] edx
mov [ ebx ] edi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi ]
mov eax [ esi + 0x4 ]
jmp r-xdata
fld [ esi ]
mov esi ebx
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ esi ]
mov esi ebx
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi ] 0x0
setne dl
mov [ ebp + 0xc ] dl
mov eax [ ebp + 0xc ]
push eax
push ebx
call sub_4530c9
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
mov ecx ebx
call sub_468070
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_408f40
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] edi
push 0x10
mov [ ebx + 0x8 ] 0x8
call sub_4115d7
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ ebx ]
push esi
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
movsx edi [ esi + 0x8 ]
movzx edi [ esi + 0x8 ]
jmp r-xdata
movsx edi [ esi + 0x8 ]
jmp r-xdata
movzx edi [ esi + 0x8 ]
jmp r-xdata
mov edi [ esi + 0x8 ]
jmp r-xdata
mov edi [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ esi + 0xc ]
mov edi [ esi + 0x8 ]
mov esi ebx
mov [ ebp - 0x4 ] edx
call sub_408f40
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x2
mov [ ebx ] edi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ esi + 0x8 ]
mov esi ebx
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ esi + 0x8 ]
mov esi ebx
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fild [ esi + 0x8 ]
mov esi ebx
fdiv [ r--data ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x8 ] 0x0
setne cl
mov [ ebp + 0xc ] cl
mov edx [ ebp + 0xc ]
push edx
push ebx
call sub_4530c9
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ esi + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
sub esp 0x8
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
movzx ecx [ ebp - 0x14 ]
movzx edx [ ebp - 0x16 ]
movzx eax [ ebp - 0x18 ]
push ecx
movzx ecx [ ebp - 0x1a ]
push edx
movzx edx [ ebp - 0x1e ]
push eax
movzx eax [ ebp - 0x20 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x50 ]
push r--data
push ecx
call sub_41329b
add esp 0x20
lea eax [ ebp - 0x50 ]
call sub_40e710
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x30 ] edx
mov edx [ esi + 0xc ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x24 ] edx
call [ VarR8FromDec@IAT ]
fld [ ebp - 0x10 ]
mov esi ebx
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax r--data
call sub_40e710
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] 0x4
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi + 0x8 ]
mov esi eax
call sub_401b10
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] 0x4
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
mov [ ebp - 0x4 ] eax
call sub_408f40
mov ecx [ ebp - 0x4 ]
mov [ ebx + 0x8 ] 0x2
mov [ ebx + 0x4 ] ecx
mov [ ebx ] edi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4111dc
add esp 0x4
mov [ ebx ] 0x0
sub_45ef07
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push ebx
call sub_4534c0
test eax eax
je r-xdata
push esi
push 0x20
and edi 0xff00
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x14 ] ecx
pop ebx
pop ebp
retn 0x10
xor esi esi
push eax
call sub_44a801
mov esi eax
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_40e0a0
mov eax [ ebp + 0x10 ]
mov [ esi + 0x14 ] eax
xor eax eax
or edi 0x1
mov [ esi + 0x10 ] edi
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov ecx [ ebx ]
push ecx
call sub_403da0
pop esi
pop edi
mov [ ebx ] eax
pop ebx
pop ebp
retn 0x10
sub_45ef7b
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_453545
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_45ef9c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_453586
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_45efb9
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
push esi
lea esi [ edi + 0x4 ]
push esi
call [ InterlockedDecrement@IAT ]
cmp [ esi ] 0x0
pop esi
jne r-xdata
pop edi
pop ebp
retn 0x4
push edi
call sub_45ef9c
sub_45efe4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ ebp + 0x18 ]
push ebx
mov [ esp + 0x8 ] ecx
mov ecx [ eax ]
xor eax eax
push esi
mov [ esp + 0x8 ] ecx
push edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] eax
call sub_40bc70
lea ecx [ esp + 0x38 ]
call sub_40bc70
lea ecx [ esp + 0x28 ]
call sub_40bc70
mov edi [ ebp + 0x14 ]
mov edx [ edi ]
mov esi [ ebp + 0xc ]
cmp edx [ esi + 0x4 ]
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
mov edi [ ebp + 0x1c ]
je r-xdata
mov ebx [ edi ]
push ebx
push esi
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov esi [ edi ]
push edx
push ecx
push esi
call sub_4328ec
mov edx [ ebp + 0x18 ]
mov ecx [ edx ]
mov ebx [ esp + 0x10 ]
add eax esi
cmp ecx [ esp + 0xc ]
jge r-xdata
inc ebx
mov [ edi ] ebx
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ ebx + 0x4 ]
shl eax 0x5
mov esi [ eax + ecx - 0x4 ]
mov [ esp + 0x14 ] esi
jmp r-xdata
mov edx ecx
shl edx 0x5
jmp r-xdata
cmp ebx [ esi + 0x4 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
push eax
push edx
push esi
call sub_4328ec
mov ecx [ ebp + 0x18 ]
add eax esi
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ecx ] eax
lea ecx [ esp + 0x28 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
lea ecx [ esp + 0x48 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov esi [ ebx + 0x4 ]
add [ esi + edx ] eax
mov esi [ ebx + 0x4 ]
add [ edx + esi + 0x1c ] eax
lea esi [ edx + esi + 0x1c ]
inc ecx
add edx 0x20
cmp ecx [ esp + 0xc ]
jl r-xdata
mov ebx r--data
lea eax [ esp + 0x48 ]
call sub_402160
mov eax [ edi ]
push eax
lea ecx [ eax + 0x1 ]
push esi
mov [ edi ] ecx
call sub_4364e6
movzx edx [ eax ]
push edx
lea eax [ esp + 0x4c ]
call sub_403020
jmp r-xdata
mov eax [ edi ]
push eax
push esi
call sub_4364e6
cmp [ eax ] 0x5f
jne r-xdata
mov ecx [ edi ]
push ecx
push esi
call sub_4364e6
movzx edx [ eax ]
push edx
call sub_413238
add esp 0x4
test eax eax
jne r-xdata
mov ebx r--data
lea eax [ esp + 0x28 ]
mov [ esp + 0x18 ] 0x0
call sub_402160
inc ebx
mov [ edi ] ebx
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov ebx [ edi ]
push ebx
push esi
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
push ebx
push esi
call sub_4364e6
cmp [ eax ] 0x5b
je r-xdata
mov ebx [ edi ]
push ebx
push esi
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
mov ecx [ edi ]
push ecx
push esi
call sub_4364e6
movzx edx [ eax ]
push edx
call sub_413238
add esp 0x4
test eax eax
jne r-xdata
inc ebx
mov [ edi ] ebx
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ edi ]
push eax
lea ecx [ eax + 0x1 ]
push esi
mov [ edi ] ecx
call sub_4364e6
movzx edx [ eax ]
push edx
lea eax [ esp + 0x2c ]
call sub_403020
jmp r-xdata
mov eax [ edi ]
push eax
push esi
call sub_4364e6
cmp [ eax ] 0x5f
jne r-xdata
push ebx
push esi
call sub_4364e6
cmp [ eax ] 0x5b
jne r-xdata
mov ebx [ edi ]
push ebx
push esi
call sub_4364e6
cmp [ eax ] 0x3b
jne r-xdata
inc ebx
mov [ edi ] ebx
mov ebx r--data
lea eax [ esp + 0x38 ]
call sub_402160
lea esp [ esp ]
cmp ebx [ esi + 0x4 ]
jb r-xdata
inc ebx
mov [ edi ] ebx
jmp r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call sub_413190
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
jle r-xdata
mov eax [ edi ]
push eax
lea edx [ eax + 0x1 ]
push esi
mov [ edi ] edx
call sub_4364e6
movzx eax [ eax ]
push eax
lea eax [ esp + 0x3c ]
call sub_403020
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
lea ecx [ esp + 0x48 ]
call sub_402250
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov [ esp + 0x24 ] 0x0
mov ebx rw-data
mov edx [ esp + 0x10 ]
push edx
mov ebx [ edi ]
push ebx
push esi
call sub_4364e6
cmp [ eax ] 0x5d
jne r-xdata
mov eax [ edi ]
push eax
push esi
call sub_4364e6
movzx ecx [ eax ]
push ecx
call sub_4131fc
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x100
jne r-xdata
mov edx [ esp + 0x48 ]
push edx
lea eax [ ebx - 0x18 ]
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
inc ebx
mov [ edi ] ebx
cmp eax 0x80
jne r-xdata
mov ecx [ esp + 0x10 ]
dec [ ecx ]
cmp [ esp + 0x20 ] 0x0
je r-xdata
add ebx 0x1c
cmp ebx rw-data
jl r-xdata
mov eax [ ebx ]
mov [ esp + 0x1c ] eax
test al 0x31
je r-xdata
cmp [ esp + 0x18 ] 0x0
jg r-xdata
mov ecx [ esp + 0x28 ]
push ecx
call sub_413190
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0x14 ]
push edx
push edi
push eax
push esi
push 0x1
mov [ esp + 0x40 ] 0x0
call sub_45efe4
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov ecx [ ebx - 0x4 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] 0x1
cmp [ esp + 0x18 ] 0x0
jle r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x14 ]
push eax
push ebx
push esi
call sub_4328ec
mov ecx [ esp + 0xc ]
add esi eax
mov eax [ esp + 0x10 ]
mov edx [ eax + 0x4 ]
shl ecx 0x5
mov [ esp + 0x14 ] esi
mov [ ecx + edx ] esi
mov ecx [ esp + 0xc ]
mov edx [ eax + 0x4 ]
mov esi [ esp + 0x1c ]
shl ecx 0x5
mov [ ecx + edx + 0x4 ] ebx
mov ecx [ esp + 0xc ]
mov edx [ eax + 0x4 ]
shl ecx 0x5
mov [ ecx + edx + 0x8 ] esi
mov edx [ esp + 0xc ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x28 ]
shl edx 0x5
push ecx
lea esi [ edx + eax + 0xc ]
call sub_40e0a0
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
mov esi [ esi + 0x4 ]
mov ecx ebx
imul eax ecx
add edx eax
mov eax [ esp + 0xc ]
shl eax 0x5
mov [ esp + 0x14 ] edx
mov [ eax + esi + 0x1c ] edx
mov eax [ ebp + 0x20 ]
cmp ecx [ eax ]
jle r-xdata
mov [ esp + 0x18 ] 0x1
mov [ ecx ] 0x8
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
lea ecx [ esp + 0x48 ]
call sub_402250
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ esp + 0x24 ]
mov ecx [ ebp + 0x20 ]
cmp eax [ ecx ]
jle r-xdata
mov eax [ esp + 0x10 ]
push eax
jmp r-xdata
or eax 0x4
mov [ esp + 0x1c ] eax
inc [ esp + 0xc ]
mov esi [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ edi ]
cmp ecx [ esi + 0x4 ]
jb r-xdata
mov eax [ esp + 0x10 ]
dec [ eax ]
jmp r-xdata
cmp eax 0x2
je r-xdata
mov [ ecx ] eax
jmp r-xdata
call sub_4437e8
cmp eax 0x4
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x10
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
lea ecx [ esp + 0x48 ]
call sub_402250
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ esp + 0x10 ]
dec [ eax ]
jmp r-xdata
sub_45f508
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
je r-xdata
push rw-data
call sub_430e6a
test al al
jne r-xdata
dec eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x10
test esi esi
je r-xdata
push edi
push esi
push ebx
push rw-data
call sub_45ef07
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x10
push edi
push esi
push ebx
push rw-data
call sub_432929
push eax
call sub_45ef07
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45f56d
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x10 ]
call sub_40bc70
mov ebx r--data
lea eax [ ebp - 0x10 ]
call sub_402160
push 0x22
lea eax [ ebp - 0x10 ]
call sub_403020
mov edi esi
lea eax [ ebp - 0x10 ]
call sub_40d200
push 0x22
lea eax [ ebp - 0x10 ]
call sub_403020
mov edi r--data
lea eax [ ebp - 0x10 ]
call sub_40d200
mov edi [ mciSendStringW@IAT ]
push 0x0
push 0x100
lea eax [ ebp - 0x218 ]
push eax
push r--data
call edi
cmp [ ebp - 0x218 ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push r--data
call edi
lea ecx [ ebp - 0x10 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
push 0x0
push 0x0
push 0x0
push ecx
call edi
test eax eax
jne r-xdata
push eax
push eax
push eax
cmp [ ebp + 0xc ] al
je r-xdata
push r--data
call edi
push r--data
call edi
push 0x0
push 0x0
push 0x0
push r--data
call edi
lea ecx [ ebp - 0x10 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f645
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
push 0x0
push 0x0
inc esi
push esi
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push edi
push ebx
call sub_4115d7
mov ecx [ ebp + 0x8 ]
add esp 0x4
push 0x0
push 0x0
push ebx
mov edi eax
mov eax [ ecx ]
push edi
push esi
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edx [ ebp + 0xc ]
dec eax
push eax
push edi
push edx
call sub_45412d
push edi
call sub_4111dc
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_444d96
pop esi
pop ebx
pop ebp
retn 0x8
sub_45f6bb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
call sub_403350
xor bl bl
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov bl 0x1
cmp ax 0xd
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
lea ecx [ ebp + 0xc ]
push ecx
push edi
call sub_443e69
test al al
je r-xdata
cmp ax 0xa
je r-xdata
cmp [ ebp + 0xc ] 0xa
je r-xdata
push eax
mov eax esi
call sub_403020
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
mov esi edi
call sub_40df90
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_443e69
test al al
je r-xdata
sub_45f72f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_403350
mov eax [ ebp + 0x10 ]
xor edi edi
xor bl bl
cmp [ eax ] edi
jbe r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] edi
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0xc
lea esp [ esp ]
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax esi
mov bl 0x1
call sub_403020
mov ecx [ ebp + 0x10 ]
inc edi
cmp edi [ ecx ]
jb r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
lea ecx [ ebp + 0xc ]
push ecx
push edx
call sub_443e69
test al al
je r-xdata
sub_45f790
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
call sub_410160
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_43652f
mov edi [ ebp + 0x8 ]
or ebx 0xffffffff
mov [ esp + 0x10 ] ebx
cmp edi 0x5
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x6
je r-xdata
cmp edi 0x3
je r-xdata
mov eax edi
sub eax 0x3
mov [ ebp + 0x10 ] ebx
je r-xdata
cmp edi 0x4
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push edi
push rw-data
call sub_434179
test al al
je r-xdata
mov ebx eax
mov eax rw-data
push rw-data
mov esi rw-data
call sub_40e0a0
jmp r-xdata
cmp [ edi * 4 + rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
mov ebx [ ebp + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
mov ebx eax
mov eax rw-data
jmp r-xdata
push rw-data
mov esi rw-data
call sub_40e0a0
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_436508
lea eax [ esp + 0x18 ]
push eax
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ esp + 0x28 ] 0x800
jne r-xdata
jmp r-xdata
call sub_402160
mov ebx [ ebp + 0x10 ]
mov edx [ esp + 0x2c ]
test edx 0x1000
je r-xdata
mov esi [ edi * 4 + rw-data ]
push 0x208
call sub_4115d7
add esp 0x4
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_43652f
push 0x2c
lea edx [ esp + 0x28 ]
push 0x0
push edx
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x2c ] 0x30
call sub_412f40
mov eax [ esp + 0x1c ]
add esp 0xc
lea ecx [ esp + 0x20 ]
push ecx
push 0x0
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] 0x104
mov edx [ esi ]
push edi
push edx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
test ebx ebx
jns r-xdata
mov [ esp + 0xf ] 0x1
mov eax edx
test bl 0x40
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
test bl bl
jns r-xdata
and eax 0xfffffffc
push eax
mov [ ebp + 0x10 ] 0x0
mov [ esp + 0x28 ] 0x10
mov [ esp + 0x48 ] eax
call sub_4111c1
mov ebx [ ebp + 0x10 ]
add esp 0x4
mov [ esp + 0x48 ] eax
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_436508
test bl 0x1
je r-xdata
or eax 0x3
mov eax [ esi ]
lea edx [ esp + 0x20 ]
push edx
push 0x0
push edi
push eax
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx ebx
and ecx 0x4
je r-xdata
or eax 0x8
lea ecx [ esp + 0x10 ]
push ecx
call sub_436508
test ebx ebx
jle r-xdata
test ebx 0x100
je r-xdata
and eax 0xfffffff7
lea eax [ esp + 0x10 ]
push eax
call sub_436508
lea ecx [ esp + 0x18 ]
push ecx
call sub_436508
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ebx 0x200
je r-xdata
test dl 0x8
je r-xdata
or eax 0x80
cmp [ esp + 0xf ] 0x0
je r-xdata
push 0x0
push edi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x2c ] eax
test ecx ecx
jne r-xdata
push 0x0
push 0xffffffff
jmp r-xdata
or eax 0x8
mov eax [ esi ]
push eax
call [ SetMenuDefaultItem@IAT ]
test eax eax
jne r-xdata
sub_45fa41
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
push ecx
push ebx
mov [ esp + 0x1c ] 0xffffffff
call sub_434179
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ esp + 0x10 ]
cmp edi 0x7
jl r-xdata
cmp edi [ ebx + 0x9d0 ]
jg r-xdata
mov esi [ ebx + edi * 4 + 0x1b4 ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
push 0x0
push edi
push eax
call [ DeleteMenu@IAT ]
test eax eax
je r-xdata
push 0x2c
lea edx [ esp + 0x20 ]
push 0x0
push edx
mov [ esp + 0x24 ] 0x30
call sub_412f40
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
mov eax [ esi ]
push 0x0
push edi
push eax
mov [ esp + 0x2c ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0xff
push 0x0
add esi 0x8
push esi
or eax 0xffffffff
call sub_40c600
push edi
push ebx
call sub_44422d
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esp + 0x2c ]
mov eax 0x7
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] eax
cmp [ ebx + 0x9d0 ] eax
jl r-xdata
lea edi [ ebx + 0x1d0 ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
inc eax
add edi 0x4
mov [ esp + 0xc ] eax
cmp eax [ ebx + 0x9d0 ]
jle r-xdata
cmp [ ecx ] edx
jne r-xdata
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
push 0x0
push eax
push edx
call [ DeleteMenu@IAT ]
mov ecx [ edi ]
mov [ ecx + 0x4 ] 0xff
mov edx [ edi ]
mov [ edx ] 0x0
mov eax [ edi ]
mov [ eax + 0x5 ] 0x0
mov ecx [ edi ]
push 0x0
add ecx 0x8
push ecx
or eax 0xffffffff
call sub_40c600
mov edx [ esp + 0xc ]
push edx
push ebx
call sub_44422d
push eax
mov ecx ebx
call sub_45fa41
jmp r-xdata
mov eax [ esp + 0xc ]
sub_45fbac
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x34
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0xffffffff
je r-xdata
push ebx
call sub_44c2c9
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp eax 0x7
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov esi [ ebx + edi * 4 + 0x1b4 ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
mov [ ebp - 0x30 ] 0x30
call sub_412f40
mov eax [ ebp + 0x14 ]
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x207
jge r-xdata
lea edx [ ebp + 0x14 ]
push edx
push eax
push ebx
mov [ ebp + 0x14 ] 0xffffffff
call sub_434179
test al al
je r-xdata
mov ecx [ ebx ]
mov [ esi ] ecx
jmp r-xdata
push edi
push ebx
call sub_44422d
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x2c ] 0x4
mov eax [ ebx + ecx * 4 + 0x1b4 ]
mov eax [ eax ]
push 0x0
push ecx
push eax
mov [ esi ] eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
movsx eax [ ebp + 0xc ]
sub eax 0x0
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x5 ] 0x0
mov [ ebp - 0x2c ] 0x32
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ esi ] eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ IsMenu@IAT ]
test eax eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp - 0x28 ] 0x800
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
call [ CreatePopupMenu@IAT ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x28 ] 0x200
mov [ esi + 0x5 ] 0x1
mov ecx [ ebp + 0x18 ]
mov edx [ esi ]
lea eax [ ebp - 0x30 ]
push eax
push 0x1
push ecx
push edx
call [ InsertMenuItemW@IAT ]
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
or [ ebp - 0x2c ] 0x4
mov [ ebp - 0x1c ] eax
mov [ esi + 0x4 ] 0x1
jmp r-xdata
push edi
mov ecx ebx
call sub_45fa41
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ ebx + 0x9d4 ] edi
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp edi 0x7
jl r-xdata
mov eax [ ebx ]
cmp [ esi ] eax
jne r-xdata
push eax
call [ GetMenuItemCount@IAT ]
mov ecx [ ebp + 0x18 ]
cmp ecx 0xffffffff
je r-xdata
add eax 0xfffffffc
mov [ ebp + 0x18 ] eax
lea edx [ eax - 0x4 ]
inc ecx
cmp ecx edx
jle r-xdata
sub_45fd57
push ebp
mov ebp esp
sub esp 0x40
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x2c
lea eax [ ebp - 0x3c ]
push 0x0
push eax
mov [ ebp - 0x40 ] 0x30
call sub_412f40
add esp 0xc
lea ecx [ ebp + 0xc ]
movzx edx bx
push ecx
push edx
push esi
mov [ ebp - 0x3c ] 0x1
mov [ ebp + 0xc ] 0xffffffff
call sub_434179
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
mov eax [ esi + edi * 4 + 0x1b4 ]
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
shr ebx 0x10
test ebx ebx
jne r-xdata
mov ecx [ esi ]
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push edi
push ecx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x8
test [ ebp - 0x34 ] al
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
or [ ebp - 0x34 ] eax
mov [ rw-data ] 0x1
xor [ ebp - 0x34 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
cmp [ esi + 0x7 ] 0x0
mov ebx [ eax ]
je r-xdata
mov eax [ esi ]
lea edx [ ebp - 0x40 ]
push edx
push 0x0
push 0x4
push eax
call [ SetMenuItemInfoW@IAT ]
mov eax esi
call sub_401b80
push 0x1f4
call [ Sleep@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x5 ] 0x0
je r-xdata
cmp [ eax + 0x5 ] 0x0
je r-xdata
push edi
push esi
call sub_453b6f
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push edi
push ebx
call [ GetMenuItemInfoW@IAT ]
mov eax 0x8
test [ ebp - 0x34 ] al
je r-xdata
push ebx
mov [ ebp + 0x10 ] 0xffffffff
call [ GetMenuItemCount@IAT ]
cmp [ esi + 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
or [ ebp - 0x34 ] eax
lea ecx [ ebp - 0x40 ]
push ecx
push 0x0
push edi
push ebx
call [ SetMenuItemInfoW@IAT ]
push edi
push esi
call sub_453b6f
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor [ ebp - 0x34 ] eax
lea ecx [ ebp - 0x40 ]
push ecx
push 0x0
push edi
push ebx
call [ SetMenuItemInfoW@IAT ]
push edi
push esi
call sub_453b6f
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor edi edi
test eax eax
jle r-xdata
sub eax 0x4
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
lea esp [ esp ]
mov edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
dec edi
js r-xdata
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
inc edi
mov [ ebp - 0x10 ] edi
mov edi [ ebp - 0x8 ]
inc edi
cmp edi [ ebp + 0x8 ]
jge r-xdata
push edi
push ebx
call [ GetMenuItemID@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
mov [ ebp + 0x10 ] eax
call sub_434179
test al al
je r-xdata
push edi
push ebx
call [ GetMenuItemID@IAT ]
cmp eax [ ebp + 0xc ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
push 0x400
push ecx
dec edi
push edi
push edx
push ebx
call [ CheckMenuRadioItem@IAT ]
push edi
push ebx
call [ GetMenuItemID@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
mov [ ebp + 0x10 ] eax
call sub_434179
test al al
je r-xdata
dec edi
jns r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi + edx * 4 + 0x1b4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi + edx * 4 + 0x1b4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
sub_45ffc2
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
call sub_403350
xor bl bl
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn 0x10
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x10
cmp ax [ ebp + 0x8 ]
jne r-xdata
push eax
mov eax esi
call sub_403020
inc [ edi ]
jmp r-xdata
inc [ edi ]
mov bl 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_4364e6
movzx eax [ eax ]
test ax ax
je r-xdata
sub_46001e
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1 ] bl
mov [ ebp + 0xf ] bl
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x3 ] bl
call sub_444a4e
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x8 ] 0x1
call sub_40bc70
lea ecx [ ebp - 0x2c ]
call sub_40bc70
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
push esi
push 0x20
call sub_45ffc2
test al al
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebx * 4 + rw-data ]
push ecx
push edx
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
mov edi [ ebp - 0xc ]
cmp ebx 0x62
jne r-xdata
inc ebx
cmp ebx 0x62
jl r-xdata
inc edi
jmp r-xdata
push edi
push esi
call sub_4364e6
cmp [ eax ] 0x9
jne r-xdata
cmp [ ebx + rw-data ] 0x0
jne r-xdata
xor edi edi
lea esi [ ebp - 0x3c ]
call sub_401c90
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c6f6
cmp [ ebp + 0xf ] 0x0
je r-xdata
push edi
push esi
call sub_4364e6
cmp [ eax ] 0x20
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
push esi
push 0x0
mov [ ebp - 0xc ] edi
call sub_45ffc2
mov esi [ ebp - 0x2c ]
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
movzx eax [ ebx + rw-data ]
cmp eax 0xe
ja r-xdata
movzx ecx [ ebx + rw-data ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
call sub_44c777
cmp [ ebp + 0xf ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
call sub_44c514
jmp r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_402250
lea ecx [ ebp - 0x3c ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_46066a ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push ecx
call sub_44c514
jmp r-xdata
xor edi edi
lea esi [ ebp - 0x3c ]
call sub_401c90
movzx edx [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_453ef0
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ecx
push edx
jmp r-xdata
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp + 0xf ] 0x1
jmp r-xdata
push 0x12
lea edx [ ebp - 0x1c ]
push edx
call sub_44c777
cmp [ ebp + 0xf ] 0x0
je r-xdata
push 0xd
lea edx [ ebp - 0x1c ]
push edx
call sub_44c777
cmp [ ebp + 0xf ] 0x0
mov [ ebp - 0x12 ] 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1d ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1d ] 0x0
je r-xdata
push 0xa0
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c777
cmp [ ebp + 0xf ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push 0xa1
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c777
cmp [ ebp + 0xf ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1a ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1a ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1e ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1e ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1f ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x1f ] 0x0
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
jmp r-xdata
call sub_44c37a
push r--data
push esi
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1d ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x12
lea eax [ ebp - 0x1c ]
push eax
call sub_44c777
lea ecx [ ebp - 0x1c ]
push ecx
push esi
mov [ esi + 0x1d ] 0x1
call sub_44c514
jmp r-xdata
push 0x12
lea edx [ ebp - 0x1c ]
push edx
call sub_44c777
lea eax [ ebp - 0x1c ]
push eax
mov [ esi + 0x1d ] 0x0
push esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ eax + 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ eax + 0x1b ] 0x0
jne r-xdata
push 0x10
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c777
lea edx [ ebp - 0x1c ]
push edx
push esi
mov [ esi + 0x1a ] 0x1
call sub_44c514
jmp r-xdata
push 0x10
lea eax [ ebp - 0x1c ]
push eax
call sub_44c777
lea ecx [ ebp - 0x1c ]
push ecx
mov [ esi + 0x1a ] 0x0
push esi
jmp r-xdata
push 0x11
lea edx [ ebp - 0x1c ]
push edx
call sub_44c777
lea eax [ ebp - 0x1c ]
push eax
push esi
mov [ esi + 0x1c ] 0x1
call sub_44c514
jmp r-xdata
push 0x11
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c777
lea edx [ ebp - 0x1c ]
push edx
mov [ esi + 0x1c ] 0x0
push esi
jmp r-xdata
push 0x5b
lea eax [ ebp - 0x1c ]
push eax
call sub_44c777
lea ecx [ ebp - 0x1c ]
push ecx
push esi
mov [ esi + 0x1e ] 0x1
call sub_44c514
jmp r-xdata
push 0x5b
lea edx [ ebp - 0x1c ]
push edx
call sub_44c777
lea eax [ ebp - 0x1c ]
push eax
mov [ esi + 0x1e ] 0x0
push esi
jmp r-xdata
push 0x5c
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c777
lea edx [ ebp - 0x1c ]
push edx
push esi
mov [ esi + 0x1f ] 0x1
call sub_44c514
jmp r-xdata
push 0x5c
lea eax [ ebp - 0x1c ]
push eax
call sub_44c777
lea ecx [ ebp - 0x1c ]
push ecx
mov [ esi + 0x1f ] 0x0
push esi
jmp r-xdata
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
push 0x1
push edx
push ebx
call sub_453ef0
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
movzx eax [ ebx + rw-data ]
mov ecx [ ebp + 0x8 ]
je r-xdata
movzx ecx [ ebx + rw-data ]
mov edx [ ebp + 0x8 ]
push 0x1
push ecx
push edx
call sub_4347d5
jmp r-xdata
xor edi edi
lea esi [ ebp - 0x2c ]
call sub_401c90
cmp [ eax ] 0x30
jne r-xdata
mov [ ebp - 0x3 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push ecx
call sub_44c6d7
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ eax + 0x1d ] 0x1
call sub_44c514
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ecx
push edx
call sub_44c6d7
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
push eax
call sub_44c6d7
jmp r-xdata
cmp [ eax + 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ eax + 0x1a ] 0x1
call sub_44c514
jmp r-xdata
cmp [ eax + 0x1b ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ eax + 0x1b ] 0x1
call sub_44c514
jmp r-xdata
xor edi edi
push 0x12
lea eax [ ebp - 0x1c ]
push eax
call sub_44c777
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
call sub_44c514
mov edx [ ebp - 0x8 ]
push edx
push eax
push ecx
call sub_453e8d
jmp r-xdata
push 0x0
push eax
push ecx
call sub_4347d5
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_413190
add esp 0x4
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov edi 0x1
call sub_401c90
cmp [ eax ] 0x78
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov [ eax + 0x1d ] 0x0
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
mov [ eax + 0x1a ] 0x0
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
mov [ eax + 0x1b ] 0x0
push eax
jmp r-xdata
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
call sub_401c90
mov dl [ eax ]
add dl 0x30
movzx eax dl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_44c777
lea edx [ ebp - 0x1c ]
push edx
push ebx
call sub_44c6d7
inc edi
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
push 0x0
lea edx [ ebp - 0x2c ]
push edx
mov eax 0x2
call sub_40c600
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call sub_444362
xor edi edi
lea esi [ ebp - 0x2c ]
call sub_401c90
cmp [ eax ] 0x30
jne r-xdata
call sub_401c90
cmp [ eax ] 0x58
jne r-xdata
push 0x12
lea eax [ ebp - 0x1c ]
push eax
call sub_44c777
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
lea esi [ ebp - 0x2c ]
call sub_401c90
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
push r--data
lea edx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push r--data
lea eax [ ebp - 0x5c ]
push eax
jmp r-xdata
call sub_434569
add esp 0xc
lea ebx [ ebp - 0x5c ]
lea eax [ ebp - 0x2c ]
call sub_402160
mov ebx edi
jmp r-xdata
sub_4606a6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
push eax
push esi
mov [ esi + 0x20 ] eax
call sub_434621
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] bx
jne r-xdata
xor edi edi
lea eax [ edi + 0x40 ]
lea ecx [ esp + 0x28 ]
call sub_4013c0
push ebx
push 0x14
push esi
call sub_4347d5
mov [ esp + 0x14 ] al
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_4447e0
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_434831
cmp [ esi + 0x8 ] 0x1
jne r-xdata
inc edi
push esi
mov [ esp + 0x14 ] edi
call sub_444310
mov ecx [ esp + 0x18 ]
movzx eax cx
add eax 0xffffffdf
cmp eax 0x5a
ja r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push ecx
push esi
call sub_434621
lea ecx [ esp + 0x28 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x20 ]
push edx
push esi
call sub_4445f4
mov eax [ esp + 0x14 ]
push eax
push 0x14
push esi
call sub_4347d5
push 0x1
push ecx
push esi
call sub_453ef0
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bx
jmp r-xdata
movzx eax [ eax + lookup_table_46081e ]
jmp [ eax * 4 + jump_table_460806 ]
mov edx [ ebp + 0xc ]
push edi
push edx
call sub_4364e6
movzx eax [ eax ]
mov [ esp + 0x18 ] eax
cmp ax bx
je r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
mov [ esi + 0x16 ] 0x1
jmp r-xdata
mov [ esi + 0x17 ] 0x1
jmp r-xdata
mov [ esi + 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
push 0x7d
call sub_45ffc2
test al al
jne r-xdata
cmp [ esp + 0x2c ] ebx
je r-xdata
push 0x1
push 0x7b
push esi
call sub_453ef0
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bx
jmp r-xdata
mov edi [ esp + 0x10 ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bx
jmp r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push esi
call sub_46001e
sub_460879
push ebp
mov ebp esp
mov eax 0x2050
call sub_422240
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
push 0xfff
lea eax [ ebp - 0x204c ]
push eax
push ecx
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
lea edi [ ebp - 0x204c ]
lea esi [ ebp - 0x48 ]
call sub_401b10
mov eax [ ebp + 0xc ]
push 0xfff
push edi
push eax
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
lea esi [ ebp - 0x38 ]
call sub_401b10
push ebx
call sub_4348de
push ebx
mov [ ebp + 0x8 ] eax
call sub_4348aa
mov esi eax
push ebx
mov [ ebp - 0x18 ] esi
call sub_43492f
push eax
call sub_434908
mov ebx eax
mov [ ebp + 0xc ] ebx
test ebx ebx
jne r-xdata
push ebx
push esi
lea edx [ ebp - 0x204c ]
push r--data
push edx
call sub_41329b
add esp 0x10
push esi
push r--data
push edi
call sub_41329b
add esp 0xc
jmp r-xdata
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x14 ]
call sub_40bd50
cmp [ rw-data ] 0x0
je r-xdata
mov ebx esi
lea eax [ ebp - 0x28 ]
call sub_402160
push edi
lea eax [ ebp - 0x28 ]
push eax
or eax 0xffffffff
call sub_40c600
mov edi r--data
lea eax [ ebp - 0x28 ]
call sub_40d200
lea ecx [ ebp - 0x28 ]
push ecx
lea eax [ ebp - 0x14 ]
call sub_40bd50
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
mov ebx [ ebp + 0xc ]
lea edi [ ebp - 0x204c ]
lea esi [ ebp - 0x14 ]
call sub_401b10
mov esi [ ebp + 0x8 ]
mov edi esi
lea eax [ ebp - 0x14 ]
call sub_40d200
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
lea ecx [ ebp - 0x28 ]
call sub_40bc70
mov edi [ ebp + 0x10 ]
test edi edi
js r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x14 ]
push 0x11010
push eax
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x18 ]
push eax
push esi
push ecx
push edx
push ebx
push r--data
call sub_413abe
add esp 0x18
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_402250
lea ecx [ ebp - 0x14 ]
call sub_402250
lea ecx [ ebp - 0x38 ]
call sub_402250
lea ecx [ ebp - 0x48 ]
call sub_402250
sub_460a29
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
inc edi
push edi
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push edi
push eax
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push 0x0
call sub_403b70
push ebx
call sub_4111dc
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_403350
pop edi
pop esi
pop ebp
retn 0x8
sub_460aab
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_40bc70
mov eax [ esi ]
lea ebx [ eax + 0x1 ]
mov [ ebp + 0x8 ] eax
mov [ esi ] ebx
cmp ebx [ edi + 0x4 ]
jge r-xdata
lea ecx [ ebp - 0x14 ]
mov [ esi ] eax
call sub_402250
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp + 0x13 ] 0x0
push ebx
push edi
call sub_4364e6
cmp [ eax ] 0x7b
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call sub_413190
add esp 0x4
mov [ ebp + 0xc ] eax
test bl bl
je r-xdata
mov ecx [ esi ]
push ecx
push edi
call sub_4364e6
movzx edx [ eax ]
push edx
call sub_4137d3
add esp 0x4
test eax eax
je r-xdata
inc ebx
mov [ ebp + 0x13 ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
mov [ esi ] edx
call sub_402250
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov eax [ esi ]
push eax
lea ecx [ eax + 0x1 ]
push edi
mov bl 0x1
mov [ esi ] ecx
call sub_4364e6
movzx edx [ eax ]
push edx
lea eax [ ebp - 0x14 ]
call sub_403020
mov eax [ esi ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov ebx r--data
lea eax [ ebp - 0x14 ]
call sub_402160
mov eax [ esi ]
xor bl bl
cmp eax [ edi + 0x4 ]
jge r-xdata
lea ecx [ ebp - 0x14 ]
call sub_402250
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ esi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
push ebx
push edi
call sub_4364e6
cmp [ eax ] 0x7d
jne r-xdata
inc ebx
mov [ esi ] ebx
sub_460bba
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
push eax
call sub_4541a8
mov ecx [ esi + 0x4 ]
mov [ esi + 0x28 ] ecx
mov [ esi + 0x10 ] 0x1
pop esi
pop ebp
retn 0x8
sub_460bda
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x34 ]
mov ebx r--data
call sub_402160
mov eax [ esi + 0x54 ]
push 0x2
push eax
call [ EndDialog@IAT ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_460c01
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
push 0x3e9
push eax
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x100
lea ecx [ ebp - 0x200 ]
push ecx
push eax
call [ GetWindowTextW@IAT ]
test [ esi + 0x10 ] 0x1
je r-xdata
fldz
fcomp [ esi + 0x18 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp - 0x200 ] 0x0
jne r-xdata
push ebx
lea eax [ esi + 0x34 ]
lea ebx [ ebp - 0x200 ]
call sub_402160
mov eax [ esi + 0x54 ]
push 0x1
push eax
call [ EndDialog@IAT ]
pop ebx
mov edx [ esi + 0x54 ]
push 0x40a
push edx
call [ KillTimer@IAT ]
push 0x0
call [ MessageBeep@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_460c91
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x40a
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x8
push ebx
lea eax [ esi + 0x34 ]
mov ebx r--data
call sub_402160
mov eax [ esi + 0x54 ]
push 0x3
push eax
call [ EndDialog@IAT ]
pop ebx
sub_460cc1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ esi + 0x24 ]
call sub_40bc70
lea ecx [ esi + 0x34 ]
call sub_40bc70
lea ecx [ esi + 0x44 ]
call sub_40bc70
xor eax eax
mov [ esi + 0x20 ] ax
mov ebx r--data
lea eax [ esi + 0x24 ]
mov [ esi + 0x54 ] 0x0
call sub_402160
fld [ r--data ]
mov eax 0x80000000
fstp [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
lea eax [ esi + 0x34 ]
mov [ esi ] 0xffffffff
mov [ esi + 0x4 ] 0xffffffff
call sub_402160
lea eax [ esi + 0x44 ]
call sub_402160
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_460d41
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x10 ]
xor eax eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov [ ebp + 0x14 ] 0x80004005
mov [ esi ] eax
mov [ edi ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x3c ] ax
mov [ esi + 0x8 ] eax
cmp edx eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp ebx eax
je r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx eax
je r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
mov [ ecx ] eax
movsx eax [ ebx + 0x80 ]
mov [ esi + 0x10 ] eax
movsx eax [ ebx + 0x80 ]
movsx ecx [ ebx + 0x84 ]
add ecx eax
mov [ esi + 0x18 ] ecx
movsx ecx [ ebx + 0x82 ]
mov [ esi + 0x14 ] ecx
movsx ecx [ ebx + 0x82 ]
movsx eax [ ebx + 0x86 ]
add eax ecx
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0xc ]
push edx
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
call sub_432416
test al al
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
push edi
push r--data
push eax
mov eax [ edx ]
call eax
test eax eax
js r-xdata
push 0x0
push 0x0
push 0x0
push eax
push rw-data
call sub_451b42
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0xc
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] 0x1
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x28 ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0x0
jmp r-xdata
push 0xc
mov [ esi + 0x30 ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x2c ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
push 0x1
push eax
call [ OleSetContainedObject@IAT ]
mov eax [ edi ]
mov edx [ eax ]
mov edx [ edx + 0x2c ]
lea ecx [ esi + 0x10 ]
push ecx
mov ecx [ esi ]
mov ecx [ ecx + 0x14 ]
push ecx
mov ecx [ esi + 0x28 ]
push 0xffffffff
push ecx
push 0x0
push 0xffffffff
push eax
call edx
mov [ ebp + 0xc ] 0x5
mov edx [ esi + 0x34 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push edx
push 0x2
push 0x1
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x34 ] eax
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push r--data
push r--data
push eax
call edx
movsx eax [ ebx + 0x84 ]
movsx ecx [ ebx + 0x86 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
push edx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x4 ] ecx
call sub_44cc51
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push 0x1
push eax
mov eax [ ecx + 0x44 ]
call eax
mov eax [ edi ]
mov edx [ esi + 0x28 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ esi + 0x38 ]
push edx
mov edx [ esi + 0x34 ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ ebp + 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
js r-xdata
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edi [ edi ]
mov eax [ edi ]
mov edx [ eax ]
lea ecx [ ebp + 0x10 ]
push ecx
push r--data
push edi
call edx
mov edi eax
test edi edi
jns r-xdata
push esi
call sub_445660
push 0x1
push 0x0
push 0x0
push ebx
push rw-data
call sub_451b42
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x38 ]
push eax
call edx
dec [ ebp + 0xc ]
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
lea ebx [ esi + 0x8 ]
push ebx
push eax
call edx
mov edi eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test edi edi
js r-xdata
push esi
call sub_445660
push 0x1
push 0x0
push 0x0
push edi
push rw-data
call sub_451b42
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
sub_461014
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x824
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push esi
xor esi esi
push edi
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] esi
test al 0x40
je r-xdata
mov edi [ ebp + 0xc ]
test al 0x8
je r-xdata
mov esi 0x1
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] esi
test [ ebx + 0x8 ] 0x1
je r-xdata
push 0x400
lea eax [ esp + 0x2c ]
push eax
push edi
call [ GetClassNameW@IAT ]
mov eax [ ebx + 0xbc ]
lea ecx [ esp + 0x28 ]
push ecx
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
test [ ebx + 0x8 ] 0x2
je r-xdata
push 0x400
lea edx [ esp + 0x2c ]
push edx
push edi
call [ GetWindowTextW@IAT ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
inc [ esp + 0xc ]
inc esi
mov [ esp + 0x10 ] esi
test [ ebx + 0x8 ] 0x10
je r-xdata
push 0x400
lea eax [ esp + 0x2c ]
push eax
push edi
call [ GetWindowTextW@IAT ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
call sub_401b10
lea ecx [ esp + 0x14 ]
push ecx
lea esi [ ebx + 0x34 ]
push esi
call sub_460bba
lea ecx [ esp + 0x14 ]
call sub_402250
push esi
call sub_44cb39
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
dec eax
mov [ esp + 0x24 ] esi
je r-xdata
lea eax [ esp + 0x28 ]
push eax
call sub_4111c1
add esp 0x4
push eax
lea ecx [ esp + 0x2c ]
push ecx
call [ CharUpperBuffW@IAT ]
test [ ebx + 0x8 ] 0x4
je r-xdata
push 0x400
lea edx [ esp + 0x2c ]
push edx
push edi
call [ GetClassNameW@IAT ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
call sub_401b10
lea eax [ esp + 0x14 ]
push eax
lea esi [ ebx + 0x78 ]
push esi
call sub_460bba
lea ecx [ esp + 0x14 ]
call sub_402250
push esi
call sub_44cb39
test al al
je r-xdata
inc [ esp + 0xc ]
mov esi [ esp + 0x10 ]
mov edi [ ebp + 0xc ]
test [ ebx + 0x8 ] 0x18
jne r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x14 ]
push eax
lea edx [ esp + 0x2c ]
push edx
push ecx
call sub_413262
add esp 0xc
test eax eax
jne r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax 0x780
je r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
inc [ esp + 0xc ]
mov esi [ esp + 0x10 ]
mov edi [ ebp + 0xc ]
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
mov eax [ ebp + 0xc ]
push 0x400
push edi
push eax
call [ GetClassNameW@IAT ]
push edi
push r--data
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
test [ ebx + 0x8 ] 0x18
jne r-xdata
inc esi
mov [ esp + 0x10 ] esi
mov eax [ ebx + 0x14 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_4134bd
add esp 0x8
test eax eax
je r-xdata
dec eax
jne r-xdata
mov ecx [ esp + 0xc ]
test al 0x20
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push edi
call [ GetWindowRect@IAT ]
mov eax [ ebx + 0x8 ]
mov edx [ esp + 0x14 ]
test al al
jns r-xdata
inc [ esp + 0xc ]
push edi
push ebx
call sub_445948
test al al
je r-xdata
inc [ esp + 0xc ]
push 0x400
lea eax [ esp + 0x2c ]
push eax
push edi
call [ GetClassNameW@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
push r--data
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x14 ]
push eax
lea edx [ esp + 0x2c ]
push edx
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
cmp esi ecx
jne r-xdata
cmp esi ecx
jne r-xdata
mov ecx [ esp + 0x18 ]
test eax 0x100
je r-xdata
cmp [ ebx + 0xd4 ] edx
jne r-xdata
inc esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] esi
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebx + 0xec ]
push ecx
call sub_436299
inc [ ebx + 0xe4 ]
xor eax eax
cmp [ ebx + 0x4 ] al
sete al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc ecx
inc [ ebx + 0xd0 ]
mov eax [ ebx + 0xd0 ]
cmp eax [ ebx + 0xcc ]
jne r-xdata
test eax 0x200
je r-xdata
cmp [ ebx + 0xd8 ] ecx
jne r-xdata
inc [ esp + 0xc ]
inc esi
inc esi
test eax 0x400
je r-xdata
mov edi [ esp + 0x1c ]
sub edi edx
cmp [ ebx + 0xdc ] edi
jne r-xdata
inc [ esp + 0xc ]
inc esi
mov edx [ esp + 0x20 ]
sub edx ecx
cmp [ ebx + 0xe0 ] edx
jne r-xdata
inc [ esp + 0xc ]
inc esi
inc [ esp + 0xc ]
inc esi
sub_461321
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x14 ]
call sub_40bc70
xor edi edi
lea eax [ ebp - 0x14 ]
push eax
call sub_40e0a0
lea ecx [ ebp - 0x14 ]
call sub_402250
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
call sub_401c90
cmp [ eax ] 0x3b
jne r-xdata
call sub_401c90
movzx eax [ eax ]
push eax
lea eax [ ebp - 0x14 ]
call sub_403020
inc edi
jmp r-xdata
push 0x3b
lea eax [ ebp - 0x14 ]
call sub_403020
call sub_401c90
cmp [ eax ] 0x0
je r-xdata
sub_461383
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov ebx r--data
call sub_402160
mov esi [ ebp + 0x8 ]
push esi
call sub_436458
test al al
jne r-xdata
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
push edi
push 0x0
push 0x0
push 0xe
push eax
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor ecx ecx
lea ebx [ edi + 0x1 ]
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
push ebx
push 0xd
push ecx
call [ SendMessageW@IAT ]
xor edx edx
mov [ esi + edi * 2 ] dx
test eax eax
mov eax [ ebp + 0xc ]
pop edi
jne r-xdata
mov edi 0x7fff
mov ebx esi
call sub_402160
push esi
call sub_4111dc
add esp 0x4
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
mov ebx r--data
call sub_402160
push esi
call sub_4111dc
add esp 0x4
sub_46142e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
sub esp 0x200
push ebx
push 0xff
lea eax [ ebp - 0x200 ]
push eax
push edx
call [ GetClassNameW@IAT ]
mov eax [ ebp + 0xc ]
lea ebx [ ebp - 0x200 ]
call sub_402160
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_461465
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
push 0x0
push esi
or eax 0xffffffff
call sub_40c600
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
cmp ebx eax
jae r-xdata
cmp edi 0xffffffff
je r-xdata
sub eax ebx
mov edi eax
lea ecx [ ebx + edi ]
cmp ecx eax
jbe r-xdata
call sub_403bd0
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_4013a0
lea edx [ edi + 0x1 ]
push edx
call sub_446618
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov [ esi ] eax
jmp r-xdata
push esi
call sub_4370df
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] edi
mov ecx [ eax ]
mov eax [ esi ]
add edi edi
push edi
lea edx [ ecx + ebx * 2 ]
push edx
push eax
call sub_410e60
mov ecx [ esi ]
add esp 0xc
xor edx edx
mov [ edi + ecx ] dx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46150f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_40bc70
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp esi eax
jbe r-xdata
cmp ebx 0xffffffff
je r-xdata
mov esi eax
sub eax esi
mov ebx eax
mov edx eax
sub edx esi
cmp ebx edx
jbe r-xdata
push ebx
push esi
push ecx
push edi
call sub_461465
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_461554
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x204
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov ebx r--data
call sub_402160
push 0x1
push edi
call sub_43646a
call [ GetFocus@IAT ]
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
push 0x0
push edi
call sub_43646a
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
push eax
call sub_4364b5
test eax eax
je r-xdata
mov eax [ esi + 0xd8 ]
push eax
push esi
call sub_44cdaf
mov edx [ esi + 0xd8 ]
push 0x100
lea ecx [ ebp - 0x204 ]
push ecx
push edx
mov [ esi + 0xd4 ] edi
call [ GetClassNameW@IAT ]
lea eax [ esi + 0x8c ]
lea ebx [ ebp - 0x204 ]
mov [ ebp + 0xc ] eax
call sub_402160
push esi
push sub_445b98
push edi
mov [ esi + 0x130 ] 0x0
call [ EnumChildWindows@IAT ]
mov eax [ esi + 0x130 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push eax
push edx
push r--data
push ebx
call sub_41329b
mov eax [ ebp + 0x10 ]
add esp 0x10
call sub_402160
push 0x0
push edi
call sub_43646a
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46163e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa2c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x88 ]
push esi
push edi
xor edi edi
xor esi esi
mov [ esp + 0x10 ] edi
mov [ esp + 0xc ] esi
test al 0x8
je r-xdata
test eax 0x400
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x100
lea eax [ esp + 0x2c ]
push eax
push ecx
call [ GetClassNameW@IAT ]
lea edx [ esp + 0x28 ]
push edx
call sub_4111c1
mov esi eax
xor edx edx
add esp 0x4
mov [ esp + 0x10 ] edx
test esi esi
je r-xdata
test [ ebx + 0x88 ] 0x10
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0x202
lea edi [ ebx + 0x8 ]
push edi
call sub_4343ad
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x134 ]
cmp eax esi
jle r-xdata
lea edi [ esi - 0x1 ]
test edi edi
js r-xdata
mov eax [ ebx + 0x88 ]
test al 0x20
je r-xdata
mov edx [ ebp + 0xc ]
push 0x400
lea ecx [ esp + 0x234 ]
push ecx
push edx
call [ GetClassNameW@IAT ]
lea edi [ esp + 0x230 ]
lea esi [ esp + 0x18 ]
call sub_401b10
lea eax [ esp + 0x18 ]
push eax
lea esi [ ebx + 0xec ]
push esi
call sub_460bba
lea ecx [ esp + 0x18 ]
call sub_402250
push esi
call sub_44cb39
test al al
je r-xdata
mov edi [ esp + 0x10 ]
mov [ esp + 0xc ] 0x1
mov esi [ esp + 0xc ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0xc ]
push ecx
push 0x1388
push 0x2
push esi
push 0x101
push edx
push eax
call [ SendMessageTimeoutW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x138 ]
cmp ecx edx
jle r-xdata
movzx eax [ esp + edi * 2 + 0x28 ]
push eax
call sub_4131fc
add esp 0x4
dec edi
test eax eax
je r-xdata
test al 0xc0
jne r-xdata
mov esi [ ebp + 0xc ]
push esi
call [ GetDlgCtrlID@IAT ]
cmp [ ebx + 0xcc ] eax
jne r-xdata
inc [ esp + 0xc ]
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
inc [ esp + 0x10 ]
push esi
push edi
call sub_434355
cmp [ esp + 0xc ] 0x0
jbe r-xdata
sub eax ecx
add eax edx
cmp esi eax
jne r-xdata
mov edx [ esp + 0x10 ]
inc [ esp + 0x10 ]
test edi edi
jns r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
push edx
push eax
mov [ esp + 0x1c ] ecx
call [ GetParent@IAT ]
push eax
call [ ScreenToClient@IAT ]
mov eax [ ebx + 0x88 ]
test al 0x40
je r-xdata
test eax 0x300
je r-xdata
mov [ ebx + 0xd8 ] esi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x202
lea ecx [ esp + 0x2c ]
push ecx
push esi
push edi
call sub_4342dd
mov eax [ ebx + 0xac ]
push eax
lea eax [ esp + 0x2c ]
xor edx edx
push eax
mov [ esp + 0x230 ] dx
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx + 0x9c ]
push esi
lea ecx [ esp + 0x2c ]
push ecx
push eax
call sub_413262
add esp 0xc
test eax eax
jne r-xdata
test al al
jns r-xdata
mov ecx [ ebx + 0xdc ]
cmp ecx [ esp + 0x10 ]
jne r-xdata
test al 0x1
je r-xdata
mov [ esp + 0x10 ] 0x1
inc [ ebx + 0x130 ]
mov eax [ ebx + 0x130 ]
push eax
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x238 ]
push r--data
push eax
call sub_41329b
mov eax [ ebx + 0x9c ]
push eax
lea ecx [ esp + 0x244 ]
push ecx
call sub_41313c
add esp 0x18
test eax eax
jne r-xdata
test eax 0x100
je r-xdata
mov edx [ ebx + 0xe0 ]
cmp edx [ esp + 0x14 ]
jne r-xdata
inc esi
inc edi
test [ ebx + 0x88 ] 0x4
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x100
lea eax [ esp + 0x234 ]
push eax
push ecx
call [ GetClassNameW@IAT ]
mov eax [ ebx + 0x8c ]
lea edx [ esp + 0x230 ]
push edx
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebx + 0xd8 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test eax 0x200
je r-xdata
mov ecx [ esp + 0x20 ]
sub ecx [ esp + 0x18 ]
cmp [ ebx + 0xe4 ] ecx
jne r-xdata
inc esi
inc edi
test [ ebx + 0x88 ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x400
lea eax [ esp + 0x234 ]
push eax
push ecx
call [ GetWindowTextW@IAT ]
mov eax [ ebx + 0xbc ]
lea edx [ esp + 0x230 ]
push edx
push eax
call sub_41313c
add esp 0x8
test eax eax
jne r-xdata
inc esi
inc edi
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
cmp [ ebx + 0xe8 ] edx
jne r-xdata
inc esi
inc edi
cmp edi esi
jne r-xdata
cmp edi esi
jne r-xdata
inc esi
inc edi
inc esi
inc edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0xd8 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc esi
inc [ ebx + 0x130 ]
mov eax [ ebx + 0x130 ]
cmp eax [ ebx + 0xd0 ]
jne r-xdata
inc edi
sub_4619fe
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
push sub_4619ea
push ecx
mov [ esi + 0x88 ] 0x20
mov [ esi + 0xd8 ] 0x0
mov [ esi + 0xcc ] eax
mov [ esi + 0x130 ] 0x0
call [ EnumChildWindows@IAT ]
mov eax [ esi + 0xd8 ]
test eax eax
je r-xdata
xor al al
pop esi
pop ebp
retn 0xc
push eax
push esi
call sub_44cdaf
mov al 0x1
pop esi
pop ebp
retn 0xc
sub_461a5b
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
cmp [ edi ] eax
ja r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x14
push ebx
mov ebx r--data
mov eax esi
call sub_402160
push r--data
push esi
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
cmp eax 0x3b
je r-xdata
pop ebx
pop edi
xor al al
pop esi
pop ebp
retn 0x14
call sub_410bc0
mov esi [ edi ]
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x3a
je r-xdata
cmp eax 0x5d
je r-xdata
inc esi
mov [ edi ] esi
cmp eax 0x3b
je r-xdata
cmp ebx [ ebp + 0x18 ]
ja r-xdata
mov esi [ edi ]
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
lea esp [ esp ]
cmp eax 0x3a
jne r-xdata
cmp eax 0x5d
je r-xdata
mov eax [ ebp + 0x8 ]
push ebx
lea edx [ ebx + 0x1 ]
push eax
mov [ edi ] edx
call sub_4364e6
movzx ecx [ eax ]
push ecx
mov eax esi
call sub_403020
jmp r-xdata
inc esi
mov [ edi ] esi
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi ] eax
cmp eax esi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ebx r--data
call sub_402160
mov eax [ ebp + 0x18 ]
cmp [ edi ] eax
ja r-xdata
mov ebx [ edi ]
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x3a
je r-xdata
pop ebx
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x14
mov ebx [ edi ]
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
call sub_4364e6
movzx esi [ eax ]
mov edx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
push eax
push edx
mov [ ebp + 0x14 ] eax
call sub_4364e6
movzx eax [ eax ]
cmp esi 0x3b
jne r-xdata
jmp r-xdata
inc [ edi ]
jmp r-xdata
add ebx 0x2
mov [ edi ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
push esi
call sub_403020
mov ecx [ ebp + 0x18 ]
cmp [ edi ] ecx
jbe r-xdata
sub_461b9a
push ebp
mov ebp esp
sub esp 0x888
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x84 ]
call sub_410620
mov eax [ edi ]
push 0x0
push 0x0
push 0x406
push eax
call [ SendMessageW@IAT ]
test ebx ebx
js r-xdata
lea edi [ ebp - 0x84 ]
call sub_410640
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp ebx eax
jge r-xdata
mov ecx [ edi ]
push ecx
push 0x800
lea edx [ ebp - 0x84 ]
push edx
call sub_4343ad
mov esi eax
mov eax [ edi ]
push esi
push ebx
push 0x40d
push eax
call [ SendMessageW@IAT ]
push 0x800
lea ecx [ ebp - 0x884 ]
push ecx
push esi
lea edx [ ebp - 0x84 ]
push edx
call sub_4342dd
mov eax [ ebp + 0x10 ]
lea ebx [ ebp - 0x884 ]
call sub_402160
lea edi [ ebp - 0x84 ]
call sub_410640
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_461c4a
push ebp
mov ebp esp
sub esp 0x8b0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xac ]
call sub_410620
mov eax [ esi ]
push eax
push 0x28
lea ecx [ ebp - 0xac ]
push ecx
call sub_4343ad
mov edx [ esi ]
push edx
mov ebx eax
push 0x800
lea eax [ ebp - 0xac ]
push eax
call sub_4343ad
mov ecx [ ebp + 0xc ]
push 0x28
push ebx
mov edi eax
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x2c ] 0x11
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x18 ] 0x400
mov [ ebp - 0x1c ] edi
call sub_434319
mov ecx [ esi ]
push ebx
push 0x0
push 0x113e
push ecx
call [ SendMessageW@IAT ]
push 0x800
lea edx [ ebp - 0x8ac ]
push edx
mov esi eax
push edi
lea eax [ ebp - 0xac ]
push eax
call sub_4342dd
mov eax [ ebp + 0x10 ]
test esi esi
je r-xdata
mov ebx r--data
call sub_402160
lea edi [ ebp - 0xac ]
call sub_410640
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ebx [ ebp - 0x8ac ]
call sub_402160
lea edi [ ebp - 0xac ]
call sub_410640
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_461d2b
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x13 ] 0x0
call sub_40bc70
xor edi edi
call sub_401c90
cmp [ eax ] 0x23
jne r-xdata
xor edi edi
call sub_401c90
cmp [ eax ] 0x23
jne r-xdata
mov edi 0x1
call sub_401c90
cmp [ eax ] 0x23
je r-xdata
mov eax [ esi ]
push eax
call sub_413190
add esp 0x4
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] 0x0
push edi
push esi
lea eax [ edi + 0x1 ]
call sub_40c600
push 0x0
push esi
mov eax edi
call sub_40c600
mov [ ebp + 0x13 ] 0x1
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
push edi
call sub_461c4a
push 0x0
lea edx [ ebp - 0x18 ]
push edx
push esi
call sub_445bc3
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi ]
push ebx
push 0x1
push 0x110a
push eax
call [ SendMessageW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
inc [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
sub_461dfa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
sub esp 0x14
push ebx
push esi
push edi
push 0x0
push 0x0
push 0x110a
push ecx
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ebx
call sub_40bc70
xor esi esi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x14 ]
call sub_402250
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
mov ebx r--data
lea eax [ ebp - 0x14 ]
call sub_402160
cmp esi [ ebp - 0x4 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edi
push 0x4
push 0x110a
push ecx
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push edi
push ecx
call sub_461d2b
mov edi eax
test edi edi
je r-xdata
mov ebx [ ebp + 0xc ]
push esi
push ebx
call sub_4364e6
cmp [ eax ] 0x7c
jne r-xdata
inc esi
cmp esi [ ebp - 0x4 ]
jb r-xdata
push esi
push ebx
call sub_4364e6
movzx eax [ eax ]
push eax
lea eax [ ebp - 0x14 ]
call sub_403020
inc esi
cmp esi [ ebp - 0x4 ]
jb r-xdata
lea edx [ esi + 0x1 ]
push edx
push ebx
call sub_4364e6
cmp [ eax ] 0x7c
jne r-xdata
push 0x7c
lea eax [ ebp - 0x14 ]
call sub_403020
add esi 0x2
sub_461ee9
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_461dfa
mov esi eax
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
xor ebx ebx
call sub_436565
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
test esi esi
je r-xdata
mov edx [ edi ]
push esi
push 0x4
push 0x110a
push edx
call [ SendMessageW@IAT ]
mov esi eax
pop edi
pop esi
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ edi ]
push esi
push 0x1
push 0x110a
push eax
inc ebx
call [ SendMessageW@IAT ]
mov esi eax
test esi esi
jne r-xdata
sub_461f53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x24
push ebx
push esi
push edi
push eax
call sub_4367cf
mov esi eax
mov eax [ ebp + 0x10 ]
mov ebx r--data
call sub_402160
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor ebx ebx
test esi esi
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
nop
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x2
push edi
push 0x102c
push edx
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
inc ebx
cmp ebx esi
jl r-xdata
push 0xa
lea eax [ ebp - 0x24 ]
push eax
push ebx
call sub_41305c
mov ecx [ ebp + 0x10 ]
add esp 0xc
push ecx
call sub_436565
test al al
jne r-xdata
push 0xa
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41305c
mov eax [ ebp + 0x10 ]
add esp 0xc
lea ebx [ ebp - 0x24 ]
call sub_402160
inc edi
cmp edi esi
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x2
push ebx
push 0x102c
push edx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
lea edi [ ebp - 0x24 ]
call sub_40d200
mov eax [ ebp + 0x10 ]
mov edi r--data
call sub_40d200
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_462034
push ebp
mov ebp esp
sub esp 0x8ac
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xa8 ]
call sub_410620
mov eax [ esi ]
push eax
push 0x28
lea ecx [ ebp - 0xa8 ]
push ecx
call sub_4343ad
mov edx [ esi ]
push edx
mov edi eax
push 0x800
lea eax [ ebp - 0xa8 ]
push eax
call sub_4343ad
mov ecx [ ebp + 0x10 ]
push 0x28
push edi
mov ebx eax
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0x10 ] 0x400
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x14 ] ebx
call sub_434319
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
push edi
push ecx
push 0x1073
push edx
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x8a8 ]
push eax
push ebx
lea ecx [ ebp - 0xa8 ]
push ecx
call sub_4342dd
mov eax [ ebp + 0x14 ]
lea ebx [ ebp - 0x8a8 ]
call sub_402160
lea edi [ ebp - 0xa8 ]
call sub_410640
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4620ea
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push 0x10000
call sub_4115d7
add esp 0x4
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43652f
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ebx
dec ecx
push ecx
mov [ ebx ] 0x7fff
mov eax [ edx ]
push 0xc4
push eax
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov ebx r--data
mov eax esi
call sub_402160
lea eax [ ebp - 0x8 ]
push eax
call sub_436508
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor ecx ecx
mov [ ebx + eax * 2 ] cx
mov eax esi
call sub_402160
lea edx [ ebp - 0x8 ]
push edx
call sub_436508
mov al 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46216f
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
push edi
mov edi [ SendMessageW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0xb0
push edx
call edi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov ecx [ esi ]
push 0x0
push 0x0
push 0xe
push ecx
call edi
mov edi eax
test edi edi
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp edi [ ebp - 0x4 ]
jb r-xdata
push ebx
xor ecx ecx
lea ebx [ edi + 0x1 ]
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
push ebx
push 0xd
push ecx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push esi
call sub_4111dc
add esp 0x4
pop ebx
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x8 ]
lea ebx [ esi + eax * 2 ]
mov eax [ ebp + 0xc ]
call sub_402160
push esi
call sub_4111dc
add esp 0x4
pop ebx
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
xor edx edx
mov [ esi + eax * 2 ] dx
sub_462237
push ebp
mov ebp esp
mov eax 0x108c
call sub_422240
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
xor esi esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] eax
cmp ecx edi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
cmp edx edi
jne r-xdata
mov [ edx ] edi
mov [ ebp - 0x88 ] r--data
mov [ ebp - 0x84 ] r--data
mov [ ebp - 0x80 ] r--data
mov [ ebp - 0x7c ] r--data
test ebx 0xd8038580
je r-xdata
mov [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp [ eax ] 0x28
jne r-xdata
mov [ ebp - 0x4 ] 0x11
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_42fd00
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov [ ecx ] eax
test ebx 0x800
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] 0x1
test ebx 0x2000
jne r-xdata
cmp [ eax + esi + 0x1 ] 0x2a
jne r-xdata
mov eax ebx
and eax 0x1800000
je r-xdata
mov [ ebp - 0x4 ] 0x43
jmp r-xdata
test ebx 0x20000000
je r-xdata
mov edx [ ebp + 0x8 ]
push 0xffffffff
push edx
call sub_42e688
mov ecx [ ebp + 0x14 ]
add esp 0x8
mov [ ecx ] eax
cmp eax edi
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0x5
lea eax [ esi + eax + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
and eax 0x700000
mov ecx 0x2
cmp eax 0x300000
jg r-xdata
cmp eax 0x800000
je r-xdata
mov [ ebp - 0x4 ] 0x2c
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x4
lea eax [ esi + ecx + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0x7
or ebx 0x800
jmp r-xdata
cmp eax __dos_header
je r-xdata
je r-xdata
cmp eax 0x1000000
je r-xdata
mov edx [ ebp + 0x8 ]
push 0xd
lea eax [ esi + edx + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0x6
or ebx 0x20000000
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ esi + ecx ] 0x28
je r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
cmp eax 0x500000
jne r-xdata
mov eax 0xd0a
jmp r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x38
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x3
lea eax [ esi + eax + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0xf
or ebx 0x4000000
jmp r-xdata
mov eax ecx
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x1088 ]
mov ecx edx
push eax
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x70 ] eax
call sub_413530
mov ecx eax
mov eax [ ebp + 0x8 ]
add ecx eax
add esi eax
mov [ ebp - 0x6c ] ecx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x88 ]
push ecx
push edi
lea edx [ ebp - 0x1088 ]
mov [ ebp - 0x14 ] edx
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x20 ]
push eax
push edi
push edi
push edi
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
and ecx 0x7
push ecx
push ebx
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x1088 ] 0x5e
call sub_45493c
add esp 0x38
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov [ ebp - 0x30 ] edi
cmp eax 0xff
jle r-xdata
mov eax 0xa
cmp eax 0x100000
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
lea eax [ esi + ecx + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
mov eax 0x100000
and ebx 0xff8fffff
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0x10000
jle r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x28 ] al
mov edx eax
sar edx 0x8
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] dl
mov [ ebp - 0x27 ] al
jmp r-xdata
mov eax 0xd
jmp r-xdata
cmp eax 0x200000
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x5
lea eax [ esi + edx + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
mov eax 0x200000
and ebx 0xff8fffff
jmp r-xdata
or ebx eax
mov edx [ ebp - 0x58 ]
add edx 0x3
imul edx [ ebp - 0x5c ]
lea ebx [ edx + eax + 0x28 ]
push ebx
call [ rw-data ]
mov esi eax
add esp 0x4
cmp esi edi
jne r-xdata
mov [ ebp - 0x4 ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
lea eax [ esi + eax + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0x7
mov eax 0x300000
and ebx 0xff8fffff
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi ] 0x50435245
mov eax [ ebp - 0x44 ]
mov [ esi + 0x8 ] eax
movzx ecx [ ebp - 0x40 ]
mov [ esi + 0xc ] cx
xor edx edx
mov [ esi + 0xe ] dx
xor eax eax
mov [ esi + 0x14 ] eax
mov edx 0x28
mov [ esi + 0x18 ] dx
movzx eax [ ebp - 0x58 ]
mov [ esi + 0x1a ] ax
movzx ecx [ ebp - 0x5c ]
mov [ esi + 0x1c ] cx
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
xor edx edx
mov [ esi + 0x1e ] dx
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x5c ] edi
movzx eax [ esi + 0x18 ]
add eax esi
mov [ ebp - 0x60 ] eax
movzx ecx [ esi + 0x1a ]
movzx ebx [ esi + 0x1c ]
push edi
imul ebx ecx
lea ecx [ ebp - 0x88 ]
push ecx
push edi
lea edx [ ebp - 0x1088 ]
mov [ ebp - 0x64 ] edx
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x20 ]
push ecx
push edi
push edi
add ebx eax
mov eax [ ebp - 0x10 ]
push edi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x68 ] edi
lea edx [ ebp - 0x4 ]
push edx
mov [ ebp - 0x8 ] eax
mov [ ebx ] 0x5e
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x14 ]
mov ecx eax
push edx
and ecx 0x7
push ecx
push eax
mov [ ebp - 0x14 ] ebx
call sub_45493c
mov dx [ ebp - 0x54 ]
mov [ esi + 0x10 ] dx
movzx eax [ ebp - 0x4c ]
mov [ esi + 0x12 ] ax
movzx ecx [ ebp - 0x40 ]
add esp 0x34
mov [ esi + 0xc ] cx
cmp [ ebp - 0x38 ] edi
je r-xdata
mov [ ebp - 0x4 ] 0x15
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x8
lea eax [ esi + ecx + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0x6
mov eax __dos_header
and ebx 0xff8fffff
jmp r-xdata
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov [ ebp - 0x1c ] 0xffffffff
mov edx [ ebp + 0x8 ]
push 0xc
lea eax [ esi + edx + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
mov eax 0x500000
and ebx 0xff8fffff
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax ] 0x0
inc eax
sub eax ebx
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push 0xc
lea eax [ esi + eax + 0x2 ]
push r--data
push eax
call sub_416931
add esp 0xc
test eax eax
jne r-xdata
add esi 0xe
mov eax 0x800000
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x17
jmp r-xdata
mov [ ebp - 0x4 ] 0x16
add esi 0xe
mov eax 0x1000000
jmp r-xdata
cmp [ ebp - 0x34 ] edi
je r-xdata
mov edi edi
and ebx 0xfe7fffff
cmp [ ebp - 0x4 ] edi
je r-xdata
mov ecx [ ebp - 0x18 ]
push 0xffffffff
push ecx
push ebx
call sub_42ee0a
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov ax [ esi + 0x12 ]
cmp ax [ esi + 0x10 ]
jbe r-xdata
sub ecx 0x2
mov [ ebp - 0x64 ] ecx
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
shl ecx 0x8
or eax ecx
movzx edx [ eax + ebx ]
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
movzx eax [ eax + ebx + 0x1 ]
shl edx 0x8
or edx eax
push edx
push ecx
push ebx
call sub_42ee0a
add esp 0xc
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
test al 0x10
jne r-xdata
push esi
call [ rw-data ]
add esp 0x4
xor edi edi
movzx edx [ edi + 0x1 ]
movzx eax [ edi + 0x2 ]
shl edx 0x8
or edx eax
jne r-xdata
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x4 ] 0x35
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx eax
sub edx ebx
sar edx 0x8
sub al bl
mov [ ecx + ebx ] dl
mov [ ecx + ebx + 0x1 ] al
cmp [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
js r-xdata
mov edx [ ebp - 0x48 ]
push edx
mov [ ebp + 0x8 ] eax
push 0x0
lea eax [ ebp + 0x8 ]
push eax
push ebx
call sub_43f203
add esp 0x10
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
push 0xffffffff
push edx
add edi 0x3
push edi
call sub_42ee0a
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
movzx ecx [ edi - 0x2 ]
movzx edx [ edi - 0x1 ]
shl ecx 0x8
or ecx edx
lea eax [ ecx + edi - 0x3 ]
movzx ecx [ eax ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0xc ] eax
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
push 0x1
push eax
push edi
mov [ ebp - 0x10 ] ecx
call sub_42ef5a
mov cl [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
add esp 0x10
mov [ edx ] cl
test eax eax
js r-xdata
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x1088 ]
cmp ecx eax
jbe r-xdata
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ esi + 0x8 ] 0x10
je r-xdata
mov eax [ ebp - 0x20 ]
test eax eax
jns r-xdata
or [ esi + 0x8 ] 0x10
jmp r-xdata
sub eax 0xfffffffe
neg eax
sbb eax eax
and eax 0xfffffff5
add eax 0x24
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx eax
sar ecx 0x8
mov [ edi + 0x1 ] cl
mov [ edi + 0x2 ] al
mov ecx eax
and ecx 0xff
test eax 0x100
je r-xdata
test eax 0x200
je r-xdata
mov ecx eax
and ecx 0xff
test eax 0x100
je r-xdata
push 0x0
lea ecx [ ebp + 0x8 ]
push ecx
push ebx
call sub_43efd3
add esp 0xc
test eax eax
js r-xdata
or [ esi + 0xc ] 0x4
mov [ esi + 0x16 ] ax
mov edx [ ebp - 0x84 ]
movzx edx [ edx + ecx ]
cmp edx ecx
jne r-xdata
or [ esi + 0xc ] 0x2
mov [ esi + 0x14 ] ax
jmp r-xdata
mov edx [ ebp - 0x84 ]
movzx edx [ edx + ecx ]
cmp edx ecx
jne r-xdata
mov eax [ ebp - 0x48 ]
push eax
push 0x0
push ebx
call sub_43f0d4
add esp 0xc
test eax eax
je r-xdata
and eax 0xfffffeff
mov eax ecx
or [ esi + 0xc ] 0x8
sub_462986
call [ GetForegroundWindow@IAT ]
push eax
push rw-data
call sub_430c09
cmp eax 0xffffffff
je r-xdata
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push 0x2
push eax
push rw-data
call sub_456391
sub_4629b7
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push esi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push 0x1
push eax
push rw-data
call sub_456391
cmp [ ebp + 0x18 ] 0x0
je r-xdata
movzx ecx [ ebp + 0xc ]
movzx eax bx
shl eax 0x10
or eax ecx
push eax
push edi
push 0x204
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
movzx edx [ ebp + 0xc ]
movzx ecx bx
shl ecx 0x10
or ecx edx
push ecx
push edi
push 0x201
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_462a31
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0xc
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
push ebx
mov ebx [ ebp - 0xc ]
mov ecx [ eax + ebx * 4 ]
push esi
mov esi [ edx ]
push edi
mov edi [ ecx ]
mov ecx [ ebp + 0xc ]
mov al [ edi + 0x88 ]
mov [ ebp - 0x2 ] al
cmp ecx 0x6
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp ecx 0x4
jne r-xdata
cmp al 0x18
je r-xdata
cmp ecx 0x3
jne r-xdata
cmp al 0x1
je r-xdata
mov eax [ esi + 0x1d0 ]
mov [ esi + 0x1c ] ebx
test eax eax
je r-xdata
jmp r-xdata
cmp ecx 0x100
jne r-xdata
test al al
je r-xdata
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push edi
push eax
call sub_43599e
cmp al 0x2
je r-xdata
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x8b ]
cmp al 0xff
je r-xdata
cmp al 0x3
jne r-xdata
push 0x0
push esi
push rw-data
call sub_456391
movzx ecx [ ebp - 0x2 ]
mov eax [ esi + 0x17c ]
mov ebx [ esi + 0x178 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] 0x0
cmp ecx 0x1c
ja r-xdata
movzx edx al
cmp edx [ esi + 0x194 ]
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x4c ]
test eax eax
je r-xdata
movzx ecx [ ecx + lookup_table_462ce9 ]
jmp [ ecx * 4 + jump_table_462cc5 ]
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x41c
push eax
call [ SendMessageW@IAT ]
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
push eax
push ecx
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ edi ]
push 0xffffffec
push edx
call [ GetWindowLongW@IAT ]
test eax 0x100000
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
push esi
push rw-data
call sub_440a0d
mov eax [ ebp - 0x8 ]
mov ecx [ edi ]
mov edx [ ebp + 0x8 ]
push eax
push ebx
push ecx
push esi
push edx
mov edx [ edi ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push edx
push esi
push eax
jmp r-xdata
jmp r-xdata
cmp ecx 0x300
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ edi ]
push ebx
push eax
push esi
push ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edi ]
mov ecx [ ebp + 0x8 ]
push edx
push ebx
push eax
push esi
push ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi ]
push 0x0
push 0x2
push 0xa1
push eax
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_451877
mov [ ebp - 0x1 ] 0x1
cmp ecx 0x200
jne r-xdata
mov ecx [ esi + 0x1c8 ]
test ecx ecx
jle r-xdata
cmp [ edi + 0x88 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x1c8 ] eax
jmp r-xdata
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov ecx [ esi + 0x1c8 ]
test ecx ecx
jle r-xdata
mov eax [ edi ]
lea ecx [ esi + 0x1c4 ]
push ecx
lea edx [ esi + 0x1c0 ]
push edx
push 0xb0
push eax
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov [ esi + 0x1c8 ] 0x0
mov edx [ edi ]
push edx
push esi
push ecx
mov ecx rw-data
call sub_451877
cmp ecx [ ebp + 0x8 ]
jne r-xdata
push eax
push ebx
mov [ esi + 0x1c8 ] 0x0
mov edx [ edi ]
push edx
push esi
push ecx
mov ecx rw-data
call sub_451877
jmp r-xdata
sub_462d06
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
push edi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
test edi edi
jne r-xdata
pop edi
xor al al
pop ebx
pop ebp
retn 0x18
push 0xffffffff
push esi
push rw-data
call sub_456391
mov eax [ esi + 0x178 ]
mov edx [ esi + 0x17c ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx [ esi + 0x180 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov eax [ esi + 0x184 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x7fffffff
mov edx [ esi + 0x170 ]
mov [ ecx ] eax
mov [ rw-data ] edx
mov eax [ esi + 0x174 ]
push 0x0
mov [ rw-data ] eax
mov ecx [ esi ]
push sub_430727
push ecx
call [ EnumChildWindows@IAT ]
mov eax [ rw-data ]
mov [ ebx ] 0xffffffff
test eax eax
je r-xdata
call [ GetActiveWindow@IAT ]
cmp [ esi ] eax
je r-xdata
mov [ ebx ] 0x0
cmp eax [ esi ]
je r-xdata
pop esi
pop edi
xor al al
pop ebx
pop ebp
retn 0x18
push eax
push rw-data
call sub_441b7c
mov [ ebx ] eax
cmp eax 0xffffffff
jne r-xdata
pop esi
pop edi
mov al 0x1
pop ebx
pop ebp
retn 0x18
sub_462dfd
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
push 0x0
push 0x1
add eax ecx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
push ebx
mov ebx r--data
mov eax rw-data
call sub_402160
pop ebx
mov eax rw-data
call sub_401b80
xor eax eax
pop ebp
retn 0x8
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push 0x80
push 0x0
push eax
call sub_4533eb
push eax
push rw-data
call sub_461465
mov eax rw-data
call sub_401b80
xor eax eax
pop ebp
retn 0x8
sub_462e96
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov ebx r--data
mov eax rw-data
mov [ ebp + 0x8 ] esi
mov [ rw-data ] 0x0
call sub_402160
test esi esi
je r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
push eax
mov esi rw-data
call sub_40e0a0
mov esi [ ebp + 0x8 ]
mov esi rw-data
call sub_40e0c0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
push eax
call sub_43303f
add esp 0x4
mov [ rw-data ] eax
sub_462f0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
push 0xffffffff
push ecx
call sub_45340c
push eax
mov ecx esi
call sub_40c650
push eax
call sub_45f790
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_462f4d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
call sub_40c650
push eax
push r--data
mov ecx esi
call sub_40c650
push eax
call sub_45f790
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_462f90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c650
push eax
mov ecx rw-data
call sub_45fa41
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_462fc8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
or ebx 0xffffffff
push edi
xor edi edi
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
test ecx ecx
je r-xdata
cmp ecx 0x1
jbe r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov ecx [ esp + 0xc ]
mov edi eax
mov eax [ ebp + 0x10 ]
cmp ecx 0x2
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
mov ecx [ esp + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
cmp ecx 0x3
jbe r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov ecx [ esp + 0xc ]
mov ebx eax
mov eax [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push ebx
push eax
push edi
push 0x0
dec eax
jne r-xdata
push edi
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
push 0x1
add eax ecx
call sub_403c90
mov ecx esi
call sub_40c650
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push eax
push ebx
push ecx
push edi
push 0x1
jmp r-xdata
push rw-data
call sub_45fbac
mov ebx eax
call sub_408f40
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
sub_4630c5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ ecx ]
push eax
call sub_4533eb
mov ecx [ eax + 0x8 ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
mov eax esi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] esi
call sub_4013c0
cmp ebx 0x8
jne r-xdata
mov eax esi
mov [ esp + 0xc ] eax
test bl 0x1
je r-xdata
xor edi edi
mov ebx esi
test esi esi
je r-xdata
test bl 0x2
je r-xdata
test esi esi
je r-xdata
lea edi [ esp + 0x20 ]
jmp r-xdata
lea esp [ esp ]
mov [ esp + 0xc ] esi
test bl 0x4
je r-xdata
test esi esi
je r-xdata
xor edi edi
test esi esi
je r-xdata
mov esi [ ebp + 0xc ]
call sub_40e6a0
lea ecx [ esp + 0x20 ]
call sub_402250
lea ecx [ esp + 0x10 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
cmp edi ebx
jb r-xdata
call sub_401c90
movzx eax [ eax ]
push eax
lea eax [ esp + 0x24 ]
call sub_403020
lea edi [ esp + 0x10 ]
test esi esi
je r-xdata
lea edi [ esi - 0x1 ]
cmp edi 0xffffffff
je r-xdata
sub eax edi
push eax
push edi
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_461465
lea ecx [ esp + 0x20 ]
push ecx
lea esi [ esp + 0x14 ]
call sub_40e0a0
mov esi [ esp + 0x14 ]
mov edi edi
lea esi [ esp + 0x10 ]
call sub_401c90
movzx edx [ eax ]
push edx
call sub_4349d1
add esp 0x4
test eax eax
jne r-xdata
push 0x0
lea eax [ esp + 0x24 ]
push eax
or eax 0xffffffff
call sub_40c600
xor bl bl
xor edi edi
test esi esi
je r-xdata
inc edi
push edi
push 0x0
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_461465
lea edx [ esp + 0x20 ]
push edx
lea esi [ esp + 0x14 ]
call sub_40e0a0
mov esi [ esp + 0x14 ]
lea ebx [ ebx ]
mov eax [ esp + 0xc ]
inc edi
cmp edi [ esp + 0xc ]
jb r-xdata
lea eax [ esp + 0x20 ]
push eax
lea esi [ esp + 0x14 ]
call sub_40e0a0
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
lea esi [ esp + 0x10 ]
call sub_401c90
movzx ecx [ eax ]
push ecx
call sub_4349d1
add esp 0x4
test eax eax
je r-xdata
lea esi [ esp + 0x10 ]
call sub_401c90
movzx ecx [ eax ]
push ecx
call sub_4349d1
add esp 0x4
test eax eax
je r-xdata
lea esi [ esp + 0x10 ]
call sub_401c90
movzx edx [ eax ]
push edx
call sub_4349d1
add esp 0x4
test eax eax
je r-xdata
xor bl bl
test bl bl
jne r-xdata
inc edi
cmp edi [ esp + 0xc ]
jb r-xdata
mov bl 0x1
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_401c90
movzx edx [ eax ]
push edx
lea eax [ esp + 0x24 ]
call sub_403020
sub_4632bc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov [ esp + 0x18 ] ecx
push edi
lea ecx [ esp + 0x40 ]
call sub_40bc70
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ebx eax
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x30 ]
call sub_4013c0
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_4533eb
mov edx [ esi + 0x4 ]
mov edi [ edx + 0x4 ]
push edi
mov [ esp + 0x28 ] eax
call sub_4536cb
test al al
je r-xdata
push edi
call sub_45340c
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4533b1
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov ecx edi
call sub_40c650
mov esi eax
dec esi
js r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
jmp r-xdata
xor edi edi
cmp [ esi + 0x8 ] 0x4
jb r-xdata
mov edi [ esp + 0x24 ]
mov eax [ edi + 0x4 ]
add eax esi
cmp eax [ ebx + 0x4 ]
ja r-xdata
lea ecx [ esp + 0x30 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x8 ] 0x5
mov [ esp + 0x13 ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov edi eax
push esi
push 0x0
push ebx
lea ecx [ esp + 0x3c ]
push ecx
call sub_461465
push edi
lea eax [ esp + 0x34 ]
call sub_40bd50
mov eax [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
sub edx eax
sub edx esi
push edx
add eax esi
push eax
push ebx
lea eax [ esp + 0x4c ]
push eax
call sub_461465
lea ecx [ esp + 0x40 ]
push ecx
lea eax [ esp + 0x34 ]
call sub_40bd50
jmp r-xdata
test edi edi
jns r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x30 ]
call sub_40e6a0
xor esi esi
mov edx [ esp + 0x18 ]
movzx eax [ esp + 0x13 ]
mov ecx [ esp + 0x20 ]
push 0x7fffffff
push 0xffffffff
push edx
push edi
push eax
push ecx
push ebx
call sub_4426cd
mov esi eax
test esi esi
jns r-xdata
mov [ esp + 0x13 ] 0x1
sub esi eax
push esi
push eax
jmp r-xdata
mov ecx esi
sub ecx eax
push ecx
push eax
push ebx
push edx
call sub_461465
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x34 ]
call sub_40bd50
mov ecx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x34 ]
call sub_40bd50
inc [ esp + 0x14 ]
add esi [ esp + 0x18 ]
test edi edi
je r-xdata
push esi
push 0x0
push ebx
lea edx [ esp + 0x3c ]
push edx
call sub_461465
neg edi
jmp r-xdata
mov edi esi
neg edi
xor esi esi
neg edi
jmp r-xdata
push ebx
push edx
call sub_461465
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x34 ]
call sub_40bd50
mov ecx [ esp + 0x14 ]
push 0x0
push ecx
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403cd0
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x20 ]
push 0xffffffff
push esi
push ecx
push 0x1
push edx
push eax
push ebx
mov [ esp + 0x44 ] esi
call sub_4426cd
mov esi eax
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x40 ]
cmp esi [ ebx + 0x4 ]
je r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
movzx eax [ esp + 0x13 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x2c ] eax
mov ecx [ ebx + 0x4 ]
sub ecx esi
push ecx
push esi
lea edx [ esp + 0x48 ]
sub_463514
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533b1
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov esi eax
call sub_40c650
test eax eax
jns r-xdata
cmp eax esi
jle r-xdata
xor eax eax
sub esi eax
mov eax esi
lea ecx [ ebp - 0x10 ]
call sub_4013c0
mov edx [ edi + 0x4 ]
mov eax [ edx ]
push esi
push 0x0
push eax
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax esi
sub_463583
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
call sub_4533b1
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edi eax
call sub_40c650
mov esi eax
test esi esi
jns r-xdata
cmp esi edi
jle r-xdata
xor esi esi
sub edi esi
mov eax edi
lea ecx [ ebp - 0x10 ]
call sub_4013c0
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push edi
push esi
push eax
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi edi
sub_4635f5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533b1
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov ebx eax
mov [ ebp + 0x8 ] 0xffffffff
call sub_40c650
cmp [ edi + 0x8 ] 0x2
lea esi [ eax - 0x1 ]
jbe r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40bc70
cmp esi ebx
jg r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov [ ebp + 0x8 ] eax
mov esi ebx
test esi esi
jns r-xdata
sub ebx esi
mov eax ebx
mov ecx ebx
sub ecx esi
cmp eax ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
push eax
push esi
push ecx
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_463690
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533b1
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_40bc70
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
test eax eax
js r-xdata
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp eax esi
jle r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
push eax
sub esi eax
push esi
push ecx
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov eax esi
sub_4636fa
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_40bc70
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533b1
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edi eax
call sub_40c650
test eax eax
js r-xdata
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp eax edi
jle r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx ]
push eax
push 0x0
push ecx
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov eax edi
sub_463763
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi 0x2
cmp eax esi
jae r-xdata
mov ecx ebx
call sub_40bc70
mov eax [ edi + 0x4 ]
push esi
sub eax esi
push eax
push edi
push ebx
call sub_461465
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov esi eax
sub_46379b
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
call sub_410bc0
push r--data
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ edi ] 0x0
call sub_463763
push eax
call sub_445ae0
add esp 0x8
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_402250
test bl bl
je r-xdata
lea eax [ ebp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov eax r--data
call sub_40e680
mov edx [ rw-data ]
cmp [ edx + 0x2c ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp + 0x10 ]
mov [ edx ] 0x80000002
call sub_402250
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov [ edi ] 0x100
lea edx [ ebp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x80000000
lea ecx [ ebp + 0x10 ]
call sub_402250
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
lea ecx [ ebp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x10 ]
mov [ eax ] 0x80000005
call sub_402250
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
lea eax [ ebp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp + 0x10 ]
mov [ edx ] 0x80000001
call sub_402250
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
lea edx [ ebp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x80000003
lea ecx [ ebp + 0x10 ]
call sub_402250
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
lea ecx [ ebp + 0x10 ]
call sub_402250
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_463980
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx r--data
call sub_402160
mov eax [ ebp + 0xc ]
call sub_402160
mov eax [ ebp + 0x10 ]
call sub_402160
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ebx r--data
call sub_402160
xor edi edi
lea esi [ ebp + 0x14 ]
call sub_401c90
cmp [ eax ] 0x5c
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
push 0x0
lea eax [ ebp + 0x14 ]
push eax
push ecx
call sub_461465
mov edx [ ebp + 0x18 ]
sub edx esi
dec edx
push edx
inc esi
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp + 0x14 ]
push eax
push esi
call sub_461465
mov eax r--data
call sub_40e680
lea ecx [ ebp + 0x14 ]
call sub_402250
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov esi [ ebp + 0x18 ]
mov edi 0x1
call sub_401c90
cmp [ eax ] 0x5c
jne r-xdata
push 0x0
push esi
lea eax [ edi + 0x1 ]
call sub_40c600
push r--data
push esi
call sub_431a2b
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
push 0x0
lea edx [ ebp + 0x14 ]
push edx
push eax
call sub_461465
push 0x0
lea ecx [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push ecx
call sub_40c600
jmp r-xdata
mov esi [ ebp + 0x18 ]
push r--data
lea edx [ ebp + 0x14 ]
push edx
call sub_431a2b
mov esi eax
cmp esi 0xffffffff
jne r-xdata
sub_463a6d
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea esi [ ebp - 0x14 ]
mov edi ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_40d370
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push esi
push eax
call sub_45f645
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
add edi 0x15c
push edi
call sub_434b02
mov esi [ ebp + 0xc ]
call sub_408f40
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
lea esi [ ebp - 0x14 ]
call sub_401350
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_463ad5
push ebp
mov ebp esp
sub esp 0x514
push ebx
push esi
push edi
mov eax [ r--data ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ ebp - 0x510 ] eax
xor eax eax
mov [ ebp - 0x508 ] eax
mov [ ebp - 0x504 ] eax
mov [ ebp - 0x500 ] eax
mov [ ebp - 0x4fc ] eax
mov [ ebp - 0x4f8 ] eax
mov [ ebp - 0x4f4 ] eax
mov eax [ r--data ]
mov [ ebp - 0x4e4 ] eax
xor eax eax
mov [ ebp - 0x4de ] eax
mov [ ebp - 0x4da ] eax
mov [ ebp - 0x4d6 ] eax
mov [ ebp - 0x4d2 ] eax
mov [ ebp - 0x4ce ] eax
mov [ ebp - 0x4ca ] ax
mov eax [ r--data ]
mov [ ebp - 0x4bc ] eax
xor eax eax
mov [ ebp - 0x4b8 ] eax
mov [ ebp - 0x4b4 ] eax
mov [ ebp - 0x4b0 ] eax
mov [ ebp - 0x4ac ] eax
mov [ ebp - 0x4a8 ] eax
mov [ ebp - 0x4a4 ] eax
movzx eax [ r--data ]
mov [ ebp - 0x50c ] ecx
movzx ecx [ r--data ]
mov [ ebp - 0x490 ] ax
xor eax eax
mov [ ebp - 0x4e8 ] edx
mov edx [ r--data ]
mov [ ebp - 0x48e ] eax
mov [ ebp - 0x48a ] eax
mov [ ebp - 0x486 ] eax
mov [ ebp - 0x482 ] eax
mov [ ebp - 0x47e ] eax
mov [ ebp - 0x47a ] ax
movzx eax [ r--data ]
mov [ ebp - 0x4e0 ] cx
mov ecx [ r--data ]
mov [ ebp - 0x4c0 ] edx
mov edx [ r--data ]
mov ebx 0x4
mov [ ebp - 0x498 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x494 ] edx
mov edx [ r--data ]
mov [ ebp - 0x468 ] ax
xor edi edi
xor eax eax
mov [ ebp - 0x470 ] ecx
mov [ ebp - 0x46c ] edx
mov edx [ r--data ]
mov [ ebp - 0x466 ] eax
mov [ ebp - 0x462 ] eax
mov [ ebp - 0x45e ] eax
mov [ ebp - 0x45a ] eax
mov [ ebp - 0x456 ] eax
mov [ ebp - 0x452 ] ax
mov eax [ r--data ]
mov ecx 0x5
mov [ ebp - 0x4f0 ] 0x6
mov [ ebp - 0x4ec ] ebx
mov [ ebp - 0x4c8 ] 0x7
mov [ ebp - 0x4c4 ] ebx
mov [ ebp - 0x4a0 ] ebx
mov [ ebp - 0x49c ] ebx
mov [ ebp - 0x478 ] ebx
mov [ ebp - 0x474 ] ebx
mov [ ebp - 0x450 ] ecx
mov [ ebp - 0x44c ] ebx
mov [ ebp - 0x448 ] edx
mov [ ebp - 0x444 ] eax
movzx edx [ r--data ]
xor eax eax
mov [ ebp - 0x43e ] eax
mov [ ebp - 0x43a ] eax
mov [ ebp - 0x436 ] eax
mov [ ebp - 0x432 ] eax
mov [ ebp - 0x42e ] eax
mov [ ebp - 0x42a ] ax
mov eax [ r--data ]
mov [ ebp - 0x420 ] eax
mov eax [ r--data ]
mov [ ebp - 0x418 ] eax
xor eax eax
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x404 ] eax
mov eax [ r--data ]
mov [ ebp - 0x3f4 ] eax
xor eax eax
mov [ ebp - 0x440 ] dx
mov edx [ r--data ]
mov [ ebp - 0x3ec ] eax
mov [ ebp - 0x3e8 ] eax
mov [ ebp - 0x3e4 ] eax
mov [ ebp - 0x3e0 ] eax
mov [ ebp - 0x3dc ] eax
mov eax [ r--data ]
mov [ ebp - 0x41c ] edx
mov edx [ r--data ]
mov [ ebp - 0x3d0 ] eax
xor eax eax
mov [ ebp - 0x3f8 ] edx
mov edx [ r--data ]
mov [ ebp - 0x3c4 ] eax
mov [ ebp - 0x3c0 ] eax
mov [ ebp - 0x3bc ] eax
mov [ ebp - 0x3b8 ] eax
mov [ ebp - 0x3b4 ] eax
mov eax [ r--data ]
mov [ ebp - 0x3f0 ] edx
mov edx [ r--data ]
mov [ ebp - 0x3a8 ] eax
movzx eax [ r--data ]
mov [ ebp - 0x3c8 ] edx
mov edx [ r--data ]
mov [ ebp - 0x400 ] ecx
mov [ ebp - 0x3d8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x39c ] ax
xor eax eax
mov [ ebp - 0x3a0 ] edx
mov edx [ r--data ]
mov [ ebp - 0x3cc ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x39a ] eax
mov [ ebp - 0x396 ] eax
mov [ ebp - 0x392 ] eax
mov [ ebp - 0x38e ] eax
mov [ ebp - 0x38a ] ax
mov eax [ r--data ]
mov [ ebp - 0x380 ] edx
movzx edx [ r--data ]
mov [ ebp - 0x3a4 ] ecx
mov [ ebp - 0x37c ] eax
xor eax eax
mov ecx 0x3
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x424 ] ebx
mov [ ebp - 0x3fc ] ebx
mov [ ebp - 0x3d4 ] ebx
mov [ ebp - 0x3b0 ] 0x2
mov [ ebp - 0x3ac ] ebx
mov [ ebp - 0x388 ] ecx
mov [ ebp - 0x384 ] ebx
mov [ ebp - 0x378 ] dx
mov [ ebp - 0x376 ] eax
mov [ ebp - 0x372 ] eax
mov [ ebp - 0x36e ] eax
mov [ ebp - 0x36a ] eax
movzx edx [ r--data ]
mov [ ebp - 0x366 ] eax
mov [ ebp - 0x362 ] ax
mov eax [ r--data ]
mov [ ebp - 0x358 ] eax
xor eax eax
mov [ ebp - 0x34e ] eax
mov [ ebp - 0x34a ] eax
mov [ ebp - 0x346 ] eax
mov [ ebp - 0x342 ] eax
mov [ ebp - 0x33e ] eax
mov [ ebp - 0x33a ] ax
mov eax [ r--data ]
mov [ ebp - 0x330 ] eax
mov eax [ r--data ]
mov [ ebp - 0x328 ] eax
xor eax eax
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x320 ] eax
mov [ ebp - 0x31c ] eax
mov [ ebp - 0x318 ] eax
mov [ ebp - 0x314 ] eax
mov eax [ r--data ]
mov [ ebp - 0x360 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x304 ] eax
mov eax [ r--data ]
mov [ ebp - 0x354 ] ecx
mov [ ebp - 0x350 ] dx
mov edx [ r--data ]
mov ecx 0x1
mov [ ebp - 0x2fc ] eax
xor eax eax
mov [ ebp - 0x338 ] ecx
mov [ ebp - 0x32c ] edx
mov edx [ r--data ]
mov [ ebp - 0x310 ] ecx
mov [ ebp - 0x2e8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x2f8 ] eax
mov [ ebp - 0x2f4 ] eax
mov [ ebp - 0x2f0 ] eax
mov [ ebp - 0x2ec ] eax
mov eax [ r--data ]
mov [ ebp - 0x308 ] edx
mov edx [ r--data ]
mov [ ebp - 0x2e0 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x2d8 ] eax
xor eax eax
mov [ ebp - 0x300 ] edx
mov edx [ r--data ]
mov [ ebp - 0x2b8 ] ecx
movzx ecx [ r--data ]
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x2d0 ] eax
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2c4 ] eax
mov eax [ r--data ]
mov [ ebp - 0x2dc ] edx
mov edx [ r--data ]
mov [ ebp - 0x2b0 ] eax
xor eax eax
mov [ ebp - 0x2ac ] cx
mov ecx 0x8
mov [ ebp - 0x2b4 ] edx
mov edx [ r--data ]
mov [ ebp - 0x35c ] ebx
mov [ ebp - 0x334 ] ebx
mov [ ebp - 0x30c ] ebx
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2c0 ] 0x9
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2aa ] eax
mov [ ebp - 0x2a6 ] eax
mov [ ebp - 0x2a2 ] eax
mov [ ebp - 0x29e ] eax
mov [ ebp - 0x29a ] ax
mov [ ebp - 0x298 ] 0xa
mov [ ebp - 0x294 ] ecx
mov eax [ r--data ]
mov [ ebp - 0x28c ] eax
xor eax eax
mov [ ebp - 0x288 ] eax
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x280 ] eax
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] eax
mov eax [ r--data ]
mov [ ebp - 0x264 ] eax
xor eax eax
mov [ ebp - 0x25e ] eax
mov [ ebp - 0x25a ] eax
mov [ ebp - 0x256 ] eax
mov [ ebp - 0x252 ] eax
mov [ ebp - 0x24e ] eax
mov [ ebp - 0x24a ] ax
mov eax [ r--data ]
mov [ ebp - 0x290 ] edx
mov edx [ r--data ]
mov [ ebp - 0x240 ] eax
mov eax [ r--data ]
mov [ ebp - 0x268 ] edx
movzx edx [ r--data ]
mov [ ebp - 0x238 ] eax
xor eax eax
mov [ ebp - 0x260 ] dx
mov edx [ r--data ]
mov [ ebp - 0x232 ] eax
mov [ ebp - 0x22e ] eax
mov [ ebp - 0x22a ] eax
mov [ ebp - 0x226 ] eax
mov [ ebp - 0x222 ] ax
mov eax [ r--data ]
mov [ ebp - 0x23c ] edx
movzx edx [ r--data ]
mov [ ebp - 0x218 ] eax
mov eax [ r--data ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov [ ebp - 0x234 ] dx
mov edx [ r--data ]
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x204 ] eax
mov [ ebp - 0x200 ] eax
mov [ ebp - 0x1fc ] eax
mov eax [ r--data ]
mov [ ebp - 0x214 ] edx
mov edx [ r--data ]
mov [ ebp - 0x1f0 ] eax
mov eax [ r--data ]
mov [ ebp - 0x20c ] edx
mov edx [ r--data ]
mov [ ebp - 0x1e8 ] eax
xor eax eax
mov [ ebp - 0x1ec ] edx
movzx edx [ r--data ]
mov [ ebp - 0x1e2 ] eax
mov [ ebp - 0x1de ] eax
mov [ ebp - 0x1da ] eax
mov [ ebp - 0x1d6 ] eax
mov [ ebp - 0x1d2 ] ax
mov eax [ r--data ]
mov esi 0xb
mov [ ebp - 0x1e4 ] dx
mov edx [ r--data ]
mov [ ebp - 0x1c8 ] eax
mov eax [ r--data ]
mov [ ebp - 0x270 ] ecx
mov [ ebp - 0x26c ] ebx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x244 ] ebx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x1f8 ] esi
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x1d0 ] esi
mov [ ebp - 0x1cc ] ebx
mov [ ebp - 0x1c4 ] edx
mov [ ebp - 0x1c0 ] eax
xor eax eax
mov [ ebp - 0x1ba ] eax
mov [ ebp - 0x1b6 ] eax
mov [ ebp - 0x1b2 ] eax
mov [ ebp - 0x1ae ] eax
mov [ ebp - 0x1aa ] ax
mov eax [ r--data ]
mov [ ebp - 0x1a0 ] eax
mov eax [ r--data ]
mov [ ebp - 0x19c ] eax
mov eax [ r--data ]
mov [ ebp - 0x198 ] eax
xor eax eax
mov [ ebp - 0x194 ] eax
mov [ ebp - 0x190 ] eax
mov [ ebp - 0x18c ] eax
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x184 ] eax
mov eax [ r--data ]
mov [ ebp - 0x178 ] eax
mov eax [ r--data ]
mov [ ebp - 0x174 ] eax
mov eax [ r--data ]
mov [ ebp - 0x170 ] eax
movzx eax [ r--data ]
movzx edx [ r--data ]
mov [ ebp - 0x16c ] ax
xor eax eax
mov [ ebp - 0x16a ] eax
mov [ ebp - 0x166 ] eax
mov [ ebp - 0x162 ] eax
mov [ ebp - 0x15e ] eax
mov [ ebp - 0x15a ] ax
mov eax [ r--data ]
mov [ ebp - 0x17c ] ecx
mov [ ebp - 0x154 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x14c ] eax
mov eax [ r--data ]
mov [ ebp - 0x150 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x144 ] eax
xor eax eax
mov [ ebp - 0x148 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] eax
mov eax [ r--data ]
mov [ ebp - 0x128 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x124 ] eax
mov eax [ r--data ]
mov [ ebp - 0x120 ] ecx
movzx ecx [ r--data ]
mov [ ebp - 0x11c ] eax
xor eax eax
mov [ ebp - 0x118 ] cx
mov ecx [ r--data ]
mov [ ebp - 0x116 ] eax
mov [ ebp - 0x112 ] eax
mov [ ebp - 0x10e ] eax
mov [ ebp - 0x10a ] ax
mov eax [ r--data ]
mov [ ebp - 0x1bc ] dx
mov edx 0xc
mov [ ebp - 0x100 ] eax
mov eax [ r--data ]
mov [ ebp - 0xfc ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x1a8 ] edx
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x180 ] 0xd
mov [ ebp - 0x158 ] 0xe
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x108 ] edx
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xf4 ] ecx
movzx eax [ r--data ]
mov ecx [ r--data ]
mov [ ebp - 0xf0 ] ax
xor eax eax
mov [ ebp - 0xee ] eax
mov [ ebp - 0xea ] eax
mov [ ebp - 0xe6 ] eax
mov [ ebp - 0xe2 ] ax
mov eax [ r--data ]
mov [ ebp - 0xd4 ] eax
mov eax [ r--data ]
mov [ ebp - 0xcc ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] eax
mov eax [ r--data ]
mov [ ebp - 0xb0 ] eax
mov eax [ r--data ]
mov [ ebp - 0xd8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xa8 ] eax
mov eax [ r--data ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xa0 ] eax
xor eax eax
mov [ ebp - 0xc8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] eax
mov eax [ r--data ]
mov [ ebp - 0xac ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x80 ] eax
xor eax eax
mov [ ebp - 0xa4 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
mov eax [ r--data ]
mov [ ebp - 0xb8 ] edx
mov [ ebp - 0x90 ] edx
mov edx [ r--data ]
mov [ ebp - 0x88 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x60 ] eax
movzx eax [ r--data ]
mov [ ebp - 0x84 ] edx
mov edx [ r--data ]
mov [ ebp - 0x7c ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x54 ] ax
xor eax eax
mov [ ebp - 0x78 ] edx
mov edx [ r--data ]
mov [ ebp - 0x5c ] ecx
xor ecx ecx
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x68 ] 0xf
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x52 ] eax
mov [ ebp - 0x4e ] eax
mov [ ebp - 0x4a ] eax
mov [ ebp - 0x46 ] eax
mov [ ebp - 0x42 ] ax
mov [ ebp - 0x40 ] 0x10
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] cx
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] eax
mov [ ebp - 0x2e ] eax
mov [ ebp - 0x2a ] eax
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] ax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call sub_40bc70
mov eax [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x8 ] ebx
test edi edi
jne r-xdata
call sub_401c90
cmp [ eax ] 0x3b
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
push 0x0
push esi
lea edx [ ebp - 0x10 ]
push edx
call sub_461465
call sub_401c90
cmp [ eax ] 0x3b
push 0x0
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
jmp r-xdata
push esi
mov eax edi
lea eax [ edi + 0x1 ]
push esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
call sub_401c90
cmp [ eax ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x510 ]
mov [ edi + 0xc ] 0x0
xor esi esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea edi [ eax - 0x1 ]
lea esi [ ebp - 0x10 ]
mov [ ebp + 0x8 ] edi
call sub_401c90
cmp [ eax ] 0x2a
jne r-xdata
call sub_40c600
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push ecx
mov eax 0x1
push esi
mov [ edi + 0xc ] eax
call sub_40c600
lea eax [ ebp - 0x510 ]
xor esi esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + esi * 4 ]
add eax eax
add eax eax
add eax eax
cmp [ edi + 0xc ] 0x1
mov edx [ ebp + eax - 0x4f0 ]
mov [ edi + 0x8 ] edx
jne r-xdata
add [ ebp + 0x8 ] 0x28
inc esi
jns r-xdata
mov eax [ ebp + eax - 0x4ec ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_402250
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
call sub_402250
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
js r-xdata
sub_4646e0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov [ ebx + 0x4 ] 0x0
call sub_4536f7
push 0xffffffff
push 0xffffffff
push 0xffffffff
push 0x1
push 0x1
push r--data
push esi
call sub_4426cd
mov edi eax
test edi edi
je r-xdata
mov [ ebx + 0x10 ] 0x1
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
inc [ eax ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] ecx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x8 ] edx
call sub_463ad5
test al al
jne r-xdata
cmp edi [ esi + 0x4 ]
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
push esi
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40bc70
mov eax [ esi + 0x4 ]
sub eax edi
dec eax
push eax
lea ecx [ edi + 0x1 ]
push ecx
push esi
lea edx [ ebp - 0x10 ]
push edx
call sub_461465
push edi
push esi
or eax 0xffffffff
call sub_40c600
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
mov [ ebx + 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_402250
sub_464812
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ ebp - 0x14 ] edx
mov edx [ edi + 0x4 ]
mov esi [ edx ]
push esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp + 0x13 ] 0x0
call sub_443833
test al al
je r-xdata
mov ecx esi
call sub_40c650
mov esi [ ebp + 0x8 ]
test eax eax
jle r-xdata
push esi
call sub_45340c
push eax
call [ LoadLibraryW@IAT ]
mov esi [ ebp + 0x8 ]
mov ebx eax
mov [ ebp + 0x13 ] 0x1
jmp r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ esi + 0x190 ]
call sub_40c650
cmp eax ebx
jg r-xdata
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
mov edx [ esi + 0x18c ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ebx [ eax ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_443833
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40c650
push eax
push ebx
call [ GetProcAddress@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
lea esi [ ebp - 0x28 ]
call sub_40d370
push esi
lea ecx [ ebp - 0x18 ]
push ecx
call sub_45f645
mov edx [ ebp - 0x28 ]
push edx
push ebx
call [ GetProcAddress@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
call sub_401350
mov esi [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_443833
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx ] 0x0
jne r-xdata
push 0x41
lea eax [ ebp - 0x18 ]
call sub_403020
lea esi [ ebp - 0x28 ]
call sub_40d370
push esi
lea ecx [ ebp - 0x18 ]
push ecx
call sub_45f645
mov edx [ ebp - 0x28 ]
push edx
push ebx
call [ GetProcAddress@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
call sub_401350
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x3
jmp r-xdata
push ebx
call [ FreeLibrary@IAT ]
add eax esi
call sub_403c90
lea ecx [ ebp - 0x18 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4649a3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa4
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
push 0x44
xor edi edi
lea eax [ esp + 0x6c ]
push edi
push eax
call sub_412f40
xor eax eax
add esp 0xc
mov ecx 0x1
xor ebx ebx
mov [ esp + 0x68 ] 0x44
mov [ esp + 0x94 ] 0x1
mov [ esp + 0x98 ] cx
mov [ esp + 0x24 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] eax
cmp [ ebp + 0x10 ] al
je r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
cmp [ esi + 0x8 ] 0x7
mov [ esp + 0x20 ] eax
jbe r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov edi eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
and edi 0xffff0000
call sub_40c650
and eax 0xffff
mov [ esp + 0x1c ] eax
cmp [ esi + 0x8 ] 0x6
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x1c ]
mov edi eax
and edi 0xffff0000
call sub_40c650
and eax 0xffff
mov [ esp + 0x1c ] eax
test edi 0x10000
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x18 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov edi eax
call sub_410160
cmp [ ebp + 0x10 ] bl
je r-xdata
mov [ esp + 0x18 ] 0x10
call sub_40c650
mov [ esp + 0x98 ] ax
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x14 ] eax
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov edx [ esi + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ edx + 0x8 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
cmp [ esi + 0x8 ] 0x5
mov [ esp + 0x14 ] eax
jbe r-xdata
push 0x0
push 0x0
call [ GetCurrentDirectoryW@IAT ]
mov esi eax
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov edi eax
push edi
push esi
call [ GetCurrentDirectoryW@IAT ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x0
call [ GetSystemDirectoryW@IAT ]
mov ebx eax
xor ecx ecx
lea eax [ ebx + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov edi eax
push ebx
push edi
call [ GetSystemDirectoryW@IAT ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x14 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov edi eax
test edi edi
je r-xdata
mov esi [ esp + 0x1c ]
push esi
lea edx [ esp + 0x44 ]
push edx
call sub_4326a4
test esi esi
je r-xdata
push edi
call sub_4111c1
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + 0xe ] 0x0
jmp r-xdata
lea eax [ esp + 0x40 ]
push eax
mov [ esp + 0x12 ] 0x1
call sub_443607
mov [ esp + 0xa4 ] eax
cmp eax 0xffffffff
jne r-xdata
push edi
call sub_4111c1
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea ecx [ esp + 0x40 ]
push ecx
call sub_4435d1
mov [ esp + 0xa8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov [ esp + 0xe ] 0x0
mov ecx [ esi + 0x4 ]
mov ebx [ ecx ]
mov eax r--data
call sub_40e710
mov edx [ esi + 0x4 ]
mov ebx [ edx + 0x4 ]
mov eax r--data
call sub_40e710
mov ecx [ esi + 0x4 ]
mov ebx [ ecx + 0x8 ]
mov eax r--data
call sub_40e710
mov ebx [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
movzx edx [ esp + 0x12 ]
lea eax [ esp + 0x6c ]
push eax
mov eax [ esp + 0x1c ]
push edi
push 0x0
push ecx
push edx
push 0x0
push 0x0
push eax
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
setne bl
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x24 ]
lea eax [ esp + 0x30 ]
push eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x6c ]
push ecx
mov ecx [ esp + 0x28 ]
push edi
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
push esi
push ebx
call sub_4465bb
push ebx
mov [ esp + 0x13 ] al
call sub_4111c1
add esp 0x4
mov ecx ebx
test eax eax
je r-xdata
lea edx [ esp + 0x40 ]
push edx
call sub_4435b9
mov [ esp + 0xa0 ] eax
cmp eax 0xffffffff
jne r-xdata
mov [ esp + 0xe ] 0x0
mov edx [ esp + 0x34 ]
mov edi [ CloseHandle@IAT ]
push edx
call edi
cmp [ esp + 0xe ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
push 0x0
call [ GetLastError@IAT ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403cd0
mov esi [ ebp + 0x18 ]
call sub_408f40
lea ecx [ esp + 0x40 ]
push ecx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_44b877
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push esi
call sub_4111c1
add esp 0x4
mov ecx esi
test eax eax
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
cmp [ esp + 0xe ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_443537
mov ecx [ esp + 0x38 ]
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x48 ] ecx
call sub_44b7c1
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x40 ]
push eax
add ecx 0x468
push ecx
call sub_44a444
mov eax [ esp + 0x10 ]
push eax
call sub_4111c1
mov ecx [ esp + 0x14 ]
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
or [ esp + 0x94 ] 0x100
mov ecx [ esp + 0x38 ]
fild [ esp + 0x38 ]
test ecx ecx
jns r-xdata
mov edx [ esp + 0x30 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x450 ] edx
lea eax [ esp + 0x40 ]
push eax
call sub_44b877
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push ebx
call sub_4111dc
add esp 0x4
push esi
call sub_4111dc
mov ecx [ esp + 0x14 ]
add esp 0x4
push ecx
call sub_4111dc
mov bl [ esp + 0x13 ]
add esp 0x4
jmp r-xdata
lea esp [ esp ]
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
mov esi [ ebp + 0x18 ]
fstp [ esp + 0x28 ]
call sub_408f40
fld [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
fstp [ esi ]
push edx
mov [ esi + 0x8 ] 0x3
call edi
lea eax [ esp + 0x40 ]
push eax
call sub_44b877
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
fadd [ r--data ]
mov ecx [ esp + 0x14 ]
push ecx
call sub_4111dc
add esp 0x4
push edi
call sub_4111dc
add esp 0x4
test bl bl
jne r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
sub_464eae
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x13 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
mov [ esp + 0x1f ] 0x0
call sub_45340c
push eax
call sub_443d19
add esp 0xc
test al al
jne r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push ebx
call [ TerminateProcess@IAT ]
test eax eax
jne r-xdata
mov ebx [ GetLastError@IAT ]
call ebx
cmp eax 0x5
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call [ GetLastError@IAT ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_403cd0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x3
add eax edi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
push 0x0
push eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
call sub_403cd0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push 0x28
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
add eax edi
call sub_403c90
lea eax [ esp + 0x24 ]
push eax
push r--data
push 0x0
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x38 ] 0x2
call [ LookupPrivilegeValueW@IAT ]
mov esi [ AdjustTokenPrivileges@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x34 ]
push edx
push 0x10
lea eax [ esp + 0x2c ]
push eax
push 0x0
push ecx
mov [ esp + 0x34 ] 0x10
call esi
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
push edx
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call ebx
test eax eax
jne r-xdata
push 0xffffffff
push 0x89
push edi
call sub_45e737
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_403cd0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
mov edx [ esp + 0x18 ]
push edx
push eax
push 0x1
call [ OpenProcess@IAT ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
mov ebx eax
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push 0x0
push edx
call esi
mov eax [ esp + 0x14 ]
push eax
call [ CloseHandle@IAT ]
test ebx ebx
je r-xdata
sub_4650df
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc [ eax ]
mov edx [ ebp + 0xc ]
mov eax [ eax ]
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
mov ecx [ ebp + 0x8 ]
push ebx
je r-xdata
lea ebx [ ecx + 0x488 ]
mov eax r--data
call sub_40e710
pop ebx
pop ebp
retn 0xc
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ecx
call sub_45e737
pop ebx
pop ebp
retn 0xc
sub_465124
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
sub esp 0x10
mov esi esp
call sub_401b10
mov eax [ ebp + 0x8 ]
add eax 0x134
call sub_40f310
test eax eax
jne r-xdata
mov ecx [ eax + 0x14 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov ecx [ eax + 0x18 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
mov eax [ eax + 0x1c ]
mov [ edx ] ecx
mov ecx [ ebp + 0x1c ]
pop edi
mov [ ecx ] eax
mov al 0x1
pop esi
pop ebp
retn 0x18
xor al al
pop edi
pop esi
pop ebp
retn 0x18
sub_465177
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi eax
jbe r-xdata
mov ecx edi
call sub_40bc70
push esi
push 0x0
push ebx
push edi
call sub_461465
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov esi eax
sub_4651a9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
inc edi
push edi
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push edi
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push 0x0
call sub_403b70
push ebx
call sub_4111dc
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_403350
pop edi
pop esi
pop ebp
retn 0x8
sub_465225
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
lea ecx [ ebp - 0x10 ]
push ecx
mov eax 0x2
push edx
mov [ ebx ] ax
call sub_45a52f
mov eax [ eax ]
push eax
call [ Ordinal_WSOCK32_10@IAT ]
lea esi [ ebp - 0x10 ]
mov edi eax
call sub_401350
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x1 ]
mov [ ebx + 0x4 ] edi
cmp ecx 0xfffe
ja r-xdata
mov eax [ ebp + 0x10 ]
push r--data
push eax
call sub_44cd93
add esp 0x8
test al al
je r-xdata
push 0x0
push 0x2
jmp r-xdata
push eax
call [ Ordinal_WSOCK32_9@IAT ]
pop edi
mov [ ebx + 0x2 ] ax
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403c90
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4652be
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
mov esi ecx
mov ebx 0x5
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edi [ eax ]
call sub_40c650
push eax
push edi
call sub_4533eb
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call sub_465225
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov ebx eax
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ Ordinal_WSOCK32_2@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
push ebx
push edi
call [ Ordinal_WSOCK32_13@IAT ]
test eax eax
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
push edi
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
push edi
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4653c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c650
push eax
push edi
call sub_4533eb
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call sub_465225
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ Ordinal_WSOCK32_4@IAT ]
test eax eax
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
push edi
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_465489
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x21c
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x3c ] 0xfa0
call sub_408f40
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x0
cmp [ esp + 0x14 ] eax
jbe r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call sub_431364
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
test eax eax
jle r-xdata
lea eax [ esp + 0x98 ]
push eax
push 0x101
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov [ esp + 0x3c ] eax
lea esi [ esp + 0x44 ]
call sub_40d370
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
push esi
push eax
call sub_45f645
mov esi [ esp + 0x44 ]
push esi
call [ Ordinal_WSOCK32_10@IAT ]
push esi
mov [ esp + 0x44 ] eax
call [ Ordinal_WSOCK32_52@IAT ]
mov [ esp + 0x54 ] eax
test eax eax
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
lea esi [ esp + 0x44 ]
call sub_401350
jmp r-xdata
lea eax [ esp + 0x24 ]
push eax
call sub_431364
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_430ccb
lea eax [ esp + 0x30 ]
push eax
call sub_430ccb
lea ecx [ esp + 0x24 ]
push ecx
call sub_430ccb
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x18 ]
push eax
call sub_430ccb
lea ecx [ esp + 0x30 ]
push ecx
call sub_430ccb
lea edx [ esp + 0x24 ]
push edx
call sub_430ccb
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
lea esi [ esp + 0x44 ]
call sub_401350
lea ecx [ esp + 0x30 ]
push ecx
call sub_43134a
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_431330
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
call sub_441f8f
call eax
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x24
lea edx [ esp + 0x5c ]
push 0xffffffaa
push edx
call sub_412f40
add esp 0xc
push 0x40
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
mov [ esp + 0x14 ] esi
test esi esi
jne r-xdata
lea eax [ esp + 0x58 ]
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x40 ]
mov ecx 0x24
mov [ esi + 0xc ] cx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_441f6c
call eax
mov ecx [ esp + 0x3c ]
push ecx
push 0x40
push esi
push 0x0
push 0x24
lea edx [ esp + 0x6c ]
push edx
push eax
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
mov edx [ esp + 0x3c ]
push edx
push 0x40
push esi
push 0x0
push ecx
mov ecx [ esp + 0x68 ]
mov edx [ ecx + 0xc ]
lea eax [ esp + 0x6c ]
push eax
mov eax [ edx ]
mov ecx [ eax ]
mov edx [ esp + 0x28 ]
push ecx
push edx
lea eax [ esp + 0x38 ]
push eax
jmp r-xdata
add eax 0xffffd506
cmp eax 0x10
ja r-xdata
mov edi [ esp + 0x84 ]
mov esi ebx
call sub_408f40
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] 0x1
test edi edi
jne r-xdata
call sub_441f49
call eax
push 0x1c
lea edx [ esp + 0x80 ]
push esi
push edx
call sub_410e60
mov eax [ esp + 0x8c ]
add esp 0xc
test eax eax
jne r-xdata
push 0x0
push 0x4
movzx eax [ eax + lookup_table_4657ed ]
jmp [ eax * 4 + jump_table_4657dd ]
mov [ ebx ] edi
jmp r-xdata
mov [ ebx ] 0x1
jmp r-xdata
push 0x0
push 0x2
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x3
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x34 ]
push eax
call sub_441f6c
call eax
push esi
call [ GlobalFree@IAT ]
call [ Ordinal_WSOCK32_116@IAT ]
lea esi [ esp + 0x44 ]
call sub_401350
lea ecx [ esp + 0x18 ]
push ecx
call sub_430ccb
lea edx [ esp + 0x30 ]
push edx
call sub_430ccb
lea eax [ esp + 0x24 ]
push eax
call sub_430ccb
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
add eax edi
call sub_403c90
sub_4657f1
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add dl [ ebp - 0x75 ]
in al dx
and esp 0xfffffff8
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
jmp r-xdata
push eax
call sub_45340c
push eax
call sub_45f56d
add esp 0x8
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_465847
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
mov eax [ esi + 0x4 ]
push edi
mov edi ecx
jne r-xdata
mov eax [ eax ]
push 0x0
mov ecx [ eax + 0x4 ]
call sub_40c650
push 0x0
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_4533eb
push eax
add edi 0x88
push edi
call sub_453f64
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
jmp r-xdata
push eax
call sub_4533eb
push eax
add edi 0x88
push edi
call sub_4606a6
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4658b5
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
mov esi ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_45340c
push eax
push esi
call sub_465124
test al al
jne r-xdata
mov eax [ esi + 0x128 ]
lea edi [ esi + 0x128 ]
mov [ ebp + 0x8 ] eax
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
push eax
call sub_4533eb
call sub_40dbb0
test al al
jne r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
push edi
call sub_4521b3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_440847
jmp r-xdata
push ecx
lea ecx [ ebp + 0x8 ]
mov [ esp ] 0x0
push ecx
call sub_442a55
test al al
je r-xdata
sub_46596a
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
mov edi ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea ebx [ edi + 0x128 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebx ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x8 ] edx
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x1c ]
push edx
push ebx
call sub_44aeb0
lea ecx [ ebp - 0x1c ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
lea eax [ ebp - 0x1c ]
call sub_40dbb0
test al al
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403cd0
lea ecx [ ebp - 0x1c ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_440847
jmp r-xdata
push ecx
lea eax [ ebp + 0x8 ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
sub_465a62
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1b4
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
mov eax [ edx ]
push eax
mov [ esp + 0x20 ] ecx
call sub_45340c
lea ebx [ esp + 0x28 ]
mov [ esp + 0x20 ] eax
call sub_40d290
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
lea esi [ edi + 0x10c ]
lea ebx [ edi + 0x110 ]
mov [ esp + 0xa8 ] esi
mov [ esp + 0xb4 ] ebx
mov esi r--data
mov ecx r--data
lea edx [ edi + 0xfd ]
lea ebx [ edi + 0x100 ]
mov [ esp + 0x48 ] edx
mov [ esp + 0xac ] esi
mov [ esp + 0xb8 ] esi
mov [ esp + 0xcc ] ebx
lea eax [ edi + 0x108 ]
lea edx [ edi + 0xfe ]
lea esi [ edi + 0x114 ]
lea ebx [ edi + 0xff ]
mov [ esp + 0x3c ] eax
mov eax r--data
mov [ esp + 0x40 ] ecx
mov [ esp + 0x54 ] edx
mov [ esp + 0x70 ] ecx
mov [ esp + 0xc0 ] esi
mov [ esp + 0xd0 ] ecx
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xe8 ] ecx
mov edx r--data
mov esi r--data
lea ebx [ edi + 0x104 ]
lea ecx [ edi + 0x91 ]
mov [ esp + 0x38 ] r--data
mov [ esp + 0x44 ] r--data
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] r--data
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] rw-data
mov [ esp + 0x64 ] edx
mov [ esp + 0x68 ] r--data
mov [ esp + 0x6c ] rw-data
mov [ esp + 0x74 ] r--data
mov [ esp + 0x78 ] rw-data
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] r--data
mov [ esp + 0x84 ] rw-data
mov [ esp + 0x88 ] r--data
mov [ esp + 0x8c ] r--data
mov [ esp + 0x90 ] rw-data
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] r--data
mov [ esp + 0x9c ] rw-data
mov [ esp + 0xa0 ] r--data
mov [ esp + 0xa4 ] r--data
mov [ esp + 0xb0 ] r--data
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc4 ] esi
mov [ esp + 0xc8 ] r--data
mov [ esp + 0xd4 ] r--data
mov [ esp + 0xdc ] eax
mov [ esp + 0xe0 ] r--data
mov [ esp + 0xe4 ] ebx
mov [ esp + 0xec ] r--data
mov [ esp + 0xf0 ] ecx
mov [ esp + 0xf4 ] eax
lea ecx [ edi + 0x90 ]
mov [ esp + 0xfc ] ecx
lea ecx [ edi + 0x88 ]
mov [ esp + 0x108 ] ecx
mov ecx r--data
mov [ esp + 0x10c ] ecx
mov [ esp + 0x118 ] ecx
lea ecx [ edi + 0x118 ]
mov [ esp + 0x120 ] ecx
lea ecx [ edi + 0x478 ]
mov [ esp + 0x100 ] edx
mov [ esp + 0x12c ] ecx
mov [ esp + 0x13c ] edx
lea ecx [ edi + 0x2dd ]
lea edx [ edi + 0x2dc ]
mov [ esp + 0x174 ] edx
mov [ esp + 0x180 ] ecx
mov ecx [ ebp + 0x8 ]
lea edx [ edi + 0x2d8 ]
lea ebx [ edi + 0x8c ]
mov [ esp + 0x1a8 ] esi
mov esi [ ecx + 0x4 ]
mov [ esp + 0x18c ] edx
mov edx [ esi ]
mov [ esp + 0x124 ] eax
mov [ esp + 0x148 ] eax
mov [ esp + 0x16c ] eax
mov [ esp + 0x178 ] eax
mov [ esp + 0x184 ] eax
mov [ esp + 0x114 ] ebx
xor ebx ebx
lea eax [ edi + 0x2f4 ]
push edx
mov [ esp + 0xfc ] r--data
mov [ esp + 0x108 ] r--data
mov [ esp + 0x114 ] r--data
mov [ esp + 0x120 ] r--data
mov [ esp + 0x12c ] r--data
mov [ esp + 0x134 ] r--data
mov [ esp + 0x138 ] r--data
mov [ esp + 0x13c ] rw-data
mov [ esp + 0x144 ] r--data
mov [ esp + 0x148 ] rw-data
mov [ esp + 0x150 ] r--data
mov [ esp + 0x154 ] ebx
mov [ esp + 0x158 ] r--data
mov [ esp + 0x15c ] r--data
mov [ esp + 0x160 ] ebx
mov [ esp + 0x164 ] r--data
mov [ esp + 0x168 ] r--data
mov [ esp + 0x16c ] rw-data
mov [ esp + 0x174 ] r--data
mov [ esp + 0x180 ] r--data
mov [ esp + 0x18c ] r--data
mov [ esp + 0x194 ] r--data
mov [ esp + 0x198 ] r--data
mov [ esp + 0x19c ] ebx
mov [ esp + 0x1a0 ] r--data
mov [ esp + 0x1a4 ] r--data
mov [ esp + 0x1a8 ] eax
call sub_443833
test al al
jne r-xdata
mov ecx [ esp + 0x20 ]
cmp [ ecx ] 0x2a
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push ebx
jmp r-xdata
cmp [ esp + 0x1c ] 0x1
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push ebx
jmp r-xdata
push 0x1
add eax edi
call sub_403c90
mov esi [ esi + 0x4 ]
push esi
call sub_44cecd
test al al
je r-xdata
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov ecx esi
call sub_40c650
mov [ esp + 0x14 ] eax
lea esp [ esp ]
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov [ esp + 0x18 ] ebx
mov [ esp + 0x24 ] 0x1e
lea esp [ esp ]
jle r-xdata
dec esi
mov [ esp + 0x24 ] esi
jmp r-xdata
mov eax [ esp + 0x24 ]
cmp [ esp + 0x18 ] eax
jg r-xdata
inc esi
mov [ esp + 0x18 ] esi
mov edx [ esp + 0x24 ]
cmp [ esp + 0x18 ] edx
jle r-xdata
push ebx
jmp r-xdata
lea esi [ esi + esi * 2 ]
add esi esi
add esi esi
mov [ esp + 0xc ] ebx
mov ebx [ esp + esi + 0x40 ]
movzx eax [ ebx ]
mov [ esp + 0x10 ] esi
mov [ esp + 0x20 ] ebx
cmp eax 0x64
jne r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x24 ]
lea esi [ esi + ecx ]
mov ecx [ esp + 0x20 ]
sar esi 0x1
lea edx [ esi + esi * 2 ]
mov eax [ esp + edx * 4 + 0x38 ]
push eax
push ecx
call sub_4114ab
add esp 0x8
cmp eax ebx
jge r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp eax 0x44
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
push ebx
mov [ esp + 0x18 ] 0x1
call sub_432ee9
add esp 0xc
lea esi [ esp + 0x28 ]
call sub_408f40
mov eax [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ecx [ esp + 0xc ]
movzx eax [ ebx + ecx * 2 ]
inc ecx
sub eax 0x23
mov [ esp + 0xc ] ecx
cmp eax 0x53
ja r-xdata
push ebx
call sub_4111c1
add esp 0x4
lea ecx [ esp + 0x1b0 ]
call sub_4013c0
movzx eax [ ebx + 0x4 ]
mov esi 0x2
mov [ esp + 0xc ] esi
test ax ax
je r-xdata
push 0x0
movzx ecx [ eax + lookup_table_4664fe ]
jmp [ ecx * 4 + jump_table_4664da ]
mov eax [ esp + 0x1b0 ]
inc [ esp + 0xc ]
lea ebx [ esp + 0x28 ]
call sub_40e710
lea ecx [ esp + 0x1b0 ]
call sub_402250
mov ebx [ esp + 0x20 ]
nop
mov edx [ esp + 0x10 ]
mov ebx [ esp + edx + 0x3c ]
mov eax [ ebx ]
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
call sub_408f40
mov ecx [ esp + 0x10 ]
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] ecx
cmp [ esp + 0x1c ] eax
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp + eax + 0x3c ]
mov ecx [ ebx ]
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] ecx
call sub_408f40
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esi ] edx
mov edx [ esp + 0x24 ]
push ecx
push edx
mov [ esi + 0x8 ] 0x1
call sub_432ee9
add esp 0xc
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov ecx [ esp + 0x10 ]
mov ebx [ esp + ecx + 0x3c ]
mov edx [ ebx ]
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] edx
call sub_408f40
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
mov esi [ esp + 0x24 ]
push edx
push esi
call sub_432ee9
inc [ esp + 0x18 ]
add esp 0xc
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_432ee9
add esp 0xc
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp + eax + 0x3c ]
movzx ecx [ ebx ]
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] ecx
call sub_408f40
mov edx [ esp + 0x10 ]
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] edx
cmp [ esp + 0x1c ] eax
jbe r-xdata
mov ecx [ esp + 0x10 ]
mov esi [ esp + ecx + 0x3c ]
mov ebx [ ebp + 0xc ]
mov eax esi
call sub_40e710
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov edx [ esp + 0x10 ]
mov esi [ esp + edx + 0x3c ]
mov eax [ esi ]
mov ebx [ ebp + 0xc ]
call sub_40e710
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push edx
call sub_432ee9
mov eax [ esp + 0x24 ]
add esp 0xc
dec eax
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x20 ]
lea ecx [ edx + eax * 2 ]
movzx eax [ ecx ]
test eax eax
je r-xdata
mov [ esp + 0xc ] esi
push eax
lea eax [ esp + 0x1b4 ]
call sub_403020
movzx eax [ ebx + esi * 2 + 0x2 ]
inc esi
test ax ax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44cecd
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_44cecd
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44cecd
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_44cecd
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
push ebx
call sub_44cecd
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ebx [ ecx + 0x4 ]
push ebx
call sub_44cecd
test al al
je r-xdata
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ rw-data ] bl
sete bl
call sub_408f40
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] ebx
cmp [ esp + 0x1c ] eax
jbe r-xdata
dec eax
je r-xdata
lea esi [ esp + 0x28 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x2a
jne r-xdata
cmp ax 0x27
je r-xdata
mov edx [ esp + 0x14 ]
mov [ ebx ] edx
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ ebx ] eax
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jl r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ ebx ] eax
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jl r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ ebx ] eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
setne al
mov [ ebx ] al
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
test eax eax
setne al
mov [ ebx ] al
jmp r-xdata
push ebx
call sub_45340c
mov cx [ eax ]
mov [ esi ] cx
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ esi ] ax
jmp r-xdata
push ebx
call sub_45340c
mov ebx eax
mov eax esi
call sub_402160
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
call sub_45340c
mov ebx eax
mov eax esi
call sub_402160
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44cecd
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ rw-data ]
call sub_408f40
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] ebx
cmp [ esp + 0x1c ] eax
jbe r-xdata
dec eax
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
jmp r-xdata
mov [ esp + 0x20 ] ecx
xor ebx ebx
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call sub_4536cb
test al al
je r-xdata
mov [ ebx ] eax
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
call sub_4536cb
test al al
je r-xdata
cmp eax [ esp + 0x24 ]
jg r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
push esi
call sub_44cecd
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ edi + 0x2d4 ]
call sub_408f40
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] ebx
cmp [ esp + 0x1c ] eax
jbe r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ ebx ] eax
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ ebx ] eax
jmp r-xdata
mov [ ebx ] eax
jmp r-xdata
mov ecx rw-data
call sub_401000
mov esi rw-data
call sub_40e0c0
jmp r-xdata
push esi
call sub_44cecd
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_44cecd
test al al
je r-xdata
mov al [ esp + 0x14 ]
mov [ rw-data ] 0x101
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
test al 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ esp + 0x14 ] eax
mov esi [ esp + 0x14 ]
push esi
call sub_4152bb
dec eax
add esp 0x4
cmp eax 0x3
ja r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c650
mov [ esp + 0x14 ] eax
mov ecx 0x2
test cl al
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ edi + 0x2d4 ] esi
jmp r-xdata
mov ecx 0x4
test cl al
je r-xdata
or [ rw-data ] ecx
mov [ rw-data ] 0x0
mov ecx 0x8
test cl al
je r-xdata
or [ rw-data ] ecx
mov [ rw-data ] 0x0
or [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
sub_466507
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ ecx ] al
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add al [ ebx ]
or [ eax ] cl
or [ eax ] cl
or [ eax + ecx ] al
or [ eax ] cl
add eax 0x8080808
push es
or [ eax ] cl
or [ edi ] al
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
mov edi ecx
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
call sub_410bc0
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push eax
push edi
call sub_465124
test al al
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
lea ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x10 ] 0xfa
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
test eax eax
jle r-xdata
push ecx
lea eax [ esp + 0x10 ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
mov [ esp + 0x10 ] eax
jmp r-xdata
lea ecx [ esp + 0x2c ]
push ecx
call sub_44a801
lea edx [ esp + 0x1c ]
push edx
lea esi [ esp + 0x30 ]
mov [ esp + 0x40 ] 0x0
call sub_40e0a0
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] eax
call [ timeGetTime@IAT ]
push esi
push ebx
mov [ esp + 0x48 ] eax
call sub_44a6a5
mov ecx esi
call sub_402250
lea ecx [ esp + 0x1c ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0xc ]
mov esi [ ebx ]
lea eax [ esp + 0x1c ]
call sub_40dbb0
test al al
jne r-xdata
mov eax [ edi + 0x458 ]
lea ecx [ esp + 0x14 ]
lea ebx [ edi + 0x458 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] eax
call sub_431285
jmp r-xdata
mov edx [ esp + 0x10 ]
mov [ esi + 0x11 ] 0x0
mov ecx [ ebx ]
mov [ ecx + 0x18 ] edx
mov ebx [ ebx ]
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
call sub_440847
mov ebx [ esp + 0x18 ]
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403cd0
lea ecx [ esp + 0x1c ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ timeGetTime@IAT ]
mov [ ebx + 0x14 ] eax
sub_466715
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_40bc70
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_4651a9
mov eax esi
pop esi
pop ebp
retn 0x8
sub_466734
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx edi
add ecx 0x80000000
mov eax ebx
adc eax 0x0
test eax eax
ja r-xdata
dec eax
je r-xdata
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
pop ebx
mov [ esi + 0x8 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x10
jb r-xdata
call sub_408f40
mov edx [ ebp + 0xc ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
mov eax esi
pop esi
pop ebp
retn 0x10
call sub_408f40
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x2
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x10
call sub_408f40
mov [ esi ] edi
pop edi
pop ebx
mov [ esi + 0x8 ] 0x1
mov eax esi
pop esi
pop ebp
retn 0x10
cmp ecx 0xffffffff
ja r-xdata
sub_4667e1
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x38
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_412f40
add esp 0xc
mov eax 0x1
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
push esi
mov [ ebp - 0x4c ] 0x7c
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] eax
call sub_4111c1
add esp 0x4
push eax
push esi
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ebx [ ebp - 0x48 ]
push 0x0
mov ecx edi
call sub_403b70
mov eax [ ebp - 0x38 ]
mov ebx [ ebp - 0x3c ]
push 0x0
lea ecx [ edi + 0x10 ]
call sub_403b70
mov eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
push 0x0
lea ecx [ edi + 0x20 ]
call sub_403b70
mov eax [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
push 0x0
lea ecx [ edi + 0x30 ]
call sub_403b70
mov eax [ ebp - 0x1c ]
mov ebx [ ebp - 0x20 ]
lea esi [ edi + 0x40 ]
push 0x0
mov ecx esi
call sub_403b70
mov eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
lea ecx [ edi + 0x50 ]
push 0x0
call sub_403b70
lea eax [ edi + 0x50 ]
push eax
lea edx [ ebp - 0x10 ]
push edx
push esi
call sub_44cde9
push eax
lea esi [ edi + 0x60 ]
call sub_40e0a0
lea ecx [ ebp - 0x10 ]
call sub_402250
mov ax [ ebp - 0x34 ]
mov [ edi + 0x78 ] ax
mov eax [ ebp - 0x40 ]
mov [ edi + 0x74 ] eax
dec eax
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ edi + 0x70 ] 0x1
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec eax
je r-xdata
mov [ edi + 0x70 ] 0x2
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ edi + 0x70 ] 0x3
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46690e
push ebp
mov ebp esp
sub esp 0x84
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x80 ]
push eax
call sub_44ac3d
mov eax [ esi + 0x20 ]
lea ecx [ ebp - 0x80 ]
push ecx
push eax
call sub_4667e1
test al al
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp edi 0x3
je r-xdata
push 0x0
push 0xdeadbeef
push 0x1
push esi
call sub_4422cb
lea edx [ ebp - 0x80 ]
push edx
mov bl al
call sub_44260e
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
push esi
call sub_44256c
test al al
jne r-xdata
cmp edi 0x1
je r-xdata
dec edi
je r-xdata
push 0x0
push 0xdeadbeef
push 0x3
push esi
call sub_4422cb
jmp r-xdata
push 0x0
push 0xdeadbeef
push 0x2
push esi
call sub_4422cb
mov bl al
lea eax [ ebp - 0x80 ]
push eax
call sub_44260e
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
lea ecx [ esi + 0x8c ]
push ecx
call sub_431877
movzx edx al
push edx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_44a983
sub edi 0x2
je r-xdata
lea ecx [ ebp - 0x80 ]
push ecx
mov bl al
call sub_44260e
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
lea eax [ esi + 0x58 ]
push eax
call sub_431877
movzx ecx al
push ecx
lea edx [ ebp - 0x80 ]
push edx
push esi
call sub_44aa86
mov bl al
lea eax [ ebp - 0x80 ]
push eax
call sub_44260e
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0xdeadbeef
push 0x4
push esi
call sub_4422cb
lea edx [ ebp - 0x80 ]
push edx
mov bl al
call sub_44260e
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_466a4b
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xd0 ] 0x0
je r-xdata
push eax
push esi
call sub_46690e
pop esi
pop ecx
pop ebp
retn 0x8
test al al
je r-xdata
lea eax [ esi + 0xd4 ]
push eax
call sub_4319f5
push esi
push 0x0
push sub_466a39
call sub_415214
xor eax eax
add esp 0xc
cmp [ esi + 0x18 ] eax
sete al
pop esi
pop ecx
pop ebp
retn 0x8
sub_466a9a
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0x4
jle r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax edi
call sub_403c90
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_4533eb
push eax
mov ecx esi
call sub_40c650
push eax
call sub_4504a4
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_466b71
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_4533b1
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_4533eb
push eax
mov ecx esi
call sub_40c650
push eax
call sub_450517
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_466c20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c650
push eax
mov ecx edi
call sub_40c650
push eax
call sub_448d62
mov edi eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
neg edi
push edi
add eax esi
call sub_403cd0
mov edi 0x1
sub_466c7a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c650
push eax
mov ecx edi
call sub_40c650
push eax
call sub_44900d
mov edi eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
neg edi
push edi
add eax esi
call sub_403cd0
mov edi 0x1
sub_466cd4
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_4533b1
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_4533eb
push eax
mov ecx esi
call sub_40c650
push eax
call sub_451507
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_466d83
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_4533b1
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ ecx ]
push eax
push edx
call sub_4533eb
push eax
mov ecx esi
call sub_40c650
push eax
call sub_451554
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b3ac
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_466e47
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push 0x0
mov edi ecx
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edi
call sub_45c362
test al al
je r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
push edx
call sub_4530c9
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov edx [ edi + 0x17c ]
mov eax [ ebp + 0x8 ]
mov edi [ edx + eax * 4 ]
push ebx
call sub_40c650
push esi
mov ebx eax
call sub_443006
mov ecx [ edi ]
mov esi [ ecx + 0x4 ]
push ebx
push edx
push eax
call sub_40df90
mov [ ebp + 0x8 ] al
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
push eax
call sub_4530c9
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_466ec9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x0
push eax
lea edx [ ebp + 0x8 ]
push edx
push esi
call sub_45c362
test al al
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x14 ]
push edi
mov edi [ eax + 0x10 ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
pop ebx
mov [ esi + 0x8 ] 0x2
xor eax eax
pop esi
pop ebp
retn 0x8
sub_466f4a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x0
push eax
lea edx [ ebp + 0x8 ]
push edx
push esi
call sub_45c362
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
push ecx
call sub_4530c9
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
push eax
call sub_4340c3
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
mov ecx [ ebp + 0x8 ]
push ecx
push edx
call sub_4530c9
xor eax eax
pop esi
pop ebp
retn 0x8
sub_466faf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
push eax
call sub_44bf8b
add esp 0x4
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
call [ GetLastError@IAT ]
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403cd0
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_467001
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
push ebx
push esi
push edi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x1
push eax
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_45c362
test al al
jne r-xdata
mov edi [ esp + 0xc ]
mov ecx [ esi + 0x17c ]
mov ecx [ ecx + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ecx ]
mov ecx [ eax + 0x8 ]
lea edx [ esp + 0x10 ]
push edx
push ecx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
call sub_40e710
mov eax [ esi + 0x17c ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
test [ edx + 0x10 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ esp + 0x3c ]
call sub_40e710
test [ esp + 0x10 ] 0x10
je r-xdata
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
push 0x1
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x17c ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
push ecx
call sub_4111dc
mov edx [ esi + 0x17c ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
add esp 0x4
mov [ ecx + 0xc ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403cd0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403cd0
sub_467131
push ebp
mov ebp esp
sub esp 0x804
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov [ ebp - 0x4 ] 0x400
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x804 ]
push ecx
push eax
call sub_45340c
push eax
call [ WNetGetConnectionW@IAT ]
mov ebx [ ebp + 0xc ]
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x804 ]
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax r--data
call sub_40e710
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push edi
add eax esi
call sub_403cd0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4671b9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x1
push 0x1
push eax
call sub_45340c
push eax
call [ WNetCancelConnection2W@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push 0xa
call [ Sleep@IAT ]
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax edi
call sub_403cd0
pop esi
sub_467215
push ebp
mov ebp esp
sub esp 0x234
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ebx ecx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x100
mov eax [ ecx ]
push edi
push eax
mov [ ebp - 0x14 ] 0x0
call sub_45340c
mov edi eax
call sub_410160
mov edx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov eax [ edx + 0x4 ]
push eax
call sub_45340c
mov edi eax
call sub_410160
cmp [ ebp - 0x10 ] 0x2
mov [ ebp - 0xc ] eax
jbe r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov edi eax
jmp r-xdata
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x24 ] ecx
cmp eax 0x2a
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
push r--data
push ecx
call sub_41341f
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
neg eax
sbb eax eax
add eax 0x2
mov [ ebp - 0x20 ] edx
xor edx edx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x18 ] edx
movzx eax [ ecx ]
cmp ax dx
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax 0x4
jae r-xdata
or edi 0x80
cmp [ ecx ] 0x2a
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x234 ]
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
lea eax [ ebp - 0x234 ]
push eax
push edi
push edx
push edx
lea ecx [ ebp - 0x34 ]
push ecx
push edx
jmp r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov esi [ esi + 0x10 ]
lea edx [ ebp - 0x4 ]
push edx
push ecx
push edi
push eax
call sub_45340c
push eax
push esi
call sub_45340c
push eax
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
push ecx
push edi
push eax
call sub_45340c
push eax
push 0x0
jmp r-xdata
call [ WNetUseConnectionW@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x2a
jne r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp edi 0x5
jne r-xdata
lea edx [ ebp - 0x34 ]
push edx
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_4111dc
mov eax [ ebp - 0xc ]
push eax
call sub_4111dc
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ ebp - 0x8 ] 0x100
mov ebx esi
lea eax [ ebp - 0x234 ]
jne r-xdata
cmp edi 0x55
je r-xdata
push 0x0
push 0x2
jmp r-xdata
call sub_40e710
mov eax r--data
push 0x0
push 0x3
cmp edi 0x4b2
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
cmp edi 0x4b0
jne r-xdata
cmp edi 0x43
jne r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x4
jmp r-xdata
cmp edi 0x56
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x5
jmp r-xdata
add eax ebx
call sub_403c90
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x1
add eax ebx
call sub_403c90
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push edi
add eax ebx
call sub_403cd0
jmp r-xdata
push 0x6
jmp r-xdata
sub_467408
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x302b4
call sub_422240
push ebx
push esi
push edi
xor eax eax
push 0x1fffe
push eax
lea ecx [ esp + 0x102ca ]
push ecx
mov [ esp + 0x102cc ] ax
call sub_412f40
add esp 0xc
lea ecx [ esp + 0xc ]
call sub_40bc70
lea ecx [ esp + 0x48 ]
call sub_40bc70
lea ecx [ esp + 0x38 ]
call sub_40bc70
lea ecx [ esp + 0x28 ]
call sub_40bc70
mov ebx [ ebp + 0x10 ]
mov eax r--data
mov [ esp + 0x1c ] 0x0
call sub_40e710
mov esi [ ebp + 0xc ]
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0x7fff
push eax
call sub_45340c
push eax
lea eax [ esp + 0x2c8 ]
push eax
call sub_412fba
mov edx [ esi + 0x4 ]
add esp 0xc
xor ecx ecx
mov [ esp + 0x102be ] cx
mov eax [ edx + 0x4 ]
push 0x104
push eax
call sub_45340c
push eax
lea eax [ esp + 0xb8 ]
push eax
call sub_412fba
mov edx [ esi + 0x4 ]
xor ecx ecx
mov [ esp + 0x2c4 ] cx
mov eax [ edx + 0x8 ]
add esp 0xc
push eax
call sub_45340c
mov edi eax
call sub_410160
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov [ esp + 0x24 ] ebx
call sub_4533b1
xor ecx ecx
push r--data
push ebx
mov [ ebx + eax * 2 ] cx
call sub_413eb8
add esp 0x8
test eax eax
je r-xdata
mov edi r--data
lea eax [ esp + 0xc ]
call sub_40d200
mov edi 0x1
cmp [ esp + 0x10 ] edi
jbe r-xdata
jmp r-xdata
push ebx
call sub_4111dc
mov ebx [ ebp + 0x14 ]
add esp 0x4
cmp ebx 0x6
jb r-xdata
lea esi [ esp + 0xc ]
call sub_401c90
cmp [ eax ] 0x7c
jne r-xdata
mov ebx eax
lea eax [ esp + 0x28 ]
call sub_402160
push r--data
lea edx [ esp + 0x2c ]
push edx
call sub_431a2b
mov edi eax
push r--data
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x2c ] edi
call sub_431a2b
mov ebx eax
cmp edi 0xffffffff
je r-xdata
cmp ebx 0x5
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x14 ]
push eax
call sub_44b3ac
mov [ esp + 0x1c ] eax
inc edi
cmp edi [ esp + 0x10 ]
jb r-xdata
call sub_401c90
xor ecx ecx
mov [ eax ] cx
push 0x0
push 0x2
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
xor edx edx
mov [ esp + 0x102c0 ] dx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_45340c
push eax
lea ecx [ esp + 0x102c4 ]
push ecx
call sub_411567
add esp 0x8
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ esp + 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403c90
cmp ebx edi
jb r-xdata
mov [ esp + 0x8c ] 0x80004
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
cmp eax 0x1f
jg r-xdata
push 0x58
lea eax [ esp + 0x5c ]
push 0x0
push eax
call sub_412f40
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0x68 ] ecx
mov [ esp + 0x70 ] edx
add esp 0xc
lea eax [ esp + 0x2c0 ]
lea ecx [ esp + 0x102c0 ]
lea edx [ esp + 0xb0 ]
xor edi edi
mov [ esp + 0x58 ] 0x58
mov [ esp + 0x88 ] eax
mov [ esp + 0x78 ] 0xffff
mov [ esp + 0x74 ] ecx
mov [ esp + 0x84 ] edx
cmp ebx 0x4
jb r-xdata
lea ecx [ esp + 0x28 ]
push ecx
lea eax [ esp + 0x10 ]
call sub_40bd50
mov edi r--data
lea eax [ esp + 0xc ]
call sub_40d200
mov eax [ esp + 0x24 ]
sub ebx eax
dec ebx
push ebx
inc eax
push eax
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x54 ]
push eax
call sub_461465
lea ecx [ esp + 0x48 ]
push ecx
lea eax [ esp + 0x10 ]
call sub_40bd50
lea eax [ esp + 0xc ]
call sub_40d200
push edi
push 0x0
call sub_413eb8
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
call [ GetSaveFileNameW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x58 ]
push ecx
call [ GetOpenFileNameW@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
test eax eax
js r-xdata
mov ebx [ esp + 0x20 ]
push 0x0
push 0x1
mov eax [ esp + 0x74 ]
mov ebx [ ebp + 0x10 ]
call sub_40e710
jmp r-xdata
test edi 0x200
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
mov edi 0x80004
call sub_40c650
test al 0x10
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
lea ecx [ esp + 0x48 ]
call sub_402250
lea ecx [ esp + 0xc ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ esp + 0x74 ]
push edx
call sub_4111c1
mov ebx [ esp + 0x78 ]
mov esi eax
add esp 0x4
lea eax [ esp + 0x38 ]
call sub_402160
mov eax [ esp + 0x74 ]
lea eax [ eax + esi * 2 + 0x2 ]
mov [ esp + 0x74 ] eax
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
test al 0x8
je r-xdata
mov edi 0x80006
mov eax [ esp + 0x38 ]
mov ebx [ ebp + 0x10 ]
call sub_40e710
jmp r-xdata
push eax
call sub_4111c1
mov esi eax
add esp 0x4
mov edi r--data
lea eax [ esp + 0x38 ]
call sub_40d200
mov edi [ esp + 0x74 ]
lea eax [ esp + 0x38 ]
call sub_40d200
mov ecx [ esp + 0x74 ]
lea eax [ ecx + esi * 2 + 0x2 ]
mov [ esp + 0x74 ] eax
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
test al 0x4
je r-xdata
or edi 0x2000
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
test al 0x2
je r-xdata
or edi 0x200
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
test al 0x1
je r-xdata
or edi 0x800
mov [ esp + 0x8c ] edi
jmp r-xdata
or edi 0x1000
cmp [ ebp + 0x18 ] 0x0
je r-xdata
sub_467861
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
push 0x0
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
push ecx
call sub_467408
pop ebp
retn 0x8
sub_46787c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
push ecx
call sub_467408
pop ebp
retn 0x8
sub_467897
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x22c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
cmp [ edi + 0x8 ] 0x2
mov esi ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
jb r-xdata
mov ebx [ ebp + 0xc ]
test al 0x8
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov [ esp + 0x10 ] eax
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test al 0x3
je r-xdata
mov [ esp + 0x14 ] 0x0
mov edi [ esp + 0x14 ]
call sub_40da60
mov edi eax
mov [ esp + 0x14 ] edi
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push 0x0
push 0x0
lea edx [ esp + 0x38 ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
push eax
call sub_45340c
push eax
call sub_413a0e
add esp 0x14
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x18 ]
call sub_401b10
lea edi [ esp + 0x30 ]
mov eax esi
call sub_40d200
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x180 ]
xor edi edi
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403cd0
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_4533eb
push eax
mov eax [ esp + 0x14 ]
mov ecx edi
call sub_40de40
test al al
jne r-xdata
mov ecx ebx
call sub_40c650
lea ecx [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call sub_4339fa
add esp 0x4
test al al
jne r-xdata
push 0x14
cmp edi eax
jne r-xdata
mov ecx [ esi + 0x17c ]
mov esi ebx
call sub_408f40
mov [ ebx ] 0xffffffff
mov [ ebx + 0x8 ] 0x1
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_44ae3e
xor [ esp + 0x10 ] 0x8
call sub_402250
mov esi [ esp + 0x14 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x18 ]
push eax
call sub_4335cd
add esp 0x4
test al al
jne r-xdata
call sub_4115d7
mov edx [ esi + 0x17c ]
mov ecx [ edx + edi * 4 ]
add esp 0x4
mov [ ecx ] eax
call sub_4115d7
add esp 0x4
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esi + 0x178 ]
push ecx
call sub_436299
jmp r-xdata
inc edi
add ecx 0x4
cmp edi eax
jb r-xdata
mov esi ebx
call sub_408f40
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0xffffffff
mov edx [ esi + 0x17c ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov [ ecx ] 0x0
mov edx [ esi + 0x17c ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov edx [ esp + 0x14 ]
mov esi ebx
mov [ ecx + 0x4 ] edx
call sub_408f40
inc edi
mov [ ebx ] edi
pop edi
pop esi
mov [ ebx + 0x8 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
sub_467a9d
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x49c ]
mov eax esi
call sub_410a00
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_467ac4
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push esi
push edi
cmp eax 0xb
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec eax
cmp eax 0x9
ja r-xdata
xor edi edi
jmp [ eax * 4 + jump_table_467c34 ]
push 0x8
call sub_4115d7
mov [ ebx ] eax
mov [ eax ] edi
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
add esp 0x4
mov esi ebx
mov [ edx + 0x4 ] eax
call sub_403d80
mov [ ebx + 0x8 ] 0xb
mov esi [ ebx + 0xc ]
push 0x0
push esi
call sub_4364e6
cmp [ eax ] 0x30
jne r-xdata
mov edx [ ebx ]
mov edi 0x4
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
mov edi 0x8
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
fld [ ebx ]
mov edi 0x8
fstp [ ebp - 0xc ]
jmp r-xdata
mov al [ ebx ]
mov edi 0x1
mov [ ebp - 0xc ] al
jmp r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
mov edi 0x4
jmp r-xdata
mov eax ebx
call sub_40e270
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
push 0x1
push esi
call sub_4364e6
cmp [ eax ] 0x78
je r-xdata
push edi
call sub_4115d7
push edi
lea ecx [ ebp - 0xc ]
push ecx
push eax
mov [ ebp + 0x8 ] eax
call sub_410e60
add esp 0x10
mov [ ebp - 0xc ] edx
push 0x1
call sub_4115d7
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_4115d7
add esp 0x4
push edi
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp + 0x8 ] eax
call sub_442ee0
lea edx [ ebp - 0x1c ]
push edx
push esi
call sub_45f645
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
call sub_410e60
add esp 0xc
lea esi [ ebp - 0x1c ]
call sub_401350
jmp r-xdata
mov edi [ esi + 0x4 ]
sub edi 0x2
sar edi 0x1
push edi
call sub_4115d7
mov ecx [ esi ]
push eax
add ecx 0x4
push ecx
mov [ ebp + 0x8 ] eax
call sub_432d76
add esp 0xc
test al al
jne r-xdata
push 0x1
push esi
call sub_4364e6
cmp [ eax ] 0x58
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4111dc
add esp 0x4
sub_467c8e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
movzx eax [ ecx ]
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test eax 0x2000
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test eax 0x4000
je r-xdata
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edi ecx
mov eax [ ecx + 0x8 ]
mov edi [ eax ]
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov eax esi
call sub_40e950
movsx edx [ edi ]
mov eax [ esi ]
mov [ eax + 0x210 ] edx
mov eax [ esi ]
xor ecx ecx
cmp [ eax + 0x210 ] ecx
jle r-xdata
test edi edi
je r-xdata
push 0x0
mov eax esi
call sub_40e830
mov ecx [ esi ]
mov ebx [ ecx + 0x8 ]
movzx ecx [ edi + 0x2 ]
mov eax ecx
and eax 0xf00
add esp 0x4
cmp eax 0x400
jg r-xdata
lea ebx [ edi + 0x10 ]
mov edx 0x10c
mov [ ebp + 0xc ] ebx
cmp eax 0x800
je r-xdata
je r-xdata
mov ebx [ ebp + 0xc ]
mov ebx [ ebx ]
add [ ebp + 0xc ] 0x8
mov [ edx + eax ] ebx
mov eax [ esi ]
inc ecx
add edx 0x4
cmp ecx [ eax + 0x210 ]
jl r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
test cl cl
jns r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
cmp eax 0x100
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edi edi
test ebx ebx
jle r-xdata
call sub_408f40
lea eax [ ebp + 0xc ]
push eax
push edi
call [ SafeArrayGetVartype@IAT ]
mov cx [ ebp + 0xc ]
movzx eax cx
add eax 0xfffffffe
cmp eax 0x15
ja r-xdata
xor edi edi
test ebx ebx
jle r-xdata
lea edx [ ebp - 0xc ]
push edx
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
cmp eax 0x200
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ SafeArrayUnaccessData@IAT ]
mov [ ebp + 0x8 ] edi
movzx edx cx
test edx 0x4000
je r-xdata
movzx edx [ eax + lookup_table_46805a ]
jmp [ edx * 4 + jump_table_468042 ]
mov edx [ ebp - 0x8 ]
push edx
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
mov [ ebp + 0x8 ] 0x4
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x8 ] 0x2
jmp r-xdata
mov [ ebp + 0x8 ] 0x8
jmp r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
lea ecx [ ecx ]
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x14 ]
mov ecx [ esi ]
mov eax 0x400c
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x20 ] edx
mov edx [ ecx ]
mov ecx [ edx + edi * 4 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_468070
add [ ebp + 0x8 ] 0x10
inc edi
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
push ebx
push ecx
push ebx
push esi
call sub_453132
push eax
call sub_410e60
add esp 0xc
push edi
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edi edi
test ebx ebx
jle r-xdata
mov edx [ esi ]
mov ecx [ edx ]
mov [ ecx + edi * 4 ] eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi ]
mov edx 0x9
mov [ ebp - 0x28 ] dx
mov [ ebp - 0x20 ] ecx
mov ecx [ eax ]
mov ecx [ ecx + edi * 4 ]
lea edx [ ebp - 0x28 ]
push edx
call sub_468070
inc edi
cmp edi ebx
jl r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
push 0x10
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov ecx [ ebp - 0xc ]
mov eax 0x8
mov [ ebp - 0x28 ] ax
mov edx [ ecx + edi * 4 ]
mov ecx [ esi ]
mov [ ebp - 0x20 ] edx
mov edx [ ecx ]
mov ecx [ edx + edi * 4 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_468070
inc edi
cmp edi ebx
jl r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
mov edx 0x4000
or dx ax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x28 ] dx
mov [ ebp - 0x20 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x28 ] ax
mov eax [ ebp - 0x4 ]
push edx
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_410e60
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov ax [ ebp + 0xc ]
movzx ecx ax
test ecx 0x4000
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ eax + edi * 4 ]
call sub_468070
mov ecx [ ebp + 0x8 ]
add [ ebp - 0x4 ] ecx
inc edi
cmp edi ebx
jl r-xdata
sub_468070
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov esi ecx
call sub_408f40
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_45ea0f
cmp al 0x1
je r-xdata
push edi
push esi
call sub_467c8e
cmp al 0x1
je r-xdata
push 0x10
mov [ esi + 0x8 ] 0x8
call sub_4115d7
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
push edi
push eax
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4111dc
add esp 0x4
mov [ esi ] 0x0
call sub_408f40
sub_4680ed
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xb
je r-xdata
call sub_403d80
mov eax [ esi ]
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn 0x4
push esi
call sub_467ac4
sub_46810f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
cmp [ ebp + 0x10 ] 0x0
mov ebx [ esi + 0xc ]
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0xc ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_453132
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
call sub_4680ed
push eax
call sub_410e60
add esp 0xc
sub_468162
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0xc ]
push ecx
push ebx
mov [ ebp + 0xc ] eax
call sub_453132
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push eax
push ebx
call sub_4680ed
push eax
call sub_410e60
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
push ecx
push 0x0
push edx
call sub_412f40
add esp 0x18
push edi
mov [ esi + 0xc ] 0x0
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4681c6
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_46810f
pop ebp
retn 0x8
xor eax eax
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
mov eax r--data
call sub_40e710
pop ebx
sub_4681fd
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_468162
pop ebp
retn 0x4
sub_46822a
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov bl [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
test bl 0x4
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40bc70
cmp [ ebp + 0x20 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0xffffffff
jne r-xdata
test bl 0x1
je r-xdata
push esi
call sub_4536cb
test al al
je r-xdata
sub edi [ ebp + 0x18 ]
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x2
push ecx
lea edx [ ebp + 0x20 ]
push edx
call sub_410e60
mov eax [ ebp + 0x20 ]
add esp 0xc
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x10 ]
push 0x1
push edx
lea eax [ ebp + 0x23 ]
push eax
call sub_410e60
movsx cx [ ebp + 0x23 ]
movzx edx cx
add esp 0xc
push edx
lea eax [ ebp - 0x10 ]
push eax
jmp r-xdata
push esi
call sub_45340c
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_40c650
push eax
lea edx [ ebp - 0x10 ]
push edx
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40bc70
push esi
test bl 0x1
je r-xdata
call sub_443758
mov esi [ ebp + 0x24 ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x20
movzx edx [ eax ]
push 0x2
lea eax [ ebp + 0x20 ]
push eax
push ecx
mov [ ebp + 0x20 ] edx
call sub_410e60
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov dl [ eax ]
push 0x1
lea eax [ ebp + 0x23 ]
push eax
push ecx
mov [ ebp + 0x23 ] dl
call sub_410e60
add esp 0xc
mov ecx esi
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
call sub_443758
mov esi [ ebp + 0x24 ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
xor edi edi
lea esi [ ebp - 0x10 ]
call sub_401c90
mov ecx [ ebp + 0x10 ]
test bl 0x1
je r-xdata
shr edi 0x1
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov esi eax
mov eax [ ebp + 0x10 ]
add edi edi
push edi
push eax
push esi
call sub_410e60
mov ebx [ ebp + 0x24 ]
xor ecx ecx
add esp 0x10
mov eax esi
mov [ edi + esi ] cx
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
lea ebx [ edi + 0x1 ]
push ebx
call sub_4115d7
mov ecx [ ebp + 0x10 ]
push edi
mov esi eax
push ecx
push esi
call sub_410e60
push ebx
push esi
mov [ esi + edi ] 0x0
call sub_43299a
mov ebx [ ebp + 0x24 ]
add esp 0x18
mov edi eax
call sub_40e710
push edi
call sub_4111dc
push esi
call sub_4111dc
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
shr edi 0x1
mov ebx edi
call sub_4533b1
cmp eax ebx
jge r-xdata
mov ebx edi
mov [ ebp + 0x20 ] ebx
call sub_4533b1
cmp eax edi
jge r-xdata
push ebx
push 0x0
push esi
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov esi [ ebp + 0x24 ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebx + ebx ]
push ecx
push edx
push eax
call sub_410e60
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push esi
call sub_4533b1
lea ebx [ eax + 0x1 ]
push ebx
push 0x0
push esi
call sub_4533eb
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_461465
mov esi [ ebp + 0x24 ]
lea edi [ ebp - 0x10 ]
call sub_40e6a0
lea ecx [ ebx + 0x1 ]
mov ebx [ ebp - 0x10 ]
call sub_40f6f0
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x10 ]
push ecx
mov esi eax
push esi
push edx
call sub_410e60
push esi
call sub_4111dc
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push esi
call sub_4533b1
inc eax
mov [ ebp + 0x20 ] eax
mov ebx eax
sub_4684dc
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x14 ]
push edi
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x14 ]
push ecx
push edx
push eax
mov [ ebp + 0x1c ] 0x0
call sub_45360e
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
shl ecx 0x5
mov edx [ eax + ecx + 0x4 ]
add eax ecx
mov ecx [ eax ]
mov [ ebp + 0x1c ] ecx
mov ecx [ eax + 0x1c ]
mov eax [ eax + 0x8 ]
mov [ ebp + 0x14 ] edx
mov [ ebp + 0x8 ] eax
cmp ebx 0xffffffff
je r-xdata
call sub_408f40
mov eax [ ebp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x1c ]
imul ebx edx
mov edx [ ebp + 0x1c ]
add edx ebx
add edi ebx
jmp r-xdata
test al 0x21
je r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax 0x3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp edx ecx
jl r-xdata
test al 0x4
je r-xdata
push esi
mov esi [ ebp + 0x18 ]
push esi
push ebx
push edx
mov edx [ ebp + 0x10 ]
push ecx
push edi
push eax
push edx
call sub_46822a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov dl [ ebp + 0x18 ]
cmp ebx 0xffffffff
jne r-xdata
test al 0x8
je r-xdata
test dl dl
je r-xdata
sub ecx edx
mov dl [ ebp + 0x18 ]
mov [ ebp + 0x1c ] ecx
test dl dl
je r-xdata
mov ecx [ ebp + 0x14 ]
dec ecx
cmp ecx 0x7
ja r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x4
je r-xdata
mov edi [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x7
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x10 ]
push edx
call sub_44b3ac
mov [ edi ] eax
test al 0x10
je r-xdata
test al 0x10
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
jmp [ ecx * 4 + jump_table_468828 ]
test dl dl
je r-xdata
cmp eax 0x8
jne r-xdata
test al 0x40
je r-xdata
push ecx
push edi
push ecx
push esi
call sub_453132
push eax
call sub_410e60
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ebx [ ebp + 0x10 ]
push ebx
call sub_4680ed
push ebx
call sub_443106
mov ebx eax
mov eax [ ebp + 0x1c ]
cmp ebx eax
jle r-xdata
test dl dl
je r-xdata
test dl dl
je r-xdata
test dl dl
je r-xdata
test dl dl
je r-xdata
fld [ edi ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x10 ]
call sub_40baa0
fstp [ edi ]
test dl dl
je r-xdata
mov eax [ ebp + 0x10 ]
push ebx
push ecx
push eax
call sub_4680ed
add esp 0x4
push eax
push edi
call sub_410e60
add esp 0xc
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4680ed
add esp 0x4
push eax
push ebx
push esi
call sub_453132
push eax
call sub_410e60
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ebx eax
test al 0x2
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_443006
mov [ edi ] al
mov eax [ ebp + 0x8 ]
test al 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
call sub_443006
mov [ edi ] ax
mov eax [ ebp + 0x8 ]
test al 0x2
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
call sub_443006
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ edi ]
mov edi [ edi + 0x4 ]
call sub_408f40
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x2
mov eax [ ebp + 0x10 ]
push eax
call sub_443006
mov [ edi ] eax
mov [ edi + 0x4 ] edx
fld [ edi ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x10 ]
call sub_40baa0
fstp [ edi ]
movsx edi [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
movzx edi [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
movsx edi [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
movzx edi [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ edi ]
cdq
mov edi eax
mov ebx edx
call sub_408f40
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edi [ edi ]
xor ebx ebx
call sub_408f40
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_468848
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push 0x1
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_4684dc
pop ecx
pop ebp
retn 0x14
sub_46886c
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
push 0x0
push edx
push eax
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4684dc
pop ebp
retn 0x10
sub_46888b
push ebp
mov ebp esp
sub esp 0x1c
mov al [ rw-data ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x8000
push edi
mov [ ebp - 0x4 ] al
call sub_414139
add esp 0x4
push eax
call sub_41404e
add esp 0x8
mov esi eax
push ebx
mov [ ebp - 0x8 ] esi
call sub_443d61
test al al
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_40d370
push ebx
call sub_4533eb
push esi
push eax
call sub_45f645
mov edx [ ebp - 0x1c ]
push edx
push r--data
push edi
call sub_414330
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
je r-xdata
push edi
push ebx
call sub_443106
push eax
push 0x1
push ebx
call sub_4680ed
push eax
call sub_4142b6
add esp 0x10
mov ebx eax
jmp r-xdata
lea esi [ ebp - 0x1c ]
call sub_401350
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
push ebx
call sub_45340c
push eax
call [ OutputDebugStringW@IAT ]
push edi
call sub_4145c6
add esp 0x4
cmp esi 0xffffffff
jne r-xdata
push esi
jmp r-xdata
push 0x4000
push edi
call sub_414139
add esp 0x4
push eax
call sub_41404e
add esp 0x8
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_468961
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea esi [ ebp - 0x10 ]
call sub_40d370
mov eax [ ebp + 0x8 ]
mov edi esi
call sub_4037a0
test al al
je r-xdata
lea esi [ ebp - 0x10 ]
call sub_401350
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_460a29
call sub_401350
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4689aa
push ebp
mov ebp esp
sub esp 0x18
push esi
lea esi [ ebp - 0x14 ]
call sub_40d370
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push eax
push esi
push edx
call sub_44c228
test al al
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_401350
xor al al
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_460a29
call sub_401350
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4689f4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x2c ]
test al 0x1
je r-xdata
test al 0x2
je r-xdata
push ebx
push edi
call sub_443f76
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea esi [ ebp - 0x10 ]
test al 0x4
je r-xdata
push ebx
push edi
call sub_443f0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40d370
lea edx [ ebp - 0x10 ]
push edx
push ebx
call sub_45f645
lea eax [ ebp - 0x10 ]
push eax
call sub_40d370
push esi
push ebx
call sub_4541a8
push esi
jmp r-xdata
push edi
call sub_443f9b
lea esi [ ebp - 0x10 ]
mov bl al
call sub_401350
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_468a72
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
mov bl [ ebp + 0x8 ]
push esi
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov esi rw-data
call sub_40e0c0
push 0xfffffffd
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx rw-data
call sub_401000
push 0xfffffffc
push rw-data
call sub_453b16
test bl 0x8
je r-xdata
mov [ rw-data ] 0x1
push 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
cmp [ rw-data ] 0x1
mov [ rw-data ] 0x0
jne r-xdata
push rw-data
call sub_453b16
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx r--data
mov eax rw-data
mov [ rw-data ] 0x0
call sub_402160
push 0xfffffffa
mov esi rw-data
call sub_40e0c0
sub_468b0e
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x2c
lea eax [ ebp - 0x3c ]
push 0x0
push eax
mov [ ebp - 0x40 ] 0x30
call sub_412f40
mov eax [ ebp + 0x10 ]
mov ecx [ esi + 0x9d0 ]
add eax 0xfffffe00
add esp 0xc
xor edi edi
mov [ ebp - 0x8 ] ecx
cmp eax 0x6
ja r-xdata
test [ esi + 0xc ] edi
je r-xdata
jmp [ eax * 4 + jump_table_468d82 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edi 0x1
push 0xfffffff9
jmp r-xdata
mov edi 0x2
push 0xfffffff8
jmp r-xdata
cmp [ esi + 0xa ] 0x0
mov edi 0x4
je r-xdata
mov edi 0x8
push 0xfffffff7
jmp r-xdata
mov edi 0x10
push 0xfffffff6
jmp r-xdata
mov edi 0x20
push 0xfffffff2
jmp r-xdata
mov edi 0x40
push 0xfffffff5
cmp [ esi + 0x4 ] 0x0
mov ebx [ GetMenuItemCount@IAT ]
je r-xdata
push esi
call sub_453b16
push 0xfffffff3
jmp r-xdata
mov ebx 0x7
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x34 ] 0x8
cmp ecx ebx
jl r-xdata
mov ecx [ esi ]
mov edi [ DeleteMenu@IAT ]
push 0x0
push 0x5
push ecx
call edi
mov edx [ esi ]
push 0x0
push 0x4
push edx
call edi
mov eax [ esi ]
push 0x0
push 0x6
push eax
call edi
mov ecx [ esi ]
push 0x0
push 0x3
push ecx
call edi
mov [ esi + 0x8 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea edx [ esi + 0x1d0 ]
mov [ ebp + 0x8 ] edx
lea esp [ esp ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edx [ esi ]
push edx
call ebx
test eax eax
jle r-xdata
mov eax [ esi ]
push eax
call ebx
test eax eax
jle r-xdata
add [ ebp + 0x8 ] edi
inc ebx
cmp ebx [ esi + 0x9d0 ]
jle r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x40 ]
push ecx
push 0x0
push ebx
push edx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x6 ] 0x0
je r-xdata
mov [ esi + 0x6 ] 0x0
jmp r-xdata
mov ecx [ esi + 0x7c ]
push 0x0
push 0xffffffff
push 0xffffffff
push ecx
push 0x0
push esi
mov [ esi + 0x9d0 ] 0x3
call sub_45fbac
push 0x0
push 0xffffffff
push 0xffffffff
push r--data
push 0x0
push esi
mov [ esi + 0x9d0 ] 0x5
call sub_45fbac
mov edx [ esi + 0x6c ]
push 0x0
push 0xffffffff
push 0xffffffff
push edx
push 0x0
push esi
mov [ esi + 0x9d0 ] 0x2
call sub_45fbac
mov eax [ ebp - 0x8 ]
mov [ esi + 0x9d0 ] eax
mov [ esi + 0x8 ] 0x1
jmp r-xdata
push 0x0
push 0xffffffff
push 0xffffffff
push r--data
push 0x0
push esi
mov [ esi + 0x9d0 ] 0x4
call sub_45fbac
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
push 0xfffffff3
jmp r-xdata
test [ ebp - 0x34 ] 0x1000
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
call [ GetCursorPos@IAT ]
mov edi [ ebp + 0xc ]
push edi
call [ SetForegroundWindow@IAT ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ esi ]
push 0x0
push edi
push eax
push ecx
push 0x0
push edx
call [ TrackPopupMenuEx@IAT ]
push 0x0
push 0x0
push 0x0
push edi
call [ PostMessageW@IAT ]
mov eax esi
call sub_401b80
mov ecx [ esi ]
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x4
push ecx
mov [ rw-data ] 0x1
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x34 ] 0x8
call [ SetMenuItemInfoW@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
cmp edx [ esi ]
je r-xdata
push ebx
push esi
call sub_453b6f
sub_468d9e
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp + 0xb ] 0x1
cmp [ ebx + 0x4 ] esi
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov ecx [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax ] 0x0
mov [ ecx ] esi
lea ebx [ ebx ]
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x1
inc esi
jmp r-xdata
cmp eax 0x5e
je r-xdata
push esi
push ebx
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x2b
je r-xdata
cmp eax 0x2b
jne r-xdata
cmp eax 0x21
je r-xdata
cmp eax 0x5e
jne r-xdata
cmp eax 0x23
jne r-xdata
cmp eax 0x21
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
inc esi
jmp r-xdata
push esi
inc esi
push ebx
mov [ ebp + 0x1c ] esi
call sub_4364e6
movzx eax [ eax ]
cmp eax 0x7b
jne r-xdata
cmp eax 0x23
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
inc esi
jmp r-xdata
push eax
call [ VkKeyScanW@IAT ]
mov ecx [ ebp + 0xc ]
cwde
mov [ ecx ] eax
cmp eax 0xffffffff
je r-xdata
mov eax 0x40
lea ecx [ ebp - 0x10 ]
call sub_4013c0
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push 0x7d
call sub_45ffc2
test al al
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x1
test eax 0x200
je r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0xb ] 0x0
call sub_402250
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edi * 4 + rw-data ]
push edx
push eax
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
test eax 0x400
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x1
mov eax [ ebp + 0xc ]
and [ eax ] 0xff
mov al [ ebp + 0xb ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp edi 0x62
jne r-xdata
inc edi
cmp edi 0x62
jl r-xdata
test eax 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
cmp [ edi + rw-data ] 0x0
je r-xdata
xor edi edi
lea esi [ ebp - 0x10 ]
call sub_401c90
movzx ecx [ eax ]
push ecx
call [ VkKeyScanW@IAT ]
mov edx [ ebp + 0xc ]
cwde
mov [ edx ] eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x1
movzx ecx [ edi + rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
test eax 0x200
je r-xdata
mov ecx esi
call sub_402250
test eax 0x400
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
test eax 0x100
je r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_402250
jmp r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
mov [ eax ] 0x1
call sub_402250
jmp r-xdata
sub_468f70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x34 ]
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp edx ecx
jl r-xdata
lea edi [ ebp + 0x10 ]
push edi
push edx
mov edx [ eax ]
push ecx
mov ecx [ eax + 0x2c ]
push ecx
push edx
call sub_42eb69
mov edi [ ebp + 0x10 ]
add esp 0x14
push edi
lea eax [ ebp - 0x14 ]
push eax
call sub_444e90
push esi
lea ecx [ ebp - 0x14 ]
push ecx
call sub_460a29
lea esi [ ebp - 0x14 ]
call sub_401350
push edi
call [ rw-data ]
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x0
push esi
or eax 0xffffffff
call sub_40c600
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_468fe1
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x24 ] 0x0
push edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov edi [ ebp + 0x10 ]
call sub_4019d0
mov eax [ ebp + 0xc ]
push 0x1
push eax
push esi
call sub_44ca07
mov ebx eax
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40bc70
mov [ ebp + 0xc ] 0x0
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_402250
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push esi
call sub_468f70
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x14 ]
call sub_40d7c0
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax ebx
jl r-xdata
mov esi [ ebp + 0x8 ]
sub_46906d
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0xc ] 0xffffffff
call sub_401070
mov eax [ ebp + 0x10 ]
lea ebx [ esi + 0x14 ]
push ebx
push eax
call sub_4541a8
mov eax [ ebx ]
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ esi + 0x3c ]
lea edx [ ebp + 0x8 ]
push edx
push ecx
push eax
call j_sub_462237
add esp 0x10
mov [ esi + 0x24 ] eax
test eax eax
jne r-xdata
lea ebx [ esi + 0x30 ]
push ebx
push eax
call sub_43ef7e
mov eax [ ebx ]
lea eax [ eax + eax * 2 + 0x3 ]
xor ecx ecx
mov [ ebx ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0xc
mov [ esi + 0x2c ] eax
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebx ]
mov edx [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x8 ] edx
call sub_444e90
or eax 0xffffffff
lea edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
push edx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_444f21
lea esi [ ebp - 0x24 ]
call sub_401350
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edi + 0x4 ] eax
mov [ edi ] edx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_469143
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x10 ]
cmp ecx 0x110
ja r-xdata
sub ecx 0x111
je r-xdata
je r-xdata
movzx ecx si
dec ecx
je r-xdata
sub ecx 0x2
jne r-xdata
cmp [ eax + 0x54 ] 0x0
jne r-xdata
cmp ecx 0x5
je r-xdata
push eax
call sub_460c01
mov eax 0x1
pop esi
pop ebp
retn 0x10
dec ecx
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x10
push esi
push eax
call sub_460c91
mov eax 0x1
pop esi
pop ebp
retn 0x10
push eax
call sub_454639
pop esi
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x54 ] ecx
mov ecx edx
shr ecx 0x10
push ecx
movzx edx dx
push edx
push esi
push eax
call sub_4357b7
mov eax 0x1
pop esi
pop ebp
retn 0x10
cmp ecx 0x24
jne r-xdata
push eax
call sub_460bda
mov eax 0x1
pop esi
pop ebp
retn 0x10
mov [ edx + 0x18 ] 0xbe
mov [ edx + 0x1c ] 0x72
mov eax 0x1
pop esi
pop ebp
retn 0x10
sub_46921b
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push 0x0
push sub_469205
push edx
push 0x3e8
push eax
mov [ rw-data ] ecx
call [ DialogBoxParamW@IAT ]
mov [ rw-data ] 0x0
pop ebp
retn 0x8
sub_469251
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
xor eax eax
push 0x40
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edi
push ecx
push edx
push esi
push eax
call sub_460d41
test eax eax
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push eax
call sub_44cc34
sub_469296
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
lea ecx [ ebp - 0x14 ]
call sub_40bc70
lea ecx [ ebp - 0x24 ]
call sub_40bc70
mov esi [ ebp + 0x8 ]
push esi
call sub_436565
test al al
jne r-xdata
mov ebx r--data
mov eax [ esi ]
push r--data
push eax
call sub_4114ab
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi ]
push r--data
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x7
push r--data
push eax
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov ebx r--data
jmp r-xdata
mov eax [ esi ]
push 0x7
push r--data
push eax
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov ebx r--data
lea eax [ ebp - 0x14 ]
call sub_402160
push 0xffffffff
push 0x7
jmp r-xdata
lea eax [ ebp - 0x14 ]
call sub_402160
mov eax [ esi ]
push 0xa
push r--data
push eax
call sub_41341f
add esp 0xc
test eax eax
jne r-xdata
mov ebx r--data
lea eax [ ebp - 0x14 ]
call sub_402160
push 0xffffffff
push 0x7
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
push esi
call sub_46150f
push eax
lea esi [ ebp - 0x24 ]
call sub_40e0a0
lea ecx [ ebp - 0x34 ]
call sub_402250
push esi
call sub_461321
push esi
lea eax [ ebp - 0x14 ]
call sub_40bd50
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi ]
push r--data
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov ebx r--data
lea eax [ ebp - 0x14 ]
call sub_402160
push 0xffffffff
push 0xa
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
lea eax [ ebp - 0x14 ]
push eax
call sub_40e0a0
lea ecx [ ebp - 0x24 ]
call sub_402250
lea ecx [ ebp - 0x14 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx r--data
jmp r-xdata
sub_4693f5
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_40bc70
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_46142e
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x10 ]
push eax
call sub_4459fb
lea ecx [ ebp - 0x10 ]
cmp eax 0xffffffff
je r-xdata
call sub_402250
xor al al
mov esp ebp
pop ebp
retn 0x8
call sub_402250
mov al 0x1
mov esp ebp
pop ebp
retn 0x8
sub_46943f
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ ebp - 0x1c ]
mov [ ebx + 0x88 ] esi
mov [ ebx + 0xd8 ] esi
call sub_40bc70
lea ecx [ ebp - 0x2c ]
call sub_40bc70
push edi
call sub_436565
test al al
je r-xdata
push esi
push edi
call sub_4364e6
cmp [ eax ] 0x5b
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebx + 0x88 ] 0x0
jne r-xdata
mov esi [ edi + 0x4 ]
lea ecx [ esi - 0x1 ]
push ecx
push edi
call sub_4364e6
cmp [ eax ] 0x5d
jne r-xdata
test [ ebx + 0x88 ] 0x8
je r-xdata
push edi
lea esi [ ebx + 0x9c ]
mov [ ebx + 0x88 ] 0x8
call sub_40e0a0
add esi 0xfffffffe
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x10 ] esi
mov eax [ ebp + 0xc ]
mov edi [ EnumChildWindows@IAT ]
push ebx
push sub_4619ea
push eax
mov [ ebx + 0x130 ] 0x0
call edi
cmp [ ebx + 0xd8 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa0 ]
mov [ ebx + 0x134 ] eax
lea edi [ eax - 0x1 ]
mov [ ebx + 0x138 ] 0x0
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ ebx + 0xd8 ]
test eax eax
je r-xdata
test [ ebx + 0x88 ] 0x8
je r-xdata
test edi edi
js r-xdata
lea edx [ ebp - 0x1c ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x88 ] 0x1
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebx + 0x8c ]
call sub_40e0a0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_402250
lea ecx [ ebp - 0x1c ]
call sub_402250
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
lea ecx [ ebx + 0x9c ]
push ecx
lea esi [ ebx + 0xbc ]
mov [ ebx + 0x130 ] 0x0
mov [ ebx + 0x88 ] 0x4
call sub_40e0a0
mov edx [ ebp + 0xc ]
push ebx
push sub_4619ea
push edx
call edi
lea esi [ ebx + 0x9c ]
lea ecx [ ebp - 0x1c ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x88 ] 0x8
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebx + 0x9c ]
call sub_40e0a0
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
push edi
call sub_461a5b
test al al
je r-xdata
push eax
push ebx
call sub_44cdaf
lea ecx [ ebp - 0x2c ]
call sub_402250
lea ecx [ ebp - 0x1c ]
call sub_402250
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc [ ebx + 0x138 ]
test edi edi
jns r-xdata
lea ecx [ ebp - 0x1c ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x88 ] 0x10
lea esi [ ebx + 0xec ]
call sub_401070
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_46906d
cmp [ eax ] 0x0
call sub_401c90
movzx eax [ eax ]
push eax
call sub_4131fc
add esp 0x4
dec edi
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ ebp - 0x2c ]
or [ ebx + 0x88 ] 0x20
push edx
call sub_413190
add esp 0x4
mov [ ebx + 0xcc ] eax
jmp r-xdata
lea edx [ ebp - 0x1c ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x88 ] 0x400
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebx + 0xac ]
call sub_40e0a0
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
or [ ebx + 0x88 ] 0x40
push eax
call sub_413190
add esp 0x4
mov [ ebx + 0xdc ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ ebp - 0x2c ]
or [ ebx + 0x88 ] 0x80
push edx
call sub_413190
add esp 0x4
mov [ ebx + 0xe0 ] eax
jmp r-xdata
lea edx [ ebp - 0x1c ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp - 0x2c ]
or [ ebx + 0x88 ] 0x100
push ecx
call sub_413190
add esp 0x4
mov [ ebx + 0xe4 ] eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
or [ ebx + 0x88 ] 0x200
push eax
call sub_413190
add esp 0x4
mov [ ebx + 0xe8 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ ebp - 0x2c ]
or [ ebx + 0x88 ] 0x2
push edx
call sub_413190
add esp 0x4
mov [ ebx + 0xd0 ] eax
jmp r-xdata
lea edx [ ebp - 0x1c ]
push r--data
push edx
call sub_44cd93
add esp 0x8
test al al
jmp r-xdata
or [ ebx + 0x88 ] 0x4
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebx + 0xbc ]
call sub_40e0a0
jmp r-xdata
je r-xdata
sub_469839
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x8
push ebx
mov bl [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_461dfa
mov esi eax
test esi esi
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ edi ]
push 0xf000
push esi
push 0x1127
push ecx
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
cmp eax 0xffffffff
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x1
jne r-xdata
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
push edx
push esi
push edi
call sub_43659e
test al al
je r-xdata
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push eax
push ecx
push 0x1
push 0x0
push edi
call sub_436a0b
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4698be
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_461dfa
test eax eax
jne r-xdata
mov ecx [ esi ]
push 0xf000
push eax
push 0x1127
push ecx
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
pop esi
pop ecx
pop ebp
retn 0x8
pop esi
pop ecx
pop ebp
retn 0x8
sub_4698f8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_461dfa
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx 0x2
jne r-xdata
xor al al
pop esi
pop ebp
retn 0xc
push eax
push ecx
mov ecx [ esi ]
push 0x1102
push ecx
call [ SendMessageW@IAT ]
test eax eax
setne al
pop esi
pop ebp
retn 0xc
mov ecx 0x1
sub_46993e
push ebp
mov ebp esp
sub esp 0xb8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
mov edx [ esi + 0x8 ]
push edi
mov edi ecx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0xc ]
inc [ eax ]
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x18 ] 0x0
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] eax
call sub_40bc70
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
lea ecx [ ebp - 0x28 ]
call sub_402250
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ edi ]
push ebx
push 0x4
push 0x110a
push eax
call [ SendMessageW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
push esi
call sub_436565
test al al
jne r-xdata
push esi
call sub_436565
test al al
jne r-xdata
mov eax [ edi ]
push ebx
push 0x1
push 0x110a
push eax
call [ SendMessageW@IAT ]
inc [ ebp + 0x18 ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov edi [ ebp - 0x8 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov edi [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
push ebx
push edi
call sub_461c4a
lea ecx [ ebp - 0x18 ]
push ecx
mov eax esi
call sub_40bd50
mov edx [ ebp + 0x18 ]
push 0xa
lea ecx [ ebp - 0xb4 ]
push ecx
push edx
call sub_41305c
add esp 0xc
push 0x23
mov eax esi
call sub_403020
lea edi [ ebp - 0xb4 ]
mov eax esi
call sub_40d200
mov edi [ ebp - 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
push edi
call sub_461c4a
lea ecx [ ebp - 0x18 ]
push ecx
mov eax esi
call sub_40bd50
mov edx [ ebp + 0x18 ]
push 0xa
lea ecx [ ebp - 0xb4 ]
push ecx
push edx
call sub_41305c
add esp 0xc
push 0x23
mov eax esi
call sub_403020
lea edi [ ebp - 0xb4 ]
mov eax esi
call sub_40d200
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
lea ecx [ ebp - 0x28 ]
call sub_402250
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea edx [ ebp - 0x28 ]
push edx
call sub_40e0a0
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x0
push edx
push esi
push eax
push ecx
mov ecx edi
call sub_46993e
test al al
jne r-xdata
sub_469ae8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
push 0x0
push 0x9
push 0x110a
push eax
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx r--data
call sub_402160
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ esi ]
push 0x0
push ecx
push edx
push edi
push 0x0
push 0x0
push 0x110a
push eax
call [ SendMessageW@IAT ]
push eax
mov ecx esi
call sub_46993e
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor al al
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_469b64
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_461dfa
mov esi eax
test esi esi
jne r-xdata
mov ecx [ edi ]
mov ebx [ SendMessageW@IAT ]
push esi
push 0x5
push 0x110b
push ecx
call ebx
mov edx [ edi ]
push esi
push 0x9
push 0x110b
push edx
call ebx
pop edi
test eax eax
pop esi
setne al
pop ebx
pop ecx
pop ebp
retn 0x8
xor al al
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_469bb5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx r--data
mov eax esi
call sub_402160
mov eax [ ebp + 0xc ]
push eax
push edi
call sub_461dfa
test eax eax
jne r-xdata
push esi
push eax
push edi
call sub_461c4a
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor al al
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_469bf3
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov ecx 0x14d
mov [ ebp + 0x8 ] 0x9
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx 0x18c
mov [ ebp + 0x8 ] 0x2
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov esi [ SendMessageW@IAT ]
push eax
mov eax [ ebx ]
push 0xffffffff
push ecx
push eax
call esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
mov edi [ GetDlgCtrlID@IAT ]
push eax
push eax
call edi
mov edx [ ebx ]
movzx ecx ax
or ecx 0x10000
push ecx
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call esi
mov eax [ ebx ]
push eax
push eax
call edi
movzx ecx [ ebp + 0x8 ]
mov edx [ ebx ]
movzx eax ax
shl ecx 0x10
or eax ecx
push eax
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call esi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_469cdb
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x14 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi r--data
lea esi [ ebp - 0x14 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov eax 0x147
mov [ ebp + 0x8 ] 0x149
mov [ ebp - 0x4 ] 0x148
jmp r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x188
mov [ ebp + 0x8 ] 0x18a
mov [ ebp - 0x4 ] 0x189
mov edx [ ebx ]
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x0
push eax
push edx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
push 0x0
push esi
push eax
push ecx
call edi
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
add eax 0x101
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ ebx ]
add esp 0x4
mov edi eax
mov eax [ ebp - 0x4 ]
push edi
push esi
push eax
push ecx
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
mov eax [ ebp + 0xc ]
jne r-xdata
mov ebx edi
call sub_402160
push edi
call sub_4111dc
add esp 0x4
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx r--data
call sub_402160
push edi
call sub_4111dc
add esp 0x4
sub_469df3
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov eax 0x14e
mov [ ebp + 0x8 ] 0x9
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x186
mov [ ebp + 0x8 ] 0x2
mov edx [ ebp + 0xc ]
mov esi [ SendMessageW@IAT ]
push 0x0
push edx
push eax
mov eax [ ebx ]
push eax
call esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
mov edi [ GetDlgCtrlID@IAT ]
push eax
push eax
call edi
mov edx [ ebx ]
movzx ecx ax
or ecx 0x10000
push ecx
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call esi
mov eax [ ebx ]
push eax
push eax
call edi
movzx ecx [ ebp + 0x8 ]
mov edx [ ebx ]
movzx eax ax
shl ecx 0x10
or eax ecx
push eax
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call esi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_469ed9
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x14 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi r--data
lea esi [ ebp - 0x14 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov ecx 0x158
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx 0x1a2
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
mov eax [ ebx ]
push 0xffffffff
push ecx
push eax
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x10 ]
cmp eax 0xffffffff
mov [ ecx ] eax
setne al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_469f6a
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov eax 0x144
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x182
mov edx [ ebp + 0xc ]
push 0x0
push edx
push eax
mov eax [ ebx ]
push eax
call [ SendMessageW@IAT ]
test eax eax
setne al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_469ff3
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edi r--data
lea esi [ ebp - 0x10 ]
call sub_401b10
push esi
push ebx
call sub_4693f5
mov ecx esi
mov [ ebp + 0xb ] al
call sub_402250
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov ecx 0x143
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx 0x180
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
mov eax [ ebx ]
push 0x0
push ecx
push eax
call [ SendMessageW@IAT ]
test eax eax
setne al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a07e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov ebx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
mov [ esp + 0x18 ] eax
cmp ebx 0x2
jne r-xdata
cmp ebx 0x1
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
call [ GetFocus@IAT ]
push eax
mov [ esp + 0x1c ] eax
call [ GetDlgCtrlID@IAT ]
mov ebx eax
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_449d86
mov ecx [ edi + 0x1c8 ]
push ecx
call sub_4152bb
add esp 0x4
cmp ebx eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0xf060
push 0x112
push esi
call [ PostMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp esi 0x1
jne r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
mov [ edi + 0x1c8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
push rw-data
call sub_441b7c
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
movzx edx si
movzx eax bx
push ecx
mov ecx [ ebp + 0x8 ]
shl edx 0x10
or edx eax
push edx
push 0x111
push ecx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0x14 ]
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push ecx
push rw-data
call sub_441af5
test al al
jne r-xdata
push 0x0
movzx edx bx
push edx
push 0x111
push esi
call [ PostMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edi [ esp + 0x14 ]
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0xf
jne r-xdata
mov eax [ edi + 0x1c8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push esi
push ecx
call sub_462a31
test al al
jne r-xdata
push 0x208
call sub_4115d7
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov edi [ edx + 0x8 ]
add esp 0x4
push 0x2c
lea eax [ esp + 0x28 ]
push 0x0
push eax
mov [ esp + 0x2c ] 0x30
call sub_412f40
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add esp 0xc
lea edx [ esp + 0x20 ]
push edx
push 0x0
push eax
push edi
mov [ esp + 0x34 ] 0x10
mov [ esp + 0x54 ] ecx
mov [ esp + 0x58 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
movzx eax si
movzx ecx bx
push edx
mov edx [ ebp + 0x8 ]
shl eax 0x10
or eax ecx
push eax
push 0x111
push edx
call [ DefDlgProcW@IAT ]
push 0x0
push eax
mov [ edi + 0x1c8 ] 0x0
call sub_462a31
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_4111dc
add esp 0x4
test [ esp + 0x28 ] 0x200
je r-xdata
push edi
mov [ esp + 0x1c ] 0xffffffff
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
mov eax [ esp + 0x18 ]
lea esp [ esp ]
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ esp + 0x18 ] esi
dec esi
js r-xdata
inc esi
cmp esi ebx
jl r-xdata
mov edx [ esp + 0x14 ]
inc esi
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x18 ]
inc esi
mov [ esp + 0x44 ] edx
cmp esi ebx
jge r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push esi
push edi
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x10 ]
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push 0x400
push ecx
dec esi
push esi
push edx
push edi
call [ CheckMenuRadioItem@IAT ]
lea eax [ esp + 0x20 ]
push eax
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
dec esi
jns r-xdata
test [ esp + 0x28 ] 0x200
je r-xdata
cmp eax [ esp + 0x10 ]
jne r-xdata
inc esi
cmp esi ebx
jl r-xdata
test [ esp + 0x28 ] 0x200
je r-xdata
sub_46a38e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
push esi
push rw-data
call sub_441b7c
cmp eax 0xffffffff
je r-xdata
movzx eax bx
movzx ecx di
shl eax 0x10
or eax ecx
cmp [ ebp + 0x18 ] 0x0
push esi
push eax
je r-xdata
cmp edi 0x8
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x115
push edx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
mov edx [ ebp + 0x8 ]
push 0x114
push edx
call [ DefDlgProcW@IAT ]
cmp edi 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
cmp [ ecx + 0x88 ] 0x12
je r-xdata
mov edx [ rw-data ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0x16
jne r-xdata
push edi
push eax
call sub_462a31
test al al
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_46a42b
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x28 ]
jne r-xdata
cmp ebx 0xffffffff
jne r-xdata
xor al al
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
cmp edi 0xffffffff
jne r-xdata
xor ebx ebx
cmp eax 0xffffffff
jne r-xdata
xor edi edi
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x96
mov dx [ ebp + 0x14 ]
mov [ esi + 0x80 ] dx
mov dx [ ebp + 0x18 ]
mov [ esi + 0x84 ] ax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x82 ] dx
mov [ esi + 0x86 ] cx
cmp [ eax + 0x1d0 ] 0x0
jne r-xdata
mov ecx 0x96
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1d0 ]
push esi
push esi
push edx
push ecx
call sub_469251
mov [ esi + 0x78 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
push 0x1c
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov ecx [ ecx ]
mov edx [ ecx ]
push edx
push eax
call sub_454879
jmp r-xdata
or ebx 0x50010000
push ebx
mov ebx [ SetWindowLongW@IAT ]
push 0xfffffff0
push eax
call ebx
mov eax [ esi ]
or edi 0x10000
push edi
push 0xffffffec
push eax
call ebx
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x24
mov edx 0x300
mov [ esi + 0x7e ] dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1d0 ] eax
sub_46a533
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_4533b1
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_4533eb
push eax
mov ecx esi
call sub_40c650
push eax
call sub_453a8b
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46a5df
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x8 ] 0x0
mov eax 0x1
jbe r-xdata
push eax
call sub_468a72
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_40c650
sub_46a604
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_4533b1
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_4533eb
push eax
mov ecx esi
call sub_40c650
push eax
call sub_453abd
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46a6e1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa4
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
push edi
mov eax 0x400
lea ecx [ esp + 0x24 ]
call sub_4013c0
push 0x20000
call sub_4115d7
add esp 0x4
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_43652f
push 0x20000
call sub_4115d7
add esp 0x4
push eax
lea edx [ esp + 0x64 ]
push edx
call sub_43652f
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ebx eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x18 ] ebx
call sub_40bc70
lea edi [ esp + 0x68 ]
call sub_40d330
mov edi r--data
lea esi [ esp + 0x3c ]
call sub_401b10
push esi
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x70 ]
push eax
call sub_46906d
mov ecx esi
call sub_402250
push ebx
lea ecx [ esp + 0x6c ]
push ecx
call sub_460bba
mov edx [ esp + 0x14 ]
xor esi esi
dec edx
xor edi edi
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x10 ] esi
mov [ esp + 0x5c ] edx
cmp [ ebx + 0x4 ] esi
jle r-xdata
cmp edi [ ebx + 0x4 ]
jge r-xdata
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ebx [ ebp + 0xc ]
call sub_40e710
lea ecx [ esp + 0x3c ]
call sub_430e4d
lea edi [ esp + 0x68 ]
call sub_401380
lea ecx [ esp + 0x4c ]
call sub_402250
lea eax [ esp + 0x60 ]
push eax
call sub_436508
lea ecx [ esp + 0x1c ]
push ecx
call sub_436508
lea ecx [ esp + 0x24 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
or eax 0xffffffff
mov ebx edi
lea ecx [ esp + 0x28 ]
call sub_40bd80
sub esp 0x8
mov [ esp ] edi
mov [ esp + 0x4 ] 0xffffffff
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x74 ]
push ecx
call sub_454224
cmp eax esi
jle r-xdata
mov edx [ esp + 0x40 ]
mov eax [ edx ]
mov esi [ eax ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x14 ] eax
mov eax esi
push ebx
sub eax edi
mov ebx edi
lea ecx [ esp + 0x28 ]
call sub_40bd80
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
push esi
lea ecx [ edi + esi ]
push ebx
mov [ esp + 0x3c ] ecx
call sub_4364e6
cmp [ eax ] 0x25
jne r-xdata
push esi
push ebx
call sub_4364e6
cmp [ eax ] 0x5c
jne r-xdata
lea edx [ esi + 0x1 ]
push edx
push ebx
call sub_4364e6
cmp [ eax ] 0x25
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx [ esp + 0x5c ]
je r-xdata
inc esi
push esi
push ebx
call sub_4364e6
movzx eax [ eax ]
add eax 0xffffffa4
cmp eax 0x18
ja r-xdata
push 0x25
lea eax [ esp + 0x28 ]
call sub_403020
jmp r-xdata
mov edx [ esp + 0x34 ]
mov edi edx
cmp edx [ ebx + 0x4 ]
jl r-xdata
inc [ esp + 0x10 ]
push edi
push esi
push ebx
lea edx [ esp + 0x58 ]
push edx
call sub_461465
mov edi [ esp + 0x50 ]
dec edi
lea esi [ esp + 0x4c ]
call sub_401c90
movzx eax [ eax ]
add eax 0xffffffbb
cmp eax 0x33
ja r-xdata
movzx eax [ eax + lookup_table_46aa21 ]
jmp [ eax * 4 + jump_table_46aa0d ]
xor esi esi
mov edi [ esp + 0x1c ]
lea eax [ esp + 0x24 ]
call sub_40d200
movzx eax [ eax + lookup_table_46aa4d ]
jmp [ eax * 4 + jump_table_46aa3d ]
push 0xa
lea eax [ esp + 0x28 ]
call sub_403020
jmp r-xdata
push 0xd
lea eax [ esp + 0x28 ]
call sub_403020
jmp r-xdata
push 0x9
lea eax [ esp + 0x28 ]
call sub_403020
jmp r-xdata
push 0x5c
lea eax [ esp + 0x28 ]
call sub_403020
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x10 ]
mov ecx [ edx + eax * 4 ]
call sub_40c650
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x1c ]
push eax
push ecx
push edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov ecx [ ecx + edx * 4 ]
call sub_40baa0
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x1c ]
sub esp 0x8
fstp [ esp ]
push eax
push ecx
call sub_41329b
add esp 0x10
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + ecx * 4 ]
push 0xffff
push eax
call sub_45340c
mov esi [ esp + 0x64 ]
push eax
push esi
call sub_412fba
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x28 ]
add esp 0xc
push esi
xor edx edx
push eax
mov [ esi + 0x1fffe ] dx
push ecx
call sub_41329b
add esp 0xc
sub_46aa26
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x4
add al 0x2
add al 0x3
lea ecx [ ecx ]
push ds
test eax 0xa8ff0046
inc esi
add [ edx - 0x57 ] cl
inc esi
add [ ecx + ebp * 4 + 0x3000046 ] cl
add [ ebx ] al
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add al [ ebx ]
add [ ebx ] eax
add eax [ ecx ]
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jb r-xdata
mov ecx [ ebp + 0xc ]
push esi
push ecx
call sub_453132
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi 0x1
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
mov edi eax
cmp edi 0x1
jl r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
call sub_4541a8
push esi
push ebx
call sub_45f645
jmp r-xdata
cmp edi 0x4
jle r-xdata
mov esi [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
push esi
push edx
call sub_453132
mov ecx [ ebp - 0x10 ]
push esi
push ecx
push eax
call sub_410e60
add esp 0xc
lea esi [ ebp - 0x10 ]
call sub_401350
cmp edi 0x1
je r-xdata
lea esi [ ebp - 0x10 ]
call sub_40d370
cmp edi 0x1
jne r-xdata
cmp edi 0x4
je r-xdata
add esi esi
push esi
cmp edi 0x2
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_453132
mov ebx [ ebx ]
xor edx edx
mov edi eax
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_453132
mov ecx [ ebx ]
push esi
push ecx
push eax
call sub_410e60
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
sub eax ebx
lea ebx [ ebx ]
movzx ebx [ ecx + 0x1 ]
mov [ eax + ecx ] bl
movzx ebx [ ecx ]
mov [ edi + edx + 0x1 ] bl
add edx 0x2
add ecx 0x2
cmp edx esi
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ab9c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov [ esp + 0x10 ] ecx
call sub_4680ed
mov ebx [ esi + 0x4 ]
mov ecx [ ebx ]
push ecx
mov edi eax
call sub_443106
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jb r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
push 0x1
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx 0x1
mov ecx [ ebx + 0x4 ]
call sub_40c650
mov ebx eax
cmp ebx 0x1
jl r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
call sub_460a29
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_403af0
jmp r-xdata
cmp ebx 0x4
jle r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
lea esi [ esp + 0x20 ]
call sub_401350
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x2
je r-xdata
mov ecx esi
and ecx 0x80000001
jns r-xdata
cmp ebx 0x3
jne r-xdata
je r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
cmp ebx 0x1
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
lea eax [ esp + 0x24 ]
push eax
call sub_442ee0
push esi
push edi
lea ecx [ esp + 0x28 ]
push ecx
call sub_45412d
mov eax esi
lea ecx [ esp + 0x10 ]
call sub_4013c0
cmp ebx 0x1
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp ebx 0x2
jne r-xdata
push esi
call sub_4115d7
add esp 0x4
xor ecx ecx
mov ebx eax
test esi esi
jle r-xdata
mov eax esi
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov eax esi
lea ecx [ esp + 0x20 ]
call sub_4013c0
push 0x0
mov eax esi
mov ebx edi
lea ecx [ esp + 0x24 ]
call sub_403b70
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e6a0
mov ecx edi
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov eax esi
lea ecx [ esp + 0x20 ]
call sub_4013c0
push 0x0
mov eax esi
lea ecx [ esp + 0x24 ]
call sub_403b70
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e6a0
push ebx
call sub_4111dc
add esp 0x4
mov ecx edi
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx ebx
sub edx edi
mov eax edi
mov [ esp + 0xc ] edx
jmp r-xdata
movzx edx [ eax + 0x1 ]
mov edi [ esp + 0xc ]
mov [ edi + eax ] dl
movzx edx [ eax ]
mov [ ebx + ecx + 0x1 ] dl
add ecx 0x2
add eax 0x2
cmp ecx esi
jl r-xdata
sub_46adb6
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4680ed
mov esi [ edi + 0x4 ]
mov ecx [ esi ]
push ecx
mov [ ebp - 0x4 ] eax
call sub_443106
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
or ebx 0xffffffff
call sub_40c650
cmp [ edi + 0x8 ] 0x2
lea esi [ eax - 0x1 ]
jbe r-xdata
mov eax [ ebp + 0x8 ]
cmp esi eax
jg r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov ebx eax
mov esi eax
test esi esi
jns r-xdata
sub eax esi
mov ebx eax
mov ecx eax
sub ecx esi
cmp ebx ecx
jle r-xdata
test ebx ebx
js r-xdata
mov edx [ ebp + 0xc ]
push ebx
push edx
call sub_453132
add esi [ ebp - 0x4 ]
push ebx
push esi
push eax
call sub_410e60
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ae3d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
push ecx
call sub_4680ed
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_443106
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46ae76
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
call sub_40c650
lea ecx [ esi + 0x468 ]
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
test eax eax
jns r-xdata
sub esp 0x8
fstp [ esp ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
call sub_44a397
push ecx
lea eax [ ebp - 0x4 ]
mov [ esp ] 0x0
call sub_40f1d0
test al al
je r-xdata
fadd [ r--data ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax esi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx 0x18
push ecx
call sub_432614
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call sub_432631
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_45740d
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x4 ]
push esi
mov [ ebp + 0xb ] 0x0
call sub_443d61
push esi
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call sub_44b785
test al al
jne r-xdata
call sub_45340c
or ecx 0xffffffff
mov ebx eax
call sub_40f6f0
mov ebx eax
push ebx
mov [ ebp + 0xb ] 0x1
call sub_413530
add esp 0x4
call sub_4680ed
mov edx [ edi + 0x4 ]
mov ebx eax
mov eax [ edx + 0x4 ]
push eax
call sub_443106
jmp r-xdata
push ebx
call sub_4111dc
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
push eax
push ebx
push ecx
call sub_443561
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
cmp [ ebp + 0xb ] 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
je r-xdata
add esp 0x4
sub_46afc3
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov eax r--data
mov ebx esi
mov [ ebp - 0x4 ] edi
call sub_40e710
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
mov [ ebp + 0xf ] 0x0
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_442f4c
mov [ ebp + 0xf ] al
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp + 0xb ] 0x0
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_442f4c
mov [ ebp + 0xb ] al
jmp r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax edi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call sub_44b5e8
test al al
je r-xdata
mov eax [ edi + 0x474 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x474 ]
push ecx
call sub_4326ed
mov edx [ edi ]
mov [ edi + 0x474 ] 0x0
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xf ] 0x0
je r-xdata
mov edx [ edi + 0x474 ]
push esi
push edx
call sub_468162
mov [ ebp + 0xc ] eax
mov ebx eax
mov ecx [ edi + 0x474 ]
push 0x1
push esi
push ecx
call sub_46810f
mov ebx eax
mov [ ebp + 0xc ] ebx
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push ebx
add eax edi
call sub_403cd0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x14 ]
call sub_40bc70
push ebx
push esi
call sub_4680ed
push eax
call sub_43299a
mov edi eax
add esp 0x8
mov eax ebx
push 0x0
mov ebx edi
lea ecx [ ebp - 0x14 ]
call sub_403b70
push edi
call sub_4111dc
add esp 0x4
lea edi [ ebp - 0x14 ]
call sub_40e6a0
mov ecx edi
call sub_402250
mov edi [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
cmp [ ebp + 0xb ] 0x0
jne r-xdata
sub_46b10f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov eax r--data
mov ebx esi
call sub_40e710
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40baa0
fstp [ ebp - 0x8 ]
mov ebx [ edi + 0x8 ]
cmp ebx 0x1
jbe r-xdata
mov [ ebp + 0x13 ] 0x0
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_442f4c
mov [ ebp + 0x13 ] al
jmp r-xdata
mov [ ebp + 0xf ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_442f4c
mov [ ebp + 0xf ] al
jmp r-xdata
cmp ebx 0x2
jbe r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edi [ ebp - 0x4 ]
mov ecx [ edi ]
call [ ebp + 0x1c ]
test al al
je r-xdata
mov ebx [ ebp + 0x8 ]
fld [ ebp - 0x8 ]
sub esp 0x8
lea eax [ ebx + 0x468 ]
fstp [ esp ]
push eax
lea edx [ ebp - 0x4 ]
push edx
mov [ ebp - 0xc ] eax
call sub_44a397
push ecx
lea eax [ ebp - 0x4 ]
mov [ esp ] 0x0
call sub_40f1d0
test al al
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
cmp [ ebp + 0x13 ] 0x0
mov ecx [ edi ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
push edx
push eax
call sub_45740d
push esi
call [ ebp + 0x18 ]
mov [ ebp + 0x10 ] eax
mov edi eax
push 0x1
push esi
call [ ebp + 0x14 ]
mov edi eax
mov [ ebp + 0x10 ] edi
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push edi
add eax ebx
call sub_403cd0
mov edi [ ebp - 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40bc70
push edi
push esi
call sub_4680ed
push eax
call sub_43299a
add esp 0x8
mov ebx eax
push 0x0
mov eax edi
lea ecx [ ebp - 0x1c ]
call sub_403b70
push ebx
call sub_4111dc
add esp 0x4
lea edi [ ebp - 0x1c ]
call sub_40e6a0
mov ecx edi
call sub_402250
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edi [ edi ]
push edi
call sub_44b785
test al al
jne r-xdata
sub_46b280
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
push ebx
push esi
push edi
push 0x8002
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] 0x0
call sub_4115d7
add esp 0x4
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_43652f
lea ecx [ esp + 0x40 ]
mov [ esp + 0x20 ] 0x3fff
call sub_40bc70
lea ecx [ esp + 0x30 ]
call sub_40bc70
lea ecx [ esp + 0x50 ]
call sub_40bc70
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b10
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea edx [ esp + 0x58 ]
push edx
call sub_463980
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x48 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
inc [ ecx ]
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_46379b
test al al
jne r-xdata
lea ecx [ esp + 0x40 ]
push ecx
call sub_436565
test al al
mov eax [ esp + 0x18 ]
jne r-xdata
push 0x0
push 0x2
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x54 ]
or edx 0x20019
push edx
push 0x0
push ecx
push eax
call [ RegOpenKeyExW@IAT ]
push 0x0
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
lea edx [ esp + 0x10 ]
push edx
push eax
push ecx
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
push 0x0
lea eax [ esp + 0x2c ]
push eax
mov eax [ esp + 0x34 ]
push 0x0
lea edx [ esp + 0x30 ]
push edx
push eax
call sub_40c650
mov ecx [ esp + 0x2c ]
dec eax
push eax
push ecx
call [ RegEnumValueW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x1
add eax ecx
call sub_403c90
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push 0x0
push 0x3
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
push ebx
call sub_4530e8
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x24 ]
mov edx [ ecx ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403cd0
mov eax [ esp + 0x14 ]
mov esi [ RegCloseKey@IAT ]
push eax
call esi
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax ecx
call sub_403c90
mov eax [ esp + 0x14 ]
mov esi [ RegCloseKey@IAT ]
push eax
call esi
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea eax [ esp + 0x28 ]
push eax
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403c90
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x28 ]
push ecx
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call esi
jmp r-xdata
sub_46b4cf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
push ebx
push esi
mov [ esp + 0xc ] ecx
push edi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] 0xff
call sub_40bc70
lea ecx [ esp + 0x20 ]
call sub_40bc70
lea ecx [ esp + 0x48 ]
call sub_40bc70
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b10
lea ecx [ esp + 0x58 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x50 ]
push eax
call sub_463980
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x38 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x3c ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
inc [ ecx ]
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_46379b
test al al
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
call sub_436565
test al al
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_403c90
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_402250
lea ecx [ esp + 0x20 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea edx [ esp + 0x58 ]
push edx
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x40 ]
push eax
lea edx [ esp + 0x74 ]
push edx
call sub_40c650
dec eax
push eax
mov eax [ esp + 0x38 ]
push eax
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
jmp r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax ecx
call sub_403c90
jmp r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ esp + 0x60 ]
call sub_40e710
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax ecx
call sub_403c90
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x4c ]
or edx 0x20019
push edx
push 0x0
push ecx
push eax
call [ RegOpenKeyExW@IAT ]
mov esi [ RegCloseKey@IAT ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ esp + 0x1c ]
push eax
call esi
sub_46b6ab
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ebx ecx
push edi
lea ecx [ esp + 0x50 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] 0x0
call sub_40bc70
lea ecx [ esp + 0x30 ]
call sub_40bc70
lea ecx [ esp + 0x40 ]
call sub_40bc70
lea ecx [ esp + 0x60 ]
call sub_40bc70
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b10
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_463980
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
sub esp 0x10
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp ] edx
mov edx [ esp + 0x48 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edi 0x1
add [ ecx ] edi
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_46379b
test al al
jne r-xdata
lea eax [ esp + 0x50 ]
push eax
call sub_436565
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jmp r-xdata
mov edi [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x50 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x60 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
lea ecx [ esp + 0x50 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x20 ]
dec eax
je r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
call sub_403cd0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov eax [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebx ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_403cd0
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jmp r-xdata
mov edx [ esp + 0x10 ]
push esi
push edx
call sub_441c7b
mov [ esp + 0x17 ] al
mov eax [ esp + 0x18 ]
add esp 0x8
push eax
call [ RegCloseKey@IAT ]
cmp [ esp + 0xf ] 0x0
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
or ecx 0x2001f
push ecx
push 0x0
push edx
push edi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
xor eax eax
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] eax
call sub_430cb1
test al al
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_45340c
mov ecx [ esp + 0x10 ]
push eax
push ecx
call [ RegDeleteValueW@IAT ]
test eax eax
je r-xdata
push eax
call [ RegCloseKey@IAT ]
mov edx [ esp + 0x40 ]
push edx
push edi
call [ RegDeleteKeyW@IAT ]
mov eax [ esp + 0x40 ]
push 0x0
push esi
push eax
push edi
lea ecx [ esp + 0x34 ]
push ecx
call sub_441c58
call eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
lea edx [ esp + 0x24 ]
push edx
call sub_430ccb
push 0x0
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
call sub_403cd0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2
test eax eax
je r-xdata
mov edx [ ebx ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax ebx
call sub_403cd0
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x2
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
jmp r-xdata
mov [ esi + 0x8 ] 0x1
sub_46b9d7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
push ebx
push esi
mov [ esp + 0x8 ] ecx
push edi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x14 ] 0x0
call sub_40bc70
lea ecx [ esp + 0x30 ]
call sub_40bc70
lea ecx [ esp + 0x50 ]
call sub_40bc70
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x20 ] eax
cmp eax 0x1
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b10
lea ecx [ esp + 0x60 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x58 ]
push eax
call sub_463980
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x48 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x2c ]
mov edi 0x1
add [ ecx ] edi
push eax
call sub_46379b
test al al
jne r-xdata
cmp eax 0x4
je r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_436565
test al al
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x40 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x20 ] edi
jbe r-xdata
mov esi [ esp + 0xc ]
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403cd0
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push edi
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov eax [ esp + 0x14 ]
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
mov esi [ esp + 0xc ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403cd0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax esi
jmp r-xdata
mov eax [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push eax
call esi
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
mov eax [ ebx + 0x4 ]
jne r-xdata
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x58 ]
push 0x0
or ecx 0x20006
push ecx
push 0x0
push r--data
push 0x0
push edx
push eax
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jmp r-xdata
push eax
call esi
mov eax [ eax + 0x8 ]
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
mov ecx [ ebx + 0x4 ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push eax
call sub_45340c
push eax
call sub_4111c1
mov ebx [ ebx + 0x4 ]
mov ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x4 ]
add esp 0x4
lea eax [ eax + eax + 0x2 ]
push eax
push ecx
call sub_45340c
push eax
push 0x2
push 0x0
push ebx
call sub_45340c
mov ecx [ esp + 0x20 ]
push eax
push ecx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
push eax
call sub_45340c
push eax
call sub_4111c1
mov ebx [ ebx + 0x4 ]
mov ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x4 ]
add esp 0x4
lea eax [ eax + eax + 0x2 ]
push eax
push ecx
call sub_45340c
push eax
push edi
push 0x0
push ebx
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_4533b1
mov esi eax
xor ecx ecx
lea eax [ esi + 0x2 ]
mov [ esp + 0x20 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0xc ]
add esp 0x4
lea ecx [ esi + 0x1 ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_433244
xor edx edx
add esp 0xc
xor eax eax
mov [ edi + esi * 2 ] edx
test esi esi
je r-xdata
mov ecx [ esp + 0xc ]
push 0x0
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
push 0x4
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x4
push 0x0
push eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
lea ecx [ esi + esi ]
push ecx
push edi
push 0x7
push 0x0
push eax
call sub_45340c
mov edx [ esp + 0x20 ]
push eax
push edx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
lea ebx [ ebx ]
add eax ecx
call sub_403cd0
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_443006
push 0x8
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x4 ]
push 0xb
mov [ esp + 0x30 ] edx
mov eax [ eax + 0x4 ]
push 0x0
push eax
jmp r-xdata
call sub_45340c
mov edx [ esp + 0x20 ]
push eax
push edx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
push edi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0xc ]
push 0x0
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
call sub_403cd0
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
inc eax
cmp eax esi
jb r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] edi
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_4680ed
mov ebx [ ebx + 0x4 ]
mov esi eax
mov eax [ ebx + 0xc ]
mov ebx [ ebx + 0x4 ]
push eax
call sub_443106
push eax
push esi
push 0x3
push 0x0
push ebx
call sub_45340c
push eax
mov eax [ esp + 0x24 ]
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
cmp [ edi + eax * 2 ] 0xa
jne r-xdata
test esi esi
je r-xdata
mov esi [ esp + 0x20 ]
sub_46beb2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
push ebx
push esi
mov [ esp + 0x10 ] ecx
push edi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x18 ] 0x0
call sub_40bc70
lea ecx [ esp + 0x30 ]
call sub_40bc70
lea ecx [ esp + 0x50 ]
call sub_40bc70
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b10
lea edx [ esp + 0x60 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
call sub_463980
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
sub esp 0x10
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp ] edx
mov edx [ esp + 0x48 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
inc [ ecx ]
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
call sub_46379b
test al al
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_436565
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_403c90
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x40 ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0xc ]
push ecx
push 0x0
lea edx [ esp + 0x28 ]
push edx
push 0x0
push eax
call sub_45340c
mov edi [ RegQueryValueExW@IAT ]
push eax
mov eax [ esp + 0x24 ]
push eax
call edi
mov esi [ esp + 0x14 ]
push 0x0
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403cd0
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
jmp r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403cd0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax esi
call sub_403c90
jmp r-xdata
mov edx [ esi ]
mov ecx [ esp + 0x24 ]
mov eax [ edx + 0x4 ]
push ecx
add eax esi
call sub_403cd0
mov eax [ esp + 0x20 ]
dec eax
cmp eax 0x6
ja r-xdata
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403cd0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_403c90
mov eax [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push eax
call esi
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
jmp r-xdata
push eax
call [ RegCloseKey@IAT ]
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x54 ]
or edx 0x20019
push edx
push 0x0
push ecx
push eax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_403c90
jmp [ eax * 4 + jump_table_46c34a ]
jmp r-xdata
push eax
call esi
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
add esp 0x4
lea edx [ esp + 0xc ]
push edx
push eax
push 0x0
push 0x0
push ecx
mov [ esp + 0x30 ] eax
call sub_45340c
push eax
mov eax [ esp + 0x24 ]
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
add eax 0x2
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0xc ]
push edx
push edi
push 0x0
push 0x0
push eax
call sub_45340c
push eax
mov eax [ esp + 0x24 ]
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0xc ] 0x4
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push 0x0
push 0x0
push eax
call sub_45340c
push eax
mov eax [ esp + 0x24 ]
push eax
call edi
fild [ esp + 0x2c ]
mov ecx [ esp + 0x2c ]
test ecx ecx
jns r-xdata
mov edx [ esp + 0xc ]
push edx
push ebx
call sub_453132
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
lea edx [ esp + 0xc ]
push edx
push eax
push 0x0
push 0x0
push ecx
call sub_45340c
push eax
mov eax [ esp + 0x24 ]
push eax
call edi
test eax eax
je r-xdata
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403cd0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_403c90
mov esi [ esp + 0x1c ]
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xc ]
mov esi [ esp + 0x1c ]
shr eax 0x1
mov [ esp + 0xc ] eax
xor ecx ecx
mov [ esi + eax * 2 ] cx
mov eax esi
call sub_40e710
push esi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403cd0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_403c90
push edi
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0xc ] eax
mov [ edi + eax * 2 ] cx
mov ecx [ esp + 0xc ]
cmp ecx 0x1
jbe r-xdata
mov esi ebx
fstp [ esp + 0x24 ]
call sub_408f40
fld [ esp + 0x24 ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
jmp r-xdata
fadd [ r--data ]
mov ecx [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403cd0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_403c90
mov esi ebx
call sub_408f40
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
jmp r-xdata
mov eax edi
call sub_40e710
push edi
call sub_4111dc
add esp 0x4
jmp r-xdata
cmp [ edi + ecx * 2 - 0x2 ] 0x0
jne r-xdata
xor eax eax
test ecx ecx
je r-xdata
dec ecx
mov [ esp + 0xc ] ecx
cmp [ edi + eax * 2 - 0x2 ] 0xa
jne r-xdata
cmp [ edi + eax * 2 ] 0x0
jne r-xdata
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
inc eax
cmp eax ecx
jb r-xdata
mov edx 0xa
mov [ edi + eax * 2 ] dx
mov ecx [ esp + 0xc ]
sub_46c366
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp + 0xc ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_465124
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov esi [ ebp + 0x10 ]
call sub_40d7c0
mov eax [ ebp - 0x8 ]
call sub_40f410
xor ebx ebx
mov esi eax
mov [ ebp - 0x8 ] esi
cmp [ ebp + 0x8 ] ebx
jle r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi 0xc
mov [ ebp + 0xc ] edi
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40bc70
test ebx ebx
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edi + ecx ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + edi ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_402250
mov edx [ eax ]
push edx
lea esi [ ebp - 0x1c ]
call sub_40e0a0
mov edi esi
mov esi [ ebp + 0x10 ]
call sub_40d7c0
add [ ebp + 0xc ] 0x4
mov ecx edi
call sub_402250
inc ebx
cmp ebx [ ebp + 0x8 ]
jl r-xdata
add edi 0x4
mov [ ebp + 0xc ] edi
mov edi [ ebp + 0xc ]
mov esi [ ebp - 0x8 ]
sub_46c43e
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
cmp eax 0xf
ja r-xdata
mov edi [ edi + 0x14 ]
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_46c5ba ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_413748
add esp 0x4
mov eax [ edi ]
push 0xffffffff
push eax
call sub_43299a
add esp 0x8
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_40e710
mov ecx [ ebp + 0xc ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
mov eax [ edi ]
mov ebx esi
call sub_40e710
jmp r-xdata
mov ebx [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov ebx [ edi ]
call sub_408f40
xor eax eax
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
movsx ebx [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
jmp r-xdata
movzx ebx [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
jmp r-xdata
movzx ebx [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
jmp r-xdata
fld [ edi ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
jmp r-xdata
fld [ edi ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
jmp r-xdata
mov ebx [ edi ]
call sub_408f40
mov [ esi + 0x8 ] 0x7
mov [ esi ] ebx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ebx [ edi ]
mov [ ebp - 0x4 ] edx
call sub_408f40
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov ebx [ edi ]
mov [ ebp - 0x4 ] ecx
call sub_408f40
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edx
jmp r-xdata
mov ecx [ edi ]
lea edx [ ebp - 0x18 ]
mov eax 0x9
mov [ ebp - 0x10 ] ecx
push edx
mov ecx esi
mov [ ebp - 0x18 ] ax
call sub_468070
sub_46c5fa
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov ebx ecx
call sub_45340c
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
push 0x0
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x14 ] 0x1
call [ CoInitialize@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0x14 ] 0x0
jbe r-xdata
call [ CoUninitialize@IAT ]
lea ecx [ esp + 0x30 ]
push ecx
push edi
call [ CLSIDFromProgID@IAT ]
test eax eax
jns r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
cmp [ eax + 0x8 ] 0xa
mov [ esp + 0x10 ] eax
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push r--data
push 0x17
push 0x0
lea ecx [ esp + 0x40 ]
push ecx
mov [ esp + 0x20 ] 0x0
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
lea edx [ esp + 0x30 ]
push edx
push edi
call [ CLSIDFromString@IAT ]
test eax eax
js r-xdata
push eax
call sub_442f4c
movzx eax al
mov [ esp + 0x10 ] eax
push eax
call sub_44cecd
test al al
je r-xdata
push 0x0
push r--data
push 0x0
push 0x1
push ebx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esp + 0xc ]
push edi
call sub_43119b
add esp 0x4
mov [ esp + 0x14 ] 0x1
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_44b3ac
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov [ esp + 0xc ] edi
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x40 ]
push eax
push ecx
call [ IIDFromString@IAT ]
test eax eax
jns r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
push r--data
push eax
push 0x3
push ebx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x8 ]
cmp [ esi + 0x8 ] 0xa
jne r-xdata
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x44 ]
mov [ esp + 0x10 ] 0x0
mov ecx [ edi ]
mov ecx [ ecx ]
push eax
push edi
call ecx
test eax eax
jns r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0x28
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
mov [ esp + 0x28 ] edx
jmp r-xdata
push esi
call sub_45340c
mov [ esp + 0x18 ] eax
push esi
call sub_44cecd
test al al
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0x0
push r--data
push 0x0
push 0x2
push ebx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
call eax
mov [ esp + 0x28 ] 0x0
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push esi
push edx
push eax
call sub_44cb87
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_468070
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
call eax
mov ecx 0x9
mov [ esp + 0x20 ] cx
test esi esi
jne r-xdata
sub_46c84c
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
push 0x20
lea edx [ ebp - 0x80 ]
xor eax eax
push ebx
push edx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x20404
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xc0
mov [ ebp - 0x14 ] 0x46000000
call sub_412f40
add esp 0xc
cmp edi ebx
je r-xdata
push 0x1
push r--data
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp esi ebx
je r-xdata
push esi
call sub_432416
test al al
jne r-xdata
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp [ eax ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push r--data
push ebx
push 0x1
push eax
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
push 0x1
push r--data
push ebx
push 0x2
push edx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0x8
jne r-xdata
mov edi [ eax + 0x8 ]
lea edx [ ebp - 0x40 ]
push edx
call [ VariantInit@IAT ]
lea eax [ ebp - 0x40 ]
push eax
call [ VariantClear@IAT ]
mov ecx [ edi ]
mov ecx [ ecx + 0xc ]
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x40 ]
push eax
push 0x1
push edi
call ecx
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
push r--data
jmp r-xdata
mov edi [ eax + 0x8 ]
cmp edi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp edi 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push 0x1
push ecx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ edi ]
mov ecx [ ecx + 0x14 ]
lea edx [ ebp + 0x10 ]
push edx
push 0x400
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push r--data
push edi
call ecx
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push r--data
push ebx
push 0x2
push eax
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx 0x1
mov [ ebp - 0x40 ] cx
call sub_408f40
lea edx [ ebp - 0x40 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
push edx
cmp edi 0x1
je r-xdata
call sub_408f40
mov edx [ ebp + 0x8 ]
push 0x1
push ebx
push ebx
push edi
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x400
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
push r--data
push edi
call edx
test eax eax
js r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
jmp r-xdata
mov [ ebp + 0x10 ] 0xfffffffc
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
push 0x10
call sub_410e53
mov [ ebp - 0xc ] eax
mov [ ebp - 0x30 ] eax
add esp 0x4
lea eax [ ebp - 0x60 ]
push eax
mov [ ebp - 0x28 ] ebx
call [ VariantInit@IAT ]
mov ecx [ edi ]
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x80 ]
push eax
lea edx [ ebp - 0x60 ]
push edx
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ecx + 0x18 ]
push 0x3
push 0x800
push r--data
push edx
push edi
call eax
mov ecx [ ebp - 0xc ]
push ecx
mov edi eax
call sub_41351d
add esp 0x4
cmp edi ebx
jge r-xdata
mov ecx [ ebp + 0x14 ]
call sub_468070
lea eax [ ebp - 0x40 ]
push eax
call [ VariantClear@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x58 ]
cmp eax ebx
je r-xdata
push 0x1
push ebx
cmp edi 0x80020009
jne r-xdata
mov edx 0xd
mov [ ebp - 0x50 ] dx
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x20 ]
push edx
mov edi eax
push eax
mov eax [ ecx ]
call eax
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
mov [ ebp - 0xc ] eax
call edx
mov eax [ ebp - 0x48 ]
mov edi eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push edi
push ecx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x80 ]
push edx
push edi
push eax
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ eax ]
push eax
mov eax [ edx + 0x14 ]
call eax
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx esi
call sub_468070
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
call eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x1
push ebx
push ebx
push eax
push ecx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46cb5f
push ebp
mov ebp esp
sub esp 0xbc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x1c ]
xor esi esi
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x1c ] esi
call sub_40bc70
lea ecx [ ebp - 0x64 ]
call sub_40bc70
lea ecx [ ebp - 0x88 ]
call sub_40bc70
xor eax eax
mov [ ebp - 0x1c ] esi
mov esi edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_408f40
cmp [ rw-data ] 0x0
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xa8 ]
push eax
push esi
call [ CLSIDFromProgID@IAT ]
test eax eax
jns r-xdata
push 0x0
call [ OleInitialize@IAT ]
mov [ rw-data ] 0x1
mov eax 0x9
mov [ ebp - 0x78 ] ax
mov eax [ ebp + 0x10 ]
lea edx [ ebp - 0xa8 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0xa8 ]
push ecx
push esi
call [ CLSIDFromString@IAT ]
test eax eax
jns r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
push ebx
push edx
push eax
push esi
call sub_458651
mov esi eax
add esp 0x14
test esi esi
js r-xdata
lea ecx [ ebp + 0x1c ]
push ecx
push r--data
push 0x5
push eax
push edx
call [ CoCreateInstance@IAT ]
mov esi eax
test esi esi
js r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push eax
push edx
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push esi
push ecx
jmp r-xdata
xor esi esi
push esi
push esi
push esi
push 0x3
push 0x2
push esi
push esi
push 0xffffffff
push esi
call [ CoInitializeSecurity@IAT ]
push 0x10
lea eax [ ebp - 0x98 ]
push esi
push eax
call sub_412f40
mov edx [ ebp + 0x10 ]
add esp 0xc
lea ecx [ ebp - 0x94 ]
push ecx
push edx
call sub_4311fc
add esp 0x8
cmp ebx esi
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
call sub_43119b
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
add esp 0x4
lea edx [ ebp - 0x70 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov esi eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call sub_451b42
lea ecx [ ebp - 0x88 ]
mov esi eax
call sub_402250
lea ecx [ ebp - 0x64 ]
call sub_402250
lea ecx [ ebp - 0x2c ]
call sub_402250
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ ebp - 0x90 ] esi
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x3c ] 0x1
call sub_402160
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_431a2b
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea edx [ ebp - 0x78 ]
push edx
mov ecx edi
call sub_468070
mov eax [ ebp - 0x70 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x88 ]
call sub_402250
lea ecx [ ebp - 0x64 ]
call sub_402250
lea ecx [ ebp - 0x2c ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov esi [ ebp - 0x30 ]
test esi esi
js r-xdata
push ebx
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call sub_465177
push eax
lea esi [ ebp - 0x64 ]
call sub_40e0a0
lea ecx [ ebp - 0xb8 ]
call sub_402250
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x60 ]
push 0xffffffff
inc ebx
push ebx
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4c ] edx
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x48 ] eax
call sub_46150f
push eax
lea esi [ ebp - 0x88 ]
call sub_40e0a0
lea ecx [ ebp - 0xb8 ]
call sub_402250
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] ecx
xor esi esi
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] edx
jmp r-xdata
cmp [ ebp - 0x90 ] 0x0
je r-xdata
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] esi
push eax
mov [ ebp - 0x44 ] eax
call sub_4111c1
add esp 0x4
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0x34 ]
mov edx 0x9
mov [ ebp - 0x78 ] dx
mov [ ebp - 0x70 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
push 0x800
lea ecx [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x34 ]
push edx
push eax
push ecx
call [ CoSetProxyBlanket@IAT ]
mov esi eax
push 0xc
lea ecx [ ebp - 0x38 ]
push esi
push ecx
mov [ ebp - 0x70 ] esi
call sub_412f40
mov edx [ ebp - 0x70 ]
add esp 0xc
lea eax [ ebp - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x98 ]
push ecx
push 0x15
mov [ ebp - 0x34 ] edx
push esi
lea edx [ ebp - 0xa8 ]
push edx
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x30 ] esi
call [ CoCreateInstanceEx@IAT ]
mov esi eax
mov eax [ ebp - 0x94 ]
push eax
call [ CoTaskMemFree@IAT ]
test esi esi
js r-xdata
lea edx [ ebp - 0x54 ]
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x2
mov [ ebp - 0x1c ] 0x9
mov [ ebp - 0xc ] 0x3
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x90 ] eax
xor esi esi
jmp r-xdata
test esi esi
jns r-xdata
push 0x1
push r--data
push eax
mov eax [ ebp + 0x8 ]
push 0x1
push eax
jmp r-xdata
sub_46cef3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx ]
push eax
call sub_45340c
lea ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] eax
call sub_40bc70
mov edx [ r--data ]
mov ax [ r--data ]
lea ecx [ esp + 0x40 ]
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] ax
call sub_40bc70
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] eax
mov eax r--data
call sub_40e710
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x14 ]
push ebx
call sub_4111c1
add esp 0x4
test eax eax
je r-xdata
push 0x0
call [ OleInitialize@IAT ]
mov [ rw-data ] 0x1
cmp [ esp + 0x20 ] 0x2
jne r-xdata
push ebx
call sub_4339fa
add esp 0x4
test al al
je r-xdata
lea edx [ esp + 0x1c ]
push edx
push 0x0
lea eax [ esp + 0x78 ]
push eax
call [ GetActiveObject@IAT ]
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x70 ]
push ecx
push eax
call sub_45340c
push eax
call [ CLSIDFromProgID@IAT ]
test eax eax
js r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x0
call [ CreateBindCtx@IAT ]
test eax eax
jns r-xdata
lea eax [ esp + 0x30 ]
call sub_402160
lea esp [ esp ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esp + 0x1c ]
mov ecx 0x9
mov [ esp + 0x50 ] cx
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x58 ]
push ecx
push r--data
push eax
call edx
mov edi eax
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test edi edi
jns r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push ebx
push eax
call [ MkParseDisplayName@IAT ]
test eax eax
js r-xdata
lea eax [ esp + 0x30 ]
push eax
call sub_436565
test al al
jne r-xdata
lea edi [ eax + 0x1 ]
push edi
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
call sub_465177
push eax
lea eax [ esp + 0x44 ]
call sub_40bd50
lea ecx [ esp + 0x60 ]
call sub_402250
push 0x5c
lea eax [ esp + 0x44 ]
call sub_403020
push 0x0
lea edx [ esp + 0x34 ]
push edx
mov eax edi
call sub_40c600
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x50 ]
push eax
call sub_468070
mov eax [ esp + 0x58 ]
push 0x0
push 0x0
push 0x0
push edi
jmp r-xdata
push 0x0
push 0x0
push 0x0
push eax
push esi
call sub_451b42
mov eax [ esp + 0x18 ]
mov ecx 0x9
mov [ esp + 0x50 ] cx
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ esp + 0x58 ]
push ecx
mov ecx [ esp + 0x14 ]
push r--data
push 0x0
push ecx
push eax
call edx
test eax eax
jns r-xdata
mov ebx [ esp + 0x40 ]
lea ecx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x44 ]
call sub_40bd50
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
call sub_431a2b
cmp eax 0xffffffff
je r-xdata
push esi
call sub_451b42
lea ecx [ esp + 0x40 ]
mov esi eax
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esp + 0x58 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push eax
push esi
call sub_451b42
mov eax [ esp + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x50 ]
push eax
call sub_468070
mov eax [ esp + 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x10 ]
jmp r-xdata
sub_46d1a6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
push edi
call sub_40c650
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4680ed
mov edx [ esi + 0x4 ]
mov ebx eax
mov eax [ edx + 0x4 ]
push eax
call sub_443106
push 0x0
push eax
push ebx
push edi
call [ Ordinal_WSOCK32_19@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov [ esi ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
mov [ esi ] 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46d230
push ebp
mov ebp esp
sub esp 0x130
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
push edi
call sub_40c650
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edi eax
call sub_40c650
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax r--data
call sub_40e710
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esi + 0x478 ]
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
sub ecx eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov [ ebp - 0x8 ] ecx
push 0x0
lea ecx [ ebp - 0x130 ]
push ecx
push 0x0
mov [ ebp - 0x12c ] edi
mov [ ebp - 0x130 ] 0x1
call [ Ordinal_WSOCK32_18@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
push edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
push eax
call sub_4115d7
add esp 0x4
lea ecx [ ebp - 0x130 ]
push ecx
push edi
mov ebx eax
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
push 0x0
push edx
push ebx
push edi
call [ Ordinal_WSOCK32_16@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x3
jb r-xdata
add eax esi
call sub_403c90
push ebx
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov [ ebx + edi ] 0x0
call sub_413530
add esp 0x4
cmp eax edi
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
push edi
push ebx
push edi
push edx
push ebx
lea edx [ ebp - 0x1c ]
push edx
call sub_444e90
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_466715
mov esi [ ebp + 0xc ]
mov edi eax
call sub_40e6a0
lea ecx [ ebp - 0x2c ]
call sub_402250
lea esi [ ebp - 0x1c ]
call sub_401350
push ebx
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push edi
push ebx
push edi
push ecx
jmp r-xdata
call sub_453132
push eax
call sub_410e60
add esp 0xc
sub_46d402
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
lea esi [ ebp - 0x14 ]
mov edi ecx
call sub_40d370
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push esi
push eax
call sub_45f645
mov eax [ ebp - 0x14 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
jne r-xdata
mov edx [ eax + 0xc ]
mov eax [ edx ]
push 0x4
push eax
lea ecx [ ebp - 0x4 ]
push ecx
call sub_410e60
mov edx [ ebp - 0x4 ]
add esp 0xc
push edx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_45213b
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_466715
mov esi [ ebp + 0xc ]
mov edi eax
call sub_40e6a0
lea ecx [ ebp - 0x24 ]
call sub_402250
lea esi [ ebp - 0x14 ]
call sub_401350
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
push eax
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ edi ]
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
call sub_401350
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46d4c2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_41539a
add eax 0x40
push eax
call sub_46888b
mov esi [ ebp + 0xc ]
add esp 0x8
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46d4fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_41539a
add eax 0x20
push eax
call sub_46888b
mov esi [ ebp + 0xc ]
add esp 0x8
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46d536
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ebx ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
cmp eax 0x2
jb r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push edi
push eax
call sub_45340c
mov edi eax
lea esi [ ebp - 0x30 ]
call sub_401b10
lea edx [ ebp - 0x5 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x2 ]
push ecx
lea edx [ ebp - 0x3 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_468d9e
test al al
mov ecx esi
sete [ ebp - 0x1 ]
call sub_402250
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push eax
call sub_45340c
push eax
push ebx
call sub_465124
test al al
jne r-xdata
cmp [ ebp - 0x10 ] 0x13
mov al [ ebp - 0x2 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x3 ] 0x0
je r-xdata
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
jmp r-xdata
test al al
je r-xdata
mov [ ebp - 0xc ] 0x4
mov [ ebp - 0x10 ] 0x3
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0xc ] 0x2
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or [ ebp - 0xc ] 0x1
mov esi [ ebp - 0x10 ]
mov eax [ ebx + 0x1b0 ]
shl esi 0x10
or esi [ ebp - 0xc ]
xor edi edi
test eax eax
je r-xdata
or [ ebp - 0xc ] 0x8
cmp [ ebp - 0x18 ] 0x1
je r-xdata
mov ecx [ ebx + 0x1ac ]
mov [ ebp - 0x14 ] ecx
xor edi edi
test eax eax
je r-xdata
add [ ebp - 0x14 ] 0x4
inc edi
cmp edi eax
jb r-xdata
mov edx [ edx ]
cmp [ edx + 0x4 ] esi
je r-xdata
push 0x28
cmp edi eax
jne r-xdata
mov ecx [ ebx + 0x1ac ]
mov edx [ ebp - 0x14 ]
mov edx [ edx ]
cmp [ edx ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
inc edi
add ecx 0x4
cmp edi eax
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
mov edi [ ecx + edi * 4 ]
push eax
call sub_4533eb
mov esi [ edi ]
push eax
add esi 0x8
call sub_40e0a0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ecx + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ rw-data ]
push edx
push eax
call [ UnregisterHotKey@IAT ]
mov ecx [ ebx + 0x1ac ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
test eax eax
je r-xdata
xor eax eax
push eax
call sub_44a79e
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
push eax
call sub_44a79e
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ ebx + 0x1ac ]
mov ecx [ eax + edi * 4 ]
pop edi
pop esi
mov [ ecx ] 0x0
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call sub_442b97
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x1ac ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x1ac ]
mov ecx [ edx + edi * 4 ]
mov [ ecx ] eax
mov edx [ ebx + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov [ ecx ] edi
mov edx [ ebx + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebx + 0x1ac ]
mov esi [ ecx + edi * 4 ]
push eax
call sub_4533eb
mov esi [ esi ]
push eax
add esi 0x8
call sub_40e0a0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov ecx [ ebx + 0x1ac ]
mov esi [ ecx + edi * 4 ]
push eax
call sub_4533eb
mov esi [ esi ]
push eax
add esi 0x18
call sub_40e0a0
mov edx [ ebx + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ eax ]
push ecx
mov ecx [ eax ]
push edx
mov edx [ rw-data ]
push ecx
push edx
call [ RegisterHotKey@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebx + 0x1a8 ]
push ecx
call sub_436299
jmp r-xdata
mov edx [ ebx + 0x1ac ]
mov eax [ edx + edi * 4 ]
push 0x0
mov [ eax ] 0x0
call [ GetLastError@IAT ]
mov ecx [ ebx ]
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_403cd0
push eax
call sub_442b97
sub_46d85a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
lea eax [ esp + 0x20 ]
mov ebx ecx
push eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] esi
call sub_460cc1
lea eax [ esi - 0x2 ]
mov [ esp + 0x18 ] 0x0
cmp eax 0x8
ja r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x5
add eax ebx
call sub_403c90
lea edx [ esp + 0x20 ]
push edx
call sub_441fb2
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_46dc46 ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x24 ]
push eax
call sub_44b3ac
mov [ esp + 0x18 ] eax
mov edx [ edi + 0x4 ]
mov esi [ edx + 0x20 ]
push esi
call sub_44cecd
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x1c ]
push esi
call sub_44cecd
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x18 ]
push esi
call sub_44cecd
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c650
test eax eax
js r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
push esi
call sub_44cecd
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
push esi
call sub_44cecd
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x4 ]
push esi
call sub_44cecd
test al al
je r-xdata
fld [ r--data ]
mov ecx esi
call sub_40c650
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fldz
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
mov ecx esi
call sub_40c650
mov [ esp + 0x2c ] eax
or [ esp + 0x30 ] 0x80
jmp r-xdata
mov ecx esi
call sub_40c650
mov [ esp + 0x28 ] eax
or [ esp + 0x30 ] 0x40
jmp r-xdata
or [ esp + 0x30 ] 0x20
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x14 ]
push esi
call sub_44cecd
test al al
jne r-xdata
or [ esp + 0x30 ] 0x10
mov edx [ edi + 0x4 ]
mov esi [ edx + 0x10 ]
push esi
call sub_44cecd
test al al
jne r-xdata
push esi
call sub_45340c
movzx esi [ eax ]
test si si
je r-xdata
xor ecx ecx
mov [ esp + 0x40 ] cx
push esi
call sub_4533eb
push eax
lea esi [ esp + 0x58 ]
call sub_40e0a0
mov ebx r--data
lea eax [ esp + 0x54 ]
call sub_402160
mov ebx [ esp + 0x14 ]
jmp r-xdata
push esi
call sub_4533eb
push eax
lea esi [ esp + 0x68 ]
call sub_40e0a0
mov ebx r--data
lea eax [ esp + 0x64 ]
call sub_402160
mov ebx [ esp + 0x14 ]
jmp r-xdata
fstp [ esp + 0x38 ]
fstp st0
mov ecx esi
call sub_40c650
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx esi
call sub_40c650
mov [ esp + 0x20 ] eax
jmp r-xdata
push esi
call sub_4349d1
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_4533eb
lea eax [ ebx + 0xb8 ]
jmp r-xdata
mov edx [ edi + 0x4 ]
mov esi [ edx ]
push esi
call sub_44cecd
test al al
je r-xdata
mov esi 0x1
mov [ esp + 0x40 ] si
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x2c ]
push edx
push eax
push ecx
call sub_432fad
add esp 0x10
test eax eax
jne r-xdata
or [ esp + 0x30 ] 0xc0
push eax
lea esi [ esp + 0x48 ]
call sub_40e0a0
cmp [ esp + 0x1c ] 0x6
ja r-xdata
add eax 0xffffffd0
cmp eax 0x3d
ja r-xdata
mov ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
call sub_46921b
cmp eax 0x1
jne r-xdata
mov edx [ ebx ]
push eax
mov eax [ edx + 0x4 ]
push 0x4
add eax ebx
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
lea eax [ esp + 0x20 ]
push eax
call sub_441fb2
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x3
add eax ebx
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
lea edx [ esp + 0x20 ]
push edx
call sub_441fb2
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ eax + lookup_table_46dc76 ]
jmp [ eax * 4 + jump_table_46dc6a ]
push 0x0
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x54 ]
mov ebx [ ebp + 0xc ]
call sub_40e710
lea eax [ esp + 0x20 ]
push eax
call sub_441fb2
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or [ esp + 0x30 ] 0x1
inc esi
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_45340c
movzx esi [ eax + esi * 2 ]
sub esi 0x30
cmp eax 0x3
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x1
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov [ esp + 0x14 ] esi
call sub_45340c
movzx eax [ eax + esi * 2 ]
test ax ax
je r-xdata
mov [ esp + 0x34 ] esi
mov esi [ esp + 0x10 ]
inc esi
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0xc ]
inc [ esp + 0x10 ]
push eax
call sub_45340c
mov ecx [ esp + 0x10 ]
movzx edx [ eax + ecx * 2 ]
lea eax [ esi + esi * 4 ]
lea esi [ edx + eax * 2 - 0x30 ]
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x3
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x2
jmp r-xdata
add eax ebx
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
lea eax [ esp + 0x20 ]
push eax
call sub_441fb2
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_45340c
mov ecx [ esp + 0x10 ]
movzx edx [ eax + ecx * 2 + 0x2 ]
push edx
call sub_4137d3
add esp 0x4
test eax eax
je r-xdata
sub_46dc79
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ ebp - 0x75 ] edx
in al dx
and esp 0xfffffff8
sub esp 0x24c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] edi
call sub_40bc70
mov esi [ ebp + 0xc ]
mov eax r--data
mov ebx esi
call sub_40e710
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
mov ebx [ IsClipboardFormatAvailable@IAT ]
push 0xd
call ebx
test eax eax
je r-xdata
push 0x1
call ebx
test eax eax
je r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xf
call ebx
test eax eax
je r-xdata
push 0x1
call [ GetClipboardData@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push esi
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push esi
push 0x3
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ CountClipboardFormats@IAT ]
push 0x0
test eax eax
je r-xdata
push 0xf
call [ GetClipboardData@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push ebx
push 0x3
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
call sub_40e710
push esi
call [ GlobalUnlock@IAT ]
jmp r-xdata
call [ CloseClipboard@IAT ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x2
jmp r-xdata
push ebx
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push ebx
push 0x3
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
lea edx [ esp + 0x2c ]
push edx
call sub_444e90
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_466715
mov edi eax
call sub_40e6a0
lea ecx [ esp + 0x38 ]
call sub_402250
push ebx
call [ GlobalUnlock@IAT ]
lea esi [ esp + 0x28 ]
call sub_401350
jmp r-xdata
call [ CloseClipboard@IAT ]
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ CloseClipboard@IAT ]
lea ecx [ esp + 0x10 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
add eax edi
call sub_403c90
push 0x0
push 0x0
push 0xffffffff
push ebx
call [ DragQueryFileW@IAT ]
dec eax
xor esi esi
mov [ esp + 0x24 ] eax
test eax eax
jle r-xdata
call [ CloseClipboard@IAT ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x104
lea edx [ esp + 0x4c ]
push edx
push esi
push ebx
call [ DragQueryFileW@IAT ]
lea edi [ esp + 0x48 ]
lea eax [ esp + 0x10 ]
call sub_40d200
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x10 ]
call sub_40e6a0
push ebx
call [ GlobalUnlock@IAT ]
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403cd0
jmp r-xdata
push 0x104
lea ecx [ esp + 0x4c ]
push ecx
push esi
push ebx
call [ DragQueryFileW@IAT ]
lea edi [ esp + 0x48 ]
lea eax [ esp + 0x10 ]
call sub_40d200
push 0xa
lea eax [ esp + 0x14 ]
call sub_403020
inc esi
cmp esi [ esp + 0x24 ]
jl r-xdata
sub_46df7c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
xor ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov ebx eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
sub esp 0x78
lea edx [ edi + 0x10 ]
mov eax esp
push edx
push eax
call sub_44ad24
push 0x0
push ebx
push r--data
push esi
call sub_45340c
push eax
lea ecx [ esp + 0xa0 ]
push ecx
call sub_44ad65
push 0x0
lea edx [ esp + 0x1c ]
push edx
call sub_466a4b
mov eax [ esp + 0x2c ]
mov esi [ ebp + 0xc ]
mov ebx [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
call sub_408f40
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x30 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] ecx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push edx
add eax edi
call sub_403c90
mov edx [ edi ]
mov ecx [ esp + 0x34 ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax edi
call sub_403cd0
lea eax [ esp + 0x18 ]
push eax
call sub_44ac82
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46e042
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov esi ecx
cmp eax 0x2
jae r-xdata
jbe r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x10 ] 0x0
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0xc ] 0x0
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_442f4c
mov [ esp + 0xc ] al
jmp r-xdata
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
mov eax [ edi ]
mov edi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x14 ] eax
mov edx [ edi ]
mov edi [ edx + 0xd8 ]
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
sub esp 0x78
lea ecx [ esi + 0x10 ]
mov edx esp
push ecx
push edx
call sub_44ad24
mov eax [ esp + 0x84 ]
mov ecx [ esp + 0x88 ]
push eax
push ecx
push edi
call sub_45340c
push eax
push ebx
call sub_45340c
push eax
lea edx [ esp + 0xa0 ]
push edx
call sub_44ad65
push eax
lea ebx [ esi + 0x4 ]
push ebx
call sub_4523db
lea eax [ esp + 0x18 ]
push eax
call sub_44ac82
mov edi [ esi + 0x8 ]
mov ecx [ edi ]
push 0x1
push ecx
call sub_466a4b
mov edx [ edi ]
mov eax [ edx + 0x18 ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
mov edx [ edi ]
mov eax [ edx + 0x1c ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403cd0
cmp [ esp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_45239d
mov esi [ ebp + 0xc ]
call sub_408f40
cmp [ esp + 0xc ] 0x0
mov ecx [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ecx
jne r-xdata
sub_46e1a6
push ebp
mov ebp esp
sub esp 0xa38
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
mov ebx ecx
jne r-xdata
mov [ ebp + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test eax eax
je r-xdata
cmp [ ebx + 0xb4 ] 0x2
jne r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebx + 0xc8 ]
push edi
push eax
lea edi [ ebp - 0xc ]
call sub_40f760
pop edi
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
push eax
lea eax [ ebp - 0x218 ]
push eax
call sub_411567
lea ecx [ ebp - 0x218 ]
push 0x5c
push ecx
call sub_413e1f
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push r--data
push eax
call sub_4533eb
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ ebp - 0x628 ]
push edx
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0xa38 ]
push edx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_45340c
push eax
call sub_413a0e
add esp 0x14
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
call sub_403cd0
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_45340c
push eax
lea edx [ ebp - 0x424 ]
push edx
call sub_411567
lea eax [ ebp - 0x424 ]
push eax
call sub_433998
add esp 0xc
test al al
je r-xdata
mov edx [ ebx + 0xd8 ]
push edx
lea eax [ ebp - 0x218 ]
push eax
call sub_411567
lea ecx [ ebp - 0x218 ]
push r--data
push ecx
call sub_411536
mov edx [ esi + 0x4 ]
mov eax [ edx ]
add esp 0x10
push eax
call sub_45340c
push eax
lea eax [ ebp - 0x218 ]
push eax
call sub_411536
add esp 0x8
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x424 ]
push edx
call sub_411567
lea eax [ ebp - 0xa38 ]
push eax
lea ecx [ ebp - 0x424 ]
push ecx
call sub_411536
lea edx [ ebp - 0x218 ]
push edx
lea eax [ ebp - 0x424 ]
push eax
call sub_411536
lea ecx [ ebp - 0x628 ]
push ecx
lea edx [ ebp - 0x424 ]
push edx
call sub_411536
mov eax [ esi + 0x4 ]
mov eax [ eax ]
add esp 0x20
lea ecx [ ebp - 0x834 ]
push ecx
lea edx [ ebp - 0x424 ]
push edx
push r--data
push r--data
push eax
call sub_45340c
push eax
call sub_433784
lea eax [ ebp - 0x834 ]
push eax
call sub_4339fa
add esp 0x18
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x628 ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
push eax
call sub_45340c
push eax
lea edx [ ebp - 0x218 ]
push edx
call sub_44bd27
add esp 0x10
test al al
jne r-xdata
lea ecx [ ebp - 0x424 ]
push ecx
call sub_4111c1
add esp 0x4
cmp [ ebp + eax * 2 - 0x426 ] 0x5c
jne r-xdata
test al al
jne r-xdata
cmp [ ebp + 0x8 ] al
je r-xdata
lea edx [ ebp - 0x218 ]
push r--data
push edx
call sub_411567
lea eax [ ebp - 0x628 ]
push r--data
push eax
call sub_411567
add esp 0x10
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
lea edx [ ebp - 0x834 ]
push edx
push eax
call sub_45340c
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_452ac7
test eax eax
je r-xdata
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
call sub_431e58
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_403cd0
sub_46e48d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push esi
mov esi [ ebx + 0x8 ]
push edi
push eax
mov [ esp + 0x1c ] esi
mov [ esp + 0x24 ] 0x0
call sub_4533eb
mov ecx [ eax ]
push 0xffffffff
push 0xffffffff
mov [ esp + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x8 ]
push 0xffffffff
push 0x1
mov [ esp + 0x40 ] ecx
mov eax [ eax + 0xc ]
push 0x2
push r--data
lea edx [ esp + 0x40 ]
mov [ esp + 0x4c ] eax
inc [ eax ]
mov edi [ esp + 0x44 ]
push edx
call sub_4426cd
cmp eax edi
jne r-xdata
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edi r--data
lea eax [ esp + 0x28 ]
call sub_40d200
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
push eax
call sub_45340c
mov ecx [ edi + 0x50 ]
push eax
mov eax [ esp + 0x18 ]
push eax
call ecx
cmp esi 0x2
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call [ CoUninitialize@IAT ]
lea ecx [ esp + 0x28 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi 0x3
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
push eax
call sub_45340c
mov edx [ esp + 0x14 ]
push eax
mov eax [ edi + 0x24 ]
push edx
call eax
cmp esi 0x4
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0xc ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
push eax
call sub_45340c
mov ecx [ edi + 0x2c ]
push eax
mov eax [ esp + 0x18 ]
push eax
call ecx
cmp esi 0x5
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
push eax
call sub_45340c
mov edx [ esp + 0x14 ]
push eax
mov eax [ edi + 0x1c ]
push edx
call eax
cmp esi 0x6
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
push 0x0
push eax
call sub_45340c
mov ecx [ edi + 0x44 ]
push eax
mov eax [ esp + 0x1c ]
push eax
call ecx
cmp esi 0x7
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x18 ]
mov ecx edi
call sub_40ce70
test al al
je r-xdata
cmp esi 0x8
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax + 0x1c ]
mov edi [ eax + 0x14 ]
mov eax [ edx ]
mov [ esp + 0x24 ] eax
call sub_40c650
push eax
push edi
call sub_45340c
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x28 ]
push eax
mov eax [ edx + 0x44 ]
push ecx
call eax
push edi
call sub_45340c
mov edi eax
lea esi [ esp + 0x38 ]
call sub_401b10
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x15 ]
push ecx
lea edx [ esp + 0x1a ]
push edx
lea eax [ esp + 0x1f ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push esi
call sub_468d9e
cmp al 0x1
mov ecx esi
sete [ esp + 0x10 ]
call sub_402250
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x1c ]
push ecx
push r--data
push eax
call edx
test eax eax
js r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x14 ]
mov ecx [ ecx + 0x20 ]
mov esi [ edx ]
call sub_40c650
mov ecx [ esi + 0x3c ]
push eax
mov eax [ esp + 0x18 ]
push eax
call ecx
mov esi [ esp + 0x18 ]
mov dl [ esp + 0x11 ]
mov eax 0x4
test dl dl
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
mov ecx [ eax ]
push 0x1
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jns r-xdata
mov cl [ esp + 0x12 ]
test cl cl
je r-xdata
mov eax [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ esp + 0x13 ] 0x0
je r-xdata
or eax 0x2
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x28 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test cl cl
jne r-xdata
or eax 0x1
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
shl eax 0x8
or eax [ esp + 0x24 ]
push eax
mov eax [ edx + 0x34 ]
push ecx
call eax
test dl dl
jne r-xdata
or eax 0x6
sub_46e785
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
push ebx
call sub_443833
test al al
je r-xdata
push 0x0
push ebx
mov ebx [ ebp + 0x8 ]
lea edx [ esp + 0x14 ]
push edx
push ebx
call sub_45c362
test al al
je r-xdata
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebx + 0x17c ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ebx [ eax + 0x4 ]
test [ ebx + 0x28 ] 0x3
je r-xdata
xor ebx ebx
call sub_40da60
mov ebx eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ ecx + 0x4 ]
push edi
call sub_443d61
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push eax
mov eax 0x1
mov ecx ebx
call sub_40de40
test al al
jne r-xdata
push edi
call sub_4680ed
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_443106
push eax
push edi
push ebx
call sub_443fbe
test al al
jne r-xdata
test [ ebx + 0x28 ] 0x10
jne r-xdata
push ebx
call sub_44ae3e
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_443833
test al al
je r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
push edi
call sub_4533eb
cmp [ ebp + 0x14 ] 0x0
mov esi eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi ebx
call sub_40da20
xor eax eax
push ebx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] eax
call sub_44ae3e
push esi
push ebx
call sub_4689f4
jmp r-xdata
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
lea eax [ edi + 0x2 ]
lea ecx [ esp + 0x10 ]
call sub_4013c0
push esi
lea esi [ esp + 0x14 ]
call sub_40e0a0
mov edi r--data
mov eax esi
call sub_40d200
push esi
push ebx
call sub_4689f4
mov ecx esi
call sub_402250
jmp r-xdata
lea eax [ edi - 0x1 ]
push eax
push esi
call sub_4364e6
cmp [ eax ] 0xd
je r-xdata
lea eax [ edi - 0x1 ]
push eax
push esi
call sub_4364e6
cmp [ eax ] 0xa
jne r-xdata
sub_46e94a
push ebp
mov ebp esp
push ecx
call sub_432651
test al al
je r-xdata
mov eax [ ecx + 0x24 ]
test eax eax
je r-xdata
pop ebp
jmp sub_4681c6
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_46810f
pop ebp
retn 0x8
xor eax eax
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
mov eax r--data
call sub_40e710
pop ebx
sub_46e991
push ebp
mov ebp esp
push ecx
call sub_432651
test al al
je r-xdata
mov eax [ ecx + 0x24 ]
test eax eax
je r-xdata
pop ebp
jmp sub_4681fd
push ebx
mov ebx [ ebp + 0x8 ]
mov eax r--data
call sub_40e710
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_468162
pop ebp
retn 0x4
sub_46e9ce
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea esi [ ebp - 0x10 ]
call sub_40d370
mov eax [ ebp + 0x8 ]
mov edi esi
call sub_4037a0
test al al
je r-xdata
lea esi [ ebp - 0x10 ]
call sub_401350
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_403af0
call sub_401350
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46ea17
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x2c ]
push edx
push eax
test cl 0x3
jne r-xdata
call sub_45f6bb
pop ebp
retn 0x8
test cl 0x4
je r-xdata
call sub_46e9ce
pop ebp
retn 0x8
call sub_468961
pop ebp
retn 0x8
sub_46ea4a
push ebp
mov ebp esp
sub esp 0x18
push esi
lea esi [ ebp - 0x14 ]
call sub_40d370
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push eax
push esi
push edx
call sub_44c228
test al al
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_401350
xor al al
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_403af0
call sub_401350
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_46ea94
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push esi
mov esi [ ebp + 0xc ]
push edx
push esi
push eax
test cl 0x3
jne r-xdata
call sub_45f72f
pop esi
pop ebp
retn 0xc
test cl 0x4
je r-xdata
call sub_46ea4a
pop esi
pop ebp
retn 0xc
call sub_4689aa
pop esi
pop ebp
retn 0xc
sub_46eacf
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40bc70
mov eax [ ebp + 0x10 ]
xor esi esi
mov ebx r--data
mov [ ebp + 0xc ] esi
mov [ ebp - 0x8 ] esi
call sub_402160
mov ebx [ edi + 0x4 ]
test ebx ebx
jle r-xdata
push 0xffffffff
push esi
lea eax [ ebp - 0x28 ]
push eax
push edi
call sub_46150f
push eax
mov eax [ ebp + 0x10 ]
call sub_40bd50
lea ecx [ ebp - 0x28 ]
call sub_402250
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push esi
push edi
call sub_4364e6
cmp [ eax ] 0x5c
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_402250
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x8 ] 0x1
push esi
push edi
call sub_4364e6
cmp [ eax ] 0x24
jne r-xdata
inc esi
mov [ ebp + 0xc ] esi
cmp esi ebx
je r-xdata
push esi
inc esi
push edi
mov [ ebp + 0xc ] esi
call sub_4364e6
movzx edx [ eax ]
push edx
mov ebx 0x1
push ebx
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_460aab
test eax eax
js r-xdata
mov ebx [ edi + 0x4 ]
cmp esi ebx
jl r-xdata
push esi
push edi
call sub_4364e6
cmp [ eax ] 0x5c
je r-xdata
mov esi [ ebp + 0xc ]
push esi
add esi ebx
push edi
mov [ ebp + 0xc ] esi
call sub_4364e6
movzx ecx [ eax ]
push ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
push edx
call sub_468f70
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_40bd50
add [ ebp - 0x8 ] ebx
mov esi [ ebp + 0xc ]
jmp r-xdata
push esi
push edi
call sub_4364e6
cmp [ eax ] 0x24
je r-xdata
mov eax [ ebp + 0x10 ]
call sub_403020
push esi
push edi
call sub_4364e6
movzx eax [ eax ]
push eax
call sub_4137d3
add esp 0x4
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp + 0xc ]
mov ebx 0x1
push ecx
sub esi ebx
push edi
mov [ ebp + 0xc ] esi
call sub_460aab
lea edx [ ebp - 0x18 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_468f70
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
push ecx
call sub_40bd50
add [ ebp - 0x8 ] ebx
mov esi [ ebp + 0xc ]
jmp r-xdata
sub_46ec4e
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x24 ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edi
call sub_436565
test al al
jne r-xdata
push 0x0
mov [ ebp + 0x17 ] al
push ebx
or eax 0xffffffff
mov [ ebp + 0x8 ] 0x0
call sub_40c600
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40bc70
lea ecx [ ebp - 0x30 ]
call sub_40bc70
lea esi [ ebp - 0x20 ]
call sub_40d370
xor esi esi
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
lea ecx [ ecx ]
mov [ ebp + 0x17 ] 0x1
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_44ca07
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
sub eax esi
push eax
push esi
push edi
lea ecx [ ebp - 0x20 ]
push ecx
call sub_44c974
lea edx [ ebp - 0x30 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
call sub_460a29
lea ecx [ ebp - 0x30 ]
push ecx
mov eax ebx
call sub_40bd50
lea esi [ ebp - 0x20 ]
call sub_401350
lea ecx [ ebp - 0x30 ]
call sub_402250
lea ecx [ ebp - 0x40 ]
call sub_402250
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ edi + 0x2c ]
mov edx [ ecx ]
sub edx esi
push edx
push esi
push edi
lea eax [ ebp - 0x20 ]
push eax
call sub_44c974
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
call sub_460a29
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_40bd50
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x40 ]
push ecx
push edx
push edi
call sub_46eacf
add [ ebp + 0x8 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov eax ebx
call sub_40bd50
dec [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_434a8d
mov esi [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp + 0x17 ] 0x0
jne r-xdata
sub_46ed8e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
call sub_4109e0
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0xec ]
mov [ esp + 0x1c ] esi
call sub_4109e0
mov edx [ ebp + 0xc ]
mov al [ ebp + 0x24 ]
mov cl [ ebp + 0x20 ]
lea esi [ edi + 0x14 ]
push edx
mov [ edi + 0x4 ] al
mov [ edi + 0x5 ] cl
mov [ esp + 0x10 ] esi
call sub_40e0a0
mov eax [ ebp + 0x10 ]
lea esi [ edi + 0x24 ]
push eax
mov [ esp + 0x1c ] esi
call sub_40e0a0
lea eax [ edi + 0xbc ]
mov ebx r--data
mov [ esp + 0x14 ] eax
call sub_402160
mov ecx [ ebp + 0x18 ]
xor ebx ebx
mov [ edi + 0x10 ] ecx
lea ecx [ esp + 0x30 ]
mov [ edi + 0xcc ] 0x1
mov [ edi + 0xc ] 0x1
mov [ edi + 0x8 ] ebx
mov [ edi + 0xd0 ] ebx
mov [ edi + 0xe4 ] ebx
call sub_40bc70
lea ecx [ esp + 0x40 ]
call sub_40bc70
lea ecx [ esp + 0x50 ]
call sub_40bc70
mov eax [ edi + 0x10 ]
cmp eax ebx
jge r-xdata
cmp [ edi + 0x10 ] 0x4
jne r-xdata
push eax
call sub_4152bb
add esp 0x4
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] bl
mov eax [ esp + 0xc ]
push eax
call sub_436565
test al al
je r-xdata
mov edx [ esp + 0xc ]
push edx
call sub_469296
mov [ edi + 0x10 ] 0x1
mov esi [ esp + 0xc ]
xor edi edi
call sub_401c90
cmp [ eax ] 0x5b
mov ebx [ ebp + 0x8 ]
jne r-xdata
push esi
call sub_436565
test al al
je r-xdata
lea edx [ esp + 0x50 ]
push edx
call sub_436565
test al al
jne r-xdata
mov edi [ ebx + 0x18 ]
lea edi [ edi - 0x1 ]
call sub_401c90
cmp [ eax ] 0x5d
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
push edi
call sub_44cdaf
mov ecx [ edi ]
mov edx [ ecx ]
mov [ esp + 0xc ] edx
lea eax [ esp + 0xc ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov esi [ esp + 0xc ]
lea eax [ esp + 0x50 ]
push eax
call sub_40e0a0
mov edi [ ebx + 0x18 ]
mov [ esp + 0x10 ] 0x1
sub edi 0x2
or [ ebx + 0x8 ] 0x4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
test [ ebx + 0x8 ] 0x1
je r-xdata
mov esi [ esp + 0x18 ]
call sub_410bc0
lea edx [ esp + 0x40 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
push ebx
push sub_46130d
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ ebx ]
test ebx ebx
je r-xdata
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
jne r-xdata
call [ EnumWindows@IAT ]
call [ GetDesktopWindow@IAT ]
push eax
call [ EnumChildWindows@IAT ]
jmp r-xdata
mov esi [ esp + 0xc ]
call sub_410bc0
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebx ]
mov edx [ ebp + 0x14 ]
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x18 ] eax
push edx
jmp r-xdata
call [ GetForegroundWindow@IAT ]
push eax
mov eax [ esp + 0x40 ]
lea edx [ esp + 0x14 ]
push edx
push eax
call sub_432c30
mov esi [ esp + 0x1c ]
add esp 0x8
push esi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx [ ebx + 0xe4 ]
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
push ebx
call sub_44cdaf
mov esi [ esp + 0x1c ]
mov edi [ ebp + 0x14 ]
push esi
push edi
call sub_4457df
call sub_4109e0
cmp [ ebx + 0xe4 ] 0x1
jl r-xdata
call sub_436299
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp + 0x14 ]
push eax
push ecx
push esi
jmp r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
test al 0x1
jne r-xdata
push ebx
call sub_44cdaf
mov ecx [ ebx ]
mov edx [ ecx ]
mov [ esp + 0x14 ] edx
lea eax [ esp + 0x14 ]
jmp r-xdata
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov esi [ esp + 0x14 ]
or [ ebx + 0x8 ] 0x8
lea ecx [ esp + 0x40 ]
push ecx
call sub_40e0a0
jmp r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
mov eax 0xfffffffd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
or eax 0x2
lea esi [ ebx + 0x34 ]
mov [ ebx + 0x8 ] eax
call sub_401070
lea ecx [ esp + 0x40 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x8 ] 0x10
lea esi [ ebx + 0x78 ]
call sub_401070
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
jmp r-xdata
push edi
lea edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push edx
call sub_461a5b
test al al
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x40 ]
or [ ebx + 0x8 ] 0x80
push eax
call sub_413190
add esp 0x4
mov [ ebx + 0xd4 ] eax
jmp r-xdata
push esi
call sub_46906d
cmp [ eax ] 0x0
je r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x40 ]
or [ ebx + 0x8 ] 0x100
push edx
call sub_413190
add esp 0x4
mov [ ebx + 0xd8 ] eax
jmp r-xdata
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ esp + 0x40 ]
or [ ebx + 0x8 ] 0x200
push ecx
call sub_413190
add esp 0x4
mov [ ebx + 0xdc ] eax
jmp r-xdata
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x40 ]
or [ ebx + 0x8 ] 0x400
push eax
call sub_413190
add esp 0x4
mov [ ebx + 0xe0 ] eax
jmp r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x40 ]
or [ ebx + 0x8 ] 0x20
push edx
call sub_413190
add esp 0x4
mov [ ebx + 0xcc ] eax
jmp r-xdata
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x40 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_44cd93
add esp 0x8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
test al 0x2
jne r-xdata
or [ ebx + 0x8 ] 0x40
jmp r-xdata
lea ecx [ esp + 0x50 ]
call sub_402250
lea ecx [ esp + 0x40 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
mov eax 0xfffffffc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
or eax 0x1
mov [ ebx + 0x8 ] eax
lea eax [ esp + 0x40 ]
push eax
lea esi [ esp + 0x54 ]
call sub_40e0a0
jmp r-xdata
sub_46f3c1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x2e0 ]
call sub_4109e0
lea ebx [ edi + 0x1b8 ]
push ebx
call sub_4426bb
push ebx
test al al
je r-xdata
call sub_443833
test al al
je r-xdata
call sub_44b3ac
mov ebx eax
push ebx
mov [ ebp + 0x8 ] ebx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
movzx edx [ edi + 0x2dc ]
mov ecx [ ebp + 0xc ]
movzx eax [ edi + 0x2dd ]
push ecx
mov ecx [ edi + 0x2d4 ]
push edx
push eax
push ecx
push esi
lea edx [ edi + 0x1c8 ]
push edx
push ebx
call sub_4533eb
push eax
add edi 0x1d8
push edi
call sub_46ed8e
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push ebx
add edi 0x1d8
push edi
call sub_44cdaf
lea eax [ ebp + 0x8 ]
push eax
push esi
call sub_436299
mov eax 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46f46d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
push ebx
push esi
push edi
lea edi [ esp + 0x30 ]
mov ebx ecx
call sub_40d330
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4533eb
mov edx [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ edx + 0x8 ]
push eax
call sub_4533eb
cmp [ esi + 0x8 ] 0x4
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] 0x0
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x38 ]
push eax
call sub_46906d
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov [ esp + 0x10 ] eax
push edi
lea ecx [ esp + 0x34 ]
push ecx
call sub_460bba
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x20 ]
call sub_4013c0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
push edx
push eax
push ecx
lea edx [ esp + 0x3c ]
push edx
call sub_46ec4e
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
call sub_40e6a0
mov eax [ esp + 0x10 ]
mov ecx [ ebx ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_403cd0
mov ecx edi
call sub_402250
lea edi [ esp + 0x30 ]
call sub_401380
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_40e6a0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_403c90
mov eax [ ebx ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
inc edx
push edx
add eax ebx
call sub_403cd0
lea edi [ esp + 0x30 ]
call sub_401380
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46f59a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push sub_44b858
push sub_46e991
push sub_46e94a
push eax
push edx
push ecx
call sub_46b10f
pop ebp
retn 0x8
sub_46f5be
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push sub_44b868
push sub_4681fd
push sub_4681c6
push eax
push edx
push ecx
call sub_46b10f
pop ebp
retn 0x8
sub_46f5e2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi ecx
push 0x340
mov [ esp + 0x20 ] edi
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x0
push eax
call sub_44a4cd
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp ecx eax
jne r-xdata
mov edx [ edi + 0x19c ]
mov [ esp + 0x18 ] edx
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ esp + 0x14 ]
push eax
add ebx 0x10
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x34 ] edx
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] eax
call sub_4536f7
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] eax
call sub_4536f7
mov eax [ edi + 0x1a0 ]
xor ecx ecx
mov [ esp + 0x18 ] ecx
test eax eax
je r-xdata
mov edx [ edi + 0x19c ]
mov eax [ edx + ecx * 4 ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x198 ]
push ecx
call sub_436299
jmp r-xdata
mov [ esp + 0x18 ] ecx
add [ esp + 0x18 ] 0x4
inc ecx
cmp ecx eax
jb r-xdata
push ebx
lea eax [ esp + 0x34 ]
push eax
call sub_4646e0
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax edi
call sub_403c90
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esp + 0x14 ]
mov eax [ edx ]
push ecx
push eax
call sub_4533eb
push eax
push edi
call sub_46c366
test al al
jne r-xdata
mov edx [ esp + 0x18 ]
mov edx [ edx ]
cmp [ edx ] 0x0
je r-xdata
xor edi edi
mov [ esp + 0x10 ] edi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402250
lea ecx [ esp + 0x30 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x24 ] 0x1
jbe r-xdata
call sub_401c90
inc edi
cmp [ eax ] 0x3b
jne r-xdata
mov eax [ esp + 0x10 ]
xor esi esi
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] esi
cmp eax esi
jle r-xdata
dec edi
lea esi [ esp + 0x20 ]
call sub_401c90
cmp [ eax ] 0x3b
je r-xdata
lea esi [ esp + 0x20 ]
call sub_401c90
cmp [ eax ] 0x0
je r-xdata
inc [ esp + 0x10 ]
jmp r-xdata
push 0x40
mov esi r-xdata
push 0x3000
sub esi sub_410de2
push esi
push 0x0
call [ VirtualAlloc@IAT ]
push esi
mov edi eax
push sub_410de2
push edi
call sub_410e60
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x19c ]
mov edx [ esp + 0x24 ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov [ ecx + 0x10 ] edi
mov eax edi
sub eax sub_410de2
mov edx eax
add edx r-xdata
mov [ edx + 0x1 ] j_sub_47e012
mov edx [ esp + 0x20 ]
mov ecx eax
add ecx r-xdata
mov [ ecx + 0x1 ] edx
mov ecx eax
add ecx r-xdata
add esp 0xc
mov [ ecx + 0x1 ] ebx
add eax r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edi [ ebx + 0x40 ]
inc [ esp + 0x10 ]
mov [ eax ] 0xc3
cmp [ ebx + 0x4 ] 0x1
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_403c90
jmp r-xdata
mov ecx [ edi ]
add [ ebx + 0x8 ] ecx
inc esi
add edi 0x18
cmp esi [ esp + 0x10 ]
jl r-xdata
mov [ eax ] 0xc2
mov dx [ ebx + 0x8 ]
mov [ eax + 0x1 ] dx
jmp r-xdata
lea edx [ edi - 0x10 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_463ad5
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov eax [ esp + 0x18 ]
inc eax
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
sub_46f8cb
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x8 ]
dec ecx
push edi
cmp ecx 0x3
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ ecx * 4 + jump_table_46f983 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push ecx
push 0x0
push 0x0
push 0x0
push eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edi [ eax ]
push edx
push 0x0
push 0x0
push ecx
call sub_45340c
push eax
push edi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
push eax
push 0x0
push ecx
call sub_45340c
push eax
push edi
call sub_45340c
push eax
push ebx
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ eax ]
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push eax
push ecx
mov [ esp + 0x14 ] edx
call sub_45340c
push eax
push edi
call sub_45340c
push eax
push ebx
call sub_45340c
mov ecx [ esp + 0x18 ]
push eax
push ecx
call sub_45340c
push eax
push esi
call sub_46cb5f
sub_46f993
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
push edi
mov eax r--data
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] 0x0
call sub_40e710
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
push ebx
call sub_443833
test al al
je r-xdata
push 0x0
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_45c362
test al al
jne r-xdata
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi + 0x17c ]
mov eax [ esp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
call sub_40da60
mov ebx eax
jmp r-xdata
push ebx
call sub_44c285
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
test eax eax
js r-xdata
cmp [ edi + 0x8 ] 0x2
jb r-xdata
test ebx ebx
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push eax
mov eax 0x2000
mov ecx ebx
call sub_40de40
test al al
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_40bc70
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push ebx
call sub_46ea94
test al al
jne r-xdata
push edi
call sub_4115d7
add esp 0x4
mov [ esp + 0x14 ] eax
test edi edi
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_44ae3e
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
call sub_40e6a0
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
mov edx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
push 0x0
push edx
add eax ecx
call sub_403cd0
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_403c90
jmp r-xdata
mov ecx [ ebp + 0xc ]
push edi
push ecx
call sub_453132
mov edx [ esp + 0x14 ]
push edi
push edx
push eax
call sub_410e60
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
push 0x0
push edi
add eax esi
call sub_403cd0
mov ecx [ esp + 0x14 ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
push eax
push ebx
call sub_443ee5
test al al
jne r-xdata
test [ ebx + 0x28 ] 0x10
mov edi eax
mov [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_40da20
xor eax eax
push ebx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] eax
call sub_44ae3e
lea ecx [ esp + 0x18 ]
call sub_402250
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_443833
test al al
je r-xdata
mov edi [ esp + 0x10 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_403c90
mov ecx [ esp + 0x14 ]
push ecx
call sub_4111dc
add esp 0x4
jmp r-xdata
sub_46fba4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov eax r--data
mov edi ecx
xor esi esi
call sub_40e710
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x2
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ebx [ edx ]
push ebx
call sub_443833
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x0
push ebx
lea eax [ esp + 0x1c ]
push eax
push edi
call sub_45c362
test al al
je r-xdata
push 0x38
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
test esi esi
jg r-xdata
mov esi 0x7fffffff
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x17c ]
mov eax [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
xor ebx ebx
call sub_40da60
mov ebx eax
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push ebx
call sub_46ea17
test al al
jne r-xdata
mov eax ebx
call sub_40e080
mov [ esp + 0x14 ] 0x0
test esi esi
jle r-xdata
mov eax 0x400
lea ecx [ esp + 0x18 ]
call sub_4013c0
mov [ esp + 0x13 ] 0x0
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
push eax
mov eax 0x2000
mov ecx ebx
call sub_40de40
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
call sub_40e6a0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xffffffff
add eax edi
call sub_403c90
jmp r-xdata
lea ebx [ ebx ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_44ae3e
lea ecx [ esp + 0x18 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_40da20
xor eax eax
push ebx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] eax
call sub_44ae3e
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_443833
test al al
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax esi
jl r-xdata
cmp esi 0x7fffffff
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_46ea17
test al al
jne r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax edi
call sub_403c90
mov [ esp + 0x13 ] 0x1
sub_46fd6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
lea esi [ edi + 0x18 ]
mov [ ebx ] ax
call sub_403350
push esi
push edi
call sub_46ea17
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ecx
pop ebp
retn 0x8
push 0xffe
push esi
or eax 0xffffffff
call sub_40c600
mov ecx [ esi ]
push ecx
push ebx
call sub_411567
add esp 0x8
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46fdbf
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
push esi
call sub_46f3c1
mov edi eax
test edi edi
jg r-xdata
call [ GetForegroundWindow@IAT ]
mov edx [ esi + 0x2e8 ]
mov ecx 0x1
cmp edx ecx
jl r-xdata
jns r-xdata
xor eax eax
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
mov esi [ esi + 0x2e4 ]
mov edi edi
mov eax edi
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
pop edi
mov eax 0x1
pop esi
pop ecx
pop ebp
retn 0x4
inc ecx
add esi 0x4
cmp ecx edx
jle r-xdata
mov edi [ esi ]
cmp [ edi ] eax
je r-xdata
sub_46fe32
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
nop
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push 0x1
call sub_40e1c0
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
pop ebp
retn 0x4
sub_46fe6f
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410c60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4111dc
add esp 0x4
sub_46fe90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push eax
mov ecx esi
call sub_40b400
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_46feb1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x9 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x8 ]
test eax eax
je r-xdata
dec [ esi ]
pop edi
mov [ esi + 0x9 ] 0x1
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push eax
call sub_46fe90
dec [ esi ]
mov [ esi + 0x4 ] edi
pop edi
mov [ esi + 0x9 ] 0x0
pop esi
pop ebp
retn 0x4
push eax
call sub_46fe90
sub_46ff07
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_432538
lea edx [ ebp - 0x8 ]
push edx
push rw-data
call sub_453717
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40b400
mov esp ebp
pop ebp
retn 0x4
sub_46ff4b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xf4 ]
mov ecx [ esi + 0x16c ]
push edi
lea edi [ esi + 0x16c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
test bl bl
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_4091e0
test bl bl
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_46ff07
mov ebx [ esp + 0x14 ]
cmp ebx [ edi ]
jae r-xdata
push rw-data
call sub_46feb1
mov edx [ esp + 0x10 ]
pop edi
mov [ esi + 0xf4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ebx [ ebx ]
call sub_40c790
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x10 ]
mov [ esi + 0xf4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46ffda
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push sub_402250
push 0xe
push 0x10
lea eax [ esi + 0x8c ]
push eax
call sub_410c20
lea ecx [ esi + 0x6c ]
call sub_402250
lea ecx [ esi + 0x28 ]
call sub_402250
pop esi
pop ebp
retn 0x4
sub_47000b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_46ffda
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_470028
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
push esi
lea esi [ eax - 0x4 ]
push sub_437081
push ecx
push 0x10
push eax
call sub_410c20
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_470053
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0xc ]
sub esp 0x3c
push ebx
push esi
push edi
test edx edx
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
pop edi
pop esi
mov eax 0x80004001
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov ecx [ ebp + 0x1c ]
mov eax [ ecx + 0x8 ]
lea ecx [ edx * 8 ]
sub ecx edx
mov edx [ esi + 0xc ]
add ecx ecx
add ecx ecx
add edx ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] ecx
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax 0x80020003
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x8 ] edx
jne r-xdata
mov eax 0x8002000e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov edi eax
or esi 0xffffffff
mov [ esp + 0x14 ] edi
mov [ esp + 0x30 ] 0x0
test eax eax
je r-xdata
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov [ esp + 0x1c ] eax
xor ecx ecx
add esp 0x4
mov eax edi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov [ esp + 0x20 ] eax
xor ecx ecx
add esp 0x4
mov eax edi
mov edx 0x10
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
mov edx [ edx + 0x20 ]
mov ecx eax
shl ecx 0x4
add edx 0x4
mov [ esp + 0x2c ] edx
jmp r-xdata
mov eax 0x80020010
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
push esi
call [ VariantClear@IAT ]
mov edx [ ebp + 0x8 ]
mov ecx 0x13
mov [ esi ] cx
mov eax [ edx + 0x14 ]
mov [ esi + 0x8 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov [ esp + 0xc ] 0x0
lea ecx [ eax + 0x4 ]
mov [ eax ] edi
push 0x10
mov ebx sub_437095
mov eax edi
mov [ esp + 0x38 ] ecx
call sub_410ca0
mov ecx [ esp + 0x34 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov ebx 0x2013
cmp [ edx ] bx
jne r-xdata
lea edx [ esp + 0x38 ]
push edx
call [ VariantInit@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ esp + 0x24 ]
add ecx [ esi + 0xc ]
xor eax eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
movzx eax [ ecx + 0x36 ]
test eax 0x4000
jne r-xdata
jmp r-xdata
xor ecx ecx
mov eax edi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ esp + 0x18 ]
xor ecx ecx
add esp 0x4
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
xor ecx ecx
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] ecx
cmp [ esp + 0x28 ] ecx
jbe r-xdata
mov ebx [ esp + 0x30 ]
inc ebx
add edx 0x8
sub ecx 0x10
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] edx
cmp ebx eax
jb r-xdata
mov edx [ ebp + 0x1c ]
mov edx [ edx ]
cmp [ edx + ecx - 0x10 ] bx
lea edx [ edx + ecx - 0x10 ]
jne r-xdata
mov eax 0x15
cmp eax 0x1e
je r-xdata
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x24 ]
inc esi
mov [ eax + ecx * 4 ] esi
mov eax [ esp + 0x18 ]
mov edx 0xffff
mov [ eax + esi * 2 ] dx
mov edx [ esp + 0x1c ]
mov [ edx + esi * 4 ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edi + esi * 4 ] 0x0
mov eax [ edx + 0x8 ]
sub eax ecx
dec eax
shl eax 0x4
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov edx [ ebx + edx + 0x20 ]
movzx ebx [ edx + ecx * 8 + 0x4 ]
mov ecx ebx
and ecx 0xfff
mov edx 0x2013
mov [ esp + 0x10 ] esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x2c ] ecx
cmp bx dx
je r-xdata
mov eax 0x80020008
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x10 ]
lea edx [ edi + edx - 0x3 ]
mov [ esp + 0x14 ] edx
mov edi edx
mov edx [ esp + 0x2c ]
xor ebx ebx
cmp [ esp + 0x28 ] ebx
jbe r-xdata
push ebx
call [ VariantClear@IAT ]
mov ecx [ esi + 0xc ]
mov edx [ esp + 0x24 ]
movzx eax [ edx + ecx + 0x36 ]
test eax 0x4000
je r-xdata
cmp eax 0x1f
je r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push edi
push ecx
lea edx [ esp + 0x48 ]
push edx
push eax
call sub_4352c2
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x34 ]
mov ecx 0x6013
cmp bx cx
je r-xdata
mov ebx [ esp + 0x14 ]
xor esi esi
test ebx ebx
je r-xdata
jmp r-xdata
mov ecx eax
cmp ecx 0x1e
jl r-xdata
cmp [ esp + 0x40 ] 0x0
je r-xdata
cmp eax 0x48
jne r-xdata
cmp bx 0x1e
jne r-xdata
mov eax esi
shl eax 0x4
add eax [ esp + 0xc ]
mov ebx 0x8
push eax
call sub_435457
jmp r-xdata
mov ecx [ esp + 0xc ]
mov edx esi
shl edx 0x4
add ecx edx
mov edx [ esp + 0x2c ]
push edx
push ecx
push eax
mov [ esp + 0x1c ] ecx
call sub_435481
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_4111dc
mov ecx [ esp + 0x20 ]
add esp 0x4
push ecx
call sub_4111dc
mov eax [ esp + 0x10 ]
add esp 0x4
test eax eax
je r-xdata
lea esp [ esp ]
mov ecx [ esi + 0xc ]
mov edx [ esp + 0x24 ]
mov eax [ edx + ecx + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov esi [ ecx + 0x8 ]
movzx eax [ eax + ebx * 8 + 0x4 ]
sub esi ebx
dec esi
shl esi 0x4
add esi [ ecx ]
mov [ esp + 0x34 ] eax
test eax 0x4000
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push ebx
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
cmp ecx 0x1f
jle r-xdata
mov [ esp + 0x38 ] ax
and eax 0xfff
push eax
push ebx
lea eax [ esp + 0x40 ]
push eax
call sub_43550b
jmp r-xdata
lea edx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
push eax
mov eax [ ecx + 0x2c ]
mov ecx [ ebp + 0xc ]
push eax
mov eax [ esi + 0x14 ]
lea edx [ ecx * 4 - 0x4 ]
push edx
push eax
call [ DispCallFunc@IAT ]
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x30 ] eax
test ebx ebx
je r-xdata
test ebx 0x4000
je r-xdata
mov ecx esi
shl ecx 0x4
add ecx [ esp + 0xc ]
mov ebx 0x8
push ecx
call sub_43542d
mov [ edi + esi * 4 ] eax
cmp bx 0x1f
jne r-xdata
cmp [ esp + 0x2c ] 0x48
jne r-xdata
push edi
call sub_4111dc
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4111dc
add esp 0x4
lea eax [ esp + 0x38 ]
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
push eax
call sub_470028
mov edx [ edi + esi * 4 ]
push edx
call sub_4111dc
inc esi
add esp 0x4
cmp esi ebx
jb r-xdata
cmp eax 0x1f
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + ebx * 4 ]
mov ecx [ esp + 0xc ]
shl edx 0x4
add ecx edx
cmp [ ecx + 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x8
push edx
mov [ ebx ] cx
call sub_434ec4
jmp r-xdata
cmp ecx 0x48
jne r-xdata
mov eax [ esp + 0x18 ]
mov edx 0xffff
cmp [ eax + esi * 2 ] dx
jne r-xdata
movzx eax [ esp + 0x2c ]
add eax 0xfffffff8
cmp eax 0x40
ja r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ esp + 0x10 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] bx
jmp r-xdata
mov eax [ esp + 0x10 ]
and ebx 0x4000
push eax
add ebx 0x13
call sub_435403
mov [ edi + esi * 4 ] eax
jmp r-xdata
push esi
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x34 ]
mov ecx 0x8
mov [ esi ] cx
mov ecx [ eax + ebx * 4 ]
shl ecx 0x4
add ecx [ esp + 0xc ]
push edx
push ecx
call sub_434ec4
mov [ esi + 0x8 ] eax
cmp eax 0x1e
jne r-xdata
and eax 0xfff
push eax
push esi
push ecx
mov [ esp + 0x40 ] eax
call sub_43550b
cmp [ esp + 0x34 ] 0xc
jne r-xdata
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0x1c ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
mov [ eax + esi * 2 ] bx
cmp [ edi + esi * 4 ] 0x0
jne r-xdata
movzx edx [ eax + lookup_table_4706f7 ]
jmp [ edx * 4 + jump_table_4706db ]
mov esi [ ebp + 0x8 ]
inc ebx
cmp ebx [ esp + 0x28 ]
jb r-xdata
mov edx [ esp + 0x20 ]
mov eax [ edx + ebx * 4 ]
mov eax [ edi + eax * 4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
inc eax
mov [ esp + 0x30 ] eax
cmp eax [ esp + 0x28 ]
jb r-xdata
mov ecx esi
shl ecx 0x4
add ecx [ esp + 0xc ]
mov [ eax + esi * 4 ] ecx
mov eax esi
shl eax 0x4
add eax [ esp + 0xc ]
push eax
mov [ esp + 0x14 ] eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x10 ]
mov [ eax ] bx
mov ecx [ edi + esi * 4 ]
mov [ eax + 0x8 ] ecx
mov eax esi
shl eax 0x4
add eax [ esp + 0xc ]
push eax
call sub_4350c1
mov eax esi
shl eax 0x4
add eax [ esp + 0xc ]
push eax
call sub_43513e
jmp r-xdata
push 0x4
call sub_4115d7
mov edx [ esp + 0x10 ]
mov ecx esi
add esp 0x4
add ecx ecx
mov ecx [ edx + ecx * 8 + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov edx esi
shl edx 0x4
add edx [ esp + 0xc ]
push edx
call sub_435175
jmp r-xdata
mov eax esi
shl eax 0x4
add eax [ esp + 0xc ]
push eax
call sub_4351cc
jmp r-xdata
mov ecx esi
shl ecx 0x4
add ecx [ esp + 0xc ]
push ecx
call sub_4350fa
jmp r-xdata
mov edx esi
shl edx 0x4
add edx [ esp + 0xc ]
push edx
call sub_435215
jmp r-xdata
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov [ edi + esi * 4 ] eax
sub_470738
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
lea ecx [ esi + 0x28 ]
mov [ esi ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x2
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_40bc70
lea ecx [ esi + 0x6c ]
mov [ esi + 0x38 ] bx
mov [ esi + 0x3a ] 0x1
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
call sub_40bc70
mov [ esi + 0x84 ] ebx
push 0x10
lea ecx [ esi + 0x8c ]
mov ebx sub_40bc70
lea eax [ edi + 0xf ]
mov [ esi + 0x7c ] 0x55
mov [ esi + 0x80 ] 0x190
mov [ esi + 0x88 ] 0x2
call sub_410ca0
xor eax eax
mov [ esi + 0x190 ] edi
mov [ esi + 0x194 ] edi
mov [ esi + 0x1c0 ] edi
mov [ esi + 0x1c4 ] edi
mov [ esi + 0x16c ] al
mov [ esi + 0x170 ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x178 ] eax
mov [ esi + 0x17c ] eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x184 ] eax
mov [ esi + 0x188 ] al
mov [ esi + 0x18c ] eax
mov [ esi + 0x198 ] eax
mov [ esi + 0x19c ] ax
mov [ esi + 0x19e ] al
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1a8 ] eax
mov [ esi + 0x1b0 ] eax
mov [ esi + 0x1b4 ] eax
mov [ esi + 0x1c8 ] eax
mov [ esi + 0x1cc ] eax
mov [ esi + 0x1d0 ] eax
pop edi
mov [ esi + 0x1ac ] 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_470870
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov eax [ ebx + 0x10 ]
push edi
mov [ esi + 0x10 ] eax
cmp eax ecx
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov edx [ ebx + 0xc ]
mov [ esi + 0xc ] edx
mov edi [ ebx ]
mov [ esi ] edi
cmp edi ecx
je r-xdata
inc [ eax ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
xor ecx ecx
mov eax edi
mov edx 0x20
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
lea ecx [ eax + 0x4 ]
mov [ eax ] edi
push 0x20
mov ebx sub_44b951
mov eax edi
mov [ ebp + 0x8 ] ecx
call sub_410ca0
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
xor edi edi
mov [ esi + 0x4 ] eax
mov [ ebp + 0xc ] edi
cmp [ esi ] edi
jle r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
add ecx edi
push ecx
add edx edi
push edx
call sub_453694
mov eax [ ebp + 0xc ]
inc eax
add edi 0x20
mov [ ebp + 0xc ] eax
cmp eax [ esi ]
jl r-xdata
sub_470928
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ eax + ebx * 4 ]
push edi
mov edi [ ecx ]
push 0x0
push edi
call sub_430003
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push esi
mov esi 0x3
cmp [ rw-data ] esi
jl r-xdata
push eax
call [ DestroyAcceleratorTable@IAT ]
mov eax [ edi + 0x20 ]
pop esi
test eax eax
je r-xdata
lea ebx [ ebx ]
mov edi [ edi + 0x24 ]
test edi edi
je r-xdata
push eax
call [ DestroyIcon@IAT ]
inc esi
cmp esi [ rw-data ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
push edi
call [ DestroyIcon@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ eax + 0x88 ]
add ecx 0xfffffff6
cmp ecx 0x13
ja r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov [ eax ] 0x0
mov eax [ rw-data ]
dec eax
cmp ebx [ rw-data ]
pop edi
mov [ rw-data ] eax
pop ebx
jne r-xdata
push eax
call sub_47000b
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x60 ]
test eax eax
je r-xdata
movzx edx [ ecx + lookup_table_470b58 ]
jmp [ edx * 4 + jump_table_470b44 ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
push eax
push edi
call sub_430003
jmp r-xdata
push edi
push eax
push rw-data
call sub_454e33
test eax eax
jne r-xdata
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
jle r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x40 ]
test eax eax
je r-xdata
push eax
call [ DestroyIcon@IAT ]
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x38 ]
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
push eax
call [ ImageList_Destroy@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push eax
push 0x0
call [ KillTimer@IAT ]
mov [ rw-data ] 0x0
mov [ rw-data ] eax
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4c ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
push eax
call [ ImageList_Destroy@IAT ]
jmp r-xdata
pop ebp
retn 0x4
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
inc eax
cmp eax ecx
jl r-xdata
push esi
push rw-data
call sub_45197b
push eax
call [ DestroyWindow@IAT ]
push rw-data
call sub_42ff9f
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
sub_470b6c
push ebp
mov ebp esp
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x24 ]
push ebx
xor ebx ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x18 ]
mov eax 0x1
mov [ edi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi ] ebx
mov [ esi + 0xc ] ebx
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x28 ]
mov [ edi + 0x34 ] ecx
mov [ edi + 0x38 ] edx
mov [ edi + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ edi + 0x8 ] bl
mov [ edi + 0x2c ] bl
mov [ edi + 0x40 ] bl
mov [ edi + 0x44 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x28 ] ebx
cmp eax ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
push eax
call sub_4111c1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ecx [ ebp + 0x18 ]
push ecx
push eax
mov [ edi + 0x44 ] eax
call sub_411567
mov eax [ ebp + 0xc ]
add esp 0x10
cmp eax ebx
je r-xdata
mov [ edi + 0x2c ] 0x1
call sub_408f40
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
mov esi [ VariantInit@IAT ]
lea ebx [ edi + 0x48 ]
push ebx
call esi
lea edx [ edi + 0x68 ]
mov ecx 0x3
push edx
mov [ ebx ] cx
call esi
lea eax [ edi + 0x78 ]
push eax
call esi
lea ecx [ edi + 0x88 ]
push ecx
call esi
lea ebx [ edi + 0x98 ]
push ebx
call esi
lea eax [ edi + 0x58 ]
mov edx 0x3
push eax
mov [ ebx ] dx
call esi
lea ebx [ edi + 0xa8 ]
push ebx
call esi
mov ecx 0x3
mov [ ebx ] cx
lea ebx [ edi + 0xb8 ]
push ebx
call esi
mov edx 0x3
mov [ ebx ] dx
lea ebx [ edi + 0xc8 ]
push ebx
mov [ edi + 0xc0 ] 0xffffffff
call esi
mov eax 0x3
mov [ ebx ] ax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov [ edi + 0x10 ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x28 ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebp + 0x10 ]
push eax
mov ebx esi
call sub_408e80
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_470cc8
push ebp
mov ebp esp
sub esp 0x10
push ebx
lea eax [ ebp + 0x10 ]
push eax
call sub_4536f7
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4437e8
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x14 ] eax
jne r-xdata
push esi
mov [ ebp - 0x4 ] eax
mov [ ebx ] eax
push edi
mov edi edi
lea ecx [ ebp + 0x10 ]
call sub_402250
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x14 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov edi eax
inc eax
mov [ ebp - 0x4 ] eax
call sub_401c90
cmp [ eax ] 0x3b
jne r-xdata
mov esi [ ebx ]
xor ecx ecx
mov eax esi
mov edx 0x20
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_4115d7
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov edi [ ebp - 0x4 ]
dec edi
lea esi [ ebp + 0x10 ]
call sub_401c90
cmp [ eax ] 0x3b
je r-xdata
mov edi [ ebp - 0x4 ]
lea esi [ ebp + 0x10 ]
call sub_401c90
cmp [ eax ] 0x0
je r-xdata
inc [ ebx ]
jmp r-xdata
xor eax eax
lea edi [ eax + 0x4 ]
mov [ eax ] esi
push 0x20
mov ebx sub_44b951
mov eax esi
mov ecx edi
call sub_410ca0
mov ebx [ ebp + 0x8 ]
mov eax edi
xor edi edi
jmp r-xdata
inc [ ebx ]
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
cmp eax edi
jne r-xdata
lea ecx [ ebp + 0x10 ]
call sub_402250
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebx + 0x4 ] eax
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp + 0x10 ]
push eax
push edi
mov ecx ebx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x10 ] 0x8
call sub_45efe4
mov esi eax
cmp esi edi
je r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x8 ] eax
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
push 0x4
call sub_4115d7
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] 0x1
jmp r-xdata
push esi
mov [ ebx + 0x10 ] eax
call sub_4115d7
mov ecx [ ebx + 0xc ]
push ecx
push edi
push eax
mov [ ebx + 0x8 ] eax
call sub_412f40
add esp 0x10
lea ecx [ ebp + 0x10 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_470e55
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ebx esp
call sub_40b960
lea ecx [ ebp - 0x14 ]
call sub_479500
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_437063
lea ecx [ ebp - 0x14 ]
push ecx
call [ VariantClear@IAT ]
lea esi [ ebp + 0xc ]
call sub_408f40
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_470e96
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_430c09
mov ebx [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x48 ]
push eax
push ebx
call [ DragQueryPoint@IAT ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
push ecx
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_441672
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x44 ] edx
cmp eax 0xffffffff
je r-xdata
push 0x0
push ebx
push 0x233
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
test [ eax + 0x8a ] 0x8
je r-xdata
mov esi [ eax ]
mov edi [ SendMessageW@IAT ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push 0xb0
push esi
mov [ esp + 0x24 ] 0x0
call edi
push 0x0
push 0x0
push 0xffffffff
push ebx
call [ DragQueryFileW@IAT ]
xor ebx ebx
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x40 ]
push edx
push eax
push 0xb1
push esi
call edi
mov ecx [ ebp + 0xc ]
push ecx
call [ DragFinish@IAT ]
xor eax eax
mov ebx 0x1
lea esi [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] eax
call sub_408f40
mov edx [ esp + 0x2c ]
mov edi r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] edx
call sub_401b10
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x18 ]
call sub_401980
mov ecx esi
call sub_402250
lea esi [ esp + 0x18 ]
call sub_408f40
mov edi r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] 0xffffffff
call sub_401b10
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x18 ]
call sub_401980
mov ecx esi
call sub_402250
lea eax [ esp + 0x58 ]
lea ebx [ esp + 0x18 ]
call sub_40e710
mov edi r--data
lea esi [ esp + 0x30 ]
call sub_401b10
mov eax 0x2
lea ecx [ eax - 0x1 ]
mov edx ebx
call sub_401980
mov ecx esi
call sub_402250
mov eax [ esp + 0x44 ]
push 0x0
push 0x0
push eax
push 0xfffffff3
push rw-data
call sub_451808
mov esi ebx
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea esp [ esp ]
mov eax [ esp + 0x10 ]
dec eax
cmp ebx eax
jge r-xdata
push r--data
lea edx [ esp + 0x5c ]
push edx
jmp r-xdata
lea edx [ esp + 0x58 ]
push edx
push 0x1
push 0xc2
push esi
call edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
push 0xb0
push esi
call edi
mov eax [ esp + 0x14 ]
push eax
push eax
push 0xb1
push esi
call edi
inc ebx
cmp ebx [ esp + 0x10 ]
jl r-xdata
push r--data
lea ecx [ esp + 0x5c ]
push ecx
call sub_411536
add esp 0x8
mov eax [ ebp + 0xc ]
push 0x104
lea edx [ esp + 0x5c ]
push edx
push ebx
push eax
call [ DragQueryFileW@IAT ]
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x88 ] 0x2
jne r-xdata
sub_4710f1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov [ esp + 0x10 ] eax
mov eax [ edx ]
push 0x1
push eax
push rw-data
call sub_456391
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
movzx ecx [ ebp + 0x10 ]
movzx edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
shl ecx 0x10
or ecx edx
push ecx
push eax
push 0x205
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
movzx ecx [ ebp + 0x10 ]
push 0x0
call [ ImageList_DragLeave@IAT ]
call [ ImageList_EndDrag@IAT ]
call [ ReleaseCapture@IAT ]
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_441672
mov edi eax
cmp edi 0xffffffff
je r-xdata
movzx ecx bx
jmp r-xdata
mov ecx [ rw-data ]
cmp edi ecx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
shl ecx 0x10
or ecx edx
push ecx
push eax
push 0x202
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ rw-data ]
mov eax [ esp + 0x10 ]
mov eax [ edx + eax * 4 ]
mov edx [ eax ]
mov eax [ rw-data ]
mov [ esp + 0x14 ] edx
mov edx [ eax + edi * 4 ]
mov eax [ edx ]
test [ eax + 0x8a ] 0x8
je r-xdata
mov [ rw-data ] 0x0
mov ebx [ eax ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call sub_455a89
mov edx [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push edx
call sub_455a89
mov esi eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov al [ edx + 0x88 ]
cmp al 0x2
je r-xdata
push esi
push ebx
call [ SetWindowTextW@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push ebx
call [ SendMessageW@IAT ]
cmp al 0x3
jne r-xdata
push esi
call sub_4111dc
xor eax eax
mov ebx 0x1
add esp 0x4
lea esi [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] eax
call sub_408f40
mov [ esp + 0x18 ] edi
mov edi r--data
lea esi [ esp + 0x28 ]
mov [ esp + 0x20 ] ebx
call sub_401b10
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x18 ]
call sub_401980
mov ecx esi
call sub_402250
mov eax r--data
lea ebx [ esp + 0x18 ]
call sub_40e710
mov edi r--data
lea esi [ esp + 0x28 ]
call sub_401b10
mov eax 0x2
lea ecx [ eax - 0x1 ]
mov edx ebx
call sub_401980
mov ecx esi
call sub_402250
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
push eax
push 0xfffffff3
push rw-data
call sub_451808
mov esi ebx
call sub_408f40
mov esi [ ebp + 0x8 ]
sub_4712f3
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x1
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_4710f1
pop ebp
retn 0x10
sub_471311
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x0
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_4710f1
pop ebp
retn 0x10
sub_47132f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
push rw-data
call sub_430c09
push eax
call sub_470928
push 0x0
push 0x0
push 0x2
push esi
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0x4
sub_471359
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
mov ebx [ ebp + 0x2c ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x1c ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10003
push eax
call sub_449175
or ecx 0xffffffff
cmp ebx ecx
jne r-xdata
mov eax 0x100
mov edx 0x20
cmp [ ebp + 0x20 ] ecx
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov [ ebp + 0x20 ] edx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push 0x0
push ecx
push 0x0
push 0x0
push edi
push edx
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push r--data
push ebx
push eax
call sub_4301f8
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp + 0x24 ] edx
lea esi [ ebp + 0x30 ]
call sub_408f40
xor al al
pop edi
pop esi
pop ebx
pop ebp
retn 0x38
mov cx [ ebp + 0x20 ]
mov dx [ ebp + 0x24 ]
mov eax [ ebp + 0x14 ]
mov [ esi + 0x84 ] cx
mov [ esi + 0x86 ] dx
cmp [ eax ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov cx [ ebp + 0x18 ]
sub esp 0x10
lea eax [ ebp + 0x30 ]
mov ebx esp
mov [ esi + 0x80 ] cx
mov [ esi + 0x82 ] di
call sub_40b960
mov edx [ ebp + 0x14 ]
push edx
push esi
call sub_454e8d
test al al
jne r-xdata
lea esi [ ebp + 0x30 ]
call sub_408f40
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x38
mov ecx 0x300
mov [ esi + 0x7e ] cx
mov eax [ esi ]
push eax
call [ DestroyWindow@IAT ]
sub_47144e
push ebp
mov ebp esp
sub esp 0x98
push ebx
push esi
push edi
lea ecx [ ebp + 0x14 ]
call sub_40c650
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
lea esi [ ebp + 0x14 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov edi [ ebp - 0x10 ]
mov edx [ ecx + edi * 4 ]
mov esi [ edx ]
mov dl [ esi + 0x88 ]
mov ebx [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
push eax
mov [ ebp + 0xb ] dl
call sub_43303f
movzx ecx dl
add ecx 0xfffffffa
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp ecx 0x14
ja r-xdata
movzx ecx [ ecx + lookup_table_471b42 ]
jmp [ ecx * 4 + jump_table_471b26 ]
push 0xfffffff0
push ebx
call [ GetWindowLongW@IAT ]
test al al
jns r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push ebx
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
lea ecx [ ebp + 0x10 ]
push ecx
mov [ ebp + 0x8 ] edx
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0xc ]
push edx
push eax
push esi
call sub_43009d
test eax eax
je r-xdata
sub esp 0x10
lea eax [ ebp + 0x14 ]
mov ebx esp
call sub_40b960
mov edx [ ebp + 0xc ]
push edx
push esi
call sub_454e8d
test al al
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
call [ ExtractIconExW@IAT ]
test eax eax
jg r-xdata
mov edx [ ebp + 0xc ]
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
push 0x0
push eax
push edx
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
mov edx [ ebp + 0xc ]
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
push 0x0
push eax
push edx
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov edx [ ebp + 0xc ]
push 0x2010
push 0x0
push 0x0
push 0x0
push edx
push 0x0
call [ LoadImageW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x0
push esi
push ecx
call sub_430b87
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp - 0xc ]
push 0x0
push esi
push eax
call sub_430b87
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp [ ebp + 0xb ] 0x13
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push 0xffffffff
push eax
call [ ExtractIconExW@IAT ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x10
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x18c ]
push ebx
push rw-data
call sub_441b7c
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov [ ebp + 0x10 ] eax
mov eax [ edx ]
mov edi [ eax + 0x3c ]
test edi edi
jne r-xdata
mov eax [ ebp - 0x10 ]
push 0x1
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x18 ]
push edx
push eax
push ecx
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
cmp [ ebp + 0xb ] 0x18
jne r-xdata
push edi
push 0x0
push 0xf7
push ebx
call [ SendMessageW@IAT ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x30 ]
push ebx
push rw-data
call sub_441b7c
lea ecx [ ebp - 0x40 ]
push ecx
push 0xffffffff
push 0x1053
push ebx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x38 ] edi
call [ SendMessageW@IAT ]
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x1004
push ebx
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x10 ] 0x0
call [ SendMessageW@IAT ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi [ esi + 0x30 ]
push esi
push rw-data
call sub_441b7c
mov ebx eax
mov [ ebp - 0x10 ] edi
mov [ ebp + 0xc ] edi
mov eax [ rw-data ]
mov esi ebx
mov ebx edi
mov [ ebp - 0x10 ] 0x3
mov [ ebp + 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx eax [ esi + 0x80 ]
push edx
push eax
push edi
call [ ImageList_ReplaceIcon@IAT ]
movzx edx [ esi + 0x8b ]
lea ecx [ ebp - 0x44 ]
push ecx
push edx
push 0x133d
mov edi eax
push ebx
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x30 ] edi
call [ SendMessageW@IAT ]
mov [ esi + 0x80 ] di
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x10 ]
mov edi eax
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
push edi
push 0x0
push 0x1303
push ebx
mov [ ecx + 0x3c ] edi
call [ SendMessageW@IAT ]
test edi edi
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
push 0x2010
push 0x0
push 0x0
push 0x1
push eax
push 0x0
call [ LoadImageW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov edx [ rw-data ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov eax [ ecx ]
mov edi [ eax + 0x34 ]
mov edx [ eax + 0x38 ]
mov [ ebp - 0xc ] edx
test edi edi
jne r-xdata
mov ebx [ SendMessageW@IAT ]
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx + ebx * 4 ]
mov ebx [ SendMessageW@IAT ]
mov edi eax
mov eax [ edx ]
push edi
push 0x0
push 0x1109
push esi
mov [ eax + 0x3c ] edi
call ebx
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + ebx * 4 ]
mov eax [ edx ]
mov edi [ eax + 0x3c ]
test edi edi
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x18 ]
push edx
jmp r-xdata
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push edi
push 0x1
push 0xf7
push ebx
call [ SendMessageW@IAT ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] 0x0
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push eax
call [ DestroyIcon@IAT ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x1
push edi
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ ebp + 0x10 ]
mov edi eax
mov eax [ rw-data ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push edi
push 0x1
push 0x1003
push ebx
mov [ eax + 0x34 ] edi
call [ SendMessageW@IAT ]
mov edi [ ebp - 0x10 ]
cmp edi [ ebp + 0xc ]
jg r-xdata
mov cl [ ebp + 0x10 ]
test cl 0x2
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push esi
call [ GetClientRect@IAT ]
push 0x0
push 0x0
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call [ RedrawWindow@IAT ]
mov edx [ ebp - 0x8 ]
push edx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
call [ DestroyIcon@IAT ]
push edi
push 0x1
push 0xf7
push ebx
call [ SendMessageW@IAT ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
jmp r-xdata
test edi edi
je r-xdata
push 0x1
push 0x0
push 0x21
push 0x20
push 0x20
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x10 ]
mov ecx [ ecx + edx * 4 ]
mov edx [ ecx ]
push eax
push 0x0
push 0x1003
push ebx
mov [ ebp - 0xc ] eax
mov [ edx + 0x38 ] eax
call [ SendMessageW@IAT ]
lea esp [ esp ]
test cl 0x4
je r-xdata
mov edx [ ebp - 0xc ]
mov [ edx + 0x1b8 ] eax
call [ DestroyIcon@IAT ]
mov ecx [ ebp - 0x8 ]
push ecx
push 0xffffffff
push edi
call [ ImageList_ReplaceIcon@IAT ]
cmp [ ebp + 0xb ] 0x10
mov [ ebp - 0x14 ] eax
jne r-xdata
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x64 ] edi
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push eax
call [ DestroyIcon@IAT ]
mov edx [ ebp - 0x8 ]
mov esi [ DestroyIcon@IAT ]
push edx
call esi
mov eax [ ebp - 0x18 ]
push eax
call esi
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc edi
cmp edi [ ebp + 0xc ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x1bc ] eax
mov eax [ ebp - 0x8 ]
push eax
push 0xffffffff
push edi
mov edi [ ImageList_ReplaceIcon@IAT ]
call edi
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
push ecx
push 0xffffffff
push edx
mov [ ebp - 0x14 ] eax
call edi
cmp [ ebp + 0xb ] 0x13
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ eax + 0x88 ] 0x11
jne r-xdata
mov esi [ ebp - 0x10 ]
cmp esi [ ebp + 0xc ]
jg r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x94 ] eax
cmp [ eax + 0x30 ] esi
jne r-xdata
mov edi [ SendMessageW@IAT ]
mov edi [ SendMessageW@IAT ]
lea ecx [ ebp - 0x94 ]
push ecx
push 0x0
push 0x104b
push ebx
mov [ ebp - 0x94 ] 0x2
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x8c ] 0x0
call edi
cmp [ ebp - 0x78 ] 0xfffffffe
je r-xdata
mov eax [ eax + 0xc ]
lea ecx [ ebp - 0x6c ]
push ecx
push 0x0
push 0x113e
push esi
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x6c ] 0x32
call ebx
mov dl [ ebp + 0x10 ]
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x54 ]
test dl 0x2
je r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x94 ]
push eax
push 0x0
push 0x104c
push ebx
mov [ ebp - 0x78 ] edx
call edi
cmp [ ebp + 0xb ] 0x14
jne r-xdata
test dl 0x4
je r-xdata
mov ecx [ ebp - 0x14 ]
mov esi [ ebp - 0x10 ]
jmp r-xdata
inc esi
cmp esi [ ebp + 0xc ]
jle r-xdata
lea edx [ ebp - 0x6c ]
push edx
push 0x0
push 0x113f
push esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] ecx
call ebx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
push ecx
push esi
push 0x1015
push ebx
call edi
sub_471b57
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push rw-data
call sub_441af5
test al al
je r-xdata
lea esi [ ebp + 0xc ]
call sub_408f40
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x14
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x88 ] 0x15
je r-xdata
push ebx
push edi
lea edx [ ebp + 0xc ]
push edx
lea ebx [ eax + 0x68 ]
call sub_408e80
push 0x0
push esi
call sub_462a31
lea esi [ ebp + 0xc ]
movzx edi al
call sub_408f40
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_471bc9
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x1d4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor esi esi
push eax
call sub_470738
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp + 0x1c ] eax
test ecx ecx
jle r-xdata
lea eax [ ebp + 0x10 ]
push eax
push rw-data
mov [ ebp + 0x1c ] ecx
call sub_436299
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0x10 ]
mov eax ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] ecx
cmp [ rw-data ] ecx
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
mov [ edx ] esi
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
mov edx [ edx ]
mov [ edx + 0x4 ] eax
cmp ebx 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
or ebx 0x4000000
test ebx 0x10000
je r-xdata
mov ebx 0x80ca0000
mov [ ebp + 0x1c ] eax
inc eax
cmp eax ecx
jl r-xdata
test ebx 0x40000
je r-xdata
or ebx 0x80000
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
or ebx 0x80000
test [ ebp + 0x20 ] 0x40
je r-xdata
mov [ ebp + 0x20 ] 0x0
or ecx 0xffffffff
mov eax 0x190
cmp [ ebp + 0x14 ] ecx
jne r-xdata
mov edx [ ebp + 0x24 ]
test edx edx
jne r-xdata
cmp [ ebp + 0x18 ] ecx
jne r-xdata
mov [ ebp + 0x14 ] eax
mov eax 0x40
xor [ ebp + 0x20 ] eax
push edx
push rw-data
mov [ esi + 0xc ] eax
call sub_430c09
test eax eax
js r-xdata
cmp eax ecx
jne r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov [ ebp + 0x18 ] eax
mov edx [ ebp + 0x24 ]
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x24 ]
push eax
push ecx
call [ GetClientRect@IAT ]
push 0x7
call [ GetSystemMetrics@IAT ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x1c ]
push 0x8
sub edx eax
add [ ebp + 0xc ] edx
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x18 ]
mov edx ebx
sub ecx eax
and edx 0xc00000
add edi ecx
cmp edx 0xc00000
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov [ eax + 0xc ] 0x80000000
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
pop edi
pop esi
mov [ edx ] 0x0
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x20
push rw-data
call sub_42ff9f
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x20
cmp edi 0xffffffff
jne r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x7
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp + 0x14 ]
add ecx [ ebp - 0xc ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
push 0x4
call [ GetSystemMetrics@IAT ]
add edi eax
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push edx
push eax
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
call [ SetRect@IAT ]
mov edx [ ebp + 0x20 ]
push edx
push 0x0
push ebx
lea eax [ ebp - 0x14 ]
push eax
call [ AdjustWindowRectEx@IAT ]
mov ecx [ rw-data ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x24 ]
sub eax [ ebp - 0x10 ]
push 0x0
push ecx
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
push 0x0
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0x20 ]
push edi
push edx
push ebx
push eax
push r--data
push ecx
call [ CreateWindowExW@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x8
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
mov edi eax
sar edi 0x1
test ebx __dos_header
je r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
push 0xffffffeb
push eax
call [ SetWindowLongW@IAT ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x3c ] eax
lea ecx [ ebp - 0x14 ]
mov [ esi + 0x40 ] edi
mov edx [ esi ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
push 0x0
mov [ esi + 0x44 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
push 0x11
mov [ esi + 0x48 ] ecx
call [ GetStockObject@IAT ]
mov edx [ esi ]
push eax
push 0x30
push edx
call [ SendMessageW@IAT ]
push 0xffffffff
push esi
push rw-data
call sub_456391
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax [ ebp - 0x4 ]
je r-xdata
push 0x4
call [ GetSystemMetrics@IAT ]
cdq
sub eax edx
sar eax 0x1
neg eax
add edi eax
mov eax [ ebp + 0x1c ]
inc [ rw-data ]
push 0x0
push rw-data
mov [ rw-data ] eax
call sub_440edc
test ebx 0x10000000
je r-xdata
push sub_462986
push 0x28
push 0x0
push 0x0
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
pop edi
pop esi
mov [ eax ] 0x0
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call sub_441361
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x20
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0x0
push 0x4
call sub_441165
sub_471f53
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push ecx
lea ebx [ edi + 0x1b8 ]
call sub_408e80
cmp [ esi + 0x8 ] 0x2
jb r-xdata
lea eax [ edi + 0x1c8 ]
mov ebx r--data
call sub_402160
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4533eb
push eax
lea esi [ edi + 0x1c8 ]
call sub_40e0a0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_471fac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x18
push ebx
mov ebx [ eax + 0x4 ]
push esi
mov esi [ ebx ]
push edi
push esi
mov edi ecx
call sub_441da2
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x2
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_432520
mov esi [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
lea ebx [ ebp - 0x18 ]
call sub_40b960
push ebx
call sub_443833
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call sub_432520
push eax
call sub_45360e
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_408f40
test ebx ebx
jne r-xdata
mov ecx ebx
call sub_40c650
lea esi [ ebp - 0x18 ]
lea ebx [ eax - 0x1 ]
call sub_408f40
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] ebx
mov [ esi + 0x8 ] 0x7
mov [ esi ] ebx
lea esi [ ebp - 0x18 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push ebx
push edx
add eax edi
call sub_403c90
lea esi [ ebp - 0x18 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4720db
push ebp
mov ebp esp
sub esp 0x534
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
push 0x208
push eax
lea ecx [ ebp - 0x26e ]
push ecx
mov [ ebp - 0x270 ] ax
call sub_412f40
add esp 0xc
xor edx edx
push 0x208
push edx
lea eax [ ebp - 0x52e ]
push eax
mov [ ebp - 0x530 ] dx
call sub_412f40
mov ecx [ ebp + 0x10 ]
add esp 0xc
xor edi edi
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edi * 4 + rw-data ]
push edx
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
cmp edi 0x60
jne r-xdata
inc edi
cmp edi 0x60
jl r-xdata
cmp edi 0x5f
ja r-xdata
mov edi r--data
lea esi [ ebp - 0x20 ]
call sub_401b10
lea ecx [ ebp + 0x10 ]
push ecx
mov eax esi
mov [ ebp + 0xc ] 0x0
call sub_40bd50
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x4 ]
push eax
xor ecx ecx
call sub_40c2c0
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
lea ecx [ ebp + 0x10 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
jmp [ edi * 4 + jump_table_472dc7 ]
push eax
call sub_408e80
lea ecx [ ebp - 0x20 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx esi
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax r--data
call sub_40e710
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax r--data
call sub_40e710
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax r--data
call sub_40e710
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax r--data
call sub_40e710
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_403cc0
mov edi [ eax + 0x14 ]
mov esi ebx
call sub_408f40
mov [ ebx ] edi
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
call sub_403cc0
add eax 0x20
push eax
call sub_408e80
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x10 ]
push edx
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push eax
push r--data
lea ecx [ ebp - 0x270 ]
push ecx
push r--data
lea edx [ ebp - 0x280 ]
push edx
lea eax [ ebp - 0x2a8 ]
push eax
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x280 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push r--data
lea ecx [ ebp - 0x300 ]
push ecx
lea edx [ ebp - 0x2f0 ]
push edx
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x300 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push r--data
lea eax [ ebp - 0x2d8 ]
push eax
lea ecx [ ebp - 0x2c0 ]
push ecx
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x2d8 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push r--data
lea edx [ ebp - 0x290 ]
push edx
lea eax [ ebp - 0x2c8 ]
push eax
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x290 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push r--data
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x2a0 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push r--data
lea eax [ ebp - 0x2b8 ]
push eax
lea ecx [ ebp - 0x2e8 ]
push ecx
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x2b8 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x2e0 ]
push edx
call sub_441e23
push eax
call sub_451b19
push eax
push r--data
lea eax [ ebp - 0x270 ]
push eax
jmp r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_441e23
push eax
call sub_451aa8
mov edi eax
mov esi ebx
call sub_40e6a0
lea ecx [ ebp - 0x40 ]
call sub_402250
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp - 0x270 ]
push eax
push 0x0
push 0x0
push 0x26
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x270 ]
push ecx
push 0x0
push 0x0
push 0x2b
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea edx [ ebp - 0x270 ]
push edx
push 0x0
push 0x0
push 0x5
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push 0x0
push 0x0
push 0x23
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x270 ]
push ecx
push 0x0
push 0x0
push 0x19
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea edx [ ebp - 0x270 ]
push edx
push 0x0
push 0x0
push 0x2e
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push 0x0
push 0x0
push 0x1f
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x270 ]
push ecx
push 0x0
push 0x0
push 0x17
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea edx [ ebp - 0x270 ]
push edx
push 0x0
push 0x0
push 0x16
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push 0x0
push 0x0
push 0x18
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x270 ]
push ecx
push 0x0
push 0x0
push 0x1a
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea edx [ ebp - 0x270 ]
push edx
push 0x0
push 0x0
push 0x10
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push 0x0
push 0x0
push 0x6
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x270 ]
push ecx
push 0x0
push 0x0
push 0x2
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea edx [ ebp - 0x270 ]
push edx
push 0x0
push 0x0
push 0xb
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push 0x0
push 0x0
push 0x7
push 0x0
call [ SHGetFolderPathW@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x270 ]
push edx
mov [ ebp + 0x8 ] 0x104
call [ GetComputerNameW@IAT ]
jmp r-xdata
push 0x104
lea eax [ ebp - 0x270 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0x2c ] 0x0
push 0x104
lea edx [ ebp - 0x270 ]
push edx
je r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x6
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x3
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x9
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x5
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0xa
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x2
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x7
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x8
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x4
jmp r-xdata
cmp [ rw-data ] 0x1
cmp [ rw-data ] 0x1
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x40
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x41
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x42
jmp r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x43
jmp r-xdata
mov eax [ esi + 0xc8 ]
jmp r-xdata
mov eax [ esi + 0xb8 ]
jmp r-xdata
mov eax [ esi + 0xd8 ]
jmp r-xdata
mov eax [ esi + 0xf4 ]
push eax
call sub_4348aa
mov esi ebx
mov edi eax
call sub_408f40
mov [ ebx ] edi
jmp r-xdata
lea ecx [ ebp - 0x270 ]
push ecx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
jmp r-xdata
mov edx [ rw-data ]
movzx eax [ edx + 0x2e ]
test eax eax
je r-xdata
xor ecx ecx
mov eax 0x80000001
cpuid
lea esi [ ebp - 0x40 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0x34 ] 0x20000000
mov eax r--data
jne r-xdata
mov eax r--data
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x2a ] 0x1
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x8 ]
mov esi ebx
call sub_408f40
mov [ ebx ] edi
jmp r-xdata
mov edi [ rw-data ]
add edi 0xc
mov esi ebx
call sub_40e6a0
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push 0x104
push r--data
push 0x80000002
lea esi [ ebp - 0x270 ]
mov edx r--data
call sub_40f250
jmp r-xdata
push 0x104
push r--data
push 0x80000001
lea esi [ ebp - 0x270 ]
mov edx r--data
call sub_40f250
movzx eax [ ebp - 0x270 ]
add esp 0xc
push 0x4
push esi
push 0x0
push eax
mov [ ebp + 0x8 ] eax
call sub_432e88
add esp 0x10
jmp r-xdata
lea edx [ ebp - 0x31c ]
push edx
call [ GetKeyboardLayoutNameW@IAT ]
lea eax [ ebp - 0x31c ]
jmp r-xdata
lea eax [ ebp - 0x530 ]
push r--data
push eax
call sub_411567
lea ecx [ ebp - 0x530 ]
push ecx
xor esi esi
xor edi edi
call sub_4111c1
add esp 0xc
test eax eax
jle r-xdata
push 0x104
lea edx [ ebp - 0x270 ]
push edx
push 0x0
call [ GetModuleFileNameW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x1
call sub_433493
add esp 0x8
lea eax [ ebp - 0x60 ]
jmp r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x2
call sub_433493
add esp 0x8
lea eax [ ebp - 0x60 ]
jmp r-xdata
lea edx [ ebp - 0x60 ]
push edx
push 0x3
call sub_433493
add esp 0x8
lea eax [ ebp - 0x60 ]
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x4
call sub_433493
add esp 0x8
lea eax [ ebp - 0x60 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x28 ]
mov esi ebx
call sub_408f40
mov [ ebx ] edi
jmp r-xdata
lea edx [ ebp - 0x30 ]
push edx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x24 ]
mov esi ebx
call sub_408f40
mov [ ebx ] edi
jmp r-xdata
call [ GetDesktopWindow@IAT ]
mov edi eax
push edi
call [ GetDC@IAT ]
push 0xc
push eax
mov [ ebp + 0xc ] eax
call [ GetDeviceCaps@IAT ]
mov esi ebx
mov [ ebp - 0x4 ] eax
call sub_408f40
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
push ecx
push edi
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] eax
call [ ReleaseDC@IAT ]
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
call [ GetDesktopWindow@IAT ]
mov edi eax
push edi
call [ GetDC@IAT ]
push 0x74
push eax
mov [ ebp + 0xc ] eax
call [ GetDeviceCaps@IAT ]
mov esi ebx
mov [ ebp - 0x4 ] eax
call sub_408f40
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
push eax
push edi
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] edx
call [ ReleaseDC@IAT ]
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push 0x104
lea ecx [ ebp - 0x270 ]
push ecx
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
lea edx [ ebp - 0x270 ]
push edx
push 0x104
call [ GetTempPathW@IAT ]
lea esi [ ebp - 0x270 ]
call sub_410290
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x270 ]
push ecx
mov [ ebp + 0x8 ] 0x104
call [ GetUserNameW@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
mov esi ebx
call sub_408f40
mov [ ebx ] 0x1
jmp r-xdata
push 0x104
lea edx [ ebp - 0x270 ]
push edx
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
push 0x104
lea eax [ ebp - 0x270 ]
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
push 0x104
lea ecx [ ebp - 0x270 ]
push ecx
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
push 0x104
lea edx [ ebp - 0x270 ]
push edx
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
push 0x104
lea eax [ ebp - 0x270 ]
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
push 0x104
lea ecx [ ebp - 0x270 ]
push ecx
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
push 0x104
lea edx [ ebp - 0x270 ]
push edx
push r--data
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
mov edi [ esi + 0x148 ]
mov esi ebx
call sub_408f40
mov [ ebx ] edi
jmp r-xdata
mov eax [ esi + 0x14c ]
jmp r-xdata
call [ GetCurrentProcessId@IAT ]
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
mov esi ebx
mov [ ebx + 0x8 ] 0x1
call sub_41329b
lea eax [ ebp - 0x270 ]
jmp r-xdata
call [ GetSystemDirectoryW@IAT ]
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_430e0d
call eax
lea ecx [ ebp - 0xc ]
push ecx
call sub_430ccb
jmp r-xdata
call sub_408f40
mov [ ebx ] 0x0
call sub_408f40
mov [ ebx ] 0x1
jmp r-xdata
mov esi ebx
jne r-xdata
call sub_40e710
lea ecx [ ebp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax r--data
jmp r-xdata
cmp eax 0x6
je r-xdata
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov eax r--data
cmp [ eax + 0x28 ] 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
add esp 0xc
xor ecx ecx
mov [ ebp + esi * 2 - 0x530 ] cx
lea eax [ ebp - 0x530 ]
jmp r-xdata
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov esi ebx
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
lea ecx [ ebp + 0x10 ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
fadd [ r--data ]
mov eax r--data
jmp r-xdata
cmp eax 0x9
jne r-xdata
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
movzx eax [ ebp + edi * 2 - 0x530 ]
cmp eax 0x20
je r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
cmp [ eax + 0x24 ] 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
lea eax [ ebp - 0x530 ]
push eax
inc edi
call sub_4111c1
add esp 0x4
cmp edi eax
jl r-xdata
cmp eax 0x2c
jne r-xdata
cmp [ eax + 0x22 ] 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
mov [ ebp + esi * 2 - 0x530 ] ax
mov edx 0x2e
mov [ ebp + esi * 2 - 0x530 ] dx
jmp r-xdata
cmp [ eax + 0x20 ] 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
inc esi
cmp [ eax + 0x1e ] 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
cmp [ eax + 0x1c ] 0x1
jne r-xdata
cmp [ eax + 0x30 ] 0x0
mov eax r--data
jne r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
sub_472f47
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
lea ecx [ ebp - 0x20 ]
call sub_40bc70
lea ecx [ ebp - 0x30 ]
call sub_40bc70
lea ecx [ ebp - 0x40 ]
call sub_40bc70
mov eax [ ebp + 0xc ]
push eax
xor edi edi
call sub_45340c
mov esi eax
movzx eax [ esi ]
xor ecx ecx
xor bl bl
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x48 ] 0x1
mov [ ebp - 0x44 ] ecx
cmp ax cx
je r-xdata
lea esi [ ebp - 0x50 ]
call sub_408f40
lea ecx [ ebp - 0x40 ]
call sub_402250
lea ecx [ ebp - 0x30 ]
call sub_402250
lea ecx [ ebp - 0x20 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
cmp ax 0x24
jne r-xdata
cmp ax 0x40
jne r-xdata
cmp [ esi + edi * 2 ] ax
jne r-xdata
push eax
lea eax [ ebp - 0x20 ]
call sub_403020
cmp [ esi + edi * 2 ] ax
jne r-xdata
mov ebx r--data
lea eax [ ebp - 0x30 ]
call sub_402160
movzx eax [ esi + edi * 2 ]
cmp eax 0x24
je r-xdata
push 0x24
lea eax [ ebp - 0x20 ]
mov bl 0x1
call sub_403020
inc edi
jmp r-xdata
test bl bl
je r-xdata
mov ebx r--data
lea eax [ ebp - 0x30 ]
call sub_402160
movzx eax [ esi + edi * 2 ]
cmp eax 0x40
je r-xdata
push 0x40
lea eax [ ebp - 0x20 ]
mov bl 0x1
call sub_403020
inc edi
jmp r-xdata
cmp [ esi + edi * 2 ] 0x0
je r-xdata
lea ebx [ ebx ]
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x20 ]
call sub_40e6a0
cmp [ esi + edi * 2 ] 0x0
je r-xdata
test ax ax
je r-xdata
mov edi r--data
lea eax [ ebp - 0x20 ]
call sub_40d200
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
call sub_40bd50
jmp r-xdata
lea ecx [ ebp - 0x30 ]
inc edi
push ecx
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] edi
call sub_40e0a0
call sub_410bc0
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
call sub_40c2c0
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
movzx eax ax
push eax
lea eax [ ebp - 0x30 ]
call sub_403020
movzx eax [ esi + edi * 2 + 0x2 ]
inc edi
cmp eax 0x24
jne r-xdata
mov edi r--data
lea eax [ ebp - 0x20 ]
call sub_40d200
lea ecx [ ebp - 0x30 ]
push ecx
lea eax [ ebp - 0x20 ]
call sub_40bd50
jmp r-xdata
lea edx [ ebp - 0x30 ]
inc edi
push edx
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] edi
call sub_40e0a0
call sub_410bc0
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ ebp - 0x38 ]
mov [ esp + 0x8 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
inc [ ecx ]
lea edx [ ebp - 0x50 ]
push edx
push eax
call sub_4720db
test eax eax
jne r-xdata
movzx eax ax
push eax
lea eax [ ebp - 0x30 ]
call sub_403020
movzx eax [ esi + edi * 2 + 0x2 ]
inc edi
cmp eax 0x40
jne r-xdata
mov edi r--data
lea eax [ ebp - 0x20 ]
mov bl 0x1
call sub_40d200
lea ecx [ ebp - 0x30 ]
push ecx
lea eax [ ebp - 0x20 ]
call sub_40bd50
lea eax [ ebp - 0x20 ]
call sub_40d200
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
push eax
call sub_45340c
mov edi eax
lea eax [ ebp - 0x20 ]
call sub_40d200
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov bl 0x1
jmp r-xdata
test ax ax
je r-xdata
mov edi r--data
lea eax [ ebp - 0x20 ]
mov bl 0x1
call sub_40d200
lea edx [ ebp - 0x30 ]
push edx
lea eax [ ebp - 0x20 ]
call sub_40bd50
lea eax [ ebp - 0x20 ]
call sub_40d200
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x50 ]
push ecx
call sub_4533eb
push eax
lea eax [ ebp - 0x20 ]
call sub_40bd50
mov esi [ ebp - 0x8 ]
mov bl 0x1
jmp r-xdata
sub_4731e1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x4 ]
call sub_403cc0
mov ebx eax
call sub_408e80
lea eax [ esi + 0x4 ]
call sub_403cc0
mov cl [ ebp + 0x10 ]
pop esi
mov [ eax + 0x10 ] cl
pop ebx
pop ebp
retn 0xc
sub_473210
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
lea ecx [ edi + 0x10 ]
push ecx
lea ebx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_408e80
add edi 0x20
push edi
lea ebx [ esi + 0x20 ]
call sub_408e80
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_473253
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ebx ebx
push edi
lea eax [ ebp - 0x40 ]
mov [ ebp + 0x10 ] ebx
call sub_40db90
inc [ esi ]
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bx
je r-xdata
mov edi [ ebp + 0x8 ]
add edi 0x16c
lea ebx [ ebx ]
movsx eax [ eax + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x72
push ecx
call sub_45e737
lea eax [ ebp - 0xc ]
call sub_410aa0
lea edx [ ebp - 0x40 ]
push edx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edi
call sub_430e6a
test al al
je r-xdata
mov eax edi
call sub_40f4d0
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_473210
mov eax [ ebp - 0x40 ]
cmp eax 0x4
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
call sub_40f410
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esi ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0xb5
push edx
call sub_45e737
lea eax [ ebp - 0xc ]
call sub_410aa0
lea eax [ ebp - 0x40 ]
push eax
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x5
je r-xdata
lea eax [ ebp - 0xc ]
call sub_410aa0
lea ecx [ ebp - 0x40 ]
push ecx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x14 ]
inc ecx
mov [ edx ] ecx
call sub_40c790
jmp r-xdata
mov eax [ eax ]
add eax 0xffffffec
cmp eax 0x4
ja r-xdata
push edi
call sub_430e6a
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_4733a3 ]
inc [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
dec [ ebp + 0x10 ]
jmp r-xdata
sub_4733b7
push ebp
mov ebp esp
sub esp 0x1c
xor eax eax
push ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
push esi
mov ebx ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push edi
push eax
mov [ ebp - 0x1 ] 0x1
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
call sub_410bc0
xor edi edi
call sub_401c90
cmp [ eax ] 0x40
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
lea ecx [ ebp - 0x1c ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
push esi
call sub_44599e
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x3
jne r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x8 ]
lea edx [ ebp + 0x8 ]
push edx
lea esi [ ebp - 0x1c ]
call sub_40c2c0
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
test al 0x1
je r-xdata
test [ ebp - 0xc ] 0x100
je r-xdata
cmp [ ebp - 0x1 ] al
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
test al 0x2
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
push ecx
mov ebx eax
call sub_408e80
lea ecx [ ebp - 0x1c ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
xor ecx ecx
call sub_401980
mov ecx esi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
test al 0x4
je r-xdata
mov [ ebp - 0x8 ] 0x2
add eax ebx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
lea ecx [ ebp - 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x1 ] 0x0
sub_47354c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_410bc0
push esi
call sub_45383c
test eax eax
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
lea ecx [ ebp - 0x14 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
xor ecx ecx
call sub_40c2c0
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
mov ecx esi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4735f4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
push 0x1
call sub_40c650
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403cd0
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
push ebx
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop ebx
sub_473636
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
push 0x1
call sub_40c650
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
push 0x1
call sub_40c650
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403cd0
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push edx
call sub_408e80
pop ebx
sub_473698
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x4 ]
call sub_403cc0
lea ebx [ eax + 0x20 ]
call sub_408e80
lea eax [ esi + 0x4 ]
call sub_403cc0
pop esi
mov [ eax + 0x30 ] 0x0
pop ebx
pop ebp
retn 0x8
sub_4736c6
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] eax
jbe r-xdata
mov edx [ esi + 0x4 ]
mov esi [ edx ]
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov ebx esp
call sub_40b960
mov ecx esi
call sub_40c650
push eax
call sub_471b57
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
lea esi [ ebp - 0x10 ]
call sub_408f40
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
lea ebx [ ebp - 0x10 ]
call sub_408e80
sub_473739
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
or eax 0xffffffff
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] eax
cmp edi 0x3
jbe r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov [ esp + 0xc ] eax
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov edi [ eax ]
sub esp 0x10
lea eax [ esp + 0x20 ]
mov ebx esp
call sub_40b960
mov eax [ esp + 0x1c ]
push eax
push esi
call sub_45340c
push eax
mov ecx edi
call sub_40c650
push eax
call sub_47144e
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
lea esi [ esp + 0x10 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
lea ebx [ esp + 0x14 ]
call sub_408e80
sub_4737e5
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
or ebx 0xffffffff
push edi
mov edi [ esi + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp + 0x8 ] 0x0
cmp edi 0x7
jbe r-xdata
cmp edi 0x6
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x1c ]
push eax
call sub_44b3ac
mov [ ebp + 0x8 ] eax
cmp edi 0x5
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
cmp edi 0x4
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c650
mov [ ebp - 0x8 ] eax
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
mov [ ebp - 0x10 ] eax
cmp edi 0x2
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c650
mov [ ebp - 0x14 ] eax
cmp edi 0x1
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov [ ebp - 0xc ] eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
push edx
mov edx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
push ebx
push edx
push ecx
push eax
call sub_45340c
push eax
call sub_471bc9
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov ebx eax
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
push 0x1
add eax ecx
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47390f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push edi
mov ebx esi
call sub_408e80
mov al [ edi + 0x10 ]
mov [ esi + 0x10 ] al
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov dl [ edi + 0x18 ]
lea eax [ edi + 0x20 ]
push eax
lea ebx [ esi + 0x20 ]
mov [ esi + 0x18 ] dl
call sub_408e80
mov cl [ edi + 0x30 ]
pop edi
mov [ esi + 0x30 ] cl
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_473950
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push edi
lea edi [ ecx + esi + 0x4 ]
call sub_40da90
mov edi [ ebp + 0xc ]
lea edx [ edi + 0x8 ]
push edx
lea ebx [ esi + 0x1b8 ]
call sub_408e80
lea eax [ edi + 0x18 ]
push eax
add esi 0x1c8
call sub_40e0a0
mov ecx [ edi + 0x28 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x98 ] ecx
mov edx [ edi + 0x2c ]
mov [ ebx + 0x2f0 ] edx
mov eax [ edi + 0x30 ]
push eax
lea ecx [ ebx + 0x1d8 ]
push ecx
call sub_44cdaf
mov edx [ edi + 0x34 ]
lea eax [ edi + 0x38 ]
push eax
lea esi [ ebx + 0x438 ]
mov [ ebx + 0x2f8 ] edx
call sub_40e0a0
cmp [ ebx + 0xf8 ] 0x1
mov ecx [ edi + 0x48 ]
mov [ ebx + 0x448 ] ecx
mov edx [ edi + 0x4c ]
mov [ ebx + 0x44c ] edx
mov eax [ edi + 0x50 ]
mov [ ebx + 0x454 ] eax
je r-xdata
mov edx [ edi ]
push edi
mov [ ebx + 0xf4 ] edx
call sub_4526cf
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x54 ]
mov [ ebx + 0xf8 ] ecx
sub_473a07
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0x58
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_4526ec
mov edi eax
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xf4 ]
lea ecx [ esi + 0x1b8 ]
push ecx
lea ebx [ edi + 0x8 ]
mov [ edi ] eax
call sub_408e80
add esi 0x1c8
push esi
lea esi [ edi + 0x18 ]
call sub_40e0a0
mov ebx [ ebp + 0x8 ]
mov edx [ ebx + 0x98 ]
mov [ edi + 0x28 ] edx
mov eax [ ebx + 0x2f0 ]
mov [ edi + 0x2c ] eax
mov ecx [ ebx + 0x1d8 ]
mov edx [ ecx ]
mov [ edi + 0x30 ] edx
mov eax [ ebx + 0x2f8 ]
lea ecx [ ebx + 0x438 ]
push ecx
lea esi [ edi + 0x38 ]
mov [ edi + 0x34 ] eax
call sub_40e0a0
mov edx [ ebx + 0x448 ]
mov [ edi + 0x48 ] edx
mov eax [ ebx + 0x44c ]
mov [ edi + 0x4c ] eax
mov ecx [ ebx + 0x454 ]
mov [ edi + 0x50 ] ecx
mov edx [ ebx + 0xf8 ]
lea eax [ ebp - 0x3c ]
mov [ edi + 0x54 ] edx
call sub_410b20
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
lea ebx [ edx + ebx + 0x4 ]
call sub_40e310
lea eax [ ebp - 0x3c ]
push eax
call sub_44ccd4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473ad9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_408f40
push 0x14
call sub_4115d7
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor edi edi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov edi eax
jmp r-xdata
lea ecx [ ebp + 0x14 ]
mov [ esi + 0x8 ] 0xc
mov [ esi ] edi
call sub_402250
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
cmp edi ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
sub esp 0x10
mov [ esp ] ecx
mov edx [ ebp + 0x18 ]
mov [ esp + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
mov [ esp + 0x8 ] ecx
mov edx [ ebp + 0x20 ]
mov [ esp + 0xc ] edx
mov eax [ ebp + 0x20 ]
inc [ eax ]
mov eax [ ebp + 0x10 ]
push eax
push edi
call sub_470cc8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
cmp eax ebx
je r-xdata
lea ecx [ ebp + 0x14 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x1c
push edi
call sub_44b3d9
sub_473b76
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
lea eax [ ebp + 0x8 ]
push eax
call sub_443106
push eax
push 0x0
push 0x11
call [ SafeArrayCreateVector@IAT ]
mov edi eax
test edi edi
je r-xdata
lea esi [ ebp + 0x8 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp + 0x8 ]
push ecx
add edi 0x18
call sub_443106
push eax
push ecx
lea eax [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_40b960
push eax
call sub_4680ed
add esp 0x4
push eax
push edi
call sub_410e60
add esp 0xc
mov esi ebx
call sub_408f40
lea esi [ ebp + 0x8 ]
call sub_408f40
lea eax [ edi - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_473bf3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x20
push ebx
push esi
mov esi [ rw-data ]
add eax 0xfffffff4
push edi
cmp eax 0x8
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
movzx eax [ eax + lookup_table_4742f7 ]
jmp [ eax * 4 + jump_table_4742ef ]
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov esi [ ecx ]
push esi
call sub_4564ef
mov ebx eax
mov [ ebp - 0x14 ] ebx
cmp ebx 0xffffffff
je r-xdata
lea esi [ ebp + 0x2c ]
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
cmp eax 0xe
je r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
push eax
push rw-data
call sub_441af5
test al al
je r-xdata
mov [ edi + 0x8a ] 0x0
cmp eax 0xf
je r-xdata
mov esi [ ebp - 0x14 ]
xor edx edx
mov [ edi + 0x7e ] dx
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push esi
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
call sub_4305ae
mov ecx [ esi + 0x58 ]
mov eax [ esi + 0x60 ]
mov edx [ esi + 0x5c ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi + 0x64 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov ecx edx
jmp r-xdata
cmp eax 0xc
je r-xdata
push ebx
push rw-data
call sub_45197b
lea esi [ ebp + 0x2c ]
call sub_408f40
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0x34
mov edx [ ebp + 0x8 ]
jmp [ edx * 4 + jump_table_474303 ]
cmp [ ebp + 0x8 ] 0x1d
ja r-xdata
mov [ edi + 0x8a ] 0x50
mov cx [ rw-data ]
mov [ edi + 0x7e ] cx
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_451006
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_450f30
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_451321
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_451282
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_4511e7
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_450e5d
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_450d6b
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
push [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_450c41
jmp r-xdata
sub esp 0x10
lea eax [ ebp + 0x2c ]
mov ebx esp
call sub_40b960
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push edx
mov edx [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x14 ]
push eax
push ecx
push edx
push edi
push esi
call sub_471359
mov ebx [ ebp - 0x14 ]
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
push ebx
push edi
push esi
call sub_450b7c
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
push ebx
push edi
push esi
call sub_450acc
jmp r-xdata
lea ecx [ ebp + 0x2c ]
call sub_40c650
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push ebx
push edi
push esi
call sub_440c49
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
push ebx
push edi
push esi
call sub_4509d8
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
push ebx
push edi
push esi
call sub_4508f9
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_440b82
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
push ebx
push edi
push esi
call sub_4485cb
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push edi
push esi
call sub_448046
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
push ebx
push edi
push esi
call sub_448480
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
push ebx
push edi
push esi
call sub_4507b7
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
push ebx
push edi
call sub_44835a
jmp r-xdata
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
push eax
push ecx
push ebx
push edi
push esi
call sub_440880
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_4513e1
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_451465
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_451159
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_4510c5
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
push edi
push esi
call sub_4505f0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push ebx
push edi
call sub_448123
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp - 0x4 ]
push edx
mov edx [ ebp - 0x8 ]
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
call sub_46a42b
mov al [ ebp + 0x28 ]
mov dl [ ebp + 0x8 ]
mov [ edi + 0x88 ] dl
mov [ edi + 0x89 ] al
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] ebx
test al 0x1
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x28 ]
and edx 0x2
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x1c ] edx
jne r-xdata
test al al
jne r-xdata
push ebx
push rw-data
call sub_45197b
cmp [ ebp + 0x8 ] 0xb
lea esi [ ebp + 0x2c ]
jne r-xdata
test [ ebp + 0x28 ] 0x4
jne r-xdata
lea eax [ esi + 0x6c ]
push eax
call sub_436565
test al al
je r-xdata
call sub_408f40
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x34
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
cmp [ ebp + 0x18 ] eax
je r-xdata
mov edx [ esi + 0x88 ]
mov eax [ esi + 0x84 ]
mov ecx [ esi + 0x80 ]
push 0x0
push edx
mov edx [ esi + 0x7c ]
push eax
push ecx
push edx
lea eax [ esi + 0x6c ]
push eax
push edi
push esi
call sub_440f0a
cmp [ esi + 0x7c ] 0x55
jne r-xdata
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x34
cmp [ esi + 0x19c ] 0x0
je r-xdata
push 0x0
push edi
push esi
call sub_43028b
mov eax [ edi ]
push eax
call [ GetDC@IAT ]
mov ecx [ edi ]
mov [ ebp + 0x10 ] eax
xor eax eax
push eax
push eax
push 0x31
push ecx
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x24 ] eax
call [ SendMessageW@IAT ]
mov edx [ ebp + 0x10 ]
push eax
push edx
call [ SelectObject@IAT ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ecx
push edx
call sub_44389a
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
add esp 0xc
push eax
push ecx
call [ SelectObject@IAT ]
mov edx [ ebp + 0x10 ]
mov eax [ edi ]
push edx
push eax
call [ ReleaseDC@IAT ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe9
cmp eax 0x3
ja r-xdata
cmp [ ebp + 0x1c ] eax
jne r-xdata
cmp [ esi + 0x80 ] 0x190
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x194 ] 0xffffffff
je r-xdata
or eax 0xffffffff
cmp [ ebp + 0x1c ] eax
jne r-xdata
jmp [ eax * 4 + jump_table_47437b ]
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov esi [ esi + 0x54 ]
cmp esi 0xffffffff
je r-xdata
push eax
push ebx
call sub_44900d
mov al [ esi + 0x190 ]
mov [ edi + 0x8b ] al
mov dl [ esi + 0x194 ]
mov [ edi + 0x8b ] dl
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jne r-xdata
cmp [ esi + 0x64 ] eax
je r-xdata
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
add eax 0x4
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add eax 0xc
mov [ ebp + 0x20 ] edx
mov [ ebp + 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x8
cmp [ esi + 0x88 ] 0x2
je r-xdata
lea esi [ ebp + 0x2c ]
call sub_408f40
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x34
push esi
push ebx
call sub_448d62
mov eax [ esi + 0x64 ]
mov ecx [ esi + 0x60 ]
mov edx [ esi + 0x5c ]
push 0x1
push eax
mov eax [ esi + 0x58 ]
push ecx
mov ecx [ edi ]
push edx
push eax
push ecx
call [ MoveWindow@IAT ]
cmp [ esi + 0x60 ] eax
je r-xdata
mov ecx [ ebp + 0x20 ]
add ecx 0x8
mov [ esi + 0x64 ] ecx
cmp [ rw-data ] 0x2
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x24 ] edx
mov [ ebp + 0x20 ] ecx
mov edx [ ebp + 0x24 ]
add edx 0x8
mov [ esi + 0x60 ] edx
cmp [ rw-data ] 0x2
je r-xdata
sub_47438b
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ GetForegroundWindow@IAT ]
push edi
mov edi ecx
call esi
mov ebx eax
push 0x1
push ebx
mov [ ebp - 0x4 ] ebx
call sub_4439c1
add esp 0x8
lea eax [ ebp - 0xc ]
push eax
call [ GetCaretPos@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0xc ]
push edx
push ebx
call [ ClientToScreen@IAT ]
call esi
mov ecx [ edi + 0x108 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push ecx
call sub_43137e
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
sub [ ebp - 0x8 ] eax
mov edi [ ebp + 0xc ]
sub [ ebp - 0xc ] edx
push 0x2
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ebx [ ebp - 0xc ]
add esp 0x14
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov edi [ ebp - 0x8 ]
add esp 0xc
mov esi eax
call sub_408f40
mov ebx [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
jmp r-xdata
push 0x0
push ebx
call sub_4439c1
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474476
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push esi
push edi
call sub_471f53
cmp [ esi + 0x8 ] 0x3
jne r-xdata
mov [ edi + 0x2f0 ] 0x0
call [ timeGetTime@IAT ]
mov [ edi + 0x2f8 ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
imul eax eax 0x3e8
mov [ edi + 0x2f0 ] eax
call [ timeGetTime@IAT ]
mov [ edi + 0x2f8 ] eax
pop edi
pop esi
pop ebp
retn 0x8
sub_4744d3
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov eax r--data
mov [ ebp - 0x10 ] ecx
call sub_40e710
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
mov esi [ ebx ]
push esi
call sub_4429ef
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
push 0x1
push esi
call sub_4323e1
mov ecx [ ebx + 0x8 ]
call sub_40c650
jmp r-xdata
mov ebx [ edi + 0x4 ]
mov edx [ ebx ]
push 0x1
push edx
call sub_4323e1
cmp esi eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push 0x1
push ecx
call sub_4323e1
mov esi eax
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
push 0x1
push edx
call sub_4323e1
mov esi eax
xor ebx ebx
mov ecx [ ebx + 0x4 ]
call sub_40c650
mov ebx eax
cmp ebx esi
jbe r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40bc70
cmp ebx esi
jae r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov [ ebp - 0x10 ] eax
cmp eax 0x1
je r-xdata
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x20 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax esi
sub eax ebx
mov [ ebp - 0x8 ] eax
inc eax
push eax
call sub_4115d7
add esp 0x4
xor ecx ecx
mov [ ebp - 0x4 ] eax
cmp ebx esi
jae r-xdata
cmp eax 0x2
je r-xdata
mov eax [ edi + 0x4 ]
mov edi [ eax ]
push ebx
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov ecx eax
call sub_40c650
push eax
lea eax [ ebp - 0x20 ]
call sub_403020
inc ebx
cmp ebx esi
jb r-xdata
cmp [ ebp - 0x10 ] 0x1
mov [ ecx + eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub eax ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
call sub_43293f
add esp 0x4
push 0xffffffff
push eax
call sub_43299a
add esp 0x8
jmp r-xdata
mov edx [ edi + 0x4 ]
mov edi [ edx ]
push ebx
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov ecx eax
call sub_40c650
mov ecx [ ebp - 0xc ]
mov [ ecx + ebx ] al
inc ebx
cmp ebx esi
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi eax
call sub_40e710
mov edx [ ebp - 0x4 ]
push edx
call sub_4111dc
push esi
call sub_4111dc
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub_47469a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
cmp [ edi + 0x8 ] 0x2
mov ebx eax
mov [ esp + 0x14 ] ebx
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov esi eax
mov esi eax
mov eax [ ebx + 0x4 ]
cmp esi eax
jbe r-xdata
xor ebx ebx
cmp ebx esi
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
mov ebx eax
cmp ebx esi
jbe r-xdata
sub esi ebx
mov eax esi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10 ] esi
call sub_4013c0
mov eax [ esp + 0x14 ]
push esi
push ebx
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_461465
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
inc esi
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
push 0x1
call sub_40e830
add esp 0x8
xor ebx ebx
test esi esi
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov edi eax
cmp edi 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0xc ]
push ebx
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov edi ebx
lea esi [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
call sub_401c90
mov esi [ esp + 0x14 ]
movzx edi [ eax ]
call sub_408f40
inc ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
cmp ebx [ esp + 0x10 ]
jb r-xdata
lea esi [ esp + 0x18 ]
call sub_40d370
cmp edi 0x1
jne r-xdata
cmp edi 0x2
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_4541a8
push esi
lea ecx [ esp + 0x2c ]
push ecx
call sub_45f645
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_401350
mov edi [ ebp + 0xc ]
push ebx
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
push ebx
lea ecx [ esp + 0x1c ]
push ecx
mov esi eax
call sub_44c94a
movzx edi [ eax ]
call sub_408f40
inc ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
cmp ebx [ esp + 0x10 ]
jb r-xdata
mov esi [ esp + 0x1c ]
mov eax [ ebp + 0xc ]
push esi
push 0x1
mov [ esp + 0x18 ] esi
call sub_40e830
add esp 0x8
xor ebx ebx
test esi esi
je r-xdata
sub_474837
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
mov [ esp + 0x38 ] ecx
call sub_45340c
mov ecx [ ebx + 0x4 ]
mov edi eax
mov eax [ ecx ]
push eax
mov [ esp + 0x18 ] edi
call sub_4533b1
mov edx [ ebx + 0x4 ]
mov esi eax
mov eax [ edx + 0x4 ]
push eax
mov [ esp + 0x1c ] esi
call sub_45340c
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4533b1
mov [ esp + 0x24 ] eax
mov eax esi
lea ecx [ esp + 0x38 ]
call sub_4013c0
xor ecx ecx
cmp [ ebx + 0x8 ] 0x3
mov [ esp + 0x30 ] ecx
mov [ esp + 0xf ] cl
jb r-xdata
cmp [ esp + 0x24 ] ecx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
mov [ esp + 0x30 ] eax
test al 0x2
je r-xdata
mov eax [ esp + 0x30 ]
sub eax ecx
je r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
cmp [ esp + 0xf ] al
mov [ esp + 0x10 ] ecx
sete al
mov [ esp + 0x1c ] eax
add eax esi
push eax
push 0x1
mov eax ebx
call sub_40e830
add esp 0x8
cmp [ esp + 0xf ] 0x0
jne r-xdata
xor ecx ecx
and [ esp + 0x30 ] 0x1
mov [ esp + 0xf ] 0x1
mov [ esp + 0x10 ] ecx
mov [ esp + 0x28 ] ecx
cmp esi ecx
jle r-xdata
dec eax
je r-xdata
test esi esi
jle r-xdata
push 0x0
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
mov esi edx
cmp [ esp + 0xf ] 0x0
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
movzx edx [ edi + ecx * 2 ]
push eax
mov eax [ esp + 0x30 ]
push edx
push eax
call sub_430c57
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x10 ] ecx
cmp esi ecx
jle r-xdata
mov [ esp + 0x10 ] 0xffffffff
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov edi [ ebp + 0xc ]
push 0x2
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
add esp 0x14
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
call sub_40cf00
mov edx [ ebx + 0x4 ]
mov esi eax
mov eax [ edx ]
add esp 0xc
push eax
call sub_4533b1
mov ebx [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x3c ]
call sub_403b70
mov esi [ ebp + 0xc ]
push 0x1
push 0x1
mov eax esi
call sub_40e830
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
add esp 0x8
push eax
call sub_4533b1
push 0x0
mov ebx edi
lea ecx [ esp + 0x3c ]
call sub_403b70
push 0x0
push 0x1
push 0x0
mov edi esi
call sub_40cf00
add esp 0xc
mov esi eax
jmp r-xdata
mov eax [ esp + 0x28 ]
inc eax
mov [ esp + 0x28 ] eax
cmp eax esi
jl r-xdata
inc [ esp + 0x10 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
call sub_45340c
mov edx [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ edx ]
push eax
call sub_4533b1
mov edi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
mov eax 0x1
mov ebx edi
lea ecx [ esp + 0x3c ]
call sub_403b70
mov esi [ esp + 0x1c ]
mov edi [ ebp + 0xc ]
push esi
push 0x1
push 0x0
call sub_40cf00
inc esi
mov [ esp + 0x28 ] esi
add esp 0xc
lea edi [ esp + 0x38 ]
mov esi eax
call sub_40e6a0
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x18 ]
jl r-xdata
lea edi [ esp + 0x38 ]
call sub_40e6a0
mov ecx [ esp + 0x34 ]
mov edx [ ecx ]
mov eax 0x1
sub eax [ esp + 0x10 ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403c90
mov ecx edi
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x10 ] 0x0
jg r-xdata
mov ecx [ esp + 0x2c ]
movzx edx [ ecx ]
push esi
push edx
push edi
call sub_430c57
add esp 0xc
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov ecx edi
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0x10 ]
inc ebx
cmp [ esp + 0xf ] 0x0
mov [ esp + 0x34 ] ebx
je r-xdata
mov ecx eax
sub ecx edi
mov edi [ esp + 0x24 ]
sar ecx 0x1
add ecx edi
sub esi ecx
js r-xdata
mov edi [ ebp + 0xc ]
lea eax [ ebx + 0x1 ]
push eax
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
add esp 0x14
mov esi eax
call sub_408f40
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] ebx
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
call sub_40e830
add esp 0x8
mov [ esp + 0x1c ] 0x0
jmp r-xdata
mov edx [ esp + 0x2c ]
push edi
push edx
push eax
call sub_413262
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
xor edi edi
mov ebx r--data
lea eax [ esp + 0x38 ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x28 ] edi
call sub_402160
cmp [ esp + 0x34 ] edi
jle r-xdata
mov edx [ esp + 0x20 ]
add edx 0x2
mov [ esp + 0x14 ] edx
lea esi [ esi + edi - 0x1 ]
mov eax [ esp + 0x20 ]
inc [ esp + 0x10 ]
lea ecx [ eax + edi * 2 ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov eax [ esp + 0x30 ]
sub eax 0x0
je r-xdata
mov edi [ esp + 0x14 ]
test esi esi
jg r-xdata
mov edx [ esp + 0x14 ]
movzx esi [ edx + edi * 2 ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x2c ]
push eax
push esi
push ecx
call sub_430c57
add esp 0xc
test eax eax
jne r-xdata
dec eax
jne r-xdata
mov edx [ esp + 0x1c ]
mov edi [ ebp + 0xc ]
push edx
mov esi 0x1
push esi
push 0x0
call sub_40cf00
add [ esp + 0x28 ] esi
add esp 0xc
lea edi [ esp + 0x38 ]
mov esi eax
call sub_40e6a0
mov ebx r--data
mov eax edi
call sub_402160
mov eax 0x1
add [ esp + 0x10 ] eax
jmp r-xdata
cmp edi [ esp + 0x18 ]
jne r-xdata
mov eax [ esp + 0x34 ]
cmp [ esp + 0x10 ] eax
jl r-xdata
mov ebx [ esp + 0x14 ]
add [ esp + 0x28 ] eax
push esi
lea eax [ esp + 0x3c ]
call sub_403020
mov eax 0x1
mov edi [ esp + 0x28 ]
mov eax [ esp + 0x14 ]
lea ecx [ eax + edi * 2 ]
mov [ esp + 0x20 ] ecx
mov eax [ esp + 0x24 ]
mov ecx esi
sub ecx [ esp + 0x14 ]
sar ecx 0x1
add ecx eax
sub edi ecx
mov [ esp + 0x18 ] edi
js r-xdata
add eax edi
lea edx [ esi + eax * 2 ]
mov [ esp + 0x20 ] edx
jmp r-xdata
mov edx [ esp + 0x2c ]
push eax
push edx
push esi
call sub_41341f
add esp 0xc
test eax eax
je r-xdata
mov esi [ esp + 0x20 ]
mov eax esi
sub eax ebx
sar eax 0x1
push 0x0
lea ecx [ esp + 0x3c ]
call sub_403b70
mov ebx [ esp + 0x1c ]
mov edi [ ebp + 0xc ]
push ebx
push 0x1
push 0x0
call sub_40cf00
inc ebx
add esp 0xc
lea edi [ esp + 0x38 ]
mov esi eax
mov [ esp + 0x1c ] ebx
call sub_40e6a0
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
inc [ esp + 0x10 ]
lea ecx [ edx + eax * 2 ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov eax [ esp + 0x24 ]
add esi 0x2
lea ecx [ edi + eax - 0x1 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov ecx [ esp + 0x2c ]
movzx edx [ ecx ]
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edi
push edx
push eax
call sub_430c57
mov esi eax
add esp 0xc
mov [ esp + 0x20 ] esi
test esi esi
je r-xdata
sub_474d55
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov eax [ ebx ]
push edi
push eax
mov edi ecx
call sub_441da2
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0xc ] 0xffffffff
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ebx [ esp + 0x10 ]
call sub_40b960
push ebx
call sub_443833
test al al
jne r-xdata
mov ebx [ ebx + 0x8 ]
push ebx
call sub_44cecd
test al al
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
mov edx [ ebp + 0xc ]
push 0x0
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
lea ecx [ esp + 0x20 ]
push ecx
push eax
call sub_432520
push eax
call sub_46886c
mov edx [ edi ]
add esp 0x4
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_403c90
lea esi [ esp + 0x10 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_40c650
lea esi [ esp + 0x10 ]
lea ebx [ eax - 0x1 ]
call sub_408f40
mov esi [ ebp + 0x8 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x10 ] ebx
mov ecx ebx
call sub_40c650
dec eax
mov [ esp + 0xc ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x5
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474e7f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov eax [ ebx ]
push edi
push eax
mov edi ecx
call sub_441da2
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x4
mov [ esp + 0xc ] 0xffffffff
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ebx [ esp + 0x10 ]
call sub_40b960
push ebx
call sub_443833
test al al
jne r-xdata
mov ebx [ ebx + 0xc ]
push ebx
call sub_44cecd
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ eax ]
push 0x0
push ecx
push edx
mov edx [ ebp + 0xc ]
push edx
push ecx
lea ecx [ esp + 0x24 ]
push ecx
push eax
call sub_432520
push eax
call sub_468848
mov edx [ edi ]
add esp 0x4
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_403c90
lea esi [ esp + 0x10 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_40c650
lea esi [ esp + 0x10 ]
lea ebx [ eax - 0x1 ]
call sub_408f40
mov esi [ ebp + 0x8 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x10 ] ebx
mov ecx ebx
call sub_40c650
dec eax
mov [ esp + 0xc ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x5
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474fad
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
mov [ ebp + 0x8 ] 0x0
call sub_4533eb
mov edx [ eax ]
mov esi [ ebp + 0xc ]
sub esp 0x10
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0xc ] eax
inc [ eax ]
push ebx
lea eax [ ebp + 0x8 ]
push eax
push esi
call sub_473ad9
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
call sub_408f40
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax edi
call sub_403c90
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_44b3ac
mov ebx eax
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push ebx
push 0x3
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_475077
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x384
xor eax eax
cmp [ ebp + 0x14 ] al
push ebx
setne al
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0x20 ] 0x0
movsx ebx ax
lea eax [ ebx * 4 ]
sub ecx eax
mov eax [ ecx + 0x4 ]
push eax
mov [ esp + 0x60 ] ebx
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x3c ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x48 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0x40 ] ecx
lea ecx [ eax + ebx - 0x3 ]
mov [ esp + 0x44 ] edx
mov eax ecx
cdq
sub eax edx
sar eax 0x1
lea edx [ eax + eax ]
mov [ esp + 0x6c ] ecx
cmp edx ecx
je r-xdata
lea ecx [ esp + 0x60 ]
xor esi esi
push ecx
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x74 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x1c ] 0xffffffff
call sub_4646e0
test al al
jne r-xdata
mov esi edi
call sub_408f40
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x4
add eax ecx
call sub_403c90
lea ecx [ esp + 0x3c ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax 0x3
sub eax ebx
mov [ esp + 0x1c ] eax
mov [ esp + 0x68 ] esi
cmp [ esp + 0x6c ] esi
jle r-xdata
mov esi edi
call sub_408f40
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_403c90
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea ecx [ eax * 4 ]
mov [ esp + 0x18 ] ecx
lea ebx [ esp + 0x98 ]
lea ecx [ esp + 0x24 ]
call sub_430e4d
lea ecx [ esp + 0x3c ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x64 ]
push ecx
push edx
call sub_464812
mov [ esp + 0x20 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_44b3ac
mov [ esp + 0x60 ] eax
mov esi edi
call sub_408f40
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
lea ecx [ esp + 0x4c ]
call sub_402250
jmp r-xdata
cmp [ ebx ] 0x10
jne r-xdata
sub esp 0x10
mov eax esp
lea ecx [ esp + 0x34 ]
push ecx
push eax
call sub_430d31
mov eax [ ebp + 0xc ]
mov edx 0x4
sub edx ebx
push edx
push eax
lea ecx [ esp + 0x78 ]
push ecx
call sub_4577e9
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x6c ]
lea eax [ esp + 0x60 ]
push eax
mov [ esp + 0x70 ] edx
call sub_410cfc
test eax eax
jne r-xdata
mov esi edi
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
jmp r-xdata
mov [ esp + 0x6c ] esi
inc esi
push esi
push 0x1
mov eax edi
call sub_40e830
add esp 0x8
cmp [ esp + 0x70 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x67
push ecx
call sub_45e737
push 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebx + 0x8 ]
add [ esp + 0x68 ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ esp + 0x6c ] ebx
jle r-xdata
push 0x0
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
push eax
lea edx [ esp + 0x7c ]
push edx
call sub_46c43e
inc [ esp + 0x14 ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_436299
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x18 ]
mov eax [ eax + edx ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x4c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x50 ] edx
lea edx [ ebx - 0x8 ]
mov [ esp + 0x58 ] eax
push edx
lea eax [ esp + 0x50 ]
push eax
mov [ esp + 0x5c ] ecx
call sub_463ad5
test al al
je r-xdata
mov ebx [ esp + 0x5c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x18 ]
lea eax [ eax + edx + 0x4 ]
mov [ esp + 0x38 ] eax
mov eax [ eax ]
push eax
call sub_441da2
test al al
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
lea ecx [ eax * 4 ]
mov [ esp + 0x10 ] ecx
mov esi edi
call sub_408f40
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x5
add eax ecx
call sub_403c90
lea ecx [ esp + 0x4c ]
call sub_402250
jmp r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ ecx ]
push eax
call sub_443106
lea ecx [ eax - 0x1 ]
shr ecx 0x2
add [ esp + 0x10 ] ecx
mov eax [ esp + 0x10 ]
lea edx [ ecx + 0x1 ]
imul edx [ ebx + 0x8 ]
add [ esp + 0x68 ] edx
sub eax ecx
cmp eax esi
jle r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_443833
test al al
je r-xdata
push esi
lea ecx [ esp + eax + 0x94 ]
push ecx
call sub_46c43e
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x10 ]
mov ebx [ edx + eax + 0x4 ]
push ebx
call sub_441da2
push ebx
test al al
je r-xdata
mov edx [ esp + 0x38 ]
mov eax [ edx ]
push eax
call sub_432520
mov eax [ eax + 0x8 ]
lea edx [ ecx + esi + 0x1 ]
cmp esi edx
jge r-xdata
lea edx [ eax + eax * 2 ]
lea edx [ esp + edx * 8 + 0x90 ]
mov [ esp + 0xc ] edx
lea edx [ eax + ecx ]
lea edx [ edx + edx * 2 ]
sub eax esi
lea edx [ esp + edx * 8 + 0x90 ]
mov [ esp + 0x34 ] eax
mov edx [ esp + 0x20 ]
push edx
call [ FreeLibrary@IAT ]
lea eax [ ebx + 0x1 ]
push eax
push 0x1
push 0x0
mov [ esp + 0x28 ] eax
call sub_40cf00
mov edx [ esp + 0x34 ]
mov esi eax
mov eax [ edx + ebx * 4 ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
add eax eax
add esp 0xc
cmp [ esp + eax + 0x98 ] 0x10
jne r-xdata
call sub_44b3ac
mov ebx eax
call sub_408f40
mov [ esi + 0x8 ] 0x7
mov [ esi ] ebx
jmp r-xdata
mov ebx esi
call sub_408e80
jmp r-xdata
dec [ esp + 0x14 ]
jmp r-xdata
sub edx esi
add [ esp + 0x14 ] edx
mov ecx ebx
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
mov [ edx ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0x10 ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + 0x14 ]
sub [ esp + 0xc ] 0x18
mov [ edx + 0x14 ] eax
sub edx 0x18
dec [ esp + 0x34 ]
jne r-xdata
mov ebx [ esp + 0x1c ]
add [ esp + 0x10 ] 0x8
cmp ebx [ esp + 0x6c ]
jl r-xdata
add [ esp + 0x18 ] 0x8
lea ecx [ esp + 0x4c ]
call sub_402250
inc esi
add ebx 0x18
cmp esi [ esp + 0x6c ]
jl r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
add [ esp + 0xc ] 0x4
mov [ ecx - 0x8 ] eax
mov [ ecx ] 0x10
mov [ ecx + 0x4 ] 0x0
mov eax [ ebx + 0x8 ]
mov [ ecx + 0x8 ] eax
add ecx 0x18
dec edx
jne r-xdata
sub_4755c4
push ebp
mov ebp esp
mov eax 0x305c
call sub_422240
push ebx
push esi
push edi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
call sub_40bc70
push 0x14
mov ebx sub_44a4e8
mov eax 0x200
lea ecx [ ebp - 0x305c ]
call sub_410ca0
push 0x0
push 0x2
mov [ ebp - 0x250 ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov esi eax
lea eax [ ebp - 0x250 ]
push eax
push esi
call [ Process32FirstW@IAT ]
lea edi [ ebp - 0x305c ]
lea eax [ edi + 0x4 ]
lea ebx [ ebp - 0x454 ]
call sub_402160
mov ecx [ ebp - 0x248 ]
inc [ ebp - 0x4 ]
mov [ edi ] ecx
add edi 0x14
mov edx [ eax + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
push eax
lea eax [ ebp - 0x454 ]
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x658 ]
push ecx
lea edx [ ebp - 0x454 ]
push edx
lea eax [ ebp - 0x85c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x22c ]
push edx
call sub_413a0e
lea eax [ ebp - 0x658 ]
push eax
lea ecx [ ebp - 0x454 ]
push ecx
call sub_411536
mov eax [ ebp + 0x8 ]
add esp 0x1c
cmp [ eax + 0x8 ] 0x0
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
inc eax
push 0x2
push eax
push 0x2
mov eax edi
call sub_40e830
push 0x0
push 0x0
push 0x2
push 0x0
call sub_40cf00
add esp 0x1c
mov esi eax
call sub_408f40
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
test eax eax
jle r-xdata
lea edx [ ebp - 0x250 ]
push edx
push esi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
push sub_441d9a
push 0x200
push 0x14
lea edx [ ebp - 0x305c ]
push edx
call sub_410c20
lea ecx [ ebp - 0x24 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi 0x1
lea ecx [ ebp - 0x305c ]
mov [ ebp + 0xc ] esi
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x0
push esi
push 0x2
push 0x0
call sub_40cf00
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ edx + 0x4 ]
add esp 0x10
call sub_40e710
push 0x1
push esi
push 0x2
push 0x0
call sub_40cf00
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
fild [ eax ]
add esp 0x10
test ecx ecx
jns r-xdata
mov esi ebx
fstp [ ebp - 0xc ]
call sub_408f40
fld [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x14
fstp [ ebx ]
mov eax 0x1
add [ ebp + 0xc ] eax
sub [ ebp - 0x4 ] eax
mov [ ebx + 0x8 ] 0x3
jne r-xdata
fadd [ r--data ]
mov esi [ ebp + 0xc ]
sub_4757a7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
mov [ esp + 0x14 ] ebx
call sub_408f40
xor esi esi
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
cmp ebx 0x1
jbe r-xdata
lea ebx [ esp + 0x20 ]
call sub_40d290
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
mov esi eax
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x18 ] 0xffffffff
call sub_443106
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_408e80
call [ GetCurrentProcessId@IAT ]
lea ecx [ esp + 0x13 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_45340c
push eax
call sub_443d19
add esp 0xc
test al al
je r-xdata
push 0x28
lea eax [ esp + 0x34 ]
push eax
push ebx
call [ GetProcessMemoryInfo@IAT ]
test eax eax
je r-xdata
dec eax
jne r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
mov ebx 0x2
push ebx
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ecx [ esp + 0x50 ]
add esp 0x14
mov esi eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] 0x0
call sub_408f40
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call sub_40cf00
mov edi [ esp + 0x44 ]
add esp 0xc
mov esi eax
call sub_408f40
xor eax eax
mov [ esi + 0x4 ] eax
lea ecx [ esp + 0x30 ]
push ecx
push ebx
call [ GetProcessIoCounters@IAT ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov ebx eax
mov eax esi
sub eax 0x0
mov [ esp + 0x14 ] ebx
je r-xdata
push 0x6
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov edx [ esp + 0x44 ]
mov esi eax
mov eax [ esp + 0x48 ]
add esp 0x14
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_408f40
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push 0x1
push 0x1
mov ebx 0x2
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
call sub_40cf00
mov ecx [ esp + 0x48 ]
mov esi eax
mov eax [ esp + 0x44 ]
add esp 0xc
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
call sub_408f40
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push ebx
push 0x1
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call sub_40cf00
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x50 ]
add esp 0xc
mov esi eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
call sub_408f40
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push 0x3
push 0x1
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call sub_40cf00
mov edx [ esp + 0x54 ]
mov esi eax
mov eax [ esp + 0x58 ]
add esp 0xc
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_408f40
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push 0x4
push 0x1
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
call sub_40cf00
mov ecx [ esp + 0x60 ]
mov esi eax
mov eax [ esp + 0x5c ]
add esp 0xc
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
call sub_408f40
mov [ esi + 0x8 ] ebx
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push 0x5
push 0x1
push 0x0
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call sub_40cf00
mov ecx [ esp + 0x68 ]
mov edi [ esp + 0x64 ]
add esp 0xc
mov esi eax
mov [ esp + 0x1c ] ecx
call sub_408f40
mov edx [ esp + 0x1c ]
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x8 ] ebx
mov ebx [ esp + 0x14 ]
mov [ esi ] edi
sub_475a67
push ebp
mov ebp esp
sub esp 0x3c
xor edx edx
push ebx
mov ebx [ ebp + 0xc ]
xor ecx ecx
or eax 0xffffffff
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0xa ] dx
mov edx [ ebx + 0x4 ]
push edi
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] ax
mov eax [ esi ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x2c ] ecx
mov edi 0x1
mov [ ebp - 0x30 ] edi
mov edx [ edx + eax * 4 ]
movsx edx [ edx + 0xa ]
inc eax
mov [ esi ] eax
mov [ ebp - 0x8 ] edx
mov edx [ ebx + 0x4 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x47
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x6f
push ecx
call sub_45e737
lea esi [ ebp - 0x38 ]
call sub_408f40
lea edx [ ebp - 0x14 ]
push edx
call sub_44b469
lea ecx [ ebp - 0x24 ]
call sub_40edc0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
inc eax
mov [ esi ] eax
mov [ ebp + 0xc ] ecx
add [ ebp + 0xc ] edi
sub edx edi
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ esi ]
mov eax [ edx + eax * 4 ]
movsx edx [ eax + 0x8 ]
sub edx 0x47
je r-xdata
cmp [ ebp + 0xc ] ecx
je r-xdata
sub edx 0x37
jne r-xdata
add [ esi ] edi
mov cx [ ebp - 0x8 ]
mov eax 0x7f
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x14 ]
lea edi [ ebp - 0x24 ]
mov [ ebp - 0xa ] cx
call sub_402780
mov ecx [ ebp - 0x20 ]
xor eax eax
mov [ ebp + 0x10 ] eax
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x7f
je r-xdata
sub [ ebp + 0xc ] edi
jmp r-xdata
lea edi [ ebp - 0x24 ]
call sub_402780
inc [ esi ]
mov edi 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esi ]
lea esi [ ebp - 0x38 ]
call sub_408f40
lea eax [ ebp - 0x14 ]
push eax
call sub_44b469
lea ecx [ ebp - 0x24 ]
call sub_40edc0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edi edi
push 0xffffffff
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x24 ]
push edx
call sub_40a780
test eax eax
jne r-xdata
mov esi [ eax ]
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
xor ecx ecx
call sub_40c2c0
test al al
je r-xdata
lea esi [ ebp - 0x38 ]
call sub_408f40
lea ecx [ ebp - 0x14 ]
push ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x38 ]
push eax
call sub_40ba10
mov ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
test [ ebp - 0x4 ] 0x100
jne r-xdata
call sub_44b469
lea ecx [ ebp - 0x24 ]
call sub_40edc0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov edx [ ecx + eax * 4 + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
je r-xdata
mov edi [ ebp + 0xc ]
cmp [ edi + 0x8 ] 0x8
mov ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x6e
push ecx
call sub_45e737
lea esi [ ebp - 0x38 ]
call sub_408f40
lea edx [ ebp - 0x14 ]
push edx
jmp r-xdata
inc eax
mov [ ebp + 0x10 ] eax
mov ebx eax
inc eax
mov [ ebp + 0x10 ] eax
cmp [ edi + 0x8 ] 0x5
jne r-xdata
mov edx [ ecx + eax * 4 + 0x4 ]
cmp [ edx + 0x8 ] 0x35
je r-xdata
lea esi [ ebp - 0x38 ]
call sub_408f40
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] 0x6
mov [ ebp - 0x38 ] edi
mov edx [ eax + ecx * 4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x40
je r-xdata
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
cmp ax 0x7f
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x1
lea ecx [ ebp + 0xc ]
push ecx
push edx
lea eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x24 ]
call sub_40c4e0
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea esi [ ebp - 0x38 ]
call sub_408f40
lea eax [ ebp - 0x14 ]
push eax
mov edi [ ebp + 0xc ]
sub_475cf6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ esp + 0x3c ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] eax
push edi
mov eax r--data
mov edi ecx
mov [ esp + 0x48 ] 0x1
call sub_40e710
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x8
je r-xdata
push eax
lea ebx [ esp + 0x44 ]
call sub_408e80
push ebx
call sub_432416
test al al
jne r-xdata
push r--data
push eax
call sub_45340c
push eax
call sub_41313c
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x8 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_441f1e
mov ebx [ esp + 0x14 ]
mov edx [ ebx ]
mov ecx [ edx ]
lea eax [ esp + 0x1c ]
push eax
push r--data
push ebx
call ecx
test eax eax
jns r-xdata
push 0x1
push r--data
push 0x0
push 0x2
push edi
call sub_451b42
mov edi eax
lea eax [ esp + 0x20 ]
push eax
call sub_430ead
lea ecx [ esp + 0x14 ]
push ecx
call sub_430ead
lea edx [ esp + 0x10 ]
push edx
call sub_430ead
lea eax [ esp + 0x24 ]
push eax
call sub_430ead
lea ecx [ esp + 0x28 ]
push ecx
call sub_430ead
lea edx [ esp + 0x2c ]
push edx
call sub_430ead
lea eax [ esp + 0x18 ]
push eax
call sub_430ead
lea ecx [ esp + 0x1c ]
push ecx
call sub_430ead
mov esi ebx
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x8 ] 0x1
jne r-xdata
push 0x0
push r--data
push 0x0
push 0x1
push edi
call sub_451b42
lea ecx [ esp + 0x20 ]
push ecx
mov edi eax
call sub_430ead
lea edx [ esp + 0x14 ]
push edx
call sub_430ead
lea eax [ esp + 0x10 ]
push eax
call sub_430ead
lea ecx [ esp + 0x24 ]
push ecx
call sub_430ead
lea edx [ esp + 0x28 ]
push edx
call sub_430ead
lea eax [ esp + 0x2c ]
push eax
call sub_430ead
lea ecx [ esp + 0x18 ]
push ecx
call sub_430ead
lea edx [ esp + 0x1c ]
push edx
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x8 ] 0x3
lea edx [ esp + 0x50 ]
push edx
jne r-xdata
push 0x1
push 0x0
push 0x0
push eax
push edi
call sub_451b42
lea edx [ esp + 0x20 ]
push edx
mov edi eax
call sub_430ead
lea eax [ esp + 0x14 ]
push eax
call sub_430ead
lea ecx [ esp + 0x10 ]
push ecx
call sub_430ead
lea edx [ esp + 0x24 ]
push edx
call sub_430ead
lea eax [ esp + 0x28 ]
push eax
call sub_430ead
lea ecx [ esp + 0x2c ]
push ecx
call sub_430ead
lea edx [ esp + 0x18 ]
push edx
call sub_430ead
lea eax [ esp + 0x1c ]
push eax
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x0
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
lea ecx [ esp + 0x14 ]
push ecx
push eax
call sub_45340c
push eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x48 ]
push ecx
push eax
call sub_45340c
push eax
push edi
call sub_465124
test al al
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_430ead
lea ecx [ esp + 0x14 ]
push ecx
call sub_430ead
lea edx [ esp + 0x10 ]
push edx
call sub_430ead
lea eax [ esp + 0x24 ]
push eax
call sub_430ead
lea ecx [ esp + 0x28 ]
push ecx
call sub_430ead
lea edx [ esp + 0x2c ]
push edx
call sub_430ead
lea eax [ esp + 0x18 ]
push eax
call sub_430ead
lea ecx [ esp + 0x1c ]
push ecx
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
lea edx [ esp + 0x54 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
js r-xdata
push 0x1
push 0x0
push 0x0
push eax
push edi
call sub_451b42
lea ecx [ esp + 0x20 ]
push ecx
mov edi eax
call sub_430ead
lea edx [ esp + 0x14 ]
push edx
call sub_430ead
lea eax [ esp + 0x10 ]
push eax
call sub_430ead
lea ecx [ esp + 0x24 ]
push ecx
call sub_430ead
lea edx [ esp + 0x28 ]
push edx
call sub_430ead
lea eax [ esp + 0x2c ]
push eax
call sub_430ead
lea ecx [ esp + 0x18 ]
push ecx
call sub_430ead
lea edx [ esp + 0x1c ]
push edx
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_430f0e
add esp 0x10
test eax eax
jns r-xdata
push 0xd8
call sub_4115d7
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
jmp r-xdata
push 0x1
push r--data
push 0x0
push 0x2
push edi
call sub_451b42
lea edx [ esp + 0x20 ]
push edx
mov edi eax
call sub_430ead
lea eax [ esp + 0x14 ]
push eax
call sub_430ead
lea ecx [ esp + 0x10 ]
push ecx
call sub_430ead
lea edx [ esp + 0x24 ]
push edx
call sub_430ead
lea eax [ esp + 0x28 ]
push eax
call sub_430ead
lea ecx [ esp + 0x2c ]
push ecx
call sub_430ead
lea edx [ esp + 0x18 ]
push edx
call sub_430ead
lea eax [ esp + 0x1c ]
push eax
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax + 0x44 ]
call sub_40e710
jmp r-xdata
push 0xd8
call sub_4115d7
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push 0x1
push r--data
push 0x0
push 0x13
push edi
call sub_451b42
mov edi eax
lea eax [ esp + 0x20 ]
push eax
call sub_430ead
lea ecx [ esp + 0x14 ]
push ecx
call sub_430ead
lea edx [ esp + 0x10 ]
push edx
call sub_430ead
lea eax [ esp + 0x24 ]
push eax
call sub_430ead
lea ecx [ esp + 0x28 ]
push ecx
call sub_430ead
lea edx [ esp + 0x2c ]
push edx
call sub_430ead
lea eax [ esp + 0x18 ]
push eax
call sub_430ead
lea ecx [ esp + 0x1c ]
push ecx
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov edx [ r--data ]
sub esp 0x10
mov [ esp ] edx
mov edx [ r--data ]
mov [ esp + 0x4 ] edx
mov edx [ r--data ]
mov [ esp + 0x8 ] edx
mov edx [ r--data ]
mov [ esp + 0xc ] edx
push ecx
call sub_45340c
push eax
push 0x0
push 0x0
push 0x0
push ebx
call sub_470b6c
mov esi eax
test esi esi
jne r-xdata
push 0x1
push r--data
push 0x0
push 0xa
push edi
call sub_451b42
lea edx [ esp + 0x20 ]
push edx
mov edi eax
call sub_430ead
lea eax [ esp + 0x14 ]
push eax
call sub_430ead
lea ecx [ esp + 0x10 ]
push ecx
call sub_430ead
lea edx [ esp + 0x24 ]
push edx
call sub_430ead
lea eax [ esp + 0x28 ]
push eax
call sub_430ead
lea ecx [ esp + 0x2c ]
push ecx
call sub_430ead
lea edx [ esp + 0x18 ]
push edx
call sub_430ead
lea eax [ esp + 0x1c ]
push eax
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x50 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ esp + 0x18 ]
sub esp 0x10
mov [ esp ] edx
mov edx [ esp + 0x64 ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x68 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0x6c ]
mov [ esp + 0xc ] edx
push ecx
call sub_45340c
push eax
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
push esi
push ebx
call sub_470b6c
mov esi eax
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x1
mov edx [ esi ]
mov eax [ edx + 0x1c ]
mov ecx esi
call eax
mov ebx eax
test ebx ebx
jns r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x60 ]
mov edx 0x9
push eax
mov [ esp + 0x64 ] dx
mov [ esp + 0x6c ] esi
call sub_468070
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
mov [ rw-data ] 0x1
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
push 0x1
push 0x0
push 0x0
push ebx
push edi
call sub_451b42
mov edi eax
lea eax [ esp + 0x20 ]
push eax
call sub_430ead
lea ecx [ esp + 0x14 ]
push ecx
call sub_430ead
lea edx [ esp + 0x10 ]
push edx
call sub_430ead
lea eax [ esp + 0x24 ]
push eax
call sub_430ead
lea ecx [ esp + 0x28 ]
push ecx
call sub_430ead
lea edx [ esp + 0x2c ]
push edx
call sub_430ead
lea eax [ esp + 0x18 ]
push eax
call sub_430ead
lea ecx [ esp + 0x1c ]
push ecx
call sub_430ead
lea esi [ esp + 0x40 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476399
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
fld [ ebp + 0x10 ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
pop ebp
retn 0x10
sub_4763ca
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push 0x0
push 0x1
push 0x1
mov ebx ecx
call sub_40cf00
add esp 0xc
test eax eax
jne r-xdata
mov ecx eax
call sub_40c650
cmp eax 0x2b594d1
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov edi [ eax ]
push 0x1
push 0x1
push 0x1
call sub_40cf00
add esp 0xc
mov ecx eax
call sub_40c650
push eax
call [ Ordinal_WSOCK32_3@IAT ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
call sub_408f40
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ ebx ]
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4764d1
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x4
push 0x1
mov eax ebx
mov esi ecx
call sub_40e830
add esp 0x8
push 0x11
push 0x2
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
mov [ ebp - 0x4 ] edi
cmp edi 0xffffffff
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
push 0x0
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov [ esi ] 0xffffffff
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jbe r-xdata
push 0x0
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2b594d1
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp - 0x4 ]
push 0x2
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
call sub_40cf00
mov edx [ ebp + 0x8 ]
mov esi eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
add esp 0xc
push eax
call sub_4533eb
mov edi eax
call sub_40e6a0
push 0x3
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov esi eax
mov eax [ edx + 0x4 ]
add esp 0xc
push eax
call sub_4533eb
mov edi eax
call sub_40e6a0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
test al 0x1
je r-xdata
push 0x4
lea edx [ ebp + 0xc ]
push edx
push 0x20
push 0xffff
push edi
mov [ ebp + 0xc ] 0x1
call [ Ordinal_WSOCK32_21@IAT ]
test eax eax
je r-xdata
sub_476619
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
sub esp 0x14
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c650
push eax
push edi
call sub_4533eb
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push esi
call sub_465225
test al al
jne r-xdata
push ebx
push 0x11
push 0x2
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov ebx [ ebp + 0xc ]
mov edi eax
push 0x4
push 0x1
mov eax ebx
mov [ ebp - 0x4 ] edi
call sub_40e830
add esp 0x8
cmp edi 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
call [ Ordinal_WSOCK32_2@IAT ]
push 0x0
cmp eax 0xffffffff
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2b594d1
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ ebp - 0x4 ]
push 0x2
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
call sub_40cf00
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
add esp 0xc
push eax
call sub_4533eb
mov edi eax
call sub_40e6a0
push 0x3
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
mov edx [ ebp + 0x8 ]
mov esi eax
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
add esp 0xc
push eax
call sub_4533eb
mov edi eax
call sub_40e6a0
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
push edi
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
push 0x0
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
pop ebx
mov [ esi + 0x8 ] 0x1
pop edi
mov [ esi ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47679f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x15c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
push edi
call sub_40c650
mov ebx [ ebp + 0xc ]
mov [ esp + 0x1c ] eax
mov eax r--data
call sub_40e710
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
push 0x0
push 0x1
push 0x1
call sub_40cf00
add esp 0xc
test eax eax
jne r-xdata
mov ecx eax
call sub_40c650
cmp eax 0x2b594d1
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
push 0xffffffff
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
push 0x1
push 0x1
push 0x1
call sub_40cf00
add esp 0xc
mov ecx eax
mov [ esp + 0x18 ] eax
call sub_40c650
mov edi eax
xor eax eax
xor edx edx
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] eax
mov [ esp + 0x2a ] eax
mov [ esp + 0x2e ] eax
mov [ esp + 0x32 ] ax
mov [ esp + 0x44 ] 0x10
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x48 ]
push ecx
push eax
push eax
lea edx [ esp + 0x6c ]
push edx
push eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] 0x186a0
mov [ esp + 0x78 ] edi
mov [ esp + 0x74 ] 0x1
call [ Ordinal_WSOCK32_18@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x10 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edi
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x1c ]
inc ecx
push ecx
call sub_4115d7
add esp 0x4
lea edx [ esp + 0x60 ]
push edx
push edi
mov [ esp + 0x1c ] eax
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ esp + 0x14 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x14 ]
push eax
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x44 ]
push eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
push ecx
push 0x0
push edx
push eax
push edi
call [ Ordinal_WSOCK32_17@IAT ]
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xffffffff
jne r-xdata
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0x10 ] 0x0
jb r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ esp + 0x14 ]
push esi
mov [ esi + edi ] 0x0
call sub_413530
add esp 0x4
cmp eax edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
and eax 0x1
mov [ esp + 0x20 ] eax
call sub_40c650
and eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
push edi
push esi
je r-xdata
mov eax edi
lea ecx [ esp + 0x34 ]
call sub_4013c0
push esi
lea ecx [ esp + 0x54 ]
push ecx
call sub_444e90
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x54 ]
push eax
call sub_403af0
lea esi [ esp + 0x50 ]
call sub_401350
cmp [ esp + 0x10 ] 0x0
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x34 ]
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
push 0x3
push 0x1
mov eax ebx
call sub_40e830
push 0x1
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
mov edx [ esp + 0x3c ]
add esp 0x14
push edx
mov esi eax
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ esp + 0x38 ]
push eax
call sub_444e90
lea ecx [ esp + 0x50 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
call sub_466715
mov edi eax
call sub_40e6a0
lea ecx [ esp + 0x50 ]
call sub_402250
push 0x2
push 0x1
push 0x0
mov edi ebx
call sub_40cf00
mov esi eax
mov eax [ esp + 0x32 ]
add esp 0xc
push eax
call [ Ordinal_WSOCK32_15@IAT ]
movzx edi ax
call sub_408f40
push 0x0
mov [ esi ] edi
push 0x1
push 0x0
mov edi ebx
mov [ esi + 0x8 ] 0x1
call sub_40cf00
add esp 0xc
lea esi [ esp + 0x34 ]
mov [ esp + 0x18 ] eax
call sub_401350
mov edi [ esp + 0x1c ]
push edi
push ebx
mov ecx [ esp + 0x20 ]
push edi
push ecx
jmp r-xdata
call sub_40e6a0
lea ecx [ esp + 0x34 ]
call sub_402250
jmp r-xdata
mov esi ebx
cmp [ esp + 0x10 ] 0x0
push edi
je r-xdata
call sub_453132
push eax
call sub_410e60
add esp 0xc
mov edx [ esp + 0x14 ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x18 ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push ecx
push edi
push edx
jmp r-xdata
sub_476b17
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push 0x0
push 0x1
push 0x1
mov ebx ecx
call sub_40cf00
add esp 0xc
test eax eax
jne r-xdata
mov ecx eax
call sub_40c650
cmp eax 0x2b594d1
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov edi [ eax ]
push 0x3
push 0x1
push 0x1
call sub_40cf00
add esp 0xc
mov ecx eax
call sub_40c650
push eax
push 0x2
push 0x1
push 0x1
call sub_40cf00
add esp 0xc
push eax
call sub_4533eb
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
call sub_465225
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov edi [ edx ]
push 0x1
push 0x1
push 0x1
call sub_40cf00
add esp 0xc
mov ecx eax
call sub_40c650
mov edi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4680ed
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov [ ebp + 0x8 ] eax
call sub_443106
mov edx [ ebp + 0x8 ]
push 0x10
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push eax
push edx
push edi
call [ Ordinal_WSOCK32_20@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esi ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
mov [ esi ] 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476ca4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push esi
push 0x0
call [ Sleep@IAT ]
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] 0x40
call [ GlobalMemoryStatusEx@IAT ]
mov esi [ ebp + 0xc ]
push 0x7
push 0x1
mov eax esi
call sub_40e830
fild [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
test ecx ecx
jns r-xdata
fstp [ esp ]
push 0x0
push esi
call sub_476399
fild [ esp + 0x10 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x1
push esi
call sub_476399
fild [ esp + 0x18 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x2
push esi
call sub_476399
fild [ esp + 0x20 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x3
push esi
call sub_476399
fild [ esp + 0x28 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x4
push esi
call sub_476399
fild [ esp + 0x30 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x5
push esi
call sub_476399
fild [ esp + 0x38 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x6
push esi
call sub_476399
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
fadd [ r--data ]
sub_476d8d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
call [ GetCursorPos@IAT ]
call [ GetForegroundWindow@IAT ]
mov edx [ esi + 0x100 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push edx
call sub_43137e
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov edx [ edi + 0x4 ]
mov ebx [ edx ]
push ebx
call sub_4536cb
test al al
jne r-xdata
mov edi [ ebp + 0xc ]
push 0x2
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ebx [ ebp - 0x8 ]
add esp 0x14
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov edi [ ebp - 0x4 ]
add esp 0xc
mov esi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_40c650
test eax eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
cmp eax 0x1
jne r-xdata
mov edi [ ebp - 0x8 ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476e95
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ eax ]
push edi
call sub_40c650
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x50 ] eax
call sub_40c650
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x4c ] eax
call sub_40c650
mov edi eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x48 ] edi
call sub_40c650
cmp [ esi + 0x8 ] 0x8
mov ebx eax
mov [ ebp - 0x44 ] ebx
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x1c ]
push eax
call sub_44b3ac
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_40c650
cmp eax 0x1
jle r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call sub_44b3ac
jmp r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c650
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c650
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x104 ]
push ecx
push eax
call sub_43137e
cmp [ esi + 0x8 ] 0x7
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
mov ecx [ ebp - 0xc ]
xor edx edx
neg ecx
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] ecx
lea ecx [ ecx ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
push eax
call sub_40c650
push eax
lea edx [ ebp - 0x38 ]
push edx
call sub_442140
cmp edi [ ebp - 0x50 ]
mov eax [ ebp - 0x4c ]
setl [ ebp - 0x1 ]
cmp ebx eax
setl [ ebp - 0x2 ]
sub ebx eax
push ebx
call sub_4152bb
sub edi [ ebp - 0x50 ]
lea esi [ eax + 0x1 ]
push edi
mov [ ebp - 0x2c ] esi
call sub_4152bb
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x18 ]
add esp 0x8
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
push edx
push edi
mov [ ebp + 0xb ] 0x0
call sub_4313ca
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x6
jb r-xdata
push eax
call sub_4111dc
add esp 0x4
cmp [ ebp + 0xb ] 0x0
jne r-xdata
lea ecx [ ebx * 4 + 0x4 ]
mov edi ecx
imul edi edx
cmp [ ebp + 0xb ] 0x0
lea edx [ edi + ecx ]
mov ecx edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x30 ]
add [ ebp - 0x14 ] ecx
cmp [ ebp + 0xb ] 0x0
mov [ ebp - 0x10 ] edx
je r-xdata
jmp r-xdata
cmp edx esi
jge r-xdata
cmp ecx [ ebp - 0x20 ]
jge r-xdata
add ecx eax
push ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_4420f6
test al al
je r-xdata
cmp [ ebp + 0xb ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea edx [ eax + ecx * 4 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edx
je r-xdata
mov esi [ ebp + 0xc ]
push 0x2
push 0x1
mov eax esi
mov [ ebp + 0xb ] 0x1
call sub_40e830
mov eax [ ebp - 0x8 ]
sub eax edi
cdq
and edx 0x3
add eax edx
add esp 0x8
sar eax 0x2
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0x50 ]
add ecx eax
mov ecx [ ebp - 0x48 ]
sub ecx eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
add eax [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
sub ecx [ ebp - 0x40 ]
push 0x0
push 0x1
push 0x0
mov edi esi
mov [ ebp - 0x24 ] ecx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
cmp [ ebp - 0x2 ] 0x0
mov edx [ ebp - 0x24 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
je r-xdata
sub eax [ ebp - 0x3c ]
push 0x1
push 0x1
push 0x0
mov [ ebp - 0x24 ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
mov esi [ ebp - 0x2c ]
sub_477145
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
push edx
call sub_408e80
push ebx
call sub_467ac4
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_477167
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x4
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
dec eax
je r-xdata
push eax
call sub_45340c
cmp [ eax ] 0x30
jne r-xdata
cmp ecx 0x7
je r-xdata
mov esi 0x1
jmp r-xdata
dec eax
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx ]
push esi
push ecx
push eax
call sub_443006
add esp 0x4
push edx
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_466734
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
lea esi [ esp + 0x10 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
cmp ecx 0xb
jne r-xdata
lea esi [ eax + 0x2 ]
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
xor ecx ecx
cmp eax 0xa
setg cl
inc ecx
mov esi ecx
cmp ecx 0x58
jne r-xdata
push eax
call sub_443106
xor edx edx
cmp eax 0x4
setg dl
lea esi [ edx + 0x1 ]
jmp r-xdata
sub_47722a
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
call sub_45340c
push 0x10
lea ecx [ ebp - 0xc ]
mov esi eax
push ecx
push esi
call sub_432cc2
add esp 0xc
test al al
jne r-xdata
mov edi 0x1
cmp [ ebx + 0x8 ] edi
jbe r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
push esi
call [ lstrlenW@IAT ]
xor ecx ecx
cmp eax 0x8
setg cl
inc ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
sub eax edi
je r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
sub eax edi
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
push edx
push eax
push ecx
lea edx [ ebp - 0x1c ]
push edx
call sub_466734
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
lea esi [ ebp - 0x1c ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push 0x2
push ecx
push edx
lea eax [ ebp - 0x1c ]
push eax
call sub_466734
push eax
call sub_443006
lea esi [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
call sub_408f40
mov esi [ ebp + 0xc ]
call sub_408f40
fld [ ebp - 0xc ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477328
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x0
mov esi ecx
jne r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
call sub_40c650
mov ebx [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] ebx
mov eax [ esi + 0x4 ]
xor edi edi
mov [ ebp + 0x8 ] eax
lea esp [ esp ]
push ecx
lea edx [ ebp + 0x8 ]
mov [ esp ] 0x0
push edx
call sub_442a55
test al al
je r-xdata
mov ecx [ ebx ]
mov edx [ ebp - 0x4 ]
cmp [ ecx + 0xd8 ] edx
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0xd4
push eax
call sub_4426a9
test al al
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_440847
mov ebx [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_440847
jmp r-xdata
inc edi
mov edi [ ebp + 0xc ]
push 0x6
push 0x1
mov eax edi
call sub_40e830
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
push 0x0
push 0x1
push 0x0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
call sub_40cf00
add esp 0x14
mov esi eax
call sub_408f40
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push 0x1
push 0x1
push 0x0
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov eax [ ebx ]
add eax 0xd4
push eax
call sub_4426a9
mov [ ebp + 0xc ] al
mov eax [ ebp + 0xc ]
push eax
push 0x2
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
push eax
call sub_4530c9
mov eax [ ebx ]
push eax
call sub_452464
mov [ ebp + 0xc ] al
mov ecx [ ebp + 0xc ]
push ecx
push 0x3
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
push eax
call sub_4530c9
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push 0x4
push 0x1
push 0x0
mov [ ebp + 0xc ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp + 0xc ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
mov edx [ ebx ]
mov ebx [ edx + 0x1c ]
push 0x5
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
cmp eax 0xffffffff
jne r-xdata
push ecx
lea eax [ ebp + 0x8 ]
mov [ esp ] 0x0
push eax
call sub_442a55
test al al
je r-xdata
push ecx
lea ecx [ ebp + 0x8 ]
mov [ esp ] 0x0
push ecx
call sub_442a55
test al al
je r-xdata
cmp eax 0x5
ja r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
jmp r-xdata
jmp [ eax * 4 + jump_table_477620 ]
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebx ]
mov edi [ ebx + 0x8 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebx + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebx ]
mov edi [ ebx + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebx + 0x14 ]
call sub_408f40
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebx ]
add ebx 0xd4
push ebx
call sub_4426a9
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
mov eax [ ebp + 0x8 ]
push eax
push ecx
call sub_4530c9
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebx ]
push ebx
call sub_452464
mov [ ebp + 0x8 ] al
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
push eax
call sub_4530c9
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
mov edi [ ecx + 0x18 ]
mov edx [ ebx ]
mov edi [ edx + 0x1c ]
jmp r-xdata
sub_477638
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xf4
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x1
mov esi ecx
jbe r-xdata
xor ebx ebx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_45b59e
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x10 ] edx
mov edx [ esi ]
mov [ esp + 0x14 ] eax
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
add eax esi
push eax
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x24 ] 0x0
call sub_473698
lea esi [ esp + 0x10 ]
call sub_408f40
lea ecx [ esp + 0x20 ]
push ecx
call sub_44ac82
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
mov edx [ esi ]
mov ecx [ esp + 0x3c ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax esi
call sub_403cd0
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
lea ecx [ esp + 0x20 ]
push ecx
call sub_44ac82
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov edi [ ecx ]
sub esp 0x78
lea edx [ esi + 0x10 ]
mov eax esp
push edx
push eax
call sub_44ad24
push 0x0
push ebx
push r--data
push edi
call sub_45340c
push eax
lea ecx [ esp + 0xa8 ]
push ecx
call sub_44ad65
push 0x1
lea edx [ esp + 0x24 ]
push edx
call sub_466a4b
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
sub_477749
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov [ esp + 0x18 ] ebx
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
push edi
call sub_4429ef
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b3ac
mov [ esp + 0x18 ] eax
push 0x1
push edi
call sub_4323e1
xor ecx ecx
mov edi eax
mov edx 0x6
mul edx
seto cl
mov [ esp + 0x24 ] edi
neg ecx
or ecx eax
push ecx
call sub_4115d7
add esp 0x4
mov [ esp + 0x1c ] eax
cmp edi ebx
jle r-xdata
mov edx [ esp + 0x18 ]
push edx
push ebx
push ebx
call sub_441544
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x18 ]
push ecx
push edi
push eax
call sub_441544
mov edx [ esp + 0x1c ]
push edx
call sub_4111dc
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x20 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax ]
push 0x0
push ebx
push 0x2
push 0x1
call sub_40cf00
add esp 0x10
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
push 0x1
push ebx
mov [ esp + 0x3c ] edx
mov edx [ esi + 0x4 ]
mov edi [ edx ]
push 0x2
push 0x1
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] eax
call sub_40cf00
add esp 0x10
mov ecx eax
call sub_40c650
mov edi [ esp + 0x30 ]
lea esi [ esp + 0x40 ]
mov [ esp + 0x2c ] eax
call sub_401b10
lea eax [ esp + 0x17 ]
push eax
lea ecx [ esp + 0x1a ]
push ecx
lea edx [ esp + 0x1d ]
push edx
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
push esi
call sub_468d9e
test al al
mov ecx esi
sete [ esp + 0x13 ]
call sub_402250
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_4111dc
mov esi [ ebp + 0xc ]
add esp 0x4
call sub_408f40
lea ecx [ esp + 0x30 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x14 ] 0x0
mov esi [ esp + 0x20 ]
mov [ esi ] 0x1
je r-xdata
cmp [ esp + 0x15 ] 0x0
je r-xdata
mov [ esi ] 0x5
cmp [ esp + 0x16 ] 0x0
je r-xdata
or [ esi ] 0x8
mov cx [ esp + 0x2c ]
mov ax [ esp + 0x28 ]
mov [ esi + 0x4 ] cx
lea ecx [ esp + 0x30 ]
mov [ esi + 0x2 ] ax
call sub_402250
inc ebx
add esi 0x6
mov [ esp + 0x20 ] esi
cmp ebx [ esp + 0x24 ]
jl r-xdata
or [ esi ] 0x10
mov esi [ ebp + 0x8 ]
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x1c ]
sub_477927
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x5
mov ebx 0x1
push ebx
mov eax edi
mov [ ebp - 0x10 ] ecx
xor esi esi
call sub_40e830
mov eax [ ebp + 0x8 ]
add esp 0x8
cmp [ eax + 0x8 ] esi
jbe r-xdata
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
push esi
call sub_462d06
test al al
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b3ac
mov esi eax
mov esi edi
call sub_408f40
mov ecx [ ebp - 0x10 ]
mov [ edi + 0x8 ] ebx
mov [ edi ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax ecx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push ebx
push 0x0
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov eax [ ebp + 0xc ]
push ebx
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp + 0x8 ]
push 0x2
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ ebp - 0x4 ]
push 0x3
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov eax [ ebp - 0x8 ]
push 0x4
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp - 0xc ]
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477a44
push ebp
mov ebp esp
mov eax 0x2010
call sub_422240
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
xor ebx ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp + 0x8 ] ebx
cmp edi 0x3
jbe r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov ebx eax
mov esi [ esi + 0x4 ]
mov edx 0xfff
mov [ ebp - 0x2010 ] dx
mov ecx [ esi + 0x4 ]
mov esi [ esi ]
lea eax [ ebp - 0x2010 ]
push eax
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edx
call sub_40c650
push eax
mov ecx esi
call sub_40c650
push eax
call sub_449e8b
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
mov [ ebp + 0x8 ] eax
cmp ebx 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0xc ]
add ebx 0x2
push ebx
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ecx [ ebp - 0x10 ]
add esp 0x14
mov esi eax
mov [ ebp + 0xc ] ecx
call sub_408f40
mov edx [ ebp + 0xc ]
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
call sub_40cf00
mov esi eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov [ ebp + 0xc ] eax
call sub_408f40
mov ecx [ ebp + 0xc ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
cmp ebx 0x4
jne r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x2010 ]
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x2
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ ebp + 0x8 ]
mov ebx 0x1
push 0x3
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov eax [ ebp - 0xc ]
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
sub_477bcb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
mov edx [ ebx + 0x8 ]
or ecx 0xffffffff
push esi
xor esi esi
push edi
xor edi edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x3c ] esi
mov [ esp + 0x10 ] esi
cmp eax 0x15
jne r-xdata
cmp eax 0x1d
ja r-xdata
test edx edx
je r-xdata
lea eax [ esi + 0x6 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
movzx edx [ eax + sub_477eaf ]
jmp [ edx * 4 + jump_table_477e7b ]
mov esi [ ebp + 0x14 ]
call sub_408f40
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edi
push 0x2
add eax ecx
call sub_403c90
lea esi [ esp + 0x30 ]
call sub_408f40
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ esi + 0x5 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
call sub_40c650
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
mov [ esp + 0x14 ] 0x7
xor esi esi
call sub_45340c
mov edi eax
call sub_410160
mov edi eax
jmp r-xdata
mov [ esp + 0x10 ] 0x7
jmp r-xdata
mov [ esp + 0x10 ] 0x7
or [ esp + 0x10 ] 0x5
or [ esp + 0x10 ] 0x4
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
xor esi esi
call sub_45340c
mov edi eax
call sub_410160
mov edi eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
lea ebx [ esp + 0x34 ]
mov [ esp + 0x14 ] 0x5
mov esi 0x1
call sub_408e80
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_45340c
mov edi eax
call sub_410160
mov ebx [ ebp + 0x10 ]
mov edi eax
jmp r-xdata
mov [ esp + 0x10 ] 0x7
or [ esp + 0x10 ] 0x5
or [ esp + 0x10 ] 0x4
mov esi ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x10 ] 0x7
call sub_40c650
push eax
lea ecx [ esp + 0x48 ]
push r--data
push ecx
call sub_41329b
add esp 0xc
lea edi [ esp + 0x44 ]
call sub_410160
mov edi eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx ]
mov [ esp + 0x10 ] 0x1
lea eax [ esi + 0x4 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_40c650
mov [ esp + 0x1c ] eax
xor esi esi
lea eax [ esi + 0x3 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
call sub_40c650
mov [ esp + 0x20 ] eax
lea eax [ esi + 0x2 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_40c650
mov [ esp + 0x24 ] eax
lea edx [ esi + 0x1 ]
cmp [ esp + 0x14 ] edx
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
call sub_40c650
mov [ esp + 0x28 ] eax
sub esp 0x10
lea eax [ esp + 0x40 ]
mov ebx esp
call sub_40b960
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x44 ]
push ecx
mov ecx [ esp + 0x4c ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edi
push edx
call sub_473bf3
mov esi [ ebp + 0x14 ]
mov ebx eax
call sub_408f40
mov ecx esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40c650
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + esi * 4 + 0x4 ]
call sub_40c650
mov [ esp + 0x2c ] eax
cmp [ ebp + 0xc ] 0x1d
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x1
add eax ecx
call sub_403c90
lea esi [ esp + 0x30 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edi
call sub_4111dc
add esp 0x4
sub_477eaf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] eax
add eax [ edx ]
add al 0x5
push es
or al 0x5
add eax 0x30704
pop es
or [ ecx ] cl
or cl [ edx ]
or cl [ edx ]
add eax [ eax ]
or edx [ ebp - 0x75 ]
in al dx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x2
push 0x1
mov eax edi
xor esi esi
call sub_40e830
mov eax [ ebp + 0x8 ]
add esp 0x8
cmp [ eax + 0x8 ] esi
jbe r-xdata
push esi
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
call sub_441018
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b3ac
mov esi eax
mov esi edi
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov eax [ ebp + 0xc ]
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp + 0x8 ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
xor eax eax
pop esi
pop ebp
retn 0x8
sub_477f72
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
lea eax [ ebp - 0x24 ]
push eax
mov edi ecx
call sub_44c29d
mov ebx 0x1
cmp [ rw-data ] bl
je r-xdata
xor esi esi
mov ebx r--data
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
call sub_402160
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push rw-data
call sub_45178a
test al al
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] esi
jbe r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push esi
push ebx
add eax edi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov eax [ ebp - 0x24 ]
mov [ esi ] eax
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40c650
cmp eax ebx
jne r-xdata
mov edi [ ebp + 0xc ]
push 0x5
push ebx
mov eax edi
call sub_40e830
push esi
push ebx
push esi
call sub_40cf00
add esp 0x14
mov esi eax
call sub_408f40
mov ecx [ ebp - 0x24 ]
push ebx
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ ebp - 0x10 ]
push 0x2
push ebx
push 0x0
mov [ esi + 0x8 ] 0x7
mov [ esi ] edx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov eax [ ebp - 0xc ]
push 0x3
push ebx
push 0x0
mov [ esi + 0x8 ] 0x7
mov [ esi ] eax
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ ebp - 0x8 ]
push 0x4
push ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov edx [ ebp - 0x4 ]
mov [ esi ] edx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov [ esi + 0x8 ] ebx
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4780be
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
mov eax [ ebp + 0x10 ]
add esp 0xc
call sub_40e710
pop edi
pop ebx
pop ebp
retn 0xc
sub_4780e6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov esi eax
call sub_408f40
mov eax [ ebp + 0xc ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
pop esi
pop ebp
retn 0x8
sub_478115
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push eax
push ecx
push 0x2
push 0x0
call sub_40cf00
mov ebx eax
mov eax [ ebp + 0x14 ]
add esp 0x10
call sub_40e710
pop edi
pop ebx
pop ebp
retn 0x10
sub_478141
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x2
push 0x0
call sub_40cf00
add esp 0x10
mov esi eax
call sub_408f40
mov eax [ ebp + 0xc ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
pop esi
pop ebp
retn 0x8
sub_478172
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ edx ]
push edi
push eax
mov [ esp + 0x24 ] ecx
call sub_45340c
mov edi eax
lea esi [ esp + 0x40 ]
call sub_401b10
mov edi [ SetErrorMode@IAT ]
xor ebx ebx
push 0x1
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
call edi
mov [ esp + 0x14 ] eax
cmp [ esp + 0x44 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push ebx
push 0x1
add eax ecx
call sub_403c90
mov ecx [ esp + 0x14 ]
push ecx
call edi
lea ecx [ esp + 0x40 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x40 ]
push eax
call sub_433998
add esp 0x4
test al al
je r-xdata
mov edi [ esp + 0x44 ]
dec edi
call sub_401c90
cmp [ eax ] 0x5c
je r-xdata
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
mov edi r--data
mov eax esi
call sub_40d200
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
mov edx [ esp + 0x4c ]
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
call sub_452492
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c650
test al 0x1
je r-xdata
cmp [ esp + 0x10 ] bl
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call [ SetErrorMode@IAT ]
lea ecx [ esp + 0x40 ]
call sub_402250
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
test al 0x2
je r-xdata
mov [ esp + 0x10 ] 0x1
mov edi [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
push 0x3
push 0x1
mov eax edi
call sub_40e830
push ebx
push 0x1
push ebx
call sub_40cf00
mov ecx [ esp + 0x40 ]
mov ebx [ esp + 0x3c ]
add esp 0x14
mov esi eax
mov [ esp + 0x24 ] ecx
call sub_408f40
mov edx [ esp + 0x24 ]
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edx
call sub_40cf00
mov ebx [ esp + 0x3c ]
mov esi eax
mov eax [ esp + 0x40 ]
add esp 0xc
mov [ esp + 0x24 ] eax
call sub_408f40
mov ecx [ esp + 0x24 ]
push 0x2
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] ecx
call sub_40cf00
mov edi [ esp + 0x44 ]
mov ebx [ esp + 0x48 ]
add esp 0xc
mov esi eax
jmp r-xdata
mov [ esp + 0x18 ] bl
call sub_408f40
mov edx [ esp + 0x14 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] edi
push edx
mov [ esi + 0x8 ] 0x2
call [ SetErrorMode@IAT ]
lea ecx [ esp + 0x40 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47839d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa74
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push edi
push eax
mov [ esp + 0x28 ] esi
call sub_4533eb
mov edx [ eax ]
push 0xffffffff
mov [ esp + 0x18 ] edx
mov ecx [ eax + 0x4 ]
push 0xffffffff
mov [ esp + 0x20 ] ecx
mov edx [ eax + 0x8 ]
push 0xffffffff
mov [ esp + 0x28 ] edx
mov eax [ eax + 0xc ]
push 0x1
mov [ esp + 0x30 ] eax
inc [ eax ]
mov edi [ esp + 0x28 ]
push 0x2
push r--data
lea eax [ esp + 0x2c ]
push eax
call sub_4426cd
cmp eax edi
jne r-xdata
mov edi [ ebp + 0xc ]
mov eax r--data
mov ebx edi
call sub_40e710
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_403c90
mov edx [ esp + 0x14 ]
push edx
call sub_4339fa
add esp 0x4
test al al
je r-xdata
mov edi r--data
lea eax [ esp + 0x14 ]
call sub_40d200
lea ecx [ esp + 0x14 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp + 0xc ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
js r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
test eax eax
js r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push 0x7
push 0x1
mov eax edi
call sub_40e830
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
add esp 0x8
push 0x2
push 0x0
push 0x104
lea edx [ esp + 0x3c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
add esp 0xc
lea eax [ esp + 0x30 ]
call sub_40e710
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push 0x104
lea edx [ esp + 0x664 ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
push 0x1
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
add esp 0xc
lea eax [ esp + 0x660 ]
call sub_40e710
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push 0x104
lea edx [ esp + 0x244 ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
push 0x2
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
add esp 0xc
lea eax [ esp + 0x240 ]
call sub_40e710
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push 0x104
lea edx [ esp + 0x454 ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
push 0x3
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
add esp 0xc
lea eax [ esp + 0x450 ]
call sub_40e710
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x2c ]
push edx
push 0x104
lea edx [ esp + 0x878 ]
push edx
push eax
mov eax [ ecx + 0x40 ]
call eax
push 0x4
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
add esp 0xc
lea eax [ esp + 0x870 ]
call sub_40e710
push 0x5
push 0x1
push 0x0
call sub_40cf00
mov ebx [ esp + 0x38 ]
add esp 0xc
mov esi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x28 ]
push edx
push eax
mov eax [ ecx + 0x38 ]
call eax
push 0x6
push 0x1
push 0x0
call sub_40cf00
mov edi [ esp + 0x34 ]
add esp 0xc
mov esi eax
call sub_408f40
mov ecx [ esp + 0x24 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x0
add eax ecx
call sub_403c90
sub_478656
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xfc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov eax r--data
mov ebx esi
mov [ esp + 0x2c ] edi
mov [ esp + 0x14 ] 0x0
call sub_40e710
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_4533eb
mov edx [ eax ]
mov [ esp + 0x18 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x20 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
lea eax [ esp + 0x18 ]
push eax
call sub_4536f7
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx 0x63
jmp r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx 0x5
jmp r-xdata
lea edx [ esp + 0x30 ]
mov [ esp + 0x10 ] 0x61
mov [ esp + 0x28 ] edx
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx 0x2
jmp r-xdata
mov eax r--data
lea esi [ esp + 0x18 ]
call sub_40e680
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x28 ]
push eax
push esi
call sub_411567
inc [ esp + 0x1c ]
add esp 0x8
add esi 0x8
mov [ esp + 0x28 ] esi
mov esi [ ebp + 0xc ]
cmp ebx 0x63
jne r-xdata
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx 0x3
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call sub_443758
mov edi r--data
lea eax [ esp + 0x18 ]
call sub_40d200
mov edx [ esp + 0x18 ]
push edx
call [ GetDriveTypeW@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax 0x7a
jle r-xdata
cmp eax 0x1
je r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx 0x4
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
jmp r-xdata
inc eax
push eax
push 0x1
mov eax esi
call sub_40e830
push 0x0
push 0x1
push 0x0
mov edi esi
call sub_40cf00
add esp 0x14
mov esi eax
call sub_408f40
mov eax [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
mov esi 0x1
cmp eax esi
jl r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ebx 0x6
jmp r-xdata
push 0x0
push 0x1
call sub_403c90
lea ecx [ esp + 0x18 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] ecx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
xor ebx ebx
mov edi [ ebp + 0xc ]
push esi
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
mov eax [ esp + 0x1c ]
add esp 0xc
call sub_40e710
add [ esp + 0x10 ] 0x8
inc esi
cmp esi [ esp + 0x14 ]
jle r-xdata
lea ecx [ esp + 0x18 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4788bd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x29c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
mov edi ecx
lea ecx [ esp + 0x58 ]
push ecx
push eax
xor ebx ebx
call sub_45340c
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x5c ]
mov ecx [ esp + 0x60 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x64 ]
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x6c ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x70 ]
push eax
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] ecx
call [ FindClose@IAT ]
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
dec ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c650
mov ebx eax
lea eax [ esp + 0x20 ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
dec ebx
je r-xdata
mov edi [ ebp + 0xc ]
push 0x6
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
movzx edx [ esp + 0x24 ]
push edx
mov ebx eax
lea eax [ esp + 0x50 ]
push r--data
push eax
call sub_41329b
add esp 0x20
lea eax [ esp + 0x38 ]
call sub_40e710
push 0x1
push 0x1
push 0x0
call sub_40cf00
movzx ecx [ esp + 0x1e ]
push ecx
lea edx [ esp + 0x48 ]
push r--data
push edx
mov ebx eax
call sub_41329b
add esp 0x18
lea eax [ esp + 0x38 ]
call sub_40e710
push 0x2
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
movzx eax [ esp + 0x22 ]
push eax
lea ecx [ esp + 0x48 ]
push r--data
push ecx
call sub_41329b
add esp 0x18
lea eax [ esp + 0x38 ]
call sub_40e710
push 0x3
push 0x1
push 0x0
call sub_40cf00
movzx edx [ esp + 0x24 ]
push edx
mov ebx eax
lea eax [ esp + 0x48 ]
push r--data
push eax
call sub_41329b
add esp 0x18
lea eax [ esp + 0x38 ]
call sub_40e710
push 0x4
push 0x1
push 0x0
call sub_40cf00
movzx ecx [ esp + 0x26 ]
push ecx
lea edx [ esp + 0x48 ]
push r--data
push edx
mov ebx eax
call sub_41329b
add esp 0x18
lea eax [ esp + 0x38 ]
call sub_40e710
push 0x5
push 0x1
push 0x0
call sub_40cf00
mov ebx eax
movzx eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x48 ]
push r--data
push ecx
call sub_41329b
add esp 0x18
lea eax [ esp + 0x38 ]
call sub_40e710
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c650
cmp eax 0x1
jne r-xdata
lea edx [ esp + 0x28 ]
push edx
push edx
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
push ecx
call [ FileTimeToLocalFileTime@IAT ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x34 ]
push eax
jmp r-xdata
movzx ecx [ esp + 0x1c ]
movzx edx [ esp + 0x1a ]
movzx eax [ esp + 0x18 ]
push ecx
movzx ecx [ esp + 0x1a ]
push edx
movzx edx [ esp + 0x1a ]
push eax
movzx eax [ esp + 0x1c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x50 ]
push r--data
push ecx
call sub_41329b
mov ebx [ ebp + 0xc ]
add esp 0x20
lea eax [ esp + 0x38 ]
call sub_40e710
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ FileTimeToSystemTime@IAT ]
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
sub_478b47
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x234
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push edi
push eax
call sub_45340c
mov ecx eax
lea eax [ esp + 0x30 ]
call sub_410120
push 0xfffe
call sub_4115d7
add esp 0x4
push eax
lea edx [ esp + 0x1c ]
push edx
call sub_43652f
mov ebx [ esp + 0x18 ]
lea ecx [ esp + 0x30 ]
push ecx
push 0x7fff
mov eax 0xa
push ebx
mov [ ebx + 0x2 ] ax
call [ GetPrivateProfileSectionNamesW@IAT ]
xor edi edi
mov [ esp + 0xc ] eax
cmp eax edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push edi
push 0x1
add eax esi
call sub_403c90
lea edx [ esp + 0x18 ]
push edx
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x2 ] 0xa
je r-xdata
push 0xc
call sub_4115d7
add esp 0x4
cmp eax edi
je r-xdata
mov [ esp + 0x10 ] edi
mov eax edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ esp + 0x10 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
lea eax [ edi + 0x1 ]
push eax
push 0x1
mov eax esi
call sub_40e830
add esp 0x8
push edi
push esi
call sub_4780e6
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x20 ]
call sub_40bc70
mov [ esp + 0xc ] 0x0
test edi edi
jle r-xdata
cmp [ ebx + esi * 2 ] 0x0
jne r-xdata
xor esi esi
mov [ esp + 0x14 ] eax
mov [ eax ] edi
cmp [ esp + 0xc ] esi
jle r-xdata
lea ecx [ esp + 0x20 ]
call sub_402250
lea edx [ esp + 0x18 ]
push edx
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
or eax 0xffffffff
call sub_40c600
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
sub eax ecx
push ecx
lea ecx [ esp + 0x24 ]
call sub_403b70
mov eax [ esp + 0xc ]
mov edx [ esp + 0x20 ]
inc eax
push edx
push eax
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
push eax
call sub_4780be
push esi
mov esi [ esi + 0x8 ]
call sub_4111dc
mov eax [ esp + 0x10 ]
add esp 0x4
mov [ esp + 0xc ] eax
cmp eax edi
jl r-xdata
inc esi
cmp esi [ esp + 0xc ]
jl r-xdata
mov edx [ esp + 0x14 ]
mov eax 0xd
mov [ edx + 0x4 ] esi
push 0xc
inc edi
mov [ ebx + esi * 2 ] ax
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea edx [ esi + 0x1 ]
mov [ ecx + 0x8 ] eax
mov [ esp + 0x14 ] eax
mov [ eax ] edx
sub_478d00
push ebp
mov ebp esp
sub esp 0x214
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ebx
mov [ ebp - 0x4 ] ecx
call sub_408f40
mov edi [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45340c
mov ecx eax
lea eax [ ebp - 0x214 ]
call sub_410120
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
push esi
call sub_4429ef
test al al
je r-xdata
push esi
call sub_443833
test al al
je r-xdata
push 0x0
push esi
call sub_4323e1
cmp eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_4533b1
xor ecx ecx
add eax 0x2
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov esi eax
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
add esp 0x4
push eax
mov [ ebp - 0x4 ] esi
call sub_45340c
cmp [ eax ] 0xa
mov ecx esi
jne r-xdata
push eax
push esi
call sub_4323e1
cmp eax 0x2
jne r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
add eax 0x2
cmp [ eax ] 0xa
je r-xdata
cmp [ edi + 0x8 ] 0x4
mov esi 0x1
mov [ ebp - 0x8 ] esi
jb r-xdata
xor eax eax
mov [ ecx ] eax
mov [ ecx ] dx
add eax 0x2
add ecx 0x2
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ ecx + 0x8 ]
mov esi [ ebp - 0x8 ]
xor ebx ebx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
mov [ ebp - 0x8 ] eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4111dc
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push 0x0
call [ WritePrivateProfileStringW@IAT ]
mov esi ebx
call sub_408f40
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x1
xor edx edx
jmp r-xdata
xor ecx ecx
lea eax [ ebx + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov ebx [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov esi eax
lea esp [ esp ]
push 0x0
push esi
push 0x2
push 0x1
call sub_40cf00
add esp 0x10
push eax
call sub_4533b1
push 0x1
push esi
push 0x2
push 0x1
lea ebx [ ebx + eax + 0x1 ]
call sub_40cf00
add esp 0x10
push eax
call sub_4533b1
lea ebx [ ebx + eax + 0x1 ]
inc esi
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor edx edx
mov [ esi ] dx
jmp r-xdata
push 0x0
push ebx
push 0x2
push 0x1
call sub_40cf00
add esp 0x10
push eax
call sub_45340c
movzx ecx [ eax ]
test cx cx
je r-xdata
push 0x1
push edi
call sub_4323e1
cmp esi eax
jge r-xdata
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x214 ]
push ecx
push edx
push eax
call sub_45340c
push eax
call [ WritePrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
push 0x1
push ebx
mov eax 0x3d
push 0x2
mov [ esi ] ax
push 0x1
add esi 0x2
call sub_40cf00
add esp 0x10
push eax
call sub_45340c
movzx ecx [ eax ]
test cx cx
je r-xdata
mov edx eax
sub edx esi
xor ecx ecx
mov [ esi ] cx
add esi 0x2
inc ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] cx
movzx eax [ edx + esi + 0x2 ]
add esi 0x2
mov ecx eax
test ax ax
jne r-xdata
push 0x1
push edi
call sub_4323e1
cmp ebx eax
jge r-xdata
add eax 0x2
mov [ esi ] cx
movzx ecx [ eax ]
add esi 0x2
test cx cx
jne r-xdata
sub_478f9a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
mov edi ecx
push eax
mov [ esp + 0x20 ] edi
call sub_45340c
mov ecx eax
lea eax [ esp + 0x48 ]
call sub_410120
push 0xfffe
call sub_4115d7
add esp 0x4
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_43652f
mov edx [ esi + 0x4 ]
mov ebx [ esp + 0x20 ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x48 ]
push ecx
push 0x7fff
push ebx
push eax
call sub_45340c
push eax
call [ GetPrivateProfileSectionW@IAT ]
xor esi esi
mov [ esp + 0x10 ] eax
cmp eax esi
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push esi
add eax edi
push 0x14
call sub_4115d7
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x18 ] esi
mov eax esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] esi
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
add eax ecx
jmp r-xdata
lea ebx [ ebx ]
xor ecx ecx
mov esi eax
mov [ eax ] 0x0
xor al al
xor edi edi
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x10 ] ecx
jle r-xdata
push 0x1
call sub_403c90
lea ecx [ esp + 0x20 ]
push ecx
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edx 0x3d
jne r-xdata
cmp [ esi ] edi
jne r-xdata
test dx dx
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
cmp edi [ esp + 0x10 ]
jl r-xdata
mov edx 0xd
mov [ ebx + edi * 2 ] dx
xor edx edx
cmp [ esi + 0x8 ] edx
je r-xdata
test al al
jne r-xdata
movzx edx [ ebx + edi * 2 ]
cmp edx 0x3b
jne r-xdata
test ecx ecx
jle r-xdata
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] edx
test al al
jne r-xdata
lea edx [ edi + 0x1 ]
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ebp + 0xc ]
push 0x2
inc ecx
push ecx
push 0x2
mov eax esi
call sub_40e830
mov edi [ esp + 0x20 ]
add esp 0xc
push edi
push esi
call sub_478141
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x38 ]
call sub_40bc70
lea ecx [ esp + 0x28 ]
call sub_40bc70
test edi edi
jle r-xdata
inc ecx
mov [ esi + 0xc ] edi
mov [ esp + 0x14 ] ecx
cmp [ ebx + edi * 2 + 0x2 ] dx
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402250
lea ecx [ esp + 0x38 ]
call sub_402250
lea ecx [ esp + 0x20 ]
push ecx
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x14 ]
mov edi 0x1
mov [ esp + 0x10 ] ecx
xor al al
cmp [ ebx + edi * 2 + 0x2 ] 0x0
je r-xdata
push 0x14
call sub_4115d7
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
push 0x0
lea edx [ esp + 0x3c ]
push edx
or eax 0xffffffff
call sub_40c600
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
sub eax ecx
push ecx
lea ecx [ esp + 0x3c ]
call sub_403b70
mov eax [ esp + 0x38 ]
mov ecx [ ebp + 0xc ]
push eax
push 0x0
push edi
push ecx
call sub_478115
push 0x0
lea edx [ esp + 0x2c ]
push edx
or eax 0xffffffff
call sub_40c600
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
sub eax ecx
push ecx
lea ecx [ esp + 0x2c ]
call sub_403b70
mov eax [ esp + 0x28 ]
mov ecx [ ebp + 0xc ]
push eax
push 0x1
push edi
push ecx
call sub_478115
push esi
mov esi [ esi + 0x10 ]
call sub_4111dc
mov eax 0x1
add esp 0x4
add edi eax
sub [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov esi eax
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi + 0x10 ] eax
mov esi eax
jmp r-xdata
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub_479230
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x5
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
cmp [ esi ] 0x0
je r-xdata
call sub_40e810
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ edx ] ecx
pop esi
pop ebp
retn 0x8
sub_47925f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x20c ]
test ecx ecx
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
cmp ecx [ edx + 0x20c ]
jne r-xdata
xor edx edx
test ecx ecx
jle r-xdata
push ebx
nop
mov ecx 0x10c
jmp r-xdata
mov eax [ edi ]
cmp [ eax + 0x20c ] 0x0
mov [ ebp + 0xc ] 0x0
jle r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov ebx [ edx + eax * 4 ]
test ebx ebx
je r-xdata
mov [ ecx + eax ] 0x0
mov eax [ esi ]
mov [ ecx + eax ] 0x0
mov eax [ edi ]
inc edx
add ecx 0x4
cmp edx [ eax + 0x20c ]
jl r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x20c ]
jl r-xdata
mov ebx 0x10c
push 0x0
push 0x0
call sub_40cf00
add esp 0x8
test eax eax
je r-xdata
mov eax esi
call sub_40cff0
test eax eax
js r-xdata
pop ebx
mov ecx [ edi ]
mov [ ebx + ecx ] 0x0
mov edx [ esi ]
mov ecx [ ebp + 0xc ]
mov [ ebx + edx ] 0x0
mov eax [ edi ]
inc ecx
add ebx 0x4
mov [ ebp + 0xc ] ecx
cmp ecx [ eax + 0x20c ]
jl r-xdata
mov eax esi
call sub_40d040
test al al
jne r-xdata
push ebx
mov ebx eax
call sub_408e80
inc [ ebx + eax ]
mov eax [ esi ]
inc [ eax + ebx ]
mov eax edi
call sub_40d040
test al al
je r-xdata
sub_479362
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
xor ebx ebx
push ebx
lea eax [ ebp + 0x8 ]
push eax
call sub_4323e1
lea ecx [ ebp - 0x4 ]
push ecx
mov edi eax
push edi
push 0xc
call [ SafeArrayAllocDescriptorEx@IAT ]
test eax eax
js r-xdata
lea esi [ ebp + 0x8 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
cmp edi ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x880
mov [ eax + 0x2 ] dx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x10
mov edx [ ebp - 0x4 ]
push edx
call [ SafeArrayAllocData@IAT ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ edx + 0x1 ]
push esi
lea ecx [ ebp + 0x8 ]
push ecx
mov [ eax + edx * 8 + 0x14 ] ebx
call sub_4323e1
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 8 + 0x10 ] eax
mov edx esi
cmp edx edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ SafeArrayDestroyDescriptor@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ VariantInit@IAT ]
mov edx [ ebp - 0x4 ]
lea ecx [ ebp - 0xc ]
push ecx
push edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ SafeArrayDestroyData@IAT ]
mov edx [ ebp - 0x4 ]
push edx
call [ SafeArrayDestroyDescriptor@IAT ]
lea esi [ ebp - 0x30 ]
call sub_408f40
lea eax [ ebp - 0x20 ]
push eax
call [ VariantClear@IAT ]
lea esi [ ebp + 0x8 ]
call sub_408f40
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0xc ]
lea ecx [ ebp + 0x8 ]
push ecx
lea ebx [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
call sub_408e80
lea edx [ ebp - 0x10 ]
push edx
push ebx
call sub_479230
mov edi eax
xor esi esi
test edi edi
jle r-xdata
mov edx [ ebp - 0x4 ]
push edx
call [ SafeArrayUnaccessData@IAT ]
mov edi [ ebp - 0x4 ]
lea esi [ ebp - 0x30 ]
call sub_408f40
lea eax [ ebp - 0x20 ]
push eax
call [ VariantClear@IAT ]
xor eax eax
lea esi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
add [ ebp - 0x8 ] 0x10
inc esi
cmp esi edi
jl r-xdata
mov eax [ eax + esi * 4 ]
sub esp 0x10
mov ebx esp
call sub_40b960
lea edx [ ebp - 0x20 ]
push edx
call sub_470e55
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
push ecx
call [ VariantCopy@IAT ]
mov eax [ ebp - 0x10 ]
cmp [ eax + esi * 4 ] 0x0
je r-xdata
sub_479500
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
push edi
call [ VariantInit@IAT ]
mov eax [ ebp + 0x10 ]
xor ecx ecx
dec eax
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
lea esi [ ebp + 0x8 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp [ eax * 4 + jump_table_4796e4 ]
lea ecx [ ebp + 0x8 ]
mov eax 0xb
push ecx
mov [ edi ] ax
call sub_442f4c
movzx edx al
lea esi [ ebp + 0x8 ]
mov [ edi + 0x8 ] dx
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax 0x3
lea ecx [ ebp + 0x8 ]
mov [ edi ] ax
call sub_40c650
jmp r-xdata
mov ecx 0x5
mov [ edi ] cx
lea ecx [ ebp + 0x8 ]
call sub_40baa0
fstp [ edi + 0x8 ]
lea esi [ ebp + 0x8 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp + 0x8 ]
mov edx 0x14
push eax
mov [ edi ] dx
call sub_443006
mov [ edi + 0xc ] edx
jmp r-xdata
lea edx [ ebp + 0x8 ]
mov ecx 0x13
push edx
mov [ edi ] cx
call sub_44b3ac
jmp r-xdata
lea ecx [ ebp + 0x8 ]
mov eax 0x8
push ecx
mov [ edi ] ax
call sub_45340c
push eax
call [ SysAllocString@IAT ]
jmp r-xdata
sub esp 0x10
mov edx 0x200c
lea eax [ ebp + 0x8 ]
mov ebx esp
mov [ edi ] dx
call sub_40b960
call sub_479362
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_432508
sub esp 0x10
mov ebx esp
call sub_40b960
lea ecx [ esp + 0x20 ]
call sub_479500
push eax
push edi
call sub_437063
lea ecx [ esp + 0x10 ]
push ecx
call [ VariantClear@IAT ]
lea esi [ ebp + 0x8 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp + 0x8 ]
push edx
call sub_44cecd
test al al
je r-xdata
sub esp 0x10
mov ecx 0x2011
lea eax [ ebp + 0x8 ]
mov ebx esp
mov [ edi ] cx
call sub_40b960
call sub_473b76
jmp r-xdata
sub esp 0x10
mov edx 0x2013
lea eax [ ebp + 0x8 ]
mov ebx esp
mov [ edi ] dx
call sub_40b960
call sub_44ce43
mov [ edi + 0x8 ] eax
push eax
push edi
call [ VariantCopy@IAT ]
lea esi [ ebp + 0x8 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax 0xa
lea esi [ ebp + 0x8 ]
mov [ edi ] ax
mov [ edi + 0x8 ] 0x80020004
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_479714
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x14
push ebx
sub esp 0x10
mov ebx esp
call sub_40b960
lea ecx [ ebp - 0x10 ]
call sub_479500
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_437063
lea ecx [ ebp - 0x10 ]
push ecx
call [ VariantClear@IAT ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47974b
push ebp
mov ebp esp
sub esp 0xec
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x1c ]
push ebx
xor ebx ebx
push esi
push edi
mov edi [ eax + 0x8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x24 ] 0xfffffffd
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp + 0x17 ] bl
cmp edx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push r--data
push ebx
push 0x1
push eax
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
push edx
call sub_432416
test al al
jne r-xdata
mov edx [ edx ]
mov esi [ edx + 0x8 ]
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push r--data
push ebx
push 0x2
push ecx
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x18 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edx
push esi
mov [ ebp - 0xe8 ] ebx
call sub_441eba
add esp 0xc
cmp eax ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push r--data
push ebx
push 0x4
push eax
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x1
push ebx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_451b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
xor ecx ecx
lea ebx [ edi + 0x1 ]
mov eax ebx
mov edx 0x10
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_410e53
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp + 0xc ] 0x3
cmp eax ebx
je r-xdata
mov [ ebp + 0x18 ] 0x0
mov [ eax ] ebx
lea ecx [ eax + 0x4 ]
push 0x10
mov ebx sub_437095
lea eax [ edi + 0x1 ]
mov [ ebp + 0x18 ] ecx
call sub_410ca0
mov ecx [ ebp + 0x18 ]
mov [ ebp + 0x18 ] ecx
jmp r-xdata
mov edx [ ebp + 0x18 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push edx
push eax
push esi
call sub_451d2b
add esp 0x10
test eax eax
js r-xdata
cmp [ ebp - 0xe8 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx edi
add edx edx
lea ecx [ eax + edx * 8 - 0x10 ]
mov [ ebp - 0x4 ] ecx
xor ebx ebx
test edi edi
je r-xdata
mov eax [ ebp - 0xe4 ]
test al 0x1
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] eax
test bl 0xc
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
call sub_479714
sub [ ebp - 0x4 ] 0x10
inc ebx
cmp ebx edi
jb r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xdc ] bx
jne r-xdata
lea edx [ ebp - 0x38 ]
push edx
call [ VariantInit@IAT ]
push 0x20
lea eax [ ebp - 0x58 ]
push 0x0
push eax
call sub_412f40
add esp 0xc
cmp [ ebp + 0x17 ] 0x0
je r-xdata
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x18 ]
mov ecx edi
add ecx ecx
lea ebx [ edx + ecx * 8 - 0x10 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
mov [ ebp + 0x17 ] 0x1
mov edx [ esi ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x58 ]
push ecx
lea eax [ ebp - 0x38 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
mov ecx [ edx + 0x18 ]
mov ecx [ esi ]
mov ecx [ ecx + 0x18 ]
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x58 ]
push eax
push 0x0
lea edx [ ebp - 0x20 ]
push edx
jmp r-xdata
cmp [ ebp + eax * 4 - 0xd6 ] 0x2
jne r-xdata
test eax eax
jns r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
push ebx
push 0x800
push r--data
push eax
push esi
call ecx
cmp eax 0x80020003
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
sub ebx 0x10
mov [ ebp - 0x4 ] eax
cmp eax edi
jb r-xdata
push ebx
call [ VariantClear@IAT ]
mov eax [ ebp - 0x4 ]
mov cx [ ebp + eax * 4 - 0xd8 ]
mov edx [ ebp + 0x1c ]
mov [ ebx ] cx
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x6
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x38 ]
push edx
call sub_468070
xor esi esi
test edi edi
je r-xdata
cmp eax 0x80020009
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push 0x0
push 0x0
push eax
push ecx
call sub_451b42
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ esi ]
xor eax eax
cmp bx 0x4
sete al
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x58 ]
push ecx
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ edx + 0x18 ]
lea eax [ eax * 4 + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push 0x800
push r--data
push eax
push esi
call ecx
mov [ ebx + 0x8 ] ebx
lea edx [ ebp - 0x38 ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov eax edi
add eax eax
lea ebx [ ecx + eax * 8 - 0x10 ]
push 0x1
push 0x0
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_451b42
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push eax
call sub_470028
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x6
jne r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x6
movzx ecx [ ebp + esi * 4 - 0xd8 ]
jne r-xdata
inc esi
sub ebx 0x10
cmp esi edi
jb r-xdata
push ebx
push eax
call sub_432508
mov ecx eax
call sub_468070
mov edx 0x6013
cmp cx dx
je r-xdata
cmp [ ebp - 0xe8 ] 0x0
je r-xdata
test [ ebp + esi * 4 - 0xd6 ] 0x2
jne r-xdata
test ecx 0x4000
jne r-xdata
cmp [ ebx ] 0x8
jne r-xdata
jmp r-xdata
sub_479b09
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
mov ebx ecx
jbe r-xdata
jmp [ edi * 4 + jump_table_479c09 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c650
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
push edi
call sub_4536cb
test al al
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push esi
mov ecx ebx
call sub_477167
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edi 0x1
dec eax
je r-xdata
push r--data
push edi
call sub_45340c
push eax
call sub_4134bd
add esp 0x8
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
push edi
call sub_408e80
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi 0x2
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push r--data
push eax
call sub_45340c
push eax
call sub_4134bd
add esp 0x8
test eax eax
jne r-xdata
lea edi [ eax + 0x3 ]
jmp r-xdata
call sub_40baa0
fstp [ esp + 0x10 ]
mov esi [ ebp + 0xc ]
call sub_408f40
fld [ esp + 0x10 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx ebx
call sub_477167
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_479eb4
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0x98 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40ce70
test al al
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push edi
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
mov eax [ edx ]
mov [ esi + 0x98 ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_479f2f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push esi
call sub_471f53
mov ebx 0x1
push ebx
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
push eax
call sub_436458
test al al
jne r-xdata
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x8 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] 0x4
mov ebx 0x1f4
cmp eax 0x2
jbe r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
cmp eax 0x3
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
lea eax [ eax + eax - 0x2 ]
cmp eax 0x1
jle r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c650
mov ebx eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ eax - 0x1 ]
mov eax [ esi + 0x1d8 ]
mov ecx [ eax ]
push 0x1
push ecx
call [ FlashWindow@IAT ]
push ebx
call sub_4331a2
add esp 0x4
dec edi
jne r-xdata
sub_47a00c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push ecx
call [ GetWindowThreadProcessId@IAT ]
fild [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
test edx edx
jns r-xdata
jns r-xdata
mov esi [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
call sub_408f40
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
fadd [ r--data ]
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47a09f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
push 0x10000
mov [ esp + 0x10 ] edi
call sub_4115d7
add esp 0x4
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_43652f
mov ecx [ edi + 0x2d4 ]
lea esi [ edi + 0x1b8 ]
mov eax r--data
mov ebx esi
mov [ esp + 0x14 ] ecx
call sub_40e710
lea eax [ edi + 0x1c8 ]
mov ebx r--data
mov [ esp + 0x10 ] eax
call sub_402160
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push eax
call sub_4533eb
mov edi eax
call sub_40e6a0
cmp [ ebx + 0x8 ] 0x1
mov edi [ esp + 0xc ]
jbe r-xdata
mov [ edi + 0x2d4 ] 0x4
jmp r-xdata
push 0x0
push edi
call sub_46f3c1
test eax eax
jns r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4533eb
mov esi [ esp + 0x10 ]
push eax
call sub_40e0a0
mov ebx [ edi + 0x2e8 ]
mov eax [ esp + 0x14 ]
mov [ edi + 0x2d4 ] eax
mov edi [ ebp + 0xc ]
push 0x2
lea ecx [ ebx + 0x1 ]
push ecx
push 0x2
mov eax edi
mov [ esp + 0x1c ] ebx
call sub_40e830
add esp 0xc
push 0x0
push 0x0
push 0x2
push 0x0
call sub_40cf00
add esp 0x10
mov esi eax
call sub_408f40
mov [ esi ] ebx
mov ebx 0x1
mov [ esi + 0x8 ] 0x1
cmp [ esp + 0x10 ] ebx
jl r-xdata
mov ecx [ edi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
lea edx [ esp + 0x18 ]
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x18 ]
push ecx
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0xc ]
mov edx [ esp + 0x18 ]
mov ecx [ eax + 0x2e4 ]
push 0x7fff
push edx
mov edx [ ecx + ebx * 4 - 0x4 ]
mov eax [ edx ]
push eax
call [ GetWindowTextW@IAT ]
push 0x0
push ebx
push 0x2
push 0x0
call sub_40cf00
add esp 0x10
lea ecx [ esp + 0x18 ]
push ecx
push eax
call sub_4530e8
push 0x1
push ebx
push 0x2
push 0x0
call sub_40cf00
mov edx [ esp + 0x1c ]
mov esi eax
mov eax [ edx + 0x2e4 ]
mov ecx [ eax + ebx * 4 - 0x4 ]
mov edx [ ecx ]
add esp 0x10
mov [ esp + 0x14 ] edx
call sub_408f40
mov eax [ esp + 0x14 ]
inc ebx
mov [ esi + 0x8 ] 0x7
mov [ esi ] eax
cmp ebx [ esp + 0x10 ]
jle r-xdata
sub_47a26a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax + 0x8 ]
call sub_40c650
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
push edi
mov bl al
push esi
mov [ ebp + 0x8 ] bl
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ eax ]
push 0xffffffec
push esi
call [ GetWindowLongW@IAT ]
cmp bl 0xff
jb r-xdata
jns r-xdata
or eax 0x80000
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
mov ecx [ ebp + 0x8 ]
push 0x2
push ecx
push 0x0
push esi
call [ SetLayeredWindowAttributes@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
test eax 0x80000
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov edx [ esi ]
neg eax
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_403c90
xor eax 0x80000
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_47a330
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push eax
push esi
mov edi 0x1
call sub_471f53
push edi
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ eax ]
push esi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x0
jns r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov edi 0x3
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
call [ GetForegroundWindow@IAT ]
cmp eax esi
jne r-xdata
or edi 0x4
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] edi
pop edi
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
or edi 0x8
push esi
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
or edi 0x10
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
or edi 0x20
sub_47a3ee
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x154
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov eax r--data
mov edi ecx
call sub_40e710
mov eax [ ebp + 0x8 ]
push eax
push edi
call sub_471f53
push 0x1
push edi
call sub_46f3c1
test eax eax
jg r-xdata
lea esi [ esp + 0x20 ]
call sub_40d0d0
lea ecx [ esp + 0x10 ]
call sub_40bc70
mov ecx [ edi + 0x1d8 ]
mov edx [ ecx ]
lea eax [ esp + 0x10 ]
push eax
push edx
push esi
call sub_461554
lea edi [ esp + 0x10 ]
mov esi ebx
call sub_40e6a0
mov ecx edi
call sub_402250
lea esi [ esp + 0x20 ]
call sub_401400
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
jns r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47a4a5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ ebp + 0xc ]
push edi
mov edi [ eax ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
jns r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
add eax esi
call sub_403c90
push ebx
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
pop ebx
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47a515
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push ebx
push esi
push edi
mov ebx ecx
push eax
push ebx
call sub_471f53
mov edi [ ebp + 0xc ]
mov esi edi
call sub_408f40
push 0x1
push ebx
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ ebx + 0x1d8 ]
mov eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetClientRect@IAT ]
test eax eax
je r-xdata
push 0x0
jns r-xdata
push 0x0
push 0x2
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x10 ]
add esp 0x14
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0xc ]
add esp 0xc
mov esi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x1
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_403c90
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47a5ff
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov eax [ eax ]
push eax
call sub_443a61
mov ebx [ ebp + 0xc ]
add esp 0x4
call sub_40e710
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push 0x0
jns r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_47a66e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
push 0x10000
mov edi ecx
mov [ esp + 0x1c ] eax
call sub_4115d7
add esp 0x4
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_43652f
push esi
push edi
mov [ esp + 0x24 ] 0x0
call sub_471f53
push 0x1
push edi
call sub_46f3c1
test eax eax
jg r-xdata
mov ecx [ edi + 0x1d8 ]
mov ebx [ ecx ]
push ebx
mov [ esp + 0x28 ] ebx
call [ GetMenu@IAT ]
mov esi eax
test esi esi
jne r-xdata
jns r-xdata
mov eax 0x3
mov [ esp + 0x14 ] eax
cmp [ esp + 0x18 ] eax
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
lea edx [ esp + 0x28 ]
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
lea eax [ esp + 0x28 ]
push eax
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
neg eax
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_403c90
push 0x1
push ebx
call sub_4439c1
mov edx [ esp + 0x24 ]
add esp 0x8
push 0x0
push edx
push 0x111
push ebx
call [ PostMessageW@IAT ]
push 0x0
push ebx
call sub_4439c1
mov eax [ edi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0xc
lea ecx [ esp + 0x28 ]
push ecx
call sub_436508
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi edi
mov esi [ ebp + 0xc ]
call sub_408f40
lea edx [ esp + 0x28 ]
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x20 ] eax
lea ebx [ ebx ]
mov ebx [ esp + 0x14 ]
cmp ebx [ esp + 0x18 ]
jne r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x20 ]
jbe r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push esi
call [ GetSubMenu@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push eax
push esi
call [ GetMenuItemID@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
push 0x400
push 0x7fff
push eax
push ecx
push esi
call [ GetMenuStringW@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
mov ebx [ eax + ecx * 4 - 0x4 ]
push ebx
call sub_45340c
push eax
call sub_4111c1
mov edx [ esp + 0x2c ]
add esp 0x4
push eax
push edx
push ebx
call sub_45340c
push eax
call sub_413262
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
inc ebx
mov [ esp + 0x14 ] ebx
cmp ebx [ esp + 0x18 ]
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
lea ecx [ esp + 0x28 ]
push ecx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_436508
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call [ GetMenuItemCount@IAT ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
cmp [ esp + 0x1c ] 0xffffffff
jne r-xdata
mov ebx [ esp + 0x24 ]
sub_47a8b6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov ecx [ esi + 0x1d8 ]
push ebx
push edi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_44cd1c
mov edi [ ebp + 0xc ]
push 0x4
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ebx [ ebp - 0x10 ]
add esp 0x14
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov ebx [ ebp - 0xc ]
add esp 0xc
mov esi eax
call sub_408f40
push 0x2
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x10 ]
add esp 0xc
mov esi eax
call sub_408f40
push 0x3
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0xc ]
add esp 0xc
mov esi eax
call sub_408f40
mov [ esi ] edi
pop edi
pop ebx
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
jns r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47a9cd
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
push eax
call sub_436458
test al al
jne r-xdata
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x1d8 ]
mov edx [ edi + 0x4 ]
mov esi [ ecx ]
mov ecx [ edx + 0x8 ]
call sub_40c650
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
cmp eax 0x1
jne r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
push 0xfffffffe
push esi
call [ SetWindowPos@IAT ]
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push 0xffffffff
push esi
call [ SetWindowPos@IAT ]
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47aa6e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push ecx
lea ebx [ edi + 0x1b8 ]
call sub_408e80
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4533eb
push eax
lea esi [ edi + 0x1c8 ]
call sub_40e0a0
push 0x1
push edi
call sub_46f3c1
test eax eax
jle r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x1d8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov esi [ eax ]
mov eax [ edx + 0x8 ]
lea ebx [ esp + 0x10 ]
call sub_40b960
push ebx
call sub_4426bb
test al al
je r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_443833
test al al
jne r-xdata
push ebx
call sub_44b3ac
push eax
add edi 0x2fc
push edi
call sub_44cdaf
mov esi ebx
call sub_408f40
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x10 ]
call sub_40ce70
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_4536cb
test al al
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_4536cb
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_40bc70
lea ecx [ esp + 0x20 ]
push ecx
push esi
add edi 0x2fc
push edi
call sub_461554
test al al
jne r-xdata
lea esi [ esp + 0x10 ]
call sub_408f40
lea eax [ esp + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
add edi 0x2fc
push edi
call sub_46943f
lea ecx [ esp + 0x10 ]
call sub_40c650
push eax
push esi
add edi 0x2fc
push edi
call sub_4619fe
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402250
lea esi [ esp + 0x10 ]
call sub_408f40
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
call sub_44cdaf
lea esi [ esp + 0x10 ]
mov bl al
call sub_408f40
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47abd3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
push ebx
push eax
call sub_436458
test al al
je r-xdata
jns r-xdata
movzx ecx [ esi + 0x2dc ]
mov edx [ esi + 0x1d8 ]
mov eax [ edx ]
push ecx
push eax
call sub_443b32
mov ebx [ ebp + 0xc ]
add esp 0x8
call sub_40e710
pop ebx
xor eax eax
pop esi
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
pop ebx
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47ac6d
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
lea ecx [ esp + 0x8 ]
call sub_40bc70
mov eax [ esi + 0x1d8 ]
lea edx [ esp + 0x8 ]
push edx
push eax
call sub_461383
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x8 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47acf9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
mov esi [ esi + 0x1d8 ]
push 0x0
push eax
call sub_4533eb
push eax
push esi
call sub_445a11
test al al
jne r-xdata
jns r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
jmp r-xdata
sub_47ad67
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
mov eax [ edx ]
push eax
call sub_433fce
mov ecx [ esi + 0x2f4 ]
push ecx
call sub_4331a2
add esp 0x8
xor eax eax
pop esi
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47add6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
push edx
call sub_43637e
mov eax [ esi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0x4
xor eax eax
pop esi
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47ae43
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x8 ]
mov esi ecx
push edi
push esi
mov [ esp + 0x20 ] ebx
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push edx
call sub_44cd1c
cmp ebx 0x5
jb r-xdata
jns r-xdata
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x20 ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44cecd
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
mov ebx [ esp + 0x2c ]
sub ebx [ esp + 0x24 ]
mov ecx [ edi + 0x4 ]
mov ebx [ ecx + 0x14 ]
push ebx
call sub_44cecd
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c650
jmp r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c650
mov eax [ esp + 0x20 ]
jmp r-xdata
mov ecx ebx
call sub_40c650
mov ebx eax
jmp r-xdata
mov [ esp + 0x14 ] eax
cmp ebx 0x6
jb r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c650
mov [ esp + 0xc ] eax
mov edx [ esp + 0x24 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
push eax
mov [ esp + 0x20 ] eax
call sub_44cecd
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44cecd
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
push ebx
push ecx
mov ecx [ esi + 0x1d8 ]
push edx
push eax
push ecx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c650
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ esp + 0x18 ] 0x7
jb r-xdata
test edi edi
jle r-xdata
mov edi 0xa
cmp edi 0x64
jle r-xdata
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push 0x1
push edi
push eax
push ecx
call sub_43326f
add esp 0x18
test al al
je r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] ecx
cmp [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ebx
push edx
mov edx [ esi + 0x1d8 ]
push eax
push ecx
push edx
call sub_4363f5
push 0x32
call sub_4331a2
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
push ebx
push edx
push ecx
push eax
mov eax [ esi + 0x1d8 ]
push eax
jmp r-xdata
call sub_4363f5
sub_47b042
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c650
cmp eax 0x40
jne r-xdata
jns r-xdata
cmp eax 0x41
jne r-xdata
mov edx [ esi + 0x1d8 ]
push 0x1
push edx
call sub_4363c7
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_403c90
mov ecx [ esi + 0x1d8 ]
mov edx [ ecx ]
push eax
push edx
call [ ShowWindow@IAT ]
mov eax [ esi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x1d8 ]
push 0x0
push eax
call sub_4363c7
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47b0f7
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push eax
push edi
call sub_471f53
push 0x1
push edi
call sub_46f3c1
test eax eax
jg r-xdata
mov edx [ edi + 0x1d8 ]
mov esi [ edx ]
call [ GetForegroundWindow@IAT ]
cmp esi eax
jne r-xdata
jns r-xdata
mov ecx [ edi + 0x1d8 ]
mov eax [ ecx ]
push eax
call sub_434418
mov esi [ ebp + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ edi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0x4
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_403c90
mov edx [ edi + 0x1d8 ]
mov eax [ edx ]
mov [ esp + 0xc ] eax
call sub_408f40
mov ecx [ esp + 0xc ]
mov [ esi + 0x8 ] 0x7
mov [ esi ] ecx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax edi
call sub_403cd0
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov eax [ edi + 0x2f4 ]
push eax
call sub_4331a2
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47b1db
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push 0x1
push esi
call sub_46f3c1
test eax eax
jg r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47b226
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_471f53
push esi
call sub_46fdbf
test eax eax
jg r-xdata
push edi
call [ GetForegroundWindow@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_403c90
sub_47b291
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x14 ]
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ecx
pop ebp
retn 0x18
mov eax r--data
call sub_40e710
cmp [ ebp + 0xc ] 0x0
push esi
push edi
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push ebx
push 0x3
push eax
call sub_47974b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
push ebx
push 0x1
push ecx
call sub_47974b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
sub_47b2f4
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
push eax
push ecx
push edx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x4
cmp [ eax + 0x8 ] edi
jbe r-xdata
mov edi [ eax + 0x4 ]
mov edi [ edi ]
cmp [ edi + 0x8 ] 0x8
jne r-xdata
push eax
push ecx
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x8
jmp r-xdata
push esi
call sub_47974b
lea esi [ ebp - 0x10 ]
mov edi eax
call sub_408f40
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_47b359
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push edi
mov [ esp + 0x1c ] ecx
call sub_443d61
test al al
je r-xdata
cmp [ esi + 0x8 ] 0x1
mov edi 0x8
mov bl 0x1
jbe r-xdata
mov eax edi
lea ebx [ esp + 0x20 ]
call sub_40b960
push ebx
call sub_45340c
push ebx
mov esi eax
call sub_443106
mov ebx [ ebp + 0xc ]
test eax eax
lea eax [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
mov [ esp + 0x14 ] eax
call sub_4426bb
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0x8 ] 0xa
mov [ esp + 0x10 ] ecx
jne r-xdata
call sub_40e710
lea esi [ esp + 0x20 ]
call sub_408f40
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov edx [ esp + 0x10 ]
push edx
call sub_44b3ac
cdq
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] edx
test bl bl
je r-xdata
xor bl bl
call sub_40c650
mov edi eax
cmp edi 0x10
jle r-xdata
push ecx
call sub_44cecd
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x1c ]
xor eax eax
push esi
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x34 ] eax
call sub_479b09
lea edx [ esp + 0x20 ]
push edx
call sub_443845
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push edi
lea eax [ esp + 0x34 ]
push eax
push ecx
push edx
call sub_432e88
mov ebx [ ebp + 0xc ]
add esp 0x10
lea eax [ esp + 0x30 ]
call sub_40e710
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi 0x8
jmp r-xdata
mov edi 0x10
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_443006
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] edx
test bl bl
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_40baa0
fstp [ esp + 0x18 ]
test bl bl
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408f40
test bl bl
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x2
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jl r-xdata
xor bl bl
mov edi 0x10
cmp ecx 0xffffffff
jg r-xdata
jg r-xdata
jl r-xdata
xor eax eax
or eax ecx
jne r-xdata
cmp [ esp + 0x18 ] 0x7fffffff
jbe r-xdata
mov edi 0x10
cmp [ esp + 0x18 ] 0x80000000
jae r-xdata
lea edi [ eax + 0x8 ]
jmp r-xdata
sub_47b52c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_47aa6e
test al al
jne r-xdata
mov edx [ esi + 0x2fc ]
mov esi [ ebp + 0xc ]
push edi
mov edi [ edx ]
call sub_408f40
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push ebx
push 0x0
push 0x1
add eax esi
call sub_403c90
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
pop ebx
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47b588
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push esi
call sub_47aa6e
test al al
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x2fc ]
mov eax [ eax ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
push eax
push ecx
call sub_4533eb
push eax
add esi 0x88
push esi
call sub_4606a6
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
test eax eax
je r-xdata
mov ecx [ esi + 0x2fc ]
mov eax [ ecx ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
push eax
push ecx
call sub_4533eb
push eax
add esi 0x88
push esi
call sub_453f64
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47b623
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
push ebx
mov [ esp + 0x14 ] ebx
call sub_47aa6e
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_40bc70
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_410bc0
lea ebx [ esp + 0x30 ]
call sub_40d290
mov ebx 0x6
cmp [ edi + 0x8 ] ebx
jae r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0xc ]
mov esi [ ebx + 0x2fc ]
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edi edi
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_436748
lea eax [ esp + 0x30 ]
push eax
mov esi edi
call sub_40ba10
cmp [ edi + 0x8 ] ebx
jb r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
push 0x1
lea esi [ esp + 0x30 ]
call sub_408f40
lea ecx [ esp + 0x10 ]
call sub_402250
lea ecx [ esp + 0x20 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x10 ]
push 0x0
push eax
call sub_4533eb
push eax
push esi
call sub_4698f8
jmp r-xdata
mov ebx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_469b4b
movzx edi al
jmp r-xdata
mov bl al
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
push 0x1
push eax
call sub_4533eb
push eax
push esi
call sub_4698f8
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_461ee9
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_442f4c
movzx edx al
push edx
lea eax [ esp + 0x24 ]
push eax
push esi
call sub_469ae8
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
mov bl al
call sub_40e6a0
jmp r-xdata
mov edi eax
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x10 ]
lea ecx [ esp + 0x20 ]
push ecx
push eax
call sub_4533eb
push eax
push esi
call sub_469bb5
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
mov bl al
call sub_40e6a0
jmp r-xdata
test bl bl
jne r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_4698be
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_469b64
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x10 ]
push 0x0
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
push eax
call sub_4533eb
push eax
push esi
call sub_469839
sub_47b954
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
push ebx
mov [ esp + 0x14 ] ebx
call sub_47aa6e
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_40bc70
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_4533eb
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_410bc0
lea ebx [ esp + 0x30 ]
call sub_40d290
mov ebx 0x6
cmp [ edi + 0x8 ] ebx
jae r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0xc ]
mov esi [ ebx + 0x2fc ]
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edi edi
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_4367cf
jmp r-xdata
lea eax [ esp + 0x30 ]
push eax
mov esi edi
call sub_40ba10
cmp [ edi + 0x8 ] ebx
jb r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_4367a3
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edi [ edi + 0x4 ]
mov ecx [ edi + 0x14 ]
mov edi [ edi + 0x10 ]
lea edx [ esp + 0x20 ]
push edx
call sub_40c650
push eax
mov ecx edi
call sub_40c650
push eax
push esi
call sub_462034
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e6a0
jmp r-xdata
lea esi [ esp + 0x30 ]
call sub_408f40
lea ecx [ esp + 0x10 ]
call sub_402250
lea ecx [ esp + 0x20 ]
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_436787
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c650
push eax
push esi
call sub_436764
mov esi [ ebp + 0xc ]
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
push 0x1
push esi
call sub_4367eb
jmp r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
push 0x0
push esi
call sub_4367eb
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x14 ]
mov ebx eax
call sub_40c650
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_445db6
jmp r-xdata
push eax
push ebx
push 0x1
push esi
call sub_4367eb
jmp r-xdata
mov eax ebx
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x14 ]
mov ebx eax
call sub_40c650
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
test eax eax
jne r-xdata
push eax
push ebx
push 0x0
push esi
call sub_4367eb
jmp r-xdata
mov eax ebx
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edi [ edi + 0x4 ]
mov ecx [ edi + 0x14 ]
mov edi [ edi + 0x10 ]
call sub_40c650
push eax
push edi
call sub_4533eb
push eax
push esi
call sub_445cb9
lea eax [ esp + 0x20 ]
push eax
push 0x1
lea edx [ esp + 0x20 ]
push edx
push eax
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_445be4
jmp r-xdata
push esi
call sub_461f53
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e6a0
jmp r-xdata
sub_47bd15
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
mov ebx ecx
xor eax eax
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xc ] ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x3c ] eax
call sub_40bc70
mov edi [ ebp + 0xc ]
mov esi edi
call sub_408f40
mov esi [ ebp + 0x8 ]
push esi
push ebx
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
call sub_47aa6e
test al al
jne r-xdata
mov eax r--data
lea ebx [ esp + 0x30 ]
call sub_40e710
mov ebx 0x5
cmp [ esi + 0x8 ] ebx
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_4533eb
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x10 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
call sub_410bc0
mov ebx [ esp + 0xc ]
mov esi [ ebx + 0x2fc ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
nop
lea ecx [ esp + 0x20 ]
call sub_402250
lea esi [ esp + 0x30 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_436366
lea ecx [ esp + 0x30 ]
push ecx
call sub_40ba10
mov edx [ ebp + 0x8 ]
mov esi edx
cmp [ edx + 0x8 ] ebx
jb r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_43634e
jmp r-xdata
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
jmp r-xdata
call sub_408f40
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x1
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0xffffffff
push esi
call sub_445e52
jmp r-xdata
mov esi edi
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_402250
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0x1
push esi
call sub_445e52
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_4369d7
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0x1
push esi
call sub_43699d
test al al
jne r-xdata
mov esi edi
call sub_408f40
mov edx [ esp + 0xc ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0x0
push esi
call sub_43699d
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_469ff3
test al al
jne r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push 0x0
push 0x1
add eax ebx
call sub_403c90
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c650
push eax
push esi
call sub_469f6a
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push eax
call sub_4533eb
push eax
push esi
call sub_469ed9
test al al
je r-xdata
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
push eax
push esi
call sub_469df3
test al al
jne r-xdata
mov esi edi
call sub_408f40
mov eax [ esp + 0xc ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] eax
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push esi
call sub_469cdb
test al al
jne r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_469bf3
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e6a0
jmp r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push esi
call sub_43697b
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0x1
push esi
call sub_445e20
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
push 0x0
push esi
call sub_445e20
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push esi
call sub_46216f
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_436958
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_436934
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_4368a0
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_4533eb
push eax
push esi
call sub_445dfe
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445ae0
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x10 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40c650
push eax
push esi
call sub_4620ea
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c650
push eax
push esi
call sub_436577
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
jmp r-xdata
sub_47c296
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_47aa6e
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x0
push ecx
call sub_436399
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47c2db
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_47aa6e
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x1
push ecx
call sub_436399
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47c320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_47aa6e
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x0
push ecx
call sub_4363c7
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47c365
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_47aa6e
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x1
push ecx
call sub_4363c7
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47c3aa
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
mov ebx ecx
push esi
push ebx
mov [ ebp - 0x4 ] ebx
call sub_47aa6e
test al al
jne r-xdata
mov ebx [ ebx + 0x2fc ]
push 0x1
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_44cd1c
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x6
jae r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c650
mov ebx eax
mov ebx [ ebp - 0xc ]
sub ebx [ ebp - 0x14 ]
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c650
mov edi eax
mov edi [ ebp - 0x8 ]
sub edi [ ebp - 0x10 ]
jmp r-xdata
cmp edi 0x7
jae r-xdata
mov ecx [ ebp + 0xc ]
call sub_40c650
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
mov [ ebp + 0xc ] eax
call sub_44cecd
test al al
je r-xdata
mov ecx esi
call sub_40c650
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov edx [ esi + 0x4 ]
mov esi [ edx + 0x10 ]
push esi
call sub_44cecd
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x2fc ]
push edi
push ebx
push eax
mov eax [ ebp + 0xc ]
push eax
push edx
call sub_4363f5
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47c496
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
mov edi ecx
push eax
push edi
call sub_47aa6e
test al al
jne r-xdata
mov eax [ edi + 0x2fc ]
push 0x1
lea edx [ ebp - 0x10 ]
push edx
push eax
call sub_44cd1c
cmp al 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov edi [ ebp + 0xc ]
push ebx
push 0x4
push 0x1
mov eax edi
call sub_40e830
push 0x0
push 0x1
push 0x0
call sub_40cf00
mov ebx [ ebp - 0x10 ]
add esp 0x14
mov esi eax
call sub_408f40
push 0x1
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov ebx [ ebp - 0xc ]
add esp 0xc
mov esi eax
call sub_408f40
push 0x2
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x10 ]
add esp 0xc
mov esi eax
call sub_408f40
push 0x3
push 0x1
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40cf00
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0xc ]
add esp 0xc
mov esi eax
call sub_408f40
pop ebx
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47c5ba
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov eax r--data
mov ebx esi
mov edi ecx
call sub_40e710
mov eax [ ebp + 0x8 ]
push eax
push edi
call sub_47aa6e
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_40bc70
mov eax [ edi + 0x2fc ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_461383
test al al
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ esp + 0x10 ]
call sub_40e6a0
mov ecx edi
call sub_402250
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
lea ecx [ esp + 0x10 ]
call sub_402250
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47c65d
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
call sub_47aa6e
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
mov edi [ edi + 0x2fc ]
push edx
push eax
call sub_4533eb
push eax
push edi
call sub_445a11
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c650
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x1
sub_47c6d0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push esi
push ecx
mov [ ebp - 0x8 ] ecx
call sub_47aa6e
test al al
jne r-xdata
push ebx
push edi
mov edi [ esi + 0x8 ]
or eax 0xffffffff
mov ebx 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] eax
cmp edi 0x7
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x6
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c650
mov [ ebp + 0x8 ] eax
cmp edi 0x5
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c650
mov [ ebp - 0x4 ] eax
mov eax 0x1
cmp edi 0x4
jb r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c650
mov ebx eax
dec eax
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_45340c
push eax
call sub_44b98c
add esp 0x4
xor eax eax
dec eax
je r-xdata
mov eax 0x2
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
push ecx
push edx
push ebx
push eax
mov eax [ esi + 0x2fc ]
push eax
call sub_436a0b
mov ecx [ esi + 0x10c ]
push ecx
call sub_4331a2
add esp 0x4
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
pop edi
pop ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47c7dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push esi
call sub_47aa6e
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
mov eax [ esi + 0x2fc ]
push eax
call sub_445f03
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47c81c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push eax
push rw-data
call sub_430c09
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ ebx + 0x8 ]
mov edi [ edx ]
mov [ esp + 0x20 ] eax
mov eax ecx
cmp eax 0xfffffe6e
ja r-xdata
cmp eax 0xfffffff0
ja r-xdata
je r-xdata
cmp eax 0xfffffff4
je r-xdata
je r-xdata
mov ecx [ ebx ]
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x9
push 0x110a
push ecx
call esi
test eax eax
je r-xdata
cmp eax 0xfffffdd9
ja r-xdata
mov eax [ ebx ]
push eax
push rw-data
call sub_441b7c
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffb
je r-xdata
call [ ReleaseCapture@IAT ]
jmp r-xdata
add eax 0x140
cmp eax 0xd4
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
push 0x4e
push ecx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x50 ]
push edx
push 0x0
mov [ esp + 0x5c ] eax
mov eax [ ebx ]
push 0x113e
push eax
mov [ esp + 0x60 ] 0x4
call esi
test eax eax
je r-xdata
add eax 0x226
cmp eax 0x8a
ja r-xdata
je r-xdata
mov edi [ rw-data ]
mov ecx [ edi + eax * 4 ]
mov eax [ ecx ]
mov cl [ eax + 0x88 ]
cmp cl 0x10
je r-xdata
push 0x1
push edi
push rw-data
mov [ esp + 0x1f ] 0x0
call sub_456391
lea edx [ esp + 0x18 ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov edx [ ebx ]
push edx
push rw-data
call sub_441b7c
mov esi eax
mov [ esp + 0x14 ] esi
cmp esi 0xffffffff
jne r-xdata
cmp eax 0xfffffffe
jne r-xdata
movzx eax [ eax + lookup_table_47d1d0 ]
jmp [ eax * 4 + jump_table_47d1c0 ]
mov ecx [ ebx + 0x34 ]
cmp ecx [ ebx + 0x5c ]
je r-xdata
movzx ecx [ eax + lookup_table_47d134 ]
jmp [ ecx * 4 + jump_table_47d120 ]
mov edx [ ebx ]
push 0x0
push 0x0
push 0x130b
push edx
call [ SendMessageW@IAT ]
push eax
add eax 0x2f7
cmp eax 0xd
ja r-xdata
mov ecx [ ebx + 0xc ]
dec ecx
je r-xdata
cmp cl 0x13
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov al [ eax + 0x88 ]
mov [ esp + 0x24 ] esi
cmp al 0x10
je r-xdata
mov eax [ ebx ]
push eax
call [ GetParent@IAT ]
push eax
push rw-data
call sub_441b7c
mov esi eax
mov [ esp + 0x14 ] esi
cmp esi 0xffffffff
je r-xdata
push 0x1
push edi
push rw-data
call sub_456391
lea edx [ esp + 0x18 ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov edx [ ebx ]
push edx
push rw-data
call sub_441b7c
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx ]
push 0x1
push 0x0
push ecx
call [ InvalidateRect@IAT ]
jmp r-xdata
mov esi [ ebx + 0x4 ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x24 ]
push eax
push esi
push rw-data
call sub_441af5
test al al
je r-xdata
mov edx [ rw-data ]
xor esi esi
push esi
push esi
push esi
push edx
call [ ImageList_SetDragCursorImage@IAT ]
mov eax [ rw-data ]
push 0xfffffff0
push 0xfffffff8
push esi
push eax
call [ ImageList_BeginDrag@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetCapture@IAT ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x34 ] esi
lea esi [ esp + 0x28 ]
mov [ rw-data ] edi
mov [ esp + 0x30 ] 0x1
call sub_408f40
mov [ esp + 0x28 ] edi
mov edi r--data
lea esi [ esp + 0x3c ]
mov [ esp + 0x30 ] 0x1
call sub_401b10
mov eax 0x2
lea ecx [ eax - 0x1 ]
lea edx [ esp + 0x28 ]
call sub_401980
mov ecx esi
call sub_402250
mov edx [ ebx ]
lea esi [ ebx + 0x20 ]
push esi
push edx
call [ ClientToScreen@IAT ]
mov eax [ ebx + 0x24 ]
mov ecx [ esi ]
push eax
push ecx
push 0x0
call [ ImageList_DragEnter@IAT ]
lea esi [ esp + 0x28 ]
call sub_408f40
jmp r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1000
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x11
call edi
test ax ax
jns r-xdata
mov esi [ ebx ]
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x100
je r-xdata
cmp [ edi + 0x18c ] 0x0
je r-xdata
movzx eax [ eax + lookup_table_47d110 ]
jmp [ eax * 4 + jump_table_47d0fc ]
pop edi
pop esi
mov eax 0x20
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub ecx 0x10000
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x28 ]
push edx
push 0x0
mov [ esp + 0x30 ] eax
mov eax [ ebx ]
push 0x1111
push eax
mov [ esp + 0x3c ] ecx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov [ esp + 0x13 ] 0x1
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov al [ eax + 0x88 ]
cmp al 0x10
jb r-xdata
mov ecx [ rw-data ]
mov edi [ esp + 0x14 ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
mov cx [ ebx + 0x10 ]
mov [ eax + 0x8e ] cx
mov edx [ ebx + 0x4 ]
push 0x0
push edx
call sub_462a31
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x24 ] 0x0
jbe r-xdata
cmp eax 0x1
jmp r-xdata
push 0x9
call edi
test ax ax
jns r-xdata
cmp [ ebx + 0xc ] 0x20
jne r-xdata
mov esi [ rw-data ]
mov eax 0x3
cmp esi eax
jl r-xdata
mov [ edi + 0x19d ] 0x1
jmp r-xdata
cmp [ edi + 0x19d ] 0x0
mov [ edi + 0x19e ] 0x1
jne r-xdata
cmp [ edi + 0x19e ] 0x1
jne r-xdata
push ecx
mov ecx [ ebx + 0x4 ]
push ecx
jmp r-xdata
cmp [ eax + 0x44 ] 0xfe000000
mov [ esp + 0x13 ] cl
jne r-xdata
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ ClientToScreen@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebx ]
lea ecx [ esp + 0x50 ]
push ecx
push 0x0
push 0x113e
push edx
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] 0x4
call [ SendMessageW@IAT ]
test [ esp + 0x30 ] 0x46
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x3c ]
push eax
push 0x0
mov [ esp + 0x44 ] ecx
mov ecx [ ebx ]
push 0x1012
push ecx
mov [ esp + 0x50 ] edx
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
jle r-xdata
cmp al 0x11
jbe r-xdata
mov [ rw-data ] esi
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
add ecx 0x20
push ecx
mov esi rw-data
call sub_40e0a0
mov edx [ rw-data ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x90 ]
mov [ rw-data ] dl
mov eax [ ebx + 0x10 ]
mov ecx [ ebx ]
push j_sub_47e6ac
push eax
push 0x1030
push ecx
call [ SendMessageW@IAT ]
jmp r-xdata
je r-xdata
mov edx [ ebx ]
push 0x0
push 0x0
push 0x130b
push edx
call [ SendMessageW@IAT ]
push 0x10
mov esi eax
call edi
test ax ax
jns r-xdata
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x9
push 0x110a
push esi
call edi
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ edi + 0x19e ] 0x0
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
push ecx
push edx
jmp r-xdata
mov [ edi + 0x19d ] 0x0
jmp r-xdata
mov eax [ ebx + 0x4 ]
push ecx
push eax
call sub_462a31
call sub_462a31
mov ecx [ ebx + 0x2c ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x24 ]
push eax
push ecx
push rw-data
call sub_441af5
test al al
je r-xdata
mov [ esp + 0x13 ] 0x1
mov edx [ edi ]
mov ecx [ esp + 0x1c ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push ecx
push edx
push 0x80
push eax
call [ TrackPopupMenuEx@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esp + 0x74 ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
push edx
push rw-data
call sub_441af5
test al al
je r-xdata
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ ClientToScreen@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov esi [ SendMessageW@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
push 0x0
mov [ esp + 0x30 ] edx
mov edx [ ebx ]
push 0x1111
push edx
mov [ esp + 0x3c ] eax
call esi
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov edx [ esp + 0x74 ]
push 0x0
push edx
jmp r-xdata
inc esi
push esi
jmp r-xdata
dec esi
push esi
jmp r-xdata
lea ecx [ esp + 0x50 ]
push ecx
push 0x0
push 0x113e
push esi
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] 0x4
call edi
test eax eax
inc eax
cmp eax esi
jle r-xdata
mov ecx [ ecx ]
movzx ecx [ ecx + 0x8b ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ esp + 0x14 ]
mov eax [ edi + esi * 4 ]
mov edx [ eax ]
mov eax [ edx + 0x30 ]
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
test eax 0x8000000
jne r-xdata
mov esi [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov edx [ edi ]
mov ecx [ esp + 0x1c ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push ecx
push edx
push 0x0
push eax
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
lea edx [ esp + 0x78 ]
push edx
push 0x0
mov [ esp + 0x84 ] eax
mov eax [ ebx ]
push 0x104b
push eax
mov [ esp + 0x88 ] 0x4
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx ]
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push 0x0
push 0x113e
push ecx
mov [ esp + 0x60 ] 0xc
mov [ esp + 0x6c ] 0xf000
call esi
test [ esp + 0x30 ] 0x46
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov esi [ SendMessageW@IAT ]
lea eax [ esp + 0x3c ]
push eax
push 0x0
mov [ esp + 0x44 ] ecx
mov ecx [ ebx ]
push 0x1012
push ecx
mov [ esp + 0x50 ] edx
call esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov ecx [ edx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
cmp eax esi
jg r-xdata
test [ ebx + 0x28 ] 0x11
mov ecx [ rw-data ]
je r-xdata
test [ esp + 0x44 ] 0xe
je r-xdata
mov edx [ ebx ]
push 0x0
push 0x9
push 0x110b
push edx
call esi
mov eax [ esp + 0x34 ]
mov ecx [ ebx ]
push eax
push 0x9
push 0x110b
push ecx
call esi
jmp r-xdata
lea edx [ esp + 0x78 ]
push edx
push 0x0
mov [ esp + 0x84 ] eax
mov eax [ ebx ]
push 0x104b
push eax
mov [ esp + 0x88 ] 0x4
call esi
test [ esp + 0x44 ] 0xe
je r-xdata
mov edx [ edx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0x50 ]
push 0x4f
push ecx
lea edx [ ebx + 0x10 ]
push edx
call sub_412fba
add esp 0xc
xor eax eax
mov [ ebx + 0xae ] ax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x48 ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x14
jne r-xdata
mov eax [ esp + 0x98 ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
push eax
push rw-data
call sub_441af5
test al al
je r-xdata
mov ecx [ esp + 0x98 ]
push 0x0
push ecx
jmp r-xdata
mov ecx [ ecx + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x44 ]
test eax eax
js r-xdata
mov [ ebx + 0x30 ] eax
mov ecx [ rw-data ]
mov esi [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov edx [ eax ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x34 ] eax
test [ ebx + 0x24 ] 0x1
je r-xdata
sub_47d2a5
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push esi
call sub_46fe32
mov eax [ ebx + 0x8 ]
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor edi edi
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push eax
call sub_430d1d
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edi eax
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x8
mov [ esi + 0x4 ] edi
pop edi
mov edi edi
xor eax eax
mov edx [ ebx + 0x4 ]
mov eax [ edx + edi * 4 ]
mov ebx ecx
call sub_40b960
mov ebx [ ebp + 0xc ]
jmp r-xdata
push 0x10
call sub_4115d7
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_47d33e
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x16c ]
lea esi [ edi + 0x16c ]
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] eax
je r-xdata
push edi
call sub_473a07
mov [ ebp - 0x8 ] eax
xor eax eax
push ebx
mov ecx edi
mov [ edi + 0x454 ] eax
mov [ edi + 0xf8 ] eax
call sub_4091e0
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
lea ebx [ edx + edi + 0x4 ]
mov eax ebx
call sub_403cc0
mov ecx [ ebp + 0x14 ]
mov al [ eax + 0x10 ]
mov [ ebp + 0xf ] al
test ecx ecx
je r-xdata
push ebx
call sub_46ff07
mov eax [ ebp - 0x8 ]
push eax
push edi
call sub_473950
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ esi ]
jae r-xdata
push rw-data
call sub_46feb1
mov esi ecx
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov esi [ ebp - 0x4 ]
mov eax ebx
call sub_403cc0
mov ebx [ ebp + 0x14 ]
push eax
call sub_408e80
jmp r-xdata
mov al [ ebp + 0xf ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edi esi
call sub_40c790
mov edx [ ebp + 0x8 ]
cmp edx [ esi ]
jb r-xdata
sub_47d40f
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ InterlockedIncrement@IAT ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
push rw-data
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] eax
lea esi [ eax + 0x3 ]
call ebx
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x2c ] 0x0
je r-xdata
test esi esi
je r-xdata
mov ebx [ rw-data ]
and ebx 0x3f
mov ebx [ rw-data ]
mov eax [ rw-data ]
and ebx 0x3f
and eax 0x3f
cmp eax ebx
jle r-xdata
cmp eax 0x1
jne r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
push 0xa
call [ Sleep@IAT ]
push rw-data
call ebx
mov eax [ rw-data ]
dec esi
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
inc eax
add ecx 0x40
mov [ rw-data ] eax
cmp eax ecx
jle r-xdata
mov edi ebx
shl edi 0x4
mov eax ebx
shl eax 0x4
add eax rw-data
push eax
call sub_46fe32
jmp r-xdata
mov ecx eax
shl ecx 0x4
add ecx rw-data
sub eax ebx
mov [ ebp + 0x8 ] eax
push rw-data
call [ InterlockedDecrement@IAT ]
lea esi [ ebp - 0x14 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
add eax 0xffffffc0
mov [ rw-data ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
add edx edi
push edx
lea ecx [ ebp - 0x14 ]
call sub_468070
lea eax [ ebp - 0x14 ]
push eax
call sub_40ba10
sub edi 0x10
dec ebx
jns r-xdata
lea esi [ ebp - 0x14 ]
call sub_408f40
lea edx [ ebp - 0x14 ]
lea ecx [ edi + 0x18 ]
shl ebx 0x4
lea esi [ ebx + rw-data ]
push edx
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x14 ] ecx
call sub_40ba10
mov eax [ edi + 0x44 ]
lea ebx [ ebp - 0x14 ]
call sub_40e710
push ebx
call sub_40ba10
mov ecx [ ebp + 0xc ]
push ecx
mov ecx ebx
call sub_468070
push ebx
call sub_40ba10
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
js r-xdata
lea esi [ ecx - 0x10 ]
push esi
push ecx
call sub_47d2a5
dec [ ebp + 0x8 ]
mov ecx esi
jne r-xdata
sub_47d583
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
push edi
jne r-xdata
pop edi
mov eax 0x80020001
pop esi
mov esp ebp
pop ebp
retn 0x24
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
cmp edx 0xc
jne r-xdata
mov eax [ ebp + 0xc ]
dec eax
cmp eax 0xa
ja r-xdata
lea eax [ esi + 0x18 ]
push eax
call sub_432416
test al al
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
jmp [ eax * 4 + jump_table_47d76f ]
mov eax [ esi + 0x28 ]
mov ecx 0x8
mov [ esp + 0x10 ] cx
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
mov eax 0x80020003
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0x48
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0x78
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0x68
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0x58
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0x88
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0x98
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0xa8
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0xb8
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
add esi 0xc8
push esi
push ecx
push edx
call sub_432770
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov ecx [ eax ]
lea edi [ esp + 0xc ]
push edi
push 0x1
lea edi [ esp + 0x20 ]
push edi
push edx
mov edx [ ecx + 0x1c ]
push eax
call edx
test eax eax
js r-xdata
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push esi
call sub_47d40f
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
sub_47d79b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
push esi
push edi
lea edi [ esp + 0x60 ]
mov ebx ecx
call sub_40d330
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4533eb
mov ecx [ esi + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4533eb
lea ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] eax
xor edi edi
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] 0xffffffff
call sub_40bc70
cmp [ esi + 0x8 ] 0x3
jb r-xdata
cmp [ esi + 0x8 ] 0x4
jb r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
mov edi eax
test edi edi
js r-xdata
mov eax [ esp + 0x28 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c650
jmp r-xdata
xor edi edi
cmp edi 0x4
jle r-xdata
mov ecx [ esp + 0x14 ]
dec eax
push ecx
lea edx [ esp + 0x18 ]
mov [ esp + 0x2c ] eax
push edx
lea eax [ esp + 0x68 ]
push eax
mov [ esp + 0x38 ] 0xffffffff
call sub_46906d
xor esi esi
cmp [ esp + 0x14 ] esi
je r-xdata
mov eax 0x1
cmp eax 0x1
jge r-xdata
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x64 ]
push edx
call sub_460bba
cmp edi esi
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_403c90
mov eax [ ebx ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
inc edx
push edx
add eax ebx
call sub_403cd0
jmp r-xdata
cmp edi 0x1
jne r-xdata
push esi
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_44ca07
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_402250
lea edi [ esp + 0x60 ]
call sub_401380
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x2
jne r-xdata
push esi
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x68 ]
push eax
call sub_44ca07
mov edi eax
mov [ esp + 0x24 ] edi
cmp edi esi
jne r-xdata
call sub_408f40
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
jmp r-xdata
call sub_408f40
mov [ esi ] 0x1
mov [ esi + 0x8 ] 0x1
jmp r-xdata
cmp edi 0x3
jne r-xdata
push esi
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_44ca07
mov edi eax
mov [ esp + 0x24 ] edi
cmp edi esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp edi 0x2
jl r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_403c90
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov eax [ ebp + 0xc ]
push edi
push 0x1
call sub_40e830
add esp 0x8
mov [ esp + 0x14 ] esi
test edi edi
jle r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push esi
push 0x1
add eax ebx
call sub_403c90
jmp r-xdata
mov [ esp + 0x10 ] esi
push edi
lea edx [ edi - 0x1 ]
mov [ esp + 0x10 ] 0x1
push edx
jmp r-xdata
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x5c ] esi
mov edi [ esp + 0x1c ]
cmp edi esi
jne r-xdata
xor ecx ecx
cmp eax 0x2
setge cl
mov [ esp + 0x10 ] ecx
cmp ecx eax
jae r-xdata
mov edx [ esp + 0x28 ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
inc edx
push edx
add eax ebx
call sub_403cd0
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push esi
inc ecx
push ecx
add eax ebx
call sub_403cd0
jmp r-xdata
mov eax [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
push eax
push 0x1
push esi
call sub_40cf00
mov edx [ esp + 0x1c ]
add esp 0xc
lea ecx [ esp + 0x30 ]
push ecx
mov esi eax
push edx
lea eax [ esp + 0x68 ]
push eax
call sub_468f70
lea edi [ esp + 0x30 ]
call sub_40e6a0
mov eax [ esp + 0x10 ]
mov ecx 0x1
add [ esp + 0x14 ] ecx
add eax ecx
xor esi esi
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x24 ]
jb r-xdata
push 0x1
call sub_40e830
add esp 0x8
mov [ esp + 0x14 ] esi
cmp [ esp + 0x10 ] edi
jae r-xdata
mov edi [ esp + 0x1c ]
cmp edi esi
jne r-xdata
mov edi [ esp + 0x48 ]
cmp edi esi
je r-xdata
mov eax [ ebp + 0xc ]
push edi
push 0x1
call sub_40e830
add esp 0x8
xor ebx ebx
cmp edi esi
jbe r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push esi
push 0x1
add eax ebx
call sub_403c90
lea ecx [ esp + 0x14 ]
jmp r-xdata
push 0x1
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x68 ]
push edx
call sub_44ca07
mov [ esp + 0x24 ] eax
cmp eax esi
je r-xdata
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
push 0x1
push 0x0
call sub_40cf00
add esp 0xc
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x30 ]
push eax
push esi
lea ecx [ esp + 0x68 ]
push ecx
call sub_468f70
mov esi [ esp + 0x10 ]
lea edi [ esp + 0x30 ]
call sub_40e6a0
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x24 ]
jl r-xdata
mov eax [ ebp + 0xc ]
push edi
push 0x1
call sub_40e830
add esp 0x8
test edi edi
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push esi
push 0x1
add eax ebx
call sub_403c90
jmp r-xdata
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_468fe1
test eax eax
je r-xdata
push edi
push 0x1
lea eax [ esp + 0x58 ]
call sub_40e830
add esp 0x8
mov [ esp + 0x10 ] esi
test edi edi
je r-xdata
lea ecx [ esp + 0x14 ]
jmp r-xdata
jmp r-xdata
call sub_410ba0
lea eax [ esp + 0x30 ]
push eax
push ecx
lea ecx [ esp + 0x68 ]
push ecx
call sub_468f70
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x14 ]
call sub_40d7c0
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x24 ]
jb r-xdata
mov esi [ esp + 0x14 ]
lea esi [ esp + 0x50 ]
call sub_408f40
lea ecx [ esp + 0x14 ]
call sub_410c60
lea ecx [ esp + 0x40 ]
mov edi [ ebp + 0xc ]
push esi
push 0x1
push 0x0
call sub_40cf00
mov edx [ esp + 0x24 ]
mov ecx [ edx + esi * 4 ]
add esp 0xc
push ecx
mov ebx eax
call sub_408e80
inc esi
cmp esi [ esp + 0x1c ]
jb r-xdata
lea eax [ esp + 0x50 ]
push eax
lea esi [ esp + 0x18 ]
call sub_40ba10
xor esi esi
jmp r-xdata
jmp r-xdata
mov edi [ ebp + 0xc ]
push ebx
push 0x1
push esi
call sub_40cf00
mov ecx [ esp + 0x24 ]
mov edi [ ecx + ebx * 4 ]
add esp 0xc
mov esi eax
call sub_40e6a0
inc ebx
cmp ebx [ esp + 0x1c ]
jb r-xdata
mov ecx [ esp + 0x10 ]
xor esi esi
jmp r-xdata
push esi
push 0x1
push 0x0
lea edi [ esp + 0x5c ]
call sub_40cf00
mov edx [ esp + 0x50 ]
mov edi [ edx + esi * 4 ]
add esp 0xc
mov esi eax
call sub_40e6a0
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x48 ]
jb r-xdata
xor esi esi
mov esi [ esp + 0x10 ]
sub_47dcbb
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax [ edi ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
lea esi [ ebp - 0x24 ]
mov [ ebp + 0x10 ] ecx
call sub_40d370
mov eax [ edi ]
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push eax
call sub_45f645
xor eax eax
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push esi
mov eax edi
push ebx
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x14 ] r--data
call sub_408d90
test eax eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_410c60
lea esi [ ebp - 0x24 ]
call sub_401350
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x24 ]
push edi
push eax
push ecx
lea edx [ ebx + 0x15c ]
push edx
call sub_4542ed
cmp eax 0x6
jne r-xdata
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
push 0x85
cmp eax 0x7
jne r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push edx
add eax ebx
call sub_403c90
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax ebx
call sub_403cd0
lea ecx [ ebp - 0x14 ]
call sub_410c60
lea esi [ ebp - 0x24 ]
call sub_401350
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
push ecx
push 0x70
jmp r-xdata
push ebx
call sub_45e737
sub_47ddc2
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x28 ]
push edx
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
push ecx
push edx
call sub_465124
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x14
xor esi esi
cmp [ edi + 0x8 ] 0x2
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp + 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp + 0x18 ]
sub eax ebx
cmp eax [ ebp + 0x8 ]
jl r-xdata
mov eax [ edi + 0x4 ]
mov edi [ eax + 0x4 ]
push edi
call sub_4429ef
test al al
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_410c60
cmp eax [ ebp - 0x28 ]
jg r-xdata
push esi
push edi
call sub_4323e1
cmp eax 0x1
jne r-xdata
mov edi [ ebp + 0xc ]
lea esi [ ebp - 0x14 ]
call sub_401b10
mov edi r--data
mov eax esi
call sub_40d200
mov edx [ ebp + 0x10 ]
cmp ebx [ edx + 0x8 ]
jae r-xdata
mov eax edi
lea ebx [ ebp - 0x14 ]
call sub_40b960
push esi
push 0x1
push 0x1
mov edi ebx
call sub_40cf00
add esp 0xc
push r--data
push eax
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov edi r--data
lea eax [ ebp - 0x14 ]
call sub_40d200
mov eax [ ebp - 0x10 ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4115d7
mov edx [ ebp - 0x14 ]
mov ecx [ ebp + 0x14 ]
push edx
push eax
mov [ ecx ] eax
call sub_411567
add esp 0xc
lea ecx [ ebp - 0x14 ]
call sub_402250
lea ecx [ ebp - 0x24 ]
call sub_410c60
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push ebx
push r--data
lea eax [ ebp - 0xbc ]
push 0x40
push eax
call sub_4152ca
add esp 0x10
lea edi [ ebp - 0xbc ]
lea esi [ ebp - 0x3c ]
call sub_401b10
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov edx [ edx + ebx * 4 ]
mov eax 0x1
xor ecx ecx
call sub_401980
mov ecx esi
call sub_402250
lea eax [ ebp - 0x14 ]
mov edi r--data
cmp ebx [ ebp + 0x18 ]
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_408f40
lea ebx [ esi + 0x1 ]
call sub_40d200
lea edi [ ebp - 0xbc ]
lea eax [ ebp - 0x14 ]
call sub_40d200
mov eax [ ebp + 0x10 ]
inc ebx
cmp ebx [ eax + 0x8 ]
jb r-xdata
mov edi r--data
lea edx [ ebp - 0x24 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x18 ] esi
push ebx
push 0x1
push 0x1
lea edi [ ebp - 0x14 ]
call sub_40cf00
add esp 0xc
push eax
lea esi [ ebp - 0x24 ]
call sub_40ba10
inc ebx
xor esi esi
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4323e1
cmp ebx eax
jge r-xdata
sub_47dfb9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x30
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] eax
mov eax 0x9
mov [ esp + 0x10 ] ax
mov eax 0x1
lea edx [ esp + 0x10 ]
mov [ esp ] edx
mov [ esp + 0x8 ] eax
mov edx 0x8
mov [ ecx + 0x40 ] al
lea eax [ esp ]
mov [ esp + 0x20 ] dx
push eax
lea edx [ esp + 0x24 ]
push edx
push ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x34 ] r--data
call sub_47d40f
mov esp ebp
pop ebp
retn
sub_47e012
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ edi + 0x4 ]
lea edx [ esp + 0x24 ]
push edx
mov edx [ ecx ]
lea eax [ esp + 0x20 ]
push eax
mov eax [ edx ]
push eax
push rw-data
mov [ rw-data ] 0x1
call sub_465124
mov ecx [ esp + 0x14 ]
push ecx
call sub_46ff07
xor ebx ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] ebx
cmp [ edi + 0x1c ] ebx
jle r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push ebx
inc eax
push eax
push rw-data
call sub_47d33e
push rw-data
call sub_46feb1
lea ecx [ esp + 0x20 ]
push ecx
call sub_443006
lea esi [ esp + 0x20 ]
mov edi eax
mov [ rw-data ] bl
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ edi + 0x40 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x20 ]
push eax
push ecx
call sub_46c43e
mov esi [ edi + 0x4 ]
mov esi [ esi + ebx * 4 + 0x4 ]
mov eax 0x1
mov ecx 0x200
lea edx [ esp + 0x20 ]
call sub_401980
add [ esp + 0x10 ] 0x18
inc ebx
cmp ebx [ edi + 0x1c ]
jl r-xdata
xor ebx ebx
sub_47e0f9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ esp + 0x8 ] eax
mov eax 0x1
push edi
xor edi edi
mov [ esp + 0x40 ] eax
mov [ esp + 0x30 ] eax
mov eax r--data
lea ebx [ esp + 0x38 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x38 ] edi
mov [ esp + 0x44 ] edi
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x34 ] edi
call sub_40e710
mov ebx [ ebp + 0xc ]
mov eax r--data
call sub_40e710
mov eax r--data
lea ebx [ esp + 0x28 ]
call sub_40e710
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push edx
lea esi [ esp + 0x1c ]
call sub_40ba10
mov ebx [ esp + 0xc ]
cmp ebx 0x2
jb r-xdata
lea eax [ esp + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
jmp r-xdata
cmp ebx 0x3
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
push 0x1
add eax esi
call sub_403c90
jmp r-xdata
call sub_40ba10
lea ecx [ esp + 0x38 ]
push ecx
lea esi [ esp + 0x1c ]
call sub_40ba10
push esi
mov esi [ esp + 0x14 ]
push esi
call sub_47aa6e
test al al
jne r-xdata
mov ebx edi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c650
lea ebx [ eax - 0x1 ]
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_408f40
lea ecx [ esp + 0x18 ]
call sub_410c60
lea esi [ esp + 0x38 ]
call sub_408f40
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push edi
push 0x1
add eax esi
call sub_403c90
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x48 ]
call sub_40e6a0
jmp r-xdata
lea ecx [ esp + 0x48 ]
call sub_40bc70
mov eax [ esi + 0x2fc ]
lea ecx [ esp + 0x48 ]
push ecx
push ebx
push eax
call sub_461b9a
test al al
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_402250
sub_47e250
push ebp
mov ebp esp
sub esp 0x50
push ebx
xor ebx ebx
push esi
mov eax 0x1
mov [ ebp - 0x8 ] ecx
push edi
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ebx
call sub_40bc70
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movzx eax [ edx + 0x8 ]
mov [ ebp - 0xc ] ebx
cmp ax 0x35
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
call sub_46fe32
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x47
jne r-xdata
cmp ax 0x47
je r-xdata
mov eax [ ecx ]
push eax
lea esi [ ebp - 0x3c ]
call sub_40e0a0
mov esi [ ebp + 0x8 ]
dec eax
mov [ edi ] eax
mov ebx r--data
lea eax [ ebp - 0x3c ]
call sub_402160
xor ebx ebx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
lea eax [ ebp + 0x14 ]
push eax
call sub_408e80
inc eax
mov [ edi ] eax
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
push edi
push esi
push ecx
call sub_475a67
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
cmp [ edx + 0x8 ] 0x47
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
call sub_432416
test al al
jne r-xdata
mov eax r--data
lea ebx [ ebp - 0x1c ]
call sub_40e710
mov ebx [ ebp + 0x10 ]
mov eax r--data
call sub_40e710
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_403c90
jmp r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
push r--data
push edx
call sub_45e538
sub esp 0x10
lea eax [ ebp - 0x1c ]
mov ebx esp
call sub_40b960
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x8 ]
push edi
push esi
call sub_47e250
lea ecx [ ebp - 0x3c ]
mov edi eax
call sub_402250
lea esi [ ebp - 0x4c ]
call sub_408f40
lea esi [ ebp - 0x1c ]
call sub_408f40
lea ecx [ ebp - 0x2c ]
call sub_410c60
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp [ rw-data ] bl
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_402250
lea esi [ ebp - 0x4c ]
call sub_408f40
lea esi [ ebp - 0x1c ]
call sub_408f40
lea ecx [ ebp - 0x2c ]
call sub_410c60
lea esi [ ebp + 0x14 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov edx [ ebp - 0x3c ]
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0xc ]
push edx
mov edx [ ebp - 0x8 ]
lea eax [ ebp + 0x14 ]
push eax
push ecx
push edx
call sub_47b291
test eax eax
je r-xdata
mov ebx [ ebp + 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_408e80
mov eax r--data
lea ebx [ ebp - 0x1c ]
call sub_40e710
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x480 ] bl
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_402250
lea esi [ ebp - 0x4c ]
call sub_408f40
lea esi [ ebp - 0x1c ]
call sub_408f40
lea ecx [ ebp - 0x2c ]
call sub_410c60
lea esi [ ebp + 0x14 ]
call sub_408f40
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ eax + 0x40 ] bl
je r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x35
jne r-xdata
mov ecx 0x48
mov edx [ edi ]
mov ebx [ esi + 0x4 ]
mov edx [ ebx + edx * 4 ]
cmp [ edx + 0x8 ] 0x35
je r-xdata
inc eax
mov [ edi ] eax
mov edx [ esi + 0x4 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] cx
je r-xdata
inc eax
mov [ edi ] eax
mov edx [ esi + 0x4 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x47
jne r-xdata
inc eax
mov [ edi ] eax
inc eax
mov [ edi ] eax
mov ebx [ esi + 0x4 ]
mov edx eax
mov edx [ ebx + edx * 4 ]
cmp [ edx + 0x8 ] cx
jne r-xdata
sub_47e4e3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
lea edx [ ebx + 0x488 ]
push edx
call sub_432416
test al al
je r-xdata
inc [ esi ]
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa8
push ebx
call sub_45e737
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edx
push edi
push ebx
mov eax esi
call sub_40c1f0
test eax eax
jne r-xdata
movsx edx [ eax + 0xa ]
push edx
push 0xa5
push ebx
call sub_45e737
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
lea eax [ ebx + 0x488 ]
push eax
call sub_432416
test al al
jne r-xdata
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa5
push ebx
call sub_45e737
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ebx
call sub_45e737
sub_47e5aa
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
call sub_408f40
lea eax [ esp + 0x13 ]
xor ebx ebx
push eax
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov [ esp + 0x18 ] ebx
call sub_46ff3a
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ esp + 0x18 ]
push edx
push eax
push ecx
push edi
call sub_47ddc2
test al al
je r-xdata
push rw-data
call sub_46feb1
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
push edx
push eax
push ebx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
call sub_402880
mov ecx [ esp + 0x14 ]
push ecx
call sub_4111dc
add esp 0x4
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
lea ecx [ esp + 0x18 ]
call sub_40edc0
push rw-data
call sub_46feb1
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp [ ebp + 0x20 ] bl
je r-xdata
mov edx [ ebp + 0x1c ]
push edx
push esi
lea eax [ esp + 0x20 ]
push eax
push edi
lea eax [ esp + 0x24 ]
mov [ esp + 0x24 ] 0x0
call sub_4096a0
test eax eax
je r-xdata
push edi
call sub_473a07
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
push ebx
push edi
call sub_473950
lea ecx [ esp + 0x18 ]
call sub_40edc0
push ebx
push edi
call sub_473950
sub_47e6ac
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x3c
push ebx
push esi
mov esi 0x1
push edi
cmp eax esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
xor edi edi
mov [ esp + 0x14 ] eax
mov [ rw-data ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
cmp [ rw-data ] bl
jbe r-xdata
push esi
lea ecx [ esp + 0x13 ]
push ecx
mov ecx [ rw-data ]
push ebx
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x38 ]
push eax
push ecx
push rw-data
mov [ esp + 0x2b ] bl
call sub_47e5aa
test al al
je r-xdata
cmp edi 0x3
ja r-xdata
lea ecx [ esp + 0x28 ]
call sub_410c60
lea esi [ esp + 0x18 ]
call sub_408f40
lea esi [ esp + 0x38 ]
call sub_408f40
cmp [ rw-data ] esi
je r-xdata
lea edx [ esp + 0x18 ]
push edx
lea esi [ esp + 0x2c ]
call sub_40ba10
movzx eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
jmp [ edi * 4 + jump_table_47e834 ]
mov edx [ esp + 0x14 ]
mov [ rw-data ] edx
cmp [ esp + 0xf ] bl
je r-xdata
mov esi 0x1
mov eax [ rw-data ]
lea esi [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
call sub_408f40
mov ecx [ esp + 0x10 ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_408f40
mov edx [ ebp + 0x8 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_408f40
mov eax [ ebp + 0xc ]
mov [ esp + 0x18 ] eax
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_408f40
mov ecx [ ebp + 0x10 ]
lea ecx [ esp + 0x38 ]
call sub_40c650
lea ecx [ esp + 0x28 ]
mov edi eax
call sub_410c60
lea esi [ esp + 0x18 ]
call sub_408f40
lea esi [ esp + 0x38 ]
call sub_408f40
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] 0x1
sub_47e844
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x4c
push ebx
push esi
mov esi 0x1
push edi
cmp eax esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x30 ]
mov [ rw-data ] ebx
mov edx [ ecx ]
push eax
push edx
push rw-data
call sub_465124
mov eax [ esp + 0x14 ]
cmp eax 0x4
jg r-xdata
xor edi edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
cmp eax ebx
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
lea ecx [ esp + 0x17 ]
push ecx
push ebx
lea edx [ esp + 0x44 ]
push edx
lea ecx [ esp + 0x58 ]
push ecx
push eax
push rw-data
mov [ esp + 0x2f ] bl
call sub_47e5aa
test al al
je r-xdata
lea esp [ esp ]
lea ecx [ esp + 0x48 ]
call sub_410c60
lea esi [ esp + 0x28 ]
call sub_408f40
lea esi [ esp + 0x38 ]
call sub_408f40
cmp [ rw-data ] esi
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
lea esi [ esp + 0x4c ]
call sub_40ba10
inc edi
cmp edi [ esp + 0x14 ]
jl r-xdata
jmp [ edi * 4 + jump_table_47ea58 ]
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x38 ]
push eax
mov [ rw-data ] edx
call sub_443833
test al al
je r-xdata
cmp edi 0x3
ja r-xdata
mov esi 0x1
lea esi [ esp + 0x28 ]
call sub_408f40
mov eax [ ebp + 0x10 ]
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_408f40
mov ecx [ ebp + 0x14 ]
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x28 ] ecx
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_408f40
mov edx [ ebp + 0x18 ]
mov [ esp + 0x28 ] edx
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_408f40
mov eax [ ebp + 0x1c ]
cmp [ esp + 0x13 ] bl
je r-xdata
push r--data
lea ecx [ esp + 0x3c ]
push ecx
call sub_45340c
push eax
call sub_4114ab
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] 0x7
lea ecx [ esp + 0x38 ]
call sub_40c650
mov edx [ ebp + 0xc ]
lea ecx [ esp + 0x48 ]
mov [ edx ] eax
call sub_410c60
lea esi [ esp + 0x28 ]
call sub_408f40
lea esi [ esp + 0x38 ]
call sub_408f40
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ esp + 0x48 ]
call sub_410c60
lea esi [ esp + 0x28 ]
call sub_408f40
lea esi [ esp + 0x38 ]
call sub_408f40
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_47eadf
push ecx
lea ecx [ ebp + 0x14 ]
mov [ esp ] 0x0
push ecx
call sub_442a55
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp ecx 0x111
ja r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
cmp [ edx ] ecx
je r-xdata
cmp ecx 0x211
ja r-xdata
je r-xdata
push esi
push ebx
push ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
mov eax [ eax ]
push edi
lea edx [ ebp + 0x14 ]
push edx
add eax 0x4
push eax
mov [ ebp + 0x14 ] 0x0
call sub_47e844
dec eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0x14 ]
push ecx
call sub_440847
jmp sub_47eadf
cmp ecx 0x233
ja r-xdata
je r-xdata
mov eax ebx
shr eax 0x10
push eax
movzx ecx bx
push esi
push ecx
push edi
call sub_46a07e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
lea edx [ ecx - 0x1 ]
cmp edx 0x83
ja r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
push rw-data
call sub_430c09
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x31a
jne r-xdata
je r-xdata
push esi
push ebx
push edi
push eax
call sub_440338
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
lea eax [ ecx - 0x112 ]
cmp eax 0xf3
ja r-xdata
push esi
push ebx
push ecx
push edi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
movzx edx [ edx + lookup_table_47eee3 ]
jmp [ edx * 4 + jump_table_47eeab ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
call sub_44786a
push ebx
push edi
call sub_470e96
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx ecx
sub edx 0x212
je r-xdata
movzx edx [ eax + lookup_table_47ef9b ]
jmp [ edx * 4 + jump_table_47ef67 ]
push esi
push ebx
push edi
call sub_47c81c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
call sub_47132f
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
movsx ecx ax
push ecx
movsx edx si
push edx
push ebx
push edi
call sub_4404e8
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax ebx
shr eax 0x10
push eax
movzx ecx bx
push esi
push ecx
push edi
call sub_44048e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
call sub_4403ae
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
call sub_447ba8
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push edi
call sub_447abc
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx esi
shr edx 0x10
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_42fe05
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push ebx
push edi
call sub_447b4e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx esi
shr edx 0x10
push edx
movzx eax si
push eax
push ebx
push edi
call sub_4479a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov ecx esi
shr ecx 0x10
push ecx
movzx edx si
push edx
push ebx
push edi
call sub_4478ac
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
push eax
call sub_44036a
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
push eax
call sub_440306
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub edx 0x20
jne r-xdata
push ebx
push edi
call sub_447b89
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x1
push esi
push ebx
push edi
call sub_45039b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x6
push esi
push ebx
push edi
call sub_45039b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x2
push esi
push ebx
push edi
call sub_45039b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
movsx ecx ax
push ecx
movsx edx si
push edx
push ebx
push edi
call sub_454d4a
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax ebx
shr eax 0x10
push 0x1
movsx ecx ax
push ecx
movzx edx bx
push edx
push esi
push edi
call sub_46a38e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax ebx
shr eax 0x10
push 0x0
movsx ecx ax
push ecx
movzx edx bx
push edx
push esi
push edi
call sub_46a38e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_471311
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_4712f3
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x0
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_4629b7
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x1
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_4629b7
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_42fda6
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
push eax
call sub_454cfc
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_47eef1
push es
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d07
or eax 0xd0d0d0d
or eax 0xd0d080d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d090d
or eax 0xd0d0a0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0d0d
or eax 0xd0d0b0d
or eax 0xd0d0d0d
or eax 0x47ed2c0c
add [ edx - 0x13 ] cl
inc edi
add [ edx - 0x13 ] ch
inc edi
add dh dh
in al dx
inc edi
add [ edx ] bl
in eax dx
inc edi
add bh ah
in al dx
inc edi
add [ eax ] cl
in eax dx
inc edi
add [ esi ] al
out dx al
inc edi
add dh al
in eax dx
inc edi
add [ edx - 0x19ffb813 ] cl
in eax dx
inc edi
add [ eax - 0x65ffb813 ] ch
0xc000047 0x201
sub_47efa8
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
add eax [ eax + 0xc060505 ]
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
pop es
or [ ecx ] cl
or al 0xa
or edx [ ebp + 0x5d ]
jmp r-xdata
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push edi
push rw-data
call sub_430c09
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x111
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push esi
push ebx
push ecx
push edi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp ecx 0x211
ja r-xdata
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x14 ] eax
jmp sub_47eadf
cmp [ rw-data ] ecx
je r-xdata
cmp ecx 0x233
ja r-xdata
je r-xdata
mov eax ebx
shr eax 0x10
push eax
movzx ecx bx
push esi
push ecx
push edi
call sub_46a07e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
lea edx [ ecx - 0x1 ]
cmp edx 0x83
ja r-xdata
cmp ecx 0x31a
jne r-xdata
je r-xdata
push esi
push ebx
push edi
push eax
call sub_440338
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
lea eax [ ecx - 0x112 ]
cmp eax 0xf3
ja r-xdata
movzx edx [ edx + lookup_table_47eee3 ]
jmp [ edx * 4 + jump_table_47eeab ]
push esi
push ebx
push edi
call sub_44786a
push ebx
push edi
call sub_470e96
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx ecx
sub edx 0x212
je r-xdata
movzx edx [ eax + lookup_table_47ef9b ]
jmp [ edx * 4 + jump_table_47ef67 ]
push esi
push ebx
push edi
call sub_47c81c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
call sub_47132f
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
movsx ecx ax
push ecx
movsx edx si
push edx
push ebx
push edi
call sub_4404e8
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax ebx
shr eax 0x10
push eax
movzx ecx bx
push esi
push ecx
push edi
call sub_44048e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
call sub_4403ae
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push edi
call sub_447ba8
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push edi
call sub_447abc
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx esi
shr edx 0x10
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_42fe05
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push ebx
push edi
call sub_447b4e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx esi
shr edx 0x10
push edx
movzx eax si
push eax
push ebx
push edi
call sub_4479a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov ecx esi
shr ecx 0x10
push ecx
movzx edx si
push edx
push ebx
push edi
call sub_4478ac
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
push eax
call sub_44036a
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
push eax
call sub_440306
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub edx 0x20
jne r-xdata
push ebx
push edi
call sub_447b89
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x1
push esi
push ebx
push edi
call sub_45039b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x6
push esi
push ebx
push edi
call sub_45039b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x2
push esi
push ebx
push edi
call sub_45039b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
movsx ecx ax
push ecx
movsx edx si
push edx
push ebx
push edi
call sub_454d4a
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax ebx
shr eax 0x10
push 0x1
movsx ecx ax
push ecx
movzx edx bx
push edx
push esi
push edi
call sub_46a38e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax ebx
shr eax 0x10
push 0x0
movsx ecx ax
push ecx
movzx edx bx
push edx
push esi
push edi
call sub_46a38e
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_471311
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_4712f3
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x0
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_4629b7
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push 0x1
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_4629b7
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax esi
shr eax 0x10
push ebx
movsx ecx ax
movsx edx si
push ecx
push edx
push edi
call sub_42fda6
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
push esi
push ebx
push edi
push eax
call sub_454cfc
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_47f096
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
mov esi ecx
mov eax [ esi + 0xf0 ]
cmp eax 0xf3c
jl r-xdata
push 0x0
inc eax
lea edx [ esp + 0xb ]
push edx
mov edx [ ebp + 0xc ]
mov [ esi + 0xf0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push 0x1
push edx
push eax
push ecx
mov [ esp + 0x1f ] 0x0
call sub_45340c
push eax
push esi
call sub_47e5aa
test al al
jne r-xdata
push 0xffffffff
push 0x9a
push esi
mov [ rw-data ] 0x0
call sub_45e737
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
dec [ esi + 0xf0 ]
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xdead
add eax esi
call sub_403c90
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xbeef
add eax esi
call sub_403cd0
sub_47f135
push ebp
mov ebp esp
sub esp 0x3c
push ebx
mov ebx [ ebp + 0xc ]
xor eax eax
push esi
mov ecx 0x1
push edi
mov edi [ ebp + 0x10 ]
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
call sub_408f40
mov eax 0x1
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x28 ] eax
call sub_408f40
mov esi 0xb
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] 0x0
mov [ ebp + 0x10 ] esi
call sub_40bc70
inc [ edi ]
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x33
jne r-xdata
cmp [ ecx ] 0x10
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x9d
push ecx
jmp r-xdata
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
push ecx
lea esi [ ebp - 0x38 ]
call sub_40e0a0
inc [ edi ]
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x41
jne r-xdata
inc eax
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
movsx ecx [ ecx + 0x8 ]
sub ecx 0x49
je r-xdata
call sub_45e737
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
lea esi [ ebp - 0x38 ]
call sub_40c2c0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea edx [ ebp - 0x18 ]
push edx
push edi
inc eax
push ebx
mov ecx esi
mov [ edi ] eax
call sub_40a780
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] esi
dec ecx
je r-xdata
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 - 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0xa3
push edx
mov eax [ ebp + 0x14 ]
mov ecx 0x100
lea edx [ ebp - 0x18 ]
call sub_401980
mov eax [ ebp + 0x10 ]
sub eax 0xb
je r-xdata
push 0xffffffff
push 0x6e
push esi
jmp r-xdata
movsx edx [ eax + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x9d
push eax
jmp r-xdata
mov eax [ eax ]
lea esi [ ebp - 0x28 ]
mov [ ebp + 0xc ] eax
call sub_408f40
mov ecx [ ebp + 0xc ]
inc [ edi ]
mov eax [ edi ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x28 ] ecx
mov [ ebp + 0x10 ] 0xc
jmp r-xdata
sub ecx 0x2
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea eax [ ebp - 0x28 ]
call sub_40b510
dec eax
je r-xdata
inc [ edi ]
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x5
jne r-xdata
lea esi [ ebp - 0x18 ]
call sub_408f40
mov eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp + 0x10 ] 0xd
jmp r-xdata
dec eax
mov [ edi ] eax
lea ecx [ ebp - 0x38 ]
call sub_402250
lea esi [ ebp - 0x18 ]
call sub_408f40
lea esi [ ebp - 0x28 ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ecx + 0x8 ] 0x40
jne r-xdata
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_452f37
jmp r-xdata
dec eax
jne r-xdata
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7f
push eax
jmp r-xdata
inc eax
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea esi [ ebp - 0x18 ]
call sub_40bb80
jmp r-xdata
sub_47f38e
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov esi 0x1
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] bl
mov [ ebp + 0xb ] bl
mov [ ebp - 0x18 ] esi
call sub_40db90
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] ebx
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
mov [ ebp - 0x7c ] 0x5
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
sub eax esi
push 0xffffffff
mov [ ebp - 0x78 ] eax
lea eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
mov ecx edi
call sub_40a780
test eax eax
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x6e
push edi
call sub_45e737
lea esi [ ebp - 0x4c ]
call sub_408f40
lea esi [ ebp - 0x3c ]
call sub_408f40
lea esi [ ebp - 0x2c ]
call sub_408f40
lea eax [ ebp - 0x7c ]
push eax
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x10 ] ebx
mov ecx [ ebp - 0x78 ]
push 0xffffffff
mov [ edi + 0xf4 ] ecx
push 0xa0
dec ecx
mov [ edi + 0xf4 ] ecx
mov [ ebp - 0xc ] ebx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
lea ecx [ eax + 0x1 ]
mov [ edx ] ecx
call sub_40f410
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ eax ]
add eax 0xffffffec
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_47f676 ]
inc [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
dec [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
mov esi [ edx ]
dec esi
mov [ ebp - 0x74 ] esi
cmp [ ebp - 0x6 ] bl
je r-xdata
cmp [ ebp - 0x5 ] bl
jne r-xdata
lea ebx [ edi + 0x16c ]
lea eax [ ebp - 0x7c ]
call sub_40ceb0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x1
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x6 ] 0x1
cmp [ eax + 0x8 ] bx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] esi
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
cmp [ ebp + 0xb ] bl
jne r-xdata
cmp [ eax ] 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
lea ebx [ ebx ]
mov [ ebp - 0xc ] 0x2
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x8 ] 0x7f
mov [ ebp + 0xb ] 0x1
jne r-xdata
lea esi [ ebp - 0x4c ]
call sub_408f40
lea esi [ ebp - 0x3c ]
call sub_408f40
lea esi [ ebp - 0x2c ]
call sub_408f40
lea ecx [ ebp - 0x7c ]
push ecx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] bx
jne r-xdata
movsx edx [ ecx + 0xa ]
push edx
push 0x72
push edi
call sub_45e737
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x3c ]
call sub_40cb00
test al al
jne r-xdata
cmp [ eax ] 0xf
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp + 0xb ] 0x1
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0xc ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
inc [ ebp - 0xc ]
push 0xffffffff
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
push esi
mov ecx edi
call sub_40a780
test eax eax
jne r-xdata
cmp [ edx + 0x8 ] 0x7f
je r-xdata
inc eax
mov [ ebp - 0xc ] eax
jmp r-xdata
lea esi [ ebp - 0x4c ]
call sub_408f40
lea esi [ ebp - 0x3c ]
call sub_408f40
lea esi [ ebp - 0x2c ]
call sub_408f40
lea edx [ ebp - 0x7c ]
push edx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x3c ]
push edx
lea eax [ ebp - 0x2c ]
push eax
call sub_467c5c
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
jmp r-xdata
push 0xffffffff
lea edx [ ebp - 0x3c ]
push edx
lea eax [ ebp - 0xc ]
push eax
push esi
mov ecx edi
call sub_40a780
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_467c75
add esp 0x8
test al al
je r-xdata
push edi
call sub_45e737
sub_47f68a
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x3 ] 0x0
mov [ ebp - 0x2 ] 0x0
mov [ ebp - 0x1 ] 0x0
mov [ ebp + 0xf ] 0x0
mov [ ebp - 0x10 ] 0x1
call sub_40db90
mov ebx [ edi ]
dec ebx
mov [ ebp - 0x40 ] 0x4
mov [ ebp - 0x3c ] ebx
xor edx edx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0xffffffff
push 0xa0
push eax
mov [ eax + 0xf4 ] ebx
call sub_45e737
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ eax + 0xf4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0x16c
lea eax [ ebp - 0x40 ]
call sub_40ceb0
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov eax [ edi ]
lea ecx [ eax + 0x1 ]
mov [ edi ] ecx
call sub_40f410
mov esi eax
test esi esi
je r-xdata
mov eax [ eax ]
add eax 0xffffffec
cmp eax 0x4
ja r-xdata
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x40 ]
push eax
mov [ edi ] edx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x40 ]
push eax
mov [ edi ] ecx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_47f84a ]
inc edx
jmp r-xdata
test edx edx
jne r-xdata
dec edx
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebp - 0xc ] edx
lea ecx [ ecx ]
mov eax [ edi ]
dec eax
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp [ ebp - 0x2 ] dl
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x3 ] 0x1
cmp [ eax + 0x8 ] dx
jne r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp + 0xf ]
push ecx
push edx
lea ecx [ ebp - 0x8 ]
mov edx esi
call sub_40cc70
test eax eax
jne r-xdata
cmp [ eax ] 0x6
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax 0x2
mov [ ebp + 0xf ] 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x72
push edx
call sub_45e737
lea eax [ ebp - 0x40 ]
push eax
call sub_452670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xf ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov eax [ edi ]
mov [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_47f85e
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ecx + 0x4 ]
push edi
mov edi 0x7f
xor ebx ebx
cmp [ edx + 0x8 ] di
jne r-xdata
push 0xffffffff
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
call sub_40a780
test eax eax
jne r-xdata
mov [ ebp + 0xc ] eax
jmp r-xdata
lea esi [ ebp - 0x1c ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] di
je r-xdata
xor esi esi
cmp [ ebp + 0xc ] ebx
jle r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40c650
lea esi [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
call sub_408f40
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x72
push edx
call sub_45e737
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0x8 ]
add edi 0x16c
mov eax [ ebp + 0x8 ]
push 0xffffffff
push 0x96
push eax
call sub_45e737
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax edi
call sub_40f4d0
cmp [ eax ] 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax ]
mov eax edi
call sub_40f4d0
cmp ebx [ eax + 0x4 ]
jle r-xdata
mov eax edi
call sub_40f4d0
cmp [ eax ] 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x8f
push ecx
call sub_45e737
mov eax edi
call sub_40f4d0
cmp ebx [ eax + 0x8 ]
jge r-xdata
mov eax edi
call sub_40f4d0
cmp [ eax ] 0x3
jne r-xdata
mov eax edi
inc esi
call sub_40f4d0
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_40c790
cmp esi [ ebp + 0xc ]
jl r-xdata
push edi
call sub_430e6a
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_47f9a6
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax 0x1
mov [ ebp + 0x8 ] eax
mov edx [ ecx + 0x4 ]
push edi
mov edi 0x7f
cmp [ edx + 0x8 ] di
jne r-xdata
xor ecx ecx
push 0xffffffff
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
push esi
mov ecx ebx
call sub_40a780
test eax eax
jne r-xdata
mov [ ebp + 0xc ] eax
jmp r-xdata
lea esi [ ebp - 0x14 ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] di
je r-xdata
xor esi esi
cmp [ ebp + 0xc ] esi
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40c650
lea esi [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
call sub_408f40
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push ebx
call sub_45e737
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edi [ ebx + 0x16c ]
jmp r-xdata
push edi
call sub_430e6a
test al al
jne r-xdata
push 0xffffffff
push 0x96
push ebx
call sub_45e737
mov eax edi
call sub_40f4d0
cmp [ eax ] 0x1
je r-xdata
mov eax edi
inc esi
call sub_40f4d0
mov edx [ eax + 0x8 ]
mov eax [ ebp + 0x10 ]
inc edx
mov [ eax ] edx
mov eax edi
call sub_40f4d0
cmp [ eax ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax edi
call sub_40f4d0
cmp [ eax ] 0x3
jne r-xdata
call sub_40c790
cmp esi [ ebp + 0xc ]
jl r-xdata
sub_47faae
push ebp
mov ebp esp
sub esp 0x4c
xor eax eax
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] eax
mov ecx 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push eax
lea ebx [ ebp - 0x18 ]
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp + 0x10 ] r--data
call sub_408e80
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 + 0x4 ]
cmp [ ecx + 0x8 ] 0x47
mov ebx [ ebp + 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
call sub_46fe32
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x47
jne r-xdata
inc eax
mov [ edi ] eax
lea edx [ ebp - 0x38 ]
push edx
push edi
push esi
push ebx
call sub_475a67
test eax eax
jne r-xdata
mov eax [ ecx ]
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
dec eax
mov [ ebp + 0x10 ] r--data
mov [ edi ] eax
jmp r-xdata
inc [ edi ]
push 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
push edi
push esi
mov ecx ebx
call sub_40a780
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
push ecx
push ebx
call sub_47b291
test eax eax
jne r-xdata
lea esi [ ebp - 0x28 ]
call sub_408f40
lea esi [ ebp - 0x48 ]
call sub_408f40
lea esi [ ebp - 0x18 ]
call sub_408f40
lea ecx [ ebp - 0x38 ]
call sub_410c60
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ecx [ edi ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_408f40
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x18 ] 0x0
call sub_432416
test al al
je r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
lea esi [ ebp - 0x38 ]
call sub_40ba10
mov eax [ ebp + 0x10 ]
push esi
push eax
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
call sub_47b2f4
lea esi [ ebp - 0x28 ]
mov edi eax
call sub_408f40
lea esi [ ebp - 0x48 ]
call sub_408f40
lea esi [ ebp - 0x18 ]
call sub_408f40
lea ecx [ ebp - 0x38 ]
call sub_410c60
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ebx
call sub_45e737
jmp r-xdata
lea esi [ ebp - 0x28 ]
call sub_408f40
lea esi [ ebp - 0x48 ]
call sub_408f40
lea esi [ ebp - 0x18 ]
call sub_408f40
lea ecx [ ebp - 0x38 ]
call sub_410c60
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edx
mov ebx esi
call sub_408e80
lea esi [ ebp - 0x28 ]
call sub_408f40
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ edi ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x28 ] 0x0
mov edx [ eax + ecx * 4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x7f
je r-xdata
cmp ax 0x41
jne r-xdata
cmp ax 0x35
je r-xdata
dec ecx
mov [ edi ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ edi ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x48
je r-xdata
mov edx [ ebp + 0x8 ]
push r--data
push edx
call sub_45e538
sub_47fcff
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
inc [ esi ]
mov edx [ esi ]
xor eax eax
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] eax
cmp edx [ ebx + 0x8 ]
jae r-xdata
lea esi [ ebp - 0x1c ]
call sub_408f40
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x10 ]
push 0x0
push eax
call sub_4323e1
mov edi [ ebp + 0x18 ]
mov ecx [ ebx + 0x4 ]
cmp edi eax
jg r-xdata
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp - 0x8 ]
push eax
push 0x7d
push ecx
jmp r-xdata
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
mov [ ebp - 0xc ] eax
jne r-xdata
call sub_45e737
mov ecx [ ebp + 0x10 ]
push 0x0
push ecx
call sub_4323e1
cmp edi eax
jl r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
lea edx [ edi + 0x1 ]
push edx
push eax
mov [ eax + edi * 4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_47fcff
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x7e
jmp r-xdata
mov edx [ ebp - 0xc ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x8 ]
push esi
push ebx
mov [ ebp - 0xc ] eax
call sub_40a780
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_45e951
xor ebx ebx
test edi edi
jle r-xdata
mov edx [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
cmp [ ecx + 0x8 ] 0x40
jne r-xdata
mov edi [ ebp + 0x10 ]
push 0x0
push 0x0
call sub_40cf00
add esp 0x8
test eax eax
je r-xdata
nop
mov ecx [ ebx + 0x4 ]
mov eax edx
mov ecx [ ecx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax + edi * 4 - 0x4 ]
inc [ esi ]
mov edx [ esi ]
cmp edx [ ebx + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push ecx
push 0x7a
push edx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
mov ebx eax
call sub_408e80
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov esi [ eax + ebx * 4 ]
mov edx [ ebp + 0x10 ]
call sub_40cfc0
inc ebx
cmp ebx edi
jl r-xdata
movsx edx [ ecx + 0xa ]
push edx
push 0x6b
inc eax
mov [ esi ] eax
lea esi [ ebp - 0x1c ]
call sub_408f40
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea esi [ ebp - 0x1c ]
call sub_408f40
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_47fea2
push ebp
mov ebp esp
sub esp 0x1ec
push ebx
push esi
xor esi esi
push edi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x38 ] esi
call sub_40bc70
lea ecx [ ebp - 0x30 ]
call sub_40bc70
lea ecx [ ebp - 0x48 ]
call sub_40bc70
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov edx 0x1
add [ edi ] edx
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] esi
mov ecx [ ecx + eax * 4 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4 ] esi
cmp [ ecx + 0x8 ] si
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ edi ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x33
jne r-xdata
mov esi [ ecx ]
sub esi 0x1c
je r-xdata
mov edx [ edi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
mov ecx [ edi ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xd ] 0x1
call sub_40e0a0
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x68 ]
push edx
call sub_40c2c0
mov eax [ ebp - 0x68 ]
test eax eax
jne r-xdata
mov [ ebp + 0x14 ] edx
sub esi edx
jne r-xdata
call sub_45e737
cmp [ ebp - 0x38 ] 0x400
jne r-xdata
push 0xa
push 0x8
lea eax [ ebp - 0x1e8 ]
push eax
call sub_44387b
push eax
call sub_41562e
add esp 0x10
lea ebx [ ebp - 0x1e8 ]
lea eax [ ebp - 0x48 ]
call sub_402160
push 0x2e
lea eax [ ebp - 0x48 ]
call sub_403020
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ edi ]
mov ecx [ eax + ecx * 4 ]
mov edx [ ecx ]
push edx
lea eax [ ebp - 0x48 ]
call sub_40bd50
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx 0x10
lea esi [ ebp - 0x48 ]
call sub_40c2c0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7f
push eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x2
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x9b
push eax
call sub_432508
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call sub_430e6a
test al al
je r-xdata
mov eax r--data
lea ebx [ ebp - 0x20 ]
call sub_40e710
mov ecx [ ebp - 0x38 ]
mov eax 0x10
mov edx ebx
call sub_401980
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx 0x10
call sub_40c2c0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc eax
mov [ edi ] eax
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x9b
push edx
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x1
push 0x400
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x4 ]
push 0x2
push 0x400
push ecx
lea edx [ ebp - 0x30 ]
push edx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ edi ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
mov [ ebp - 0xd ] 0x0
mov esi [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + esi * 4 ]
cmp [ edx + 0x8 ] 0x41
jne r-xdata
xor esi esi
call sub_45f508
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x68 ]
push eax
lea esi [ ebp - 0x30 ]
call sub_40c2c0
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
movzx ecx [ ecx + 0x8 ]
cmp cx 0x7f
je r-xdata
inc esi
cmp [ ebp - 0xd ] 0x0
mov [ edi ] esi
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + esi * 4 ]
movsx edx [ eax + 0xa ]
mov [ ebp - 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x7b
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40c650
test eax eax
jle r-xdata
lea esi [ ebp - 0x20 ]
call sub_408f40
lea ecx [ ebp - 0x48 ]
call sub_402250
lea ecx [ ebp - 0x30 ]
call sub_402250
lea ecx [ ebp - 0x60 ]
call sub_402250
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp cx 0x40
jne r-xdata
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
xor edx edx
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7b
push eax
jmp r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7f
push edx
jmp r-xdata
inc eax
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ edi ]
mov ecx [ eax + edx * 4 ]
cmp [ ecx + 0x8 ] 0x33
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4429ef
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4429ef
test al al
je r-xdata
mov eax [ ecx + esi * 4 ]
movsx eax [ eax + 0x8 ]
add eax 0xffffffb9
cmp eax 0x8
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7b
push edx
jmp r-xdata
inc eax
lea ecx [ ebp - 0x20 ]
mov [ edi ] eax
call sub_40c650
mov edx [ edi ]
mov [ ebp + esi * 4 - 0x168 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
inc esi
cmp [ ecx + 0x8 ] 0x4e
mov [ ebp - 0x4c ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x7e
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x34 ] esi
cmp esi [ ebx + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7c
push edx
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x34 ] esi
cmp esi [ ebx + 0x8 ]
jae r-xdata
inc esi
mov [ edi ] esi
test edx edx
jne r-xdata
movzx ecx [ eax + lookup_table_4805b6 ]
jmp [ ecx * 4 + jump_table_4805aa ]
inc [ edi ]
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call sub_40a780
test eax eax
jne r-xdata
cmp esi 0x1
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
push edi
push ebx
call sub_40a780
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x4c ]
test ecx ecx
jle r-xdata
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + esi * 4 ]
cmp [ ecx + 0x8 ] 0x40
je r-xdata
inc edx
jmp r-xdata
dec edx
mov edx [ ebp - 0x4 ]
push edx
call sub_4429ef
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x6e
push eax
jmp r-xdata
mov ebx [ ebp - 0x4 ]
lea ecx [ ebp - 0x20 ]
push ecx
call sub_408e80
mov ebx [ ebp + 0xc ]
cmp ax 0x4e
je r-xdata
mov ecx [ ebp - 0x4 ]
push 0x1
lea eax [ ebp - 0x168 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_47fcff
test al al
je r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x168 ]
[ edi ]
mov edi [ ebp + 0x10 ]
mov eax [ ebp - 0x64 ]
cmp ax 0x4e
je r-xdata
mov edx [ ebp - 0x50 ]
mov esi [ edx ]
lea eax [ ebp - 0x30 ]
call sub_40dbb0
test al al
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_45e951
mov [ ebp - 0xc ] 0x0
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
push 0x0
push eax
call sub_4323e1
cmp eax esi
jne r-xdata
inc [ ebp - 0xc ]
cmp ax 0x47
je r-xdata
jmp r-xdata
mov ecx 0x1
add [ ebp - 0xc ] ecx
cmp ax 0x47
je r-xdata
mov eax [ ebp - 0x50 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0xb1
push edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
push 0x0
call sub_40e830
add esp 0x4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp + eax * 4 - 0x168 ]
mov edx [ ebp - 0x4 ]
call sub_40cfc0
test al al
je r-xdata
xor edx edx
test esi esi
jle r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ecx ]
mov [ ebp - 0x64 ] eax
movzx eax [ eax + 0x8 ]
cmp ax 0x7f
je r-xdata
cmp ax 0x4f
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x50 ] eax
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x64 ] eax
cmp ax 0x33
jne r-xdata
cmp ax 0x4f
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x82
push eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x7d
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4c ]
jl r-xdata
lea esp [ esp ]
dec [ ebp - 0xc ]
jmp r-xdata
cmp ax 0x48
je r-xdata
mov ecx 0x1
sub [ ebp - 0xc ] ecx
jmp r-xdata
cmp ax 0x48
je r-xdata
cmp edx [ ebp - 0x4c ]
jge r-xdata
mov edx esi
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x34 ]
add [ ebp - 0x50 ] 0x4
inc eax
mov [ ebp - 0x34 ] eax
cmp eax [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
mov eax [ ebp - 0x34 ]
add [ ebp - 0x8 ] 0x4
add eax ecx
mov [ ebp - 0x34 ] eax
cmp eax [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
lea edx [ ebp - 0x20 ]
push edx
call sub_45e951
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea esi [ edx + 0x1 ]
push esi
push ecx
call sub_4323e1
cmp eax [ ebp + edx * 4 - 0x168 ]
jne r-xdata
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp ax 0x7f
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esi [ ebp + ebx * 4 - 0x168 ]
lea edx [ ebp - 0x20 ]
call sub_40cfc0
test al al
je r-xdata
mov edx [ ebp - 0x64 ]
mov esi [ edx ]
lea eax [ ebp - 0x30 ]
call sub_40dbb0
test al al
je r-xdata
mov ecx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7d
push eax
jmp r-xdata
inc ebx
cmp ebx [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0x64 ]
movsx eax [ edx + 0xa ]
push eax
push 0xb1
jmp r-xdata
push 0x0
mov eax edx
call sub_40e830
add esp 0x4
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x82
push edx
jmp r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_47925f
lea ecx [ ebp - 0x20 ]
push ecx
call sub_408e80
mov ebx [ ebp + 0xc ]
jmp r-xdata
sub_4805bf
push ebp
mov ebp esp
sub esp 0x14c
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor ecx ecx
push edi
mov edi [ ebp + 0x10 ]
inc [ edi ]
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x44 ] ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_40bc70
mov eax [ ebx + 0x4 ]
mov edx [ edi ]
mov ecx [ eax + edx * 4 ]
cmp [ ecx + 0x8 ] 0x33
jne r-xdata
cmp [ eax ] 0x2a
jne r-xdata
mov edx [ edi ]
mov edx [ edi ]
mov eax [ eax + edx * 4 ]
mov ecx [ eax ]
push ecx
lea esi [ ebp - 0x30 ]
call sub_40e0a0
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x44 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_40c2c0
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push eax
push edi
push ebx
push ecx
call sub_47f135
lea esi [ ebp - 0x20 ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
call sub_45e737
test [ ebp - 0x44 ] 0x100
je r-xdata
mov eax r--data
lea ebx [ ebp - 0x20 ]
call sub_40e710
mov ebx [ ebp + 0x14 ]
mov eax ebx
mov ecx 0x100
lea edx [ ebp - 0x20 ]
call sub_401980
lea ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov ecx ebx
call sub_40c2c0
inc [ edi ]
mov ebx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa4
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0xae
push edx
jmp r-xdata
mov esi [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + esi * 4 ]
cmp [ edx + 0x8 ] 0x41
jne r-xdata
xor esi esi
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x80
push edx
jmp r-xdata
mov edx [ ebp - 0xc ]
inc esi
mov [ edi ] esi
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x4e
movsx ecx [ eax + 0xa ]
mov [ ebp - 0x8 ] ecx
push edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7b
push edx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40c650
test eax eax
jle r-xdata
call sub_4429ef
test al al
jne r-xdata
call sub_4429ef
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x7b
jmp r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7e
push eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x38 ] esi
cmp esi [ ebx + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x7c
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x38 ] esi
cmp esi [ ebx + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7b
push eax
jmp r-xdata
inc eax
lea ecx [ ebp - 0x20 ]
mov [ edi ] eax
call sub_40c650
mov edx [ edi ]
mov [ ebp + esi * 4 - 0x148 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
inc esi
cmp [ ecx + 0x8 ] 0x4e
mov [ ebp - 0x3c ] esi
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
push edi
push ebx
mov ecx esi
call sub_40a780
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ eax + esi * 4 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x3c ]
test ecx ecx
jle r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ eax + esi * 4 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ecx ]
inc [ edi ]
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call sub_40a780
test eax eax
jne r-xdata
cmp esi 0x1
jl r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
push 0x6e
push esi
jmp r-xdata
mov ebx [ ebp - 0xc ]
lea ecx [ ebp - 0x20 ]
push ecx
call sub_408e80
mov ebx [ ebp + 0xc ]
cmp ax 0x4e
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
lea eax [ ebp - 0x148 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_47fcff
test al al
je r-xdata
xor eax eax
lea edi [ ebp - 0x148 ]
[ edi ]
mov edi [ ebp + 0x10 ]
cmp ax 0x4e
je r-xdata
mov esi [ ecx ]
lea eax [ ebp - 0x30 ]
call sub_40dbb0
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push 0x7e
push edx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_45e951
mov [ ebp - 0x4 ] 0x0
test esi esi
jle r-xdata
lea ecx [ ebp - 0x30 ]
call sub_402250
lea esi [ ebp - 0x20 ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp cx 0x40
jne r-xdata
inc [ ebp - 0x4 ]
cmp ax 0x47
je r-xdata
jmp r-xdata
inc [ ebp - 0x4 ]
cmp ax 0x47
je r-xdata
mov edx [ ebp - 0x40 ]
movsx eax [ edx + 0xa ]
push eax
push 0xb1
jmp r-xdata
mov esi [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
push 0x0
call sub_40e830
add esp 0x4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + eax * 4 - 0x148 ]
mov edx [ ebp - 0xc ]
call sub_40cfc0
test al al
je r-xdata
mov edx eax
jmp r-xdata
inc eax
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ edi ]
mov ecx [ eax + edx * 4 ]
cmp [ ecx + 0x8 ] 0x33
mov ebx [ ebp + 0xc ]
je r-xdata
mov edx [ ebp - 0x34 ]
mov ecx [ edx ]
movzx eax [ ecx + 0x8 ]
mov [ ebp - 0x40 ] ecx
cmp ax 0x7f
je r-xdata
cmp ax 0x4f
je r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
movzx ecx [ ecx + 0x8 ]
cmp cx 0x7f
je r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
movzx eax [ ecx + 0x8 ]
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x34 ] eax
cmp ax 0x33
jne r-xdata
cmp ax 0x4f
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x82
push eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x7d
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7f
push eax
jmp r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp ax 0x48
je r-xdata
mov eax 0x1
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ax 0x48
je r-xdata
add [ ebp - 0x34 ] 0x4
inc esi
mov [ ebp - 0x38 ] esi
cmp esi [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
add [ ebp - 0x8 ] 0x4
add esi eax
mov [ ebp - 0x38 ] esi
cmp esi [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
cmp ax 0x33
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp ax 0x7f
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ecx ]
lea eax [ ebp - 0x30 ]
call sub_40dbb0
test al al
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x40 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb1
push eax
jmp r-xdata
mov esi [ ebp - 0x38 ]
jmp r-xdata
mov eax 0x1
sub_480a8d
push ebp
mov ebp esp
sub esp 0x164
mov edx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
mov al dl
push esi
xor ecx ecx
shr al 0x2
mov esi 0x1
and al 0x1
push edi
mov edi [ ebp + 0x10 ]
add [ edi ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1 ] al
mov eax [ edi ]
mov [ ebp - 0x30 ] esi
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x14 ] ecx
mov eax [ esi + eax * 4 ]
and edx 0x3
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp + 0x14 ] edx
cmp [ eax + 0x8 ] cx
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40bc70
mov eax [ ebx + 0x4 ]
mov ecx [ edi ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x33
jne r-xdata
mov eax [ eax ]
sub eax 0x1e
je r-xdata
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x7f
push ecx
jmp r-xdata
mov ecx [ edi ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
lea esi [ ebp - 0x48 ]
call sub_40e0a0
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x10 ]
push edx
call sub_40c2c0
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push edx
mov edx [ ebp + 0x8 ]
push edi
push ebx
push edx
call sub_4805bf
jmp r-xdata
dec eax
je r-xdata
call sub_45e737
mov eax [ ebp - 0x24 ]
test eax 0x100
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea esi [ ebp - 0x38 ]
call sub_408f40
lea esi [ ebp - 0x20 ]
call sub_408f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
push edx
push edi
push ebx
push ecx
call sub_47fea2
jmp r-xdata
sub eax 0xb
jne r-xdata
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xae
jmp r-xdata
test eax 0x400
jne r-xdata
mov edx [ edi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
mov eax r--data
lea ebx [ ebp - 0x20 ]
call sub_40e710
mov ebx [ ebp + 0x14 ]
mov eax ebx
xor ecx ecx
lea edx [ ebp - 0x20 ]
call sub_401980
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx ebx
call sub_40c2c0
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push edx
push edi
push ebx
push eax
call sub_47f135
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x9c
push ecx
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp + 0x14 ]
test al 0x1
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x5c ]
push edx
mov ecx 0x1
lea esi [ ebp - 0x48 ]
call sub_40c2c0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push eax
lea edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x48 ]
push eax
call sub_45377f
test al al
je r-xdata
inc [ edi ]
mov ebx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4429ef
test al al
je r-xdata
test [ ebp - 0x24 ] 0x200
jne r-xdata
test [ ebp - 0x24 ] 0x200
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x71
push ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0xaf
push ecx
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ edi ]
mov edx [ ecx + eax * 4 ]
movzx ecx [ edx + 0x8 ]
cmp cx 0x7f
je r-xdata
inc eax
cmp [ ebp - 0x2 ] 0x0
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov [ ebp - 0x8 ] eax
je r-xdata
mov [ ebp - 0x2 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
lea ebx [ ebp - 0x38 ]
call sub_408e80
jmp r-xdata
lea ecx [ ebp - 0x48 ]
call sub_402250
cmp cx 0x40
jne r-xdata
mov esi [ edi ]
mov eax [ ebx + 0x4 ]
mov edx [ eax + esi * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov eax r--data
lea ebx [ ebp - 0x20 ]
call sub_40e710
push ebx
mov ebx [ ebp - 0x10 ]
call sub_408e80
mov ebx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7e
push eax
jmp r-xdata
inc [ edi ]
mov edx [ esi + 0x4 ]
mov eax [ edi ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push 0xffffffff
lea edx [ ebp - 0x20 ]
push edx
push edi
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
push esi
call sub_40a780
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ edi ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
xor ebx ebx
cmp [ eax + 0x8 ] 0x4e
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0x7f
inc eax
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ edi ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x33
mov ebx [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4429ef
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x7b
push eax
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40c650
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x7e
push ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xff ] al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0xac
push eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4429ef
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
push 0x7b
jmp r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea edx [ ebp - 0x20 ]
push edx
push edi
push ebx
call sub_40a780
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x50 ] esi
cmp esi [ ebx + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
push 0x7c
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xff ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x7b
push ecx
jmp r-xdata
cmp ebx 0x40
jg r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edx
push 0x6e
push eax
jmp r-xdata
mov ebx [ ebp - 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_408e80
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov [ ebp - 0x4c ] edx
mov ecx [ ebp - 0x58 ]
test ecx ecx
jle r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x50 ] esi
cmp esi [ ebx + 0x8 ]
jae r-xdata
inc eax
lea ecx [ ebp - 0x20 ]
mov [ edi ] eax
call sub_40c650
mov ecx [ esi + 0x4 ]
mov [ ebp + ebx * 4 - 0x160 ] eax
mov eax [ edi ]
mov edx [ ecx + eax * 4 ]
inc ebx
cmp [ edx + 0x8 ] 0x4e
mov [ ebp - 0x58 ] ebx
je r-xdata
mov eax [ ebp - 0x60 ]
cmp ax 0x4e
je r-xdata
mov ecx [ ebp - 0x54 ]
mov esi [ ecx ]
lea eax [ ebp - 0x48 ]
call sub_40dbb0
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
push 0x1
lea edx [ ebp - 0x160 ]
push edx
push eax
push edi
push ebx
call sub_47fcff
test al al
je r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x160 ]
[ edi ]
mov edi [ ebp + 0x10 ]
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov [ ebp - 0x8 ] edx
cmp ebx 0x1
jl r-xdata
mov ecx 0x1
add [ ebp - 0xc ] ecx
cmp ax 0x47
je r-xdata
mov edx [ ebp - 0x54 ]
movsx eax [ edx + 0xa ]
mov ecx [ ebp + 0x8 ]
push eax
push 0xb1
push ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp ax 0x4e
je r-xdata
mov ecx [ ebp - 0x4c ]
mov esi [ ecx ]
lea eax [ ebp - 0x48 ]
call sub_40dbb0
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_45e951
mov [ ebp - 0xc ] 0x0
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ eax ]
mov [ ebp - 0x54 ] eax
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp ax 0x33
jne r-xdata
cmp ax 0x4f
je r-xdata
mov ecx 0x1
add [ ebp - 0xc ] ecx
cmp ax 0x47
je r-xdata
mov eax [ ebp - 0x4c ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xb1
jmp r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
mov eax esi
call sub_40e830
add esp 0x4
test al al
je r-xdata
lea esp [ esp ]
mov ecx 0x1
sub [ ebp - 0xc ] ecx
jmp r-xdata
cmp ax 0x48
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4c ] eax
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x54 ] eax
cmp ax 0x33
jne r-xdata
cmp ax 0x4f
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x82
push ecx
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
push 0x7d
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x50 ]
add [ ebp - 0x4c ] 0x4
add eax ecx
mov [ ebp - 0x50 ] eax
cmp eax [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
mov ecx 0x1
sub [ ebp - 0xc ] ecx
jmp r-xdata
cmp ax 0x48
je r-xdata
mov ebx [ ebp + 0xc ]
push 0x0
lea edx [ ebp - 0x38 ]
push edx
call sub_4323e1
test eax eax
jle r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ ebp + ecx * 4 - 0x160 ]
mov edx [ ebp - 0x10 ]
call sub_40cfc0
test al al
je r-xdata
cmp ax 0x7f
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
add [ ebp - 0x8 ] 0x4
add eax ecx
mov [ ebp - 0x50 ] eax
cmp eax [ ebx + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
push edx
push esi
call sub_47925f
mov ecx 0x1
jmp r-xdata
cmp ax 0x7f
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx 0x1
jmp r-xdata
sub_481167
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push ebx
mov esi ecx
mov ecx [ eax + 0x8 ]
push ecx
push eax
push 0x1
push esi
call sub_457c53
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_403cc0
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_4091e0
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_403cc0
push eax
call sub_408e80
sub_4811c5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push ebx
push eax
push 0x1
mov esi ecx
push 0x1
push esi
call sub_4649a3
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_403cc0
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_4091e0
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
call sub_403cc0
push eax
call sub_408e80
sub_481221
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push ebx
push eax
push 0x0
mov esi ecx
push 0x1
push esi
call sub_4649a3
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_403cc0
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_4091e0
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
call sub_403cc0
push eax
call sub_408e80
sub_48127d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
push ecx
push eax
push edi
call sub_457ee2
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x438 ]
lea ecx [ ebp + 0xb ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
push eax
mov [ ebp + 0xb ] 0x0
call sub_443d19
add esp 0xc
test al al
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xcccccccc
add eax edi
call sub_403cd0
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
push ebx
push ecx
push 0x0
push 0x400
call [ OpenProcess@IAT ]
mov edx [ edi ]
mov [ edi + 0x454 ] eax
mov ecx [ edx + 0x4 ]
add ecx edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
call sub_40d410
push 0x0
mov ecx edi
mov [ edi + 0xf8 ] 0x9
call sub_4091e0
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + edi + 0x4 ]
call sub_403cc0
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_48136b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
push ecx
push eax
push edi
call sub_457ee2
test al al
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
push ebx
add ecx edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
call sub_40d410
push 0x0
mov ecx edi
mov [ edi + 0xf8 ] 0x8
call sub_4091e0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + edi + 0x4 ]
call sub_403cc0
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop ebx
xor eax eax
pop edi
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
call sub_408f40
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_403c90
pop esi
xor eax eax
pop edi
pop ebp
retn 0x8
sub_4813fa
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
mov ecx [ eax + 0x4 ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov eax [ ecx ]
push edx
push eax
mov [ rw-data ] 0x1
call sub_45340c
push eax
push ebx
call sub_402880
mov edi [ ebp + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push ebx
push 0x1
add eax esi
mov [ rw-data ] bl
call sub_403c90
mov eax r--data
mov ebx edi
call sub_40e710
lea ecx [ esp + 0x10 ]
call sub_40edc0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
push 0xffffffff
push edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
mov [ esp + 0x1c ] ebx
call sub_40a780
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
mov [ rw-data ] bl
call sub_40edc0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4814b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_474476
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
call sub_40d410
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x4
call sub_4091e0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_403cc0
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_481511
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_474476
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
call sub_40d410
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x6
call sub_4091e0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_403cc0
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_48156a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_474476
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
call sub_40d410
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x5
call sub_4091e0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_403cc0
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4815c3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_474476
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
call sub_40d410
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x3
call sub_4091e0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_403cc0
mov ebx [ ebp + 0xc ]
push eax
call sub_408e80
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4013a0
push 0x4
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
retn
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
retn
sub_401954
pi2fd mmx1 [ edi ]
push cs
int3
sub_401960
lea ecx [ esi + 0x24 ]
call sub_402250
lea ecx [ esi + 0x14 ]
call sub_402250
lea ecx [ esi + 0x4 ]
jmp sub_402250
sub_4023e8
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_40bb77
add al [ edx ]
add al [ edx ]
add [ edx ] al
add ah cl
int3
sub_40bc04
add eax [ ebx ]
add eax [ edx ]
add eax [ edx ]
int3
sub_40c4af
xor eax eax
retn 0x8
sub_40d090
lea ecx [ esi + 0x4 ]
call sub_40bc70
lea ecx [ esi + 0x14 ]
call sub_40bc70
lea ecx [ esi + 0x24 ]
call sub_40bc70
mov eax esi
retn
sub_40d0b0
cmp [ eax + 0x4 ] 0x1
je r-xdata
mov eax [ eax ]
retn
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
je r-xdata
retn
mov eax [ eax + 0x10 ]
sub_40da60
push esi
mov esi eax
call sub_40de10
lea ecx [ esi + 0x18 ]
call sub_40bc70
call sub_40da20
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov eax esi
pop esi
retn
sub_40daf0
push esi
mov esi edi
call sub_40d090
lea esi [ edi + 0x34 ]
call sub_40d090
lea ecx [ edi + 0x68 ]
call sub_40bc70
mov eax edi
pop esi
retn
sub_40db70
push esi
lea ecx [ edi + 0x68 ]
call sub_402250
lea esi [ edi + 0x34 ]
call sub_401960
mov esi edi
call sub_401960
pop esi
retn
sub_40db90
xor ecx ecx
mov edx 0x1
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
retn
sub_40dbd0
test [ rw-data ] 0x1
je r-xdata
or [ rw-data ] 0x1
push esi
mov esi rw-data
call sub_40f2e0
fld [ rw-data ]
pop esi
retn
fld [ rw-data ]
retn
sub_40de10
push esi
mov esi eax
push 0x10000
mov [ esi ] 0x0
call sub_4115d7
add esp 0x4
mov [ esi + 0x4 ] eax
call sub_40da20
mov eax esi
pop esi
retn
sub_40e080
push esi
mov esi eax
test [ esi + 0x28 ] 0x2000
je r-xdata
pop esi
retn
mov eax [ esi + 0x30 ]
cdq
push 0x0
push edx
push eax
call sub_40df90
sub_40e2a0
mov eax rw-data
call sub_40f090
mov eax [ rw-data ]
push eax
mov ecx rw-data
call sub_40b400
mov ecx [ rw-data ]
push ecx
mov ecx rw-data
call sub_40b400
retn
sub_40e660
mov ecx esi
call sub_40eec0
push 0x0
push esi
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_40c600
retn
sub_40e6e0
lea ecx [ esi + 0x4 ]
mov [ esi ] 0x0
call sub_40bc70
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov eax esi
retn
sub_40ebb0
call sub_40ebd0
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_40ebd0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_40ec00
call sub_40ebb0
test al al
je r-xdata
mov eax sub_4370c0
retn
mov eax [ esi + 0x8 ]
retn
sub_40ef20
call sub_40ef40
test al al
je r-xdata
mov eax sub_435d5d
retn
mov eax [ esi + 0x8 ]
retn
sub_40ef40
call sub_40ef60
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_40ef60
cmp [ esi + 0x8 ] 0x0
jne r-xdata
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_40ef90
call sub_40efb0
test al al
je r-xdata
mov eax sub_4361db
retn
mov eax [ esi + 0x8 ]
retn
sub_40efb0
call sub_40efd0
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_40efd0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_40f030
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
retn
or [ rw-data ] 0x1
push sub_425c11
call sub_41130a
add esp 0x4
sub_40f0a0
push 0x4
mov [ esi ] eax
call sub_4115d7
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0x4 ] eax
mov eax esi
retn
sub_40f0f0
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
mov ecx [ esi ]
push ecx
call sub_4111dc
add esp 0x8
sub_40f1d0
push ebp
mov ebp esp
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov al 0x1
pop ebp
retn 0x4
xor al al
pop ebp
retn 0x4
sub_40f410
cmp eax [ rw-data ]
jg r-xdata
xor eax eax
retn
test eax eax
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
retn
sub_40f820
push 0x8
lea eax [ esi + 0x44 ]
push 0x0
push eax
call sub_412f40
add esp 0xc
mov [ esi + 0x34 ] 0x67452301
mov [ esi + 0x38 ] 0xefcdab89
mov [ esi + 0x3c ] 0x98badcfe
mov [ esi + 0x40 ] 0x10325476
retn
sub_410290
push esi
call sub_4111c1
add esp 0x4
cmp [ esi + eax * 2 - 0x2 ] 0x5c
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
retn
retn
sub_410620
lea ecx [ eax + 0x4 ]
mov edx 0x10
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x8
dec edx
jne r-xdata
retn
sub_4106e0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push esi
lea ecx [ eax + 0xc ]
mov esi eax
call sub_402250
push esi
call sub_4111dc
add esp 0x4
pop esi
sub_410840
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx rw-data
jmp sub_402250
push eax
call [ DestroyIcon@IAT ]
j_sub_408f40
jmp sub_408f40
sub_410a00
push esi
mov esi eax
lea ecx [ esi + 0x49c ]
call sub_401cb0
mov [ esi + 0x49c ] r--data
lea eax [ esi + 0x4a0 ]
pop esi
jmp sub_410a30
sub_410b50
mov ecx esi
call sub_402250
push esi
call sub_4111dc
add esp 0x4
mov eax esi
retn
sub_410ba0
push edi
mov edi ecx
mov [ edi ] r--data
call sub_4019d0
mov eax [ edi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop edi
retn
sub_410be0
cmp [ eax + 0x9 ] 0x0
mov eax [ eax + 0x4 ]
jne r-xdata
mov eax [ eax + 0x4 ]
retn
retn
sub_410bf0
cmp [ eax ] 0x0
je r-xdata
mov eax 0x1
retn
xor eax eax
retn
sub_410c00
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4111dc
pop ecx
sub_410c88
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_410cd0
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov eax rw-data
retn
sub_410e44
mov eax [ esp + 0x4 ]
retn 0x4
sub_410e4b
mov eax 0x1
retn 0x10
sub_410e53
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4115d7
sub_411304
call sub_4116a3
retn
sub_411588
mov [ ecx ] r--data
jmp sub_41807d
sub_4115ba
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4180af
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411682
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_411657
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_41169a
push 0x8
call sub_4182cb
pop ecx
retn
sub_4116a3
push 0x8
call sub_4181f2
pop ecx
retn
sub_4118c5
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4181f2
pop ecx
sub_4118da
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_41179a
add esp 0xc
pop ebp
retn
sub_4118f0
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41179a
add esp 0xc
pop ebp
retn
sub_411906
push 0x1
push 0x0
push 0x0
call sub_41179a
add esp 0xc
retn
sub_411915
push 0x1
push 0x1
push 0x0
call sub_41179a
add esp 0xc
retn
sub_411942
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41317a
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_418c57
add esp 0xc
pop ebp
retn
sub_41319b
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_418f18
add esp 0xc
pop ebp
retn
sub_4131e9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4131b1
pop ecx
pop ecx
pop ebp
retn
sub_41320f
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_418f43
pop ecx
pop ecx
pop ebp
retn
sub_41324e
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_41351d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4111dc
sub_413b52
call sub_41539a
add eax 0x20
push eax
push 0x1
call sub_415520
pop ecx
pop ecx
retn
sub_413bed
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413b65
pop ecx
pop ecx
pop ebp
retn
sub_413ca0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413c00
add esp 0x10
pop ebp
retn
sub_413cba
mov edi edi
push ebp
mov ebp esp
call sub_4179f0
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_417bb2
pop ecx
sub_413cd9
push 0xc
push r--data
call sub_416c70
call sub_417a69
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_413cba
sub_413d0e
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4118f0
int3
sub_414131
push ebx
call sub_41aef5
pop ecx
retn
sub_414326
push [ ebp + 0x14 ]
call sub_4154e4
pop ecx
retn
sub_414432
push [ ebp + 0x8 ]
call sub_4154e4
pop ecx
retn
sub_41458e
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_415520
pop ecx
pop ecx
retn
sub_4145bd
push 0x1
call sub_4181f2
pop ecx
retn
sub_41460f
push [ ebp + 0x8 ]
call sub_4154e4
pop ecx
retn
sub_414619
push 0x1
call sub_4144ec
pop ecx
retn
sub_4146c2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_414622
pop ecx
pop ecx
pop ebp
retn
sub_4149b8
push [ ebp + 0x8 ]
call sub_4154e4
pop ecx
retn
sub_414ab2
push esi
call sub_4154e4
pop ecx
retn
sub_414cfa
push [ ebp + 0x18 ]
call sub_4154e4
pop ecx
retn
sub_41503d
push [ ebp + 0x8 ]
call sub_4154e4
pop ecx
retn
sub_415143
push [ ebp + 0x8 ]
call sub_4154e4
pop ecx
retn
sub_41517a
push 0xc
push r--data
call sub_416c70
call sub_417a69
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
pop ecx
call sub_41514d
sub_4151af
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4118f0
int3
sub_415451
call sub_414619
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_413748
pop ecx
retn
call sub_41e2c8
sub_416583
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_41a957
pop ecx
pop ecx
retn
sub_416597
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_411915
push eax
call sub_4118f0
sub_4165b1
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_416cb5
retn
_start
call sub_41f5dc
jmp sub_416454
sub_416af4
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_416cb5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41711d
push 0xd
call sub_4181f2
pop ecx
retn
sub_4174ec
push 0xd
call sub_4181f2
pop ecx
retn
sub_417525
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_41738b
pop ecx
mov [ rw-data ] 0x1
sub_417870
push 0xc
call sub_4181f2
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41787c
push 0x0
call [ rw-data ]
retn
sub_417885
call [ TlsAlloc@IAT ]
retn 0x4
sub_41788e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_4178a8
mov eax [ rw-data ]
retn
sub_4178e2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ rw-data ]
call eax
pop ebp
retn 0x8
sub_4179de
push 0xd
call sub_4181f2
pop ecx
retn
sub_4179e7
push 0xc
call sub_4181f2
pop ecx
retn
sub_417a69
mov edi edi
push esi
call sub_4179f0
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_411924
sub_417b9d
push 0xd
call sub_4181f2
pop ecx
retn
sub_417ba9
push 0xc
call sub_4181f2
pop ecx
retn
sub_417d9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417fc0
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_417fdd
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41802a
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_413748
pop ecx
sub_41807d
mov [ ecx ] r--data
jmp sub_41802a
sub_4180d4
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41fff0
pop ecx
retn
sub_4181f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4182c2
push 0xa
call sub_4181f2
pop ecx
retn
sub_4182fe
push 0x8
push r--data
call sub_416c70
call sub_417a69
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_420060
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41831e
xor eax eax
inc eax
retn
sub_418337
push sub_4182fe
call [ rw-data ]
mov [ rw-data ] eax
retn
sub_418348
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_41839d
push [ rw-data ]
call [ rw-data ]
retn
sub_418511
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4181f2
pop ecx
sub_41854d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41855c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4186fb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_418c57
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418a95
add esp 0x10
pop ebp
retn
sub_419d5a
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_41a18f
mov eax sub_421ebb
mov [ rw-data ] eax
mov [ rw-data ] sub_4215b1
mov [ rw-data ] sub_421565
mov [ rw-data ] sub_42159e
mov [ rw-data ] sub_421507
mov [ rw-data ] eax
mov [ rw-data ] sub_421e33
mov [ rw-data ] sub_421523
mov [ rw-data ] sub_421485
mov [ rw-data ] sub_421411
retn
sub_41a1ef
mov edi edi
push ebp
mov ebp esp
call sub_41a18f
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_421ede
sub_41a208
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_421f06
retn
sub_41aeec
push 0xa
call sub_4181f2
pop ecx
retn
sub_41afee
push 0xa
call sub_4181f2
pop ecx
retn
sub_41b0ac
push 0xb
call sub_4181f2
pop ecx
retn
sub_41b87e
push ebx
call sub_41aef5
pop ecx
retn
sub_41c5f4
push ebx
call sub_41aef5
pop ecx
retn
sub_41d08e
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41d09e
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41d15f
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41d5fb
push 0x1
call sub_4181f2
pop ecx
retn
sub_41d6e6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_41d610
add esp 0xc
pop ebp
retn 0x4
sub_41d719
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_422d35
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41d74b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_41d610
add esp 0xc
pop ebp
retn 0x8
sub_41d8ba
push ebx
call sub_41aef5
pop ecx
retn
sub_41e0ba
push ebx
call sub_41aef5
pop ecx
retn
sub_41e2c0
push ebx
call sub_41aef5
pop ecx
retn
sub_41e35b
push 0x1
call sub_4181f2
pop ecx
retn
sub_41e5e7
push 0x7
call sub_4181f2
pop ecx
retn
sub_41ea8b
push 0x6
call sub_4181f2
pop ecx
retn
sub_41eacc
push 0x6
call sub_4181f2
pop ecx
retn
sub_41ed95
mov eax rw-data
retn
sub_41ed9b
mov eax rw-data
retn
sub_41eda1
mov eax rw-data
retn
sub_41eda7
mov eax rw-data
retn
sub_41ef96
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_422240
sub_41f250
push sub_41f20e
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_41fe21
call sub_417a69
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_417803
sub_420057
push 0xe
call sub_4181f2
pop ecx
retn
sub_420093
push 0x2
call sub_411924
sub_4205f9
push [ ebp + 0x8 ]
call sub_41aef5
pop ecx
retn
sub_420829
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_420955
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42083f
add esp 0x10
pop ebp
retn
sub_421565
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421523
add esp 0x10
pop ebp
retn
sub_42159e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_421411
pop ecx
pop ecx
pop ebp
retn
sub_4215b1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_421485
pop ecx
pop ecx
pop ebp
retn
sub_4223c0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42226b
add esp 0x14
pop ebp
retn
sub_4223fd
xor eax eax
retn
sub_422d09
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_422c40
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_422d54
call eax
retn
sub_422d57
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_423879
add esp 0xc
pop ebp
retn
sub_4238a4
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_4238c3
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_423b6e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423a90
add esp 0x10
pop ebp
retn
sub_425825
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425775
add esp 0xc
pop ebp
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_425914
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld1
fld st1
fprem
f2xm1
faddp st1
fscale
fxch st1
fstp st0
retn 0x8
sub_42592f
fld [ esp + 0x4 ]
fldln2
fxch st1
fyl2x
retn 0x8
sub_42593c
fld [ esp + 0x4 ]
fld1
fpatan
retn 0x8
sub_4259ab
fld [ esp + 0x4 ]
fptan
fstp st0
retn 0x8
sub_4259b6
fld [ esp + 0x4 ]
fcos
retn 0x8
sub_4259bf
fld [ esp + 0x4 ]
fsin
retn 0x8
sub_4259c8
fld [ esp + 0x4 ]
fabs
retn 0x8
sub_4259d1
fld [ esp + 0xc ]
fld [ esp + 0x4 ]
fprem
fxch st1
fstp st0
retn 0x10
sub_4259e2
fld [ esp + 0x4 ]
fsqrt
retn 0x8
sub_425a62
sub ecx [ ecx - 0x4 ]
jmp sub_467a9d
sub_425a6a
sub ecx [ ecx - 0x4 ]
jmp sub_44af39
sub_425a72
sub ecx [ ecx - 0x4 ]
jmp sub_404100
sub_425b2b
call sub_40f000
push j_sub_4106e0
call sub_41130a
pop ecx
retn
sub_425b3c
call sub_40f060
push j_sub_410c00
call sub_41130a
pop ecx
retn
sub_425b4d
call sub_410860
push j_sub_410840
call sub_41130a
pop ecx
retn
sub_425b5e
call sub_40c7f0
push sub_425c33
call sub_41130a
pop ecx
retn
sub_425b6f
call sub_40dc90
push j_sub_410700
call sub_41130a
pop ecx
retn
sub_425b80
call sub_40c360
push j_sub_4021e0
call sub_41130a
pop ecx
retn
sub_425b91
call sub_410cd0
push j_sub_40e2a0
call sub_41130a
pop ecx
retn
sub_425ba2
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
add eax rw-data
call sub_40e360
push j_sub_40ece0
call sub_41130a
pop ecx
retn
sub_425bc0
push j_sub_410cc0
call sub_41130a
pop ecx
retn
sub_425bcc
push ebx
push 0x10
push 0x40
mov ebx sub_410c88
pop eax
mov ecx rw-data
call sub_410ca0
push sub_425c52
call sub_41130a
pop ecx
pop ebx
retn
sub_425bee
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_41807d
j_sub_410cc0
jmp sub_410cc0
j_sub_410840
jmp sub_410840
j_sub_4106e0
jmp sub_4106e0
sub_425c11
retn
j_sub_410c00
jmp sub_410c00
sub_425c21
push esi
mov esi rw-data
call j_sub_408f40
pop esi
retn
j_sub_410700
jmp sub_410700
sub_425c33
push esi
mov esi rw-data
mov ecx esi
call sub_401cb0
mov ecx esi
pop esi
jmp sub_44cd0e
j_sub_40e2a0
jmp sub_40e2a0
j_sub_4021e0
jmp sub_4021e0
sub_425c52
push sub_410c60
push 0x40
push 0x10
push rw-data
call sub_410c20
retn
j_sub_40ece0
jmp sub_40ece0
j_sub_413748
push ebp
pop ebp
jmp sub_413748
j_sub_4135bb
push ebp
pop ebp
jmp sub_4135bb
sub_42ff9f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
push ecx
call sub_4111dc
add esp 0x4
pop ebp
retn 0x4
sub_42ffbe
push edi
mov edi ecx
mov [ edi ] r--data
call sub_4107d0
mov eax [ edi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop edi
retn
sub_430727
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_430699
pop ebp
retn 0x8
sub_430c46
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xffffffe0
push eax
call [ GetClassLongW@IAT ]
pop ebp
retn
sub_430c7a
xor eax eax
retn 0x10
sub_430cb1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430c7f
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
pop ebp
retn 0x4
sub_430d1d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
jae r-xdata
pop ebp
retn 0x4
mov eax 0x4
sub_430df3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430dc1
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
pop ebp
retn 0x4
sub_430e4d
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_430ce2
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop esi
retn
sub_430ec5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_430e7b
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
pop ebp
retn 0x4
sub_430edf
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
xor eax eax
cmp edx [ ebp + 0xc ]
sete al
pop ebp
retn 0x8
sub_430ef3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_430edf
xor ecx ecx
test al al
sete al
pop ebp
retn 0x8
sub_431280
xor eax eax
retn 0x20
sub_431285
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
pop ebp
retn 0x8
mov ecx [ ecx ]
mov [ eax ] ecx
sub_431330
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43129a
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
pop ebp
retn 0x4
sub_43134a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4312cc
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
pop ebp
retn 0x4
sub_431763
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + 0x5 ]
push ecx
add eax 0x4
push eax
push edx
call sub_431740
pop ebp
retn 0x8
sub_43177e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + 0x3 ]
push ecx
add eax 0x2
push eax
push edx
call sub_431740
pop ebp
retn 0x8
sub_431799
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
push ecx
push eax
push edx
call sub_431740
pop ebp
retn 0x8
sub_431995
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push eax
call sub_4115d7
add esp 0x4
pop ebp
retn
pop ebp
retn
sub_431dad
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4109e0
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop esi
retn
sub_431dc9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
pop ebp
retn 0x4
sub_431e58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push eax
call sub_414a46
add esp 0x4
sub_432508
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x6
jne r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ eax ]
pop ebp
retn 0x4
sub_432538
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] ecx
test ecx ecx
jns r-xdata
pop ebp
retn 0x8
mov [ eax + 0x4 ] 0x0
sub_432651
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
shr eax 0x3
and eax 0x1
pop ebp
retn 0x4
sub_43286f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80070057
pop ebp
retn 0x8
mov [ eax ] 0x1
xor eax eax
pop ebp
retn 0x8
sub_4340c3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ FlushFileBuffers@IAT ]
test eax eax
setne al
pop ebp
retn 0x4
sub_4340db
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
call sub_40da20
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop esi
pop ebp
retn 0x4
sub_434569
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push ecx
push edx
call sub_413ca0
add esp 0xc
pop ebp
retn
sub_434869
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] ax
setne al
pop ebp
retn 0x4
sub_43488e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40ec20
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop esi
retn
sub_4349ff
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
inc eax
cmp [ ecx + 0x8 ] eax
sbb eax eax
inc eax
pop ebp
retn 0x8
sub_435d0a
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
push ecx
push eax
call sub_435bb6
pop ebp
retn 0xc
sub_435d25
mov eax 0x80004001
retn 0x4
sub_435d2d
mov eax 0x80004001
retn 0x10
sub_435d5d
xor eax eax
retn 0x8
sub_435d62
mov eax 0x80004001
retn 0xc
sub_435d87
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
push ecx
push eax
call sub_435a50
pop ebp
retn 0xc
sub_435e94
xor eax eax
inc eax
retn 0xc
sub_435e9a
xor eax eax
inc eax
retn 0x8
sub_435ea0
mov eax 0x80004005
retn 0x8
sub_435ea8
mov eax 0x80004001
retn 0x8
sub_435f85
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x8
sub_436027
mov eax 0x80020006
retn 0x18
sub_43602f
mov eax 0x80070057
retn 0x10
sub_436037
mov eax 0x80070057
retn 0x8
sub_43603f
xor eax eax
inc eax
retn 0x4
sub_4360f5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x0
xor eax eax
pop ebp
retn 0x8
sub_436177
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x1
xor eax eax
pop ebp
retn 0x4
sub_43618a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x0
xor eax eax
pop ebp
retn 0x4
sub_43619d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x1
xor eax eax
pop ebp
retn 0x4
sub_4361db
xor eax eax
retn 0x4
sub_436221
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
mov eax 0x80004001
pop ebp
retn 0x10
sub_436233
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
dec eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_436244
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_436255
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx + 0x8 ]
push ecx
push eax
call sub_435bb6
pop ebp
retn 0xc
sub_436270
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x1
push eax
call [ RaiseException@IAT ]
pop ebp
retn
sub_436285
retn 0x4
sub_436288
retn 0x8
sub_43628b
retn 0xc
sub_43628e
xor eax eax
retn 0xc
sub_436293
or eax 0xffffffff
retn 0x4
sub_43634e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ IsWindowEnabled@IAT ]
test eax eax
setne al
pop ebp
retn 0x4
sub_436366
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
setne al
pop ebp
retn 0x4
sub_43637e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x10
push ecx
call [ PostMessageW@IAT ]
mov al 0x1
pop ebp
retn 0x4
sub_436446
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_43641f
pop ebp
retn 0x4
sub_436458
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_436327
pop ebp
retn 0x4
sub_436748
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x1105
push ecx
call [ SendMessageW@IAT ]
pop ebp
retn 0x4
sub_436787
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x1032
push ecx
call [ SendMessageW@IAT ]
pop ebp
retn 0x4
sub_4367cf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x1004
push ecx
call [ SendMessageW@IAT ]
pop ebp
retn 0x4
sub_436b19
push 0xc
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
retn
sub_436b91
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
pop ebp
retn
sub_437081
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
sub_437095
push esi
mov esi ecx
push esi
call [ VariantInit@IAT ]
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn
sub_4370ab
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
xor eax eax
cmp edx [ ebp + 0xc ]
sete al
pop ebp
retn 0x8
sub_4370c0
xor eax eax
retn
sub_4370c3
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxW@IAT ]
push 0x1
call sub_4118da
int3
sub_4370df
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
xor eax eax
cmp [ ecx ] 0x1
setg al
pop ebp
retn 0x4
sub_441d9a
add ecx 0x4
jmp sub_402250
sub_4421ab
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x9
push eax
call sub_4370ab
pop ebp
retn 0x4
sub_4422ae
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_442272
mov eax [ esi + 0x4 ]
push eax
call sub_4111dc
add esp 0x4
pop esi
retn
sub_44268e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_4426bb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x7
push eax
call sub_4370ab
pop ebp
retn 0x4
sub_442a01
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push eax
call sub_4431ad
sub_442b7b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x18 ]
call sub_402250
lea ecx [ esi + 0x8 ]
call sub_402250
pop esi
pop ebp
retn 0x4
sub_442f36
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40ce70
xor ecx ecx
test al al
sete al
pop ebp
retn 0x4
sub_442fec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0xa
jne r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ eax ]
mov eax [ eax ]
pop ebp
retn 0x4
sub_4435b9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x18 ]
push ecx
lea edx [ eax + 0x1c ]
push edx
push eax
call sub_44334f
pop ebp
retn 0x4
sub_4437b5
add ecx 0xc
jmp sub_402250
sub_443845
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x3
push eax
call sub_4370ab
pop ebp
retn 0x4
sub_443857
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x2
push eax
call sub_4370ab
pop ebp
retn 0x4
sub_44387b
push rw-data
call sub_430e6a
test al al
je r-xdata
push rw-data
call sub_432929
mov eax [ eax + 0x4 ]
retn
xor eax eax
retn
sub_443a61
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push rw-data
push sub_4439fb
xor eax eax
push ecx
mov [ rw-data ] ax
call [ EnumChildWindows@IAT ]
mov eax rw-data
pop ebp
retn
sub_443d61
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xb
push eax
call sub_4370ab
pop ebp
retn 0x4
sub_443e19
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x8 ] ecx
je r-xdata
pop ebp
retn 0x4
push eax
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
call sub_443db4
sub_444abd
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
pop ebp
retn 0x8
sub_444dd6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add eax 0xf
and eax 0xfffffff0
pop ebp
retn 0x4
mov eax 0x10
pop ebp
retn 0x4
sub_445934
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_445870
pop ebp
retn 0x8
sub_4459fb
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_44599e
pop ebp
retn 0x8
sub_445b98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_445b19
pop ebp
retn 0x8
sub_445bac
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446606
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xa
push eax
call sub_4370ab
pop ebp
retn 0x4
sub_447b89
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_430c09
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_4414b5
pop ebp
retn 0x8
sub_447d4d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push eax
call sub_44420e
sub_4493d8
push esi
call sub_413bed
add esp 0x4
call sub_425a80
mov [ ebx + 0x48 ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44a4cd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_44a4e8
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_40bc70
mov eax esi
pop esi
retn
sub_44a77d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
test eax eax
setne dl
mov [ rw-data ] dl
xor eax eax
pop ebp
retn 0x8
sub_44a801
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_40bc70
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44a816
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c650
push eax
call sub_432281
add esp 0x4
xor eax eax
pop ebp
retn 0x8
sub_44b5cb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x1f4
pop ebp
retn 0x4
push eax
call sub_44b489
pop ebp
retn 0x4
sub_44b785
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_44b6d6
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_44b858
push ecx
call sub_44b6d6
movzx eax al
shr eax 0x2
and eax 0x1
retn
sub_44b868
push ecx
call sub_44b6d6
movzx eax al
shr eax 0x1
and eax 0x1
retn
sub_44b911
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
call sub_408f40
push esi
call sub_4111dc
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44b951
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
call sub_40bc70
mov eax esi
pop esi
retn
sub_44c285
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_443d73
sub eax [ esi + 0x10 ]
sbb edx [ esi + 0x14 ]
pop esi
pop ebp
retn 0x4
sub_44c29d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_40bc70
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44cd0e
mov [ ecx ] r--data
lea eax [ ecx + 0x4 ]
jmp sub_410a30
sub_4522e2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push eax
call sub_4521f7
sub_45263d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push eax
call sub_452620
sub_4594bd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push 0x1
push ecx
push eax
call sub_4590bd
pop ebp
retn 0x8
sub_4594d3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push 0x0
push ecx
push eax
call sub_4590bd
pop ebp
retn 0x8
sub_459a7e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push 0x2
push ecx
push eax
call sub_4594e9
pop ebp
retn 0x8
sub_459a94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push 0x0
push ecx
push eax
call sub_4594e9
pop ebp
retn 0x8
sub_45b49e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
add ecx 0x44
push ecx
call sub_45b3be
add esp 0x8
xor eax eax
pop ebp
retn 0x8
sub_45b4b7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
add ecx 0x10
push ecx
call sub_45b3be
add esp 0x8
xor eax eax
pop ebp
retn 0x8
sub_45b556
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x88 ]
call sub_40ddd0
lea ecx [ esi + 0x88 ]
call sub_44cd0e
pop esi
pop ebp
retn 0x4
sub_46130d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_461014
pop ebp
retn 0x8
j_sub_462237
push ebp
pop ebp
jmp sub_462237
sub_464e7c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1
push 0x0
push ecx
call sub_4649a3
pop ebp
retn 0x8
sub_464e95
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x0
push 0x0
push ecx
call sub_4649a3
pop ebp
retn 0x8
sub_466a39
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push 0x1
push eax
call sub_46690e
pop ecx
pop ebp
retn
sub_467c5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
call sub_40c670
xor ecx ecx
test al al
sete al
pop esi
pop ebp
retn
sub_467c75
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
call sub_40c670
xor ecx ecx
test al al
sete al
pop esi
pop ebp
retn
sub_469205
cmp [ rw-data ] 0x0
push ebp
jne r-xdata
pop ebp
jmp sub_469143
xor eax eax
pop ebp
retn 0x10
sub_469b4b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_461dfa
test eax eax
setne al
pop ebp
retn 0x8
sub_46a6b3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1
push ecx
call sub_462fc8
pop ebp
retn 0x8
sub_46a6ca
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x0
push ecx
call sub_462fc8
pop ebp
retn 0x8
sub_46e91c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x0
push eax
push edx
push ecx
call sub_46e785
pop ebp
retn 0x8
sub_46e933
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x1
push eax
push edx
push ecx
call sub_46e785
pop ebp
retn 0x8
sub_46ff3a
push ebp
mov ebp esp
push 0x0
call sub_46ff07
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_475596
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x1
push eax
push edx
push ecx
call sub_475077
pop ebp
retn 0x8
sub_4755ad
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x0
push eax
push edx
push ecx
call sub_475077
pop ebp
retn 0x8
sub_479c19
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1d
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479c30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x15
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479c47
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x16
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479c5e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x11
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479c75
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x10
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479c8c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0xb
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479ca3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0xa
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479cba
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1a
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479cd1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x12
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479ce8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x8
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479cff
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x6
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479d16
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0xf
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479d2d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0xe
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479d44
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x14
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479d5b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x13
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479d72
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479d89
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x3
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479da0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x7
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479db7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x4
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479dce
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1b
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479de5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x2
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479dfc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x1c
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e13
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x5
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e2a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0xc
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e41
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x0
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e58
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x19
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e6f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x18
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e86
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x17
push ecx
call sub_477bcb
pop ebp
retn 0x8
sub_479e9d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push 0x9
push ecx
call sub_477bcb
pop ebp
retn 0x8
j_sub_47e012
push ebp
pop ebp
jmp sub_47e012
j_sub_47e6ac
push ebp
pop ebp
jmp sub_47e6ac
