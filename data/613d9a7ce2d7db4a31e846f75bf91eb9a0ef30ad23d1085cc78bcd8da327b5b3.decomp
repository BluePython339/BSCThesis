sub_40102f
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_40108d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GdipCreateFromHDC
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax esi
leave
retn 0x4
sub_4010b7
test ecx ecx
je r-xdata
xor ecx ecx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov [ edi + 0x4 ] eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x2
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push 0x0
push [ esp + 0x20 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
push ecx
push [ edi ]
call GdipDrawImageRectRectI
test eax eax
je r-xdata
retn 0xc
sub_401108
push 0x8
mov eax sub_408297
call sub_4080b6
mov esi ecx
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x4 ]
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_408155
retn
sub_40115f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x4 ]
call GdipGetImageWidth
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
mov [ esi + 0x8 ] eax
sub_40117f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x4 ]
call GdipGetImageHeight
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
mov [ esi + 0x8 ] eax
sub_40119f
push 0x4
mov eax sub_408456
call sub_4080b6
mov esi ecx
mov [ ebp - 0x10 ] esi
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDisposeImage
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_408155
retn 0x4
push esi
call GdipFree
sub_4011d8
push 0x4
mov eax sub_408433
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
mov [ esi ] r--data
call GdipCreateBitmapFromStream
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x8
sub_40121e
push 0x4
mov eax sub_408433
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0xcf
push [ ebp + 0xc ]
mov [ esi ] r--data
call GdipCreateBitmapFromResource
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x8
sub_401269
push 0x0
mov eax sub_408730
call sub_4080b6
mov esi [ ebp + 0x8 ]
push esi
call sub_40310c
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
xor edi edi
mov [ esi + 0x24 ] 0x9
mov [ esi + 0x28 ] edi
mov [ esi + 0x3c ] edi
and [ esi + 0x44 ] 0xfffffff8
or edx 0xffffffff
mov [ esi + 0x40 ] edi
mov [ esi + 0x2c ] edx
mov [ esi + 0x30 ] edx
mov [ esi + 0x34 ] edx
mov [ esi + 0x38 ] edx
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] 0x4
mov [ esi + 0x50 ] 0xffffff
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] ecx
mov [ esi + 0x38 ] 0x3
mov [ ebp - 0x4 ] edx
mov eax esi
call sub_408155
retn 0x4
sub_4012e3
push 0x0
mov eax sub_408799
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x48 ]
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
call sub_40288b
call sub_408155
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ esi + 0x48 ] 0x0
sub_40131f
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
push edi
mov edi ecx
jne r-xdata
xor eax eax
push ebx
mov ebx [ ebp + 0x18 ]
push esi
xor esi esi
inc esi
cmp [ ebp + 0xc ] esi
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
test [ edi + 0x24 ] 0x8
je r-xdata
push 0x0
push ebx
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4028d5
test eax eax
pop esi
pop ebx
je r-xdata
lea esi [ edi + 0x3c ]
push [ esi ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebx ] esi
jmp r-xdata
cmp [ edi + 0x48 ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
and [ esi ] 0x0
and [ ebx ] 0x0
push [ esi ]
call [ DestroyWindow@IAT ]
test eax eax
je r-xdata
call sub_40139f
pop edi
pop ebp
retn 0x18
and [ esi ] 0x0
sub_40139f
push ebx
push esi
lea ebx [ edi + 0x4 ]
push [ ebx ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
mov esi [ edi + 0x48 ]
test esi esi
je r-xdata
push ebp
call sub_40115f
xor edx edx
div [ edi + 0x4c ]
mov esi [ edi + 0x48 ]
mov ebp eax
call sub_40117f
mov ecx ebp
mov esi ebx
call sub_404d11
pop ebp
jmp r-xdata
pop esi
pop ebx
retn
sub_4013dd
push 0xe8
mov eax sub_408768
call sub_40811f
mov ebx ecx
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x4 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xe4 ]
push eax
lea edx [ ebp - 0xf4 ]
call sub_404c8f
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0xb0 ]
push eax
push [ ebx + 0x4 ]
call [ GetWindowRect@IAT ]
push [ ebx + 0x4 ]
call [ GetParent@IAT ]
mov esi [ ScreenToClient@IAT ]
lea ecx [ ebp - 0xb0 ]
push ecx
push eax
mov [ ebp - 0x98 ] eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0xac ]
mov ecx [ ebp - 0xb0 ]
mov esi [ SetViewportOrgEx@IAT ]
push edi
neg eax
push eax
neg ecx
push ecx
push [ ebp - 0xe4 ]
call esi
push edi
push [ ebp - 0xe4 ]
push 0xf
push [ ebp - 0x98 ]
call [ SendMessageW@IAT ]
push edi
push edi
push edi
push [ ebp - 0xe4 ]
call esi
cmp [ ebx + 0x48 ] edi
je r-xdata
lea eax [ ebp - 0xa8 ]
push eax
push [ ebp - 0x98 ]
call esi
push 0x7e
lea eax [ ebp - 0x92 ]
push edi
push eax
mov [ ebp - 0x94 ] di
call memset
add esp 0xc
push 0x40
lea eax [ ebp - 0x94 ]
push eax
push [ ebx + 0x4 ]
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x94 ] di
je r-xdata
mov al [ ebx + 0x24 ]
push [ ebx + 0x4 ]
and al 0x1
mov [ ebp - 0x99 ] al
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xe4 ]
push eax
call sub_404c12
or [ ebp - 0x4 ] 0xffffffff
call sub_408169
retn 0x4
test [ ebx + 0x44 ] 0x4
lea esi [ ebp - 0xf4 ]
lea edi [ ebp - 0xc0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov eax [ ebx + 0x44 ]
test al 0x4
je r-xdata
mov eax [ ebx + 0x38 ]
jmp r-xdata
mov esi [ SetBkMode@IAT ]
push 0x1
push [ ebp - 0xe4 ]
call esi
push 0x11
mov [ ebp - 0x98 ] eax
call [ GetStockObject@IAT ]
mov edi [ SelectObject@IAT ]
push eax
push [ ebp - 0xe4 ]
call edi
push [ ebx + 0x50 ]
mov ebx [ SetTextColor@IAT ]
push [ ebp - 0xe4 ]
mov [ ebp - 0xc4 ] eax
call ebx
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0xe4 ]
mov [ ebp - 0xa0 ] eax
push 0x25
lea eax [ ebp - 0xc0 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
call [ wcslen@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x94 ]
push eax
push [ ebp - 0xa0 ]
call [ DrawTextW@IAT ]
push [ ebp - 0x98 ]
push [ ebp - 0xe4 ]
call esi
push [ ebp - 0xc4 ]
push [ ebp - 0xe4 ]
call edi
push [ ebp - 0xa4 ]
push [ ebp - 0xe4 ]
call ebx
push 0x1
push 0x1
lea eax [ ebp - 0xc0 ]
push eax
call [ OffsetRect@IAT ]
cmp [ ebp - 0x99 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
jmp r-xdata
cmp eax 0xffffffff
mov [ ebp - 0x98 ] eax
jne r-xdata
test al 0x1
je r-xdata
test al 0x2
jne r-xdata
mov esi [ ebx + 0x48 ]
call sub_40115f
xor edx edx
div [ ebx + 0x4c ]
mov esi [ ebx + 0x48 ]
mov edi eax
call sub_40117f
push [ ebp - 0xe4 ]
lea esi [ ebp - 0xa8 ]
mov [ ebp - 0xa0 ] eax
call sub_40108d
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0xa0 ]
mov ecx [ ebx + 0x48 ]
and [ ebp - 0xc0 ] 0x0
and [ ebp - 0xbc ] 0x0
push eax
push edi
mov [ ebp - 0xb8 ] edi
imul edi [ ebp - 0x98 ]
mov [ ebp - 0xb4 ] eax
push edi
lea eax [ ebp - 0xc0 ]
mov edi esi
call sub_4010b7
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0xa8 ]
call GdipDeleteGraphics
xor edi edi
mov eax [ ebx + 0x2c ]
mov [ ebp - 0x98 ] eax
mov eax [ ebx + 0x34 ]
jmp r-xdata
sub_4016bb
push 0x0
mov eax sub_408730
call sub_4080b6
mov esi [ ebp + 0x8 ]
push esi
call sub_40310c
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
xor edx edx
mov [ esi + 0x24 ] ecx
mov [ esi + 0x28 ] edx
mov [ esi + 0x3c ] edx
and [ esi + 0x44 ] 0xfffffff8
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x30 ] 0xffffffff
or [ esi + 0x34 ] 0xffffffff
or [ esi + 0x38 ] 0xffffffff
mov [ esi + 0x40 ] edx
push 0x2
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0xffffff
mov [ esi ] r--data
mov [ esi + 0x48 ] edx
mov [ esi + 0x4c ] edx
mov [ esi + 0x50 ] edx
mov [ esi + 0x54 ] 0x4
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x64 ] 0x323232
mov [ esi + 0x2c ] edx
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] ecx
mov [ esi + 0x38 ] 0x3
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x4
sub_401747
push 0x0
mov eax sub_408799
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x48 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ esi + 0x48 ] 0x0
mov ecx [ esi + 0x50 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ esi + 0x4c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
push esi
call sub_40288b
call sub_408155
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ esi + 0x50 ] 0x0
sub_4017a5
push ebp
mov ebp esp
push ecx
push edi
xor edi edi
cmp [ ebp + 0x1c ] edi
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x2
push ebx
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402b1f
test eax eax
pop ebx
je r-xdata
push esi
lea esi [ ecx + 0x3c ]
push [ esi ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi ] edi
mov [ ebx ] edi
pop esi
push [ esi ]
call [ DestroyWindow@IAT ]
test eax eax
je r-xdata
pop edi
leave
retn 0x18
mov [ esi ] edi
sub_401808
push 0xf8
mov eax sub_4086ed
call sub_40811f
mov ebx ecx
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0xdc ]
push eax
push [ ebx + 0x4 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0xdc ]
call sub_404c8f
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0xac ]
push eax
push [ ebx + 0x4 ]
call [ GetWindowRect@IAT ]
push [ ebx + 0x4 ]
call [ GetParent@IAT ]
mov esi [ ScreenToClient@IAT ]
lea ecx [ ebp - 0xac ]
push ecx
push eax
mov [ ebp - 0x94 ] eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0xa8 ]
mov ecx [ ebp - 0xac ]
mov esi [ SetViewportOrgEx@IAT ]
push edi
neg eax
push eax
neg ecx
push ecx
push [ ebp - 0x104 ]
call esi
push edi
push [ ebp - 0x104 ]
push 0xf
push [ ebp - 0x94 ]
call [ SendMessageW@IAT ]
push edi
push edi
push edi
push [ ebp - 0x104 ]
call esi
mov al [ ebx + 0x24 ]
push [ ebx + 0x4 ]
and al 0x1
mov [ ebp - 0x95 ] al
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xa4 ]
push eax
push [ ebp - 0x94 ]
call esi
mov eax [ ebx + 0x44 ]
test al 0x4
je r-xdata
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebx + 0x38 ]
jmp r-xdata
cmp [ ebp - 0x95 ] 0x0
jne r-xdata
mov eax [ ebx + 0x60 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebx + 0x30 ]
jmp r-xdata
cmp [ ebx + 0x48 ] edi
mov [ ebp - 0x9c ] eax
je r-xdata
test al 0x1
je r-xdata
test al 0x2
jne r-xdata
push 0x7e
lea eax [ ebp - 0x8e ]
push edi
push eax
mov [ ebp - 0x90 ] di
call memset
add esp 0xc
push 0x40
lea eax [ ebp - 0x90 ]
push eax
push [ ebx + 0x4 ]
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x90 ] di
je r-xdata
cmp [ ebx + 0x4c ] edi
je r-xdata
mov eax [ ebx + 0x58 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebx + 0x2c ]
mov eax [ ebx + 0x5c ]
mov [ ebp - 0x94 ] eax
mov eax [ ebx + 0x34 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call sub_404c12
or [ ebp - 0x4 ] 0xffffffff
call sub_408169
retn 0x4
lea esi [ ebp - 0xdc ]
lea edi [ ebp - 0xac ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebx + 0x48 ]
test esi esi
je r-xdata
cmp [ ebx + 0x50 ] edi
je r-xdata
test [ ebx + 0x44 ] 0x4
je r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
push [ ebp - 0x104 ]
lea esi [ ebp - 0xa4 ]
call sub_40108d
mov [ ebp - 0x4 ] 0x2
mov esi [ ebx + 0x48 ]
call sub_40115f
xor edx edx
div [ ebx + 0x54 ]
mov esi [ ebx + 0x48 ]
mov edi eax
mov [ ebp - 0xb8 ] edi
call sub_40117f
mov esi [ ebx + 0x4c ]
mov [ ebp - 0xe4 ] eax
call sub_40115f
xor edx edx
div [ ebx + 0x54 ]
mov esi [ ebx + 0x4c ]
mov [ ebp - 0xbc ] eax
call sub_40117f
mov esi [ ebx + 0x50 ]
mov [ ebp - 0xb0 ] eax
call sub_40115f
xor edx edx
div [ ebx + 0x54 ]
mov esi [ ebx + 0x50 ]
mov [ ebp - 0xe0 ] eax
call sub_40117f
push [ ebp - 0xe4 ]
mov ecx [ ebx + 0x48 ]
and [ ebp - 0xcc ] 0x0
and [ ebp - 0xc8 ] 0x0
push edi
mov [ ebp - 0xc4 ] edi
imul edi [ ebp - 0x9c ]
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0xd0 ]
sub eax [ ebp - 0xd8 ]
push edi
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0xcc ]
lea edi [ ebp - 0xa4 ]
call sub_4010b7
mov eax [ ebp - 0xd4 ]
sub eax [ ebp - 0xdc ]
mov esi [ ebp - 0xe0 ]
mov edx [ ebp - 0xb8 ]
push [ ebp - 0xb0 ]
mov ecx [ ebp - 0xd0 ]
sub ecx [ ebp - 0xd8 ]
and [ ebp - 0xc8 ] 0x0
sub eax esi
sub eax edx
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0xbc ]
imul eax [ ebp - 0x9c ]
push 0x1
mov [ ebp - 0xc0 ] ecx
mov ecx [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0xcc ]
mov [ ebp - 0xcc ] edx
call sub_4010b7
mov ecx [ ebp - 0xd4 ]
sub ecx [ ebp - 0xdc ]
push [ ebp - 0xb4 ]
mov eax [ ebp - 0xd0 ]
sub eax [ ebp - 0xd8 ]
and [ ebp - 0xc8 ] 0x0
sub ecx esi
push esi
mov [ ebp - 0xc4 ] esi
imul esi [ ebp - 0x9c ]
mov [ ebp - 0xcc ] ecx
mov ecx [ ebx + 0x50 ]
mov [ ebp - 0xc0 ] eax
push esi
lea eax [ ebp - 0xcc ]
call sub_4010b7
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0xa4 ]
call GdipDeleteGraphics
xor edi edi
mov esi [ SetBkMode@IAT ]
push 0x1
push [ ebp - 0x104 ]
call esi
push 0x11
mov [ ebp - 0xbc ] eax
call [ GetStockObject@IAT ]
mov edi [ SelectObject@IAT ]
push eax
push [ ebp - 0x104 ]
call edi
push [ ebp - 0x94 ]
mov ebx [ SetTextColor@IAT ]
push [ ebp - 0x104 ]
mov [ ebp - 0xb0 ] eax
call ebx
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0x104 ]
mov [ ebp - 0xb4 ] eax
push 0x25
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0x90 ]
push eax
call [ wcslen@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x90 ]
push eax
push [ ebp - 0xb4 ]
call [ DrawTextW@IAT ]
push [ ebp - 0xbc ]
push [ ebp - 0x104 ]
call esi
push [ ebp - 0xb0 ]
push [ ebp - 0x104 ]
call edi
push [ ebp - 0xb8 ]
push [ ebp - 0x104 ]
call ebx
push 0x1
push 0x1
lea eax [ ebp - 0xac ]
push eax
call [ OffsetRect@IAT ]
call sub_40115f
xor edx edx
div [ ebx + 0x54 ]
mov esi [ ebx + 0x50 ]
mov edi eax
call sub_40115f
xor edx edx
div [ ebx + 0x54 ]
add [ ebp - 0xac ] edi
sub [ ebp - 0xa4 ] eax
sub_401c84
push 0x24
mov eax sub_408996
call sub_4080b6
mov edi ecx
push r--data
mov esi r--data
xor ebx ebx
push esi
mov [ ebp - 0x18 ] ebx
call [ wcscmp@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
push esi
push 0xcf
push edi
call [ FindResourceW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x10
call GdipAlloc
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push esi
push edi
call [ SizeofResource@IAT ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
xor eax eax
push edi
push eax
call sub_40121e
jmp r-xdata
push esi
push edi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
je r-xdata
cmp esi ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
jmp r-xdata
push [ ebp - 0x1c ]
push 0x2
call [ GlobalAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push ebx
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x4 ]
mov [ ebp - 0x1c ] ebx
call GdipCreateHBITMAPFromBitmap
cmp eax ebx
je r-xdata
push [ ebp - 0x2c ]
mov eax [ GlobalFree@IAT ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_403fcf
mov [ ebp - 0x4 ] 0x1
push edi
call [ GlobalLock@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov [ esi + 0x8 ] eax
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x30 ]
push eax
call sub_401c61
mov esi [ ebp - 0x18 ]
push [ ebp - 0x2c ]
mov eax [ GlobalUnlock@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_40400c
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push esi
call memcpy
add esp 0xc
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edi
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
jne r-xdata
call sub_408155
retn
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_404bd4
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x28 ]
push eax
call sub_401c61
mov esi [ ebp - 0x14 ]
push 0x10
call GdipAlloc
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
xor eax eax
push esi
push eax
call sub_4011d8
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx ebx
mov [ eax + 0x8 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ ebp - 0x18 ] ebx
sub_401e2e
push 0x8
mov eax sub_408b27
call sub_4080b6
mov esi [ ebp + 0x8 ]
xor ebx ebx
lea eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x10 ] eax
mov [ eax + 0xc ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x4
lea edi [ esi + 0x20 ]
lea eax [ edi + 0x8 ]
push eax
mov [ ebp - 0x10 ] edi
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call sub_401269
mov [ ebp - 0x4 ] 0x5
mov [ edi + 0x5c ] 0x8c6657
mov ecx [ rw-data ]
call sub_401c84
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ esi + 0x80 ]
push eax
mov [ esi ] r--data
call sub_4016bb
mov [ ebp - 0x4 ] 0x7
lea eax [ esi + 0xe8 ]
push eax
call sub_4016bb
mov [ ebp - 0x4 ] 0x8
lea eax [ esi + 0x150 ]
push eax
call sub_40255c
mov [ ebp - 0x4 ] 0x9
mov [ esi + 0x154 ] ebx
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x4
sub_401eda
push 0x0
mov eax sub_408941
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x4
mov ecx [ esi + 0x154 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x3
lea eax [ esi + 0x150 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0x2
lea eax [ esi + 0xe8 ]
push eax
call sub_401747
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + 0x80 ]
push eax
call sub_401747
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x20 ]
push eax
call sub_402db3
or [ ebp - 0x4 ] 0xffffffff
push esi
call sub_402071
call sub_408155
retn 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_401f55
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x110
jne r-xdata
cmp [ ebp + 0xc ] 0x111
mov ebx [ ebp + 0x10 ]
jne r-xdata
mov ebx edi
call sub_405ccf
push [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
push ebx
lea edx [ edi + 0x20 ]
call sub_402dfd
test eax eax
jne r-xdata
xor eax eax
inc eax
cmp bx ax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
xor eax eax
inc eax
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
mov [ ebp + 0x1c ] 0x1
call sub_403e0e
cmp [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
cmp bx 0x2
jne r-xdata
mov ecx ebx
shr ecx 0x10
test cx cx
jne r-xdata
mov esi 0xcc
cmp bx si
jne r-xdata
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push eax
mov esi edi
call sub_406789
jmp r-xdata
cmp bx 0xcf
jne r-xdata
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push 0x2
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov ecx ebx
shr ecx 0x10
test cx cx
jne r-xdata
lea ecx [ edi + 0x150 ]
call sub_404daf
push esi
jmp r-xdata
mov ecx [ ebp + 0x18 ]
and [ ecx ] 0x0
jmp r-xdata
push [ edi + 0x4 ]
call [ EndDialog@IAT ]
mov eax [ ebp + 0x18 ]
and [ eax ] 0x0
jmp r-xdata
sub_402091
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push [ ebp + 0x8 ]
mov ebx [ rw-data ]
push 0x65
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] r--data
call sub_404ae7
pop ebx
leave
retn 0x4
sub_402103
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_408d32
mov eax [ fs : 0x0 ]
push eax
sub esp 0x198
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1a8 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x10 ]
lea eax [ esp + 0x34 ]
push eax
xor esi esi
push edi
mov [ esp + 0x3c ] esi
call [ CommandLineToArgvW@IAT ]
cmp [ edi ] si
jne r-xdata
cmp [ esp + 0x34 ] esi
jle r-xdata
mov [ esp + 0x34 ] esi
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_40258b
mov [ esp + 0x1b0 ] esi
push r--data
push [ esp + 0x20 ]
call [ wcscmp@IAT ]
cmp eax esi
pop ecx
pop ecx
jne r-xdata
mov [ esp + 0x1c ] esi
call [ GetCommandLineW@IAT ]
push eax
lea ebx [ esp + 0x20 ]
call sub_403709
cmp al 0x1
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x3c ] esi
call sub_40264f
push esi
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x40 ]
push eax
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x54 ] esi
call GdiplusStartup
lea eax [ esp + 0x4c ]
push eax
call sub_401e2e
mov [ esp + 0x1b0 ] 0xb
lea eax [ esp + 0x1c ]
lea edi [ esp + 0x19c ]
call sub_40260e
call [ GetActiveWindow@IAT ]
push eax
lea esi [ esp + 0x50 ]
call sub_402d68
mov [ esp + 0x1b0 ] 0x0
mov eax esi
push eax
call sub_401eda
push [ esp + 0x38 ]
call GdiplusShutdown
jmp r-xdata
mov [ esp + 0x18 ] esi
mov [ esp + 0x1b0 ] 0x1
mov [ esp + 0x24 ] esi
mov [ esp + 0x1b0 ] 0x2
mov [ esp + 0x20 ] esi
mov [ esp + 0x1b0 ] 0x3
lea eax [ esp + 0x2c ]
push eax
mov edi r--data
call sub_40258b
mov [ esp + 0x1b0 ] 0x4
mov esi r--data
push esi
call [ wcslen@IAT ]
pop ecx
mov ecx [ esp + 0x2c ]
mov ebx [ ecx - 0xc ]
mov [ esp + 0x14 ] eax
mov edi esi
add eax ebx
sub edi ecx
mov [ esp + 0x28 ] esi
push eax
lea esi [ esp + 0x30 ]
sar edi 0x1
mov [ esp + 0x34 ] eax
call sub_404953
cmp edi ebx
lea edi [ eax + edi * 2 ]
jbe r-xdata
mov eax [ esp + 0x1c ]
call sub_4037e2
mov [ esp + 0x1c ] eax
mov ecx [ esp + 0x1a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
or [ esp + 0x1b0 ] 0xffffffff
lea eax [ esp + 0x1c ]
push eax
call sub_4025e9
xor eax eax
jmp r-xdata
push edi
push [ esp + 0x18 ]
lea eax [ eax + ebx * 2 ]
push eax
mov eax [ esp + 0x20 ]
call sub_404634
mov eax [ esp + 0x3c ]
add esp 0xc
lea edx [ esp + 0x2c ]
call sub_404650
push [ esp + 0x2c ]
lea esi [ esp + 0x1c ]
call sub_404a8e
test eax eax
mov ebx [ RegCloseKey@IAT ]
jne r-xdata
mov edi [ esp + 0x28 ]
mov [ esp + 0x1b0 ] 0x3
lea eax [ esp + 0x2c ]
push eax
call sub_4025e9
xor edi edi
push r--data
mov eax esi
push eax
call sub_404a52
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] edi
je r-xdata
push [ esp + 0x18 ]
call ebx
mov [ esp + 0x18 ] edi
push r--data
lea esi [ esp + 0x28 ]
call sub_404a8e
test eax eax
mov edi 0x104
jne r-xdata
push [ esp + 0x18 ]
call ebx
and [ esp + 0x18 ] 0x0
cmp [ esp + 0x20 ] edi
je r-xdata
push [ esp + 0x24 ]
call ebx
mov [ esp + 0x24 ] edi
push r--data
lea esi [ esp + 0x24 ]
call sub_404a8e
test eax eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_40255c
mov [ esp + 0x1b0 ] 0x5
push edi
push edi
lea esi [ esp + 0x1c ]
call sub_404953
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov [ esp + 0x1b0 ] 0x2
cmp [ esp + 0x20 ] edi
je r-xdata
push [ esp + 0x20 ]
call ebx
mov [ esp + 0x20 ] edi
xor edi edi
lea eax [ esp + 0x14 ]
push eax
call sub_40255c
mov [ esp + 0x1b0 ] 0x9
push edi
push edi
lea esi [ esp + 0x1c ]
call sub_404953
push eax
xor edi edi
push edi
call [ GetModuleFileNameW@IAT ]
cmp [ esp + 0x14 ] edi
jne r-xdata
push [ esp + 0x14 ]
call [ wcslen@IAT ]
pop ecx
xor eax eax
jmp r-xdata
mov [ esp + 0x1b0 ] 0x1
cmp [ esp + 0x24 ] edi
je r-xdata
push [ esp + 0x20 ]
call ebx
mov [ esp + 0x20 ] edi
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esp + 0x14 ]
call [ wcslen@IAT ]
pop ecx
xor eax eax
jmp r-xdata
lea edx [ esp + 0x14 ]
call sub_404650
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_402828
mov [ esp + 0x1b4 ] 0x6
lea ecx [ esp + 0x2c ]
mov [ esp ] r--data
push ecx
mov esi eax
call sub_4027c7
pop ecx
pop ecx
mov [ esp + 0x1b0 ] 0x8
lea eax [ esp + 0x30 ]
push eax
call sub_4025e9
push [ esp + 0x28 ]
lea eax [ esp + 0x28 ]
push eax
call sub_404a52
mov [ esp + 0x1b0 ] 0x5
lea eax [ esp + 0x28 ]
push eax
call sub_4025e9
mov [ esp + 0x1b0 ] 0x4
lea eax [ esp + 0x14 ]
push eax
call sub_4025e9
mov [ esp + 0x1b0 ] 0x0
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esp + 0x24 ]
call ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x1b0 ] 0x3
lea eax [ esp + 0x2c ]
push eax
call sub_4025e9
jmp r-xdata
lea edx [ esp + 0x14 ]
call sub_404650
lea eax [ esp + 0x28 ]
push r--data
push eax
lea esi [ esp + 0x1c ]
call sub_4027c7
pop ecx
pop ecx
mov [ esp + 0x1b0 ] 0xa
push [ esp + 0x28 ]
lea eax [ esp + 0x24 ]
push eax
call sub_404a52
mov [ esp + 0x1b0 ] 0x9
lea eax [ esp + 0x28 ]
push eax
call sub_4025e9
mov [ esp + 0x1b0 ] 0x4
mov eax esi
push eax
call sub_4025e9
jmp r-xdata
push [ esp + 0x18 ]
call ebx
mov [ esp + 0x18 ] edi
sub_40255c
push 0x0
mov eax sub_408479
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov ecx rw-data
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x4
sub_40258b
push 0x0
mov eax sub_408479
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov ecx rw-data
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
mov ebx eax
push edi
mov eax esi
call sub_403981
test edi 0xffff0000
jne r-xdata
push edi
call [ wcslen@IAT ]
pop ecx
movzx eax di
push eax
push esi
call sub_40390a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x4
sub_40260e
mov ecx [ eax ]
push esi
mov esi [ edi ]
lea eax [ ecx - 0x10 ]
sub esi 0x10
cmp eax esi
je r-xdata
mov eax edi
pop esi
retn
cmp [ esi + 0xc ] 0x0
push ebx
jl r-xdata
mov ebx [ ecx - 0xc ]
push ecx
mov eax edi
call sub_403981
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
call sub_4039ef
mov ebx eax
mov eax esi
call sub_404671
add ebx 0x10
mov [ edi ] ebx
jmp r-xdata
pop ebx
sub_40264f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ wcslen@IAT ]
mov ebx r--data
push ebx
call esi
test eax eax
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
pop esi
pop ebx
leave
retn 0x4
push r--data
call esi
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
mov eax [ esi - 0xc ]
lea eax [ esi + eax * 2 ]
cmp esi eax
pop ecx
mov [ ebp - 0x14 ] eax
jae r-xdata
mov eax [ ebp - 0x4 ]
push edi
push ebx
push esi
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
inc [ ebp - 0x4 ]
lea esi [ eax + ecx * 2 ]
test esi esi
je r-xdata
xor eax eax
push esi
call [ wcslen@IAT ]
pop ecx
jmp r-xdata
mov edi [ wcsstr@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
lea esi [ esi + eax * 2 + 0x2 ]
cmp esi [ ebp - 0x14 ]
jb r-xdata
pop edi
mov edi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
imul edi [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax - 0xc ]
add edi eax
cmp edi eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] edi
jle r-xdata
mov esi [ ebp + 0x8 ]
push eax
call sub_404953
mov ecx [ ebp - 0x10 ]
lea ecx [ eax + ecx * 2 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jmp r-xdata
mov eax edi
mov [ ebp - 0x14 ] eax
jb r-xdata
push ebx
push [ ebp - 0x14 ]
call [ wcsstr@IAT ]
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_404650
mov esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax esi
sub eax [ ebp - 0x18 ]
sar eax 0x1
sub edi eax
mov eax [ ebp - 0x8 ]
sub edi edx
lea ecx [ edi + edi ]
push ecx
lea edx [ esi + edx * 2 ]
push edx
add eax eax
add eax esi
push ecx
push eax
mov [ ebp - 0x14 ] eax
call sub_40491b
mov eax [ ebp - 0x8 ]
add eax eax
push eax
push r--data
push eax
push esi
call [ memcpy_s@IAT ]
push eax
call sub_4042f4
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
add edi ecx
sub ecx [ ebp - 0xc ]
and [ esi + edi * 2 ] 0x0
add [ ebp - 0x10 ] ecx
push ebx
push eax
mov [ ebp - 0x14 ] eax
call [ wcsstr@IAT ]
mov esi eax
add esp 0x2c
test esi esi
jne r-xdata
xor eax eax
push esi
call [ wcslen@IAT ]
pop ecx
jmp r-xdata
mov edi [ ebp - 0x1c ]
lea eax [ esi + eax * 2 + 0x2 ]
cmp eax [ ebp - 0x20 ]
sub_4027c7
push 0x4
mov eax sub_40866b
call sub_4080b6
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov [ ebp - 0x10 ] edi
call sub_403081
push [ ebp + 0x8 ]
mov ecx eax
call sub_403030
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0xc ] edi
mov [ ebp - 0x10 ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call [ wcslen@IAT ]
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ esi ]
push [ ebp + 0xc ]
mov edi [ ecx - 0xc ]
push ecx
push [ ebp + 0x8 ]
mov ebx eax
call sub_4030ca
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_408155
retn
sub_402828
push 0x4
mov eax sub_40866b
call sub_4080b6
mov esi ecx
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov [ ebp - 0x10 ] edi
call sub_403081
push [ ebp + 0x8 ]
mov ecx eax
call sub_403030
mov [ ebp - 0x4 ] edi
mov edi [ esi ]
mov ebx [ edi - 0xc ]
mov esi r--data
push esi
mov [ ebp - 0x10 ] 0x1
call [ wcslen@IAT ]
push edi
push esi
push [ ebp + 0x8 ]
mov edi eax
call sub_4030ca
mov eax [ ebp + 0x8 ]
add esp 0x10
call sub_408155
retn
sub_40288b
push 0x0
mov eax sub_408637
call sub_4080b6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test [ esi + 0x24 ] 0x10
jne r-xdata
push [ esi + 0x40 ]
call ??_V@YAXPAX@Z
pop ecx
or [ ebp - 0x4 ] 0xffffffff
push esi
call sub_402fd0
call sub_408155
retn 0x4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
test eax eax
je r-xdata
and [ esi + 0x28 ] 0x0
sub_4028d5
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x1c ] edi
mov esi ecx
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ebx esi
call sub_403b0c
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
jmp r-xdata
mov edi [ ebp + 0x18 ]
lea ecx [ eax - 0x200 ]
cmp ecx 0xd
ja r-xdata
add esi 0x3c
push [ esi ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax 0x14
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
push [ ebp + 0x14 ]
mov [ esp + 0x14 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_4031f5
cmp [ esp + 0xc ] 0x0
mov [ edi ] eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
jmp r-xdata
push [ esi ]
call [ DestroyWindow@IAT ]
test eax eax
je r-xdata
cmp eax 0xf
jne r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax ebx
jmp r-xdata
mov [ esi ] edi
mov [ esi ] edi
cmp eax 0x318
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_403152
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x7
jne r-xdata
cmp eax 0x8
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x7
mov ecx 0x201
cmp eax ecx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8
jmp r-xdata
jmp r-xdata
mov ecx 0x203
cmp eax ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
call sub_4032b6
jmp r-xdata
mov [ esp + 0x14 ] ebx
call sub_4031bd
mov ecx 0x202
cmp eax ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
call sub_40334c
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
cmp eax 0x215
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
call sub_4033a9
jmp r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esi + 0x44 ]
test al 0x4
je r-xdata
push ebx
push 0x0
push [ esi + 0x4 ]
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
cmp eax 0x200
jne r-xdata
mov [ edi ] ebx
jmp r-xdata
and eax 0xfffffffb
mov [ esi + 0x44 ] eax
cmp eax 0x2a3
jne r-xdata
lea eax [ esp + 0xc ]
push eax
mov eax [ ebp + 0x14 ]
mov [ esp + 0x10 ] ebx
call sub_403419
jmp r-xdata
cmp eax 0x100
jne r-xdata
mov eax [ esi + 0x44 ]
test bl al
je r-xdata
cmp [ esp + 0xc ] 0x0
cmp eax 0x101
jne r-xdata
cmp [ ebp + 0x10 ] 0x20
mov ecx ebx
jne r-xdata
and [ edi ] 0x0
jmp r-xdata
push ebx
push 0x0
push [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
cmp eax 0x113
jne r-xdata
cmp [ ebp + 0x10 ] 0x20
mov ecx ebx
jne r-xdata
xor ecx ecx
mov eax ebx
test [ esi + 0x24 ] bl
je r-xdata
cmp eax 0x128
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax esi
call sub_40350e
jmp r-xdata
test [ esi + 0x24 ] bl
jne r-xdata
mov [ edi ] eax
je r-xdata
mov eax [ esi + 0x44 ]
test al 0x4
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x44 ]
test al 0x4
je r-xdata
or eax 0x4
test ecx ecx
jmp r-xdata
and eax 0xfffffffb
jmp r-xdata
push ebx
push 0x0
push [ esi + 0x4 ]
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
sub_402b1f
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x1c ] edi
mov esi ecx
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ebx esi
call sub_403b0c
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
jmp r-xdata
mov edi [ ebp + 0x18 ]
lea ecx [ eax - 0x200 ]
cmp ecx 0xd
ja r-xdata
add esi 0x3c
push [ esi ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax 0x14
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
push [ ebp + 0x14 ]
mov [ esp + 0x14 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_4031f5
cmp [ esp + 0xc ] 0x0
mov [ edi ] eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
jmp r-xdata
push [ esi ]
call [ DestroyWindow@IAT ]
test eax eax
je r-xdata
cmp eax 0xf
jne r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax ebx
jmp r-xdata
mov [ esi ] edi
mov [ esi ] edi
cmp eax 0x318
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40324b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x7
jne r-xdata
cmp eax 0x8
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x7
mov ecx 0x201
cmp eax ecx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8
jmp r-xdata
jmp r-xdata
mov ecx 0x203
cmp eax ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
call sub_4032b6
jmp r-xdata
mov [ esp + 0x14 ] ebx
call sub_4031bd
mov ecx 0x202
cmp eax ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
call sub_40334c
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
cmp eax 0x215
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
call sub_4033a9
jmp r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esi + 0x44 ]
test al 0x4
je r-xdata
push ebx
push 0x0
push [ esi + 0x4 ]
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
cmp eax 0x200
jne r-xdata
mov [ edi ] ebx
jmp r-xdata
and eax 0xfffffffb
mov [ esi + 0x44 ] eax
cmp eax 0x2a3
jne r-xdata
lea eax [ esp + 0xc ]
push eax
mov eax [ ebp + 0x14 ]
mov [ esp + 0x10 ] ebx
call sub_403419
jmp r-xdata
cmp eax 0x100
jne r-xdata
mov eax [ esi + 0x44 ]
test bl al
je r-xdata
cmp [ esp + 0xc ] 0x0
cmp eax 0x101
jne r-xdata
cmp [ ebp + 0x10 ] 0x20
mov ecx ebx
jne r-xdata
and [ edi ] 0x0
jmp r-xdata
push ebx
push 0x0
push [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
cmp eax 0x113
jne r-xdata
cmp [ ebp + 0x10 ] 0x20
mov ecx ebx
jne r-xdata
xor ecx ecx
mov eax ebx
test [ esi + 0x24 ] bl
je r-xdata
cmp eax 0x128
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax esi
call sub_40350e
jmp r-xdata
test [ esi + 0x24 ] bl
jne r-xdata
mov [ edi ] eax
je r-xdata
mov eax [ esi + 0x44 ]
test al 0x4
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x44 ]
test al 0x4
je r-xdata
or eax 0x4
test ecx ecx
jmp r-xdata
and eax 0xfffffffb
jmp r-xdata
push ebx
push 0x0
push [ esi + 0x4 ]
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
sub_402d68
push edi
lea edi [ esi + 0x8 ]
push 0x0
xor eax eax
call sub_404731
test eax eax
jne r-xdata
push esi
push edi
push rw-data
call [ Ordinal_ATL80_43@IAT ]
push 0x0
push sub_403dc1
push [ esp + 0x10 ]
push 0xcd
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
push 0xe
call [ SetLastError@IAT ]
or eax 0xffffffff
jmp r-xdata
pop edi
retn 0x4
sub_402db3
push 0x0
mov eax sub_4088b7
call sub_4080b6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
and [ esi + 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
add esi 0x8
push esi
call sub_4012e3
call sub_408155
retn 0x4
push eax
call [ DestroyIcon@IAT ]
and [ esi ] 0x0
sub_402dfd
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
cmp eax 0x5
push edi
jne r-xdata
cmp eax 0x84
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
inc edi
lea ecx [ esp + 0x4 ]
mov [ esp + 0x4 ] edi
call sub_4035f9
cmp [ esp + 0x4 ] 0x0
mov [ esi ] eax
je r-xdata
cmp eax 0x111
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax edx
call sub_40367c
mov [ esi ] eax
xor eax eax
mov eax edi
jmp r-xdata
xor edi edi
inc edi
cmp eax 0x14
jne r-xdata
cmp [ ebp + 0x8 ] 0x1b58
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp eax 0xf
je r-xdata
mov [ esi ] edi
jmp r-xdata
xor edi edi
mov eax edx
push edi
add edx 0xffffffe0
neg eax
push edi
sbb eax eax
push 0x10
and eax edx
push [ eax + 0x4 ]
call [ PostMessageW@IAT ]
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx edx
call sub_403bb7
mov [ esi ] eax
jmp r-xdata
cmp eax 0x318
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_402e9e
push 0x4
mov eax sub_408613
call sub_4080b6
mov esi rw-data
mov [ ebp - 0x10 ] esi
call sub_40388f
and [ ebp - 0x4 ] 0x0
call [ GetCurrentThreadId@IAT ]
and [ rw-data ] 0x0
push 0x0
mov [ rw-data ] eax
mov [ rw-data ] 0x1388
mov [ rw-data ] 0x3e8
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
call [ CoInitialize@IAT ]
test eax eax
jge r-xdata
mov [ rw-data ] 0x1
cmp eax 0x80010106
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn
push 0x1
call sub_40470c
sub_402f34
push 0x0
mov eax sub_4085ef
call sub_4080b6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push 0x0
call sub_40470c
mov eax esi
call sub_4046d2
mov ecx rw-data
call sub_404690
cmp [ esi + 0x3e ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
call sub_402ff0
call sub_408155
retn 0x4
call [ CoUninitialize@IAT ]
sub_402f7d
push esi
mov esi ecx
push edi
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
xor eax eax
cmp edi eax
jne r-xdata
mov eax edi
pop edi
pop esi
retn
cmp [ esi + 0x3c ] al
je r-xdata
push eax
push eax
push 0x12
push [ esi + 0x2c ]
call [ PostThreadMessageW@IAT ]
push [ esi + 0x30 ]
mov [ esi + 0x3d ] 0x1
call [ SetEvent@IAT ]
jmp r-xdata
sub_403052
push 0x0
mov eax sub_408479
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax 0x10
call sub_4039ef
add eax 0x10
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x8
sub_403081
mov eax [ eax ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
call [ eax + 0x10 ]
jmp r-xdata
retn
mov ecx rw-data
mov eax [ rw-data ]
jmp [ eax + 0x10 ]
test eax eax
jne r-xdata
sub_4030ca
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ edi + ebx ]
push eax
mov [ ebp - 0x4 ] eax
call sub_404953
push [ ebp + 0xc ]
mov esi eax
push edi
push esi
mov eax edi
call sub_404634
push [ ebp + 0x10 ]
lea eax [ esi + edi * 2 ]
push ebx
push eax
mov eax ebx
call sub_404634
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add esp 0x18
call sub_404650
pop esi
leave
retn
sub_40310c
push 0x4
mov eax sub_408561
call sub_4080b6
mov eax [ ebp + 0x8 ]
xor edx edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ ebp - 0x10 ] ecx
mov [ ecx + 0xc ] edx
mov [ ebp - 0x4 ] 0x1
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edx
mov [ ebp - 0x4 ] 0x2
mov ecx [ DefWindowProcW@IAT ]
mov [ eax + 0x20 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_408155
retn 0x4
sub_403152
push 0x54
mov eax sub_408885
call sub_40811f
test ecx ecx
je r-xdata
push [ esi + 0x4 ]
lea eax [ ebp - 0x5c ]
push eax
call sub_4045fd
mov [ ebp - 0x4 ] 0x1
push ecx
mov ecx [ ebp - 0x5c ]
mov eax esp
mov [ ebp - 0x60 ] esp
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call sub_4013dd
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x5c ]
push eax
call sub_4045be
push ecx
mov eax esp
mov [ ebp - 0x60 ] esp
mov [ eax ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4013dd
jmp r-xdata
xor eax eax
call sub_408169
retn
sub_4031bd
xor eax eax
cmp [ esp + 0x4 ] 0x7
push 0x1
sete al
push 0x0
push [ esi + 0x4 ]
add eax eax
xor eax [ esi + 0x44 ]
and eax 0x2
xor [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
xor eax eax
inc eax
retn 0x8
sub_4031f5
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ esi + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
push edi
push [ esi + 0x3c ]
mov [ ebp - 0x10 ] eax
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
call [ IsWindow@IAT ]
test eax eax
pop edi
je r-xdata
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
xor eax eax
inc eax
leave
retn 0x10
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x407
push [ esi + 0x3c ]
call [ SendMessageW@IAT ]
sub_40324b
push 0x54
mov eax sub_408885
call sub_40811f
test ecx ecx
je r-xdata
push [ esi + 0x4 ]
lea eax [ ebp - 0x5c ]
push eax
call sub_4045fd
mov [ ebp - 0x4 ] 0x1
push ecx
mov ecx [ ebp - 0x5c ]
mov eax esp
mov [ ebp - 0x60 ] esp
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
mov ecx esi
call sub_401808
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x5c ]
push eax
call sub_4045be
push ecx
mov eax esp
mov [ ebp - 0x60 ] esp
mov [ eax ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_401808
jmp r-xdata
xor eax eax
call sub_408169
retn
sub_4032b6
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
test [ esi + 0x24 ] 0x1
push edi
mov [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov eax esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403af1
mov [ ebp - 0x4 ] eax
push [ esi + 0x4 ]
call [ SetCapture@IAT ]
jmp r-xdata
test [ esi + 0x24 ] 0x20
je r-xdata
or [ esi + 0x44 ] 0x4
push 0x1
push ebx
push edi
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
mov edi [ esi + 0x4 ]
call [ GetCapture@IAT ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop ebx
leave
retn 0xc
push ebx
lea eax [ ebp + 0x10 ]
push eax
push ebx
push 0x16
mov edi 0xfa
mov [ ebp + 0x10 ] ebx
call [ SystemParametersInfoW@IAT ]
test eax eax
je r-xdata
push ebx
push edi
push 0x3e8
push [ esi + 0x4 ]
call [ SetTimer@IAT ]
mov edi [ ebp + 0x10 ]
inc edi
imul edi edi 0xfa
sub_40334c
push ebx
xor ebx ebx
test [ esi + 0x24 ] 0x1
jne r-xdata
push edi
mov edi [ esi + 0x4 ]
call [ GetCapture@IAT ]
cmp eax edi
je r-xdata
push [ esp + 0x10 ]
mov eax esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_403af1
mov ebx eax
mov eax [ esi + 0x44 ]
test al 0x4
pop edi
jne r-xdata
push edi
call [ SetCapture@IAT ]
mov eax ebx
pop ebx
retn 0xc
push 0x1
push 0x0
push [ esi + 0x4 ]
or eax 0x4
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
sub_4033a9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov bl [ esi + 0x24 ]
and bl 0x1
push edi
jne r-xdata
mov edi [ esi + 0x4 ]
call [ GetCapture@IAT ]
cmp eax edi
jne r-xdata
push [ ebp + 0x10 ]
mov eax esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403af1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop ebx
leave
retn 0xc
test bl bl
je r-xdata
call [ ReleaseCapture@IAT ]
test [ esi + 0x44 ] 0x4
je r-xdata
push edi
call [ GetDlgCtrlID@IAT ]
push [ esi + 0x4 ]
mov edi eax
call [ GetParent@IAT ]
push [ esi + 0x4 ]
movzx ecx di
push ecx
push 0x111
push eax
call [ SendMessageW@IAT ]
sub_403419
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ esi + 0x4 ]
push edi
mov edi eax
mov [ ebp - 0x8 ] ebx
call [ GetCapture@IAT ]
cmp eax ebx
jne r-xdata
xor ebx ebx
inc ebx
test [ esi + 0x24 ] bl
je r-xdata
movsx eax di
mov [ ebp - 0xc ] eax
shr edi 0x10
movsx eax di
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ ClientToScreen@IAT ]
and [ ebp - 0x24 ] 0x0
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x24 ]
push eax
push [ esi + 0x4 ]
call [ GetWindowRect@IAT ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x24 ]
push [ ebp - 0xc ]
push eax
call [ PtInRect@IAT ]
mov ecx [ esi + 0x44 ]
neg eax
sbb eax eax
xor ebx ebx
mov edx ecx
shr edx 0x2
inc ebx
neg eax
and edx ebx
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
pop edi
mov eax ebx
pop ebx
leave
retn 0x4
mov eax [ esi + 0x44 ]
test bl al
jne r-xdata
shl eax 0x2
xor eax ecx
push ebx
and eax 0x4
push 0x0
push [ esi + 0x4 ]
xor eax ecx
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
jmp r-xdata
push ebx
push 0x0
push [ ebp - 0x8 ]
or eax ebx
mov [ esi + 0x44 ] eax
call [ InvalidateRect@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x10
mov [ ebp - 0x10 ] 0x2
call [ _TrackMouseEvent@IAT ]
sub_40350e
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax 0x3e8
sub ecx eax
push edi
je r-xdata
push eax
push [ esi + 0x4 ]
call [ KillTimer@IAT ]
test [ esi + 0x44 ] 0x4
je r-xdata
dec ecx
jne r-xdata
pop edi
xor eax eax
pop esi
leave
retn
push ebx
push [ esi + 0x4 ]
call [ GetDlgCtrlID@IAT ]
push [ esi + 0x4 ]
mov edi eax
call [ GetParent@IAT ]
push [ esi + 0x4 ]
movzx ecx di
push ecx
push 0x111
push eax
call [ SendMessageW@IAT ]
xor edi edi
push edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0xa
mov ebx 0xfa
mov [ ebp - 0x4 ] 0x28
call [ SystemParametersInfoW@IAT ]
test eax eax
je r-xdata
test [ esi + 0x44 ] 0x4
je r-xdata
push edi
push ebx
push 0x3e9
push [ esi + 0x4 ]
call [ SetTimer@IAT ]
pop ebx
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0xa
mov eax 0x2710
cdq
add ecx 0x19
idiv ecx
mov ebx eax
mov esi [ esi + 0x4 ]
call [ GetCapture@IAT ]
cmp eax esi
je r-xdata
push [ esi + 0x4 ]
call [ GetDlgCtrlID@IAT ]
push [ esi + 0x4 ]
mov edi eax
call [ GetParent@IAT ]
push [ esi + 0x4 ]
movzx ecx di
push ecx
push 0x111
push eax
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x3e9
push esi
call [ KillTimer@IAT ]
jmp r-xdata
sub_4035f9
push ebp
mov ebp esp
and [ ecx ] 0x0
movsx ecx ax
sub esp 0x14
shr eax 0x10
test ecx ecx
push esi
mov esi edx
movsx eax ax
jle r-xdata
xor eax eax
pop esi
leave
retn
test eax eax
jle r-xdata
lea eax [ esi - 0x20 ]
neg esi
sbb esi esi
and esi eax
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x4 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0xc ]
neg eax
push eax
mov eax [ ebp - 0x10 ]
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ OffsetRect@IAT ]
inc [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
push 0x5
push 0x5
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CreateRoundRectRgn@IAT ]
push 0x1
push eax
push [ esi + 0x4 ]
call [ SetWindowRgn@IAT ]
push 0x1
push 0x0
push [ esi + 0x4 ]
call [ InvalidateRect@IAT ]
sub_40367c
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx eax
add eax 0xffffffe0
neg ecx
sbb ecx ecx
and ecx eax
push [ ecx + 0x4 ]
call [ GetWindowRect@IAT ]
movsx esi di
sub esi [ ebp - 0x1c ]
shr edi 0x10
movsx eax di
sub eax [ ebp - 0x18 ]
cmp eax 0x1b
mov [ ebp - 0x8 ] eax
jge r-xdata
xor eax eax
inc eax
mov edi [ GetSystemMetrics@IAT ]
push 0x32
mov [ ebp - 0x4 ] 0x2
call edi
push 0x1b
pop ecx
sub ecx eax
mov eax ecx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
cmp esi 0x4
jl r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
push 0x31
call edi
add eax 0x4
cmp esi eax
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x8 ] ebx
jl r-xdata
push 0x32
call edi
add eax ebx
cmp [ ebp - 0x8 ] eax
jg r-xdata
mov [ ebp - 0x4 ] 0x5
sub_403709
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebx ] 0x0
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi r--data
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0xc ]
push ecx
movsw [ edi ] [ esi ]
call sub_4044f8
xor edi edi
jmp r-xdata
mov esi eax
cmp esi edi
pop ecx
jne r-xdata
push r--data
mov eax esi
call sub_404463
test eax eax
pop ecx
je r-xdata
mov al 0x1
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push r--data
mov eax esi
call sub_404463
test eax eax
pop ecx
je r-xdata
push edi
push 0x1
push rw-data
call [ Ordinal_ATL80_22@IAT ]
call eax
cmp eax edi
jl r-xdata
push 0x1
call sub_402091
cmp eax edi
mov [ ebx ] eax
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax esi
call sub_4044f8
xor al al
jmp r-xdata
push edi
call sub_402091
cmp eax edi
mov [ ebx ] eax
jl r-xdata
push edi
push 0x1
push rw-data
call [ Ordinal_ATL80_18@IAT ]
cmp eax edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40773c
leave
retn 0x4
mov [ ebx ] eax
mov ecx [ rw-data ]
cmp ecx edi
je r-xdata
push [ rw-data ]
call ecx
pop ecx
jmp r-xdata
sub_4037e2
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push 0x1
push 0x4
mov edi rw-data
push edi
call [ Ordinal_ATL80_17@IAT ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
mov [ rw-data ] bl
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jl r-xdata
mov esi [ GetMessageW@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
call esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
call sub_403d28
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
push edi
call [ Ordinal_ATL80_20@IAT ]
cmp [ rw-data ] bl
mov esi eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call [ DispatchMessageW@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
call esi
test eax eax
jg r-xdata
mov [ ebp - 0x4 ] 0x80004005
jmp r-xdata
mov [ ebp - 0x8 ] esi
push [ rw-data ]
call [ Sleep@IAT ]
sub_40388f
push 0x4
mov eax sub_408526
call sub_4080b6
mov esi rw-data
mov ebx rw-data
mov ecx esi
mov [ ebp - 0x10 ] ebx
call sub_404404
xor edi edi
mov ecx esi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] edi
call sub_404418
test eax eax
jge r-xdata
mov [ rw-data ] 0x24
mov [ rw-data ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
or [ ebp - 0x4 ] 0xffffffff
mov eax ebx
call sub_408155
retn
sub_40390a
push ebx
push ebp
push esi
push edi
xor edi edi
mov ebx rw-data
push edi
mov ecx ebx
call sub_407356
xor ebp ebp
inc ebp
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
test edi edi
jne r-xdata
xor esi esi
mov eax [ esp + 0x18 ]
shr eax 0x4
inc eax
push edi
movzx eax ax
push eax
push 0x6
push esi
call [ FindResourceExW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x18 ]
push esi
push [ esp + 0x1c ]
call sub_403ca2
xor eax eax
jmp r-xdata
push ebp
mov ecx ebx
call sub_407356
inc ebp
push eax
mov eax [ esp + 0x1c ]
push esi
call sub_404329
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test esi esi
jne r-xdata
sub_403981
push ebp
mov ebp esp
push ecx
test ebx ebx
push esi
mov esi eax
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
call sub_4043c4
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax - 0xc ]
sub edi eax
push ebx
mov [ ebp - 0x4 ] ecx
sar edi 0x1
call sub_404953
cmp edi [ ebp - 0x4 ]
ja r-xdata
push 0x80070057
call sub_40493b
pop esi
leave
retn 0x4
push [ ebp + 0x8 ]
push ebx
push eax
mov eax ebx
call sub_404634
add esp 0xc
lea ecx [ ebx + ebx ]
push ecx
lea edx [ eax + edi * 2 ]
push edx
push ecx
push eax
call [ memmove_s@IAT ]
add esp 0x10
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404650
pop edi
sub_4039ef
push esi
mov esi eax
mov ecx [ esi ]
mov eax [ ecx ]
push edi
call [ eax + 0x10 ]
lea edx [ esi + 0xc ]
cmp [ edx ] 0x0
jl r-xdata
mov edx [ eax ]
push 0x2
push [ esi + 0x4 ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
add esi 0x10
inc eax
push esi
push eax
lea ecx [ edi + 0x10 ]
push ecx
call sub_404634
add esp 0xc
jmp sub_4043b9
xor eax eax
mov edi esi
inc eax
[ edx ] eax
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_403a47
mov eax [ esp + 0xc ]
test eax eax
push edi
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edi [ eax + 0xc ]
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push 0x0
push [ rw-data ]
sub edi ecx
push [ esp + 0x1c ]
sub eax edx
push [ esp + 0x18 ]
push edi
push eax
push ecx
push edx
push 0x0
push 0x0
push r--data
push 0x0
call [ CreateWindowExW@IAT ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
pop edi
retn 0x10
mov eax rw-data
sub_403a93
push ebp
mov ebp esp
sub esp 0x2c
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call memset
and [ ebp - 0x28 ] 0x0
add esp 0xc
push esi
mov [ ebp - 0x2c ] 0x2c
call [ GetParent@IAT ]
or [ ebp - 0x28 ] 0x1
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push 0x432
push [ eax ]
mov [ ebp - 0x20 ] esi
call [ SendMessageW@IAT ]
leave
retn 0x8
sub_403b0c
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push 0xfffffff0
lea edi [ ebx + 0x4 ]
push [ edi ]
call [ GetWindowLongW@IAT ]
mov ecx eax
or ecx 0xb
cmp eax ecx
je r-xdata
push ecx
mov eax esp
and [ eax ] 0x0
push ecx
mov eax esp
and [ eax ] 0x0
push [ edi ]
lea esi [ ebx + 0x3c ]
push esi
call sub_403a47
push [ esi ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push ecx
push 0xfffffff0
push [ edi ]
call [ SetWindowLongW@IAT ]
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
pop edi
pop esi
leave
retn
test [ ebx + 0x24 ] 0x8
je r-xdata
push 0x0
push 0x1
push 0x401
push [ esi ]
call [ SendMessageW@IAT ]
push ecx
mov ecx [ ebx + 0x40 ]
mov eax esp
mov [ eax ] ecx
push esi
mov esi [ edi ]
call sub_403a93
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ ImageList_GetIconSize@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov esi edi
call sub_404d11
sub_403bb7
push 0x80
mov eax sub_408da9
call sub_40811f
mov esi ecx
lea eax [ esi - 0x20 ]
neg esi
sbb esi esi
and esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ esi + 0x4 ]
lea eax [ ebp - 0x58 ]
push eax
call sub_4045fd
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x8c ]
push eax
lea edx [ ebp - 0x48 ]
call sub_404c8f
mov [ ebp - 0x4 ] 0x3
push ecx
mov ecx [ ebp - 0x8c ]
mov eax esp
mov [ ebp - 0x5c ] esp
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x3
mov edi esi
call sub_406711
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x8c ]
push eax
call sub_404c12
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x58 ]
push eax
call sub_4045be
and [ ebp - 0x6c ] 0x0
xor eax eax
lea edi [ ebp - 0x68 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x6c ]
push eax
push [ esi + 0x4 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8c ]
push eax
lea edx [ ebp - 0x6c ]
call sub_404c8f
and [ ebp - 0x4 ] 0x0
push ecx
mov ecx [ ebp - 0x8c ]
mov eax esp
mov [ ebp - 0x5c ] esp
mov [ eax ] ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov edi esi
call sub_406711
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8c ]
push eax
call sub_404c12
jmp r-xdata
xor eax eax
call sub_408169
retn 0x4
sub_403ca2
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shr eax 0x4
push edi
inc eax
movzx eax ax
push 0x6
push eax
push [ ebp + 0xc ]
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_404329
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
pop edi
pop ebp
retn 0xc
push ebx
movzx ebx [ edi ]
push esi
mov esi [ ebp + 0x8 ]
push ebx
call sub_404953
mov esi eax
movzx eax [ edi ]
add edi 0x2
cmp eax 0xffffffff
jne r-xdata
add eax eax
push eax
push edi
lea eax [ ebx + ebx ]
push eax
push esi
call [ memcpy_s@IAT ]
push eax
call sub_4042f4
mov edx [ ebp + 0x8 ]
add esp 0x14
mov eax ebx
call sub_404650
xor eax eax
pop esi
inc eax
pop ebx
push edi
call [ wcslen@IAT ]
pop ecx
inc eax
sub_403d28
push ecx
push esi
xor esi esi
push esi
push esi
push esi
push esi
call [ CreateEventW@IAT ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
push esi
push rw-data
push sub_403d74
push esi
push esi
call [ CreateThread@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
pop edi
push [ rw-data ]
call [ CloseHandle@IAT ]
pop esi
pop ecx
retn
sub_403d74
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ WaitForSingleObject@IAT ]
xor ebx ebx
push [ esi + 0x34 ]
mov [ esi + 0x3d ] bl
push [ esi + 0x30 ]
call edi
test eax eax
je r-xdata
cmp [ esi + 0x3d ] bl
jne r-xdata
push 0xffffffff
push [ esi + 0x30 ]
call edi
cmp [ esi + 0x8 ] ebx
jne r-xdata
push [ esi + 0x30 ]
call [ CloseHandle@IAT ]
push ebx
push ebx
push 0x12
push [ esi + 0x2c ]
call [ PostThreadMessageW@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
sub_403dc1
push esi
push rw-data
call [ Ordinal_ATL80_44@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x10
mov eax [ esi ]
push ebx
mov ebx [ esp + 0xc ]
push edi
push esi
mov ecx esi
mov [ esi + 0x4 ] ebx
call [ eax + 0x8 ]
lea edi [ esi + 0x8 ]
call sub_404731
mov esi [ esi + 0x14 ]
push esi
push 0x4
push ebx
call [ SetWindowLongW@IAT ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push ebx
call esi
pop edi
pop ebx
sub_403e0e
push edi
mov edi eax
cmp edi 0x4e
ja r-xdata
cmp edi 0x111
je r-xdata
je r-xdata
test esi esi
je r-xdata
cmp edi 0x113
jbe r-xdata
mov eax [ esi ]
jmp r-xdata
cmp edi 0x2b
je r-xdata
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax esi
cmp edi 0x115
jbe r-xdata
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
cmp edi 0x2c
je r-xdata
pop edi
retn 0x4
push esi
push ebx
add edi 0x2000
push edi
push eax
call [ SendMessageW@IAT ]
cmp edi 0x131
jbe r-xdata
mov eax [ esi + 0x14 ]
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x2d
je r-xdata
cmp edi 0x138
jbe r-xdata
push [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
je r-xdata
jbe r-xdata
cmp edi 0x210
jne r-xdata
push [ ecx + 0x4 ]
call [ GetDlgItem@IAT ]
jmp r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
cmp edi 0x2f
jbe r-xdata
movzx eax bx
dec eax
cmp eax 0x1
jbe r-xdata
cmp edi 0x39
jne r-xdata
mov eax ebx
shr eax 0x10
push eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
sub_403ed3
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp + 0x8 ]
push ecx
push [ ebp + 0x14 ]
mov [ ebp + 0xc ] edx
push ebx
lea edx [ ebp - 0x24 ]
push edi
mov [ esi + 0x18 ] edx
mov edx [ esi ]
push eax
mov ecx esi
mov [ ebp - 0x8 ] 0x24
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
call [ edx ]
test eax eax
jne r-xdata
mov eax [ esi + 0x1c ]
test al 0x1
je r-xdata
cmp edi 0x82
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x18 ] eax
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
mov eax [ esi + 0x4 ]
mov edi [ GetWindowLongW@IAT ]
push 0xfffffffc
push eax
call edi
push [ ebp + 0x14 ]
mov [ ebp + 0x10 ] eax
push ebx
push 0x82
mov eax esi
call sub_403af1
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x20 ]
cmp eax [ DefWindowProcW@IAT ]
je r-xdata
push [ ebp + 0x14 ]
mov eax esi
push ebx
push edi
call sub_403af1
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x1c ] eax
mov eax [ esi ]
push ecx
mov ecx esi
mov [ esi + 0x4 ] edx
mov [ esi + 0x18 ] edx
call [ eax + 0xc ]
jmp r-xdata
or [ esi + 0x1c ] 0x1
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call edi
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ esi + 0x20 ]
push 0xfffffffc
push [ esi + 0x4 ]
call [ SetWindowLongW@IAT ]
sub_403fcf
push 0x0
mov eax sub_4086b5
call sub_4080b6
mov esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea ecx [ esi + 0x4 ]
push [ ebp + 0xc ]
mov [ esi ] edi
push edi
call sub_404049
and [ ebp - 0x4 ] 0x0
push edi
push edi
push esi
call sub_402b1e
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0xc
sub_40400c
push 0x0
mov eax sub_4086b5
call sub_4080b6
mov esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea ecx [ esi + 0x4 ]
push [ ebp + 0xc ]
mov [ esi ] edi
push edi
call sub_4040c5
and [ ebp - 0x4 ] 0x0
push edi
push edi
push esi
call sub_402b1e
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0xc
sub_404049
push 0x8
mov eax sub_408410
call sub_4080e9
mov esi ecx
xor ebx ebx
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
push 0x18
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] cl
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x10 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x14 ] edx
mov [ ebp - 0x4 ] cl
jmp r-xdata
mov [ ebp - 0x4 ] bl
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0xc
sub_4040c5
push 0x8
mov eax sub_4083e3
call sub_4080e9
mov esi ecx
xor ebx ebx
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
push 0x18
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] cl
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x10 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x14 ] edx
mov [ ebp - 0x4 ] cl
jmp r-xdata
mov [ ebp - 0x4 ] bl
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0xc
sub_404186
push 0x4
mov eax sub_4083b6
call sub_4080b6
mov esi ecx
mov [ ebp - 0x10 ] esi
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
call sub_408155
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_4041b8
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
xor edi edi
lea esi [ ecx + 0x28 ]
cmp [ esi ] edi
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
mov esi [ esi ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
push esi
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
mov edi eax
test edi edi
jl r-xdata
pop ebx
retn 0x4
mov eax edi
pop edi
pop esi
sub_404216
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x14 ]
push edi
mov edi [ esi + 0x18 ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x14 ]
lea edx [ ebp - 0x24 ]
push [ ebp + 0x10 ]
mov [ esi + 0x18 ] edx
mov edx [ esi ]
push ebx
push eax
mov ecx esi
mov [ ebp - 0x8 ] 0x24
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ebx
call [ edx ]
mov [ esi + 0x18 ] edi
xor edi edi
cmp eax edi
mov [ ebp + 0x10 ] eax
je r-xdata
cmp ebx 0x82
jne r-xdata
cmp ebx 0x2e
jb r-xdata
mov eax [ esi + 0x1c ]
test al 0x1
je r-xdata
or [ esi + 0x1c ] 0x1
push [ ebp + 0x14 ]
push edi
push [ esi + 0x4 ]
call [ SetWindowLongW@IAT ]
jmp r-xdata
cmp ebx 0x2f
jbe r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ esi + 0x18 ] edi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp ebx 0x37
je r-xdata
mov ecx [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x1c ] eax
mov eax [ esi ]
push ecx
mov ecx esi
mov [ esi + 0x4 ] edi
call [ eax + 0xc ]
cmp ebx 0x39
je r-xdata
cmp ebx 0x110
je r-xdata
cmp ebx 0x131
jbe r-xdata
cmp ebx 0x138
ja r-xdata
sub_4042f4
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
cmp eax 0xc
je r-xdata
push 0x8007000e
jmp r-xdata
cmp eax 0x16
je r-xdata
call sub_40493b
push 0x80070057
jmp r-xdata
cmp eax 0x22
je r-xdata
cmp eax 0x50
je r-xdata
push 0x80004005
sub_404329
push esi
push [ esp + 0xc ]
mov esi eax
push [ esp + 0xc ]
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push edi
push eax
call [ LockResource@IAT ]
mov edi eax
test edi edi
je r-xdata
pop esi
retn
xor eax eax
jmp r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ SizeofResource@IAT ]
add eax edi
and esi 0xf
jbe r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp edi eax
jae r-xdata
mov ax [ edi ]
neg ax
sbb eax eax
and eax edi
dec esi
movzx ecx [ edi ]
lea edi [ edi + ecx * 2 + 0x2 ]
jne r-xdata
sub_4043c4
mov ecx [ esi ]
lea eax [ ecx - 0x10 ]
xor edx edx
cmp [ eax + 0x4 ] edx
push edi
mov edi [ eax ]
je r-xdata
pop edi
retn
cmp [ eax + 0xc ] edx
jge r-xdata
call sub_404671
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
cmp [ ecx - 0x8 ] edx
jge r-xdata
mov [ ecx - 0xc ] edx
mov eax [ esi ]
mov [ eax ] dx
pop edi
retn
push 0x80070057
call sub_40493b
sub_404463
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ CharUpperW@IAT ]
mov ebx eax
movzx eax [ ebx ]
push edi
push eax
call esi
movzx edi ax
movzx eax [ ebp ]
push eax
call esi
test di di
movzx eax ax
je r-xdata
test ax ax
je r-xdata
cmp di ax
jne r-xdata
xor eax eax
cmp ax 0x20
je r-xdata
test di di
je r-xdata
cmp di 0x20
je r-xdata
cmp ax 0x9
je r-xdata
cmp di 0x20
je r-xdata
cmp di 0x9
je r-xdata
cmp di ax
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
cmp di 0x9
jne r-xdata
mov edi [ CharNextW@IAT ]
push ebx
call edi
push ebp
mov ebx eax
call edi
mov ebp eax
movzx eax [ ebx ]
push eax
call esi
movzx edi ax
movzx eax [ ebp ]
push eax
call esi
test di di
movzx eax ax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4044f8
push esi
push edi
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov esi [ CharNextW@IAT ]
mov eax [ esp + 0xc ]
jmp r-xdata
test eax eax
jne r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
push edi
call esi
mov edi eax
test edi edi
jne r-xdata
cmp [ edi ] cx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
push edi
call esi
jmp r-xdata
push eax
call esi
pop edi
pop esi
retn
sub_404539
push 0x0
mov eax sub_408183
call sub_4080b6
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 2 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ esi ]
cmp ebx edx
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
inc [ esi + 0x4 ]
xor eax eax
inc eax
mov cx [ ebx ]
mov [ eax ] cx
test eax eax
jne r-xdata
lea edi [ edx + eax * 2 ]
cmp ebx edi
jae r-xdata
lea edi [ ecx + ecx ]
test edi edi
jl r-xdata
xor edi edi
inc edi
jmp r-xdata
push 0x80004005
call sub_40493b
xor eax eax
jmp r-xdata
cmp edi 0x3fffffff
ja r-xdata
push 0x2
push edi
push edx
call [ _recalloc@IAT ]
add esp 0xc
test eax eax
je r-xdata
call sub_408155
retn
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_4045be
push 0x0
mov eax sub_408393
call sub_4080b6
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push eax
push [ esi + 0x4 ]
call [ EndPaint@IAT ]
and [ esi ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
call sub_408155
retn 0x4
and [ esi ] 0x0
push eax
call [ DeleteDC@IAT ]
sub_4045fd
push 0x0
mov eax sub_408393
call sub_4080b6
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x8 ]
push ecx
push eax
mov [ esi + 0x4 ] eax
call [ BeginPaint@IAT ]
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x8
sub_404690
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push ebx
mov ebx [ esi + 0x8 ]
cmp ebx [ esi + 0xc ]
jae r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop ebx
push edi
add ebx 0x4
cmp ebx [ esi + 0xc ]
jb r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
pop edi
and [ edi + 0x10 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4046d2
push esi
mov esi eax
push edi
lea edi [ esi + 0x4 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call [ Ordinal_ATL80_64@IAT ]
and [ esi + 0xc ] 0x0
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
and [ edi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40470c
push esi
mov esi [ rw-data ]
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
add esi 0x4
push [ esp + 0x8 ]
call [ eax + 0x20 ]
sub_404731
cmp [ edi + 0xc ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ esp + 0x8 ]
sub esi eax
push 0xd
sub esi 0xd
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] esi
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
xor eax eax
inc eax
call j_sub_4075c6
test eax eax
mov [ edi + 0xc ] eax
je r-xdata
pop esi
retn 0x4
sub_4047a1
push 0x70
mov eax sub_40834a
call sub_4080b6
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
xor ax ax
cmp [ ebp + 0x10 ] esi
je r-xdata
cmp [ ebx + 0x40 ] si
jne r-xdata
cmp [ ebx + 0x30 ] esi
je r-xdata
mov eax rw-data
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] esi
push eax
call [ EnterCriticalSection@IAT ]
cmp [ ebx + 0x40 ] si
mov [ ebp - 0x18 ] 0x1
jne r-xdata
mov ax [ ebx + 0x40 ]
jmp r-xdata
mov eax [ ebx + 0x34 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_404bfb
xor esi esi
mov eax [ ebx + 0x30 ]
cmp eax esi
je r-xdata
call sub_408155
retn
cmp [ ebx + 0x3c ] esi
je r-xdata
mov ecx [ ebx + 0x28 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x4c ]
push ecx
push eax
push esi
mov esi [ GetClassInfoExW@IAT ]
mov [ ebp - 0x4c ] 0x30
call esi
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor eax eax
jmp r-xdata
push 0xc
pop ecx
lea esi [ ebp - 0x4c ]
mov edi ebx
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x34 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
push ecx
call esi
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
push 0xc
pop ecx
lea edx [ ebp - 0x7c ]
push edx
mov esi ebx
lea edi [ ebp - 0x7c ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x14 ]
push eax
push ecx
call [ GetClassInfoExW@IAT ]
test ax ax
mov [ ebx + 0x40 ] ax
jne r-xdata
push ebx
push r--data
lea esi [ ebx + 0x42 ]
push 0x25
push esi
call [ swprintf_s@IAT ]
add esp 0x10
mov [ ebx + 0x28 ] esi
push [ ebx + 0x38 ]
push eax
call [ LoadCursorW@IAT ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebx + 0x4 ] 0xffffbfff
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x14 ] eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_404bfb
push ebx
call [ RegisterClassExW@IAT ]
movzx eax ax
lea ebx [ ebp - 0x10 ]
mov esi rw-data
mov [ ebp - 0x10 ] eax
call sub_404539
mov ecx [ ebp + 0xc ]
mov ax [ ebp - 0x10 ]
mov [ ecx + 0x40 ] ax
mov ebx ecx
sub_404953
mov eax [ esi ]
xor ecx ecx
sub eax 0x10
inc ecx
sub ecx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub eax [ esp + 0x4 ]
or ecx eax
jge r-xdata
mov eax [ esi ]
retn 0x4
mov eax [ esp + 0x4 ]
mov ecx esi
call sub_404979
sub_404979
push esi
mov esi ecx
push edi
mov edi eax
mov eax [ esi ]
mov ecx [ eax - 0xc ]
sub eax 0x10
cmp ecx edi
jle r-xdata
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov edi ecx
mov eax [ eax + 0x8 ]
cmp eax edi
jge r-xdata
push edi
push esi
call sub_4049c2
jmp r-xdata
pop edi
pop esi
retn
mov edx eax
mov eax 0x400
cmp edx eax
jle r-xdata
add edx edx
add edx eax
jmp r-xdata
call sub_404a28
mov edx edi
cmp edx edi
jge r-xdata
sub_4049c2
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov ecx [ esi ]
mov eax [ ecx ]
push edi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
mov edx [ eax ]
push 0x2
push [ ebp + 0xc ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp ebx eax
jge r-xdata
call sub_4043b9
lea ecx [ esi + 0x10 ]
push ecx
inc eax
push eax
lea ebx [ edi + 0x10 ]
push ebx
call sub_404634
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
add esp 0xc
mov eax esi
call sub_404671
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x8
mov eax ebx
sub_404a28
mov eax [ esi ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
mov ecx [ eax ]
jge r-xdata
jmp sub_4043b9
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
call [ edi + 0x8 ]
test eax eax
pop edi
jne r-xdata
add eax 0x10
mov [ esi ] eax
retn
sub_404a52
cmp [ esp + 0x8 ] 0x0
jne r-xdata
push [ esp + 0x8 ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ esp + 0xc ]
mov eax [ esp + 0xc ]
push 0x1
push 0x0
push r--data
push [ eax ]
call [ RegSetValueExW@IAT ]
retn 0x8
push 0x80004005
call sub_40493b
sub_404a8e
push ebp
mov ebp esp
push ecx
push edi
lea eax [ ebp + 0x8 ]
push eax
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x2001f
push edi
push edi
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
push 0x80000001
call [ RegCreateKeyExW@IAT ]
cmp eax edi
jne r-xdata
pop edi
leave
retn 0x4
mov ecx [ esi ]
xor eax eax
cmp ecx edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi ] ecx
push ecx
call [ RegCloseKey@IAT ]
mov [ esi ] edi
sub_404ae7
push 0x4
mov eax sub_408327
call sub_4080b6
mov esi ecx
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
call [ Ordinal_ATL80_61@IAT ]
mov edi eax
test edi edi
jge r-xdata
test esi esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push [ ebp - 0x10 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x14 ]
mov esi eax
test esi esi
jge r-xdata
jmp r-xdata
mov eax edi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp - 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ Ordinal_ATL80_23@IAT ]
mov esi eax
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
call sub_408155
retn 0x8
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0xc ]
add esi 0x8
sub_404bd4
push 0x0
mov eax sub_4082e2
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_408155
retn 0x4
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404c12
push 0x0
mov eax sub_4084db
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x14 ]
push 0xcc0020
push eax
push ecx
push [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x10 ]
sub edx ecx
push edx
push eax
push ecx
push [ esi + 0x4 ]
call [ BitBlt@IAT ]
push [ esi + 0x1c ]
push [ esi ]
call [ SelectObject@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
call sub_408155
retn 0x4
and [ esi ] 0x0
push eax
call [ DeleteDC@IAT ]
and [ esi + 0x18 ] 0x0
sub_404c8f
push 0x0
mov eax sub_4084db
call sub_4080b6
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebx ] eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
push [ ebx + 0x4 ]
mov [ ebx + 0x1c ] eax
mov esi edx
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ CreateCompatibleDC@IAT ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
mov [ ebx ] eax
mov eax [ ebx + 0x14 ]
sub eax [ ebx + 0xc ]
push eax
push ecx
push edx
call [ CreateCompatibleBitmap@IAT ]
push eax
mov [ ebx + 0x18 ] eax
push [ ebx ]
call [ SelectObject@IAT ]
mov ecx [ ebx + 0x8 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebx + 0xc ]
push 0x0
neg eax
push eax
neg ecx
push ecx
push [ ebx ]
call [ SetViewportOrgEx@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov eax ebx
call sub_408155
retn 0x4
sub_404d11
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
push [ esi ]
mov edi ecx
call [ GetClientRect@IAT ]
test eax eax
jne r-xdata
cmp edi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
mov [ ebp - 0xc ] edi
pop edi
pop ebx
leave
retn
mov edi [ GetWindowLongW@IAT ]
push 0xfffffff0
push [ esi ]
call edi
test eax 0x40000000
jne r-xdata
mov [ ebp - 0x8 ] ebx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call [ GetMenu@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
push 0x6
push eax
push ecx
xor eax eax
push eax
push eax
push eax
push [ esi ]
call [ SetWindowPos@IAT ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push 0xffffffec
push [ esi ]
call edi
push 0xfffffff0
push [ esi ]
mov ebx eax
call edi
push ebx
push [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ AdjustWindowRectEx@IAT ]
test eax eax
je r-xdata
sub_404daf
push 0x2c
mov eax sub_408833
call sub_4080e9
mov esi ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push [ esi ]
call [ PathIsDirectoryW@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
call sub_403052
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov edi [ eax - 0xc ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x18 ] eax
push eax
lea esi [ ebp - 0x14 ]
call sub_404953
mov [ eax + edi * 2 ] bx
mov eax [ ebp - 0x18 ]
mov edx esi
call sub_404650
push 0x1e
push ebx
lea eax [ ebp - 0x38 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] 0x3
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] 0x614
mov [ ebp - 0x26 ] ebx
lea eax [ ebp - 0x38 ]
push eax
call [ SHFileOperationW@IAT ]
mov esi eax
neg esi
sbb esi esi
inc esi
mov [ ebp - 0x4 ] bl
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
mov eax esi
jmp r-xdata
push [ esi ]
call [ DeleteFileW@IAT ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
call sub_408155
retn
sub_404e70
push 0x8
mov eax sub_408a94
call sub_4080b6
mov edi [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_404f25
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
push 0x2e
push [ ebp - 0x10 ]
call [ wcsrchr@IAT ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_403052
sub eax [ ebp - 0x10 ]
sar eax 0x1
cmp eax 0xffffffff
je r-xdata
push edi
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx eax
call sub_405637
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_4025e9
mov eax edi
call sub_408155
retn
sub_404ede
push 0x4
mov eax sub_40866b
call sub_4080b6
mov esi ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push 0x2e
call sub_4055bc
cmp eax 0xffffffff
je r-xdata
push esi
push edi
call sub_403052
push edi
lea ecx [ eax + 0x1 ]
push esi
call sub_4055db
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax edi
call sub_408155
retn
sub_404f25
push 0x10
mov eax sub_408a56
call sub_4080b6
mov esi ecx
and [ ebp - 0x18 ] 0x0
mov eax [ esi ]
mov edi [ eax - 0xc ]
test edi edi
jle r-xdata
push [ ebp + 0x8 ]
mov edi r--data
call sub_40258b
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
call sub_40255c
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax - 0xc ]
lea ecx [ eax - 0x1 ]
mov eax esi
call sub_4056d9
movzx eax ax
cmp ax 0x5c
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
lea ecx [ edi - 0x1 ]
push eax
call sub_405637
mov [ ebp - 0x4 ] 0x2
lea edi [ ebp - 0x10 ]
call sub_40260e
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x1c ]
push eax
call sub_4025e9
cmp ax 0x2f
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_403052
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_4025e9
jmp r-xdata
cmp ebx [ eax - 0xc ]
jg r-xdata
mov eax esi
lea edi [ ebp - 0x10 ]
call sub_40260e
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_408155
retn
push 0x80070057
call sub_40493b
movzx eax [ eax + ebx * 2 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x14 ]
call sub_405688
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x4
mov edi esi
call sub_40260e
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x1c ]
push eax
call sub_4025e9
dec ebx
js r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x10 ]
mov ebx [ eax - 0xc ]
dec ebx
js r-xdata
mov eax [ ebp - 0x10 ]
mov esi [ eax - 0xc ]
cmp ebx esi
jg r-xdata
movzx ecx [ eax + ebx * 2 ]
movzx edx cx
cmp dx 0x5c
je r-xdata
cmp ebx esi
jg r-xdata
movzx ecx cx
cmp cx 0x2f
jne r-xdata
sub_405077
push ebp
sub esp 0x608
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x608 ] eax
push 0x20
mov eax sub_4089ed
call sub_4080b6
mov eax [ rw-data ]
mov edx [ eax - 0xc ]
mov esi ecx
mov eax [ esi ]
cmp [ eax - 0xc ] edx
mov [ ebp - 0x2c ] esi
jle r-xdata
xor al al
mov ecx [ eax - 0xc ]
lea eax [ ebp - 0x20 ]
push eax
sub ecx edx
push esi
call sub_405637
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_403052
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov esi 0x1fe
lea edi [ ebp + 0x602 ]
push esi
mov [ ebp + 0x600 ] bx
stosd [ edi ]
lea eax [ ebp + 0x402 ]
push ebx
push eax
mov [ ebp + 0x400 ] bx
call memset
push esi
lea eax [ ebp + 0x2 ]
push ebx
push eax
mov [ ebp ] bx
call memset
push esi
lea eax [ ebp + 0x202 ]
push ebx
push eax
mov [ ebp + 0x200 ] bx
call memset
mov esi 0x100
push esi
lea eax [ ebp + 0x200 ]
push eax
push esi
lea eax [ ebp ]
push eax
push esi
lea eax [ ebp + 0x400 ]
push eax
push 0x3
lea eax [ ebp + 0x600 ]
push eax
push [ ebp - 0x20 ]
call [ _wsplitpath_s@IAT ]
add esp 0x48
lea eax [ ebp - 0x28 ]
push eax
lea edi [ ebp ]
call sub_40258b
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x14 ]
push eax
lea edi [ ebp + 0x200 ]
call sub_40258b
mov [ ebp - 0x4 ] 0x3
push 0x28
push [ ebp - 0x14 ]
call [ wcsrchr@IAT ]
cmp eax ebx
pop ecx
pop ecx
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp + 0x400 ]
push [ ebp - 0x28 ]
push eax
lea eax [ ebp + 0x600 ]
push eax
push r--data
lea eax [ ebp - 0x1c ]
call sub_405765
mov edi [ PathFileExistsW@IAT ]
add esp 0x14
push [ ebp - 0x1c ]
call edi
test eax eax
je r-xdata
sub eax [ ebp - 0x14 ]
sar eax 0x1
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp - 0x2c ]
mov eax [ edi ]
push 0x8
push [ ebp - 0x1c ]
push eax
call [ MoveFileExW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_40255c
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x24 ] 0x1
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx eax
call sub_405637
mov [ ebp - 0x4 ] 0x4
lea edi [ ebp - 0x14 ]
call sub_40260e
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x18 ]
push eax
call sub_4025e9
mov [ ebp - 0xd ] bl
jmp r-xdata
lea eax [ ebp - 0x20 ]
call sub_40260e
mov [ ebp - 0xd ] 0x1
lea eax [ ebp - 0x18 ]
lea edi [ ebp - 0x1c ]
call sub_40260e
inc [ ebp - 0x24 ]
cmp [ ebp - 0x24 ] esi
jl r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x28 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] bl
lea eax [ ebp - 0x1c ]
push eax
call sub_4025e9
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
mov al [ ebp - 0xd ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x608 ]
xor ecx ebp
call sub_40773c
add ebp 0x60c
leave
retn
push [ ebp - 0x14 ]
lea eax [ ebp + 0x400 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push eax
lea eax [ ebp + 0x600 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
call sub_405765
add esp 0x18
push [ ebp - 0x18 ]
call edi
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x18 ]
push eax
call sub_4025e9
sub_4052d7
push ebp
sub esp 0x2b4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2b4 ] eax
push 0x28
mov eax sub_4082b2
call sub_4080e9
mov eax [ ebp + 0x2c0 ]
or [ ebp - 0x18 ] 0xffffffff
xor ebx ebx
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp ] bl
mov eax [ eax ]
push ebx
push 0x80
push 0x3
push ebx
push 0x1
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0x18 ] esi
cmp esi 0xffffffff
jne r-xdata
mov [ ebp - 0x2c ] ebx
lea eax [ ebp - 0x2c ]
push eax
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] ebx
jne r-xdata
call [ GetLastError@IAT ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
mov [ ebp + 0x268 ] bl
push 0x3f
push ebx
lea eax [ ebp + 0x269 ]
push eax
call memset
add esp 0xc
xor eax eax
lea edi [ ebp + 0x2a8 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x1c ] ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
push 0x4c
lea eax [ ebp + 0x268 ]
push eax
push esi
mov edi [ ReadFile@IAT ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x2b4 ]
xor ecx ebp
call sub_40773c
add ebp 0x2b8
leave
retn
mov al [ ebp - 0x11 ]
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
push 0x6
push r--data
lea eax [ ebp + 0x2a8 ]
push eax
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x2b0 ] ebx
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x2b0 ]
call sub_40766b
mov [ ebp - 0x20 ] eax
push [ ebp + 0x2b0 ]
push ebx
push eax
call memset
add esp 0x10
mov [ ebp - 0x1c ] ebx
push ebx
push ebx
push 0x4c
push esi
mov esi [ SetFilePointer@IAT ]
call esi
push ebx
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x2b0 ]
push [ ebp - 0x20 ]
push [ ebp - 0x18 ]
call edi
mov eax [ ebp + 0x2b0 ]
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov [ ebp + 0x134 ] bl
push 0x8
pop ecx
xor eax eax
lea edi [ ebp + 0x135 ]
[ edi ]
stosb [ edi ]
push 0x112
push ebx
lea eax [ ebp + 0x156 ]
push eax
call memset
push [ ebp + 0x2b0 ]
call sub_40766b
mov edi eax
push [ ebp + 0x2b0 ]
push ebx
push edi
call memset
mov [ ebp - 0x24 ] ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x1c ]
push edi
push [ ebp - 0x20 ]
push r--data
call ?Decrypt@DesUtil@@SA_NPBDPAE1JPAJ@Z
push 0x134
push edi
lea eax [ ebp + 0x134 ]
push eax
call memcpy
add esp 0x3c
cmp edi ebx
je r-xdata
push [ ebp - 0x20 ]
call ??_V@YAXPAX@Z
pop ecx
mov edi [ ebp + 0x260 ]
sub edi [ ebp - 0x28 ]
mov eax [ ebp + 0x2b0 ]
add eax 0x4c
cmp [ ebp + 0x260 ] eax
jae r-xdata
push edi
call ??_V@YAXPAX@Z
pop ecx
push 0x2
push ebx
push edi
push ebx
push ebx
push eax
jmp r-xdata
push eax
call sub_40766b
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x30 ] ebx
push [ ebp + 0x264 ]
push ebx
push eax
call memset
mov [ ebp - 0x24 ] ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push [ ebp - 0x34 ]
push r--data
call ?Decrypt@DesUtil@@SA_NPBDPAE1JPAJ@Z
add esp 0x24
cmp al bl
je r-xdata
push [ ebp - 0x18 ]
call esi
mov [ ebp - 0x1c ] ebx
push [ ebp + 0x264 ]
call sub_40766b
pop ecx
mov [ ebp - 0x34 ] eax
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
push [ ebp + 0x264 ]
push eax
push [ ebp - 0x18 ]
call [ ReadFile@IAT ]
mov eax [ ebp + 0x264 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0x11 ] 0x1
push ebx
push ebx
push ebx
push [ ebp - 0x18 ]
call esi
push ebx
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x18 ]
call [ WriteFile@IAT ]
push 0x2
push ebx
push edi
push [ ebp - 0x18 ]
call esi
push [ ebp - 0x18 ]
call [ SetEndOfFile@IAT ]
sub_4055bc
mov eax [ esi ]
push [ esp + 0x4 ]
push eax
call [ wcsrchr@IAT ]
test eax eax
pop ecx
pop ecx
jne r-xdata
sub eax [ esi ]
sar eax 0x1
or eax 0xffffffff
jmp r-xdata
retn 0x4
sub_4055db
push 0x4
mov eax sub_4084ad
call sub_4080b6
mov ebx ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
jge r-xdata
mov edi [ eax ]
mov esi [ edi - 0xc ]
cmp ebx esi
jl r-xdata
xor ebx ebx
call sub_403081
sub esi ebx
lea ecx [ edi + esi * 2 ]
push ecx
push [ ebp + 0xc ]
mov ecx eax
mov edi ebx
call sub_4056f4
push eax
push [ ebp + 0xc ]
call sub_403052
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp + 0xc ]
call sub_408155
retn 0x8
sub_405637
push 0x4
mov eax sub_4084ad
call sub_4080b6
mov edi ecx
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test edi edi
jge r-xdata
mov esi [ eax ]
cmp edi [ esi - 0xc ]
jl r-xdata
xor edi edi
call sub_403081
push esi
push ebx
mov ecx eax
call sub_4056f4
push eax
push ebx
call sub_403052
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax ebx
call sub_408155
retn 0x8
sub_405688
push 0x8
mov eax sub_40880e
call sub_4080b6
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov [ ebp - 0x10 ] edi
call sub_403081
push [ ebp + 0x8 ]
mov ecx eax
call sub_403030
mov [ ebp - 0x4 ] edi
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov ebx [ eax - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
inc edi
mov [ ebp - 0x10 ] edi
call sub_4030ca
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_408155
retn
sub_4056f4
push 0x0
mov eax sub_408479
call sub_4080b6
mov esi [ ebp + 0x8 ]
xor eax eax
test ecx ecx
setne al
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x80004005
mov eax [ ecx ]
push 0x2
push edi
call [ eax ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
add eax 0x10
mov [ esi ] eax
mov eax edi
mov edx esi
call sub_404650
push [ ebp + 0xc ]
mov eax edi
push edi
push [ esi ]
call sub_404634
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x8
call sub_4043b9
push 0x80070057
jmp r-xdata
call sub_40493b
sub_405765
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push esi
mov esi eax
jne r-xdata
push edi
lea eax [ esp + 0x14 ]
push eax
push ebx
call [ _vscwprintf@IAT ]
pop ecx
pop ecx
mov edi eax
push edi
call sub_404953
lea ecx [ esp + 0x14 ]
push ecx
push ebx
lea ecx [ edi + 0x1 ]
push ecx
push eax
call [ vswprintf_s@IAT ]
add esp 0x10
mov eax edi
pop edi
mov edx esi
pop esi
pop ebx
jmp sub_404650
push 0x80070057
call sub_40493b
sub_4057b2
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call [ free@IAT ]
and [ esi ] 0x0
pop ecx
sub_4057d0
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 2 ]
retn 0x4
sub_405806
push 0x8
mov eax sub_408297
call sub_4080b6
mov esi ecx
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x4 ]
call GdipCloneBrush
test eax eax
je r-xdata
push 0xc
call GdipAlloc
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor esi esi
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
mov eax esi
call sub_408155
retn
push [ ebp - 0x10 ]
call GdipDeleteBrush
or [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
sub_405891
push 0x4
mov eax sub_408272
call sub_4080b6
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x6
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
mov [ esi ] r--data
mov eax [ eax ]
push ecx
push eax
call GdipCreateSolidFill
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x8
sub_405926
push ebp
mov ebp esp
sub esp 0x18
test ecx ecx
fld [ eax ]
fstp [ ebp - 0x14 ]
push esi
fld [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
fstp [ ebp - 0x10 ]
fldz
fst [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
je r-xdata
xor ecx ecx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov edx [ edx ]
jmp r-xdata
test edx edx
je r-xdata
xor eax eax
mov eax [ edi ]
jmp r-xdata
test edi edi
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
push ecx
push edx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi ]
call GdipDrawString
test eax eax
je r-xdata
pop esi
leave
retn 0xc
sub_4059b3
push 0x8
mov eax sub_40822c
call sub_4080b6
lea eax [ ebp - 0x14 ]
xor ebx ebx
push eax
push ebx
push [ ebp + 0x8 ]
mov [ esi ] ebx
mov [ ebp - 0x14 ] ebx
call GdipCreateFontFamilyFromName
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x10 ]
cmp eax ebx
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] eax
je r-xdata
fld [ ebp + 0xc ]
push esi
push 0x2
push [ ebp + 0x10 ]
push ecx
fstp [ esp ]
push edi
call GdipCreateFont
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
call sub_405986
mov edi [ eax ]
call sub_405986
mov eax [ eax + 0x4 ]
cmp eax ebx
mov [ esi + 0x4 ] eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ ebp - 0x14 ]
call GdipDeleteFontFamily
mov eax esi
call sub_408155
retn 0xc
call sub_405986
mov edi [ eax ]
call sub_405986
mov eax [ eax + 0x4 ]
cmp eax ebx
mov [ esi + 0x4 ] eax
jne r-xdata
fld [ ebp + 0xc ]
push esi
push 0x2
push [ ebp + 0x10 ]
push ecx
fstp [ esp ]
push edi
call GdipCreateFont
mov [ esi + 0x4 ] eax
sub_405a63
push 0x4
mov eax sub_408209
call sub_4080b6
push 0x10
call GdipAlloc
mov esi eax
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
and [ eax ] 0x0
push eax
push [ ebp + 0x8 ]
mov [ esi ] r--data
call GdipLoadImageFromStream
mov [ esi + 0x8 ] eax
mov eax esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_408155
retn
sub_405aab
push 0x0
mov eax sub_4081e4
call sub_4080b6
xor ecx ecx
inc ecx
test [ rw-data ] cl
jne r-xdata
mov eax rw-data
call sub_408155
retn
or [ rw-data ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x48
push eax
push rw-data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] ax
mov [ rw-data ] ax
call memset
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
sub_405b12
mov eax 0x654736
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x4 ]
test eax eax
mov [ esi + 0x64 ] 0x323232
je r-xdata
retn
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
push [ esi + 0x4 ]
call [ InvalidateRect@IAT ]
sub_405b47
push 0x24
mov eax sub_4087da
call sub_4080b6
push [ ebp + 0xc ]
xor ebx ebx
push [ ebp + 0x8 ]
xor esi esi
call [ SizeofResource@IAT ]
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
mov eax esi
call sub_408155
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
push [ ebp - 0x18 ]
push 0x2
call [ GlobalAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp - 0x2c ]
mov eax [ GlobalFree@IAT ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_403fcf
mov [ ebp - 0x4 ] ebx
push edi
call [ GlobalLock@IAT ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x30 ]
push eax
call sub_401c61
push [ ebp - 0x2c ]
mov eax [ GlobalUnlock@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_40400c
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call memcpy
add esp 0xc
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edi
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x14 ]
push eax
call sub_404bd4
mov [ ebp - 0x4 ] bl
lea eax [ ebp - 0x28 ]
push eax
call sub_401c61
push [ ebp - 0x14 ]
call sub_405a63
mov esi eax
cmp esi ebx
pop ecx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
mov [ esi + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
xor esi esi
sub_405c53
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
call [ GetForegroundWindow@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ SetForegroundWindow@IAT ]
leave
retn
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call [ GetWindowThreadProcessId@IAT ]
mov [ ebp - 0x8 ] eax
call [ GetCurrentProcessId@IAT ]
cmp [ ebp - 0x4 ] eax
je r-xdata
push ebx
push esi
push edi
call [ GetCurrentThreadId@IAT ]
mov esi [ AttachThreadInput@IAT ]
push 0x1
mov edi eax
push edi
push [ ebp - 0x8 ]
call esi
push [ ebp + 0x8 ]
mov ebx eax
call [ SetForegroundWindow@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
call [ BringWindowToTop@IAT ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push edi
push [ ebp - 0x8 ]
call esi
sub_405ccf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push esi
push edi
push 0xd8
push [ rw-data ]
call [ LoadIconW@IAT ]
test eax eax
lea esi [ ebx + 0x20 ]
mov [ esi ] eax
je r-xdata
push 0xe
push 0xe7
push 0x1d9
xor eax eax
push eax
push eax
push eax
lea edi [ ebx + 0x4 ]
push [ edi ]
call [ SetWindowPos@IAT ]
mov eax esi
call sub_406c99
push edi
call sub_406ee1
push r--data
push [ edi ]
call [ SetWindowTextW@IAT ]
lea esi [ ebx + 0x80 ]
call sub_405b12
push 0x1
push [ edi ]
call [ GetDlgItem@IAT ]
lea ecx [ ebx + 0x80 ]
call sub_406833
push 0x14
push 0x18
push 0xc0
push 0xc7
push 0xa5
push 0x0
push [ ebx + 0x84 ]
call [ SetWindowPos@IAT ]
lea esi [ ebx + 0xe8 ]
call sub_405b12
push 0xcc
push [ edi ]
call [ GetDlgItem@IAT ]
lea ecx [ ebx + 0xe8 ]
call sub_406833
push 0x14
push 0x18
push 0x49
push 0xc7
push 0x177
push 0x0
push [ ebx + 0xec ]
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
mov esi [ FindResourceW@IAT ]
push r--data
push 0xd5
push eax
mov [ esp + 0x20 ] eax
call esi
test eax eax
je r-xdata
mov edi [ SendMessageW@IAT ]
push eax
push 0x1
push 0x80
push [ ebx + 0x4 ]
call edi
push [ esi ]
push 0x0
push 0x80
push [ ebx + 0x4 ]
call edi
and [ esp + 0x14 ] 0x0
push eax
push [ esp + 0x18 ]
call sub_405b47
pop ecx
pop ecx
mov [ esp + 0x14 ] eax
jmp r-xdata
and [ esp + 0x10 ] 0x0
push eax
push [ esp + 0x14 ]
call sub_405b47
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ rw-data ]
push r--data
push 0xd4
push eax
mov [ esp + 0x1c ] eax
call esi
test eax eax
je r-xdata
and [ esp + 0xc ] 0x0
push eax
push [ esp + 0x10 ]
call sub_405b47
pop ecx
pop ecx
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ rw-data ]
push r--data
push 0xd6
push eax
mov [ esp + 0x18 ] eax
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ rw-data ]
push r--data
push 0xd5
push eax
mov [ esp + 0x20 ] eax
call esi
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
lea eax [ ebx + 0x80 ]
mov [ eax + 0x48 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4c ] edx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x54 ] 0x5
jmp r-xdata
and [ esp + 0x14 ] 0x0
push eax
push [ esp + 0x18 ]
call sub_405b47
pop ecx
pop ecx
mov [ esp + 0x14 ] eax
jmp r-xdata
and [ esp + 0x10 ] 0x0
push eax
push [ esp + 0x14 ]
call sub_405b47
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ rw-data ]
push r--data
push 0xd4
push eax
mov [ esp + 0x1c ] eax
call esi
test eax eax
je r-xdata
and [ esp + 0xc ] 0x0
push eax
push [ esp + 0x10 ]
call sub_405b47
pop ecx
pop ecx
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ rw-data ]
push r--data
push 0xd6
push eax
mov [ esp + 0x18 ] eax
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ esp + 0xc ] 0x0
je r-xdata
push r--data
push 0x1
push [ edi ]
call [ SetDlgItemTextW@IAT ]
push r--data
push 0xcc
push [ edi ]
call [ SetDlgItemTextW@IAT ]
mov eax [ rw-data ]
push r--data
push 0xd7
push eax
mov [ esp + 0x20 ] eax
call esi
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
lea eax [ ebx + 0xe8 ]
mov [ eax + 0x48 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4c ] edx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x54 ] 0x5
jmp r-xdata
xor eax eax
push eax
push [ esp + 0x18 ]
call sub_405b47
pop ecx
pop ecx
jmp r-xdata
push [ edi ]
mov [ ebx + 0x154 ] eax
call sub_405c53
pop ecx
xor eax eax
pop edi
inc eax
pop esi
mov esp ebp
pop ebp
retn
sub_406005
push 0x84
mov eax sub_408c8b
call sub_4080b6
push [ ebp + 0xc ]
lea esi [ ebp - 0x38 ]
call sub_40108d
xor edi edi
mov [ ebp - 0x4 ] edi
fld [ r--data ]
push edi
push ecx
fstp [ esp ]
mov ebx r--data
push ebx
lea esi [ ebp - 0x50 ]
call sub_4059b3
mov [ ebp - 0x4 ] 0x1
fld [ r--data ]
push 0x1
push ecx
fstp [ esp ]
push ebx
lea esi [ ebp - 0x48 ]
call sub_4059b3
mov [ ebp - 0x4 ] 0x2
fld [ r--data ]
push edi
push ecx
fstp [ esp ]
push r--data
lea esi [ ebp - 0x40 ]
call sub_4059b3
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x1c ] 0xffff0000
call sub_405891
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
mov [ ebp - 0x1c ] 0xff000000
call sub_405891
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x1c ] 0xff505050
call sub_405891
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x1c ] 0xff0000ff
call sub_405891
mov [ ebp - 0x4 ] 0x7
push rw-data
call GdipStringFormatGetGenericTypographic
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ rw-data ]
mov [ ebp - 0x1c ] edi
call GdipCloneStringFormat
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
xor ebx ebx
push 0x8
call GdipAlloc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax edi
je r-xdata
mov eax [ ebp - 0x20 ]
or eax 0x800
push eax
push [ ebx ]
call GdipSetStringFormatFlags
cmp eax edi
je r-xdata
mov [ ebx + 0x4 ] eax
xor eax eax
mov ecx [ ebp - 0x1c ]
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
jmp r-xdata
push 0x3
push [ ebx ]
call GdipSetStringFormatTrimming
cmp eax edi
je r-xdata
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebx ]
call GdipGetStringFormatFlags
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x7
mov ebx eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x9
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x68 ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x50 ]
call sub_405926
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
lea eax [ ebp - 0x20 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0xa
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x74 ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x48 ]
call sub_405926
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
lea eax [ ebp - 0x20 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0xb
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x5c ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
add ecx 0x150
push eax
call sub_404e70
pop ecx
mov [ ebp - 0x4 ] 0xc
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_404e70
pop ecx
mov [ ebp - 0x4 ] 0xd
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_404ede
pop ecx
mov [ ebp - 0x4 ] 0xe
mov eax [ ebp + 0xc ]
mov eax [ eax - 0xc ]
cmp eax 0x19
jle r-xdata
mov [ ebx + 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_403052
mov [ ebp - 0x4 ] 0x13
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x68 ]
push eax
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
fldz
lea eax [ ebp + 0xc ]
fst [ ebp - 0x84 ]
push eax
fst [ ebp - 0x88 ]
lea eax [ ebp + 0x8 ]
fst [ ebp - 0x8c ]
push eax
fstp [ ebp - 0x90 ]
call sub_403052
mov [ ebp - 0x4 ] 0x14
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x30 ]
mov eax [ eax - 0xc ]
fld [ r--data ]
push 0x0
fstp [ ebp - 0x2c ]
fldz
push 0x0
lea ecx [ ebp - 0x90 ]
fst [ ebp - 0x28 ]
push ecx
fstp [ ebp - 0x24 ]
push [ ebx ]
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp - 0x40 ]
push eax
push [ ebp + 0xc ]
push [ ebp - 0x38 ]
call GdipMeasureString
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
push 0x8
pop ecx
cmp [ eax - 0xc ] ecx
jle r-xdata
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x15
fld [ ebp - 0x88 ]
fadd [ r--data ]
mov eax [ eax ]
push [ eax - 0xc ]
lea eax [ ebp - 0x38 ]
fadd [ r--data ]
push edi
push eax
lea ecx [ ebp - 0x5c ]
fstp [ ebp - 0x28 ]
mov edx ebx
fld [ r--data ]
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
fstp [ ebp - 0x24 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x16
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x5c ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x17
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x5c ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x18
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x68 ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x19
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x5c ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x1a
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x68 ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x1b
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
fld [ r--data ]
push [ eax - 0xc ]
fstp [ ebp - 0x24 ]
push edi
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x5c ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
lea eax [ ebp + 0x8 ]
push eax
mov edi r--data
call sub_40258b
mov [ ebp - 0x4 ] 0x1c
fld [ r--data ]
mov eax [ eax ]
fstp [ ebp - 0x28 ]
push [ eax - 0xc ]
fld [ r--data ]
lea eax [ ebp - 0x38 ]
fstp [ ebp - 0x24 ]
push edi
push eax
lea ecx [ ebp - 0x5c ]
mov edx ebx
lea eax [ ebp - 0x28 ]
lea edi [ ebp - 0x40 ]
call sub_405926
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
push [ ebx ]
call GdipDeleteStringFormat
push ebx
call GdipFree
mov [ ebp - 0x4 ] 0xd
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0xc
lea eax [ ebp - 0x18 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp + 0xc ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x80 ]
push eax
call sub_4058fd
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x5c ]
push eax
call sub_4058fd
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x74 ]
push eax
call sub_4058fd
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x68 ]
push eax
call sub_4058fd
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x40 ]
call GdipDeleteFont
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x48 ]
call GdipDeleteFont
mov [ ebp - 0x4 ] 0x0
push [ ebp - 0x50 ]
call GdipDeleteFont
or [ ebp - 0x4 ] 0xffffffff
push [ ebp - 0x38 ]
call GdipDeleteGraphics
call sub_408155
retn 0x8
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax - 0xc ]
mov eax [ ebp - 0x14 ]
mov eax [ eax - 0xc ]
add ecx eax
cmp ecx 0x19
jle r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4055db
mov [ ebp - 0x4 ] 0xf
lea edi [ ebp - 0x14 ]
call sub_40260e
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
push 0x19
pop ecx
sub ecx eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_405637
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x20 ]
push r--data
push ecx
mov esi eax
call sub_4027c7
mov [ ebp - 0x4 ] 0x11
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
mov esi eax
call sub_4067e1
add esp 0x10
mov [ ebp - 0x4 ] 0x12
lea edi [ ebp + 0xc ]
call sub_40260e
mov [ ebp - 0x4 ] 0x11
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
mov [ ebp - 0x4 ] 0xe
lea eax [ ebp - 0x24 ]
push eax
call sub_4025e9
sub_406711
push 0x8
mov eax sub_408d60
call sub_4080b6
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx edi
neg ecx
lea eax [ edi + 0x20 ]
sbb ecx ecx
and ecx eax
call sub_406874
push [ ebp + 0x8 ]
lea esi [ ebp - 0x14 ]
call sub_40108d
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x154 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
push [ ebp - 0x14 ]
call GdipDeleteGraphics
push [ ebp + 0x8 ]
push edi
call sub_406005
or [ ebp - 0x4 ] 0xffffffff
call sub_408155
retn 0x4
mov [ ebp - 0x10 ] eax
push 0x23
push 0x1c
push eax
push [ ebp - 0x14 ]
call GdipDrawImageI
test eax eax
je r-xdata
sub_406789
push 0x8
mov eax sub_408b4c
call sub_40811f
lea edi [ esi + 0x150 ]
push edi
call sub_4052d7
test al al
pop ecx
je r-xdata
movzx eax [ ebp + 0x8 ]
push eax
push [ esi + 0x4 ]
call [ EndDialog@IAT ]
xor eax eax
call sub_408169
retn 0x4
push edi
lea eax [ ebp - 0x14 ]
push eax
call sub_403052
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_405077
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
sub_4067e1
push 0x4
mov eax sub_40866b
call sub_4080b6
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov [ ebp - 0x10 ] edi
call sub_403081
push [ ebp + 0x8 ]
mov ecx eax
call sub_403030
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ esi ]
mov ebx [ eax - 0xc ]
mov edi [ ecx - 0xc ]
push eax
push ecx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x1
call sub_4030ca
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_408155
retn
sub_406833
push ebx
push esi
mov ebx ecx
push edi
mov esi eax
mov eax [ ebx ]
push ebx
call [ eax + 0x8 ]
lea edi [ ebx + 0x8 ]
call sub_404731
test eax eax
jne r-xdata
push [ ebx + 0x14 ]
push 0xfffffffc
push esi
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov [ ebx + 0x4 ] esi
xor esi esi
mov [ ebx + 0x20 ] eax
inc esi
call sub_403b0c
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_406874
push 0xc0
mov eax sub_4081ae
call sub_40811f
mov esi ecx
mov [ ebp - 0xb4 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
neg eax
lea ecx [ esi - 0x20 ]
sbb eax eax
and eax ecx
lea ecx [ ebp - 0xa8 ]
push ecx
push [ eax + 0x4 ]
mov [ ebp - 0xb0 ] eax
call [ GetClientRect@IAT ]
mov eax [ esi + 0x4 ]
cmp eax edi
push 0x4
pop ebx
je r-xdata
mov eax [ ebp - 0xb0 ]
push edi
push edi
push 0x7f
push [ eax + 0x4 ]
call [ SendMessageW@IAT ]
cmp eax edi
mov [ ebp - 0xac ] eax
je r-xdata
lea ecx [ ebp - 0xcc ]
push ecx
push 0x18
push eax
call [ GetObjectW@IAT ]
mov [ ebp - 0x94 ] edi
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x8 ]
call [ CreateCompatibleDC@IAT ]
mov [ ebp - 0x94 ] eax
push [ esi + 0x4 ]
push eax
call [ SelectObject@IAT ]
mov esi 0xcc0020
push esi
push edi
push edi
push [ ebp - 0x94 ]
mov [ ebp - 0xac ] eax
push 0x1b
push ebx
push edi
push edi
push [ ebp + 0x8 ]
call [ BitBlt@IAT ]
mov ecx [ ebp - 0xc8 ]
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
push esi
push 0x1b
add ecx 0xfffffff8
push ecx
push edi
push ebx
push [ ebp - 0x94 ]
sub eax 0x8
push 0x1b
push eax
push edi
mov edi [ StretchBlt@IAT ]
push ebx
push [ ebp + 0x8 ]
call edi
mov ecx [ ebp - 0xc8 ]
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
push esi
push 0x0
add ecx 0xfffffffc
push ecx
push [ ebp - 0x94 ]
sub eax ebx
push 0x1b
push ebx
push 0x0
push eax
push [ ebp + 0x8 ]
call [ BitBlt@IAT ]
mov ecx [ ebp - 0xc4 ]
mov eax [ ebp - 0x9c ]
sub eax [ ebp - 0xa4 ]
push esi
add ecx 0xffffffbe
push ecx
push ebx
push 0x1b
push 0x0
push [ ebp - 0x94 ]
sub eax 0x42
push eax
push ebx
push 0x1b
push 0x0
push [ ebp + 0x8 ]
call edi
mov eax [ ebp - 0xc4 ]
mov edx [ ebp - 0xc8 ]
add eax 0xffffffbe
mov [ ebp - 0x98 ] eax
add edx 0xfffffff8
mov eax [ ebp - 0x9c ]
sub eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0xa0 ]
sub ecx [ ebp - 0xa8 ]
push esi
push [ ebp - 0x98 ]
sub eax 0x42
push edx
push 0x1b
push ebx
push [ ebp - 0x94 ]
sub ecx 0x8
push eax
push ecx
push 0x1b
push ebx
push [ ebp + 0x8 ]
call edi
mov edx [ ebp - 0xc4 ]
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0xa0 ]
sub ecx [ ebp - 0xa8 ]
push esi
add edx 0xffffffbe
push edx
push ebx
push 0x1b
add eax 0xfffffffc
mov [ ebp - 0x98 ] eax
push [ ebp - 0x98 ]
mov eax [ ebp - 0x9c ]
push [ ebp - 0x94 ]
sub eax [ ebp - 0xa4 ]
sub ecx ebx
sub eax 0x42
push eax
push ebx
push 0x1b
push ecx
push [ ebp + 0x8 ]
call edi
mov ecx [ ebp - 0xc4 ]
mov eax [ ebp - 0x9c ]
sub eax [ ebp - 0xa4 ]
push esi
add ecx 0xffffffd9
push ecx
push 0x0
push [ ebp - 0x94 ]
sub eax 0x27
push 0x27
push ebx
push eax
push 0x0
push [ ebp + 0x8 ]
call [ BitBlt@IAT ]
mov edx [ ebp - 0xc8 ]
mov eax [ ebp - 0xc4 ]
mov ecx [ ebp - 0x9c ]
sub ecx [ ebp - 0xa4 ]
push esi
push 0x27
add eax 0xffffffd9
mov [ ebp - 0x98 ] eax
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
add edx 0xfffffff8
push edx
push [ ebp - 0x98 ]
sub eax 0x8
push ebx
push [ ebp - 0x94 ]
sub ecx 0x27
push 0x27
push eax
push ecx
push ebx
push [ ebp + 0x8 ]
call edi
mov edx [ ebp - 0xc4 ]
add edx 0xffffffd9
mov edi [ ebp - 0xc8 ]
mov eax [ ebp - 0x9c ]
sub eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0xa0 ]
sub ecx [ ebp - 0xa8 ]
push esi
mov esi [ ebp - 0x94 ]
push edx
add edi 0xfffffffc
push edi
push esi
push 0x27
push ebx
sub eax 0x27
push eax
sub ecx ebx
push ecx
push [ ebp + 0x8 ]
call [ BitBlt@IAT ]
push [ ebp - 0xac ]
push esi
call [ SelectObject@IAT ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
push 0x7e
lea eax [ ebp - 0x8e ]
push edi
push eax
mov [ ebp - 0x90 ] di
call memset
add esp 0xc
push 0x40
lea eax [ ebp - 0x90 ]
push eax
mov eax [ ebp - 0xb0 ]
push [ eax + 0x4 ]
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x90 ] di
je r-xdata
push 0x3
push edi
push edi
push 0x32
call [ GetSystemMetrics@IAT ]
push eax
push 0x31
call [ GetSystemMetrics@IAT ]
push eax
push [ ebp - 0xac ]
push 0x32
call [ GetSystemMetrics@IAT ]
push 0x1b
pop ecx
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
push ebx
push [ ebp + 0x8 ]
call [ DrawIconEx@IAT ]
mov esi [ ebp - 0xb4 ]
xor edi edi
and [ ebp - 0x94 ] 0x0
push esi
call [ DeleteDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
call sub_408169
retn 0x4
mov ebx [ ebp - 0xa0 ]
push 0x31
add ebx 0xfffffffc
call [ GetSystemMetrics@IAT ]
add eax 0x7
push 0x11
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] edi
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] 0x1b
call [ GetStockObject@IAT ]
mov ebx [ SelectObject@IAT ]
push eax
push [ ebp + 0x8 ]
call ebx
mov edi [ SetBkMode@IAT ]
push 0x1
push [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] eax
call edi
push [ esi + 0x5c ]
mov esi [ SetTextColor@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x98 ] eax
call esi
mov [ ebp - 0xac ] eax
push 0x24
lea eax [ ebp - 0xc4 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
call [ wcslen@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x90 ]
push eax
push [ ebp + 0x8 ]
call [ DrawTextW@IAT ]
push [ ebp - 0xac ]
push [ ebp + 0x8 ]
call esi
push [ ebp - 0x98 ]
push [ ebp + 0x8 ]
call edi
push [ ebp - 0xb0 ]
push [ ebp + 0x8 ]
call ebx
sub_406c99
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi eax
mov ebx esi
neg ebx
lea eax [ esi - 0x20 ]
sbb ebx ebx
and ebx eax
push edi
lea eax [ ebp - 0x28 ]
push eax
push [ ebx + 0x4 ]
call [ GetClientRect@IAT ]
mov eax [ rw-data ]
push r--data
push 0xd2
push eax
mov edi eax
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push edi
call sub_405b47
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
lea edi [ esi + 0x8 ]
test [ edi + 0x24 ] 0x8
mov eax [ edi + 0x48 ]
mov [ ebp - 0x8 ] eax
mov [ edi + 0x48 ] ecx
mov [ edi + 0x4c ] 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
and [ ecx + 0x8 ] 0x0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
push [ edi + 0x4 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ edi + 0x2c ] 0x0
xor ecx ecx
inc ecx
mov [ edi + 0x30 ] 0x2
mov [ edi + 0x34 ] ecx
mov [ edi + 0x38 ] 0x3
mov eax [ esi + 0x2c ]
mov esi [ ebp - 0x4 ]
or eax ecx
mov [ edi + 0x24 ] eax
call sub_40115f
push 0x5
cdq
pop ecx
idiv ecx
mov [ ebp - 0x8 ] eax
call sub_40117f
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
sub ecx esi
sub ecx 0x6
mov [ ebp - 0x18 ] ecx
add ecx esi
add edx 0x6
push ecx
mov [ ebp - 0x14 ] edx
add edx eax
mov eax esp
mov [ ebp - 0x10 ] ecx
push ecx
mov [ ebp - 0xc ] edx
mov [ eax ] 0x1b58
mov eax esp
lea ecx [ ebp - 0x18 ]
mov [ eax ] ecx
push [ ebx + 0x4 ]
mov esi edi
call sub_406db3
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
call sub_40139f
pop edi
pop esi
pop ebx
leave
retn
sub_406db3
call sub_405aab
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_405aab
lea ecx [ esi + 0x20 ]
push ecx
push eax
push rw-data
call sub_4047a1
add esp 0xc
movzx eax ax
push eax
push [ esp + 0x10 ]
mov eax esi
push 0x0
push 0x50000000
push 0x0
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_406e51
retn 0xc
call sub_405aab
mov [ eax + 0x30 ] r--data
sub_406e04
push esi
push rw-data
call [ Ordinal_ATL80_44@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x10
mov eax [ esi ]
push ebx
mov ebx [ esp + 0xc ]
push edi
push esi
mov ecx esi
mov [ esi + 0x4 ] ebx
call [ eax + 0x8 ]
lea edi [ esi + 0x8 ]
call sub_404731
mov esi [ esi + 0x14 ]
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push ebx
call esi
pop edi
pop ebx
sub_406e51
push ebp
mov ebp esp
push esi
push edi
mov esi eax
lea edi [ esi + 0x8 ]
push 0x0
xor eax eax
call sub_404731
test eax eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push 0xe
call [ SetLastError@IAT ]
xor eax eax
jmp r-xdata
push esi
push edi
push rw-data
call [ Ordinal_ATL80_43@IAT ]
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
test [ ebp + 0x14 ] 0x40000000
je r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ eax + 0xc ]
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push 0x0
push [ rw-data ]
sub esi ecx
push [ ebp + 0x1c ]
sub eax edx
push [ ebp + 0x8 ]
push esi
push eax
movzx eax [ ebp + 0x20 ]
push ecx
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
call [ CreateWindowExW@IAT ]
mov eax rw-data
mov [ ebp + 0x1c ] esi
sub_406ee1
push ebp
mov ebp esp
sub esp 0x40
push ebx
mov ebx [ GetWindowLongW@IAT ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0xfffffff0
push [ esi ]
call ebx
mov edi [ GetParent@IAT ]
mov [ ebp - 0xc ] eax
and [ ebp - 0xc ] 0x40000000
je r-xdata
push 0x4
push [ esi ]
call [ GetWindow@IAT ]
push [ esi ]
call edi
jmp r-xdata
push [ esi ]
call edi
mov esi [ GetClientRect@IAT ]
mov edi eax
lea eax [ ebp - 0x1c ]
push eax
push edi
call esi
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x8 ]
call esi
push 0x2
lea eax [ ebp - 0x2c ]
push eax
push edi
push [ ebp - 0x8 ]
call [ MapWindowPoints@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x3c ]
push eax
push [ esi ]
call [ GetWindowRect@IAT ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ edi + ecx ]
cmp edx eax
jle r-xdata
mov edi [ ebp - 0x1c ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0xfffffff0
push [ ebp - 0x8 ]
call ebx
test eax 0x10000000
je r-xdata
cmp ebx [ ebp - 0x18 ]
jge r-xdata
sub eax ecx
mov edi eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x8 ]
call [ GetWindowRect@IAT ]
jmp r-xdata
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
and [ ebp - 0x8 ] 0x0
test eax 0x20000000
je r-xdata
mov eax [ ebp - 0x10 ]
lea ecx [ ebx + esi ]
cmp ecx eax
jle r-xdata
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
sub ecx [ ebp - 0x3c ]
add eax edx
cdq
mov esi [ ebp - 0x30 ]
sub eax edx
sub esi [ ebp - 0x38 ]
mov edi eax
mov eax ecx
cdq
sub eax edx
mov edx [ ebp - 0x20 ]
sar eax 0x1
sar edi 0x1
sub edi eax
mov eax [ ebp - 0x28 ]
add eax edx
cdq
sub eax edx
mov ebx eax
mov eax esi
cdq
sub eax edx
sar ebx 0x1
sar eax 0x1
sub ebx eax
cmp edi [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push 0x15
push 0xffffffff
push 0xffffffff
push ebx
push edi
push 0x0
push [ eax ]
call [ SetWindowPos@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
sub eax esi
mov ebx eax
sub_407080
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push [ ecx + 0x4 ]
call [ HeapReAlloc@IAT ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_407168
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
add eax ecx
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
retn
mov eax 0x80070057
retn
sub_40718a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0x8 ]
push esi
push eax
mov edi ecx
call sub_407112
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push 0x10
push eax
call sub_407168
add esp 0xc
test eax eax
jl r-xdata
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
dec esi
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_4071ec
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0xc ]
push esi
push eax
mov edi ecx
call sub_407112
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push 0x10
push eax
call sub_407168
add esp 0xc
test eax eax
jl r-xdata
push [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
dec esi
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_407245
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call free
and [ esi ] 0x0
pop ecx
sub_407285
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 4 ]
retn 0x4
sub_4072c6
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax 0x80070057
jmp r-xdata
xor eax eax
cmp eax 0x2c
jne r-xdata
pop esi
retn 0x8
push edi
xor edi edi
cmp [ esi + 0x24 ] edi
jle r-xdata
lea ecx [ esi + 0x20 ]
call sub_4057b2
lea eax [ esi + 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop edi
push ebx
lea ebx [ esi + 0x20 ]
push edi
mov ecx ebx
call sub_4057d0
movzx eax [ eax ]
push [ esp + 0x14 ]
push eax
call [ UnregisterClassA@IAT ]
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
pop ebx
sub_407356
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
lea eax [ esi + 0x18 ]
push eax
mov [ ebp - 0x8 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x34 ]
mov ecx [ ebp + 0x8 ]
cmp ecx eax
mov [ ebp - 0x4 ] 0x1
jg r-xdata
lea ecx [ ebp - 0x8 ]
call sub_404bfb
xor eax eax
test ecx ecx
jl r-xdata
cmp ecx eax
jne r-xdata
push ecx
lea ecx [ esi + 0x30 ]
call sub_407285
mov esi [ eax ]
jmp r-xdata
mov esi [ esi + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_404bfb
mov eax esi
jmp r-xdata
pop esi
leave
retn 0x4
sub_4073ac
push esi
mov esi ecx
call sub_4072ac
push esi
mov [ esi ] 0x2c
call sub_407262
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
and [ esi ] 0x0
sub_4073d2
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push esi
mov esi ecx
call sub_407326
mov eax __dos_header
push 0x94
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x20 ]
push 0x0
push eax
mov [ esi ] 0x3c
mov [ esi + 0xc ] 0x0
call memset
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] 0x94
call [ GetVersionExA@IAT ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x5
jb r-xdata
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x14 ] r--data
call sub_404418
test eax eax
jge r-xdata
cmp [ ebp - 0x1c ] 0x4
ja r-xdata
jmp r-xdata
mov ecx [ ebp + 0x74 ]
mov eax esi
xor ecx ebp
pop esi
call sub_40773c
add ebp 0x78
leave
retn
mov [ rw-data ] 0x1
mov [ esi + 0xc ] 0x1
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
sub_407499
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
mov ecx edi
call sub_404404
and [ esi ] 0x0
mov ecx edi
mov [ esi + 0x4 ] __dos_header
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
call sub_404418
test eax eax
jge r-xdata
mov [ esi ] 0x28
mov [ rw-data ] 0x1
jmp r-xdata
pop edi
mov eax esi
pop esi
retn
sub_407504
push ebx
push 0xc
call [ IsProcessorFeaturePresent@IAT ]
test eax eax
jne r-xdata
push ebp
push esi
push edi
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebp ebp
cmp edi ebp
je r-xdata
inc eax
mov [ rw-data ] eax
pop ebx
retn
cmp [ rw-data ] ebp
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
xor eax eax
cmp [ rw-data ] ebp
je r-xdata
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x30 ]
add esi 0x34
mov eax [ esi ]
cmp eax ebp
jne r-xdata
mov [ rw-data ] eax
xor eax eax
inc eax
jmp r-xdata
mov ebx [ GetProcessHeap@IAT ]
push 0x8
push ebp
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edi eax
cmp edi ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push ebp
push edi
push esi
mov [ edi ] ebp
mov [ edi + 0x4 ] ebp
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push ebp
call ebx
push eax
call [ HeapFree@IAT ]
sub_4075c6
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_407504
test eax eax
je r-xdata
push eax
call [ rw-data ]
test eax eax
jne r-xdata
push 0xd
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
pop esi
retn
push 0x40
mov eax 0x1000
push eax
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop esi
retn
mov eax [ esi ]
push edi
push [ rw-data ]
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea edi [ esi + 0xff0 ]
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
mov eax edi
jmp r-xdata
push esi
push [ rw-data ]
call [ rw-data ]
add esi 0x10
cmp esi edi
jb r-xdata
mov eax esi
pop edi
sub_407752
push 0x14
push r--data
call sub_407c48
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4077ee
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_407c8d
retn
sub_407810
push ebx
mov bl [ esp + 0x8 ]
test bl 0x2
push esi
mov esi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test bl 0x1
je r-xdata
push edi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea edi [ esi - 0x4 ]
push [ edi ]
push 0xc
push esi
call sub_4078d0
test bl 0x1
je r-xdata
mov eax esi
push esi
call ??3@YAXPAX@Z
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call operator delete
pop ecx
pop esi
pop ebx
retn 0x4
sub_407872
push 0x14
push r--data
call sub_407c48
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407c8d
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_407895
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407c8d
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_4078d0
push 0xc
push r--data
call sub_407c48
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40791b
call sub_407c8d
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_407933
push sub_407e56
call sub_4077f7
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __wgetmainargs@IAT ]
add esp 0x14
test eax eax
mov [ rw-data ] eax
jge r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_40797e
push 0x5c
push r--data
call sub_407c48
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x6c ]
push eax
call [ GetStartupInfoW@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x20 ] ebx
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push ebx
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
mov eax [ _wcmdln@IAT ]
cmp [ eax ] ebx
je r-xdata
push rw-data
call sub_407f00
pop ecx
test eax eax
je r-xdata
mov eax [ eax ]
push ebx
push 0x2
push ebx
call [ rw-data ]
cmp cx 0x22
jne r-xdata
cmp cx bx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ebx
sete cl
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
cmp cx bx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
test [ ebp - 0x40 ] 0x1
je r-xdata
cmp cx 0x20
ja r-xdata
push 0xa
pop ecx
movzx ecx [ ebp - 0x3c ]
jmp r-xdata
inc eax
inc eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ exit@IAT ]
push ecx
push eax
push ebx
push __dos_header
call sub_402103
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_407c8d
retn
sub_407b0b
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ _exit@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_407c8d
retn
sub_407b5c
cmp [ __dos_header ] 0x5a4d
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + r--data ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_407e32
call sub_407ff1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_407fc8
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_407ff1
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_407c48
push sub_407ca1
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_407cc4
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_407de0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_407e32
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_407e56
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_407e80
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_407eb0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_407f00
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_407ca1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_407e80
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_407eb0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407fc8
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_407ff4
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4080b6
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4080e9
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_40811f
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_49427d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_494f70
add esp 0x4
call sub_495130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_495160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_495160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_494f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_494f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_494f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_494f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_494f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_494f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4950a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_49427d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_494f70
add esp 0x4
call sub_495130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_495160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_495160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_494f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_494f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_494f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_494f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_494f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_494f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4950a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_494f70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4950a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_495130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_495160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401000
mov [ ecx ] r--data
retn
sub_401007
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_401012
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40105f
push [ esp + 0x4 ]
call GdipFree
retn
sub_401069
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDisposeImage
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_4010af
push [ eax ]
call GdipDeleteGraphics
retn
sub_4010f9
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDisposeImage
retn
sub_40169e
push esi
mov esi ecx
push esi
call sub_4012e3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_401c44
push esi
mov esi ecx
push esi
call sub_401747
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_402054
push esi
mov esi ecx
push esi
call sub_401eda
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_402071
push 0x0
mov eax sub_4088da
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_404bb6
call sub_408155
retn 0x4
sub_4020c6
push 0x0
mov eax sub_40868f
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
push [ ebp + 0x8 ]
call sub_402f34
call sub_408155
retn 0x4
sub_4020e6
push esi
mov esi ecx
push esi
call sub_4020c6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_402882
mov eax sub_403ed3
retn
sub_402888
retn 0x4
sub_402b1e
retn
sub_402fb9
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push r--data
push r--data
push eax
call [ ecx + 0xc ]
retn 0x4
sub_402fd0
push 0x0
mov eax sub_4085cb
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
push [ ebp + 0x8 ]
call sub_403010
call sub_408155
retn 0x4
sub_402ff0
push 0x0
mov eax sub_4085a7
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
call sub_4046d2
call sub_408155
retn 0x4
sub_403010
push 0x0
mov eax sub_408584
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_404b94
call sub_408155
retn 0x4
sub_403030
push 0x0
mov eax sub_408479
call sub_4080b6
mov esi [ ebp + 0x8 ]
call sub_4030a5
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_408155
retn 0x4
sub_4030a5
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
mov eax esi
retn
push 0x80004005
call sub_40493b
sub_4030c0
mov eax [ eax ]
sub eax 0x10
jmp sub_404671
sub_4040b5
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
sub_404131
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
sub_404141
push [ ecx + 0xc ]
call [ ecx + 0x10 ]
retn
sub_404148
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
push rw-data
call [ type_info::operator==@IAT ]
add esi 0x10
neg al
sbb eax eax
and eax esi
pop esi
retn 0x4
sub_404167
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
push rw-data
call [ type_info::operator==@IAT ]
add esi 0x10
neg al
sbb eax eax
and eax esi
pop esi
retn 0x4
sub_404201
mov eax [ ecx + 0x8 ]
retn
sub_404205
add ecx 0x8
push ecx
call [ InterlockedIncrement@IAT ]
retn
sub_404210
mov eax sub_404216
retn
sub_404386
mov eax [ esi ]
test eax eax
je r-xdata
retn
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
sub_40439b
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
and [ eax ] 0x0
push ecx
call [ DeleteDC@IAT ]
sub_4043ac
mov eax [ eax ]
test eax eax
je r-xdata
retn
push eax
call sub_4075b9
sub_4043b9
push 0x8007000e
call sub_40493b
sub_404404
push esi
push 0x18
mov esi ecx
push 0x0
push esi
call memset
add esp 0xc
mov eax esi
pop esi
retn
sub_404418
push 0xc
push r--data
call sub_407c48
and [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_407c8d
retn
sub_404435
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_404634
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call [ memcpy_s@IAT ]
add esp 0x10
retn
sub_404650
test eax eax
jl r-xdata
push 0x80070057
call sub_40493b
mov ecx [ edx ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
mov [ ecx - 0xc ] eax
mov ecx [ edx ]
and [ ecx + eax * 2 ] 0x0
retn
sub_404671
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
sub_404689
mov eax ecx
jmp sub_4046d2
sub_404779
push 0x0
mov eax sub_408370
call sub_4080b6
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_408155
retn 0x4
push eax
call sub_4075b9
sub_40491b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ memmove_s@IAT ]
push eax
call sub_4042f4
add esp 0x14
retn
sub_40493b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call _CxxThrowException
sub_404ad6
mov eax [ esi ]
test eax eax
je r-xdata
retn
push eax
call [ RegCloseKey@IAT ]
and [ esi ] 0x0
sub_404b87
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404b94
push 0x4
mov eax sub_408503
call sub_4080b6
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
add ecx 0x8
push ecx
call sub_404779
call sub_408155
retn
sub_404bb6
push 0x4
mov eax sub_408856
call sub_4080b6
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_404b94
call sub_408155
retn
sub_404e5e
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4055ae
mov [ ebp - 0x11 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4056d9
test ecx ecx
jl r-xdata
push 0x80070057
call sub_40493b
mov eax [ eax ]
cmp ecx [ eax - 0xc ]
jg r-xdata
mov ax [ eax + ecx * 2 ]
retn
sub_4057f7
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDeleteBrush
retn
sub_40586d
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDeleteBrush
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_4058e1
push esi
mov esi ecx
push esi
call sub_4058fd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call GdipFree
sub_4059ab
push [ eax ]
call GdipDeleteFontFamily
retn
sub_405a5b
push [ eax ]
call GdipDeleteFont
retn
?Decrypt@DesUtil@@SA_NPBDPAE1JPAJ@Z
jmp [ DesUtil::Decrypt@IAT ]
sub_40703a
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
push ecx
call [ HeapDestroy@IAT ]
sub_407055
push [ esp + 0x4 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapAlloc@IAT ]
retn 0x4
sub_407067
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapFree@IAT ]
sub_4070b8
push [ esp + 0x4 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapSize@IAT ]
retn 0x4
sub_4070ca
push esi
mov esi ecx
call sub_40703a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_4070e6
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x14 ] 0x2
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x8 ] eax
retn 0x4
sub_407112
mov eax [ esp + 0x8 ]
mul [ esp + 0xc ]
test edx edx
ja r-xdata
mov eax 0x80070057
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
retn
sub_407132
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
jmp [ eax + 0x4 ]
sub_407262
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x2c
jne r-xdata
mov eax 0x80070057
jmp r-xdata
and [ eax + 0x1c ] 0x0
lea ecx [ eax + 0x4 ]
call sub_404418
retn 0x4
sub_4072ac
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_404404
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov eax esi
pop esi
retn
sub_407326
push esi
mov esi ecx
lea ecx [ esi + 0x18 ]
call sub_404404
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov eax esi
pop esi
retn
sub_407340
push esi
mov esi ecx
lea eax [ esi + 0x18 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x30 ]
pop esi
jmp sub_407245
sub_407481
push esi
push [ rw-data ]
mov esi ecx
push esi
call sub_4072c6
lea ecx [ esi + 0x20 ]
pop esi
jmp sub_4057b2
sub_4074de
mov eax [ rw-data ]
cmp eax 0x1
push [ esp + 0x4 ]
jne r-xdata
push eax
call [ rw-data ]
retn
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
retn
sub_4075b9
push [ esp + 0x4 ]
call sub_4074de
pop ecx
retn 0x4
j_sub_4075c6
jmp sub_4075c6
sub_40766b
jmp ??2@YAPAXI@Z
GdipGetImageWidth
jmp [ GdipGetImageWidth@IAT ]
GdipGetImageHeight
jmp [ GdipGetImageHeight@IAT ]
GdipCreateFromHDC
jmp [ GdipCreateFromHDC@IAT ]
GdipDeleteGraphics
jmp [ GdipDeleteGraphics@IAT ]
GdipCreateBitmapFromStream
jmp [ GdipCreateBitmapFromStream@IAT ]
GdipCreateBitmapFromResource
jmp [ GdipCreateBitmapFromResource@IAT ]
GdipCreateHBITMAPFromBitmap
jmp [ GdipCreateHBITMAPFromBitmap@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipDrawImageRectRectI
jmp [ GdipDrawImageRectRectI@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdipDrawString
jmp [ GdipDrawString@IAT ]
GdipMeasureString
jmp [ GdipMeasureString@IAT ]
GdipCreateFont
jmp [ GdipCreateFont@IAT ]
GdipSetStringFormatTrimming
jmp [ GdipSetStringFormatTrimming@IAT ]
GdipDeleteFont
jmp [ GdipDeleteFont@IAT ]
GdipDeleteBrush
jmp [ GdipDeleteBrush@IAT ]
GdipDrawImageI
jmp [ GdipDrawImageI@IAT ]
GdipCloneBrush
jmp [ GdipCloneBrush@IAT ]
GdipStringFormatGetGenericTypographic
jmp [ GdipStringFormatGetGenericTypographic@IAT ]
GdipCreateSolidFill
jmp [ GdipCreateSolidFill@IAT ]
GdipLoadImageFromStream
jmp [ GdipLoadImageFromStream@IAT ]
GdipCreateFontFamilyFromName
jmp [ GdipCreateFontFamilyFromName@IAT ]
GdipGetGenericFontFamilySansSerif
jmp [ GdipGetGenericFontFamilySansSerif@IAT ]
GdipCloneStringFormat
jmp [ GdipCloneStringFormat@IAT ]
GdipDeleteStringFormat
jmp [ GdipDeleteStringFormat@IAT ]
GdipDeleteFontFamily
jmp [ GdipDeleteFontFamily@IAT ]
GdipSetStringFormatFlags
jmp [ GdipSetStringFormatFlags@IAT ]
GdipGetStringFormatFlags
jmp [ GdipGetStringFormatFlags@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_40773c
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_407cc4
retn
memcpy
jmp [ memcpy@IAT ]
sub_4077ee
push 0x8
call _unlock
pop ecx
retn
sub_4077f7
push [ esp + 0x4 ]
call sub_407752
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
_purecall
jmp [ _purecall@IAT ]
memset
jmp [ memset@IAT ]
??_V@YAXPAX@Z
jmp [ `placement delete closure'@IAT ]
memcmp
jmp [ memcmp@IAT ]
free
jmp [ free@IAT ]
sub_40791b
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407872
sub_407af7
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x28 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_407b43
xor eax eax
inc eax
retn
sub_407b47
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
call sub_407c8d
retn
sub_407c3e
call sub_407ff4
jmp sub_40797e
sub_407c8d
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_407ca1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push sub_40773c
push rw-data
call _except_handler4_common
add esp 0x18
retn
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
sub_407e1d
push sub_407de0
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_407f89
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_407ff1
xor eax eax
retn
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
sub_408155
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_408169
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40773c
jmp sub_408155
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
j_sub_402b1e#8
jmp sub_402b1e
sub_408183
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
j_sub_402b1e#6
jmp sub_402b1e
sub_4081a3
lea eax [ ebp - 0x94 ]
jmp sub_40439b
sub_4081ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_40773c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4081d6
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4081e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4081ff
push [ ebp - 0x10 ]
call sub_40105f
pop ecx
retn
sub_408209
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408224
lea eax [ ebp - 0x14 ]
jmp sub_4059ab
sub_40822c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408247
mov ecx [ ebp + 0x8 ]
jmp sub_4057f7
sub_40824f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40826a
mov ecx [ ebp + 0x8 ]
jmp sub_4057f7
sub_408272
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40828d
push [ ebp - 0x14 ]
call sub_40105f
pop ecx
retn
sub_408297
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4082b2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40773c
mov ecx [ edx + 0x2c0 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4082da
mov eax [ ebp + 0x8 ]
jmp sub_404b87
sub_4082e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4082fd
lea eax [ ebp - 0x10 ]
jmp sub_404b87
sub_408305
lea eax [ ebp - 0x10 ]
push eax
call sub_404bd4
retn
sub_40830f
lea eax [ ebp - 0x10 ]
jmp sub_404b87
sub_408317
lea eax [ ebp - 0x10 ]
jmp sub_404b87
sub_40831f
lea eax [ ebp - 0x10 ]
jmp sub_404b87
sub_408327
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408342
lea ecx [ ebp - 0x1c ]
jmp sub_404bfb
sub_40834a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408365
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_4043ac
sub_408370
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40838b
mov eax [ ebp + 0x8 ]
jmp sub_40439b
sub_408393
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4083ae
mov ecx [ ebp - 0x10 ]
jmp sub_401000
sub_4083b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4083d1
push [ ebp - 0x14 ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_4083db
mov ecx [ ebp - 0x14 ]
jmp sub_401000
sub_4083e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4083fe
push [ ebp - 0x14 ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_408408
mov ecx [ ebp - 0x14 ]
jmp sub_401000
sub_408410
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40842b
mov ecx [ ebp + 0x8 ]
jmp sub_4010f9
sub_408433
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40844e
mov ecx [ ebp - 0x10 ]
jmp sub_4010f9
sub_408456
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408471
mov eax [ ebp + 0x8 ]
jmp sub_4030c0
sub_408479
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408494
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0xc ]
call sub_4025e9
sub_4084ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4084c8
mov eax [ ebp + 0x8 ]
jmp sub_40439b
sub_4084d0
mov esi [ ebp + 0x8 ]
add esi 0x18
jmp sub_404386
sub_4084db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4084f6
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_404779
retn
sub_408503
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40851e
mov ecx [ ebp - 0x10 ]
jmp sub_404689
sub_408526
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408541
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_4043ac
sub_40854c
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_404779
retn
sub_408559
mov ecx [ ebp + 0x8 ]
jmp sub_404b94
sub_408561
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40857c
mov ecx [ ebp + 0x8 ]
jmp sub_404b94
sub_408584
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40859f
mov ecx [ ebp + 0x8 ]
jmp sub_404689
sub_4085a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4085c2
push [ ebp + 0x8 ]
call sub_403010
retn
sub_4085cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4085e6
push [ ebp + 0x8 ]
call sub_402ff0
retn
sub_4085ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40860a
push [ ebp - 0x10 ]
call sub_402ff0
retn
sub_408613
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40862e
push [ ebp + 0x8 ]
call sub_402fd0
retn
sub_408637
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408652
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4025e9
sub_40866b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408686
push [ ebp + 0x8 ]
call sub_402f34
retn
sub_40868f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4086aa
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_40102f
sub_4086b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
j_sub_402b1e#5
jmp sub_402b1e
sub_4086d5
lea eax [ ebp - 0x104 ]
push eax
call sub_404c12
retn
sub_4086e2
lea eax [ ebp - 0xa4 ]
jmp sub_4010af
sub_4086ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x108 ]
xor ecx eax
call sub_40773c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408715
push [ ebp + 0x8 ]
call sub_403010
retn
sub_40871e
push [ ebp + 0x8 ]
call sub_402fd0
retn
sub_408727
push [ ebp + 0x8 ]
call sub_40288b
retn
sub_408730
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
j_sub_402b1e#7
jmp sub_402b1e
sub_408750
lea eax [ ebp - 0xe4 ]
push eax
call sub_404c12
retn
sub_40875d
lea eax [ ebp - 0xa8 ]
jmp sub_4010af
sub_408768
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_40773c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408790
push [ ebp + 0x8 ]
call sub_40288b
retn
sub_408799
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4087b4
lea eax [ ebp - 0x30 ]
push eax
call sub_401c61
retn
sub_4087be
lea eax [ ebp - 0x28 ]
push eax
call sub_401c61
retn
sub_4087c8
lea eax [ ebp - 0x14 ]
jmp sub_404b87
sub_4087d0
lea eax [ ebp - 0x14 ]
push eax
call sub_404bd4
retn
sub_4087da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4087f5
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4025e9
sub_40880e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408829
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
retn
sub_408833
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40884e
mov ecx [ ebp - 0x10 ]
jmp sub_404b94
sub_408856
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
j_sub_402b1e#9
jmp sub_402b1e
sub_408876
lea eax [ ebp - 0x5c ]
push eax
call sub_4045be
retn
j_sub_402b1e#4
jmp sub_402b1e
sub_408885
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_40773c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4088aa
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_4012e3
retn
sub_4088b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4088d2
mov ecx [ ebp + 0x8 ]
jmp sub_404bb6
sub_4088da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4088f5
push [ ebp + 0x8 ]
call sub_402071
retn
sub_4088fe
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx 0x20
neg eax
sbb eax eax
and eax ecx
push eax
call sub_402db3
retn
sub_408914
mov eax [ ebp + 0x8 ]
add eax 0x80
push eax
call sub_401747
retn
sub_408923
mov eax [ ebp + 0x8 ]
add eax 0xe8
push eax
call sub_401747
retn
sub_408932
mov eax [ ebp + 0x8 ]
add eax 0x150
push eax
call sub_4025e9
retn
sub_408941
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_40895c
push [ ebp - 0x20 ]
call sub_40105f
pop ecx
retn
sub_408966
lea eax [ ebp - 0x30 ]
push eax
call sub_401c61
retn
sub_408970
lea eax [ ebp - 0x28 ]
push eax
call sub_401c61
retn
sub_40897a
lea eax [ ebp - 0x14 ]
jmp sub_404b87
sub_408982
lea eax [ ebp - 0x14 ]
push eax
call sub_404bd4
retn
sub_40898c
push [ ebp - 0x20 ]
call sub_40105f
pop ecx
retn
sub_408996
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_4089b1
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
retn
sub_4089bb
lea eax [ ebp - 0x1c ]
push eax
call sub_4025e9
retn
sub_4089c5
lea eax [ ebp - 0x28 ]
push eax
call sub_4025e9
retn
sub_4089cf
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
retn
sub_4089d9
lea eax [ ebp - 0x18 ]
push eax
call sub_4025e9
retn
sub_4089e3
lea eax [ ebp - 0x18 ]
push eax
call sub_4025e9
retn
sub_4089ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40773c
mov ecx [ edx + 0x614 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408a15
lea eax [ ebp - 0x10 ]
push eax
call sub_4025e9
retn
sub_408a1f
lea eax [ ebp - 0x1c ]
push eax
call sub_4025e9
retn
sub_408a29
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
retn
sub_408a33
lea eax [ ebp - 0x1c ]
push eax
call sub_4025e9
retn
sub_408a3d
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4025e9
sub_408a56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408a71
lea eax [ ebp - 0x10 ]
push eax
call sub_4025e9
retn
sub_408a7b
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4025e9
sub_408a94
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408aaf
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_4043ac
sub_408aba
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_404779
retn
sub_408ac7
mov ecx [ ebp + 0x8 ]
jmp sub_404b94
sub_408acf
mov ecx [ ebp + 0x8 ]
jmp sub_404bb6
sub_408ad7
push [ ebp + 0x8 ]
call sub_402071
retn
sub_408ae0
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_4012e3
retn
sub_408aed
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call sub_402db3
retn
sub_408afa
mov eax [ ebp + 0x8 ]
add eax 0x80
push eax
call sub_401747
retn
sub_408b09
mov eax [ ebp + 0x8 ]
add eax 0xe8
push eax
call sub_401747
retn
sub_408b18
mov eax [ ebp + 0x8 ]
add eax 0x150
push eax
call sub_4025e9
retn
sub_408b27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408b42
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
retn
sub_408b4c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408b71
lea eax [ ebp - 0x38 ]
jmp sub_4010af
sub_408b79
lea eax [ ebp - 0x50 ]
jmp sub_405a5b
sub_408b81
lea eax [ ebp - 0x48 ]
jmp sub_405a5b
sub_408b89
lea eax [ ebp - 0x40 ]
jmp sub_405a5b
sub_408b91
lea eax [ ebp - 0x68 ]
push eax
call sub_4058fd
retn
sub_408b9b
lea eax [ ebp - 0x74 ]
push eax
call sub_4058fd
retn
sub_408ba5
lea eax [ ebp - 0x5c ]
push eax
call sub_4058fd
retn
sub_408baf
lea eax [ ebp - 0x80 ]
push eax
call sub_4058fd
retn
sub_408bb9
push [ ebp - 0x24 ]
call sub_40105f
pop ecx
retn
sub_408bc3
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
retn
sub_408bcd
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
retn
sub_408bd7
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
retn
sub_408be1
lea eax [ ebp + 0xc ]
push eax
call sub_4025e9
retn
sub_408beb
lea eax [ ebp - 0x18 ]
push eax
call sub_4025e9
retn
sub_408bf5
lea eax [ ebp - 0x14 ]
push eax
call sub_4025e9
retn
sub_408bff
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c09
lea eax [ ebp - 0x24 ]
push eax
call sub_4025e9
retn
sub_408c13
lea eax [ ebp - 0x20 ]
push eax
call sub_4025e9
retn
sub_408c1d
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c27
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c31
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c3b
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c45
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c4f
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c59
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c63
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c6d
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c77
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c81
lea eax [ ebp + 0x8 ]
push eax
call sub_4025e9
retn
sub_408c8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408ca9
lea eax [ ebp - 0x198 ]
push eax
call sub_4025e9
retn
sub_408cb6
lea esi [ ebp - 0x19c ]
jmp sub_404ad6
sub_408cc1
lea esi [ ebp - 0x190 ]
jmp sub_404ad6
sub_408ccc
lea esi [ ebp - 0x194 ]
jmp sub_404ad6
sub_408cd7
lea eax [ ebp - 0x188 ]
push eax
call sub_4025e9
retn
sub_408ce4
lea eax [ ebp - 0x1a0 ]
push eax
call sub_4025e9
retn
sub_408cf1
lea eax [ ebp - 0x184 ]
push eax
call sub_4025e9
retn
sub_408cfe
lea eax [ ebp - 0x18c ]
push eax
call sub_4025e9
retn
sub_408d0b
lea eax [ ebp - 0x1a0 ]
push eax
call sub_4025e9
retn
sub_408d18
lea eax [ ebp - 0x18c ]
push eax
call sub_4025e9
retn
sub_408d25
lea eax [ ebp - 0x168 ]
push eax
call sub_401eda
retn
sub_408d32
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1a4 ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
j_sub_402b1e#3
jmp sub_402b1e
sub_408d58
lea eax [ ebp - 0x14 ]
jmp sub_4010af
sub_408d60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408d7b
lea eax [ ebp - 0x8c ]
push eax
call sub_404c12
retn
j_sub_402b1e#2
jmp sub_402b1e
sub_408d8d
lea eax [ ebp - 0x58 ]
push eax
call sub_4045be
retn
sub_408d97
lea eax [ ebp - 0x8c ]
push eax
call sub_404c12
retn
j_sub_402b1e
jmp sub_402b1e
sub_408da9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_40773c
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408dd1
push rw-data
call sub_402f34
retn
sub_408ddc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40773c
mov eax r--data
jmp __CxxFrameHandler3
sub_408df7
push 0x0
mov eax sub_408ddc
call sub_4080b6
call sub_402e9e
and [ ebp - 0x4 ] 0x0
mov [ rw-data ] r--data
or [ ebp - 0x4 ] 0xffffffff
push sub_408ecd
call sub_4077f7
pop ecx
call sub_408155
retn
sub_408e2b
push edi
push rw-data
mov edi r--data
call sub_40258b
push sub_408eee
call sub_4077f7
pop ecx
pop edi
retn
sub_408e48
call [ GetProcessHeap@IAT ]
push sub_408ef9
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_4077f7
pop ecx
retn
sub_408e70
push rw-data
mov ecx rw-data
call sub_4070e6
push sub_408f03
call sub_4077f7
pop ecx
retn
sub_408e8b
mov ecx rw-data
call sub_4073d2
push sub_408f0e
call sub_4077f7
pop ecx
retn
sub_408ea1
mov ecx rw-data
call sub_4073ac
push sub_408f18
call sub_4077f7
pop ecx
retn
sub_408eb7
mov ecx rw-data
call sub_407499
push sub_408f22
call sub_4077f7
pop ecx
retn
sub_408ecd
push 0x0
mov eax sub_408ddc
call sub_4080b6
or [ esp + 0x18 ] 0xffffffff
push rw-data
call sub_402f34
call sub_408155
retn
sub_408eee
push rw-data
call sub_4025e9
retn
sub_408ef9
mov ecx rw-data
jmp sub_40703a
sub_408f03
mov [ rw-data ] r--data
retn
sub_408f0e
mov ecx rw-data
jmp sub_407340
sub_408f18
mov ecx rw-data
jmp sub_407481
sub_408f22
mov ecx rw-data
jmp sub_404690
