sub_11008
push rbx
sub rsp 0x20
mov rax [ 0x16100 ]
xor rax rsp
mov [ rsp + 0x18 ] rax
mov rax [ 0x14870 ]
mov r11 rcx
lea rcx [ rsp ]
mov [ rcx ] rax
mov rax [ 0x14878 ]
mov ebx 0x1
mov [ rcx + 0x8 ] rax
mov al [ 0x14880 ]
mov [ rdx ] 0x7b
lea r8 [ rbx + rdx ]
lea r10d [ rbx + 0x3 ]
lea r9 [ r11 + 0x3 ]
mov [ rcx + 0x10 ] al
movzx eax [ r9 ]
shr rax 0x4
mov al [ rsp + rax ]
mov [ r8 ] al
movzx eax [ r9 ]
add r8 rbx
cdq
sub r9 rbx
and edx 0xf
add eax edx
and eax 0xf
sub eax edx
movsxd rcx eax
mov al [ rsp + rcx ]
mov [ r8 ] al
add r8 rbx
add r10d 0xffffffff
jne 0x11056
lea r9 [ r11 + 0x4 ]
mov [ r8 ] 0x2d
lea r11d [ r10 + 0x2 ]
lea r10 [ r9 + 0x1 ]
add r8 rbx
movzx eax [ r10 ]
shr rax 0x4
mov al [ rsp + rax ]
mov [ r8 ] al
movzx eax [ r10 ]
add r8 rbx
cdq
sub r10 rbx
and edx 0xf
add eax edx
and eax 0xf
sub eax edx
movsxd rcx eax
mov al [ rsp + rcx ]
mov [ r8 ] al
add r8 rbx
add r11d 0xffffffff
jne 0x1109e
mov [ r8 ] 0x2d
mov r11d 0x2
lea r10 [ r9 + 0x3 ]
add r8 rbx
movzx eax [ r10 ]
shr rax 0x4
mov al [ rsp + rax ]
mov [ r8 ] al
movzx eax [ r10 ]
add r8 rbx
cdq
sub r10 rbx
and edx 0xf
add eax edx
and eax 0xf
sub eax edx
movsxd rcx eax
mov al [ rsp + rcx ]
mov [ r8 ] al
add r8 rbx
add r11d 0xffffffff
jne 0x110e4
mov [ r8 ] 0x2d
lea r10 [ r9 + 0x4 ]
mov r11d 0x2
add r8 rbx
movzx eax [ r10 ]
shr rax 0x4
mov al [ rsp + rax ]
mov [ r8 ] al
movzx eax [ r10 ]
add r8 rbx
cdq
add r10 rbx
and edx 0xf
add eax edx
and eax 0xf
sub eax edx
movsxd rcx eax
mov al [ rsp + rcx ]
mov [ r8 ] al
add r8 rbx
sub r11 rbx
jne 0x1112a
mov [ r8 ] 0x2d
add r8 rbx
lea r10d [ r11 + 0x6 ]
add r9 0x6
movzx eax [ r9 ]
shr rax 0x4
mov al [ rsp + rax ]
mov [ r8 ] al
movzx eax [ r9 ]
add r8 rbx
cdq
add r9 rbx
and edx 0xf
add eax edx
and eax 0xf
sub eax edx
movsxd rcx eax
mov al [ rsp + rcx ]
mov [ r8 ] al
add r8 rbx
sub r10 rbx
jne 0x1116d
mov [ r8 ] 0x7d
xor eax eax
mov [ r8 + 0x1 ] r10b
mov rcx [ rsp + 0x18 ]
xor rcx rsp
call 0x14330
add rsp 0x20
pop rbx
retn
sub_111c4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
and [ rdx ] 0x0
mov r8 rcx
mov rdi rcx
add rcx 0x10
mov rsi rdx
mov ebx 0x811c9dc6
cmp r8 rcx
jae 0x11202
lea rcx [ 0x16700 ]
mov dl 0x1
call [ 0x15028 ]
mov eax 0x8d3dcb09
lea rcx [ 0x16880 ]
mul ebx
shr edx 0x4
imul edx edx 0x1d
sub ebx edx
movsxd rax ebx
mov rax [ rcx + rax * 8 ]
jmp 0x11253
movzx eax [ r8 ]
imul ebx ebx 0x1000193
inc r8
xor ebx eax
cmp r8 rcx
jb 0x111ee
test rax rax
jne 0x11230
mov r8 [ rdi ]
cmp r8 [ rax ]
jne 0x11246
jmp 0x11261
sbb ecx ecx
sbb ecx 0xffffffff
mov r8 [ rdi + 0x8 ]
cmp r8 [ rax + 0x8 ]
jne 0x11246
lea rcx [ 0x16700 ]
call [ 0x15030 ]
mov r11 [ rsi ]
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
neg r11
sbb eax eax
neg eax
dec eax
add rsp 0x20
pop rdi
retn
mov rax [ rax + 0x10 ]
mov [ rsi ] rax
mov rax [ rax + 0x18 ]
xor ecx ecx
jmp 0x1124b
test ecx ecx
je 0x1125a
sub_11290
mov [ rsp + 0x18 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x50
mov rax [ 0x16100 ]
xor rax rsp
mov [ rsp + 0x48 ] rax
mov rdi rdx
lea rdx [ rsp + 0x20 ]
mov rsi rcx
call 0x11008
lea rcx [ rsi + 0x10 ]
mov ebp 0xc7fe1004
mov ebx 0x811c9dc6
mov r8 rsi
cmp rsi rcx
jae 0x112e5
lea rcx [ 0x163b0 ]
mov dl 0x1
call [ 0x15028 ]
mov eax 0x8d3dcb09
lea r8 [ 0x16600 ]
mul ebx
shr edx 0x4
imul edx edx 0x1d
sub ebx edx
movsxd rax ebx
mov r8 [ r8 + rax * 8 ]
jmp 0x11336
movzx eax [ r8 ]
imul ebx ebx 0x1000193
inc r8
xor ebx eax
cmp r8 rcx
jb 0x112d1
test r8 r8
jne 0x11313
mov rdx [ rsi ]
cmp rdx [ r8 ]
jne 0x11329
jmp 0x11352
sbb eax eax
sbb eax 0xffffffff
mov rdx [ rsi + 0x8 ]
cmp rdx [ r8 + 0x8 ]
jne 0x11329
lea rcx [ 0x163b0 ]
call [ 0x15030 ]
mov eax ebp
mov rcx [ rsp + 0x48 ]
xor rcx rsp
call 0x14330
mov rbx [ rsp + 0x80 ]
add rsp 0x50
pop rdi
pop rsi
pop rbp
retn
mov r8 [ r8 + 0x10 ]
xor ebp ebp
mov r8 [ r8 + 0x18 ]
xor eax eax
jmp 0x1132e
mov dl [ r8 ]
inc r8
mov [ rdi ] dl
inc rdi
test dl dl
jne 0x11343
test eax eax
je 0x1133d
sub_11384
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rdx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x20
mov rdi rcx
mov r14 rdx
xor r13d r13d
lea ecx [ r13 + 0x1 ]
mov edx 0x800
mov r8d 0x4d435458
xor r12b r12b
call [ 0x15008 ]
mov rbp rax
test rax rax
jne 0x113d0
xor edx edx
mov rcx r14
lea r8d [ rdx + 0x28 ]
call 0x14390
mov rdx rbp
mov rcx rdi
call 0x11290
mov esi eax
test eax eax
jne 0x117ef
mov esi 0xc7fe0005
jmp 0x117fa
xor edx edx
mov rcx rbp
call [ 0x15010 ]
or rcx 0xffffffffffffffff
xor eax eax
mov rdi rbp
[ rdi ]
mov ebx 0x811c9dc6
mov rdx rbp
not rcx
dec rcx
mov ecx ecx
add rcx rbp
cmp rbp rcx
jae 0x11429
mov eax esi
mov rbx [ rsp + 0x60 ]
add rsp 0x20
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov eax 0x8d3dcb09
lea rcx [ 0x16340 ]
mul ebx
shr edx 0x4
imul edx edx 0x1d
sub ebx edx
mov dl 0x1
call [ 0x15028 ]
movsxd r15 ebx
lea rbx [ 0x16780 ]
mov rdx [ rbx + r15 * 8 ]
xor edi edi
jmp 0x1147f
movzx eax [ rdx ]
imul ebx ebx 0x1000193
inc rdx
xor ebx eax
cmp rdx rcx
jb 0x11416
cmp rdx rdi
jne 0x11459
mov rax [ rdx ]
mov r8 rbp
sub r8 rax
jmp 0x1149f
xor edi edi
cmp ecx edi
je 0x11486
inc rax
test edi edi
jne 0x11462
lea rcx [ 0x16340 ]
call [ 0x15030 ]
cmp r12b dil
jne 0x116c1
mov r13d [ rdx + 0x10 ]
add rdx 0x18
mov rcx r14
mov r8d 0x28
mov r12b 0x1
call 0x14520
mov rdx [ rdx + 0x40 ]
movzx ecx [ rax ]
movzx edi [ rax + r8 ]
sub ecx edi
jne 0x11475
cmp r12b 0x1
jne 0x117ef
cmp [ rbp ] dil
je 0x114c8
test r13b 0x2
jne 0x117e2
mov r14 rdi
mov rcx rbp
call 0x13814
mov r14 rax
jmp 0x114cb
cmp r12b 0x1
jne 0x117ef
lea r8 [ rsp + 0x70 ]
mov dl 0x1
xor ecx ecx
mov [ rsp + 0x70 ] 0xffffffffffffff9c
call [ 0x15178 ]
lea rcx [ 0x16340 ]
mov dl 0x1
call [ 0x15028 ]
mov rax [ rbx + r15 * 8 ]
jmp 0x117bd
mov esi 0xc7fe1002
jmp 0x116c1
lea rcx [ 0x16340 ]
mov dl 0x1
call [ 0x15000 ]
mov rbx [ rbx + r15 * 8 ]
jmp 0x11512
cmp r14 rdi
je 0x1178a
test r13b 0x2
cmovne esi edi
cmp rax rdi
jne 0x11794
cmp rbx rdi
jne 0x114e9
mov rcx [ rax ]
mov r8 rbp
sub r8 rcx
jmp 0x117cb
mov rax [ rbx ]
mov rdi rbp
sub rdi rax
mov edx 0x48
mov r8d 0x4d435458
lea ecx [ rdx - 0x47 ]
call [ 0x15008 ]
mov rbx rax
cmp rax rdi
je 0x11649
xor edi edi
cmp edx edi
je 0x117c4
inc rcx
test edi edi
jne 0x1179d
lea rcx [ 0x16340 ]
call [ 0x15030 ]
cmp r12b 0x1
je 0x116cb
xor edi edi
cmp ecx edi
je 0x1162c
inc rax
test edx edx
jne 0x114f2
mov dl 0x1
mov rcx r14
call 0x14278
cmp rbx rdi
je 0x11663
xor edx edx
mov rcx rax
lea r8d [ rdx + 0x48 ]
call 0x14390
or rcx 0xffffffffffffffff
xor eax eax
mov [ rbx + 0x8 ] r14
mov rdi rbp
mov r8d 0x4d435458
[ rdi ]
not rcx
and ecx ecx
movsxd rdx ecx
lea ecx [ rax + 0x1 ]
call [ 0x15008 ]
xor edi edi
mov [ rbx ] rax
cmp rax rdi
je 0x11649
mov r13d [ rax + 0x10 ]
mov r12b 0x1
mov rax [ rax + 0x40 ]
mov r12b dil
movzx edx [ rcx ]
movzx edi [ rcx + r8 ]
sub edx edi
jne 0x117b0
mov rcx [ rsp + 0x68 ]
lea rdx [ rbx + 0x18 ]
mov r8d 0x28
mov r12b 0x1
call 0x14520
mov r13d [ rbx + 0x10 ]
jmp 0x11668
mov rbx [ rbx + 0x40 ]
movzx ecx [ rax ]
movzx edx [ rax + rdi ]
sub ecx edx
jne 0x11504
mov esi 0xc7fe0005
xor edx edx
mov rcx rbx
call [ 0x15010 ]
mov r12b 0x1
lea r13d [ rdi + 0x1 ]
mov rdx rbp
lea rcx [ 0x16340 ]
call [ 0x15030 ]
cmp r12b 0x1
jne 0x116ba
lea rbx [ 0x16780 ]
test r12b r13b
je 0x116ba
mov cl [ rdx ]
inc rdx
mov [ rax ] cl
inc rax
cmp cl dil
jne 0x11583
lea rdx [ 0x14890 ]
mov rcx r14
call 0x14140
lea rdx [ 0x148b0 ]
mov rcx r14
mov [ rbx + 0x18 ] rax
call 0x14140
lea rdx [ 0x148c0 ]
mov rcx r14
mov [ rbx + 0x20 ] rax
call 0x14140
lea rdx [ 0x148d0 ]
mov rcx r14
mov [ rbx + 0x28 ] rax
call 0x14140
lea rdx [ 0x148e0 ]
mov rcx r14
mov [ rbx + 0x30 ] rax
call 0x14140
mov rcx [ rsp + 0x68 ]
lea rdx [ rbx + 0x18 ]
mov r8d 0x28
mov [ rbx + 0x38 ] rax
call 0x14520
cmp [ rbx + 0x28 ] rdi
jne 0x11617
mov rax [ rbx + 0x28 ]
cmp rax rdi
je 0x116ba
lea rcx [ 0x16780 ]
mov rax [ rcx + r15 * 8 ]
mov [ rbx + 0x40 ] rax
mov [ rcx + r15 * 8 ] rbx
jmp 0x11668
or [ rbx + 0x10 ] 0x2
mov r13d 0x2
mov esi edi
call rax
mov dl r12b
mov esi eax
cmp eax edi
jne 0x11705
mov rcx r14
call 0x14278
lea rcx [ 0x16340 ]
mov dl 0x1
call [ 0x15000 ]
lea rcx [ 0x16780 ]
mov rdx [ rcx + r15 * 8 ]
cmp rdx rbx
jne 0x11736
lea rcx [ 0x16340 ]
call [ 0x15000 ]
or [ rbx + 0x10 ] 0x2
lea rcx [ 0x16340 ]
call [ 0x15030 ]
mov r13d 0x2
mov esi edi
cmp rdx rdi
je 0x1175a
mov rax [ rbx + 0x40 ]
mov [ rcx + r15 * 8 ] rax
jmp 0x11756
lea rcx [ 0x16340 ]
call [ 0x15030 ]
mov rcx [ rbx ]
cmp rcx rdi
je 0x11777
mov rax [ rdx + 0x40 ]
cmp rax rbx
je 0x1174e
mov [ rbx + 0x40 ] rdi
xor edx edx
mov rcx rbx
call [ 0x15010 ]
mov r12b dil
jmp 0x116ba
xor edx edx
call [ 0x15010 ]
mov rax [ rbx + 0x40 ]
mov [ rdx + 0x40 ] rax
mov rdx rax
cmp rax rdi
jne 0x1173b
jmp 0x1175a
sub_11818
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r15
sub rsp 0x20
mov rbp rdx
mov rbx rcx
test rcx rcx
je 0x11aa6
mov eax 0xc7fe0004
test rdx rdx
je 0x11aa6
xor eax eax
or r12 0xffffffffffffffff
mov rdi rbx
lea r15d [ rax + 0x1 ]
mov rcx r12
mov r8d 0x4d435458
[ rdi ]
mov rdi rbp
not rcx
sub rcx r15
mov rdx rcx
mov rcx r12
[ rdi ]
not rcx
sub rcx r15
lea eax [ rdx + rcx + 0x2 ]
mov ecx r15d
movsxd rdx eax
call [ 0x15008 ]
mov rsi rax
test rax rax
je 0x11a9d
mov ebx 0xc7fe0005
sub rax rbx
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
add rsp 0x20
pop r15
pop r13
pop r12
retn
mov cl [ rbx ]
mov [ rax + rbx ] cl
add rbx r15
test cl cl
jne 0x1189b
xor eax eax
mov rdi rsi
mov rcx r12
[ rdi ]
movzx eax [ 0x14900 ]
mov rcx r12
sub rdi r15
mov [ rdi ] ax
xor eax eax
mov rdi rsi
[ rdi ]
sub rdi r15
xor ecx ecx
mov al [ rcx + rbp ]
mov [ rdi + rcx ] al
add rcx r15
test al al
jne 0x118cd
cmp [ rsi ] al
je 0x118eb
xor r12d r12d
mov rcx rsi
call 0x1366c
mov r12 rax
jmp 0x118ee
lea rdx [ 0x14910 ]
mov rcx r12
call 0x13f38
mov rbp rax
test rax rax
jne 0x11929
xor edx edx
mov rcx rsi
call [ 0x15010 ]
mov eax 0xc7fe1002
jmp 0x11aab
test r12 r12
jne 0x11908
xor ebx ebx
cmp [ rax ] rbx
je 0x11a86
mov ebx 0xc7fe000b
jmp 0x11a86
xor edx edx
mov rcx r12
call 0x14278
xor edx edx
mov rcx rsi
call [ 0x15010 ]
jmp 0x11aa2
mov eax ebx
and eax 0xc0000000
cmp eax 0xc0000000
je 0x11a86
mov eax ebx
jmp 0x11aab
mov edx 0x20
mov r8d 0x4d435458
mov ecx r15d
call [ 0x15008 ]
mov r13 rax
test rax rax
je 0x11a72
mov ebx 0xc7fe0005
or rcx 0xffffffffffffffff
xor eax eax
mov rdi rsi
[ rdi ]
mov r8d 0x4d435458
not rcx
sub rcx r15
add ecx r15d
movsxd rdx ecx
mov ecx r15d
call [ 0x15008 ]
mov [ r13 + 0x10 ] rax
test rax rax
je 0x11a60
xor edx edx
mov rcx r13
mov ebx 0xc7fe0005
call [ 0x15010 ]
jmp 0x11a77
mov rdx rsi
add rbp 0x8
cmp [ rbp ] 0x0
jne 0x11934
mov cl [ rdx ]
add rdx r15
mov [ rax ] cl
add rax r15
test cl cl
jne 0x1199c
mov r8 [ rbp ]
mov edi 0x811c9dc6
lea rdx [ r8 + 0x10 ]
mov rcx r8
cmp r8 rdx
jae 0x119d2
movdqu xmm0 [ r8 ]
mov eax 0x8d3dcb09
lea rcx [ 0x163b0 ]
mul edi
shr edx 0x4
movdqu [ r13 ] xmm0
imul edx edx 0x1d
sub edi edx
mov dl r15b
call [ 0x15000 ]
movsxd r11 edi
lea r9 [ 0x16600 ]
mov r8 [ r9 + r11 * 8 ]
mov rdi r8
test r8 r8
je 0x11a45
movzx eax [ rcx ]
imul edi edi 0x1000193
add rcx r15
xor edi eax
cmp rcx rdx
jb 0x119bf
test ebx ebx
jne 0x11a51
mov rax [ rbp ]
mov rdx [ rax ]
cmp rdx [ rdi ]
jne 0x11a2c
lea rcx [ 0x163b0 ]
call [ 0x15030 ]
jmp 0x11a77
mov [ r13 + 0x18 ] r8
mov [ r9 + r11 * 8 ] r13
sbb eax eax
sbb eax 0xffffffff
mov rdx [ rax + 0x8 ]
cmp rdx [ rdi + 0x8 ]
jne 0x11a2c
mov ebx 0xc7fe0011
mov rdi [ rdi + 0x18 ]
test rdi rdi
jne 0x11a12
xor eax eax
jmp 0x11a31
jmp 0x11a45
test eax eax
je 0x11a40
XTComInitialize
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x18 ] rbp
push rsi
push rdi
push r12
push r13
push r14
sub rsp 0x470
mov rax [ 0x16100 ]
xor rax rsp
mov [ rsp + 0x460 ] rax
xor r14d r14d
mov rbp rdx
cmp rcx r14
jne 0x11b10
cmp rdx r14
jne 0x11b7d
mov eax 0xc7fe0004
jmp 0x11ea0
mov rsi [ rdx ]
cmp rsi r14
je 0x11e9e
lea rcx [ 0x163b0 ]
mov dl 0x1
call [ 0x15000 ]
lea rbx [ 0x16600 ]
mov rcx [ rsp + 0x460 ]
xor rcx rsp
call 0x14330
lea r11 [ rsp + 0x470 ]
mov rbx [ r11 + 0x30 ]
mov rbp [ r11 + 0x40 ]
mov rsp r11
pop r14
pop r13
pop r12
pop rdi
pop rsi
retn
xor eax eax
mov edi 0x1
cmp rdi r14
jne 0x11b30
mov rsi [ rbp ]
cmp rsi r14
jne 0x11b8e
lea r12 [ rax + 0x18 ]
lea rcx [ rsp + 0xd0 ]
mov rdx rsi
mov [ rax ] 0x53524944
mov [ rax + 0x10 ] dil
mov [ rax + 0x8 ] r14
mov [ r12 ] r14w
mov [ rax + 0x1a ] r14w
mov [ rax + 0x20 ] r14
call [ 0x15170 ]
lea rdx [ rsp + 0xd0 ]
mov r8b dil
mov rcx r12
call [ 0x15138 ]
cmp eax r14d
jne 0x11c8b
mov rsi rdi
mov rdi [ rdi + 0x18 ]
mov rcx [ rsi + 0x10 ]
cmp rcx r14
je 0x11b48
lea rax [ 0x166e8 ]
mov [ rbx ] r14
add rbx 0x8
cmp rbx rax
jl 0x11b2b
mov edx 0x28
mov r8d 0x4d435458
mov ecx edi
add rbp 0x8
call [ 0x15008 ]
mov rbx rax
cmp rax r14
je 0x11e91
xor edx edx
mov rcx rbx
call [ 0x15010 ]
mov rbx r14
mov eax 0x200
lea r9 [ rsp + 0xf0 ]
lea r8 [ rsp + 0x90 ]
lea rcx [ rbx + 0x8 ]
mov edx edi
mov [ rsp + 0x28 ] edi
mov [ rsp + 0x90 ] 0x30
mov [ rsp + 0x98 ] r14
mov [ rsp + 0xa8 ] eax
mov [ rsp + 0xa0 ] r12
mov [ rsp + 0xb0 ] r14
mov [ rsp + 0xb8 ] r14
mov [ rsp + 0x20 ] edi
call [ 0x151b8 ]
cmp eax r14d
je 0x11c76
xor edx edx
mov rcx rsi
call [ 0x15010 ]
xor edx edx
call [ 0x15010 ]
mov rdi [ rbx ]
jmp 0x11b53
lea rcx [ 0x163b0 ]
call [ 0x15030 ]
jmp 0x11e9e
mov r13d 0x148
xor edx edx
lea rcx [ rsp + 0x90 ]
lea r8d [ rdx + 0x30 ]
call 0x14390
jmp 0x11c99
mov rcx r12
call [ 0x15180 ]
xor edx edx
mov rcx rbx
call [ 0x15010 ]
mov rbx r14
lea rcx [ rsp + 0x310 ]
mov r8 r13
xor edx edx
call 0x14390
mov al [ rbx + 0x10 ]
mov rcx [ rbx + 0x8 ]
mov [ rsp + 0x50 ] al
mov [ rsp + 0x48 ] r14
mov [ rsp + 0x40 ] dil
mov [ rsp + 0x38 ] edi
lea rax [ rsp + 0x310 ]
mov [ rsp + 0x30 ] r13d
mov [ rsp + 0x28 ] rax
lea rax [ rsp + 0x80 ]
xor r9d r9d
xor r8d r8d
xor edx edx
mov [ rsp + 0x80 ] r14d
mov [ rsp + 0x20 ] rax
call [ 0x15198 ]
cmp eax r14d
je 0x11d28
cmp rbx r14
je 0x11e91
cmp eax 0x103
jne 0x11d48
cmp eax 0x103
jne 0x11dcd
mov r11d r14d
mov [ rsp + 0x80 ] r14d
mov rcx [ rbx + 0x8 ]
xor r8d r8d
xor edx edx
call [ 0x15188 ]
mov r11d [ rsp + 0x80 ]
jmp 0x11d53
mov [ rbx + 0x10 ] r14b
cmp r12d r14d
jne 0x11e51
mov rax [ rsp + 0x328 ]
lea rdx [ rsp + 0x60 ]
lea rcx [ rsp + 0x70 ]
mov [ rsp + 0x300 ] rax
mov rax [ rsp + 0x318 ]
xor r8d r8d
mov [ rsp + 0x308 ] rax
movzx eax [ rsp + 0x34c ]
mov [ rsp + 0x70 ] r14w
add ax ax
mov [ rsp + 0x60 ] ax
mov [ rsp + 0x62 ] ax
lea rax [ rsp + 0x350 ]
mov [ rsp + 0x68 ] rax
mov eax 0x200
mov [ rsp + 0x72 ] ax
lea rax [ rsp + 0x100 ]
mov [ rsp + 0x78 ] rax
call [ 0x15158 ]
mov r12d r14d
cmp r11d r14d
jne 0x11dcd
cmp [ rbx ] 0x53524944
jne 0x11e91
lea rdx [ 0x14860 ]
lea rcx [ rsp + 0x100 ]
call [ 0x15018 ]
cmp rax r14
je 0x11ca8
mov rcx [ rbx + 0x8 ]
cmp rcx r14
je 0x11e68
or r12d 0xffffffff
cmp [ rbx ] 0x53524944
jne 0x11e91
lea rcx [ rsp + 0xe0 ]
mov rdx rax
call [ 0x15020 ]
lea rdx [ 0x14860 ]
lea rcx [ rsp + 0xc0 ]
call [ 0x15020 ]
lea rdx [ rsp + 0xc0 ]
lea rcx [ rsp + 0xe0 ]
mov r8b dil
call [ 0x15038 ]
cmp al r14b
je 0x11ca8
cmp [ rbx + 0x20 ] r14
je 0x11e78
call [ 0x150b0 ]
lea rdx [ rsp + 0x100 ]
mov rcx rsi
call 0x11818
jmp 0x11ca8
xor edx edx
mov rcx rbx
lea r8d [ rdx + 0x28 ]
call 0x14390
xor edx edx
mov rcx rbx
call [ 0x15010 ]
lea rcx [ rbx + 0x18 ]
call [ 0x15180 ]
XTComCreateInstance
mov rax rsp
mov [ rax + 0x10 ] rbx
mov [ rax + 0x18 ] rbp
mov [ rax + 0x20 ] rsi
push rdi
sub rsp 0x30
mov rdi r9
mov rsi r8
mov rbp rdx
mov rbx rcx
test rcx rcx
je 0x11f71
mov eax 0xc7fe0004
test r8 r8
je 0x11f71
test r9 r9
je 0x11f71
lea rdx [ rax + 0x8 ]
call 0x111c4
test eax eax
jns 0x11f57
mov rcx [ rsp + 0x40 ]
mov r9 rdi
mov r8 rsi
mov rax [ rcx ]
mov rdx rbp
call [ rax + 0x18 ]
mov ebx eax
lea rax [ rsp + 0x40 ]
lea r9 [ 0x15210 ]
xor r8d r8d
xor edx edx
mov rcx rbx
mov [ rsp + 0x20 ] rax
call 0x121fc
mov ebx eax
test eax eax
jne 0x11f6d
mov rbx [ rsp + 0x48 ]
mov rbp [ rsp + 0x50 ]
mov rsi [ rsp + 0x58 ]
add rsp 0x30
pop rdi
retn
mov eax ebx
jmp 0x11f76
mov rcx [ rsp + 0x40 ]
mov r9 rdi
mov r8 rsi
mov rax [ rcx ]
mov rdx rbp
call [ rax + 0x18 ]
mov rcx [ rsp + 0x40 ]
mov ebx eax
mov rax [ rcx ]
call [ rax + 0x10 ]
jmp 0x11f6d
XTComDeregisterClassFactory
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov rsi rdx
mov rbx rcx
test rcx rcx
je 0x12082
mov eax 0xc7fe0004
test rdx rdx
je 0x12082
lea r8 [ rcx + 0x10 ]
mov edi 0x811c9dc6
cmp rcx r8
jae 0x11fe1
mov eax 0x8d3dcb09
lea rcx [ 0x16700 ]
mul edi
shr edx 0x4
imul edx edx 0x1d
sub edi edx
mov dl 0x1
call [ 0x15000 ]
lea r10 [ 0x16880 ]
movsxd r9 edi
mov rcx [ r10 + r9 * 8 ]
mov ebp 0xc7fe000b
xor r8d r8d
jmp 0x12023
movzx eax [ rcx ]
imul edi edi 0x1000193
inc rcx
xor edi eax
cmp rcx r8
jb 0x11fce
test rcx rcx
jne 0x12017
cmp rcx rsi
je 0x1202d
cmp rcx rsi
jne 0x12071
mov rdx [ rbx ]
cmp rdx [ rcx ]
jne 0x12043
mov r8 rcx
mov rcx [ rcx + 0x18 ]
lea rcx [ 0x16700 ]
call [ 0x15030 ]
mov eax ebp
jmp 0x12087
sbb eax eax
sbb eax 0xffffffff
mov rdx [ rbx + 0x8 ]
cmp rdx [ rcx + 0x8 ]
jne 0x12043
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
retn
xor ebp ebp
test r8 r8
je 0x1205d
xor eax eax
jmp 0x12048
mov rdx [ rcx + 0x18 ]
mov [ r10 + r9 * 8 ] rdx
mov rax [ rcx + 0x18 ]
mov [ r8 + 0x18 ] rax
jmp 0x12065
test eax eax
jne 0x12071
and [ rcx + 0x10 ] rbp
xor edx edx
call [ 0x15010 ]
XTComFreeUnusedLibrariesEx
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x20
mov r13 rdx
lea r15 [ 0x16340 ]
lea rbp [ 0x16780 ]
test rbx rbx
jne 0x120f3
test [ rbx + 0x10 ] 0x2
je 0x1212b
add rdi 0x8
cmp rdi r15
jl 0x120ec
mov rsi rbx
mov rbx [ rbx + 0x40 ]
mov rax [ rbx + 0x20 ]
test rax rax
je 0x1212b
mov rbx [ rdi ]
xor esi esi
jmp 0x12132
lea r15 [ 0x16340 ]
mov rcx r15
call [ 0x15030 ]
jmp 0x1218b
call rax
test eax eax
jne 0x1212b
test r12 r12
jne 0x12152
lea rax [ rbx + 0x40 ]
mov rcx rbx
mov rbx [ rax ]
test rsi rsi
je 0x1211d
mov rbx r12
mov r12 [ r12 + 0x40 ]
mov rax [ rbx + 0x30 ]
test rax rax
je 0x12165
cmp r14b 0x1
je 0x120d1
mov [ rdi ] rbx
mov [ rsi + 0x40 ] rbx
jmp 0x12120
mov rcx [ rbx + 0x8 ]
mov dl 0x1
call 0x14278
mov rcx [ rbx ]
test rcx rcx
je 0x12180
call rax
mov dl 0x1
mov rcx r15
xor r12d r12d
xor r14b r14b
call [ 0x15000 ]
mov rdi rbp
lea r15 [ 0x16868 ]
mov dl 0x1
mov rcx r15
call [ 0x15000 ]
lea rcx [ 0x16868 ]
mov [ rax ] r12
mov r14b 0x1
mov r12 rcx
jmp 0x12132
xor edx edx
mov rcx rbx
call [ 0x15010 ]
xor edx edx
call [ 0x15010 ]
test rax rax
jne 0x121b2
mov rax [ rax + 0x40 ]
add rbp 0x8
cmp rbp rcx
jl 0x121ac
mov rax [ rbp ]
jmp 0x121b6
mov rcx r15
call [ 0x15030 ]
test r13 r13
je 0x121d7
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
xor eax eax
add rsp 0x20
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
and [ r13 ] 0x0
XTComGetClassObject
mov [ rsp + 0x8 ] rsi
push rdi
sub rsp 0x50
mov rdi r9
mov rsi rcx
test rcx rcx
je 0x12252
mov eax 0xc7fe0004
test r9 r9
je 0x12252
cmp [ rsp + 0x80 ] 0x0
je 0x12252
lea rdx [ rsp + 0x20 ]
call 0x11384
test eax eax
jne 0x12257
mov rsi [ rsp + 0x60 ]
add rsp 0x50
pop rdi
retn
mov rax [ rsp + 0x20 ]
test rax rax
jne 0x12240
mov r8 [ rsp + 0x80 ]
mov rdx rdi
mov rcx rsi
call rax
jmp 0x12257
mov eax 0xc7fe1005
jmp 0x12257
XTComRegisterClassFactory
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x20
mov rbp r8
mov r12 rdx
mov rdi rcx
test rcx rcx
je 0x12386
mov eax 0xc7fe0004
test rdx rdx
je 0x12386
test r8 r8
je 0x12386
lea rdx [ rcx + 0x10 ]
mov ebx 0x811c9dc6
cmp rcx rdx
jae 0x122c5
mov eax 0x8d3dcb09
lea rcx [ 0x16700 ]
mul ebx
shr edx 0x4
imul edx edx 0x1d
sub ebx edx
mov dl 0x1
call [ 0x15000 ]
lea r13 [ 0x16880 ]
movsxd rbx ebx
mov rdx [ r13 + rbx * 8 ]
xor esi esi
jmp 0x12319
movzx eax [ rcx ]
imul ebx ebx 0x1000193
inc rcx
xor ebx eax
cmp rcx rdx
jb 0x122b2
test rdx rdx
jne 0x122f6
mov r8 [ rdi ]
cmp r8 [ rdx ]
jne 0x1230c
jmp 0x12325
sbb eax eax
sbb eax 0xffffffff
mov r8 [ rdi + 0x8 ]
cmp r8 [ rdx + 0x8 ]
jne 0x1230c
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
je 0x12375
mov esi 0xc7fe0011
mov rdx [ rdx + 0x18 ]
xor eax eax
jmp 0x12311
lea rcx [ 0x16700 ]
call [ 0x15030 ]
mov eax esi
jmp 0x1238b
mov edx 0x20
mov r8d 0x4d435458
lea ecx [ rdx - 0x1f ]
call [ 0x15008 ]
mov r11 rax
test rax rax
je 0x12370
test eax eax
je 0x12320
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x20
pop r13
pop r12
pop rdi
retn
mov esi 0xc7fe0005
movdqu xmm0 [ rdi ]
mov [ rax + 0x10 ] r12
xor esi esi
movdqu [ rax ] xmm0
mov rax [ r13 + rbx * 8 ]
mov [ r11 + 0x18 ] rax
mov [ r13 + rbx * 8 ] r11
mov [ rbp ] r11
jmp 0x12375
NicmCreateInstance
sub rsp 0x28
call 0x11ed4
test eax eax
je 0x123f7
add rsp 0x28
retn
cmp eax 0x80004002
je 0x123f2
mov eax 0xc7fe0002
cmp eax 0x80040154
je 0x123eb
mov eax 0xc7fe1004
jmp 0x123f7
cmp eax 0x8007000e
je 0x123e4
mov eax 0xc7fe0005
jmp 0x123f7
cmp eax 0x80110425
mov ecx 0xc7fe1002
mov edx 0xc7fe0001
cmovne ecx edx
mov eax ecx
jmp 0x123f7
sub_1241c
push rbx
sub rsp 0x20
cmp [ 0x16458 ] 0x1
jne 0x124d0
add rsp 0x20
pop rbx
retn
lea rcx [ 0x16418 ]
xor edx edx
call 0x11ad0
lea rcx [ 0x16340 ]
call [ 0x150e0 ]
lea rcx [ 0x16580 ]
call [ 0x150e0 ]
call [ 0x15088 ]
lea rcx [ 0x16480 ]
mov dl 0x1
call [ 0x15000 ]
jmp 0x1249a
mov r11 [ 0x16428 ]
mov rbx r11
test r11 r11
jne 0x1246e
mov rcx [ rbx + 0x10 ]
mov rax [ r11 + 0x40 ]
mov [ 0x16428 ] rax
test rcx rcx
je 0x1248f
lea rcx [ 0x16480 ]
call [ 0x15030 ]
call [ 0x15068 ]
lea rcx [ 0x16480 ]
call [ 0x150e0 ]
mov [ 0x16458 ] 0x0
xor edx edx
mov rcx rbx
call [ 0x15010 ]
xor edx edx
call [ 0x15010 ]
and [ rbx + 0x10 ] 0x0
sub_124dc
mov [ rsp + 0x10 ] rbx
push rsi
sub rsp 0xa0
lea rsi [ 0x16540 ]
mov edx 0x1
mov rcx rsi
call [ 0x15120 ]
mov ebx eax
test eax eax
jne 0x125b0
mov eax ebx
mov rbx [ rsp + 0xb8 ]
add rsp 0xa0
pop rsi
retn
and [ rsp + 0x50 ] ebx
and [ rsp + 0x48 ] 0x0
and [ rsp + 0x78 ] 0x0
and [ rsp + 0x98 ] 0x0
mov [ rsp + 0x40 ] 0x10
mov [ rsp + 0x38 ] 0x3
and [ rsp + 0x30 ] ebx
and [ rsp + 0x28 ] ebx
and [ rsp + 0x20 ] 0x0
lea rax [ 0x16320 ]
lea r9 [ rsp + 0x60 ]
lea r8 [ rsp + 0x70 ]
lea rcx [ rsp + 0xb0 ]
mov edx 0x140001
mov [ rsp + 0x70 ] 0x30
mov [ rsp + 0x88 ] 0x200
mov [ rsp + 0x80 ] rax
mov [ rsp + 0x90 ] rsi
call [ 0x15098 ]
mov ebx eax
test eax eax
jne 0x125b0
mov rcx [ rsp + 0xb0 ]
lea edx [ rax + 0x4 ]
mov r8 rsi
call [ 0x15108 ]
mov rcx [ rsp + 0xb0 ]
mov ebx eax
call [ 0x150b0 ]
sub_125cc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rdx
push rsi
push r12
push r13
push r14
push r15
sub rsp 0x60
mov rsi rdx
xor ebx ebx
call [ 0x15088 ]
call [ 0x150e8 ]
test rax rax
jne 0x12610
mov [ rsp + 0xa0 ] bl
mov r13d 0x1
mov rcx rsi
call [ 0x150c0 ]
lea r13d [ rbx + 0x1 ]
mov [ rsp + 0xa0 ] r13b
jmp 0x1261d
and [ rsp + 0x50 ] rbx
cmp [ rsi + 0x40 ] 0x0
je 0x12945
sub eax 0x4
je 0x1288e
mov r12 [ rsi + 0xb8 ]
mov [ rsp + 0xa8 ] r12
mov eax [ r12 + 0x18 ]
sub eax 0x143b63
je 0x12910
mov rcx [ r12 + 0x20 ]
mov [ rsp + 0x50 ] rcx
jmp 0x12966
mov r8d r13d
mov edx 0x18
mov rcx [ r12 + 0x20 ]
call [ 0x15048 ]
mov rcx [ r12 + 0x20 ]
add rcx 0x10
mov r8d r13d
mov edx 0x8
call [ 0x15078 ]
and [ rsp + 0x48 ] rbx
cmp [ rsi + 0x40 ] 0x0
je 0x128ac
sub eax 0x4
je 0x1271d
test rcx rcx
je 0x129c6
mov rax [ r12 + 0x20 ]
mov rcx [ rax ]
mov [ rsp + 0x48 ] rcx
jmp 0x128d0
mov r8d r13d
mov edx 0x18
mov rcx [ r12 + 0x20 ]
call [ 0x15048 ]
and [ rsp + 0x40 ] rbx
cmp [ rsi + 0x40 ] 0x0
je 0x1274e
sub eax 0x4
je 0x126f8
mov ebx 0xc000000d
and [ rsi + 0x38 ] 0x0
lea r13 [ rcx + 0x10 ]
mov r9 r13
lea r8 [ 0x15240 ]
xor edx edx
call 0x123ac
mov ebx eax
mov r14d 0xc0000000
and eax r14d
cmp eax r14d
je 0x129b7
test rcx rcx
je 0x128ed
mov r14 [ r12 + 0x20 ]
mov [ rsp + 0x40 ] r14
jmp 0x12777
mov r8d r13d
mov edx 0x28
mov rcx [ r12 + 0x20 ]
call [ 0x15048 ]
mov r8d r13d
mov edx 0x28
mov rcx [ r12 + 0x20 ]
call [ 0x15078 ]
call 0x12dd0
mov ebx eax
mov [ rsi + 0x30 ] eax
and [ rsi + 0x38 ] 0x0
and [ r12 + 0x3 ] 0xfe
mov dl 0x2
mov rcx rsi
call [ 0x150b8 ]
jmp 0x129e4
cmp eax 0x4
je 0x1266f
call [ 0x15068 ]
mov eax ebx
mov rbx [ rsp + 0x90 ]
add rsp 0x60
pop r15
pop r14
pop r13
pop r12
pop rsi
retn
xor ecx ecx
call [ 0x150c0 ]
mov ebx 0xc0020012
call 0x12dd0
mov rcx [ r13 ]
call 0x12bc4
and eax r14d
cmp eax r14d
jne 0x129bc
mov ebx 0xc0020012
cmp [ r12 + 0x10 ] 0x4
jne 0x128e6
mov eax 0xc000000d
test r14 r14
cmove ebx eax
mov r15d [ r12 + 0x10 ]
cmp r15d 0x28
cmovb ebx eax
test ebx ebx
jne 0x1279d
cmp [ rsp + 0xa0 ] 0x0
je 0x129f6
cmp [ 0x16450 ] rbx
je 0x126d5
mov ebx 0xc7fe0010
mov [ rsi + 0x30 ] ebx
and [ r12 + 0x3 ] 0xfe
jmp 0x129e4
mov [ rsi + 0x30 ] ebx
and [ r12 + 0x3 ] 0xfe
mov dl 0x2
mov rcx rsi
call [ 0x150b8 ]
mov [ rsi + 0x38 ] 0x18
jmp 0x129d0
mov rcx [ r13 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov ebx 0xc0000001
jmp 0x129bc
mov ebx 0xc000000d
jmp 0x128f2
call 0x12ce4
xor ebx ebx
jmp 0x128f2
test ebx ebx
jne 0x12867
lea rcx [ r14 + 0x10 ]
call 0x12aa8
mov ebx eax
mov ebx 0xc7fe0001
call [ 0x15128 ]
mov rcx [ 0x16450 ]
mov r10 [ rcx ]
lea rdx [ rsp + 0x98 ]
mov [ rsp + 0x28 ] rdx
mov [ rsp + 0x20 ] r13d
xor r9d r9d
lea r8 [ 0x12b98 ]
mov rdx rax
call [ r10 + 0x50 ]
mov ebx eax
mov r14d 0xc0000000
and eax r14d
cmp eax r14d
je 0x126da
mov [ rsi + 0x30 ] ebx
and [ rsi + 0x38 ] 0x0
and [ r12 + 0x3 ] 0xfe
mov dl 0x2
mov rcx rsi
call [ 0x150b8 ]
jmp 0x129e4
test r14 r14
je 0x12870
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
mov edx r15d
mov rcx r14
call [ 0x15118 ]
mov r14 rax
test rax rax
je 0x12841
mov [ rsi + 0x30 ] ebx
and [ rsi + 0x38 ] 0x0
and [ r12 + 0x3 ] 0xfe
mov dl 0x2
mov rcx rsi
call [ 0x150b8 ]
jmp 0x129e4
mov rcx [ 0x16450 ]
mov rax [ rcx ]
mov r8d r13d
mov rdx [ rsp + 0x98 ]
call [ rax + 0x28 ]
jmp 0x126da
mov [ rsi + 0x30 ] ebx
and [ rsi + 0x38 ] 0x0
and [ r12 + 0x3 ] 0xfe
mov dl 0x2
mov rcx rsi
call [ 0x150b8 ]
jmp 0x129e4
mov [ r14 + 0x20 ] ebx
mov ebx 0xc000009a
mov [ rsp + 0x30 ] ebx
xor edx edx
lea r8d [ rbx + 0x2 ]
mov rcx rax
call [ 0x150d0 ]
and [ rsp + 0x28 ] ebx
and [ rsp + 0x20 ] ebx
xor r9d r9d
mov r8d r13d
xor edx edx
mov rcx r14
call [ 0x150a0 ]
mov r15 rax
mov [ rsp + 0x40 ] rax
test rax rax
je 0x1281d
jmp 0x12870
mov ebx 0xc000009a
mov [ rsp + 0x30 ] ebx
mov rcx [ rax ]
mov r8 [ rcx ]
mov rdx rax
call [ r8 + 0x18 ]
mov ebx eax
test [ r14 + 0xa ] r13b
je 0x12826
mov rcx r14
call [ 0x15080 ]
jmp 0x1284a
mov rcx r14
call [ 0x150d8 ]
test [ r14 + 0xa ] 0x2
je 0x12836
mov rdx r14
mov rcx r15
call [ 0x15040 ]
jmp 0x12826
jmp 0x12865
sub_12a44
sub rsp 0x28
lea rcx [ 0x16330 ]
call [ 0x15050 ]
mov rcx [ 0x16538 ]
test rcx rcx
je 0x12a6f
mov rcx [ 0x16450 ]
test rcx rcx
je 0x12a89
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x16538 ] 0x0
call 0x1241c
mov rcx [ 0x16460 ]
add rsp 0x28
jmp [ 0x15070 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ 0x16450 ] 0x0
sub_12aa8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x30
mov rdi rcx
mov rcx [ 0x16538 ]
mov esi 0xc0000000
test rcx rcx
jne 0x12b30
xor ebx ebx
and [ rsp + 0x20 ] rcx
lea edx [ rcx + 0x6 ]
lea rcx [ 0x16500 ]
xor r9d r9d
xor r8d r8d
call [ 0x150c8 ]
mov ecx eax
mov ebx eax
and ecx esi
cmp ecx esi
je 0x12b27
mov rsi [ rsp + 0x48 ]
mov eax ebx
mov rbx [ rsp + 0x40 ]
add rsp 0x30
pop rdi
retn
mov rax [ rcx ]
mov rdx rdi
call [ rax + 0x48 ]
mov ebx eax
mov rcx [ 0x16538 ]
jmp 0x12b32
cmp [ 0x16538 ] 0x0
jne 0x12b18
mov eax ebx
and eax esi
cmp eax esi
je 0x12b45
lea rcx [ 0x16500 ]
xor edx edx
call [ 0x15090 ]
lea r9 [ 0x16538 ]
lea r8 [ 0x15260 ]
lea rcx [ 0x15250 ]
xor edx edx
call 0x123ac
mov ebx eax
sub_12b60
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x8 ]
test rcx rcx
je 0x12b7d
xor eax eax
add rsp 0x20
pop rbx
retn
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ rbx + 0x8 ] 0x0
sub_12bc4
push rbx
push rdi
push r12
sub rsp 0x50
cmp [ 0x16450 ] 0x0
mov rdi rcx
je 0x12ccb
mov ebx 0xc7fe0001
call [ 0x15128 ]
mov rcx [ 0x16450 ]
lea rdx [ rsp + 0x80 ]
mov r10 [ rcx ]
mov [ rsp + 0x28 ] rdx
lea r8 [ 0x12b98 ]
xor r9d r9d
mov rdx rax
mov [ rsp + 0x20 ] 0x1
call [ r10 + 0x50 ]
mov r12d 0xc0000000
mov ecx eax
mov ebx eax
and ecx r12d
cmp ecx r12d
je 0x12cd0
mov eax ebx
add rsp 0x50
pop r12
pop rdi
pop rbx
retn
mov rax [ rsp + 0x80 ]
lea rdx [ rsp + 0x78 ]
mov r9 rdi
mov rcx [ rax + 0x8 ]
mov [ rsp + 0x48 ] rdx
lea rdx [ rsp + 0x88 ]
mov rax [ rcx ]
mov [ rsp + 0x40 ] rdx
and [ rsp + 0x38 ] 0x0
lea rdx [ 0x12b98 ]
mov [ rsp + 0x30 ] 0x1
and [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] rdx
xor r8d r8d
xor edx edx
call [ rax + 0x20 ]
mov ebx eax
and eax r12d
cmp eax r12d
je 0x12cae
mov rcx [ 0x16450 ]
mov rdx [ rsp + 0x80 ]
mov r8d 0x1
mov rax [ rcx ]
call [ rax + 0x38 ]
jmp 0x12cd0
mov rax [ rsp + 0x88 ]
mov r8d 0x1
mov [ rax ] rdi
mov rax [ rsp + 0x80 ]
mov rdx [ rsp + 0x88 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x38 ]
sub_12ce4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x20 ] rbp
push rdi
sub rsp 0x30
cmp [ 0x16450 ] 0x0
mov rdi rcx
je 0x12db0
mov ebx 0xc7fe0001
call [ 0x15128 ]
mov rcx [ 0x16450 ]
lea rdx [ rsp + 0x48 ]
mov r10 [ rcx ]
mov [ rsp + 0x28 ] rdx
lea r8 [ 0x12b98 ]
xor r9d r9d
mov rdx rax
mov [ rsp + 0x20 ] 0x1
call [ r10 + 0x50 ]
mov ebp 0xc0000000
mov ecx eax
mov ebx eax
and ecx ebp
cmp ecx ebp
je 0x12db5
mov rbp [ rsp + 0x58 ]
mov eax ebx
mov rbx [ rsp + 0x40 ]
add rsp 0x30
pop rdi
retn
mov rax [ rsp + 0x48 ]
lea rdx [ rsp + 0x50 ]
lea r8 [ 0x12b98 ]
mov rcx [ rax + 0x8 ]
mov [ rsp + 0x28 ] rdx
xor r9d r9d
mov rax [ rcx ]
mov rdx rdi
mov [ rsp + 0x20 ] 0x1
call [ rax + 0x50 ]
mov ebx eax
and eax ebp
cmp eax ebp
je 0x12d96
mov rcx [ 0x16450 ]
mov rdx [ rsp + 0x48 ]
mov r8d 0x1
mov rax [ rcx ]
call [ rax + 0x38 ]
jmp 0x12db5
mov rax [ rsp + 0x48 ]
mov rdx [ rsp + 0x50 ]
mov r8d 0x1
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x28 ]
sub_12dd0
mov [ rsp + 0x18 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x50
call [ 0x15128 ]
mov rcx [ 0x16450 ]
xor esi esi
mov rdi rax
cmp rcx rsi
jne 0x12ebd
mov rax [ rcx ]
lea rdx [ rsp + 0x70 ]
mov ebp 0x1
mov [ rsp + 0x48 ] rdx
lea rdx [ rsp + 0x78 ]
lea r8 [ 0x12b8c ]
mov [ rsp + 0x40 ] rdx
mov [ rsp + 0x38 ] ebp
lea rdx [ 0x12b98 ]
mov [ rsp + 0x30 ] ebp
mov [ rsp + 0x28 ] esi
mov [ rsp + 0x20 ] rdx
mov rdx rdi
mov r9 rdi
call [ rax + 0x20 ]
mov ebx eax
mov edi eax
shr ebx 0x1e
cmp ebx 0x3
je 0x12fd1
lea edx [ rsi + 0x6 ]
lea rcx [ 0x16500 ]
xor r9d r9d
xor r8d r8d
mov [ rsp + 0x20 ] rsi
call [ 0x150c8 ]
cmp eax esi
jne 0x12ea5
mov eax edi
cmp [ rsp + 0x70 ] ebp
jne 0x12fa0
mov ebx 0xc7fe0001
lea r9 [ 0x16450 ]
lea r8 [ 0x15220 ]
lea rcx [ 0x15230 ]
xor edx edx
call 0x123ac
mov ebp 0xc0000000
mov ebx eax
and eax ebp
cmp eax ebp
je 0x12e94
cmp ebx 0x3
je 0x12fbc
mov r9 [ rsp + 0x78 ]
lea r8 [ 0x15220 ]
lea rcx [ 0x15230 ]
add r9 0x8
xor edx edx
call 0x123ac
mov ebx eax
mov edi eax
shr ebx 0x1e
cmp ebx 0x3
je 0x12fbc
mov eax ebx
jmp 0x12fd3
lea rcx [ 0x16500 ]
xor edx edx
call [ 0x15090 ]
jmp 0x12eaa
mov rcx [ 0x16450 ]
mov [ rsp + 0x40 ] esi
lea rdx [ 0x12b60 ]
mov rax [ rcx ]
mov [ rsp + 0x38 ] rsi
mov [ rsp + 0x30 ] rsi
mov [ rsp + 0x28 ] rdx
lea r8d [ rsi + 0x8 ]
lea edx [ rsi + 0x10 ]
xor r9d r9d
mov [ rsp + 0x20 ] esi
call [ rax + 0x18 ]
mov ebx eax
and eax ebp
cmp eax ebp
jne 0x12e94
mov rcx [ 0x16450 ]
mov rdx [ rsp + 0x78 ]
mov r8d ebp
mov rax [ rcx ]
call [ rax + 0x28 ]
mov rcx [ 0x16450 ]
mov rdx [ rsp + 0x78 ]
mov r8d ebp
mov rax [ rcx ]
call [ rax + 0x38 ]
jmp 0x12fd1
mov rax [ rsp + 0x78 ]
mov [ rsp + 0x40 ] esi
lea r9 [ 0x12ba8 ]
mov rcx [ rax + 0x8 ]
mov [ rsp + 0x38 ] rsi
mov [ rsp + 0x30 ] rsi
mov rax [ rcx ]
mov [ rsp + 0x28 ] r9
lea r8d [ rbp + 0x1 ]
lea edx [ rbp + 0x7 ]
xor r9d r9d
mov [ rsp + 0x20 ] esi
call [ rax + 0x18 ]
mov ebx eax
mov edi eax
shr ebx 0x1e
cmp ebx 0x3
jne 0x12fa5
mov rbx [ rsp + 0x80 ]
add rsp 0x50
pop rdi
pop rsi
pop rbp
retn
mov rcx [ 0x16450 ]
cmp rcx rsi
jne 0x12ebd
mov rcx [ 0x16450 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov [ 0x16450 ] rsi
mov rax [ rsp + 0x78 ]
mov rcx [ rax + 0x8 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
mov r11 [ rsp + 0x78 ]
mov [ r11 + 0x8 ] rsi
sub_12fec
mov [ rsp + 0x10 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
sub rsp 0xb0
movzx eax [ 0x16442 ]
mov r13d 0x2
mov rsi rdx
add ax [ rcx + 0x2 ]
mov rdi rcx
lea r12d [ r13 - 0x1 ]
add ax r13w
mov r8d 0x4d435458
mov ecx r12d
movzx edx ax
mov [ rsp + 0x52 ] ax
call [ 0x15008 ]
xor ebp ebp
mov [ rsp + 0x58 ] rax
cmp rax rbp
je 0x132dd
mov ebx 0xc000009a
lea rdx [ 0x16440 ]
lea rcx [ rsp + 0x50 ]
mov [ rsp + 0x50 ] bp
call [ 0x151a0 ]
lea rcx [ rsp + 0x50 ]
mov rdx rdi
call [ 0x151a0 ]
lea rax [ rsp + 0x50 ]
lea r8 [ rsp + 0x80 ]
mov [ rsp + 0x90 ] rax
lea rax [ rsp + 0xf0 ]
lea rcx [ rsp + 0xf8 ]
mov [ rsp + 0x30 ] rax
xor r9d r9d
mov edx 0x2001f
mov [ rsp + 0x28 ] r12d
mov [ rsp + 0x80 ] 0x30
mov [ rsp + 0x88 ] rbp
mov [ rsp + 0x20 ] rbp
mov [ rsp + 0x98 ] 0x200
mov [ rsp + 0xa0 ] rbp
mov [ rsp + 0xa8 ] rbp
call [ 0x15130 ]
mov ebx eax
cmp eax ebp
jne 0x132bc
movzx r8d [ rsp + 0x52 ]
mov rcx [ rsp + 0x58 ]
xor edx edx
call 0x14390
mov rcx [ rsp + 0x58 ]
xor edx edx
call [ 0x15010 ]
jmp 0x132e2
lea rdx [ 0x161b8 ]
lea rcx [ rsp + 0x40 ]
call [ 0x15148 ]
mov rcx [ rdi + 0x8 ]
movzx r11d [ rdi + 0x2 ]
mov [ rsp + 0x28 ] r11d
mov [ rsp + 0x20 ] rcx
mov rcx [ rsp + 0xf8 ]
lea rdx [ rsp + 0x40 ]
mov r9d r12d
xor r8d r8d
call [ 0x15160 ]
lea rdx [ 0x161d0 ]
lea rcx [ rsp + 0x40 ]
mov [ rsp + 0xe0 ] r12d
call [ 0x15148 ]
mov rcx [ rsp + 0xf8 ]
lea edi [ rbp + 0x4 ]
lea rax [ rsp + 0xe0 ]
lea rdx [ rsp + 0x40 ]
mov r9d edi
xor r8d r8d
mov [ rsp + 0x28 ] edi
mov [ rsp + 0x20 ] rax
call [ 0x15160 ]
lea rdx [ 0x161f0 ]
lea rcx [ rsp + 0x40 ]
mov [ rsp + 0xe0 ] 0x3
call [ 0x15148 ]
mov rcx [ rsp + 0xf8 ]
lea rax [ rsp + 0xe0 ]
lea rdx [ rsp + 0x40 ]
mov r9d edi
xor r8d r8d
mov [ rsp + 0x28 ] edi
mov [ rsp + 0x20 ] rax
call [ 0x15160 ]
lea rdx [ 0x16200 ]
lea rcx [ rsp + 0x40 ]
mov [ rsp + 0xe0 ] r12d
call [ 0x15148 ]
mov rcx [ rsp + 0xf8 ]
lea rax [ rsp + 0xe0 ]
lea rdx [ rsp + 0x40 ]
mov r9d edi
xor r8d r8d
mov [ rsp + 0x28 ] edi
mov [ rsp + 0x20 ] rax
call [ 0x15160 ]
lea rdx [ 0x16210 ]
lea rcx [ rsp + 0x40 ]
call [ 0x15148 ]
mov rcx [ rsp + 0xf8 ]
lea rax [ 0x16220 ]
lea rdx [ rsp + 0x40 ]
mov r9d r12d
xor r8d r8d
mov [ rsp + 0x28 ] 0x8
mov [ rsp + 0x20 ] rax
call [ 0x15160 ]
lea rdx [ 0x16228 ]
lea rcx [ rsp + 0x40 ]
call [ 0x15148 ]
lea rcx [ rsp + 0x70 ]
mov rdx rsi
mov [ rsp + 0x62 ] bp
mov [ rsp + 0x60 ] bp
mov [ rsp + 0x68 ] rbp
call [ 0x15020 ]
lea rdx [ rsp + 0x70 ]
lea rcx [ rsp + 0x60 ]
mov r8b r12b
call [ 0x15138 ]
movzx r11d [ rsp + 0x62 ]
mov rax [ rsp + 0x68 ]
mov rcx [ rsp + 0xf8 ]
mov [ rsp + 0x28 ] r11d
mov r9d r13d
mov [ rsp + 0x20 ] rax
xor r8d r8d
lea rdx [ rsp + 0x40 ]
call [ 0x15160 ]
lea rcx [ rsp + 0x60 ]
call [ 0x15180 ]
mov rcx [ rsp + 0xf8 ]
call [ 0x150b0 ]
mov eax ebx
mov rbx [ rsp + 0xe8 ]
add rsp 0xb0
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
sub_13304
mov rax rsp
mov [ rax + 0x8 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x40
xor ebx ebx
mov rsi rcx
lea r9 [ rax + 0x10 ]
lea r8d [ rbx + 0x8 ]
lea ecx [ rbx + 0xb ]
lea rdx [ rax + 0x18 ]
mov [ rax + 0x18 ] rbx
mov [ rax + 0x10 ] ebx
call [ 0x15168 ]
cmp eax 0xc0000004
je 0x13348
cmp [ rsp + 0x68 ] ebx
je 0x13354
cmp eax 0xc0000023
je 0x13348
mov rdi [ rsp + 0x70 ]
cmp rdi rbx
je 0x13454
mov edi [ rsp + 0x68 ]
jmp 0x1336d
cmp eax 0xc0000206
jne 0x13354
xor eax eax
imul rdi rdi 0x128
add rdi 0x8
mov r8d 0x4d435458
mov rdx rdi
xor ecx ecx
call [ 0x15008 ]
mov rbp rax
cmp rax rbx
je 0x1344f
mov rax rbx
jmp 0x13456
mov r8 rdi
xor edx edx
mov rcx rax
call 0x14390
lea r9 [ rsp + 0x68 ]
mov r8 rdi
mov rdx rbp
mov ecx 0xb
mov [ rsp + 0x68 ] ebx
call [ 0x15168 ]
mov r11 [ rbp ]
lea rcx [ rsp + 0x30 ]
mov rdx rsi
mov [ rsp + 0x70 ] r11
call [ 0x15020 ]
mov rdi rbx
cmp [ rsp + 0x70 ] rbx
jbe 0x13444
mov rbx [ rsp + 0x60 ]
add rsp 0x40
pop rdi
pop rsi
pop rbp
retn
xor edx edx
mov rcx rbp
call [ 0x15010 ]
lea rsi [ rbp + 0x30 ]
lea rcx [ rsp + 0x20 ]
call [ 0x15020 ]
lea rdx [ rsp + 0x20 ]
lea rcx [ rsp + 0x30 ]
mov r8b 0x1
call [ 0x15038 ]
cmp al bl
jne 0x13438
cmp [ rsi ] bl
je 0x133e9
imul rdi rdi 0x128
mov rbx [ rdi + rbp + 0x18 ]
inc rdi
add rsi 0x128
cmp rdi [ rsp + 0x70 ]
jb 0x133d6
cmp [ rdx ] 0x5c
je 0x13400
inc rdx
cmp [ rdx ] bl
jne 0x133e2
cmp [ rsi ] 0x5c
mov rdx rsi
jne 0x13403
jmp 0x13444
inc rdx
cmp rdx rsi
je 0x133fb
cmp [ rdx ] 0x5c
jne 0x13403
dec rdx
cmp [ rdx ] 0x5c
jne 0x133ee
sub_1346c
mov rax rsp
mov [ rax + 0x18 ] rbx
mov [ rax + 0x20 ] rsi
push rdi
sub rsp 0x80
xor edi edi
mov [ rax - 0x28 ] rcx
lea r8 [ rax - 0x38 ]
lea rcx [ rax + 0x10 ]
mov edx 0x80000000
mov [ rax - 0x38 ] 0x30
mov [ rax - 0x30 ] rdi
mov [ rax - 0x20 ] 0x200
mov [ rax - 0x18 ] rdi
mov [ rax - 0x10 ] rdi
call [ 0x151d0 ]
cmp eax edi
jne 0x13634
cmp [ 0x16438 ] rdi
jne 0x13651
lea rdx [ 0x16228 ]
lea rcx [ rsp + 0x40 ]
call [ 0x15148 ]
mov rcx [ rsp + 0x98 ]
lea r11 [ rsp + 0x90 ]
mov [ rsp + 0x28 ] r11
lea r8d [ rdi + 0x2 ]
lea rdx [ rsp + 0x40 ]
xor r9d r9d
mov [ rsp + 0x20 ] edi
call [ 0x15190 ]
cmp eax 0x80000005
je 0x13509
lea r11 [ rsp + 0x80 ]
mov rbx [ r11 + 0x20 ]
mov rsi [ r11 + 0x28 ]
mov rsp r11
pop rdi
retn
lea rdx [ 0x16110 ]
lea rcx [ 0x16430 ]
call [ 0x15020 ]
mov eax [ rsp + 0x90 ]
mov esi 0x1
mov r8d 0x4d435458
add eax 0x10
mov ecx esi
mov edx eax
mov [ rsp + 0x90 ] eax
call [ 0x15008 ]
mov rbx rax
cmp rax rdi
je 0x13626
cmp eax 0xc0000023
jne 0x13626
mov rcx [ rsp + 0x98 ]
call [ 0x150b0 ]
mov r8d [ rsp + 0x90 ]
xor edx edx
mov rcx rax
call 0x14390
mov ecx [ rsp + 0x90 ]
lea r11 [ rsp + 0x90 ]
mov [ rsp + 0x28 ] r11
mov [ rsp + 0x20 ] ecx
mov rcx [ rsp + 0x98 ]
lea r8d [ rsi + 0x1 ]
lea rdx [ rsp + 0x40 ]
mov r9 rbx
call [ 0x15190 ]
cmp eax edi
jne 0x1361b
xor edx edx
mov rcx rbx
call [ 0x15010 ]
lea rdx [ rbx + 0xc ]
lea rcx [ rsp + 0x30 ]
call [ 0x15148 ]
movzx edx [ rsp + 0x32 ]
xor ecx ecx
add rdx rsi
mov r8d 0x4d435458
call [ 0x15008 ]
mov [ 0x16438 ] rax
cmp rax rdi
je 0x1361b
movzx ecx [ rsp + 0x32 ]
mov [ 0x16430 ] di
lea rdx [ rsp + 0x30 ]
add cx si
xor r8d r8d
mov [ 0x16432 ] cx
lea rcx [ 0x16430 ]
mov [ rax ] dil
call [ 0x15158 ]
movzx eax [ 0x16430 ]
mov rcx [ 0x16438 ]
sub eax esi
cdqe
add rax rcx
jmp 0x13605
cmp [ rax ] 0x5c
jne 0x135fd
cmp rax rcx
je 0x1360a
mov [ rax ] dil
sub ax [ 0x16438 ]
mov [ 0x16430 ] ax
sub rax rsi
sub_1366c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x90
xor edi edi
mov rbx rcx
test rcx rcx
je 0x137a2
mov rax rdi
mov rbx [ rsp + 0xa0 ]
add rsp 0x90
pop rdi
retn
lea edx [ rdi + 0x40 ]
lea ecx [ rdi + 0x1 ]
mov r8d 0x4d435458
call [ 0x15008 ]
mov rdi rax
test rax rax
je 0x137a2
xor edx edx
mov rcx rax
lea r8d [ rdx + 0x40 ]
call 0x14390
lea rcx [ rsp + 0x30 ]
mov rdx rbx
mov [ rdi ] 0x454c4946
call [ 0x15020 ]
movzx r11d [ rsp + 0x32 ]
mov [ rdi + 0xa ] r11w
movzx edx [ rsp + 0x32 ]
mov ecx 0x1
mov r8d 0x4d435458
call [ 0x15008 ]
mov [ rdi + 0x10 ] rax
test rax rax
je 0x13795
xor edx edx
mov rcx rdi
call [ 0x15010 ]
xor edi edi
lea rcx [ rdi + 0x8 ]
lea rdx [ rsp + 0x30 ]
call [ 0x151a8 ]
lea rdx [ rsp + 0x30 ]
lea rcx [ rsp + 0x40 ]
mov r8b 0x1
call [ 0x15138 ]
test eax eax
jne 0x13784
mov rcx [ rdi + 0x10 ]
xor edx edx
call [ 0x15010 ]
and [ rdi + 0x10 ] 0x0
and [ rsp + 0x68 ] 0x0
and [ rsp + 0x80 ] 0x0
and [ rsp + 0x88 ] 0x0
lea rax [ rsp + 0x40 ]
lea rcx [ rdi + 0x18 ]
lea r9 [ rsp + 0x50 ]
lea r8 [ rsp + 0x60 ]
mov edx 0x80000000
mov [ rsp + 0x28 ] 0x800
and [ rsp + 0x20 ] 0x0
mov [ rsp + 0x70 ] rax
mov [ rsp + 0x60 ] 0x30
mov [ rsp + 0x78 ] 0x200
call [ 0x151b8 ]
lea rcx [ rsp + 0x40 ]
mov ebx eax
call [ 0x15180 ]
test ebx ebx
je 0x137a2
sub_137bc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx [ 0x16428 ]
mov rsi rdx
xor edi edi
jmp 0x137f1
cmp rbx rdi
jne 0x137d9
lea rdx [ rbx + 0x8 ]
mov r8b 0x1
mov rcx rsi
call [ 0x15038 ]
cmp al 0x1
je 0x137f8
jmp 0x137fb
mov rdi rbx
mov rbx [ rbx + 0x40 ]
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
mov rax rdi
add rsp 0x20
pop rdi
retn
sub_13814
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x60
xor r13d r13d
mov rbp rcx
mov rsi r13
cmp rcx r13
je 0x13b3b
mov rax rsi
mov rdx rcx
lea rcx [ rax - 0x28 ]
call [ 0x15020 ]
movzx r11d [ rsp + 0x50 ]
cmp r11w r13w
je 0x13b3b
movzx eax r11w
dec eax
movsxd rdi eax
add rdi [ rsp + 0x58 ]
jmp 0x13873
cmp rdi rbp
jne 0x1386b
cmp [ rdi ] 0x5c
je 0x1387d
cmp [ rdi ] 0x5c
jne 0x13880
inc rdi
dec rdi
cmp rdi r13
je 0x13b3b
lea rcx [ rsp + 0x40 ]
mov rdx rdi
call [ 0x15020 ]
call [ 0x15088 ]
lea rcx [ 0x16480 ]
mov dl 0x1
call [ 0x15028 ]
mov rcx [ 0x16428 ]
lea rdx [ rsp + 0x40 ]
call 0x137bc
lea rcx [ 0x16480 ]
mov rbx rax
call [ 0x15030 ]
call [ 0x15068 ]
cmp rbx r13
je 0x138e0
call [ 0x15088 ]
lea rcx [ 0x16480 ]
mov dl 0x1
call [ 0x15000 ]
mov rcx [ 0x16428 ]
lea rdx [ rsp + 0x40 ]
call 0x137bc
mov rsi rax
cmp rax r13
jne 0x13b28
mov rax rbx
jmp 0x13b3e
lea rcx [ 0x16480 ]
call [ 0x15030 ]
call [ 0x15068 ]
mov r12d 0x48
mov r8d 0x4d435458
lea ecx [ r12 - 0x47 ]
mov rdx r12
call [ 0x15008 ]
mov rbx rax
cmp rax r13
je 0x13afe
lea r11 [ rsp + 0x60 ]
mov rbx [ r11 + 0x20 ]
mov rbp [ r11 + 0x28 ]
mov rsi [ r11 + 0x30 ]
mov rsp r11
pop r13
pop r12
pop rdi
retn
cmp rsi r13
jne 0x13b28
mov r8 r12
xor edx edx
mov rcx rax
call 0x14390
movzx r11d [ rsp + 0x42 ]
lea ecx [ r12 - 0x47 ]
mov [ rbx + 0xa ] r11w
movzx edx [ rsp + 0x42 ]
mov r8d 0x4d435458
call [ 0x15008 ]
mov [ rbx + 0x10 ] rax
cmp rax r13
je 0x13afe
cmp rbx r13
je 0x13b28
lea rcx [ rbx + 0x8 ]
lea rdx [ rsp + 0x40 ]
mov [ rcx ] r13w
call [ 0x151a8 ]
mov rcx rdi
call 0x13304
mov [ rbx + 0x18 ] rax
cmp rax r13
je 0x139bb
mov rcx [ rbx + 0x10 ]
cmp rcx r13
je 0x13b1d
lea rcx [ rsp + 0x30 ]
mov rdx rdi
mov [ rsp + 0x28 ] r13
mov [ rsp + 0x20 ] r13w
mov [ rsp + 0x22 ] r13w
mov r12 rdi
call [ 0x15020 ]
mov r11b [ rdi ]
mov al 0x2e
jmp 0x139f0
mov rax [ 0x16428 ]
mov rsi rbx
mov [ rbx ] 0x43455845
mov [ rbx + 0x20 ] 0x1
mov [ 0x16428 ] rbx
mov [ rbx + 0x40 ] rax
jmp 0x13afe
xor edx edx
mov rcx rbx
call [ 0x15010 ]
xor edx edx
call [ 0x15010 ]
mov [ rbx + 0x10 ] r13
cmp r11b al
jne 0x139e4
cmp r11b r13b
je 0x139f5
cmp [ r12 ] al
jne 0x13b03
inc r12
mov r11b [ r12 ]
cmp r12 rdi
jbe 0x13b03
lea rdx [ rsp + 0x30 ]
lea rcx [ rsp + 0x20 ]
sub r12w di
mov r8b 0x1
mov [ rsp + 0x22 ] r13w
mov [ rsp + 0x20 ] r13w
mov [ rsp + 0x30 ] r12w
call [ 0x15138 ]
cmp eax r13d
jne 0x13b03
lea rcx [ rsp + 0x20 ]
mov rdx rbp
call 0x12fec
cmp eax r13d
jne 0x13af3
lea rcx [ rsp + 0x20 ]
call [ 0x15180 ]
movzx eax [ 0x16442 ]
mov ecx 0x1
mov r8d 0x4d435458
add ax [ rsp + 0x22 ]
movzx edx ax
mov [ rsp + 0x32 ] ax
call [ 0x15008 ]
mov [ rsp + 0x38 ] rax
cmp rax r13
je 0x13ac3
mov rcx rdi
call 0x13304
mov [ rbx + 0x18 ] rax
cmp rax r13
je 0x13af3
mov [ rsp + 0x30 ] r13w
lea rdx [ 0x16440 ]
lea rcx [ rsp + 0x30 ]
mov [ rax ] r13w
call [ 0x151a0 ]
mov rdx [ rsp + 0x28 ]
lea rcx [ rsp + 0x30 ]
call [ 0x15150 ]
lea rcx [ rsp + 0x30 ]
call [ 0x151c8 ]
mov rcx [ rsp + 0x38 ]
xor edx edx
call [ 0x15010 ]
mov rax [ 0x16428 ]
mov rsi rbx
mov [ rbx ] 0x43455845
mov [ rbx + 0x20 ] 0x1
mov [ 0x16428 ] rbx
mov [ rbx + 0x40 ] rax
sub_13b60
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x20
mov eax 0x5a4d
mov rdi r9
mov r12 r8
mov r13 rdx
cmp [ rcx ] ax
je 0x13b8f
mov ebx [ rcx + 0x3c ]
add rbx rcx
mov rcx rbx
call [ 0x151b0 ]
test al al
je 0x13b8b
xor al al
jmp 0x13bf3
cmp [ rbx ] 0x4550
jne 0x13b8b
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x20
pop r13
pop r12
pop rdi
retn
lea rsi [ rbx + 0x4 ]
mov rcx rsi
call [ 0x151b0 ]
test al al
je 0x13b8b
mov eax 0xf0
cmp [ rsi + 0x10 ] ax
jne 0x13b8b
lea rbp [ rbx + 0x18 ]
mov rcx rbp
call [ 0x151b0 ]
test al al
je 0x13b8b
test r13 r13
je 0x13be0
test r12 r12
je 0x13be9
mov [ r13 ] rbx
test rdi rdi
je 0x13bf1
mov [ r12 ] rsi
mov al 0x1
mov [ rdi ] rbp
sub_13c14
mov [ rsp + 0x8 ] rbx
xor r9d r9d
xor r10d r10d
xor r11d r11d
mov ebx r8d
mov r8d edx
test edx edx
je 0x13c5d
mov rbx [ rsp + 0x8 ]
mov rax r9
retn
test r11d r11d
jne 0x13c5d
mov eax [ rcx + 0x8 ]
test eax eax
jne 0x13c3b
mov edx [ rcx + 0xc ]
cmp edx ebx
ja 0x13c51
mov eax [ rcx + 0x10 ]
inc r10d
add rcx 0x28
cmp r10d r8d
jb 0x13c2c
add eax edx
cmp ebx eax
jae 0x13c51
mov r11d 0x1
mov r9 rcx
sub_13c6c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov eax r8d
mov r10 rdx
mov rdi rcx
mov r8d r9d
mov edx eax
mov rcx r10
mov ebx r9d
call 0x13c14
test rax rax
je 0x13ca3
xor eax eax
sub ebx [ rax + 0xc ]
mov eax [ rax + 0x14 ]
lea rcx [ rdi + rbx ]
add rax rcx
jmp 0x13ca5
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_13cb8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rdx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov r14 rcx
mov rcx r8
mov r13 r9
mov rdi r8
call [ 0x151b0 ]
test al al
je 0x13f18
xor eax eax
mov r15d [ rsp + 0xa0 ]
mov r9d [ rdi ]
mov rdx r13
mov r8d r15d
mov rcx r14
call 0x13c6c
mov rcx rax
mov r12 rax
call [ 0x151b0 ]
test al al
je 0x13f18
mov r9d [ r12 + 0x20 ]
mov r8d r15d
mov rdx r13
mov rcx r14
call 0x13c6c
mov r9d [ r12 + 0x1c ]
mov r8d r15d
mov rdx r13
mov rcx r14
mov rdi rax
call 0x13c6c
mov rcx rdi
mov rbp rax
mov [ rsp + 0x20 ] rax
call [ 0x151b0 ]
test al al
je 0x13f18
mov rcx rbp
call [ 0x151b0 ]
test al al
je 0x13f18
xor ebx ebx
cmp [ r12 + 0x14 ] ebx
jbe 0x13f18
mov rax rbp
sub rdi rbp
mov [ rsp + 0x90 ] rax
mov [ rsp + 0x28 ] rdi
test ecx ecx
jne 0x13e47
inc rax
test edx edx
jne 0x13da8
mov rax [ rsp + 0x90 ]
inc ebx
add rax 0x4
mov [ rsp + 0x90 ] rax
cmp ebx [ r12 + 0x14 ]
jae 0x13f18
mov rsi [ rsp + 0xa8 ]
lea rdi [ 0x14910 ]
mov ecx 0xc
[ rsi ] [ rdi ]
mov r8d r15d
mov rdx r13
jne 0x13f05
movzx ecx [ rax ]
movzx edx [ rax + rdi ]
sub ecx edx
jne 0x13dba
mov rdi [ rsp + 0x28 ]
jmp 0x13d8b
mov rcx [ rsp + 0x20 ]
mov r9d [ rcx + rbx * 4 ]
mov rcx r14
call 0x13c6c
jmp 0x13f1a
mov rax [ rsp + 0x90 ]
mov rcx r14
mov r9d [ rax ]
call 0x13c6c
mov rcx rax
mov rdi rax
call [ 0x151b0 ]
test al al
je 0x13f18
mov r9d [ rdi + rax ]
mov r8d r15d
mov rdx r13
mov rcx r14
call 0x13c6c
mov rdi [ rsp + 0xa8 ]
sub rdi rax
mov rbx [ rsp + 0x80 ]
add rsp 0x40
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
xor esi esi
cmp [ rdi ] rsi
je 0x13e47
add rdi 0x8
inc esi
cmp [ rdi ] 0x0
jne 0x13e12
test esi esi
je 0x13e47
lea edx [ rsi + 0x1 ]
mov ecx 0x1
mov r8d 0x4d435458
shl rdx 0x4
call [ 0x15008 ]
mov rbp rax
mov [ rsp + 0x30 ] rax
test rax rax
jne 0x13e72
lea r8d [ rsi + 0x1 ]
xor edx edx
mov rcx rax
shl r8 0x4
call 0x14390
mov rcx [ rsp + 0x20 ]
mov r8d r15d
mov r9d [ rcx + rbx * 4 ]
mov rdx r13
mov rcx r14
call 0x13c6c
mov rsi rax
mov rbx [ rax ]
test rbx rbx
je 0x13f00
mov rax rbp
jmp 0x13f1a
mov rdi rbp
mov rbp [ rsp + 0x88 ]
mov [ rdi ] rax
cmp rbp rbx
jae 0x13eeb
mov r12d [ rsi ]
mov r8d r15d
mov rdx r13
mov r9d r12d
mov rcx r14
call 0x13c6c
test rax rax
jne 0x13ee8
mov rbp [ rsp + 0x30 ]
add rsi 0x8
add rdi 0x8
mov rbx [ rsi ]
test rbx rbx
jne 0x13eb1
sub r12d ebp
mov r8d r15d
mov rdx r13
mov r9d r12d
mov rcx r14
call 0x13c6c
test rax rax
je 0x13eeb
sub_13f38
mov rax rsp
mov [ rax + 0x10 ] rbx
push rbp
push rsi
push rdi
sub rsp 0x80
xor ebp ebp
mov rsi rdx
mov rbx rcx
test rcx rcx
je 0x14124
mov rax rbp
mov rbx [ rsp + 0xa8 ]
add rsp 0x80
pop rdi
pop rsi
pop rbp
retn
cmp [ rcx ] 0x454c4946
jne 0x14124
cmp [ rcx + 0x20 ] bpl
jne 0x14124
mov rcx [ rcx + 0x18 ]
lea r9d [ rbp + 0x18 ]
lea r8 [ rax - 0x30 ]
lea rdx [ rax - 0x40 ]
mov [ rax - 0x78 ] 0x5
call [ 0x151c0 ]
test eax eax
jne 0x14124
mov rcx [ rbx + 0x30 ]
mov rdi [ rsp + 0x70 ]
test rcx rcx
je 0x13fbd
mov r8d 0x4d435458
mov rdx rdi
mov ecx 0x1
call [ 0x15008 ]
mov [ rbx + 0x30 ] rax
test rax rax
je 0x14124
call [ 0x151b0 ]
test al al
je 0x13fbd
and [ rsp + 0x40 ] rbp
and [ rsp + 0xa0 ] rbp
lea rcx [ rsp + 0xa0 ]
mov [ rsp + 0x38 ] rcx
mov rcx [ rbx + 0x18 ]
mov [ rsp + 0x30 ] edi
mov [ rsp + 0x28 ] rax
lea rax [ rsp + 0x58 ]
xor r9d r9d
xor r8d r8d
xor edx edx
mov [ rsp + 0x20 ] rax
call [ 0x15140 ]
mov ecx 0x103
test eax eax
je 0x1402e
mov rcx [ rbx + 0x30 ]
xor edx edx
call [ 0x15010 ]
and [ rbx + 0x30 ] rbp
cmp eax ecx
jne 0x14045
cmp eax ecx
jne 0x1410f
test eax eax
jne 0x14113
mov rcx [ rbx + 0x18 ]
xor r8d r8d
xor edx edx
call [ 0x15188 ]
mov eax [ rsp + 0x58 ]
test eax eax
je 0x14124
mov rcx [ rbx + 0x30 ]
xor edx edx
call [ 0x15010 ]
and [ rbx + 0x30 ] 0x0
mov rcx [ rbx + 0x30 ]
test rcx rcx
je 0x14072
xor al al
lea r9 [ rsp + 0x50 ]
lea r8 [ rsp + 0xb8 ]
lea rdx [ rsp + 0xb0 ]
call 0x13b60
jmp 0x14074
mov eax 0xc0000225
mov rcx [ rsp + 0xb0 ]
movzx eax [ rcx + 0x14 ]
lea rdi [ rax + rcx + 0x18 ]
mov rcx rdi
call [ 0x151b0 ]
test al al
je 0x14113
test al al
je 0x1410a
mov rax [ rsp + 0xb8 ]
mov rdx [ rsp + 0x50 ]
mov [ rsp + 0x28 ] rsi
movzx ecx [ rax + 0x2 ]
lea r8 [ rdx + 0x70 ]
mov rdx [ rdx + 0x18 ]
mov [ rsp + 0x20 ] ecx
mov rcx [ rbx + 0x30 ]
mov r9 rdi
call 0x13cb8
mov rbp rax
test rax rax
je 0x14113
lea rdi [ 0x14910 ]
mov ecx 0xc
[ rsi ] [ rdi ]
jne 0x14124
mov rcx [ rbx + 0x38 ]
test rcx rcx
je 0x14104
mov [ rbx + 0x38 ] rbp
jmp 0x14124
call [ 0x151b0 ]
test al al
je 0x14104
mov rcx [ rbx + 0x38 ]
xor edx edx
call [ 0x15010 ]
and [ rbx + 0x38 ] 0x0
sub_14140
push rbx
push rbp
push rsi
push rdi
push r12
sub rsp 0x20
xor ebx ebx
mov r12 rdx
mov rdi rcx
cmp rcx rbx
je 0x14261
mov rax rbx
cmp [ rcx ] 0x43455845
jne 0x14261
cmp [ rcx + 0x20 ] bl
je 0x14261
mov rcx [ rcx + 0x18 ]
cmp rcx rbx
je 0x14190
mov al bl
lea r9 [ rsp + 0x60 ]
lea r8 [ rsp + 0x68 ]
lea rdx [ rsp + 0x50 ]
call 0x13b60
jmp 0x14192
mov rcx [ rsp + 0x50 ]
movzx eax [ rcx + 0x14 ]
lea rbp [ rax + rcx + 0x18 ]
mov rcx rbp
call [ 0x151b0 ]
cmp al bl
je 0x14261
cmp al bl
je 0x14261
mov rsi [ rsp + 0x60 ]
lea rcx [ rsi + 0x70 ]
call [ 0x151b0 ]
cmp al bl
jne 0x141d3
mov rax [ rsp + 0x68 ]
mov r8d [ rsi + 0x70 ]
mov rcx rbp
movzx edx [ rax + 0x2 ]
call 0x13c14
cmp rax rbx
je 0x141f6
xor eax eax
jmp 0x14264
mov rax rbx
mov eax [ rax + 0xc ]
add rax [ rdi + 0x18 ]
jmp 0x141f9
add rsp 0x20
pop r12
pop rdi
pop rsi
pop rbp
pop rbx
retn
mov rdx [ rdi + 0x18 ]
mov esi [ rax + 0x1c ]
mov r9d [ rax + 0x20 ]
mov ecx [ rax + 0x24 ]
mov ebp [ rax + 0x18 ]
add rsi [ rdi + 0x18 ]
add r9 [ rdi + 0x18 ]
add rcx [ rdi + 0x18 ]
cmp ebp ebx
mov eax ebx
jle 0x14261
cmp r8d ebx
je 0x14253
inc r10
test r11d r11d
jne 0x14228
movzx eax [ rcx ]
cmp [ rsi + rax * 4 ] ebx
je 0x14261
inc eax
add r9 0x4
add rcx 0x2
cmp eax ebp
jl 0x1421c
movzx r8d [ r10 ]
movzx r11d [ r10 + rdi ]
sub r8d r11d
jne 0x1423e
mov ebx [ rsi + rax * 4 ]
add rbx rdx
mov edi [ r9 ]
mov r10 r12
add rdi rdx
sub rdi r12
jmp 0x14261
sub_14278
test rcx rcx
je 0x14313
retn
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
cmp [ rcx ] 0x454c4946
mov dil dl
mov rbx rcx
je 0x142a1
mov rcx [ rcx + 0x28 ]
test rcx rcx
je 0x142b2
cmp [ rcx ] 0x43455845
jne 0x14309
cmp [ rbx ] 0x454c4946
jne 0x142f0
xor edx edx
call [ 0x15010 ]
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
xor edx edx
mov rcx rbx
lea r8d [ rdx + 0x40 ]
call 0x14390
xor edx edx
mov rcx rbx
call [ 0x15010 ]
test dil dil
jne 0x142f0
mov rcx [ rbx + 0x18 ]
test rcx rcx
je 0x142ce
mov rcx [ rbx + 0x30 ]
test rcx rcx
je 0x142df
call [ 0x150b0 ]
mov rcx [ rbx + 0x38 ]
test rcx rcx
je 0x142f0
xor edx edx
call [ 0x15010 ]
xor edx edx
call [ 0x15010 ]
sub_14390
mov rax rcx
cmp r8 0x8
jb 0x143ec
test r8 r8
je 0x143fb
movzx edx dl
mov r9 0x101010101010101
imul rdx r9
cmp r8 0x40
jb 0x143ce
retn
mov [ rcx ] dl
inc rcx
dec r8
jne 0x143f1
mov r9 r8
and r8 0x7
shr r9 0x3
je 0x143ec
neg rcx
and ecx 0x7
je 0x143be
nop
nop
add rcx rax
mov r9 r8
and r8 0x3f
shr r9 0x6
jne 0x14407
sub r8 rcx
mov [ rax ] rdx
mov [ rcx ] rdx
add rcx 0x8
dec r9
jne 0x143e0
cmp r9 0x1c00
jae 0x14440
movnti [ rcx ] rdx
movnti [ rcx + 0x8 ] rdx
movnti [ rcx + 0x10 ] rdx
add rcx 0x40
movnti [ rcx - 0x28 ] rdx
movnti [ rcx - 0x20 ] rdx
dec r9
movnti [ rcx - 0x18 ] rdx
movnti [ rcx - 0x10 ] rdx
movnti [ rcx - 0x8 ] rdx
jne 0x14440
mov [ rcx ] rdx
mov [ rcx + 0x8 ] rdx
mov [ rcx + 0x10 ] rdx
add rcx 0x40
mov [ rcx - 0x28 ] rdx
mov [ rcx - 0x20 ] rdx
dec r9
mov [ rcx - 0x18 ] rdx
mov [ rcx - 0x10 ] rdx
mov [ rcx - 0x8 ] rdx
jne 0x14410
[ rsp ] 0x0
jmp 0x143ce
jmp 0x143ce
sub_14480
push rbx
sub rsp 0x20
mov r11d [ r8 ]
mov rbx rdx
mov r9 rcx
and r11d 0xfffffff8
test [ r8 ] 0x4
mov r10 rcx
je 0x144af
movsxd rax r11d
mov rdx [ rax + r10 ]
mov rax [ rbx + 0x10 ]
mov ecx [ rax + 0x8 ]
add rcx [ rbx + 0x8 ]
test [ rcx + 0x3 ] 0xf
je 0x144d3
mov eax [ r8 + 0x8 ]
movsxd r10 [ r8 + 0x4 ]
neg eax
add r10 rcx
movsxd rcx eax
and r10 rcx
xor r9 rdx
mov rcx r9
add rsp 0x20
pop rbx
jmp 0x14330
movzx eax [ rcx + 0x3 ]
and eax 0xfffffff0
cdqe
add r9 rax
sub_14520
mov r11 rcx
sub rdx rcx
jb 0x146ca
add rcx r8
cmp r8 0x8
jb 0x14734
cmp r8 0x8
jb 0x14594
test r8 r8
jne 0x14740
test cl 0x7
je 0x1470e
test r8 r8
jne 0x145a0
test cl 0x7
je 0x1456e
dec rcx
mov al [ rdx + rcx ]
dec r8
mov [ rcx ] al
jne 0x14740
mov rax r11
retn
mov r9 r8
shr r9 0x5
jne 0x14767
test cl 0x1
je 0x146e8
mov al [ rdx + rcx ]
mov [ rcx ] al
inc rcx
dec r8
jne 0x145a0
mov rax r11
retn
mov r9 r8
shr r9 0x5
jne 0x145c7
test cl 0x1
je 0x14548
mov rax r11
retn
cmp r9 0x2000
jae 0x147b2
mov r9 r8
shr r9 0x3
je 0x14734
test cl 0x2
je 0x146fc
dec rcx
mov al [ rdx + rcx ]
dec r8
mov [ rcx ] al
mov rax r11
retn
cmp r9 0x2000
jae 0x14612
mov r9 r8
shr r9 0x3
je 0x14594
test cl 0x2
je 0x1455c
mov al [ rdx + rcx ]
dec r8
mov [ rcx ] al
add rcx 0x1
cmp rdx 0xfffffffffffff000
ja 0x14770
mov rax [ rdx + rcx - 0x8 ]
mov r10 [ rdx + rcx - 0x10 ]
sub rcx 0x20
mov [ rcx + 0x18 ] rax
mov [ rcx + 0x10 ] r10
mov rax [ rdx + rcx + 0x8 ]
mov r10 [ rdx + rcx ]
dec r9
mov [ rcx + 0x8 ] rax
mov [ rcx ] r10
jne 0x14770
sub rcx 0x8
mov rax [ rdx + rcx ]
dec r9
mov [ rcx ] rax
jne 0x14720
test cl 0x4
je 0x1470e
sub rcx 0x2
mov ax [ rdx + rcx ]
sub r8 0x2
mov [ rcx ] ax
cmp rdx 0x1000
jb 0x145d0
mov rax [ rdx + rcx ]
mov r10 [ rdx + rcx + 0x8 ]
add rcx 0x20
mov [ rcx - 0x20 ] rax
mov [ rcx - 0x18 ] r10
mov rax [ rdx + rcx - 0x10 ]
mov r10 [ rdx + rcx - 0x8 ]
dec r9
mov [ rcx - 0x10 ] rax
mov [ rcx - 0x8 ] r10
jne 0x145d0
mov rax [ rdx + rcx ]
mov [ rcx ] rax
add rcx 0x8
dec r9
jne 0x14580
test cl 0x4
je 0x1456e
mov ax [ rdx + rcx ]
sub r8 0x2
mov [ rcx ] ax
add rcx 0x2
mov eax 0x20
and r8 0x1f
jmp 0x14717
and r8 0x7
sub rcx 0x4
mov eax [ rdx + rcx ]
sub r8 0x4
mov [ rcx ] eax
mov eax 0x20
and r8 0x1f
jmp 0x14577
and r8 0x7
mov eax [ rdx + rcx ]
sub r8 0x4
mov [ rcx ] eax
add rcx 0x4
sub rcx 0x80
prefetchnta [ rdx + rcx ]
prefetchnta [ rdx + rcx + 0x40 ]
dec eax
jne 0x147c0
add rcx 0x1000
mov eax 0x40
prefetchnta [ rdx + rcx ]
prefetchnta [ rdx + rcx + 0x40 ]
add rcx 0x80
dec eax
jne 0x14620
sub rcx 0x1000
mov eax 0x40
mov r9 [ rdx + rcx - 0x8 ]
mov r10 [ rdx + rcx - 0x10 ]
movnti [ rcx - 0x8 ] r9
movnti [ rcx - 0x10 ] r10
mov r9 [ rdx + rcx - 0x18 ]
mov r10 [ rdx + rcx - 0x20 ]
movnti [ rcx - 0x18 ] r9
movnti [ rcx - 0x20 ] r10
mov r9 [ rdx + rcx - 0x28 ]
mov r10 [ rdx + rcx - 0x30 ]
sub rcx 0x40
movnti [ rcx + 0x18 ] r9
movnti [ rcx + 0x10 ] r10
mov r9 [ rdx + rcx + 0x8 ]
mov r10 [ rdx + rcx ]
dec eax
movnti [ rcx + 0x8 ] r9
movnti [ rcx ] r10
jne 0x147e0
sub r8 0x1000
cmp r8 0x1000
jae 0x147bb
mov r9 [ rdx + rcx ]
mov r10 [ rdx + rcx + 0x8 ]
movnti [ rcx ] r9
movnti [ rcx + 0x8 ] r10
mov r9 [ rdx + rcx + 0x10 ]
mov r10 [ rdx + rcx + 0x18 ]
movnti [ rcx + 0x10 ] r9
movnti [ rcx + 0x18 ] r10
mov r9 [ rdx + rcx + 0x20 ]
mov r10 [ rdx + rcx + 0x28 ]
add rcx 0x40
movnti [ rcx - 0x20 ] r9
movnti [ rcx - 0x18 ] r10
mov r9 [ rdx + rcx - 0x10 ]
mov r10 [ rdx + rcx - 0x8 ]
dec eax
movnti [ rcx - 0x10 ] r9
movnti [ rcx - 0x8 ] r10
jne 0x14640
sub r8 0x1000
cmp r8 0x1000
jae 0x1461b
[ rsp ] 0x0
jmp 0x1470e
[ rsp ] 0x0
jmp 0x1456e
sub_19008
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x50
mov r9 [ rdx + 0x8 ]
mov rbx rdx
xor edx edx
lea esi [ rdx + 0x65 ]
mov rdi rcx
lea r8 [ 0x19300 ]
mov ecx esi
call [ 0x15110 ]
lea rcx [ 0x16500 ]
xor edx edx
call [ 0x15060 ]
movzx edx [ rbx + 0x2 ]
xor ecx ecx
mov r8d 0x4d435458
call [ 0x15008 ]
xor ebp ebp
lea rcx [ 0x16440 ]
mov [ 0x16448 ] rax
cmp rax rbp
je 0x190c8
lea rdx [ 0x16150 ]
call [ 0x15148 ]
movzx eax [ rbx + 0x2 ]
mov rdx rbx
mov [ 0x16440 ] bp
mov [ 0x16442 ] ax
call [ 0x151a0 ]
movzx r11d [ 0x16440 ]
mov rcx [ 0x16448 ]
shr r11 0x1
lea rax [ rcx + r11 * 2 - 0x2 ]
jmp 0x190ad
lea rax [ 0x12a1c ]
mov [ rdi + 0x70 ] rax
lea rax [ 0x12a1c ]
mov [ rdi + 0x100 ] rax
lea rax [ 0x12a1c ]
mov [ rdi + 0x80 ] rax
lea rax [ 0x125cc ]
mov [ rdi + 0xe0 ] rax
lea rax [ 0x12a1c ]
mov [ rdi + 0xf0 ] rax
mov rcx [ 0x16460 ]
call [ 0x15058 ]
mov ebx eax
cmp eax ebp
je 0x191e5
lea r8 [ 0x19320 ]
mov r9d eax
xor edx edx
mov ecx esi
call [ 0x15110 ]
jmp 0x1924d
cmp [ rax ] 0x5c
jne 0x190a4
lea rax [ 0x12a44 ]
mov [ rdi + 0x68 ] rax
mov rax [ 0x16460 ]
btr [ rax + 0x30 ] 0x7
call 0x124dc
lea rdx [ 0x16320 ]
lea rcx [ 0x16330 ]
call [ 0x150f0 ]
mov ebx eax
cmp eax ebp
je 0x19252
lea r8 [ 0x19350 ]
mov r9d eax
xor edx edx
mov ecx esi
call [ 0x15110 ]
jmp 0x1923c
call 0x1241c
cmp rax rcx
je 0x190b3
sub rax rcx
sar rax 0x1
inc ax
add ax ax
mov [ 0x16440 ] ax
jmp 0x190d5
lea r8 [ 0x193c0 ]
mov r9d ebx
xor edx edx
mov ecx esi
call [ 0x15110 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
mov eax ebx
mov rbx [ rsp + 0x60 ]
add rsp 0x50
pop rdi
retn
lea r8 [ 0x19390 ]
mov r9d eax
xor edx edx
mov ecx esi
call [ 0x15110 ]
mov rcx [ 0x16460 ]
call [ 0x150a8 ]
mov rcx [ 0x16460 ]
call [ 0x15070 ]
mov [ rdi + 0x8 ] rbp
sub rax 0x2
mov rcx rbx
call 0x1346c
lea rcx [ 0x16340 ]
call [ 0x15100 ]
lea rcx [ 0x16580 ]
call [ 0x15100 ]
lea rcx [ 0x16480 ]
call [ 0x15100 ]
mov r11 [ 0x16438 ]
lea rdx [ rsp + 0x40 ]
lea rcx [ 0x16418 ]
mov [ rsp + 0x40 ] r11
mov [ rsp + 0x48 ] rbp
call 0x11ad0
lea rax [ 0x16460 ]
lea r8 [ 0x16320 ]
mov [ rsp + 0x30 ] rax
mov r9d 0x12
xor edx edx
mov rcx rdi
mov [ rsp + 0x28 ] bpl
mov [ 0x16458 ] 0x1
mov [ rsp + 0x20 ] ebp
call [ 0x150f8 ]
mov ebx eax
cmp eax ebp
je 0x19179
sub_19284
mov rax [ 0x16100 ]
mov rdx 0x2b992ddfa232
test rax rax
je 0x1929f
lea rcx [ 0x16100 ]
mov rax 0xfffff78000000320
mov rax [ rax ]
xor rax rcx
mov rcx 0xffffffffffff
and rax rcx
cmove rax rdx
mov [ 0x16100 ] rax
cmp rax rdx
jne 0x192ce
not rax
mov [ 0x16108 ] rax
retn
XTComGetVersion
mov eax 0x100
retn
NicmRegisterClassFactory
xor eax eax
retn
sub_12a1c
sub rsp 0x28
and [ rdx + 0x38 ] 0x0
and [ rdx + 0x30 ] 0x0
mov rcx rdx
xor edx edx
call [ 0x150b8 ]
xor eax eax
add rsp 0x28
retn
sub_12b8c
mov [ rcx ] rdx
xor eax eax
retn
sub_12b98
cmp [ rcx ] rdx
sete al
retn
sub_12ba8
sub rsp 0x28
mov rcx [ rcx ]
mov rax [ rcx ]
call [ rax + 0x10 ]
xor eax eax
add rsp 0x28
retn
sub_14330
cmp rcx [ 0x16100 ]
jne 0x1434b
jmp 0x14358
rol rcx 0x10
test cx 0xffff
jne 0x14347
ror rcx 0x10
retn 0x0
sub_14358
sub rsp 0x38
mov r9 [ 0x16108 ]
mov r8 [ 0x16100 ]
and [ rsp + 0x20 ] 0x0
mov rdx rcx
mov ecx 0xf7
call [ 0x151d8 ]
int3
sub_144ec
sub rsp 0x28
mov r8 [ r9 + 0x38 ]
mov rcx rdx
mov rdx r9
call 0x14480
mov eax 0x1
add rsp 0x28
retn
__C_specific_handler
jmp [ 0x151e0 ]
sub_14922
push rbp
sub rsp 0x30
mov rbp rdx
xor eax eax
mov rcx [ rbp + 0x98 ]
cmp [ rcx + 0x40 ] al
setne al
add rsp 0x30
pop rbp
retn
sub_14942
push rbp
sub rsp 0x30
mov rbp rdx
xor eax eax
mov rcx [ rbp + 0x98 ]
cmp [ rcx + 0x40 ] al
setne al
add rsp 0x30
pop rbp
retn
sub_14962
push rbp
sub rsp 0x30
mov rbp rdx
xor eax eax
mov rcx [ rbp + 0x98 ]
cmp [ rcx + 0x40 ] al
setne al
add rsp 0x30
pop rbp
retn
_start
sub rsp 0x28
mov r8 rdx
mov r9 rcx
call 0x19284
mov rdx r8
mov rcx r9
add rsp 0x28
jmp 0x19008
