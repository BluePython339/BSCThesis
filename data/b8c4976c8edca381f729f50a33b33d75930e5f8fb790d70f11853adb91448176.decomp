sub_401000
xor eax eax
sub esp 0x3ac
cmp [ rw-data ] al
je r-xdata
add esp 0x3ac
retn
push 0x3a4
push eax
lea edx [ esp + 0xc ]
push edx
mov [ rw-data ] al
mov [ ecx + 0x18c ] eax
call sub_4131f0
mov eax [ rw-data ]
add esp 0xc
lea ecx [ esp ]
push ecx
push 0x2
mov [ esp + 0x8 ] 0x3a8
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x1
call [ Shell_NotifyIconW@IAT ]
sub_401060
mov eax [ esi + 0x24 ]
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
push eax
call sub_413a88
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] ebx
cmp eax ebx
jne r-xdata
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x10 ] bl
pop ebx
retn
sub_401090
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ edi ]
mov eax [ esi + 0x4 ]
mov [ eax ] ecx
inc [ esi ]
mov [ esi + 0x9 ] 0x0
retn
push 0x8
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x4 ] ecx
inc [ esi ]
mov [ esi + 0x4 ] eax
retn
mov edx [ edi ]
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
inc [ esi ]
mov [ esi + 0x4 ] eax
retn
sub_4010f0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
cmp ebx [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp edi 0x111
jae r-xdata
jmp r-xdata
cmp edi 0x113
jne r-xdata
cmp edi 0x12
jb r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push edi
push ebx
call [ __import_lookup_table_10(USER32:DefWindowProcW) ]
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x10
ja r-xdata
mov eax [ ebp + 0x8 ]
push rw-data
mov esi ebx
call sub_401230
cmp edi [ rw-data ]
je r-xdata
cmp edi 0x312
ja r-xdata
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp edi 0x401
jne r-xdata
je r-xdata
mov esi rw-data
mov [ rw-data ] 0x1
call sub_40f060
jmp r-xdata
lea eax [ edi - 0x1 ]
cmp eax 0x6
ja r-xdata
mov ecx rw-data
call sub_401000
mov esi rw-data
call sub_40e1e0
jmp r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edi 0x11
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_401214 ]
mov ecx [ ebp + 0xc ]
push ecx
push ebx
push rw-data
call sub_4680eb
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
call sub_439530
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x80000000
neg eax
sbb eax eax
add eax 0x4
mov esi rw-data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_40f060
push esi
call sub_401aa0
jmp r-xdata
cmp edi 0x111
jne r-xdata
push 0x1
push ebx
call [ KillTimer@IAT ]
mov ecx rw-data
call sub_401000
push 0x0
call [ __import_lookup_table_10(USER32:PostQuitMessage) ]
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x2ee
push 0x1
push ebx
call [ SetTimer@IAT ]
push r--data
call [ RegisterWindowMessageW@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ __import_lookup_table_10(USER32:SetFocus) ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x1
mov ecx eax
movzx edx ax
mov eax [ rw-data ]
shr ecx 0x10
push ecx
push edx
push 0x0
push 0x0
push eax
call [ __import_lookup_table_10(USER32:MoveWindow) ]
jmp r-xdata
jmp r-xdata
call [ CreatePopupMenu@IAT ]
mov [ rw-data ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push rw-data
call sub_45f48e
cmp al 0x1
jne r-xdata
jmp r-xdata
sub_401230
sub esp 0x3a8
sub eax 0x1
push ebx
push edi
jne r-xdata
pop edi
pop ebx
add esp 0x3a8
retn 0x4
push 0x3a4
push eax
lea ebx [ eax + 0x1 ]
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x14 ] 0x3a8
call sub_4131f0
mov eax [ esp + 0x3c0 ]
add esp 0xc
call sub_401e70
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push esi
call [ KillTimer@IAT ]
push 0x0
push 0x2ee
push ebx
push esi
call [ SetTimer@IAT ]
cmp [ rw-data ] 0x0
mov edi [ esp + 0x3b4 ]
mov [ esp + 0xc ] esi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] 0x2
jne r-xdata
cmp [ edi + 0x184 ] bl
jne r-xdata
cmp [ edi + 0x9 ] 0x0
jne r-xdata
mov edx [ edi + 0x198 ]
lea eax [ esp + 0x8 ]
push eax
push ebx
mov [ edi + 0x184 ] bl
mov [ esp + 0x24 ] edx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov ecx [ edi + 0x18c ]
lea eax [ esp + 0x8 ]
push eax
push ebx
mov [ edi + 0x184 ] 0x0
mov [ esp + 0x24 ] ecx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
cmp [ edi + 0x185 ] 0x0
je r-xdata
cmp [ edi + 0x184 ] bl
je r-xdata
mov edx [ edi + 0x1a0 ]
lea eax [ esp + 0x8 ]
push eax
push ebx
mov [ esp + 0x24 ] edx
mov [ edi + 0x185 ] bl
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov ecx [ edi + 0x18c ]
lea eax [ esp + 0x8 ]
push eax
push ebx
mov [ esp + 0x24 ] ecx
mov [ edi + 0x185 ] 0x0
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov ecx [ edi + 0x18c ]
lea edx [ esp + 0x8 ]
push edx
push ebx
mov [ edi + 0x184 ] 0x0
mov [ esp + 0x24 ] ecx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
sub_4012d0
mov eax [ ebx ]
test eax eax
je r-xdata
push esi
lea esi [ ebx + 0xec ]
push edi
mov [ esi ] r--data
call sub_410810
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
lea ecx [ ebx + 0xbc ]
call sub_402620
lea edi [ ebx + 0x78 ]
call sub_401360
lea edi [ ebx + 0x34 ]
call sub_401360
lea ecx [ ebx + 0x24 ]
call sub_402620
pop edi
lea ecx [ ebx + 0x14 ]
pop esi
jmp sub_402620
push eax
call sub_4112ef
add esp 0x4
sub_401330
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
retn
mov ecx [ esi ]
push ecx
call sub_4112ef
mov edx [ esi + 0xc ]
push edx
call sub_4112ef
add esp 0x8
sub_401380
mov eax [ esi ]
test eax eax
je r-xdata
push edi
lea edi [ esi + 0xec ]
call sub_401360
lea ecx [ esi + 0xbc ]
call sub_402620
lea ecx [ esi + 0xac ]
call sub_402620
lea ecx [ esi + 0x9c ]
call sub_402620
lea ecx [ esi + 0x8c ]
call sub_402620
lea edi [ esi + 0x8 ]
call sub_4104a0
pop edi
retn
push eax
call sub_4112ef
add esp 0x4
sub_401400
push esi
mov esi ecx
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
xor ecx ecx
mov [ esi ] eax
add esp 0x4
mov [ eax ] cx
call sub_4013e0
mov eax esi
pop esi
retn
sub_401440
sub esp 0x214
call sub_4027d0
test al al
je r-xdata
mov eax 0x1
jmp r-xdata
call sub_4014f0
test eax eax
jne r-xdata
add esp 0x214
retn 0x8
call sub_40d5d0
test eax eax
jne r-xdata
mov edx [ esp + 0x218 ]
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
push 0x104
push edx
call [ __import_lookup_table_0(KERNEL32:GetFullPathNameW) ]
lea eax [ esp + 0x4 ]
push eax
mov eax rw-data
call sub_4021e0
mov ecx [ esp ]
push ecx
mov eax rw-data
call sub_4021e0
mov eax [ esp ]
xor edx edx
mov [ eax - 0x2 ] dx
cmp [ esp + 0x8 ] dx
je r-xdata
lea ecx [ esp + 0x4 ]
push r--data
push ecx
call sub_411663
add esp 0x8
jmp r-xdata
lea edx [ esp + 0x4 ]
push edx
mov eax rw-data
call sub_4021e0
mov eax [ esp + 0x21c ]
mov [ rw-data ] eax
xor eax eax
sub_4014e0
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_4014f0
sub esp 0x74
xor eax eax
push ebx
push ebp
push esi
push edi
mov ebp 0x1
mov [ esp + 0x18 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] al
mov [ esp + 0x69 ] al
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] al
mov [ esp + 0x5d ] al
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] al
mov [ esp + 0x51 ] al
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] eax
mov [ esp + 0x80 ] al
mov [ esp + 0x81 ] al
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] al
mov [ esp + 0x45 ] al
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] al
mov [ esp + 0x75 ] al
mov [ esp + 0x14 ] eax
xor ebx ebx
jmp r-xdata
test ebp ebp
jle r-xdata
test ebx ebx
je r-xdata
mov ebx ebp
shl ebx 0x4
add ebx [ rw-data ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x28 ]
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push 0x0
call sub_40e940
test eax eax
jne r-xdata
inc ebp
lea eax [ ebp - 0x1 ]
mov [ rw-data ] eax
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
movzx esi [ eax + 0x8 ]
xor ecx ecx
mov [ esp + 0x34 ] 0x0
cmp si 0x7f
je r-xdata
lea eax [ esp + 0x6c ]
call sub_4014e0
lea eax [ esp + 0x3c ]
call sub_4014e0
lea eax [ esp + 0x78 ]
call sub_4014e0
lea eax [ esp + 0x48 ]
call sub_4014e0
lea eax [ esp + 0x54 ]
call sub_4014e0
lea eax [ esp + 0x60 ]
call sub_4014e0
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x30 ] eax
jne r-xdata
test si si
jne r-xdata
mov eax edx
nop
pop edi
pop esi
pop ebp
pop ebx
add esp 0x74
retn
push 0xffffffff
push 0x83
jmp r-xdata
lea eax [ esp + 0x6c ]
call sub_4014e0
lea eax [ esp + 0x3c ]
call sub_4014e0
lea eax [ esp + 0x78 ]
call sub_4014e0
lea eax [ esp + 0x48 ]
call sub_4014e0
lea eax [ esp + 0x54 ]
call sub_4014e0
lea eax [ esp + 0x60 ]
call sub_4014e0
xor eax eax
cmp ebp [ rw-data ]
jg r-xdata
mov esi [ edx ]
mov eax [ esi ]
cmp eax 0x4
je r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
inc ecx
cmp [ edi + 0x8 ] 0x7f
jne r-xdata
test ecx ecx
jbe r-xdata
push rw-data
call sub_45e62e
mov edi [ esp + 0x34 ]
xor eax eax
cmp eax 0xd
je r-xdata
dec ecx
cmp [ esi ] 0x5
jne r-xdata
mov esi [ edx + edi * 4 + 0x4 ]
movzx eax [ esi + 0x8 ]
inc edi
mov [ esp + 0x34 ] edi
cmp ax 0x7f
jne r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x20 ]
mov [ esp + 0x34 ] eax
inc eax
lea edi [ esp + 0x34 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] eax
call sub_401090
jmp r-xdata
cmp eax 0xe
je r-xdata
mov ecx [ edx + ecx * 4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
test ax ax
je r-xdata
jmp r-xdata
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
cmp eax 0x8
je r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 + 0x4 ]
inc ecx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ecx ] 0x5
jne r-xdata
push 0xffffffff
push 0xa1
jmp r-xdata
mov ecx [ edx + 0x4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x72
jmp r-xdata
dec [ esp + 0x20 ]
dec [ esp + 0x14 ]
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
sub eax 0x5
cmp eax 0x1c
ja r-xdata
mov eax [ eax ]
cmp eax 0x23
je r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x18 ]
mov [ esp + 0x38 ] eax
inc eax
lea edi [ esp + 0x38 ]
lea esi [ esp + 0x54 ]
mov [ esp + 0x14 ] eax
call sub_401090
mov edi [ esp + 0x14 ]
inc edi
jmp r-xdata
cmp [ esp + 0x45 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x72
jmp r-xdata
mov ebx [ esp + 0x14 ]
dec [ esp + 0x18 ]
dec ebx
cmp [ esp + 0x54 ] 0x0
mov [ esp + 0x14 ] ebx
je r-xdata
movzx ecx [ eax + lookup_table_401994 ]
jmp [ ecx * 4 + jump_table_401954 ]
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
jl r-xdata
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x40 ]
lea edi [ ebx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x5d ] 0x0
mov eax [ esp + 0x58 ]
jne r-xdata
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov eax [ esp + 0x30 ]
inc eax
cmp eax 0x1
jg r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x24 ]
mov [ esp + 0x34 ] eax
inc eax
lea edi [ esp + 0x34 ]
lea esi [ esp + 0x78 ]
mov [ esp + 0x14 ] eax
call sub_401090
jmp r-xdata
mov ebx [ esp + 0x14 ]
dec [ esp + 0x1c ]
dec ebx
lea eax [ esp + 0x6c ]
mov [ esp + 0x14 ] ebx
call sub_410a70
test al al
jne r-xdata
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx 0x1
add [ esp + 0x28 ] ecx
mov [ esp + 0x34 ] eax
add eax ecx
lea edi [ esp + 0x34 ]
lea esi [ esp + 0x60 ]
mov [ esp + 0x14 ] eax
call sub_401090
jmp r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
lea eax [ esp + 0x48 ]
call sub_410a70
test al al
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
push 0xffffffff
push 0x81
sub eax 0x12
cmp eax 0x10
ja r-xdata
push 0xffffffff
push 0x95
jmp r-xdata
cmp [ esp + 0x14 ] edi
je r-xdata
mov edi [ eax ]
lea esi [ esp + 0x3c ]
call sub_40c250
cmp [ esp + 0x18 ] 0x0
jl r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ eax ]
lea esi [ esp + 0x54 ]
call sub_40c250
sub [ esp + 0x30 ] 0x1
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push ecx
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x18 ]
push edx
push eax
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x1c ]
mov [ esp + 0x34 ] eax
inc eax
lea edi [ esp + 0x34 ]
lea esi [ esp + 0x6c ]
mov [ esp + 0x14 ] eax
call sub_401090
jmp r-xdata
lea edi [ ebx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x6c ]
call sub_410a60
mov edi [ eax ]
lea esi [ esp + 0x6c ]
call sub_40c250
mov ebx [ esp + 0x14 ]
dec [ esp + 0x24 ]
dec ebx
lea eax [ esp + 0x78 ]
mov [ esp + 0x14 ] ebx
call sub_410a70
test al al
jne r-xdata
mov ecx [ edx + 0x4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x72
push rw-data
call sub_45e62e
lea eax [ esp + 0x6c ]
call sub_4014e0
lea eax [ esp + 0x3c ]
call sub_4014e0
lea eax [ esp + 0x78 ]
call sub_4014e0
lea eax [ esp + 0x48 ]
call sub_4014e0
lea eax [ esp + 0x54 ]
call sub_4014e0
lea eax [ esp + 0x60 ]
call sub_4014e0
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx 0x1
add [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
add eax ecx
lea edi [ esp + 0x34 ]
lea esi [ esp + 0x48 ]
mov [ esp + 0x14 ] eax
call sub_401090
jmp r-xdata
mov ebx [ esp + 0x14 ]
dec [ esp + 0x2c ]
dec ebx
lea eax [ esp + 0x48 ]
mov [ esp + 0x14 ] ebx
call sub_410a70
test al al
je r-xdata
mov ebx [ esp + 0x14 ]
dec [ esp + 0x28 ]
dec ebx
lea eax [ esp + 0x60 ]
mov [ esp + 0x14 ] ebx
call sub_410a70
test al al
je r-xdata
lea eax [ esp + 0x60 ]
call sub_410a70
test al al
jne r-xdata
lea eax [ esp + 0x48 ]
call sub_410a60
mov ecx [ esp + 0x14 ]
dec ecx
cmp ecx [ eax ]
je r-xdata
push 0xffffffff
push 0x74
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x9f
jmp r-xdata
movzx edx [ eax + lookup_table_42b160 ]
jmp [ edx * 4 + jump_table_42b154 ]
jmp r-xdata
push 0xffffffff
push 0x75
jmp r-xdata
cmp ebx edi
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push edx
push eax
push ecx
mov ebx [ esp + 0x34 ]
mov edi [ esp + 0x38 ]
mov esi [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
call sub_40e940
test eax eax
je r-xdata
cmp [ esp + 0x1c ] 0x0
jl r-xdata
push 0xffffffff
push 0x93
jmp r-xdata
cmp ebx edi
je r-xdata
lea edi [ ebx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x78 ]
call sub_410a60
mov edi [ eax ]
lea esi [ esp + 0x78 ]
call sub_40c250
lea eax [ esp + 0x48 ]
call sub_410a60
mov edi [ eax ]
lea esi [ esp + 0x48 ]
call sub_40c250
lea edi [ ebx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x60 ]
call sub_410a60
mov edi [ eax ]
lea esi [ esp + 0x60 ]
call sub_40c250
lea edi [ ebx + 0x1 ]
jmp r-xdata
push 0xffffffff
push 0x98
jmp r-xdata
lea eax [ esp + 0x60 ]
call sub_410a60
mov edx [ esp + 0x14 ]
dec edx
cmp edx [ eax ]
je r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
jl r-xdata
push 0xffffffff
push 0x78
jmp r-xdata
cmp ebx edi
je r-xdata
push 0xffffffff
push 0x99
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ esp + 0x2c ] 0x0
jl r-xdata
push 0xffffffff
push 0xb3
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ esp + 0x28 ] 0x0
jl r-xdata
push 0xffffffff
push 0x96
jmp r-xdata
jmp r-xdata
sub_4019e0
push edi
test eax eax
jne r-xdata
sub eax 0x1
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
sub eax 0x1
je r-xdata
push ecx
push edx
cmp [ rw-data ] eax
jne r-xdata
push ecx
push edx
mov edi rw-data
sub eax 0xe
jne r-xdata
push rw-data
call sub_435959
mov edi eax
jmp r-xdata
mov edi rw-data
mov eax esi
call sub_404260
mov al 0x1
pop edi
retn
mov eax esi
call sub_404260
mov al 0x1
pop edi
retn
or ecx 0x400
mov edi rw-data
jmp r-xdata
push ecx
push edx
sub_401a30
cmp [ edi + 0x8 ] 0x0
ja r-xdata
push ebx
push esi
xor esi esi
mov [ edi + 0x8 ] 0x0
retn
inc esi
cmp esi [ edi + 0x8 ]
jb r-xdata
mov ecx ebx
call sub_402620
push ebx
call sub_4112ef
add esp 0x4
mov eax [ edi + 0x4 ]
mov ebx [ eax + esi * 4 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
mov [ edi + 0x8 ] 0x0
retn
sub_401a70
mov edx [ eax ]
cmp edx [ eax + 0x1c ]
jge r-xdata
push r--data
mov eax ecx
call sub_4021e0
xor al al
retn
push esi
lea esi [ edx + 0x1 ]
mov [ eax ] esi
mov eax [ eax + 0x18 ]
mov eax [ eax + edx * 4 ]
pop esi
cmp ecx eax
je r-xdata
mov al 0x1
retn
call sub_404080
sub_401aa0
sub esp 0x38
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ esp + 0x44 ]
push esi
push edi
xor ebx ebx
mov edi r--data
lea esi [ esp + 0x38 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x34 ] ebx
call sub_401b70
push 0x1
lea ecx [ esp + 0x2c ]
push ecx
mov eax esi
mov edi rw-data
call sub_404260
mov ecx esi
call sub_402620
mov edi [ rw-data ]
lea esi [ esp + 0x28 ]
call sub_4092c0
mov [ esp + 0x28 ] edi
mov edi r--data
lea esi [ esp + 0x38 ]
mov [ esp + 0x30 ] 0x1
call sub_401b70
push 0x1
lea edx [ esp + 0x2c ]
push edx
mov eax esi
mov edi rw-data
call sub_404260
mov ecx esi
call sub_402620
mov eax [ ebp + 0x12c ]
mov [ rw-data ] bl
mov [ ebp + 0xf8 ] ebx
mov [ esp + 0x4c ] eax
mov eax [ eax ]
mov eax [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
push ebp
call sub_4646a2
cmp al 0x1
jne r-xdata
lea esi [ esp + 0x28 ]
mov [ ebp + 0xf8 ] 0x1
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0x4
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x50 ]
push edx
call sub_442fef
mov eax [ esp + 0x4c ]
jmp r-xdata
mov eax [ esp + 0x14 ]
push 0x1
inc eax
push eax
push ebp
call sub_46e7ba
cmp eax ebx
jne r-xdata
sub_401b70
push edi
call sub_4112d5
add esp 0x4
mov [ esi + 0x4 ] eax
add eax 0x1
mov [ esi + 0x8 ] eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push edi
push eax
mov [ esi ] eax
call sub_410f70
push 0x4
call sub_41171a
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
retn
sub_401c00
push ecx
push ebx
push ebp
mov ebp ecx
mov eax [ ebp - 0x49c ]
mov ecx [ eax + 0x4 ]
mov [ ecx + ebp - 0x49c ] r--data
mov edx [ ebp - 0x49c ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x49c ]
mov [ eax + ebp - 0x4a0 ] ecx
mov eax [ ebp - 0x3b4 ]
push esi
push edi
test eax eax
jne r-xdata
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push r--data
call [ mciSendStringW@IAT ]
cmp [ ebp - 0x2ec ] 0x0
mov edi 0x1
ja r-xdata
xor esi esi
cmp [ ebp - 0x31c ] 0x0
ja r-xdata
add esi edi
cmp esi [ ebp - 0x2ec ]
jb r-xdata
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ rw-data ]
push ecx
push edx
call [ UnregisterHotKey@IAT ]
mov eax [ ebp - 0x2f0 ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
xor ebx ebx
cmp [ ebp - 0x30c ] 0x0
ja r-xdata
mov edx [ ebp - 0x2f0 ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
push eax
call sub_443120
add ebx edi
cmp ebx [ ebp - 0x31c ]
jb r-xdata
mov eax [ eax ]
cmp [ eax ] 0x0
jne r-xdata
xor esi esi
cmp [ ebp - 0x2fc ] 0x0
ja r-xdata
mov edx [ ebp - 0x320 ]
mov eax [ edx + ebx * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call [ FindClose@IAT ]
mov ecx [ ebp - 0x320 ]
mov edx [ ecx + ebx * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
push ecx
call sub_4112ef
add esp 0x4
mov esi [ eax + 0x4 ]
call sub_40d900
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
jmp r-xdata
add esi edi
cmp esi [ ebp - 0x30c ]
jb r-xdata
mov eax [ eax ]
push eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
xor esi esi
lea esi [ ebp - 0x2e4 ]
call sub_4092c0
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
lea ebx [ ebp - 0x14 ]
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] edi
mov [ ebx ] 0x0
mov eax [ ebp - 0x49c ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebp - 0x498 ] 0x0
lea eax [ ecx + ebp ]
je r-xdata
mov edx [ ebp - 0x320 ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
push ecx
call sub_4112ef
add esp 0x4
mov edx [ ebp - 0x310 ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
add esi edi
cmp esi [ ebp - 0x2fc ]
jb r-xdata
mov edx [ eax ]
mov eax [ edx + 0x10 ]
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
mov ecx [ ebp - 0x300 ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
test eax eax
je r-xdata
lea esi [ ebp - 0x49c ]
call sub_40e700
mov eax [ ebp - 0x28 ]
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x0
mov edi edi
mov ecx [ ebp - 0x300 ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
push eax
call sub_44afc1
push eax
call sub_435792
jmp r-xdata
mov esi ebx
call sub_4092c0
lea esi [ ebp - 0x34 ]
call sub_4107f0
lea esi [ ebp - 0x44 ]
call sub_40e6b0
lea ecx [ ebp - 0x64 ]
call sub_402620
lea esi [ ebp - 0x1a0 ]
call sub_401380
lea esi [ ebp - 0x1bc ]
mov [ esi ] r--data
call sub_410810
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
lea ebx [ ebp - 0x2c4 ]
call sub_4012d0
lea ecx [ ebp - 0x2d4 ]
call sub_402620
lea esi [ ebp - 0x2e4 ]
call sub_4092c0
lea esi [ ebp - 0x2f4 ]
mov [ esi ] r--data
call sub_410810
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
lea esi [ ebp - 0x304 ]
add esp 0x4
mov [ esi ] r--data
call sub_410810
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
lea esi [ ebp - 0x314 ]
add esp 0x4
mov [ esi ] r--data
call sub_410810
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
lea esi [ ebp - 0x324 ]
add esp 0x4
mov [ esi ] r--data
call sub_410810
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
lea eax [ ebp - 0x330 ]
call sub_4108c0
lea eax [ ebp - 0x340 ]
call sub_410890
lea ecx [ ebp - 0x350 ]
call sub_402620
lea eax [ ebp - 0x368 ]
call sub_410860
lea esi [ ebp - 0x374 ]
call sub_40e6b0
lea esi [ ebp - 0x380 ]
call sub_40e6b0
lea ecx [ ebp - 0x3c4 ]
call sub_402620
lea ecx [ ebp - 0x3d4 ]
call sub_402620
lea ecx [ ebp - 0x3e4 ]
call sub_402620
pop edi
pop esi
lea eax [ ebp - 0x414 ]
pop ebp
pop ebx
add esp 0x4
jmp sub_40df10
add eax 0xfffffb64
lea ecx [ esp + 0x10 ]
call sub_40d590
mov edx [ ebp - 0x49c ]
mov eax [ edx + 0x4 ]
lea edi [ eax + ebp - 0x498 ]
call sub_40dc00
mov ecx [ ebp - 0x49c ]
mov edx [ ecx + 0x4 ]
cmp [ edx + ebp - 0x498 ] 0x0
lea eax [ edx + ebp ]
jne r-xdata
sub_401e70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4b8
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi eax
mov eax 0x104
lea ecx [ esp + 0x8 ]
call sub_401400
cmp [ rw-data ] 0x1
je r-xdata
mov ecx [ rw-data ]
push 0x7f
lea eax [ esp + 0x1c ]
push eax
push 0x65
push ecx
call [ __import_lookup_table_10(USER32:LoadStringW) ]
jmp r-xdata
xor edx edx
mov [ esp + 0x18 ] dx
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0xc ]
call sub_4021e0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ rw-data ]
lea eax [ esp + 0x8 ]
call sub_40d330
mov esi [ rw-data ]
push esi
call sub_437a81
test eax eax
je r-xdata
cmp [ esi + 0x60 ] 0x0
jne r-xdata
push 0x3a4
lea ecx [ esp + 0x120 ]
push 0x0
push ecx
call sub_4131f0
mov eax [ esp + 0x14 ]
mov edx [ rw-data ]
push 0x7f
push eax
lea ecx [ esp + 0x2c ]
push ecx
mov [ esp + 0x130 ] 0x3a8
mov [ esp + 0x134 ] edx
mov [ esp + 0x138 ] 0x1
mov [ esp + 0x13c ] 0x4
call sub_41326a
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x14c ]
xor edx edx
push ecx
mov [ esp + 0x136 ] dx
call sub_411691
add esp 0x20
lea edx [ esp + 0x118 ]
push edx
push 0x1
call [ Shell_NotifyIconW@IAT ]
lea ecx [ esp + 0x8 ]
call sub_402620
mov edi r--data
lea eax [ esp + 0x8 ]
call sub_40d330
push esi
call sub_437a81
mov edi eax
jmp r-xdata
add esi 0x5c
push esi
lea esi [ esp + 0xc ]
call sub_40df50
jmp r-xdata
mov edi [ rw-data ]
lea eax [ esp + 0x8 ]
call sub_40d330
sub_401f80
sub esp 0x50
push ebx
push ebp
push esi
push edi
lea esi [ esp + 0x3c ]
call sub_40e680
mov eax [ esp + 0x64 ]
xor ebp ebp
push eax
mov ecx esi
mov [ esp + 0x18 ] ebp
call sub_402940
push 0x104
push rw-data
push ebp
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameW) ]
mov eax rw-data
call sub_40ff90
lea esi [ esp + 0x40 ]
lea edi [ esp + 0x28 ]
mov bl al
mov [ rw-data ] rw-data
call sub_4107b0
mov edi r--data
lea esi [ esp + 0x18 ]
call sub_401b70
xor eax eax
lea ecx [ ebp + 0x1 ]
lea edx [ esp + 0x28 ]
call sub_4019e0
mov ecx esi
call sub_402620
lea esi [ esp + 0x28 ]
call sub_4092c0
mov edi r--data
lea esi [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x28 ] ebp
call sub_401b70
xor eax eax
mov ecx 0x100
lea edx [ esp + 0x28 ]
call sub_4019e0
mov ecx esi
call sub_402620
lea esi [ esp + 0x18 ]
call sub_401b70
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x68 ]
push edx
xor ecx ecx
call sub_40c3e0
mov ecx esi
call sub_402620
mov ebp [ esp + 0x58 ]
lea ecx [ esp + 0x18 ]
call sub_40c060
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
call sub_401a70
mov esi [ esp + 0x18 ]
push esi
push r--data
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
mov [ rw-data ] 0x1
dec ebp
call sub_401a70
mov esi [ esp + 0x18 ]
jmp r-xdata
push esi
push r--data
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
mov [ rw-data ] 0x1
dec ebp
call sub_401a70
mov esi [ esp + 0x18 ]
jmp r-xdata
push esi
push r--data
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
test bl bl
sete al
push 0x104
push rw-data
push 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] eax
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameW) ]
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
call sub_401a70
lea ecx [ esp + 0x18 ]
push ecx
mov esi rw-data
call sub_40df50
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
sub ebp 0x2
call sub_401a70
mov esi [ esp + 0x18 ]
jmp r-xdata
push esi
push r--data
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
push esi
push rw-data
call sub_411691
add esp 0x8
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
dec ebp
call sub_401a70
jmp r-xdata
test ebp ebp
jl r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x3
xor ebp ebp
jmp r-xdata
mov edi [ esp + 0x64 ]
lea eax [ ebp + 0x1 ]
push eax
push 0x1
mov eax edi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
add esp 0x18
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebp
test ebp ebp
jle r-xdata
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
call sub_401a70
mov edx [ esp + 0x18 ]
push edx
push rw-data
call sub_411691
add esp 0x8
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x3c ]
sub ebp 0x2
call sub_401a70
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x18 ]
call sub_402620
lea esi [ esp + 0x28 ]
call sub_4092c0
lea edi [ esp + 0x50 ]
call sub_401a30
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x50 ] r--data
call sub_401a30
mov ecx [ esp + 0x54 ]
push ecx
call sub_4112ef
add esp 0x4
lea ecx [ esp + 0x40 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x4
xor ebx ebx
mov edi [ esp + 0x64 ]
jmp r-xdata
inc ebx
push ebx
push 0x1
push 0x0
push edi
call sub_40d030
add esp 0x10
lea edi [ esp + 0x18 ]
mov esi eax
call sub_40e640
mov ecx edi
lea eax [ esp + 0x3c ]
call sub_401a70
cmp ebx ebp
jl r-xdata
sub_4021e0
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov esi eax
test ebp ebp
je r-xdata
or eax 0xffffffff
xor edi edi
call sub_40c740
jmp r-xdata
push ebp
call sub_4112d5
mov ecx [ esi + 0xc ]
add esp 0x4
mov [ esi + 0x4 ] eax
cmp [ ecx ] 0x1
jg r-xdata
pop edi
pop esi
pop ebp
retn 0x4
dec [ ecx ]
call sub_4013e0
mov eax [ esi + 0x4 ]
add eax 0x1
je r-xdata
mov edi eax
call sub_404020
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esi ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebp
push edx
call sub_410f70
add esp 0xc
sub_402270
sub esp 0x68
push ebx
push ebp
mov ebp [ esp + 0x7c ]
push esi
mov esi 0x1
push edi
lea eax [ esp + 0x48 ]
mov [ esp + 0x84 ] esi
call sub_40dce0
mov edi [ esp + 0x80 ]
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x84 ]
xor eax eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x14 ] eax
mov eax [ ebp ]
sub eax esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x4c ] eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x33
mov [ esp + 0x48 ] 0x3
jne r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ esp + 0x7c ]
push eax
push 0x94
push ecx
call sub_45e62e
jmp r-xdata
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x38 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
add [ eax ] esi
add [ esp + 0x84 ] esi
mov [ esp + 0x3c ] edx
lea edx [ esp + 0x14 ]
mov [ esp + 0x44 ] eax
mov [ esp + 0x40 ] ecx
push edx
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
lea esi [ esp + 0x40 ]
call sub_40c3e0
mov ebx [ esp + 0x10 ]
test ebx ebx
jne r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea edx [ esp + 0x48 ]
push edx
call sub_452334
jmp r-xdata
test [ esp + 0x14 ] 0x100
je r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov edx esi
lea eax [ ebx + 0x1 ]
xor ecx ecx
lea esi [ esp + 0x38 ]
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x18 ] ebx
call sub_4019e0
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ ebx + 0x1 ]
call sub_40c3e0
mov ebx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x68
retn 0xc
cmp [ ebx + 0x8 ] 0x5
mov esi [ esp + 0x7c ]
je r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x84 ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esp + 0x84 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
mov [ esp + 0x54 ] ebx
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x84 ]
mov edx [ eax + ecx * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
mov ecx [ esp + 0x7c ]
push eax
push 0xa3
push ecx
jmp r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push esi
lea eax [ esp + 0x90 ]
mov ecx edi
call sub_40c620
test eax eax
je r-xdata
cmp [ eax ] 0x11
jne r-xdata
inc [ esp + 0x84 ]
push 0xffffffff
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x8c ]
push ecx
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
call sub_45e62e
mov ebx [ esp + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea ecx [ esp + 0x48 ]
push ecx
call sub_452334
jmp r-xdata
movsx ecx [ eax + 0xa ]
push ecx
push 0x94
inc [ esp + 0x84 ]
push 0xffffffff
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x8c ]
push ecx
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea eax [ esp + 0x18 ]
push eax
call sub_409210
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x84 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x8
jne r-xdata
cmp [ eax ] 0xf
jne r-xdata
cmp eax 0x5
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_409210
mov ebx [ esp + 0x60 ]
jmp r-xdata
inc [ esp + 0x84 ]
push 0xffffffff
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x8c ]
push ecx
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
mov ebx 0x1
push ebx
push r--data
push 0x0
push 0xa9
push esi
call sub_4781ae
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call sub_45e85e
xor esi esi
lea edx [ esp + 0x18 ]
call sub_40d0f0
push esi
push edx
call sub_4354dd
test eax eax
jle r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esp + 0x84 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ebx [ esp + 0x5c ]
call sub_409210
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x84 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
mov esi [ esp + 0x7c ]
mov [ esp + 0x30 ] ebx
mov [ esp + 0x28 ] ebx
mov ebx [ esp + 0x60 ]
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x84 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xa9
jmp r-xdata
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
lea esi [ esp + 0x58 ]
call sub_4092c0
mov edi 0x1
lea esi [ esp + 0x68 ]
mov [ esp + 0x60 ] edi
mov [ esp + 0x58 ] edi
call sub_4092c0
mov esi [ esp + 0x7c ]
mov ebx [ esp + 0x60 ]
mov [ esp + 0x70 ] edi
mov edi [ esp + 0x80 ]
mov [ esp + 0x68 ] 0xffffffff
jmp r-xdata
push 0x1
push edx
call sub_4354dd
test eax eax
jle r-xdata
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
jmp r-xdata
xor esi esi
xor dl dl
jmp r-xdata
cmp [ eax ] 0x10
jne r-xdata
lea esi [ esp + 0x68 ]
call sub_4092c0
mov esi [ esp + 0x7c ]
mov eax 0x1
mov [ esp + 0x70 ] eax
mov [ esp + 0x68 ] eax
push esi
push esi
push 0x1
push edx
call sub_40d030
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp ]
lea ecx [ eax + 0x1 ]
mov [ ebp ] ecx
cmp eax [ rw-data ]
jg r-xdata
inc [ esp + 0x84 ]
push 0xffffffff
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x8c ]
push ecx
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
push eax
call sub_452bcc
jmp r-xdata
mov ebx [ esp + 0x60 ]
cmp ebx 0x4
je r-xdata
push esi
lea edx [ esp + 0x1c ]
push esi
push edx
call sub_40d030
mov ebx [ esp + 0x1c ]
add esp 0xc
push eax
call sub_409210
lea eax [ esp + 0x18 ]
push eax
lea ebx [ esp + 0x5c ]
call sub_409210
mov esi [ esp + 0x7c ]
mov ebx [ esp + 0x60 ]
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c760
cmp eax 0x1
je r-xdata
test eax eax
jle r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ebx [ esp + 0x6c ]
call sub_409210
jmp r-xdata
lea ecx [ esp + 0x58 ]
push ecx
call sub_452bcc
mov ebx [ esp + 0x60 ]
jmp r-xdata
mov ecx [ esp + 0x50 ]
inc ecx
mov [ ebp ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp [ eax + 0x8 ] 0x8
je r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ eax + 0x8 ] 0x4
je r-xdata
cmp ebx 0x5
je r-xdata
cmp ebx 0x5
je r-xdata
test dl dl
jne r-xdata
lea esi [ esp + 0x68 ]
call sub_4092c0
mov ebx [ esp + 0x7c ]
add ebx 0x16c
lea eax [ esp + 0x48 ]
mov [ esp + 0x70 ] 0x1
mov [ esp + 0x68 ] 0x0
call sub_40cfe0
mov eax [ esp + 0x4c ]
inc eax
mov [ ebp ] eax
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x28 ] 0x0
call sub_4092c0
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x80 ]
lea edx [ esp + 0x2c ]
push edx
push ebx
push esi
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x28 ] 0x0
call sub_479c97
lea eax [ esp + 0x28 ]
push eax
call sub_43550e
test al al
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
fldz
lea eax [ esp + 0x68 ]
fstp [ esp + 0x18 ]
mov [ esp + 0x20 ] 0x3
call sub_40c770
test al al
lea eax [ esp + 0x58 ]
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea esi [ esp + 0x68 ]
call sub_4092c0
lea esi [ esp + 0x58 ]
call sub_4092c0
lea eax [ esp + 0x18 ]
push eax
call sub_409210
lea ecx [ esp + 0x28 ]
push ecx
lea ebx [ esp + 0x6c ]
call sub_409210
lea ebx [ esi + 0x16c ]
jmp r-xdata
mov edi r--data
call sub_40e6d0
lea esi [ esp + 0x28 ]
call sub_4092c0
xor ebx ebx
mov edi 0x1
lea esi [ esp + 0x18 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x28 ] ebx
call sub_4092c0
mov [ esp + 0x20 ] edi
mov [ esp + 0x18 ] ebx
mov ecx [ esp + 0x10 ]
push eax
push ecx
call sub_4671e2
add esp 0x8
test al al
je r-xdata
mov esi [ esp + 0x10 ]
call sub_40c770
test al al
jne r-xdata
mov eax [ eax ]
sub eax 0xd
je r-xdata
lea eax [ esp + 0x48 ]
call sub_40cfe0
mov edx [ esp + 0x4c ]
inc edx
mov [ ebp ] edx
jmp r-xdata
mov eax [ esp + 0x50 ]
inc eax
mov [ ebp ] eax
jmp r-xdata
mov ebx [ esp + 0x7c ]
add ebx 0x16c
mov edx [ esp + 0x50 ]
inc edx
mov [ ebp ] edx
jmp r-xdata
mov ebx [ esp + 0x7c ]
add ebx 0x16c
lea eax [ esp + 0x48 ]
call sub_40cfe0
mov ecx [ esp + 0x4c ]
inc ecx
mov [ ebp ] ecx
inc esi
jmp r-xdata
sub eax 0x1
jne r-xdata
test esi esi
jne r-xdata
dec esi
jmp r-xdata
dec ecx
mov dl 0x1
mov [ esp + 0x50 ] ecx
jmp r-xdata
sub_4025a0
push esi
push edi
call sub_4104c0
mov esi rw-data
mov edi 0xd
sub esi 0x10
mov ecx esi
call sub_402620
sub edi 0x1
jns r-xdata
mov eax rw-data
call sub_4014e0
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_402620
pop edi
mov ecx rw-data
pop esi
jmp sub_402620
sub_402620
mov eax [ ecx + 0xc ]
dec [ eax ]
mov eax [ ecx + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
retn
push esi
mov esi ecx
mov ecx [ esi ]
push ecx
call sub_4112ef
mov edx [ esi + 0xc ]
push edx
call sub_4112ef
add esp 0x8
pop esi
sub_402650
movzx eax [ edi + 0x8 ]
cmp ax 0x30
jl r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp ax 0x3f
jg r-xdata
xor eax eax
mov [ edi ] eax
mov eax edi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ edi ] eax
mov eax edi
retn
mov eax [ edi ]
test eax eax
jne r-xdata
push eax
call sub_4436f6
jmp r-xdata
sub_4026a0
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp [ esp + 0xc ]
je r-xdata
mov eax ebp
pop ebp
retn 0x8
push ebx
push esi
xor ebx ebx
push edi
mov edi [ esp + 0x18 ]
cmp [ ebp + 0x8 ] ebx
ja r-xdata
xor esi esi
mov [ ebp + 0x8 ] ebx
mov eax [ edi + 0x8 ]
cmp [ ebp + 0xc ] eax
jae r-xdata
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
push eax
call sub_44c7f2
mov eax [ edi + 0x8 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
jbe r-xdata
cmp eax 0x4
jb r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp eax ebx
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
lea esp [ esp ]
mov eax 0x4
jmp r-xdata
xor ecx ecx
mov [ ebp + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi eax
mov eax [ ebp + 0x4 ]
push eax
call sub_4112ef
add esp 0x8
mov [ ebp + 0x4 ] esi
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ ecx + ebx * 4 ]
mov dx [ edi + 0x8 ]
mov esi eax
mov [ esi + 0x8 ] dx
mov ax [ edi + 0xa ]
mov [ esi + 0xa ] ax
movzx eax dx
cmp ax 0x3f
jle r-xdata
mov edx [ ebp + 0x4 ]
mov [ edx + ebx * 4 ] esi
inc ebx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
push 0xc
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov edx [ edi ]
mov [ esi ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov edi [ edi ]
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edi [ edi + 0xc ]
mov [ eax + 0xc ] edi
inc [ edi ]
mov [ esi ] eax
jmp r-xdata
mov edi [ esp + 0x18 ]
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov ecx [ edi ]
mov [ esi ] ecx
sub_4027d0
sub esp 0x14
push ebx
push ebp
xor ebp ebp
push esi
push edi
cmp [ rw-data ] ebp
jne r-xdata
mov al 0x1
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
xor al al
jmp r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ rw-data ]
add esp 0x4
cmp edx ebp
mov [ rw-data ] eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
lea edi [ edx + 0x1 ]
xor ecx ecx
mov eax edi
mov edx 0x10
mul edx
seto cl
mov esi 0x1
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebp
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_41171a
add esp 0x4
cmp eax ebp
je r-xdata
xor ecx ecx
jmp r-xdata
xor eax eax
jmp r-xdata
lea ecx [ edi - 0x1 ]
cmp ecx ebp
mov [ eax ] edi
lea edx [ eax + 0x4 ]
jl r-xdata
mov edx [ esi ]
mov [ eax + ecx * 4 ] edx
mov edx [ rw-data ]
inc ecx
cmp ecx edx
jl r-xdata
mov [ rw-data ] eax
mov edi 0x10
mov eax edx
mov eax edx
jmp r-xdata
mov esi [ esi + 0xc ]
mov eax [ rw-data ]
lea ebx [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
call sub_40d1e0
mov edx [ esp + 0x14 ]
push edx
call sub_4112ef
add esp 0x4
cmp eax ebp
je r-xdata
mov [ eax ] r--data
mov [ eax + 0x4 ] ebp
mov [ eax + 0x8 ] ebp
mov [ eax + 0xc ] ebp
add eax 0x10
sub ecx esi
jns r-xdata
cmp esi ebp
jle r-xdata
mov ebx [ eax + esi * 4 - 0x4 ]
cmp ebx ebp
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_402dd0
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_40ed60
mov eax [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
lea ecx [ edi + eax ]
push ecx
call sub_4026a0
inc esi
add edi 0x10
jmp r-xdata
cmp esi [ rw-data ]
mov eax [ rw-data ]
jg r-xdata
sub_402940
mov eax 0x2028
call sub_425210
push ebx
push ebp
push esi
mov ebx ecx
push edi
lea edi [ ebx + 0x14 ]
mov [ esp + 0x1c ] edi
call sub_401a30
mov eax [ esp + 0x203c ]
xor ebp ebp
mov [ ebx ] ebp
add ebx 0x4
push eax
mov eax ebx
call sub_4021e0
mov [ esp + 0x14 ] ebp
mov [ esp + 0x12 ] 0x0
mov [ esp + 0x18 ] ebp
mov [ esp + 0x13 ] 0x0
inc ebp
jmp r-xdata
cmp ax 0x9
je r-xdata
mov edi ebp
mov esi ebx
call sub_401be0
movzx eax [ eax ]
cmp ax 0x20
je r-xdata
mov eax ebx
call sub_402ae0
mov eax [ ebx + 0x4 ]
cmp ebp eax
jae r-xdata
mov edx [ ebx ]
lea eax [ edx + eax * 2 ]
jmp r-xdata
mov ecx [ ebx ]
lea eax [ ecx + ebp * 2 ]
movzx eax [ eax ]
mov ecx [ esp + 0x14 ]
test ax ax
je r-xdata
test ecx ecx
je r-xdata
inc ebp
cmp ecx 0x1000
jge r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
cmp [ esp + 0x12 ] 0x0
jne r-xdata
cmp ax 0x20
je r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
lea eax [ ecx - 0x1 ]
cmp eax edx
jl r-xdata
xor edx edx
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x20 ]
mov [ esp + ecx * 2 + 0x30 ] dx
call sub_401b70
mov edi esi
mov esi [ esp + 0x1c ]
call sub_40d970
mov ecx edi
call sub_402620
cmp [ esp + 0x12 ] 0x1
je r-xdata
cmp ax 0x9
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2028
retn 0x4
mov eax 0x22
inc ecx
mov [ esp + edx * 2 + 0x30 ] ax
jmp r-xdata
mov si [ esp + eax * 2 + 0x30 ]
mov [ esp + eax * 2 + 0x32 ] si
dec eax
cmp eax edx
jge r-xdata
mov [ esp + ecx * 2 + 0x30 ] ax
inc ecx
mov [ esp + 0x14 ] ecx
jmp r-xdata
xor edx edx
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x20 ]
mov [ esp + ecx * 2 + 0x30 ] dx
call sub_401b70
mov edi esi
mov esi [ esp + 0x1c ]
call sub_40d970
mov ecx edi
call sub_402620
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x13 ] 0x0
cmp ax 0x22
je r-xdata
inc ebp
jmp r-xdata
cmp ax 0x9
jne r-xdata
mov edi ebp
mov esi ebx
call sub_401be0
cmp [ eax ] 0x22
je r-xdata
mov edi ebp
mov esi ebx
call sub_401be0
movzx eax [ eax ]
cmp ax 0x20
je r-xdata
mov cl [ esp + 0x12 ]
test cl cl
je r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
mov [ esp + 0x13 ] 0x1
mov eax [ esp + 0x14 ]
mov edx 0x22
mov [ esp + eax * 2 + 0x30 ] dx
inc eax
mov [ esp + 0x14 ] eax
jmp r-xdata
mov [ esp + 0x12 ] 0x1
mov [ esp + 0x12 ] 0x0
jmp r-xdata
jmp r-xdata
inc ebp
test cl cl
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
sub_402ae0
push esi
mov esi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push edi
call sub_4013e0
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_446547
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esi ]
mov edi eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push edi
call sub_410f70
add esp 0x10
mov [ esi ] edi
pop edi
pop esi
retn
pop esi
retn
sub_402b00
movzx eax [ esi + 0x8 ]
cmp ax 0x30
jl r-xdata
cmp di 0x3f
mov [ esi + 0x8 ] di
jle r-xdata
cmp ax 0x3f
jg r-xdata
cmp di 0x30
jge r-xdata
cmp di 0x10
je r-xdata
push ebx
mov ebx [ esi ]
test ebx ebx
je r-xdata
mov [ esi ] 0x0
retn
jmp r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
cmp di 0x20
je r-xdata
mov [ esi ] 0x0
pop ebx
mov eax [ ebx + 0xc ]
dec [ eax ]
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
fldz
fstp [ esi ]
retn
mov ecx [ ebx ]
push ecx
call sub_4112ef
mov edx [ ebx + 0xc ]
push edx
call sub_4112ef
add esp 0x8
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
sub_402b70
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov esi ebp
mov edi eax
mov ebx ecx
call sub_403770
cmp si 0x41
jae r-xdata
cmp si 0x61
jb r-xdata
push esi
mov eax ebp
call sub_403470
inc [ edi ]
jmp r-xdata
jmp r-xdata
cmp si 0x30
jae r-xdata
cmp si 0x7a
ja r-xdata
mov eax [ edi ]
movzx esi [ ebx + eax * 2 ]
cmp si 0x5a
jbe r-xdata
cmp si 0x39
jbe r-xdata
cmp si 0x5f
je r-xdata
jmp r-xdata
mov eax ebp
call sub_402ae0
mov ecx [ ebp + 0x4 ]
mov edx [ ebp ]
push ecx
push edx
call [ CharUpperBuffW@IAT ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp ]
push eax
mov eax [ ebx * 4 + rw-data ]
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
test ebx ebx
jl r-xdata
inc ebx
cmp ebx 0x2b
jl r-xdata
cmp si 0x28
jne r-xdata
cmp si 0x20
jne r-xdata
cmp si 0x20
je r-xdata
mov eax [ ebp ]
mov ecx [ rw-data ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
test eax eax
jl r-xdata
cmp si 0x9
je r-xdata
mov esi [ esp + 0x14 ]
xor edi edi
call sub_402b00
pop edi
mov [ esi ] ebx
pop esi
pop ebp
pop ebx
retn 0x8
cmp si 0x9
je r-xdata
mov ebx [ esp + 0x14 ]
mov edi 0x34
mov esi ebx
call sub_402b00
mov esi ebp
mov edi ebx
call sub_402650
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov esi [ esp + 0x14 ]
mov edi 0x1
mov ebx eax
call sub_402b00
mov [ esi ] ebx
cmp si 0x2c
je r-xdata
mov esi [ esp + 0x14 ]
or edi 0xffffffff
call sub_402b00
mov [ esi ] edi
jmp r-xdata
cmp si 0x3d
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp si 0x28
je r-xdata
cmp si 0x29
je r-xdata
cmp si 0x5d
je r-xdata
test si si
je r-xdata
jmp r-xdata
sub_402cc0
mov eax [ edi + 0xc ]
push ebp
mov ebp [ esp + 0x8 ]
push esi
cmp [ edi + 0x8 ] eax
je r-xdata
add eax eax
mov [ edi + 0xc ] eax
cmp eax 0x4
jb r-xdata
push 0xc
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax 0x4
jmp r-xdata
xor ecx ecx
mov [ edi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ edi + 0x4 ]
mov esi eax
mov eax [ edi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push esi
call sub_410f70
mov edx [ edi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ edi + 0x4 ] esi
jmp r-xdata
xor esi esi
jmp r-xdata
mov esi eax
mov ax [ ebp + 0x8 ]
mov [ esi + 0x8 ] ax
mov cx [ ebp + 0xa ]
movzx eax ax
cmp ax 0x3f
mov [ esi + 0xa ] cx
jle r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + eax * 4 ] esi
inc [ edi + 0x8 ]
pop esi
pop ebp
retn 0x4
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp ]
mov [ esi ] eax
mov ecx [ ebp + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
cmp ax 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov ebp [ ebp ]
mov edx [ ebp ]
mov [ eax ] edx
mov ecx [ ebp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov ebp [ ebp + 0xc ]
mov [ eax + 0xc ] ebp
inc [ ebp ]
fld [ ebp ]
fstp [ esi ]
jmp r-xdata
mov edx [ ebp ]
mov [ esi ] edx
mov [ esi ] eax
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + eax * 4 ] esi
inc [ edi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_402dd0
sub esp 0x28
or eax 0xffffffff
mov [ esp + 0x10 ] ax
push ebp
xor ecx ecx
mov eax 0x65
xor ebp ebp
mov [ esp + 0x20 ] eax
mov edx 0x2
mul edx
seto cl
push esi
push edi
mov [ esp + 0x24 ] ebp
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
push 0x4
mov [ esp + 0x24 ] eax
mov [ eax ] cx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ esp + 0x2c ] ebp
jmp r-xdata
mov [ eax ] 0x1
mov [ esp + 0x2c ] eax
mov edx [ esp + 0x3c ]
cmp [ edx + 0x8 ] ebp
jbe r-xdata
mov edx [ esp + 0x3c ]
mov [ edx + 0x8 ] ebp
cmp [ ebx ] bp
je r-xdata
xor edi edi
mov eax edx
mov edi [ esp + 0x3c ]
lea ecx [ esp + 0x14 ]
mov eax 0x7f
push ecx
mov [ esp + 0x20 ] ax
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x22 ] bp
call sub_402cc0
mov esi [ esp + 0x2c ]
add [ esi ] 0xffffffff
jne r-xdata
jmp r-xdata
inc edi
cmp edi [ eax + 0x8 ]
jb r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
xor eax eax
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
movzx eax [ ebx + ebp * 2 ]
cmp ax 0x20
je r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + edi * 4 ]
test esi esi
je r-xdata
cmp ax 0x30
jl r-xdata
push esi
call sub_4112ef
mov eax [ esp + 0x40 ]
add esp 0x4
inc ebp
jmp r-xdata
cmp ax 0x9
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
movzx eax [ ebx + ebp * 2 ]
test ax ax
je r-xdata
mov eax [ ecx + 0xc ]
dec [ eax ]
mov edx [ ecx + 0xc ]
mov [ esp + 0x10 ] ecx
cmp [ edx ] ebp
je r-xdata
mov ax [ esp + 0x1c ]
cmp ax 0x30
jl r-xdata
movzx esi ax
mov [ esp + 0x10 ] ebp
mov [ esp + 0x1e ] bp
cmp si 0x30
jae r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_4112ef
mov edx [ esp + 0x14 ]
mov eax [ edx + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp ax 0x3f
jle r-xdata
cmp si 0x39
ja r-xdata
cmp si 0x2e
je r-xdata
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push ebx
lea eax [ esp + 0x1c ]
call sub_4035d0
cmp al 0x1
jne r-xdata
cmp si 0x41
jae r-xdata
mov ecx esi
call sub_402620
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov ebp [ esp + 0x10 ]
cmp si 0x2e
jne r-xdata
mov edi [ esp + 0x3c ]
lea edx [ esp + 0x14 ]
push edx
call sub_402cc0
mov ebp [ esp + 0x10 ]
jmp r-xdata
cmp si 0x5a
ja r-xdata
cmp si 0x61
jae r-xdata
lea esi [ esp + 0x20 ]
inc ebp
call sub_403770
cmp [ ebx + ebp * 2 ] 0x0
jne r-xdata
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
mov ecx ebx
call sub_402b70
cmp [ esp + 0x14 ] 0xffffffff
je r-xdata
cmp si 0x7a
jbe r-xdata
cmp si 0x5f
je r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x38 ]
push eax
push 0x138c
push ecx
call sub_45ffa9
lea ecx [ esp + 0x20 ]
call sub_402620
lea edx [ esp + 0x14 ]
push edx
call sub_44b453
mov eax 0x1
jmp r-xdata
mov edi [ esp + 0x3c ]
lea eax [ esp + 0x14 ]
push eax
call sub_402cc0
mov ebp [ esp + 0x10 ]
jmp r-xdata
jmp r-xdata
movzx eax si
cmp eax 0x24
je r-xdata
cmp ax 0x30
jb r-xdata
cmp ax 0x7a
jbe r-xdata
push eax
lea eax [ esp + 0x24 ]
call sub_403470
inc ebp
jmp r-xdata
pop edi
pop esi
pop ebp
add esp 0x28
retn 0x8
lea esi [ esp + 0x20 ]
inc ebp
call sub_403770
cmp eax 0x3d
je r-xdata
cmp ax 0x5f
je r-xdata
cmp ax 0x39
jbe r-xdata
movzx eax [ ebx + ebp * 2 ]
cmp ax 0x41
jb r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x41
jae r-xdata
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
lea esi [ esp + 0x14 ]
je r-xdata
cmp eax 0x28
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp ax 0x30
jae r-xdata
cmp ax 0x7a
ja r-xdata
push eax
lea eax [ esp + 0x24 ]
call sub_403470
inc ebp
jmp r-xdata
mov edi 0x50
call sub_402b00
inc ebp
jmp r-xdata
mov edi 0x41
call sub_402b00
jmp r-xdata
mov edi 0x47
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
inc ebp
jmp r-xdata
cmp eax 0x29
je r-xdata
mov ecx [ esp + 0x38 ]
dec ebp
push ebp
push 0x138b
push ecx
call sub_45ffa9
lea ecx [ esp + 0x20 ]
call sub_402620
lea edx [ esp + 0x14 ]
push edx
call sub_44b453
mov eax 0x1
jmp r-xdata
mov edi 0x35
lea esi [ esp + 0x14 ]
call sub_402b00
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x14 ]
call sub_402650
jmp r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5f
je r-xdata
movzx eax [ ebx + ebp * 2 ]
cmp ax 0x5a
ja r-xdata
lea eax [ esp + 0x14 ]
push eax
mov edi 0x48
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
inc ebp
jmp r-xdata
cmp eax 0x22
je r-xdata
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x24 ]
lea edi [ esp + 0x14 ]
call sub_403530
lea esi [ esp + 0x14 ]
test eax eax
jne r-xdata
sub eax 0x1a
cmp eax 0x44
ja r-xdata
lea eax [ esp + 0x20 ]
call sub_402ae0
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
push esi
push edi
call [ CharUpperBuffW@IAT ]
cmp [ esp + 0x1c ] 0x30
jge r-xdata
mov edi 0x7f
call sub_402b00
mov edi [ esp + 0x3c ]
lea edx [ esp + 0x14 ]
push edx
call sub_402cc0
lea ecx [ esp + 0x20 ]
call sub_402620
lea eax [ esp + 0x14 ]
push eax
call sub_44b453
mov eax 0x1
jmp r-xdata
lea edi [ eax + 0x36 ]
call sub_402b00
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x14 ]
call sub_402650
push edi
mov edi [ esp + 0x40 ]
call sub_402cc0
mov ebp [ esp + 0x10 ]
jmp r-xdata
mov edx [ esp + 0x38 ]
push ebp
push 0x1388
push edx
call sub_45ffa9
mov edi 0x7f
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
movzx ecx [ eax + lookup_table_403428 ]
jmp [ ecx * 4 + jump_table_4033ec ]
cmp [ esp + 0x1c ] 0x3f
jg r-xdata
mov edx 0x33
push 0x10
mov [ esp + 0x20 ] dx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov edi 0x40
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
inc ebp
jmp r-xdata
mov edi 0x4d
lea esi [ esp + 0x14 ]
call sub_402b00
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
je r-xdata
mov edi 0x49
lea esi [ esp + 0x14 ]
call sub_402b00
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
je r-xdata
mov edi 0x4c
lea esi [ esp + 0x14 ]
call sub_402b00
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
jne r-xdata
mov edi 0x4b
lea esi [ esp + 0x14 ]
call sub_402b00
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
je r-xdata
mov edi 0x4e
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
inc ebp
jmp r-xdata
mov edi 0x4f
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
inc ebp
jmp r-xdata
lea esi [ esp + 0x20 ]
inc ebp
call sub_403770
movzx eax [ ebx + ebp * 2 + 0x2 ]
inc ebp
sub eax 0x3d
lea esi [ esp + 0x14 ]
je r-xdata
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
lea esi [ esp + 0x14 ]
je r-xdata
mov edi 0x4a
lea esi [ esp + 0x14 ]
call sub_402b00
inc ebp
cmp [ ebx + ebp * 2 ] 0x3d
jne r-xdata
mov edi 0x51
lea esi [ esp + 0x14 ]
call sub_402b00
mov edi [ esp + 0x3c ]
push esi
call sub_402cc0
inc ebp
jmp r-xdata
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esp + 0x14 ] eax
mov edi 0x56
lea esi [ esp + 0x14 ]
inc ebp
call sub_402b00
push esi
jmp r-xdata
push esi
jmp r-xdata
mov edi 0x52
lea esi [ esp + 0x14 ]
inc ebp
call sub_402b00
push esi
jmp r-xdata
push esi
jmp r-xdata
jmp r-xdata
mov edi 0x54
lea esi [ esp + 0x14 ]
inc ebp
call sub_402b00
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x41
jae r-xdata
mov edi 0x46
call sub_402b00
inc ebp
jmp r-xdata
sub eax 0x1
je r-xdata
mov edi 0x45
call sub_402b00
inc ebp
jmp r-xdata
mov edi 0x42
call sub_402b00
jmp r-xdata
mov edi 0x53
inc ebp
call sub_402b00
jmp r-xdata
cmp [ ebx + 0x2 ] bp
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edi [ esp + 0x40 ]
call sub_402cc0
mov edi 0x55
lea esi [ esp + 0x14 ]
inc ebp
call sub_402b00
jmp r-xdata
cmp ax 0x30
jae r-xdata
cmp ax 0x7a
ja r-xdata
push eax
lea eax [ esp + 0x24 ]
call sub_403470
inc ebp
jmp r-xdata
lea edx [ esp + 0x14 ]
push edx
jmp r-xdata
mov edi 0x44
call sub_402b00
inc ebp
jmp r-xdata
mov edi 0x43
call sub_402b00
mov ecx [ esp + 0x38 ]
cmp ecx [ rw-data ]
jl r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_4436f6
jmp r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5f
je r-xdata
movzx eax [ ebx + ebp * 2 ]
cmp ax 0x5a
ja r-xdata
mov ebp 0x1
jmp r-xdata
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x38 ]
dec ebp
push ebp
push 0x138b
push eax
call sub_45ffa9
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_402ae0
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push eax
call [ CharUpperBuffW@IAT ]
mov edi 0x32
lea esi [ esp + 0x14 ]
call sub_402b00
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x14 ]
call sub_402650
push edi
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x14 ]
push ecx
call sub_44b453
mov eax 0x1
jmp r-xdata
sub_403437
push cs
add eax [ eax + 0xe070e06 ]
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
or [ esi ] cl
or [ esi ] ecx
or cl [ esi ]
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
or ecx [ esi ]
or al 0xd
int3
sub_403470
push esi
mov esi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push edi
call sub_4013e0
mov eax [ esi + 0x4 ]
add eax 0x2
push eax
call sub_446547
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esi ]
mov edi eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push edi
call sub_410f70
add esp 0x10
mov [ esi ] edi
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
inc eax
call sub_4034b0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dx [ esp + 0x8 ]
mov [ ecx + eax * 2 ] dx
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax esi
pop esi
retn 0x4
sub_4034b0
inc eax
sub esp 0xc
cmp [ esi + 0x8 ] eax
jb r-xdata
cmp eax 0x41c2
jae r-xdata
add esp 0xc
retn
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
test eax eax
jge r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
test eax eax
jge r-xdata
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
test eax eax
jge r-xdata
fmul [ r--data ]
fnstcw [ esp + 0x2 ]
movzx eax [ esp + 0x2 ]
or eax 0xc00
mov [ esp + 0x4 ] eax
fldcw [ esp + 0x4 ]
fistp [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov [ esi + 0x8 ] ecx
fldcw [ esp + 0x2 ]
jmp r-xdata
fadd [ r--data ]
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ esi ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi ] edi
pop edi
add esp 0xc
retn
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push eax
push edi
call sub_410f70
mov eax [ esi ]
push eax
call sub_4112ef
add esp 0x10
fmul [ r--data ]
fnstcw [ esp + 0x2 ]
movzx eax [ esp + 0x2 ]
or eax 0xc00
mov [ esp + 0x4 ] eax
fldcw [ esp + 0x4 ]
fistp [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
fldcw [ esp + 0x2 ]
jmp r-xdata
fadd [ r--data ]
fmul [ r--data ]
fnstcw [ esp + 0x2 ]
movzx eax [ esp + 0x2 ]
or eax 0xc00
mov [ esp + 0x4 ] eax
fldcw [ esp + 0x4 ]
fistp [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov [ esi + 0x8 ] edx
fldcw [ esp + 0x2 ]
jmp r-xdata
fadd [ r--data ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
sub_403530
sub esp 0x10
push ebp
push esi
mov esi eax
call sub_403770
mov ecx [ edi ]
cmp [ ebx + ecx * 2 + 0x2 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ edi ] eax
je r-xdata
mov eax [ esp + 0x1c ]
push ecx
push 0x138a
push eax
call sub_45ffa9
mov eax 0x1
jmp r-xdata
movzx edx [ ebx + ecx * 2 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0xc ] edx
jmp r-xdata
pop esi
pop ebp
add esp 0x10
retn 0x4
mov eax [ edi ]
lea ecx [ ebx + eax * 2 ]
movzx eax [ ecx ]
cmp ax dx
je r-xdata
cmp [ ecx + 0x2 ] dx
je r-xdata
movzx ebp ax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
push eax
mov eax esi
call sub_403470
add [ edi ] 0x2
jmp r-xdata
inc [ edi ]
xor eax eax
dec [ eax ]
call sub_4013e0
mov ecx [ esi + 0x4 ]
add ecx 0x2
push ecx
call sub_446547
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
add esp 0x4
lea edx [ ecx + ecx + 0x2 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ esp + 0x1c ] eax
call sub_410f70
mov edx [ esp + 0x1c ]
add esp 0xc
mov [ esi ] edx
jmp r-xdata
mov eax [ esi + 0x4 ]
inc eax
call sub_4034b0
mov edx [ edi ]
cmp [ ebx + edx * 2 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ ecx + eax * 2 ] bp
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
xor ecx ecx
inc [ edi ]
mov [ edx + eax * 2 ] cx
mov edx [ esp + 0xc ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
sub_4035d0
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi eax
call sub_403770
mov eax [ edi ]
cmp [ ebp + eax * 2 ] 0x30
je r-xdata
movzx ecx [ ebp + eax * 2 + 0x2 ]
mov ebx esi
cmp cx 0x78
je r-xdata
mov [ esp + 0x1c ] 0x0
mov esi eax
mov ebx 0x17
add eax 0x2
mov [ edi ] eax
cmp cx 0x58
jne r-xdata
and ecx 0xffffffdf
cmp ecx 0x41
jge r-xdata
cmp eax 0x31
je r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x39
jbe r-xdata
jmp r-xdata
cmp ecx 0x5a
jg r-xdata
cmp dx 0x5f
jne r-xdata
and ebx 0xffffffef
or ebx 0x20
sub eax 0x2b
cmp eax 0x3a
ja r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x66
jbe r-xdata
movzx eax ax
inc ecx
push eax
mov eax ebx
mov [ edi ] ecx
call sub_403470
jmp r-xdata
jmp r-xdata
test bl 0x20
je r-xdata
jmp r-xdata
test bl 0x10
jne r-xdata
mov eax [ edi ]
movzx ecx [ ebp + eax * 2 ]
inc eax
mov [ edi ] eax
mov eax [ esp + 0x24 ]
push ecx
call sub_403470
and ebx 0xffffffdf
jmp r-xdata
movzx eax [ eax + lookup_table_403730 ]
jmp [ eax * 4 + jump_table_40371c ]
mov esi [ esp + 0x20 ]
mov edi 0x5
call sub_402b00
mov ebx [ ebx ]
push 0x8
lea eax [ esp + 0x14 ]
push eax
push ebx
call sub_435d02
add esp 0xc
test al al
je r-xdata
cmp ax 0x46
ja r-xdata
mov ecx [ edi ]
movzx eax [ ebp + ecx * 2 ]
cmp ax 0x30
jb r-xdata
test ebx 0xfffffffd
je r-xdata
xor al al
jmp r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov edx [ edi ]
movzx edx [ ebp + edx * 2 ]
movzx ecx dx
mov eax ecx
cmp eax 0x2b
jl r-xdata
test bl 0x2
je r-xdata
mov ecx ebx
and cl 0x14
cmp cl 0x4
jne r-xdata
test bl 0x8
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ esi ] ecx
jmp r-xdata
or ebx 0x10
mov [ edi ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov esi [ esp + 0x20 ]
mov edi 0x20
call sub_402b00
mov edx [ esp + 0x24 ]
mov eax [ edx ]
push eax
call sub_413f97
fstp [ esi ]
add esp 0x4
jmp r-xdata
mov edi [ esp + 0x24 ]
mov eax [ edi ]
push eax
call sub_41343c
mov ebx eax
add esp 0x4
mov ecx ebx
add ecx 0x80000000
mov ebp edx
adc edx 0x0
test edx edx
ja r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
mov ebx 0x25
mov [ esp + 0x1c ] 0x1
jmp r-xdata
mov ebx 0x39
mov ebx 0x31
jmp r-xdata
mov al 0x1
mov esi [ esp + 0x20 ]
mov edi 0x10
call sub_402b00
mov [ esi ] ebx
mov [ esi + 0x4 ] ebp
jmp r-xdata
jb r-xdata
mov esi [ esp + 0x20 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
cmp ecx 0xffffffff
ja r-xdata
cmp ax 0x30
jl r-xdata
mov eax 0x5
mov [ esi + 0x8 ] ax
mov [ esi ] 0x0
mov edi [ edi ]
push edi
call sub_413431
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
push eax
call sub_4436f6
sub_403735
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_403770
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ esi + 0x4 ] 0x0
mov [ eax ] cx
retn
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
xor ecx ecx
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
add esp 0x4
mov [ eax ] cx
retn
sub_4037e0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x2cac
call sub_425210
mov eax [ rw-data ]
push ebx
inc eax
cmp eax 0x30
push esi
push edi
mov [ rw-data ] eax
jge r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push r--data
push ecx
push edx
push eax
call sub_453f80
dec [ rw-data ]
xor al al
jmp r-xdata
mov edi [ ebp + 0xc ]
mov bl 0x1
lea eax [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x13 ] bl
mov [ esp + 0x11 ] 0x0
call sub_40d940
lea esi [ esp + 0x18 ]
call sub_401b70
push esi
mov eax 0x2000
lea ecx [ esp + 0x2c ]
call sub_40dfa0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ esp + 0x12 ] 0x1
jmp r-xdata
mov [ esp + 0x12 ] 0x0
lea ecx [ esp + 0x18 ]
call sub_402620
cmp [ esp + 0x12 ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push eax
push ecx
push edx
call sub_453f80
lea eax [ esp + 0x28 ]
push eax
call sub_4444e4
dec [ rw-data ]
xor al al
jmp r-xdata
lea ecx [ esp + 0x698 ]
push ecx
push 0x104
call [ __import_lookup_table_0(KERNEL32:GetCurrentDirectoryW) ]
lea edx [ esp + 0x6c ]
push edx
lea eax [ esp + 0x74 ]
push eax
push 0x104
push edi
call [ __import_lookup_table_0(KERNEL32:GetFullPathNameW) ]
lea ecx [ esp + 0x28a8 ]
push ecx
lea edx [ esp + 0x2ab4 ]
push edx
lea eax [ esp + 0x498 ]
push eax
lea ecx [ esp + 0x70 ]
push ecx
lea edx [ esp + 0x80 ]
push edx
call sub_413db0
add esp 0x14
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x284 ]
push ecx
call sub_411691
lea edx [ esp + 0x498 ]
push edx
lea eax [ esp + 0x28c ]
push eax
call sub_411663
add esp 0x10
lea ecx [ esp + 0x280 ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
xor ebx ebx
jmp r-xdata
xor edx edx
lea esi [ esp + 0x40 ]
mov [ esp + 0x8a8 ] dx
call sub_403770
mov al [ esp + 0x54 ]
test al 0x3
jne r-xdata
lea esi [ esp + 0x28 ]
call sub_40d900
lea edx [ esp + 0x698 ]
push edx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
call [ SetCurrentDirectoryW@IAT ]
call sub_40d900
lea ecx [ esp + 0x40 ]
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
call sub_402620
call sub_40d900
mov eax [ esp + 0x2c ]
push eax
call sub_4112ef
mov al [ esp + 0x14 ]
add esp 0x4
dec [ rw-data ]
lea ecx [ esp + 0x40 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_45f05d
xor ebx ebx
jmp r-xdata
test al 0x4
jne r-xdata
test al al
je r-xdata
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_467f38
xor ebx ebx
jmp r-xdata
xor ebx ebx
push 0x10
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] 0x10
call sub_41171a
add esp 0x4
push 0x4
mov [ esp + 0x1c ] eax
mov [ eax ] bl
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ esp + 0x44 ]
cmp eax 0xffe
ja r-xdata
mov [ esp + 0x24 ] ebx
jmp r-xdata
mov [ eax ] 0x1
mov [ esp + 0x24 ] eax
lea esi [ eax - 0xffe ]
lea eax [ esp + 0x40 ]
call sub_402ae0
mov eax [ esp + 0x44 ]
sub eax esi
lea ecx [ eax + eax - 0x1ffa ]
mov eax [ esp + 0x40 ]
push ecx
lea edx [ eax + esi * 2 + 0x1ffc ]
push edx
add eax 0x1ffc
push eax
call sub_410f70
add esp 0xc
sub [ esp + 0x44 ] esi
jmp r-xdata
mov eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x8ac ]
push ecx
call sub_411691
inc [ esp + 0x1c ]
add esp 0x8
xor esi esi
xor edi edi
lea edi [ esp + 0x18 ]
lea eax [ esp + 0x28 ]
call sub_403bd0
test al al
je r-xdata
lea esi [ esp + 0x18 ]
call sub_401330
xor al al
jmp r-xdata
lea edx [ esp + 0x40 ]
push edx
mov eax edi
call sub_403f40
mov esi [ esp + 0x24 ]
add [ esi ] 0xffffffff
jne r-xdata
cmp [ esp + esi * 2 + 0x8a8 ] 0x0
je r-xdata
push ebx
call sub_4134c6
add esp 0x4
test eax eax
jne r-xdata
mov al 0x1
mov eax [ esp + 0x18 ]
push eax
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor eax eax
mov [ esp + edi * 2 + 0x8a8 ] ax
lea eax [ esp + 0x8a8 ]
call sub_403dd0
lea ecx [ esp + 0x8a8 ]
push ecx
test al al
je r-xdata
jmp r-xdata
inc esi
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push r--data
push edx
push eax
push ecx
call sub_453f80
mov [ esp + 0x10 ] 0x0
call sub_4112d5
add esp 0x4
test eax eax
je r-xdata
mov dx [ esp + esi * 2 + 0x8a8 ]
mov [ esp + edi * 2 + 0x8a8 ] dx
inc esi
inc edi
cmp [ esp + esi * 2 + 0x8a8 ] 0x0
jne r-xdata
movzx ebx [ esp + esi * 2 + 0x8a8 ]
push ebx
call sub_4134ef
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x8a8 ]
push eax
xor bl bl
call sub_4112d5
add esp 0x4
cmp eax 0x2
jle r-xdata
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
cmp [ esp + 0x11 ] 0x1
je r-xdata
mov esi eax
mov cx [ esp + esi * 2 + 0x8a4 ]
and cx 0x7f
movzx edx cx
push edx
call sub_4134c6
add esp 0x4
test eax eax
jne r-xdata
xor edx edx
mov [ esp + esi * 2 + 0x8aa ] dx
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ esp + 0x8a8 ]
push ecx
push edx
call sub_437afe
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x78 ]
push edx
lea eax [ esp + 0x8b4 ]
push eax
mov ecx esi
call sub_403e50
cmp eax 0x3
jne r-xdata
cmp [ esp + esi * 2 + 0x8a6 ] 0x5f
jne r-xdata
movzx edi [ esp + esi * 2 + 0x8a8 ]
push edi
call sub_4134ef
add esp 0x4
test eax eax
je r-xdata
cmp bl 0x1
je r-xdata
sub eax 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x8ac ]
push edx
push eax
call sub_403e90
jmp r-xdata
push edi
call sub_4134c6
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + 0x11 ] 0x1
jmp r-xdata
mov [ esp + 0x11 ] 0x0
mov [ esp + 0x10 ] 0x0
jmp r-xdata
sub eax 0x2
je r-xdata
lea esi [ esp + esi * 2 + 0x8a6 ]
xor eax eax
mov [ esi ] ax
mov bl 0x1
jmp r-xdata
sub esi 0x1
jns r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
mov bl [ esp + 0x13 ]
jmp r-xdata
sub eax 0x2
jne r-xdata
jmp r-xdata
cmp bl 0x1
jne r-xdata
mov [ esp + 0x13 ] al
jmp r-xdata
sub_403bd0
sub esp 0x10
push ebx
push ebp
push esi
mov esi eax
mov eax [ edi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push edi
call sub_437bb9
push 0x10
mov [ edi + 0x8 ] 0x10
call sub_41171a
add esp 0x4
mov [ edi ] eax
jmp r-xdata
mov eax [ edi ]
xor ebx ebx
mov [ edi + 0x4 ] ebx
mov [ eax ] bl
mov [ esp + 0xd ] bl
push esi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_444309
jmp r-xdata
xor ebp ebp
lea esp [ esp ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push ebx
lea edx [ esp + 0x14 ]
push edx
push 0x10000
push eax
push ecx
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ esi + 0x4 ]
mov cl [ eax + edx ]
mov [ esp + ebp + 0xc ] cl
inc ebp
inc eax
mov [ esi + 0xc ] eax
cmp ebp 0x1
jb r-xdata
add [ esi + 0x10 ] ebp
adc [ esi + 0x14 ] ebx
cmp ebp ebx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x8 ]
je r-xdata
cmp [ esp + 0xd ] 0x0
jne r-xdata
mov bl [ esp + 0xc ]
cmp bl 0xd
je r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
jmp r-xdata
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x10
retn
pop esi
pop ebp
xor al al
pop ebx
add esp 0x10
retn
lea eax [ esp + 0xc ]
push eax
mov ebx 0x1
call sub_403d40
test eax eax
je r-xdata
cmp bl 0xa
je r-xdata
cmp [ esp + 0xc ] 0xa
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x1
mov [ esp + 0xd ] 0x1
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
call sub_40e0d0
jmp r-xdata
dec [ eax ]
push edi
call sub_437bb9
mov edx [ edi + 0x4 ]
add edx 0x2
push edx
call sub_44530d
push eax
mov [ edi + 0x8 ] eax
call sub_41171a
mov ecx [ edi ]
mov ebp eax
mov eax [ edi + 0x4 ]
inc eax
push eax
push ecx
push ebp
call sub_410f70
jmp r-xdata
mov eax [ edi + 0x4 ]
add eax 0x2
cmp [ edi + 0x8 ] eax
jb r-xdata
add esp 0x10
cmp eax 0x41c2
jae r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax + ecx ] bl
inc [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov [ eax + edx ] 0x0
xor ebx ebx
jmp r-xdata
cmp eax 0x2000000
jae r-xdata
lea edx [ eax + eax ]
cmp [ esi + 0x8 ] ebx
je r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
test eax eax
jge r-xdata
mov eax 0x10
jmp r-xdata
add eax 0xf
shr eax 0x4
shl eax 0x4
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
test eax eax
jge r-xdata
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
test eax eax
jge r-xdata
fmul [ r--data ]
fnstcw [ esp + 0xe ]
movzx eax [ esp + 0xe ]
or eax 0xc00
mov [ esp + 0x14 ] eax
fldcw [ esp + 0x14 ]
fistp [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov [ edi + 0x8 ] eax
fldcw [ esp + 0xe ]
jmp r-xdata
fadd [ r--data ]
push eax
mov [ edi + 0x8 ] eax
call sub_41171a
mov ebp eax
mov eax [ edi ]
add esp 0x4
test eax eax
je r-xdata
mov [ edi ] ebp
jmp r-xdata
mov ecx [ edi + 0x4 ]
inc ecx
push ecx
push eax
push ebp
call sub_410f70
mov edx [ edi ]
push edx
call sub_4112ef
fmul [ r--data ]
fnstcw [ esp + 0xe ]
movzx eax [ esp + 0xe ]
or eax 0xc00
mov [ esp + 0x14 ] eax
fldcw [ esp + 0x14 ]
fistp [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
fldcw [ esp + 0xe ]
jmp r-xdata
fadd [ r--data ]
fmul [ r--data ]
fnstcw [ esp + 0xe ]
movzx eax [ esp + 0xe ]
or eax 0xc00
mov [ esp + 0x14 ] eax
fldcw [ esp + 0x14 ]
fistp [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov [ edi + 0x8 ] ecx
fldcw [ esp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi + 0x8 ] edx
sub_403d40
cmp [ esi + 0x8 ] 0x0
push ebp
mov ebp [ esp + 0x8 ]
push edi
je r-xdata
push esi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_40e190
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
jmp r-xdata
xor edi edi
test ebx ebx
jbe r-xdata
add [ esi + 0x10 ] edi
mov eax edi
pop edi
adc [ esi + 0x14 ] 0x0
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x10000
push edx
push eax
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
mov al [ ecx + edx ]
mov [ edi + ebp ] al
inc [ esi + 0xc ]
inc edi
cmp edi ebx
jb r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x0
jmp r-xdata
sub_403dd0
push esi
mov esi eax
test esi esi
je r-xdata
xor al al
pop esi
retn
push edi
xor edi edi
cmp [ esi ] 0x23
je r-xdata
push 0x8
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edi 0x3
add esi 0x2
jmp r-xdata
test edi edi
jne r-xdata
mov edi edi
cmp edi 0x3
je r-xdata
pop edi
mov al 0x1
pop esi
retn
cmp eax 0x22
je r-xdata
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
retn
cmp edi 0x2
jne r-xdata
cmp eax 0x27
je r-xdata
movzx eax [ esi ]
cmp eax 0x3b
jle r-xdata
test edi edi
jne r-xdata
xor edi edi
jmp r-xdata
cmp edi 0x1
jne r-xdata
cmp eax 0x3b
jne r-xdata
mov edi 0x2
jmp r-xdata
test edi edi
jne r-xdata
xor edi edi
jmp r-xdata
test edi edi
jne r-xdata
mov edi 0x1
jmp r-xdata
cmp edi 0x3
je r-xdata
xor eax eax
mov [ esi ] ax
pop edi
mov al 0x1
pop esi
retn
jmp r-xdata
sub_403e50
mov eax 0x2004
call sub_425210
push ebx
push ebp
push esi
mov esi [ esp + 0x2014 ]
cmp [ esi ] 0x23
push edi
je r-xdata
push 0xb
push r--data
push esi
mov ebx ecx
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x3
push 0xd
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx ] 0x1
push 0xd
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x1 ] 0x1
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2004
retn 0x10
push 0x16
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x2 ] 0x1
mov eax 0x1
jmp r-xdata
push 0xd
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
lea edi [ esi + 0x2c ]
call sub_40fff0
mov esi eax
push esi
call sub_4450b6
push esi
call sub_445111
push esi
call sub_4112d5
dec eax
add esp 0x4
cmp [ esi + eax * 2 ] 0x22
jne r-xdata
push 0x8
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebx + 0x20 ] eax
jbe r-xdata
push esi
xor ecx ecx
lea edi [ esi + 0x2 ]
push edi
mov [ esi + eax * 2 ] cx
call sub_4450b6
push edi
call sub_445111
push edi
jmp r-xdata
push 0xf
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esi + 0x10 ]
push ecx
push ebx
call sub_445153
mov edx [ esp + 0x2020 ]
mov ecx [ esp + 0x201c ]
cmp al 0x1
mov eax [ edx ]
jne r-xdata
mov eax 0x1
jmp r-xdata
xor esi esi
mov ebx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
mov ecx ebx
call eax
push esi
call sub_4112ef
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edi [ esp + 0x2020 ]
mov ebp 0x1
push 0x3
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
push esi
push r--data
push eax
push ecx
push ebx
call sub_453f80
xor eax eax
jmp r-xdata
push eax
push esi
push ecx
lea edx [ esp + 0x1c ]
call sub_410020
push eax
lea edx [ esp + 0x20 ]
push edx
push ebx
call sub_4037e0
xor ecx ecx
test al al
setne cl
mov eax ecx
jmp r-xdata
mov ecx [ ebx + 0x2c ]
mov edx [ ecx + esi * 4 ]
xor eax eax
cmp [ edx ] 0x1
setle al
dec eax
and eax 0x3
inc eax
jmp r-xdata
inc esi
cmp esi [ ebx + 0x20 ]
jb r-xdata
test ebp ebp
jle r-xdata
inc [ edi ]
push esi
call sub_445111
push esi
call sub_4450b6
push 0xf
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebx + 0x1c ]
mov eax [ ecx + esi * 4 ]
mov edx [ esp + 0x201c ]
mov eax [ eax ]
push edx
push eax
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx [ esp + 0x201c ]
push esi
push r--data
push eax
push ecx
push ebx
call sub_453f80
xor eax eax
jmp r-xdata
inc ebp
jmp r-xdata
push 0x3
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x2024 ]
push esi
push edx
call sub_46e5f5
test al al
je r-xdata
push 0xd
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
je r-xdata
dec ebp
test ebp ebp
jg r-xdata
push 0x3
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
sub_403e90
cmp [ esi + 0x8 ] 0x0
push ebp
mov ebp [ esp + 0xc ]
push edi
je r-xdata
push 0x10
call sub_41171a
add esp 0x4
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0xc ]
push ebp
mov [ edx + 0xc ] 0x0
call sub_4112d5
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
push ebp
push edi
call sub_411691
mov eax [ esi + 0xc ]
mov edx [ esp + 0x1c ]
mov [ eax ] edi
mov ecx [ esi + 0xc ]
mov [ ecx + 0x4 ] edx
mov eax [ esi + 0xc ]
mov ecx [ esp + 0x24 ]
add esp 0x10
pop edi
mov [ eax + 0x8 ] ecx
inc [ esi + 0x10 ]
pop ebp
retn 0xc
push eax
call sub_4112ef
add esp 0x4
dec [ esi + 0x10 ]
jmp r-xdata
push 0x10
call sub_41171a
mov ecx [ esi + 0xc ]
mov [ ecx + 0xc ] eax
add esp 0x4
mov [ esi + 0xc ] eax
sub_403f40
push esi
push edi
push 0x0
mov esi eax
mov edi [ esi + 0x4 ]
mov eax [ esi ]
push 0x0
inc edi
push edi
push eax
push 0x1
push 0x0
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
test eax eax
je r-xdata
mov esi [ esp + 0xc ]
call sub_403770
pop edi
pop esi
retn 0x4
push ebx
xor ecx ecx
push ebp
mov ebp eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi [ esi ]
add esp 0x4
push ebp
mov ebx eax
push ebx
push edi
push esi
push 0x1
push 0x0
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov ecx [ esp + 0x14 ]
push 0x0
dec eax
push ebx
call sub_403fb0
push ebx
call sub_4112ef
add esp 0x4
pop ebp
pop ebx
pop edi
pop esi
retn 0x4
sub_403fb0
push ebp
push esi
push edi
mov edi eax
mov esi ecx
test edi edi
je r-xdata
or eax 0xffffffff
xor edi edi
call sub_40c740
pop edi
pop esi
pop ebp
retn 0x8
cmp edi 0xffffffff
je r-xdata
mov ebp [ esp + 0x10 ]
test ebp ebp
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
call sub_4013e0
lea eax [ edi + 0x1 ]
push eax
call sub_446547
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
call sub_404020
mov eax [ esp + 0x14 ]
mov edx [ esi ]
mov [ esi + 0x4 ] edi
add edi edi
push edi
lea ecx [ ebp + eax * 2 ]
push ecx
push edx
call sub_410f70
mov eax [ esi ]
add esp 0xc
xor ecx ecx
mov [ edi + eax ] cx
pop edi
pop esi
pop ebp
retn 0x8
sub_404020
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
test eax eax
je r-xdata
retn
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
xor ecx ecx
mov [ esi ] eax
add esp 0x4
mov [ eax + edi * 2 ] cx
retn
push eax
call sub_4112ef
add esp 0x4
sub_404080
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov ebx [ ebx + 0xc ]
mov [ esi + 0xc ] ebx
inc [ ebx ]
pop esi
pop ebx
retn
push edi
mov edi [ ebx + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_404020
mov eax [ esi + 0x4 ]
mov edx [ ebx ]
lea ecx [ eax + eax + 0x2 ]
mov eax [ esi ]
push ecx
push edx
push eax
call sub_410f70
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_4040e0
push esi
mov esi eax
add esi 0x4
mov eax esi
call sub_404110
mov ecx [ esp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax esi
call sub_404110
mov dl [ esp + 0xc ]
mov [ eax + 0x18 ] dl
pop esi
retn 0x8
sub_404120
push esi
push edi
mov edi eax
add edi 0x4
mov eax edi
call sub_404110
mov esi eax
add esi 0x20
call sub_4092c0
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax edi
mov [ esi + 0x8 ] 0x1
call sub_404110
mov cl [ esp + 0x10 ]
pop edi
mov [ eax + 0x30 ] cl
pop esi
retn 0x8
sub_404160
push ebx
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi ecx
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
add eax edi
call sub_4040e0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x0
add eax edi
call sub_404120
mov edx [ esp + 0x10 ]
push edx
lea eax [ edi + 0x47c ]
push eax
call sub_4045e0
mov ecx [ esp + 0x14 ]
mov ebx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x14 ]
push esi
push ecx
mov ecx [ edi ]
mov ecx [ ecx + eax ]
add ecx ebx
add ecx edi
call edx
pop edi
pop esi
pop ebx
retn 0xc
sub_4041f0
cmp [ esp + 0x4 ] 0x0
push esi
mov esi eax
je r-xdata
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x0
pop esi
retn 0x4
push edi
lea eax [ esp + 0xc ]
push eax
push esi
call sub_4042f0
mov edi [ esp + 0xc ]
mov ecx edi
call sub_40c0b0
test eax eax
jl r-xdata
mov ecx [ edi + 0x18 ]
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] ecx
mov [ edi + 0x18 ] 0x0
pop edi
mov eax esi
pop esi
retn 0x4
jle r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
mov edx [ edi + 0x1c ]
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edx
mov [ edi + 0x1c ] 0x0
pop edi
mov eax esi
pop esi
retn 0x4
sub_404260
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ebx eax
push edi
push ebx
call sub_4042f0
test al al
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push 0x20
and ebp 0xff00
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov ebx [ eax + 0x14 ]
push ecx
call sub_409210
pop ebp
pop ebx
retn 0x8
xor esi esi
jmp r-xdata
mov esi eax
mov ecx esi
call sub_40c060
cmp esi ebx
je r-xdata
push 0x10
mov [ esi + 0x10 ] ebp
call sub_41171a
xor ebp ebp
add esp 0x4
cmp eax ebp
je r-xdata
mov eax ebx
mov ecx esi
call sub_404080
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x10 ]
call sub_40bd50
mov [ esi + 0x14 ] eax
mov [ esi + 0x1c ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ edi ]
push edx
mov eax esi
call sub_4041f0
pop esi
pop ebp
mov [ edi ] eax
pop ebx
retn 0x8
sub_4042f0
sub esp 0x10
push ebp
mov ebp [ esp + 0x1c ]
push esi
xor esi esi
cmp [ ebp ] esi
je r-xdata
pop esi
xor al al
pop ebp
add esp 0x10
retn 0x8
test [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x20 ]
push edi
mov [ esp + 0x28 ] 0x0
je r-xdata
or [ rw-data ] 0x1
mov ecx rw-data
call sub_40c060
push sub_429283
call sub_411421
add esp 0x4
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ esp + 0x14 ] rw-data
mov [ esp + 0x10 ] rw-data
jmp r-xdata
mov esi [ ebx + 0x4 ]
mov edi [ ebp ]
mov eax [ edi + 0x4 ]
test esi esi
je r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
cmp esi eax
jb r-xdata
mov ecx [ ebp ]
mov edx [ ecx + 0x18 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp ]
mov edx [ ecx + 0x1c ]
mov eax [ esp + 0x14 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp ]
mov edx [ rw-data ]
pop edi
mov [ ecx + 0x18 ] edx
mov eax [ ebp ]
mov ecx [ rw-data ]
pop ebx
pop esi
mov [ eax + 0x1c ] ecx
mov al [ esp + 0x1c ]
pop ebp
add esp 0x10
retn 0x8
mov edx [ eax + 0x4 ]
mov [ esp + 0x1c ] edx
cmp esi edx
ja r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jbe r-xdata
mov edx esi
test edx edx
jbe r-xdata
mov esi edx
jmp r-xdata
test esi esi
jbe r-xdata
mov edx [ eax + 0x4 ]
cmp edx esi
ja r-xdata
xor eax eax
jmp r-xdata
mov edx [ edi ]
mov ecx [ ebx ]
mov [ esp + 0x18 ] eax
mov ecx [ edi ]
mov eax [ ebx ]
jmp r-xdata
cmp esi edx
jb r-xdata
mov ecx [ eax ]
mov eax [ ebx ]
mov [ esp + 0x18 ] esi
lea esp [ esp ]
mov edx esi
mov [ esp + 0x1c ] esi
jmp r-xdata
mov [ esp + 0x1c ] edx
test eax eax
jl r-xdata
add ecx 0x2
add edx 0x2
sub [ esp + 0x18 ] 0x1
jne r-xdata
cmp ax [ edx ]
jmp r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
mov edi [ edi + 0x18 ]
mov ecx [ ebp ]
mov edx [ edi + 0x1c ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp ]
mov [ edi + 0x1c ] eax
mov [ ebp ] edi
cmp [ edi + 0x18 ] 0x0
je r-xdata
jmp r-xdata
cmp dx [ ecx ]
jae r-xdata
add eax 0x2
add ecx 0x2
sub [ esp + 0x18 ] 0x1
jne r-xdata
test edx edx
jbe r-xdata
cmp edx esi
jb r-xdata
mov ecx [ ebx ]
mov eax [ eax ]
mov [ esp + 0x18 ] edx
jmp r-xdata
jle r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
je r-xdata
xor eax eax
jmp r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
movzx eax [ eax ]
cmp ax [ ecx ]
mov ebx [ esp + 0x24 ]
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov ecx [ ebp ]
mov edx [ esp + 0x14 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp ]
mov [ esp + 0x14 ] eax
mov eax [ eax + 0x18 ]
mov [ ebp ] eax
jmp r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edx [ esp + 0x1c ]
mov edi [ edi + 0x1c ]
mov ecx [ ebp ]
mov edx [ edi + 0x18 ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp ]
mov [ edi + 0x18 ] eax
mov [ ebp ] edi
cmp [ edi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov [ esp + 0x28 ] 0x1
mov ebx [ esp + 0x24 ]
mov ecx [ ebp ]
mov edx [ esp + 0x10 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp ]
mov [ esp + 0x10 ] eax
mov eax [ eax + 0x1c ]
mov [ ebp ] eax
jmp r-xdata
cmp dx [ ecx ]
jae r-xdata
add eax 0x2
add ecx 0x2
sub [ esp + 0x18 ] 0x1
jne r-xdata
mov edx [ esp + 0x1c ]
sub_404580
push ebx
push ebp
push esi
push edi
mov edi [ ecx - 0x20 ]
sub edi 0x1
js r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
xor ebx ebx
lea ebp [ ecx - 0x20 ]
lea edi [ esi - 0x1 ]
jle r-xdata
lea eax [ edi + ebx ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
push ebp
call sub_4045e0
mov eax [ eax ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_4133e4
add esp 0x8
test eax eax
jl r-xdata
cmp ebx edi
jg r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
cmp ebx edi
jle r-xdata
sub_4045e0
mov ecx [ rw-data ]
test cl 0x1
je r-xdata
mov eax 0x1
or ecx eax
mov [ rw-data ] ecx
mov ecx sub_45a621
mov [ rw-data ] ecx
mov ecx sub_45a761
mov [ rw-data ] ecx
mov ecx r-xdata
mov [ rw-data ] ecx
mov ecx sub_45a2f5
mov [ rw-data ] ecx
push ebx
mov ecx sub_45b263
mov [ rw-data ] ecx
xor edx edx
push ebp
push esi
xor esi esi
mov ecx sub_45b236
mov [ rw-data ] ecx
mov ecx sub_45a721
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov ecx sub_4719c3
mov esi sub_45a7a1
mov ebp 0x2
push edi
mov [ rw-data ] ecx
xor edi edi
mov [ rw-data ] esi
mov ecx 0x3
mov esi sub_46500a
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ebp
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ebp
mov esi sub_45a293
mov [ rw-data ] esi
mov esi sub_45a2d3
mov [ rw-data ] esi
mov esi sub_44a6df
mov [ rw-data ] esi
mov esi sub_474d16
mov [ rw-data ] esi
mov esi sub_46a31a
mov [ rw-data ] esi
mov esi sub_46a296
mov [ rw-data ] esi
mov esi sub_46a07b
mov [ rw-data ] esi
mov esi sub_45ad10
mov [ rw-data ] esi
mov esi sub_45ac96
mov [ rw-data ] esi
mov esi sub_45acc3
mov [ rw-data ] esi
mov esi sub_45aa7f
mov ebx 0xff
mov [ rw-data ] esi
mov esi sub_45aa1d
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov esi r-xdata
mov [ rw-data ] esi
mov esi sub_45a259
mov [ rw-data ] esi
mov esi sub_44a727
mov [ rw-data ] esi
mov esi sub_47e83c
mov [ rw-data ] esi
mov esi sub_45d971
mov [ rw-data ] esi
mov esi sub_45a422
mov [ rw-data ] esi
mov esi sub_45b157
mov [ rw-data ] esi
mov esi sub_45b0ba
mov [ rw-data ] esi
mov esi r-xdata
mov [ rw-data ] esi
mov esi sub_459fff
mov [ rw-data ] esi
mov esi sub_46a49d
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] ebp
mov ebx sub_479436
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479478
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4798e3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47739a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov esi sub_46be4b
mov [ rw-data ] esi
mov ebx sub_478655
mov [ rw-data ] ebx
xor ebx ebx
mov esi sub_46be13
mov [ rw-data ] esi
mov esi sub_4797d8
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov ebx sub_4795a5
mov esi sub_478e41
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] edi
mov ebp 0x7
mov esi 0x4
mov edi 0x5
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov ebx sub_4796c2
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4793b2
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478a7c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4794ba
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4786b0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479765
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4793f4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_478747
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a6a1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b062
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c7c8
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c756
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4758b5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c3b5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c6f7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4734b7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4576a6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457644
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46df3d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457730
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45779b
mov [ rw-data ] ebx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x43
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4733ec
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_473190
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_470480
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4575ae
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4732bc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475d8b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d42b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d235
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d321
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d83d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4667a7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46674e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4666bb
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d186
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d751
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d517
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_438573
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a206
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a1bc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a165
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471b73
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_480df5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a821
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c41e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e06c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c5c5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45d070
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46cda0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466537
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x9
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c78f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c999
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466587
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4664ce
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ce6b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e115
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c8dc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46644d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475aca
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c831
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov ebx sub_45dd7c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475fe5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cb19
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46caaa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c455
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466e2a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466e11
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e226
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46e426
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cfd6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov ebx sub_45cf94
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_466df8
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45db3e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45cbcc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4663c7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45de12
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46d22f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46d244
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a481
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b397
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov ebx sub_4720ac
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c079
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c04f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c03a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c025
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c010
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bffb
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47be42
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bfd1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bfbc
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov ebx sub_47bfa7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf92
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf7d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47c064
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf68
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf53
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf3e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf29
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bf14
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bfe6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47beff
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47beea
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bec0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47bed5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47beab
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47be96
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47be81
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47be6c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47be57
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov ebx sub_45bdaa
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b8e4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b8b3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b6ef
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475472
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46600c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b52f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471f86
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46619c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4661f4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bc5e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bb5c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c082
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c0d4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bc9a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b9f4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_472000
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bb0c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46624c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b97c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b936
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bc22
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b862
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b782
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b4f6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475347
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4756ab
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_475603
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4660e9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47516b
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c126
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b65f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bf64
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45be41
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bfc7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c018
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4662ff
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c176
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bde0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45bbd6
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c1cd
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471cc5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46be83
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b3ad
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b342
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45adfd
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b3c3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46c946
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474d36
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46c880
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47505a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e21e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e397
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_476690
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_476251
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45c277
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45e300
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4763f2
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46c1ae
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471e98
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4599bd
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b032
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45afd2
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458791
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4589ba
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457614
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45aec1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45adb9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45af46
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45898a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ae91
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4580b1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ad5d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45b002
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a7e1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474827
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a520
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459c09
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459ad9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459a1c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458d1c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474910
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_44a760
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4599e3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459a55
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458a21
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471dad
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47ba63
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_479fce
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47ad92
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov ebx sub_47d5f6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464efd
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464e36
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46500a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464a0e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459e9d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459dcf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_474a24
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45754d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_462eed
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov ebx sub_464422
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457e13
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47395a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47375f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457a98
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_480d66
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_480c77
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45935e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459371
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4592ac
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ebx sub_45ad8d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a861
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46ab70
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46a98d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46a75f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46b39a
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46aeaf
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_40c7e0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46440b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4643f4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_480bc3
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_480c1d
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_464dc8
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_476e52
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471c65
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_471c25
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457df8
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_480b67
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457b9c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a661
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] edi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] 0x8
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov ebx sub_40d540
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_458ca6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459979
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_459966
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45998c
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45a4e0
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_44a7a2
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_47d874
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46def9
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ebx sub_46a351
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4574a5
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_46df1b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_45ae6e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4570e7
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_4573c4
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_469bed
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_472946
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_457234
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456de1
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x21
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov ebx sub_456e42
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456b93
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456d7e
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx r-xdata
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456cba
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456bf6
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456c59
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_456d1b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx sub_462b52
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov ebx 0x2
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov ebx sub_457436
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov ebx sub_4571db
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov edi sub_462ae6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov ebx sub_462a4f
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov ebx sub_47cbf0
mov [ rw-data ] ebx
xor ebx ebx
mov edi sub_472c98
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov ebx sub_46ddcc
mov [ rw-data ] ebx
xor ebx ebx
mov edi sub_457149
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov ebx sub_462710
mov edi sub_46252b
mov [ rw-data ] ebx
xor ebx ebx
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] 0x2
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_472af7
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi r-xdata
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4629db
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_46296a
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_457185
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45a6e1
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4588b0
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45884d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_464950
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_46483c
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov edi sub_46bd4d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46bb59
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_46bad9
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_4587c1
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4587fc
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_40ccd0
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_40d3d0
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_45657d
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_469bd8
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_469bc3
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x6
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov edi sub_456b10
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4623f6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_456ac4
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_456a76
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_456a08
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_469b10
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_4569c7
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_456988
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_44a3ff
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_462389
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
xor edi edi
mov [ rw-data ] edi
mov edi sub_469a3e
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_45691b
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_469aee
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4622f6
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_458bca
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_458e85
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4741bb
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_473f5f
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_47404b
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_474335
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4746a4
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] edi
mov edi sub_4587c1
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4587fc
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_458631
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_478018
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_478145
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477cff
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4780fc
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_476eca
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4727f8
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4775b8
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4774c8
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477459
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4777ee
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_476fa9
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_4772de
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477afe
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477b9b
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477c93
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov edi sub_477041
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
xor edi edi
mov [ rw-data ] edi
mov [ rw-data ] esi
mov edi sub_47762a
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] edi
mov esi sub_4778fc
mov [ rw-data ] esi
mov edi sub_442262
mov [ rw-data ] edi
xor edi edi
mov esi sub_477f68
mov [ rw-data ] esi
mov [ rw-data ] edi
mov esi sub_477c27
mov [ rw-data ] esi
mov edi sub_44222a
mov esi sub_47721a
mov [ rw-data ] edi
mov [ rw-data ] esi
xor edi edi
mov esi sub_480fbe
mov [ rw-data ] edi
mov [ rw-data ] esi
mov edi sub_477d69
mov esi sub_480f65
mov [ rw-data ] edi
xor edi edi
mov [ rw-data ] esi
mov esi sub_480eb3
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] 0x9
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] r--data
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] ebp
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
mov [ rw-data ] esi
mov esi sub_480f0c
mov [ rw-data ] edi
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
pop esi
pop ebp
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
pop ebx
jmp r-xdata
mov edx [ esp + 0x8 ]
test cl 0x2
je r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] 0x18c
or ecx 0x2
lea eax [ edx + edx * 8 ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x18c
lea eax [ eax * 4 + rw-data ]
retn 0x8
lea eax [ edx + edx * 8 ]
lea eax [ eax * 4 + rw-data ]
retn 0x8
sub_409030
sub esp 0x1c
mov ecx [ eax ]
push ebp
push esi
mov esi [ edx + 0x4 ]
xor ebp ebp
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x20 ] ebp
mov ecx [ esi + ecx * 4 ]
mov esi [ ecx ]
movsx ecx [ ecx + 0xa ]
push edi
mov [ esp + 0x14 ] ecx
lea ecx [ esp + 0x10 ]
push ecx
push edx
push ebx
lea edi [ esp + 0x24 ]
call sub_409110
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_410ae0
mov eax 0x1
jmp r-xdata
push esi
lea edi [ ebx + 0x47c ]
push edi
call sub_4045e0
mov edx [ esp + 0x10 ]
cmp edx [ eax + 0x18 ]
jl r-xdata
pop edi
pop esi
pop ebp
add esp 0x1c
retn 0x4
mov eax [ esp + 0x14 ]
push eax
push 0x70
push ebx
call sub_45e62e
push esi
push edi
call sub_4045e0
mov ecx [ esp + 0x10 ]
cmp ecx [ eax + 0x1c ]
jg r-xdata
mov edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x1c ]
push eax
push esi
mov ecx ebx
call sub_404160
test eax eax
jne r-xdata
mov [ esp + 0x18 ] r--data
cmp [ esp + 0x20 ] ebp
jbe r-xdata
mov edx [ esp + 0x1c ]
push edx
mov [ esp + 0x24 ] ebp
call sub_4112ef
add esp 0x4
xor eax eax
xor edi edi
mov edi edi
inc edi
cmp edi [ esp + 0x20 ]
jb r-xdata
call sub_4092c0
push esi
call sub_4112ef
add esp 0x4
mov ecx [ esp + 0x1c ]
mov esi [ ecx + edi * 4 ]
cmp esi ebp
je r-xdata
sub_409110
inc [ eax ]
mov ecx [ eax ]
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x24 ]
mov edx [ ebp + 0x4 ]
lea edx [ edx + ecx * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x8 ] 0x47
jne r-xdata
mov eax [ edx - 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x24 ]
push ecx
push 0x6f
push edx
call sub_45e62e
mov edx [ esp + 0x24 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0xc ] ecx
lea ecx [ esp + 0xc ]
push ecx
push edx
lea edx [ esp + 0x30 ]
mov esi ebp
call sub_40c2a0
test eax eax
jne r-xdata
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0xc
mov eax 0x1
jmp r-xdata
mov ebx [ esp + 0xc ]
mov ecx [ esp + 0x2c ]
mov [ ecx ] eax
cmp [ esp + 0x28 ] ebx
jae r-xdata
xor eax eax
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
mov esi edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x20 ] eax
call sub_40be00
mov ecx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov esi [ esp + 0x24 ]
push ebx
push eax
lea edx [ esp + 0x30 ]
push edx
push ebp
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x2c ]
inc [ eax ]
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
push esi
call sub_45e62e
lea ecx [ eax + 0x1 ]
cmp ecx ebx
je r-xdata
lea esi [ esp + 0x10 ]
mov [ esp + 0x28 ] ecx
call sub_4092c0
cmp [ esp + 0x28 ] ebx
jb r-xdata
xor eax eax
xor eax eax
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0xc
sub_409210
cmp ebx [ esp + 0x4 ]
je r-xdata
mov eax ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ebx
call sub_4092c0
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ edi ]
mov [ ebx ] edx
pop edi
pop esi
jmp [ eax * 4 + r-xdata ]
fld [ edi ]
pop edi
fstp [ ebx ]
pop esi
mov eax ebx
retn 0x4
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebx ] eax
mov ecx [ edi + 0x4 ]
mov [ ebx + 0x4 ] ecx
jmp r-xdata
mov eax [ edi ]
mov [ ebx ] eax
jmp r-xdata
mov ecx [ edi ]
mov [ ebx ] ecx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov al [ edi ]
mov [ ebx ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop edi
mov [ ebx + 0xc ] eax
pop esi
mov eax ebx
retn 0x4
mov edi [ edi + 0xc ]
mov edx [ edi ]
mov [ eax ] edx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edi [ edi + 0xc ]
mov [ eax + 0xc ] edi
inc [ edi ]
pop edi
mov [ ebx + 0xc ] eax
pop esi
mov eax ebx
retn 0x4
xor eax eax
mov esi [ edi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ ebx ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax ]
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410f70
add esp 0x10
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
sub_4092c0
push edi
mov edi [ esi + 0xc ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
pop edi
cmp eax 0x8
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
push edx
call sub_4112ef
add esp 0x8
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ esi ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
retn
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esi ]
push eax
call sub_4112ef
add esp 0x8
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_409340
sub esp 0x28
push ebx
push ebp
push esi
push edi
mov edi eax
mov eax [ edi + 0x4 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
mov ecx [ eax ]
mov eax [ ecx ]
mov edx [ eax ]
mov ebp [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x18 ] edx
mov edx [ eax + 0x8 ]
inc [ ebp ]
inc [ esp + 0x10 ]
xor esi esi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ebp
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push rw-data
mov [ esp + 0x20 ] esi
call sub_435959
push eax
call sub_453155
mov esi [ esp + 0x14 ]
cmp eax ebx
jne r-xdata
push rw-data
lea edx [ esp + 0x1c ]
push edx
call sub_4042f0
test al al
je r-xdata
mov [ esp + 0x14 ] eax
cmp eax ebx
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
test esi 0x100
jne r-xdata
mov esi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
and esi 0xff00
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx esi [ eax + 0x8 ]
cmp esi 0x41
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x3c ]
push edx
push 0xa3
push eax
call sub_45e62e
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
mov esi [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov esi [ esi + ecx * 4 ]
cmp [ esi + 0x8 ] 0x4e
je r-xdata
cmp esi 0x52
je r-xdata
push 0xffffffff
lea edx [ esp + 0x2c ]
push edx
inc ecx
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x48 ]
push edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] 0x1
mov [ esp + 0x44 ] ebx
call sub_40ab50
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
cmp [ eax + 0x8 ] 0x5
jne r-xdata
mov edx eax
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
mov edi [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov eax [ edi + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ esi + 0xa ]
mov ecx [ esp + 0x3c ]
push eax
push 0x7c
push ecx
call sub_45e62e
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
mov edx [ esp + 0x3c ]
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push edx
lea eax [ esp + 0x1c ]
mov ecx edi
call sub_40c620
test eax eax
je r-xdata
cmp [ edx + 0x8 ] 0x8
je r-xdata
cmp [ edx + 0x8 ] 0x8
je r-xdata
cmp esi 0x53
je r-xdata
movsx edx [ eax + 0xa ]
mov eax [ esp + 0x3c ]
push edx
push 0x72
push eax
call sub_45e62e
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
cmp ax 0x35
je r-xdata
mov esi [ esp + 0x3c ]
push 0x1
push r--data
push ebx
push 0xa9
push esi
call sub_4781ae
test eax eax
je r-xdata
cmp esi 0x54
je r-xdata
mov eax [ esp + 0x3c ]
cmp [ eax + 0xff ] bl
jne r-xdata
cmp esi 0x41
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x35
je r-xdata
mov esi [ esp + 0x3c ]
push edx
lea edx [ esp + 0x14 ]
push edx
push edi
push esi
call sub_47f2b4
test eax eax
je r-xdata
cmp ax 0x47
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xa9
push esi
call sub_45e62e
cmp esi 0x55
je r-xdata
mov ecx [ edi ]
movsx edx [ ecx + 0xa ]
push edx
push 0x79
push eax
call sub_45e62e
lea esi [ esp + 0x28 ]
call sub_4092c0
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
cmp esi 0x41
jne r-xdata
add esi 0xffffffae
cmp esi 0x4
ja r-xdata
lea eax [ esp + 0x28 ]
push eax
mov ebx ecx
call sub_409210
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xaa
push esi
call sub_45e62e
cmp esi 0x56
je r-xdata
push ebx
cmp [ rw-data ] ebx
jne r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
add [ ebp ] 0xffffffff
je r-xdata
jmp [ esi * 4 + jump_table_409524 ]
mov ecx [ esp + 0x18 ]
push ecx
jmp r-xdata
lea edx [ esp + 0x2c ]
push edx
push rw-data
call sub_435959
mov edi eax
jmp r-xdata
lea ecx [ esp + 0x2c ]
push ecx
mov edi rw-data
lea eax [ esp + 0x28 ]
call sub_40b910
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push ecx
call sub_452bfe
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
mov eax ecx
call sub_40bee0
jmp r-xdata
lea eax [ esp + 0x28 ]
mov esi ecx
call sub_40bf70
jmp r-xdata
mov esi [ esp + 0x14 ]
lea edi [ esp + 0x28 ]
call sub_40c110
jmp r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ esp + 0x3c ]
push eax
push 0x80
push ecx
call sub_45e62e
lea ecx [ esp + 0x18 ]
call sub_402620
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_404260
lea esi [ esp + 0x28 ]
call sub_4092c0
add [ ebp ] 0xffffffff
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
jmp r-xdata
call sub_4112ef
add esp 0x4
push ebp
call sub_4112ef
add esp 0x4
jmp r-xdata
sub_409540
sub esp 0x68
cmp [ rw-data ] 0x0
push ebx
push ebp
push esi
push edi
jne r-xdata
mov esi [ esp + 0x7c ]
mov ebx 0x1
cmp [ esi + 0x480 ] bl
je r-xdata
xor al al
lea ecx [ esp + 0x68 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] 0x0
call sub_40c060
mov ebp [ InterlockedIncrement@IAT ]
push rw-data
call ebp
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ebp [ rw-data ]
cmp [ rw-data ] ebp
je r-xdata
mov edi 0x2
push rw-data
call [ InterlockedDecrement@IAT ]
lea ecx [ esp + 0x68 ]
call sub_402620
lea esi [ esp + 0x38 ]
call sub_4092c0
lea ecx [ esp + 0x48 ]
call sub_410ae0
jmp r-xdata
and ebp 0x3f
shl ebp 0x4
lea ebp [ ebp + rw-data ]
push ebp
call sub_434f57
test al al
jne r-xdata
cmp eax ebx
je r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
push 0xa
call [ Sleep@IAT ]
push rw-data
call ebp
mov eax [ rw-data ]
sub edi ebx
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ eax ]
push eax
lea ebx [ esp + 0x3c ]
call sub_409210
mov ecx [ ebp + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x6c ]
call sub_4021e0
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_453081
mov edi eax
lea eax [ esp + 0x68 ]
call sub_40d330
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x70 ]
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push ecx
push esi
call sub_4646a2
test al al
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
mov ebx 0x3
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push eax
call sub_453081
push eax
push esi
call sub_4646a2
test al al
jne r-xdata
mov [ esi + 0x480 ] 0x1
mov edi r--data
lea esi [ esp + 0x58 ]
call sub_401b70
lea ecx [ esp + 0x38 ]
push ecx
call sub_4355fd
mov edx eax
mov eax 0x2
lea ecx [ eax - 0x1 ]
call sub_4019e0
mov ecx esi
call sub_402620
mov eax [ esp + 0x1c ]
call sub_40f2a0
cmp [ esp + 0x18 ] 0x0
mov esi eax
mov [ esp + 0x14 ] esi
jle r-xdata
mov ebx 0x2
mov eax [ rw-data ]
and eax 0x3f
shl eax 0x4
add eax rw-data
push eax
call sub_46e6b0
inc [ rw-data ]
mov edx [ rw-data ]
and edx 0x3f
shl edx 0x4
add edx rw-data
push edx
call sub_46e6b0
mov edi 0x1
add [ rw-data ] edi
push rw-data
call [ InterlockedDecrement@IAT ]
mov eax [ esp + 0x1c ]
push eax
call sub_46e779
cmp [ esp + 0x18 ] edi
jl r-xdata
mov edi 0x3
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x7c ]
push 0x0
push 0x0
inc eax
push eax
push ebx
call sub_47cb23
push rw-data
call sub_46e727
mov edi r--data
lea esi [ esp + 0x58 ]
call sub_401b70
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x80 ]
push edx
mov ecx 0x2
call sub_40c3e0
mov ecx esi
call sub_402620
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x4c ]
mov ebx edi
lea ebp [ edi + 0xb ]
mov [ esp + 0x10 ] 0x18
mov [ esp + 0x24 ] ecx
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jae r-xdata
mov [ ebx + 0x480 ] 0x0
mov eax [ esp + 0x7c ]
push eax
call sub_43550e
test al al
jne r-xdata
cmp ebx [ esp + 0x20 ]
jle r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + edi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x68
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + ebp ]
mov edx [ esp + 0x24 ]
mov edx [ edx ]
mov esi [ esi ]
mov eax edi
xor ecx ecx
call sub_4019e0
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x36 ] ax
mov eax [ esi + 0x4 ]
mov [ esp + 0x58 ] r--data
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x64 ] 0x0
mov ecx [ eax + ebp + 0x4 ]
or edx 0xffffffff
cmp [ ecx + 0x8 ] 0x41
mov [ esp + 0x34 ] dx
jne r-xdata
mov edx [ esi + edi * 4 + 0x4 ]
inc edi
cmp [ edx + 0x8 ] 0x41
jne r-xdata
cmp [ eax ] 0x1e
jne r-xdata
jmp r-xdata
mov eax 0x8
mov edx [ eax + ebp + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
lea esi [ esp + 0x38 ]
call sub_4092c0
mov [ esp + 0x40 ] edi
mov [ esp + 0x38 ] 0x0
mov eax [ eax + ebp + 0x8 ]
movzx ecx [ eax + 0x8 ]
cmp cx 0x4a
je r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ eax + ebx * 4 ]
push eax
lea esi [ esp + 0x4c ]
call sub_40be00
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
jl r-xdata
add edi 0x2
mov ecx [ esp + 0x7c ]
push 0xffffffff
push 0x91
push ecx
call sub_45e62e
jmp r-xdata
mov eax [ esi + edi * 4 + 0x4 ]
inc edi
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x2d ] 0x0
add [ esp + 0x24 ] 0x4
mov esi [ esp + 0x14 ]
mov eax 0x14
jmp r-xdata
cmp ax 0x49
je r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebp + 0x4 ]
cmp [ ecx + 0x8 ] 0x41
jne r-xdata
push eax
lea edi [ esp + 0x5c ]
call sub_402cc0
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax + edx ]
push ecx
cmp cx 0x49
je r-xdata
inc ebx
inc edi
lea ecx [ esp + 0x68 ]
call sub_402620
lea esi [ esp + 0x38 ]
call sub_4092c0
lea ecx [ esp + 0x48 ]
call sub_410ae0
mov al 0x1
jmp r-xdata
add [ esp + 0x10 ] eax
add ebx edi
add ebp eax
cmp ebx [ esp + 0x18 ]
jle r-xdata
mov eax 0x10
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + ebp ]
mov esi [ esi ]
mov eax edi
xor ecx ecx
lea edx [ esp + 0x38 ]
call sub_4019e0
lea edx [ esp + 0x2c ]
push edx
call sub_44b453
lea ecx [ esp + 0x58 ]
call sub_40ed60
jmp r-xdata
push eax
jmp r-xdata
lea edi [ esp + 0x5c ]
call sub_402cc0
mov edi 0x7f
lea esi [ esp + 0x2c ]
call sub_402b00
push esi
lea edi [ esp + 0x5c ]
call sub_402cc0
push 0xffffffff
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x88 ]
push edi
call sub_40ab50
mov edi 0x1
jmp r-xdata
sub_409560
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14c
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0xec ]
cmp eax 0xf3c
jge r-xdata
push 0xffffffff
push 0x9a
push edi
mov [ rw-data ] 0x0
call sub_45e62e
mov eax 0x1
jmp r-xdata
inc eax
mov [ esp + 0x18 ] edi
mov [ edi + 0xec ] eax
cmp eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi edi
call sub_410790
jmp r-xdata
cmp [ edi + 0xfc ] 0x0
mov [ edi + 0x144 ] 0x0
jne r-xdata
mov eax [ edi + 0xec ]
mov [ edi + 0x144 ] 0x0
cmp eax 0x1
je r-xdata
lea ebx [ ebx ]
mov esi edi
call sub_40f060
cmp [ edi + 0xfc ] 0x1
je r-xdata
dec eax
mov [ edi + 0xec ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
push edi
call sub_401aa0
push 0x0
call [ __import_lookup_table_10(USER32:LockWindowUpdate) ]
mov edx [ rw-data ]
push edx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov esi [ __import_lookup_table_10(USER32:GetMessageW) ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x148 ]
push eax
call esi
test eax eax
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ eax ]
call sub_434f0d
mov eax [ edi + 0x1b0 ]
xor esi esi
test eax eax
jbe r-xdata
cmp [ rw-data ] 0x1
je r-xdata
cmp [ edi + 0xf8 ] 0x0
je r-xdata
mov esi [ PeekMessageW@IAT ]
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x6c ]
push eax
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x13c ]
push ecx
call [ TranslateMessage@IAT ]
lea edx [ esp + 0x13c ]
push edx
call [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x148 ]
push eax
call esi
test eax eax
jg r-xdata
cmp esi eax
je r-xdata
mov ecx [ edi + 0x1ac ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ edi + 0x460 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ esp + 0x60 ] 0x12
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
lea eax [ esp + 0xd4 ]
push eax
lea ecx [ esp + 0xe0 ]
push ecx
mov ecx [ edi + 0x1ac ]
lea edx [ esp + 0x100 ]
push edx
mov edx [ ecx + esi * 4 ]
lea eax [ esp + 0x64 ]
push eax
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
push ecx
push edi
call sub_4646a2
mov edx [ edi + 0x1ac ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov ebx [ esp + 0x58 ]
add ecx 0x18
inc ebx
push ecx
lea esi [ edi + 0x14c ]
mov [ esp + 0x5c ] ebx
call sub_40df50
push 0x0
push 0x1
push ebx
push edi
call sub_47cb23
jmp r-xdata
inc esi
add ecx 0x4
cmp esi [ edi + 0x1b0 ]
jb r-xdata
mov edx [ edx ]
cmp [ edx ] ebx
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ edi + 0xfc ] 0x1
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x5c ]
push ecx
mov ecx rw-data
call sub_40d280
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
cmp [ edi + 0xf8 ] 0x1
je r-xdata
cmp [ edi + 0xfc ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
mov [ rw-data ] 0x1
call [ timeGetTime@IAT ]
mov esi [ edi + 0x458 ]
mov ebx eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] esi
cmp [ edi + 0x464 ] 0x1
je r-xdata
push edi
call sub_409540
cmp al 0x1
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x6c ]
push edx
call esi
test eax eax
je r-xdata
lea edx [ esp + 0x5c ]
push edx
mov ebx rw-data
call sub_40d2a0
test eax eax
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
add eax edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x34 ] 0x0
call sub_40d590
cmp [ edi + 0x144 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ edi + 0x458 ]
mov [ esp + 0x10 ] edx
mov ecx [ esi ]
cmp [ ecx + 0x11 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ esp + 0x5c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ esp + 0x5c ]
push ecx
call [ DispatchMessageW@IAT ]
cmp [ esp + 0x14 ] 0x0
mov [ rw-data ] 0x0
jg r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
cmp [ edx + 0x11 ] 0x0
jne r-xdata
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_440eac
mov esi [ esp + 0x10 ]
jmp r-xdata
mov edx [ ecx + 0x14 ]
mov eax ebx
sub eax edx
cmp ebx edx
jae r-xdata
lea eax [ esp + 0x5c ]
push eax
call sub_447e59
cmp [ edi + 0x465 ] 0x1
je r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x7
je r-xdata
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
lea eax [ edi + 0x458 ]
push eax
call sub_451e63
jmp r-xdata
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_440eac
jmp r-xdata
push ecx
lea edx [ esp + 0x14 ]
mov [ esp ] 0x0
push edx
call sub_442fdf
test al al
je r-xdata
cmp eax [ ecx + 0x18 ]
jb r-xdata
dec eax
lea ecx [ esp + 0x60 ]
call sub_402620
jmp r-xdata
lea edx [ esp + 0x60 ]
push edx
call sub_437bfd
test al al
jne r-xdata
lea eax [ esp + 0x5c ]
push eax
call sub_447e59
mov ecx [ edi + 0x450 ]
push 0xa
push ecx
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
mov [ esp + 0x50 ] eax
cmp eax 0x102
je r-xdata
cmp eax 0x8
je r-xdata
push ecx
lea eax [ esp + 0x14 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
inc [ esp + 0x14 ]
mov [ ecx + 0x14 ] ebx
lea eax [ esp + 0xec ]
push eax
lea ecx [ esp + 0xd4 ]
push ecx
mov ecx [ esi ]
lea edx [ esp + 0xd4 ]
push edx
mov edx [ ecx ]
lea eax [ esp + 0x58 ]
push eax
push edx
push edi
call sub_4646a2
mov eax [ esp + 0x4c ]
mov ecx [ esi ]
push 0x0
inc eax
push 0x1
push eax
push edi
mov [ esp + 0x5c ] eax
mov [ ecx + 0x10 ] 0x1
call sub_47cb23
mov edx [ esi ]
mov [ edx + 0x10 ] 0x0
lea ecx [ esp + 0x5c ]
push ecx
push rw-data
call sub_451a2f
test al al
je r-xdata
lea eax [ esp + 0xf4 ]
push eax
lea ecx [ esp + 0xe8 ]
push ecx
mov ecx [ esp + 0x68 ]
lea edx [ esp + 0xe0 ]
push edx
lea eax [ esp + 0x98 ]
push eax
push ecx
push edi
call sub_4646a2
test al al
je r-xdata
lea ecx [ esp + 0x60 ]
call sub_402620
jmp r-xdata
lea edx [ esp + 0x60 ]
push edx
call sub_437bfd
test al al
jne r-xdata
mov eax [ edi + 0x450 ]
lea edx [ esp + 0x50 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov ecx [ edi + 0x450 ]
push ecx
call [ CloseHandle@IAT ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x50 ]
add eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edx
call sub_40d590
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
jmp r-xdata
mov esi [ Sleep@IAT ]
push 0xa
call esi
xor ebx ebx
cmp [ edi + 0x448 ] ebx
je r-xdata
cmp eax 0x9
je r-xdata
xor eax eax
mov ebx 0x1
lea esi [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] eax
call sub_4092c0
mov edx [ esp + 0x5c ]
mov edi r--data
lea esi [ esp + 0xfc ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x20 ] edx
call sub_401b70
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x20 ]
call sub_4019e0
mov ecx esi
call sub_402620
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x70 ]
mov ebx 0x7
mov edi r--data
lea esi [ esp + 0x11c ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x20 ] eax
call sub_401b70
lea eax [ ebx - 0x5 ]
lea ecx [ ebx - 0x6 ]
lea edx [ esp + 0x20 ]
call sub_4019e0
mov ecx esi
call sub_402620
lea esi [ esp + 0x20 ]
call sub_4092c0
mov ecx [ esp + 0x74 ]
mov edi r--data
lea esi [ esp + 0x12c ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x20 ] ecx
call sub_401b70
lea eax [ ebx - 0x5 ]
lea ecx [ ebx - 0x6 ]
lea edx [ esp + 0x20 ]
call sub_4019e0
mov ecx esi
call sub_402620
mov edx [ esp + 0x8c ]
mov esi [ esp + 0x18 ]
push 0x0
push 0x1
inc edx
push edx
push esi
mov [ esi + 0x464 ] 0x1
call sub_47cb23
mov [ esi + 0x464 ] 0x0
lea esi [ esp + 0x20 ]
jmp r-xdata
lea ecx [ esp + 0x5c ]
push ecx
push rw-data
call sub_453b07
test al al
je r-xdata
lea eax [ esp + 0xe8 ]
push eax
lea ecx [ esp + 0xe4 ]
push ecx
mov ecx [ esp + 0x68 ]
lea edx [ esp + 0xf8 ]
push edx
lea eax [ esp + 0xc0 ]
push eax
push ecx
push edi
call sub_4646a2
test al al
je r-xdata
mov ecx [ edi + 0x438 ]
lea edx [ esp + 0xf ]
push edx
lea eax [ esp + 0x38 ]
push eax
push ecx
call sub_444233
add esp 0xc
cmp [ edi + 0xf8 ] 0x9
jne r-xdata
call [ timeGetTime@IAT ]
mov ecx [ edi + 0x44c ]
cmp eax ecx
jae r-xdata
cmp eax 0x2
je r-xdata
call sub_4092c0
lea ecx [ esp + 0x60 ]
call sub_402620
mov edi [ esp + 0x18 ]
jmp r-xdata
jmp r-xdata
cmp [ esp + 0xf ] 0x1
jne r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
xor esi esi
cmp [ edi + 0x2f0 ] esi
je r-xdata
cmp eax 0x3
je r-xdata
mov ebx 0x1
lea esi [ esp + 0x90 ]
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x98 ] ebx
mov [ esp + 0x9c ] 0x0
call sub_4092c0
mov edx [ esp + 0x5c ]
mov edi r--data
lea esi [ esp + 0x10c ]
mov [ esp + 0x98 ] ebx
mov [ esp + 0x90 ] edx
call sub_401b70
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x90 ]
call sub_4019e0
mov ecx esi
call sub_402620
mov eax [ esp + 0xb4 ]
mov esi [ esp + 0x18 ]
push 0x0
push ebx
inc eax
push eax
push esi
mov [ esi + 0x465 ] bl
call sub_47cb23
mov [ esi + 0x465 ] 0x0
lea esi [ esp + 0x90 ]
mov eax [ edi + 0x454 ]
mov [ esp + 0x54 ] 0xcccccccc
cmp eax ebx
je r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
jmp r-xdata
mov eax [ edi + 0x454 ]
cmp eax ebx
je r-xdata
cmp eax [ edi + 0x448 ]
jb r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x3
jl r-xdata
call [ timeGetTime@IAT ]
mov ecx [ edi + 0x2f8 ]
cmp eax ecx
jb r-xdata
cmp eax 0x4
je r-xdata
cmp [ edi + 0xf8 ] 0x8
jne r-xdata
lea edx [ esp + 0x54 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov eax [ edi + 0x454 ]
push eax
call [ CloseHandle@IAT ]
mov [ edi + 0x454 ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
add eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] ebx
call sub_40d590
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] ebx
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ edi + 0x454 ] ebx
jmp r-xdata
sub eax ecx
dec eax
jmp r-xdata
sub eax ecx
cmp eax 0x5
je r-xdata
mov eax [ edi ]
mov edx [ esp + 0x54 ]
mov eax [ eax + 0x4 ]
push ebx
push edx
add eax edi
call sub_404120
mov ecx [ esp + 0x34 ]
fild [ esp + 0x34 ]
test ecx ecx
jge r-xdata
sub eax 0x3
cmp eax 0x3
ja r-xdata
cmp eax [ edi + 0x2f0 ]
jae r-xdata
cmp [ edi + 0xf8 ] 0x2
jne r-xdata
cmp eax 0x6
je r-xdata
mov eax [ edi ]
fstp [ esp + 0x80 ]
mov ecx [ eax + 0x4 ]
lea edx [ esp + 0x80 ]
push edx
add ecx edi
push ecx
call sub_457509
jmp r-xdata
fadd [ r--data ]
jmp [ eax * 4 + jump_table_431a6f ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
add eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
call sub_40d590
jmp r-xdata
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xf4 ] ecx
mov eax ecx
inc ecx
cmp eax [ rw-data ]
mov [ ebp + 0x8 ] ecx
jg r-xdata
mov ecx [ edi + 0x2f4 ]
push ecx
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] ebx
call esi
jmp r-xdata
push edi
call sub_46e641
jmp r-xdata
push edi
call sub_46e641
mov esi eax
test esi esi
jl r-xdata
push 0x1
push edi
call sub_46dd22
push 0x1
push edi
call sub_46dd22
mov esi eax
test esi esi
jl r-xdata
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
test eax eax
jle r-xdata
mov esi eax
test esi esi
jge r-xdata
mov ecx [ edi ]
mov eax esi
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_4040e0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
add eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] 0x0
call sub_40d590
test esi esi
jg r-xdata
je r-xdata
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
test eax eax
je r-xdata
test esi esi
jle r-xdata
jmp r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x5
je r-xdata
jmp r-xdata
mov esi eax
mov edx [ esi + 0x4 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
mov edx [ edx ]
movsx eax [ edx + 0x8 ]
cmp eax ebx
jne r-xdata
mov ecx [ edi + 0x2f4 ]
push ecx
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
call sub_436272
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esp + 0xa0 ] eax
mov [ esp + 0xac ] eax
mov eax [ edi + 0x1d8 ]
mov ebx [ eax ]
lea esi [ esp + 0xa0 ]
mov [ esp + 0xa8 ] 0x1
call sub_4092c0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push esi
add eax edi
push eax
mov [ esp + 0xb4 ] 0x7
mov [ esp + 0xac ] ebx
call sub_4717e3
call sub_4092c0
cmp eax 0x3
jne r-xdata
cmp eax 0x34
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push esi
push edi
call sub_40b380
dec eax
cmp eax 0x7e
ja r-xdata
lea eax [ esp + 0x1f ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push esi
push edi
lea eax [ esp + 0x20 ]
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x54 ] ebx
call sub_409a40
test eax eax
jne r-xdata
movsx edx [ edx + 0xa ]
push edx
push 0x1388
push edi
call sub_45e62e
jmp r-xdata
movzx eax [ eax + lookup_table_4099b4 ]
jmp [ eax * 4 + jump_table_4099a0 ]
mov esi [ esp + 0x44 ]
cmp esi ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x10 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push edi
mov eax esi
call sub_409340
jmp r-xdata
xor eax eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xb8 ] eax
mov [ esp + 0xc4 ] eax
push ecx
lea eax [ esp + 0x14 ]
mov edx esi
mov ebx edi
mov [ esp + 0xc4 ] 0x1
call sub_409030
test eax eax
jne r-xdata
lea ebx [ edi + 0x488 ]
push ebx
call sub_43550e
test al al
jne r-xdata
mov eax [ esp + 0x40 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov edx [ esi + 0xc ]
cmp [ edx ] ebx
je r-xdata
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push edi
call sub_45e62e
lea esi [ esp + 0x38 ]
call sub_4092c0
jmp r-xdata
lea esi [ esp + 0xb8 ]
call sub_4092c0
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x10 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push ebx
lea eax [ esp + 0x14 ]
push eax
push esi
push edi
call sub_47f2b4
test eax eax
je r-xdata
movsx edx [ edx + 0xa ]
push edx
push 0xa7
push edi
call sub_45e62e
jmp r-xdata
mov esi [ esp + 0x38 ]
cmp esi ebx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esi ]
push eax
call sub_4112ef
mov ecx [ esi + 0xc ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
push esi
call sub_4112ef
add esp 0x4
mov [ esp + 0x44 ] ebx
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push edi
call sub_45e62e
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xaa
push edi
call sub_45e62e
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x38 ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x38 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov esi [ esp + 0x38 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x38 ]
cmp eax ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_4099b9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_409a40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xd4
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
push esi
push edi
mov edi eax
mov eax [ edi ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov esi [ eax ]
push esi
call sub_4112d5
add esp 0x4
mov [ esp + 0x34 ] eax
add eax 0x1
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esp + 0x38 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esp + 0x38 ]
add esp 0x4
lea edx [ ecx + ecx + 0x2 ]
push edx
push esi
push eax
mov [ esp + 0x3c ] eax
call sub_410f70
add esp 0xc
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x140 ] 0x0
mov [ esp + 0x3c ] eax
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_402620
cmp [ eax ] 0x1
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esp + 0x3c ]
dec [ eax ]
lea esi [ esp + 0x30 ]
call sub_4013e0
mov eax [ esp + 0x34 ]
inc eax
push eax
call sub_446547
xor ecx ecx
mov esi eax
mov edx 0x2
mul edx
seto cl
mov [ esp + 0x38 ] esi
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x34 ]
mov esi eax
mov eax [ esp + 0x38 ]
add esp 0x4
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push esi
call sub_410f70
mov [ esp + 0x3c ] esi
mov esi [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
call [ CharUpperBuffW@IAT ]
mov eax [ esi + 0x13c ]
test eax eax
jne r-xdata
mov esi [ esi + 0x140 ]
sub esi 0x1
js r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x134 ]
test esi esi
je r-xdata
mov [ esp + 0x7c ] eax
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x5c ] esi
mov [ esp + 0x1c ] esi
mov edi edi
jle r-xdata
mov edx [ esp + 0x1c ]
dec edx
mov [ esp + 0x5c ] edx
jmp r-xdata
mov esi [ esi + 0x20 ]
mov [ esp + 0x1c ] esi
test esi esi
jne r-xdata
test edx edx
jbe r-xdata
mov edx [ esp + 0x5c ]
cmp [ esp + 0x74 ] edx
jg r-xdata
mov eax [ esp + 0x1c ]
inc eax
mov [ esp + 0x74 ] eax
mov ecx [ esp + 0x5c ]
cmp [ esp + 0x74 ] ecx
jle r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x34 ]
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x3c ]
add [ eax ] 0xffffffff
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esi ]
jmp r-xdata
mov eax [ esp + 0x7c ]
mov ecx [ esp + 0x1c ]
mov esi [ eax + ecx * 4 ]
lea ecx [ esp + 0x30 ]
call sub_402620
jmp r-xdata
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x7c ]
add eax edx
cdq
sub eax edx
sar eax 0x1
mov ecx [ ecx + eax * 4 ]
lea esi [ esp + 0x30 ]
mov [ esp + 0x1c ] eax
call sub_40c0b0
test eax eax
jge r-xdata
mov eax esi
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call sub_4112ef
mov ecx [ esp + 0x40 ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
push edi
push ebx
push ecx
call sub_47d10e
jmp r-xdata
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ esp + 0x74 ] edx
mov edx [ eax + 0x10 ]
mov eax [ edi ]
mov [ esp + 0x44 ] ecx
mov [ esp + 0x7c ] edx
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x148 ]
inc eax
mov [ edi ] eax
mov esi [ ebx + 0x4 ]
mov [ esp + 0xdc ] ecx
xor ecx ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] ecx
mov esi [ esi + eax * 4 ]
cmp [ esi + 0x8 ] 0x47
mov [ esp + 0x30 ] r--data
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] ecx
mov [ esp + 0x6c ] ecx
mov [ esp + 0x70 ] ecx
jne r-xdata
mov esi [ esp + 0x1c ]
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
push edx
mov edx [ ebp + 0x8 ]
push 0x6f
push edx
jmp r-xdata
inc eax
mov [ esp + 0x84 ] edx
mov edx eax
mov [ esp + 0x18 ] ecx
xor esi esi
mov [ esp + 0x58 ] edx
mov esi [ esp + 0x1c ]
call sub_45e62e
sub ecx 0x47
je r-xdata
inc eax
jmp r-xdata
inc esi
jmp r-xdata
sub ecx 0x1
jne r-xdata
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
movsx ecx [ ecx + 0x8 ]
cmp ecx 0x47
jge r-xdata
sub ecx 0x37
jne r-xdata
test esi esi
jne r-xdata
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 - 0x4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x6f
push eax
jmp r-xdata
dec esi
inc eax
jmp r-xdata
mov [ esp + 0x14 ] eax
inc eax
mov [ edi ] eax
mov eax [ esp + 0x7c ]
cmp eax [ rw-data ]
jg r-xdata
mov [ esp + 0x60 ] ecx
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp [ esp + 0x74 ] ecx
mov [ esp + 0x5c ] ecx
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
mov [ esp + 0x60 ] eax
mov ebx [ esp + 0x5c ]
cmp ebx [ esp + 0x44 ]
jl r-xdata
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x80 ] ecx
mov eax [ esp + 0x84 ]
push eax
push 0x70
cmp ebx [ esp + 0x74 ]
jg r-xdata
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x5c ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov eax [ esp + 0x7c ]
xor esi esi
xor ecx ecx
cmp eax esi
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] eax
jl r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x6c ]
mov eax [ esp + 0x70 ]
cmp esi eax
je r-xdata
xor bl bl
mov [ esp + 0x50 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ edx ] ecx
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
jmp r-xdata
xor ecx ecx
mov [ esp + 0x70 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x6c ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x58 ] eax
call sub_410f70
mov eax [ esp + 0x74 ]
add esp 0xc
push eax
call sub_4112ef
mov ecx [ esp + 0x50 ]
add esp 0x4
mov [ esp + 0x68 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
mov eax [ esp + 0x4c ]
mov edx 0x1
add [ rw-data ] edx
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x50 ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x50 ] esi
jl r-xdata
mov edx [ esp + 0x68 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x6c ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x74 ] edx
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x4c ]
cmp eax esi
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c3e0
test al al
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
xor eax eax
mov [ esi + 0x148 ] ebx
mov [ esp + 0x88 ] eax
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] al
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] al
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xd ] 0x0
mov ecx 0x1
lea edi [ eax + esi + 0x4 ]
mov [ esp + 0x90 ] ecx
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov [ esp + 0x80 ] edx
lea esp [ esp ]
push 0x20
mov [ esp + 0x1c ] eax
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x88 ]
push ecx
push edx
call sub_4721e5
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x80 ]
cmp edx [ esp + 0x5c ]
jg r-xdata
xor eax eax
push eax
call sub_44b3f6
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x58 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push edi
call sub_4436f6
mov edx 0x1
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov eax [ esp + 0x7c ]
mov edx [ esi + 0xf4 ]
mov ebx [ esi + 0x16c ]
inc eax
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x50 ] edx
call sub_409560
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xc0 ]
call sub_40d1e0
mov ecx [ esp + 0x60 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x84 ] 0x0
mov esi [ edx + esi * 4 + 0x8 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x4a
je r-xdata
mov edi [ esp + 0x68 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40df50
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_4530b3
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_4530b3
xor esi esi
jmp r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40be00
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push edx
call sub_40e2e0
call sub_40c8a0
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x4c ]
mov edi esi
mov edx [ edi ]
mov [ edi + 0xf4 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
push eax
cmp ax 0x49
je r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_4355fd
push eax
mov eax [ ecx ]
push eax
call sub_45ee98
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x4c ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ esp + 0x58 ]
cmp edx ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x64 ]
call sub_40c620
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410f70
add esp 0xc
push ebx
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x4c ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
push esi
jmp r-xdata
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e62e
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b453
lea ecx [ esp + 0xc0 ]
call sub_40ed60
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_404260
jmp r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] edx
jne r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x60 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ab50
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xd ] 0x0
lea eax [ ecx + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402b00
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_40ab50
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x4c ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_4019e0
jmp r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax 0x1
jmp r-xdata
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3b8
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc8 ] 0x0
mov [ esp + 0xc0 ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x4b ] al
je r-xdata
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x58 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov eax ebx
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc4 ]
push ecx
mov [ esp + 0xcc ] 0x0
call sub_4112ef
mov eax [ esp + 0x84 ]
inc eax
add esp 0x4
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x80 ]
inc eax
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jl r-xdata
inc [ esp + 0x10 ]
mov eax esi
call sub_404110
mov ecx [ eax + 0x14 ]
mov [ esp + 0x9c ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4436f6
jmp r-xdata
inc esi
cmp esi [ esp + 0xc8 ]
jb r-xdata
push eax
call sub_44c7f2
mov ecx [ esp + 0x60 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0x84 ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc4 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_404110
add eax 0x20
push eax
lea ebx [ esp + 0xac ]
call sub_409210
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov esi eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
dec eax
mov [ esp + 0x54 ] esi
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x4b ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x54 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_443711
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40c0e0
jmp r-xdata
test eax eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x54 ]
jmp [ eax * 4 + jump_table_40ab18 ]
push eax
call sub_446547
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410f70
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_443711
add esp 0x8
test al al
je r-xdata
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov edi edi
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44cc6c
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x4c ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x54 ] eax
lea esp [ esp ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4112ef
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_409210
jmp r-xdata
mov [ esp + 0x54 ] eax
mov edi edi
mov eax [ ebx ]
mov ecx [ esp + 0x78 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x78 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov dx bx
mov ebx [ esp + 0x14 ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
lea ebx [ esi + 0x20 ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42e62d ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a7
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_46e9cd
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x4b ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov edx [ esi ]
mov [ ebx ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ esi ]
mov [ ebx ] cl
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3b8
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x4c ] eax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi ]
push edx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x78 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa8 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x54 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4112ef
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_40ab50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x84
push ebx
push esi
push edi
mov ebx 0x1
xor edi edi
mov [ esp + 0x24 ] ecx
test [ rw-data ] bl
je r-xdata
or [ rw-data ] ebx
push sub_429292
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] edi
call sub_411421
add esp 0x4
jmp r-xdata
mov esi [ ebp + 0x10 ]
push 0x8
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] 0x0
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] 0x0
call sub_41171a
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x14
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax [ edi ]
mov eax [ edx + eax * 4 ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] 0x17
mov [ esp + 0x38 ] eax
mov ebx 0x14
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea edx [ eax + ecx * 4 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax esi
movsx ebx [ eax + 0x8 ]
cmp ebx 0x36
je r-xdata
mov eax [ eax ]
imul eax eax 0x15
movzx eax [ eax + ebx + rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x6
ja r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov ebx [ esp + 0x18 ]
mov [ esp + 0x28 ] 0x16
test ebx ebx
jne r-xdata
cmp ebx 0x37
jl r-xdata
cmp ebx 0x7
je r-xdata
jmp [ eax * 4 + jump_table_40b2b0 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6e
push ecx
call sub_45e62e
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
cmp [ esp + 0x21 ] 0x0
je r-xdata
cmp esi rw-data
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x41
jge r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp ebx 0x8
je r-xdata
test cl cl
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x30 ]
call sub_40b9e0
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
test cl cl
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6d
push ecx
call sub_45e62e
jmp r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6b
push ecx
call sub_45e62e
jmp r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6c
push ecx
call sub_45e62e
jmp r-xdata
lea edx [ esp + 0x14 ]
push edx
mov esi eax
lea esp [ esp ]
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esp + 0x1c ]
push rw-data
call sub_409210
mov ebx [ esp + 0x18 ]
mov [ esp + 0x21 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 ]
inc ebx
mov [ esp + 0x18 ] ebx
cmp ebx 0x1
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
cmp ebx 0x51
ja r-xdata
mov ebx [ esp + 0x18 ]
mov [ esp + 0x28 ] 0x16
test ebx ebx
jne r-xdata
mov esi [ esp + 0x14 ]
jmp r-xdata
lea eax [ esp + 0x14 ]
call sub_40d260
lea ebx [ esp + 0x60 ]
call sub_40bd50
mov ecx ebx
call sub_40cfb0
test al al
je r-xdata
jmp r-xdata
mov [ esi ] ebx
mov [ esp + 0x35 ] 0x0
jmp r-xdata
push 0x8
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov cl [ esp + 0x35 ]
mov esi [ esp + 0x30 ]
test cl cl
jne r-xdata
jmp r-xdata
mov eax edx
jmp r-xdata
mov eax [ edx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
xor eax eax
mov esi [ eax + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esp + 0xc ] eax
mov ebx [ esp + 0xc ]
mov eax rw-data
call sub_40bd50
mov eax ebx
mov ebx [ esp + 0x18 ]
cmp [ esp + 0x21 ] 0x0
mov edx [ esp + 0x1c ]
jne r-xdata
mov [ esp + 0xc ] esi
push eax
call sub_4436f6
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
movzx ebx [ ebx + lookup_table_40b32c ]
jmp [ ebx * 4 + jump_table_40b2cc ]
cmp [ esp + 0x21 ] 0x0
jne r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ edi ]
cmp ecx [ ebp + 0x14 ]
je r-xdata
cmp [ esp + 0xc ] 0x7
jne r-xdata
mov esi 0x8
cmp [ esp + 0xc ] esi
je r-xdata
inc [ esp + 0x2c ]
xor eax eax
jmp r-xdata
mov [ eax ] ebx
cmp [ eax ] 0x12
je r-xdata
lea esi [ esp + 0x2c ]
call sub_40c250
jmp r-xdata
test cl cl
je r-xdata
mov edi [ esi + 0x10 ]
call sub_4092c0
push esi
call sub_4112ef
add esp 0x4
mov esi edi
test edi edi
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ eax + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ edx + 0x10 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov [ esp + 0xc ] edx
jmp r-xdata
push eax
call sub_4436f6
mov ecx [ esp + 0xc ]
mov [ ecx + 0xc ] 0x0
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
inc ecx
mov ebx 0xd
mov [ edi ] ecx
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x16
jne r-xdata
inc ecx
mov ebx 0xe
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x12
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x13
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x9
mov [ edi ] ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov eax [ eax ]
cmp eax 0x4
jl r-xdata
inc ecx
mov ebx 0x5
mov [ edi ] ecx
jmp r-xdata
xor ebx ebx
inc ecx
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x1
mov [ edi ] ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
mov eax esi
mov [ esp + 0x74 ] ecx
call sub_40d260
mov esi eax
call sub_4092c0
mov edx [ esp + 0x74 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edx
inc [ edi ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
fld [ eax ]
mov eax esi
fstp [ esp + 0xc ]
call sub_40d260
mov esi eax
call sub_4092c0
fld [ esp + 0xc ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
inc [ edi ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
call sub_40c000
lea edx [ esp + 0x3f ]
push edx
mov eax esi
call sub_40d260
mov esi [ esp + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push esi
call sub_409a40
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x16
je r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
call sub_40c000
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax ]
mov edx [ eax ]
sub esp 0x10
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x24 ]
call sub_40d260
mov ebx [ esp + 0x34 ]
push eax
push ebx
call sub_4705bb
test eax eax
jne r-xdata
inc ecx
mov ebx 0x4
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x6
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x2
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x3
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0xf
mov [ edi ] ecx
jmp r-xdata
test ecx ecx
jbe r-xdata
mov ebx [ esp + 0x1c ]
push rw-data
call sub_409210
mov ebx [ esp + 0x18 ]
mov [ esp + 0x21 ] 0x0
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 ]
inc ebx
mov [ esp + 0x18 ] ebx
cmp ebx 0x1
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
lea esi [ esp + 0x60 ]
call sub_4092c0
mov esi [ esp + 0x14 ]
jmp r-xdata
mov esi 0x8
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_442408
test eax eax
jne r-xdata
test al al
je r-xdata
mov [ eax + 0x4 ] esi
mov [ esp + 0x30 ] eax
mov eax edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0xc ]
mov ebx [ eax ]
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esp + 0xc ] ebx
mov [ esp + 0x28 ] ebx
lea ecx [ ecx ]
cmp eax 0x13
je r-xdata
mov ebx 0xb
cmp [ esp + 0x21 ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
cmp [ esp + 0x21 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x27
jl r-xdata
cmp [ esi + 0xf8 ] 0x1
je r-xdata
mov ebx 0xc
mov ebx 0x10
cmp eax 0x13
jne r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x86
push ebx
call sub_45e62e
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x28 ] 0x16
jmp r-xdata
mov esi [ esp + 0x24 ]
lea edx [ esi + 0x488 ]
push edx
call sub_43550e
test al al
je r-xdata
mov edx [ edx - 0x4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x33
je r-xdata
xor eax eax
jmp r-xdata
mov [ esp + 0xc ] eax
mov ebx [ esp + 0xc ]
mov eax rw-data
call sub_40bd50
mov eax ebx
mov ebx [ esp + 0x18 ]
cmp [ esp + 0x21 ] 0x0
jne r-xdata
mov ebx esi
push eax
call sub_4436f6
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push eax
push 0x6e
push ecx
call sub_45e62e
lea esi [ esp + 0x60 ]
lea eax [ esp + 0x14 ]
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ eax ] 0x14
je r-xdata
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x30 ]
call sub_40b9e0
test eax eax
jne r-xdata
push edx
call [ VariantClear@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ rw-data ]
mov [ esi + 0x8 ] edx
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
cmp [ ebx + 0xf8 ] 0x1
je r-xdata
sub eax 0x2
cmp eax 0x27
ja r-xdata
inc ecx
lea ebx [ eax + 0x6 ]
mov [ edi ] ecx
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x28 ] 0x16
jmp r-xdata
inc ecx
mov [ edi ] ecx
jmp r-xdata
call sub_44b92e
lea eax [ esp + 0x2c ]
call sub_4014e0
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa7
push esi
call sub_45e62e
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
xor eax eax
sub esp 0x10
mov [ esp + 0x60 ] eax
mov [ esp + 0x6c ] eax
mov eax edx
mov ebx esp
mov [ esp + 0x68 ] 0x1
call sub_40bd50
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x60 ]
push eax
push edi
push ecx
mov ecx esi
call sub_47d9ce
test eax eax
jne r-xdata
mov ebx [ esp + 0x24 ]
push 0x1
push r--data
push 0x0
push 0xa9
push ebx
call sub_4781ae
test eax eax
jne r-xdata
cmp ax 0x35
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ eax + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
mov ebx [ edx + 0x10 ]
jmp r-xdata
mov ebx [ esp + 0x1c ]
jmp r-xdata
push eax
call sub_4436f6
mov ecx [ esp + 0xc ]
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov [ esp + 0x48 ] 0x0
mov edx [ esp + 0x48 ]
push edx
mov [ esp + 0x40 ] 0x1
mov ecx [ esp + 0x40 ]
push ecx
jmp r-xdata
mov cl [ esp + 0x35 ]
jmp r-xdata
mov eax [ esp + 0xc ]
push 0x10
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push ecx
call sub_44478f
jmp r-xdata
mov eax [ esp + 0xc ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ rw-data ]
mov [ esi ] edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov ebx 0x11
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
mov eax [ esp + 0x28 ]
push edx
push eax
mov eax [ ebp + 0xc ]
call sub_40c300
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ esp + 0x24 ]
push eax
mov eax [ ebp + 0xc ]
call sub_409030
test eax eax
jne r-xdata
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
movzx eax [ eax + lookup_table_42f3d9 ]
jmp [ eax * 4 + jump_table_42f3c1 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6e
push esi
call sub_45e62e
lea esi [ esp + 0x50 ]
jmp r-xdata
lea edi [ esp + 0x50 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
mov esi edi
call sub_4092c0
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa9
push ebx
call sub_45e62e
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
inc [ edi ]
jmp r-xdata
mov ecx [ eax ]
mov eax [ ebx + 0xc ]
mov [ esp + 0xc ] ecx
test eax eax
jne r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
call sub_40d260
push eax
call sub_452d91
lea esi [ esp + 0x2c ]
call sub_40c250
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebx ]
mov [ eax ] edx
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ebx [ ebx + 0xc ]
mov [ eax + 0xc ] ebx
inc [ ebx ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esi ]
test eax eax
je r-xdata
inc ecx
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0x8
mov [ edi ] ecx
jmp r-xdata
inc ecx
mov ebx 0xa
mov [ edi ] ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
mov [ esp + 0x44 ] 0x0
mov ecx [ esp + 0x44 ]
push ecx
jmp r-xdata
mov edi rw-data
lea esi [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x16
call sub_40c000
mov [ esp + 0x4c ] 0x1
mov edx [ esp + 0x4c ]
push edx
sub esp 0x10
mov edi r--data
mov esi esp
mov [ esp + 0x38 ] 0x16
call sub_401b70
lea eax [ esp + 0x88 ]
push eax
call sub_44b8d6
mov edi rw-data
lea esi [ esp + 0x14 ]
call sub_40c000
lea ecx [ esp + 0x78 ]
push ecx
mov eax esi
call sub_40d260
push eax
call sub_452d55
mov eax [ ebp + 0xc ]
inc [ eax ]
lea ecx [ esp + 0x80 ]
call sub_402620
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
call sub_4092c0
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
mov ecx [ esp + 0x10 ]
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
inc [ edi ]
cmp [ eax + 0xfd ] 0x0
jne r-xdata
lea eax [ esp + 0x14 ]
call sub_40d260
push eax
call sub_457f49
mov eax [ esp + 0x24 ]
jmp r-xdata
cmp [ eax + 0xfe ] 0x0
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ rw-data ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ rw-data ]
fstp [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov al [ rw-data ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
lea eax [ esp + 0x18 ]
call sub_40d260
push eax
call sub_452d91
mov edi [ ebp + 0xc ]
inc [ edi ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] ecx
inc [ edi ]
jmp r-xdata
push eax
call sub_44478f
mov ecx [ esp + 0xc ]
jmp r-xdata
mov eax ebx
call sub_40e380
mov ecx [ esp + 0xc ]
jmp r-xdata
cmp eax 0xb
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ rw-data ]
mov [ esi ] edx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esi ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
push ecx
call sub_44b3b8
jmp r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi + 0xc ] eax
jmp r-xdata
xor eax eax
mov esi [ rw-data ]
mov ebx [ esp + 0x18 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ rw-data ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_44b8a7
mov [ esi ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx [ rw-data ]
mov eax [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_46e9cd
mov [ esi ] eax
jmp r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
mov ecx [ esp + 0x10 ]
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esi ]
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
call sub_40d260
mov edx [ esp + 0x24 ]
push eax
push edx
call sub_47151f
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ esi ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
mov edx [ rw-data ]
mov [ esi + 0x4 ] edx
jmp r-xdata
fld [ rw-data ]
fstp [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov al [ rw-data ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ rw-data ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_44b3b8
mov ecx [ esp + 0xc ]
jmp r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi + 0xc ] eax
jmp r-xdata
xor eax eax
mov esi [ rw-data ]
mov ebx [ esp + 0x18 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov edi [ ebp + 0xc ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ rw-data ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_44b8a7
mov [ esi ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx [ rw-data ]
mov eax [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push eax
call sub_46e9cd
mov [ esi ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ esi ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
sub_40b380
sub esp 0x28
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
push edi
mov edi [ esp + 0x40 ]
mov eax [ edi + 0x4 ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov edx [ eax ]
mov ecx [ edx ]
cmp ecx 0x22
jne r-xdata
sub ecx 0x4
cmp ecx 0x26
ja r-xdata
mov ecx 0x1
cmp [ esi + 0xec ] ecx
je r-xdata
push 0xffffffff
push 0x81
push esi
call sub_45e62e
jmp r-xdata
jmp [ ecx * 4 + jump_table_40b758 ]
movsx eax [ edx + 0xa ]
push eax
push 0x81
push esi
call sub_45e62e
jmp r-xdata
mov [ esp + 0x14 ] ecx
mov edx [ eax + 0x4 ]
cmp [ edx + 0x8 ] 0x7f
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
lea eax [ esi + 0x16c ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x34 ] ebx
mov [ esp + 0x3c ] eax
cmp [ eax + 0x9 ] bl
jne r-xdata
mov eax [ esp + 0x44 ]
push eax
push edi
push esi
call sub_40cde0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
mov edx [ esp + 0x44 ]
push edx
push edi
push esi
call sub_402270
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
lea edi [ esi + 0x16c ]
call sub_40c8a0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
push esi
lea eax [ esp + 0x18 ]
call sub_410750
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
mov ecx [ esp + 0x44 ]
push ecx
push edi
mov eax esi
call sub_40e990
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
mov ecx [ esp + 0x44 ]
push ecx
call sub_40f2c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
mov eax [ esp + 0x44 ]
push eax
push edi
mov eax esi
call sub_40ea10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
mov eax [ esp + 0x44 ]
push esi
call sub_40f200
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
add esi 0x16c
mov eax esi
call sub_40f360
mov ecx [ eax + 0x8 ]
mov edx [ esp + 0x44 ]
inc ecx
mov edi esi
mov [ edx ] ecx
call sub_40c8a0
jmp r-xdata
mov edx [ esp + 0x44 ]
push edx
push edi
push esi
call sub_47f1aa
jmp r-xdata
mov eax [ esp + 0x44 ]
push eax
push edi
push esi
call sub_47f09d
jmp r-xdata
mov ecx [ esp + 0x44 ]
push ecx
push esi
call sub_47eea5
jmp r-xdata
lea eax [ esi + 0x16c ]
call sub_40f360
mov edx [ eax + 0x8 ]
mov eax [ esp + 0x44 ]
mov [ eax ] edx
jmp r-xdata
mov ecx [ esp + 0x44 ]
push ecx
push edi
push esi
call sub_47eb5d
jmp r-xdata
mov edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push edi
push esi
call sub_471853
jmp r-xdata
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push edi
push esi
call sub_47e8db
jmp r-xdata
push ebx
lea edx [ esp + 0x18 ]
push edx
push edi
push esi
call sub_47fea8
jmp r-xdata
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
push esi
call sub_4803f4
jmp r-xdata
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push edi
push esi
call sub_4803f4
jmp r-xdata
push 0x1
lea edx [ esp + 0x18 ]
push edx
push edi
push esi
call sub_4803f4
jmp r-xdata
push 0x2
lea eax [ esp + 0x18 ]
push eax
push edi
push esi
call sub_4803f4
jmp r-xdata
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push edi
push esi
call sub_47f6ef
jmp r-xdata
mov [ esi + 0x144 ] 0x1
jmp r-xdata
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x44 ]
push ecx
mov [ esp + 0x1c ] 0x1
lea edx [ esp + 0x20 ]
push edx
mov edx [ eax + 0x4 ]
mov eax [ edx ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ eax ]
push ecx
push esi
call sub_4646a2
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x44 ]
inc edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push edi
push esi
call sub_47dc78
jmp r-xdata
lea edx [ esp + 0x14 ]
push edx
push edi
push esi
call sub_464653
jmp r-xdata
mov eax [ esp + 0x3c ]
mov [ eax + 0x144 ] 0x1
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
xor eax eax
push 0xffffffff
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] ecx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
mov edi [ eax + 0x30 ]
jmp r-xdata
mov edi [ eax + 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x3c ]
push ecx
push 0x72
push edx
call sub_45e62e
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
jmp r-xdata
mov eax [ esi ]
mov ebx [ eax + 0x4 ]
add ebx esi
cmp [ ebx + 0xd ] 0x0
jne r-xdata
cmp [ edi + 0x28 ] 0x8
mov ebp [ edi + 0xc ]
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ edi + 0x20 ]
push edx
push ebp
push esi
call sub_479c97
test eax eax
jne r-xdata
cmp [ edi + 0x18 ] 0x5
je r-xdata
mov ecx [ ebx + 0x8 ]
mov ebp [ ecx + 0x38 ]
jmp r-xdata
mov ebp [ ebx + 0x8 ]
mov edi [ esp + 0x3c ]
call sub_40c8a0
lea esi [ esp + 0x28 ]
call sub_4092c0
jmp r-xdata
cmp [ edi + 0x28 ] 0x8
jne r-xdata
lea eax [ edi + 0x10 ]
push 0x1
push eax
call sub_4354dd
dec eax
lea esi [ edi + 0x20 ]
mov ecx esi
mov [ esp + 0x40 ] eax
call sub_40c760
cmp eax [ esp + 0x40 ]
jge r-xdata
lea esi [ edi + 0x20 ]
mov eax esi
mov ecx ebp
call sub_40b910
mov eax [ esp + 0x34 ]
cmp eax ebx
jne r-xdata
lea edx [ esp + 0x28 ]
cmp ebp edx
je r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push eax
mov ebx ebp
call sub_409210
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x44 ]
inc ecx
mov [ edx ] ecx
xor ebx ebx
jmp r-xdata
mov ecx esi
call sub_40c760
inc eax
mov [ esp + 0x3c ] eax
call sub_4092c0
mov eax [ esp + 0x3c ]
mov [ esi ] eax
lea eax [ edi + 0x10 ]
push eax
mov [ esi + 0x8 ] 0x1
call sub_45e85e
mov ecx esi
call sub_40c760
mov esi eax
lea edx [ edi + 0x10 ]
call sub_40d0f0
push ebx
lea eax [ edi + 0x10 ]
push 0x1
push eax
call sub_40d030
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0x34 ] ebx
jmp r-xdata
mov eax [ esp + 0x30 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0x8 ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
push eax
call sub_4436f6
mov [ ebp + 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
cmp ecx ebx
jne r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x44 ]
inc ecx
mov [ edx ] ecx
jmp r-xdata
push ebx
lea eax [ edi + 0x10 ]
push ebx
push eax
call sub_40d030
add esp 0xc
push eax
mov ebx ebp
call sub_409210
xor ebx ebx
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp eax 0xa
je r-xdata
mov [ ebx + 0x10 ] 0x1
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebp ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call sub_4436f6
mov eax [ esp + 0x30 ]
mov [ esp + 0x34 ] ebx
jmp r-xdata
cmp eax 0x8
je r-xdata
fldz
mov [ esp + 0x30 ] 0x3
fld st0
fst [ esp + 0x28 ]
mov eax [ esi + 0x8 ]
lea ecx [ eax + eax * 2 ]
shl ecx 0x4
mov ecx [ ecx + rw-data ]
cmp ecx 0x3
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x28 ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ esi ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] 0x0
push ecx
call [ VariantClear@IAT ]
mov eax [ ebp ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp eax 0xa
je r-xdata
dec ecx
fstp st0
fstp st0
cmp ecx 0x8
ja r-xdata
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ esp + 0x14 ]
push eax
call [ VariantClear@IAT ]
mov ecx [ esp + 0x28 ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov [ ebp + 0x8 ] 0x1
mov [ ebp ] 0x0
mov ecx [ esp + 0x30 ]
mov [ ebp + 0x8 ] ecx
mov eax [ esp + 0x30 ]
cmp eax 0x4
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebp
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x28 ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ edi + 0x18 ]
mov edx [ ebp + 0x8 ]
lea esi [ edi + 0x10 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov ecx [ ecx * 4 + rw-data ]
cmp ecx 0x1
jne r-xdata
jmp [ ecx * 4 + jump_table_430dd0 ]
sub eax 0x2
cmp eax 0x8
ja r-xdata
fstp st1
fild [ esi ]
mov ecx [ esp + 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x2c ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebp ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
sub ecx 0x2
cmp ecx 0x7
ja r-xdata
cmp eax 0x1
jne r-xdata
push ebx
lea edx [ esp + 0x2c ]
push edx
call sub_453063
push eax
push esi
call sub_453063
push eax
call sub_445a57
test eax eax
jge r-xdata
mov ecx esi
call sub_40c760
lea ecx [ esp + 0x28 ]
mov esi eax
call sub_40c760
cmp esi eax
jl r-xdata
push esi
call sub_443576
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x28 ]
push eax
mov esi edx
call sub_443576
cmp esi edx
jl r-xdata
push esi
call sub_44b390
lea ecx [ esp + 0x28 ]
push ecx
mov esi eax
call sub_44b390
cmp esi eax
jb r-xdata
fxch st1
jmp r-xdata
jmp [ eax * 4 + jump_table_430df4 ]
lea eax [ edi + 0x10 ]
push eax
push ebp
call sub_4671e2
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esp + 0x2c ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp [ eax * 4 + r-xdata ]
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebp ]
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x2c ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
jne r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x44 ]
inc ecx
mov [ edx ] ecx
jmp [ ecx * 4 + jump_table_430e40 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov esi [ esi ]
jmp r-xdata
jg r-xdata
jmp r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
fstp st1
fld [ esi ]
jmp r-xdata
mov edx [ esi + 0xc ]
fstp st0
mov eax [ edx ]
fstp st0
cmp [ eax ] 0x30
jne r-xdata
fstp st1
fild [ esi ]
jmp r-xdata
mov edx [ esi ]
fstp st1
fild [ edx + 0x4 ]
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ esp + 0x3c ]
call sub_40c8a0
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x44 ]
inc ecx
mov [ edx ] ecx
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
mov [ ebp ] edx
jmp r-xdata
mov [ ebp + 0xc ] eax
push eax
call sub_44b3b8
jmp r-xdata
jmp r-xdata
push ebx
push ebp
call sub_453063
push eax
push esi
call sub_453063
push eax
call sub_445a57
test eax eax
jl r-xdata
push esi
call sub_443576
push ebp
mov [ esp + 0x24 ] eax
mov esi edx
call sub_443576
cmp esi edx
jl r-xdata
mov ecx esi
call sub_40be90
fstp [ esp + 0x20 ]
mov ecx ebp
call sub_40be90
fcomp [ esp + 0x20 ]
fnstsw ax
test ah 0x41
je r-xdata
push esi
call sub_44b390
push ebp
mov esi eax
call sub_44b390
cmp esi eax
jb r-xdata
xor esi esi
jmp r-xdata
jmp [ eax * 4 + jump_table_430e60 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ebp ]
cmp [ esp + 0x20 ] eax
jb r-xdata
push eax
call sub_413f97
add esp 0x4
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
fstp st1
fld1
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
jmp r-xdata
jg r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ esi ]
call sub_4290f0
mov esi eax
jmp r-xdata
xor edx edx
cmp [ esi ] bl
setne dl
mov esi edx
jmp r-xdata
mov eax [ esi ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov esi [ esi ]
cmp [ esi ] 0x4
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_430e88 ]
jmp r-xdata
fld [ esp + 0x28 ]
fxch st1
jmp r-xdata
dec eax
cmp eax 0x9
ja r-xdata
push 0x8
lea ecx [ esp + 0x24 ]
push ecx
add eax 0x4
push eax
call sub_435d02
fild [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp cx 0x58
jne r-xdata
push eax
call sub_44b3b8
jmp r-xdata
cmp [ esp + 0x20 ] eax
jb r-xdata
push eax
call sub_413431
add esp 0x4
mov esi eax
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x4 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
push eax
call sub_435bf6
mov esi [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp esi eax
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ebp ]
call sub_4290f0
jmp r-xdata
xor eax eax
cmp [ ebp ] bl
setne al
jmp r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ebp [ ebp ]
cmp [ ebp ] 0x4
jg r-xdata
fldz
fxch st1
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esp + 0x30 ]
fst [ esp + 0x20 ]
cmp eax 0x3
je r-xdata
jmp r-xdata
push 0x8
lea ecx [ esp + 0x24 ]
push ecx
add eax 0x4
push eax
call sub_435d02
mov esi [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp cx 0x58
jne r-xdata
push eax
call sub_413431
add esp 0x4
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
mov edx [ ebp ]
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
push eax
call sub_435bf6
mov eax [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
push 0x8
lea edx [ esp + 0x24 ]
push edx
add eax 0x4
push eax
call sub_435d02
mov eax [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp cx 0x58
jne r-xdata
sub_40b800
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0x18 ]
push edi
mov edi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
push eax
mov ecx edi
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
pop edi
jne r-xdata
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
push esi
call sub_4112ef
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
push eax
call sub_4112ef
add esp 0x8
push ebx
mov ebx [ edi + 0xc ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
pop ebx
cmp eax 0x8
je r-xdata
mov ecx [ ebx ]
push ecx
call sub_4112ef
mov edx [ ebx + 0xc ]
push edx
call sub_4112ef
add esp 0x8
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
mov [ edi + 0xc ] 0x0
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ edi ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push edi
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax edi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ edi ]
push eax
call sub_4112ef
add esp 0x8
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_40b910
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov esi ecx
mov edi eax
mov eax [ esi + 0x8 ]
cmp eax 0x1
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_40b9b0 ]
cmp ecx 0x2
je r-xdata
mov eax [ edi ]
mov ebx [ esi ]
lea ebp [ eax + ebx ]
cdq
mov ecx eax
mov edi edx
mov eax ebx
cdq
add ecx eax
adc edi edx
mov eax ebp
cdq
cmp eax ecx
jne r-xdata
push eax
call sub_4436f6
mov [ esi + 0xc ] 0x0
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx edi
call sub_40be90
fadd [ esi ]
fstp [ esi ]
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
push esi
call sub_452bcc
jmp r-xdata
cmp [ edi + 0x8 ] 0xb
je r-xdata
cmp [ edi + 0x8 ] 0x1
mov ebx [ esi ]
jne r-xdata
mov eax [ esi ]
cdq
add eax [ edi ]
adc edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] 0x2
jmp r-xdata
cmp eax 0x3
je r-xdata
mov [ esi + 0x8 ] 0x2
mov [ esi ] ecx
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
push edi
call sub_443576
add [ esi ] eax
adc [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
push edi
call sub_443676
mov ebx eax
mov eax [ esi ]
add ebx [ eax ]
push ebx
call sub_41171a
mov ebp eax
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
add esp 0x4
push ecx
push edx
push ebp
call sub_410f70
add esp 0xc
push edi
call sub_443676
push eax
push ecx
push edi
call sub_4676a3
add esp 0x4
push eax
mov eax [ esi ]
mov ecx [ eax ]
add ecx ebp
push ecx
call sub_410f70
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0xc
push eax
call sub_4112ef
mov ecx [ esi ]
mov [ ecx + 0x4 ] ebp
mov edx [ esi ]
add esp 0x4
mov [ edx ] ebx
jmp r-xdata
push esi
call sub_452bcc
jmp r-xdata
push edi
call sub_443576
add ebx eax
mov [ esi ] ebx
jmp r-xdata
mov ecx edi
call sub_40c760
add ebx eax
mov [ esi ] ebx
jmp r-xdata
mov ecx esi
call sub_40be90
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
mov [ esi ] ebp
sub_40b9e0
sub esp 0x18
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi eax
mov al [ esi + 0x9 ]
mov ecx [ esi + 0x4 ]
push edi
test al al
jne r-xdata
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov edx ecx
mov edi [ edx ]
test al al
jne r-xdata
mov ebx [ ecx + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
jmp r-xdata
mov [ esi + 0x9 ] 0x1
dec [ esi ]
cmp edi 0xa
je r-xdata
mov eax 0x1
cmp [ ebp + 0x4 ] eax
jl r-xdata
cmp edi 0x10
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
cmp edi 0xa
je r-xdata
cmp edi 0x11
je r-xdata
mov eax ebp
call sub_40d260
push eax
call sub_4434b7
mov [ esp + 0x2c ] al
mov edx [ esp + 0x2c ]
push edx
mov eax ebp
call sub_40d260
push eax
call sub_452d91
jmp r-xdata
cmp edi 0x10
jne r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx 0x2
jl r-xdata
xor eax eax
mov [ esp + 0x20 ] eax
mov eax ebp
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0x24 ] 0x0
call sub_40d260
mov esi eax
lea eax [ esp + 0x18 ]
call sub_40bf70
lea esi [ esp + 0x18 ]
call sub_4092c0
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp edi 0xf
ja r-xdata
jmp [ edi * 4 + jump_table_40bcc0 ]
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
mov eax ebp
call sub_40d260
push eax
mov eax ebp
call sub_40c600
mov ecx eax
call sub_40cfc0
add esp 0x4
test al al
mov eax ebp
je r-xdata
mov eax ebp
call sub_40d260
mov edi eax
mov eax ebp
call sub_40c600
mov esi eax
mov eax edi
call sub_40c770
test al al
mov eax ebp
jne r-xdata
mov eax ebp
call sub_40d260
mov esi eax
mov eax ebp
call sub_40c600
call sub_40c770
test al al
mov eax ebp
je r-xdata
mov eax ebp
call sub_40d260
push eax
mov eax ebp
call sub_40c600
push eax
call sub_452bfe
mov edi ebp
call sub_40bd00
jmp r-xdata
mov eax ebp
call sub_40d260
mov esi eax
mov eax ebp
call sub_40c600
mov ecx eax
mov eax esi
call sub_40cc10
test al al
jne r-xdata
mov eax ebp
call sub_40d260
push eax
mov eax ebp
call sub_40c600
push eax
call sub_45e8db
test al al
mov eax ebp
je r-xdata
mov eax ebp
call sub_40d260
push eax
mov eax ebp
call sub_40c600
push eax
call sub_4671e2
add esp 0x8
test al al
je r-xdata
mov eax ebp
call sub_40d260
push eax
mov eax ebp
call sub_40c600
push eax
call sub_4671fb
jmp r-xdata
mov eax ebp
call sub_40d260
push eax
mov eax ebp
call sub_40c600
push eax
call sub_443494
mov eax ebp
call sub_40d260
lea ebx [ esp + 0x18 ]
call sub_40bd50
mov edi ebp
call sub_40bd00
push ebx
call sub_43553d
mov esi eax
mov eax ebp
call sub_40d260
push eax
call sub_43553d
mov edi 0x3
test esi 0x40060
je r-xdata
mov eax [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
jne r-xdata
mov eax [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
mov edx [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
mov edx [ ebp + 0x8 ]
jne r-xdata
mov edi [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
jne r-xdata
mov esi [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
jne r-xdata
mov [ esp + 0x2c ] 0x0
mov ecx [ esp + 0x2c ]
push ecx
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
call sub_40c600
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x9
mov [ esi ] 0x1
call sub_40c600
mov esi eax
call sub_4092c0
mov [ esi ] 0x1
jmp r-xdata
call sub_40c600
mov esi eax
call sub_4092c0
mov [ esi ] 0x0
call sub_40c600
mov esi eax
call sub_4092c0
mov [ esi ] 0x1
jmp r-xdata
mov [ esp + 0x2c ] 0x0
mov eax [ esp + 0x2c ]
push eax
mov eax ebp
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
mov [ esp + 0x2c ] 0x1
mov ecx [ esp + 0x2c ]
push ecx
mov eax ebp
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
mov [ esp + 0x2c ] 0x0
mov edx [ esp + 0x2c ]
push edx
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
mov [ esp + 0x2c ] 0x1
mov ecx [ esp + 0x2c ]
push ecx
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
mov [ esp + 0x2c ] 0x0
mov ecx [ esp + 0x2c ]
push ecx
mov eax ebp
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
mov [ esp + 0x2c ] 0x1
mov eax [ esp + 0x2c ]
push eax
mov eax ebp
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
add esp 0x8
test al al
je r-xdata
jmp r-xdata
test eax 0x40060
je r-xdata
fld1
fstp [ esp + 0x10 ]
jmp r-xdata
cmp ecx 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ eax + 0x10 ]
cmp ecx 0x2
je r-xdata
mov edx [ edx + 0x10 ]
jmp r-xdata
cmp ecx 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edi [ edx + 0x10 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax ebp
call sub_40c600
mov ecx eax
mov eax esi
call sub_40cc10
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edi ebp
call sub_40bd00
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
mov edi ebp
mov [ esi + 0x8 ] 0x9
call sub_40bd00
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn 0x4
mov [ esp + 0x2c ] 0x1
mov edx [ esp + 0x2c ]
push edx
mov eax ebp
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
test esi 0x204
je r-xdata
test esi 0x701f8
je r-xdata
mov eax ebp
call sub_40d260
mov esi eax
call sub_4092c0
fld [ esp + 0x10 ]
fstp [ esi ]
mov [ esi + 0x8 ] edi
lea esi [ esp + 0x18 ]
call sub_4092c0
jmp r-xdata
mov esi [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xd ] 0x0
mov ecx [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp ]
mov eax [ ebp ]
jmp r-xdata
cmp [ ebp + 0xd ] 0x0
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xd ] 0x0
je r-xdata
mov esi [ ebp ]
mov [ esp + 0x2c ] 0x0
mov eax [ esp + 0x2c ]
push eax
mov eax ebp
call sub_40c600
push eax
call sub_452d91
jmp r-xdata
mov eax ebp
call sub_40c600
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x9
mov [ esi ] 0x1
test eax 0x204
je r-xdata
test eax 0x701f8
je r-xdata
test esi 0x100000
je r-xdata
call sub_40bf70
mov edi ebp
call sub_40bd00
mov edx [ ecx + 0x10 ]
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi [ ecx + 0x10 ]
mov ecx [ ecx + 0x10 ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
mov ecx [ edx + 0x10 ]
jmp r-xdata
push edx
call sub_40bee0
mov edi ebp
call sub_40bd00
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
mov ecx [ eax + 0x10 ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov esi [ ecx + 0x10 ]
jmp r-xdata
mov edi ebp
call sub_40bd00
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
test eax 0x10038
je r-xdata
test esi 0x701f8
je r-xdata
mov eax ebp
call sub_40d260
mov ecx eax
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_4160b0
fld1
add esp 0x8
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
test esi 0x10038
test esi 0x10000
je r-xdata
call sub_40b910
mov edi ebp
call sub_40bd00
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
call sub_40c110
mov edi ebp
call sub_40bd00
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
lea ecx [ esp + 0x18 ]
call sub_40be90
sub esp 0x8
mov eax ebp
fstp [ esp ]
call sub_40d260
mov ecx eax
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_42905b
fstp [ esp + 0x10 ]
jmp r-xdata
test esi 0xffff0000
je r-xdata
test eax 0x200
jne r-xdata
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
test esi 0x200
je r-xdata
fldz
fstp [ esp + 0x10 ]
jmp r-xdata
fld [ rw-data ]
fstp [ esp + 0x10 ]
jmp r-xdata
fldz
fstp [ esp + 0x10 ]
test al 0x20
je r-xdata
fld [ rw-data ]
fst [ esp + 0x10 ]
test al 0x20
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_40be90
sub esp 0x8
mov eax ebp
fstp [ esp ]
call sub_40d260
mov ecx eax
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_429038
sub esp 0x8
fstp [ esp ]
call sub_42905b
fstp [ esp + 0x10 ]
test esi 0x100000
je r-xdata
test esi 0x10038
je r-xdata
test esi 0x100000
je r-xdata
fld [ rw-data ]
fmul [ r--data ]
fstp [ esp + 0x10 ]
jmp r-xdata
test esi 0x200
jmp r-xdata
fld [ r--data ]
fstp [ esp + 0x10 ]
jmp r-xdata
fstp st0
fchs
fstp [ esp + 0x10 ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
fld [ r--data ]
mov ecx esi
fstp [ esp + 0x18 ]
mov [ esp + 0x20 ] edi
call sub_40be90
fmul [ esp + 0x10 ]
fstp [ esp + 0x10 ]
jmp r-xdata
fldz
fstp [ esp + 0x10 ]
jmp r-xdata
test esi 0x10000
jne r-xdata
je r-xdata
fld [ rw-data ]
fchs
fstp [ esp + 0x10 ]
jmp r-xdata
sub_40bd00
push ebx
mov ebx 0x1
cmp [ edi + 0x4 ] ebx
je r-xdata
dec [ edi + 0x4 ]
pop ebx
retn
cmp [ edi + 0xd ] 0x0
push esi
jne r-xdata
mov esi [ edi + 0x8 ]
push ebp
mov ebp [ esi + 0x10 ]
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov [ edi + 0x8 ] ebp
mov [ edi + 0xd ] 0x0
pop ebp
jmp r-xdata
call sub_4092c0
push esi
call sub_4112ef
add esp 0x4
mov eax [ edi + 0x8 ]
mov esi [ eax + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0xd ] bl
mov [ edi + 0x8 ] esi
mov [ edi + 0xd ] 0x0
jmp r-xdata
push eax
call sub_44b915
pop esi
sub_40bd50
push esi
mov esi eax
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax ebx
pop esi
retn
jmp [ eax * 4 + r-xdata ]
fld [ esi ]
mov eax ebx
fstp [ ebx ]
pop esi
retn
mov cl [ esi ]
mov [ ebx ] cl
mov eax ebx
pop esi
retn
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
pop esi
retn
mov ecx [ esi ]
mov [ ebx ] ecx
mov eax ebx
pop esi
retn
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov eax ebx
pop esi
retn
mov esi [ esi + 0xc ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov esi [ esi + 0xc ]
mov [ eax + 0xc ] esi
inc [ esi ]
mov [ ebx + 0xc ] eax
mov eax ebx
pop esi
retn
xor eax eax
mov esi [ esi ]
push edi
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
pop edi
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
pop esi
retn
mov edx [ esi ]
push edx
push eax
call sub_44b8a7
mov [ ebx ] eax
mov eax ebx
pop esi
retn
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
mov eax ebx
pop esi
retn
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax ]
mov ecx [ esi ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410f70
add esp 0x10
mov eax ebx
pop esi
retn
mov ecx [ esi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
mov eax ebx
pop esi
retn
mov eax [ eax + 0x4 ]
inc [ eax ]
mov eax ebx
pop esi
retn
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
mov eax ebx
pop esi
retn
sub_40be00
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
push ebx
mov ebx eax
mov eax [ esp + 0x8 ]
call sub_40bd50
pop ebx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
retn 0x4
sub_40be90
mov eax [ ecx + 0x8 ]
cmp eax 0x1
jne r-xdata
sub esp 0x8
sub eax 0x2
cmp eax 0x8
ja r-xdata
fild [ ecx ]
retn
fldz
add esp 0x8
retn
jmp [ eax * 4 + jump_table_40bebc ]
fld [ ecx ]
add esp 0x8
retn
mov eax [ ecx + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
fild [ ecx ]
add esp 0x8
retn
mov edx [ ecx ]
fild [ edx + 0x4 ]
add esp 0x8
retn
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_413f97
add esp 0x4
add esp 0x8
retn
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
fld1
add esp 0x8
retn
push 0x8
lea ecx [ esp + 0x4 ]
push ecx
add eax 0x4
push eax
call sub_435d02
fild [ esp + 0xc ]
add esp 0xc
add esp 0x8
retn
cmp cx 0x58
jne r-xdata
sub_40bee0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push esi
mov esi eax
mov eax [ esi + 0x8 ]
cmp eax 0x1
jne r-xdata
mov ecx eax
sub ecx 0x2
cmp ecx 0x9
ja r-xdata
cmp eax 0x3
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
movzx ecx [ ecx + lookup_table_40bf5c ]
jmp [ ecx * 4 + jump_table_40bf50 ]
mov ecx [ ebp + 0x8 ]
call sub_40be90
fdivr [ esi ]
fstp [ esi ]
mov ecx esi
call sub_40be90
fstp [ esp + 0x8 ]
call sub_4092c0
fld [ esp + 0x8 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
push eax
call sub_4436f6
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bf70
push ebx
push edi
mov edi eax
mov eax [ esi + 0x8 ]
cmp eax 0x1
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0xc ]
pop edi
pop ebx
test eax eax
jne r-xdata
movzx eax [ eax + lookup_table_40bff0 ]
jmp [ eax * 4 + jump_table_40bfe0 ]
cmp eax 0x2
jne r-xdata
mov eax [ esi ]
mov edx [ edi ]
mov ecx eax
imul ecx edx
imul edx
mov edi eax
mov eax ecx
mov ebx edx
cdq
cmp eax edi
jne r-xdata
push eax
call sub_4436f6
mov [ esi + 0xc ] 0x0
mov eax esi
retn
mov eax esi
retn
mov ecx edi
call sub_40be90
fmul [ esi ]
fstp [ esi ]
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
push esi
call sub_452bcc
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ edi ]
cdq
push ecx
push edx
push eax
call sub_4233f0
mov [ esi + 0x8 ] 0x2
mov [ esi + 0x4 ] edx
mov [ esi ] eax
jmp r-xdata
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
cmp edx ebx
jne r-xdata
push edi
call sub_443576
mov ecx [ esi + 0x4 ]
push ecx
mov ecx [ esi ]
push ecx
push edx
push eax
call sub_4233f0
mov [ esi + 0x4 ] edx
mov [ esi ] eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov [ esi ] ecx
sub_40c000
cmp [ esi + 0x4 ] 0x0
push ebx
jne r-xdata
cmp [ esi + 0xd ] 0x0
je r-xdata
mov ebx [ esi ]
push edi
call sub_409210
inc [ esi + 0x4 ]
pop ebx
retn
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esi + 0x8 ]
push edi
call sub_409210
inc [ esi + 0x4 ]
mov [ esi + 0xd ] 0x0
pop ebx
retn
xor ebx ebx
jmp r-xdata
mov ebx eax
mov eax edi
call sub_40bd50
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov [ ebx + 0x10 ] eax
jmp r-xdata
mov [ ebx + 0x10 ] eax
inc [ esi + 0x4 ]
mov [ esi + 0x8 ] ebx
pop ebx
retn
sub_40c060
push esi
mov esi ecx
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_41171a
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn
sub_40c0b0
mov eax [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ecx ]
cmp eax edx
jb r-xdata
mov eax 0x1
jmp r-xdata
retn
mov eax [ esi ]
jmp sub_40c0e0
mov edx eax
sub_40c0e0
push esi
test edx edx
jbe r-xdata
xor eax eax
pop esi
retn
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
pop esi
sbb eax eax
and eax 0xfffffffe
inc eax
retn
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
sub_40c110
push ecx
mov eax [ esi + 0x8 ]
cmp eax 0x4
jne r-xdata
dec eax
cmp eax 0xa
ja r-xdata
cmp [ edi + 0x8 ] 0x4
jne r-xdata
pop ecx
retn
movzx eax [ eax + lookup_table_42b863 ]
jmp [ eax * 4 + jump_table_42b857 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov ecx [ edi + 0xc ]
mov eax [ esi + 0xc ]
push ecx
call sub_40c140
cmp [ edi + 0x8 ] 0xb
jne r-xdata
push esi
call sub_45e890
jmp r-xdata
push edi
call sub_452e2a
jmp r-xdata
mov eax edi
mov ecx esi
call sub_40b910
pop ecx
retn
sub_40c140
sub esp 0x10
push ebx
push esi
mov esi eax
cmp esi [ esp + 0x1c ]
je r-xdata
push esi
lea eax [ esp + 0xc ]
push eax
push esi
call sub_44cd63
push eax
call sub_40df50
lea ecx [ esp + 0x8 ]
call sub_402620
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x1c ]
push 0x0
or eax 0xffffffff
mov ecx esi
call sub_40c170
pop esi
pop ebx
add esp 0x10
retn 0x4
sub_40c170
push ebp
push esi
push edi
mov edi eax
mov esi ecx
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ebp [ esp + 0x10 ]
mov eax [ ebx + 0x4 ]
cmp ebp eax
jae r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ edi + ebp ]
cmp ecx eax
jbe r-xdata
sub eax ebp
mov edi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
jmp r-xdata
dec [ eax ]
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
add eax edi
call sub_4034b0
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov edx [ esi + 0x4 ]
mov [ esi + 0xc ] eax
lea eax [ edx + edi + 0x1 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ esp + 0x20 ] eax
call sub_410f70
mov edx [ esp + 0x20 ]
add esp 0x10
mov [ esi ] edx
jmp r-xdata
mov ecx [ ebx ]
lea eax [ edi + edi ]
push eax
mov eax [ esi + 0x4 ]
lea edx [ ecx + ebp * 2 ]
mov ecx [ esi ]
push edx
lea edx [ ecx + eax * 2 ]
push edx
call sub_410f70
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
add esp 0xc
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_40c250
cmp [ esi + 0x9 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x4 ]
push eax
call sub_4112ef
dec [ esi ]
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
pop edi
retn
dec [ esi ]
mov [ esi + 0x9 ] 0x1
pop edi
retn
sub_40c2a0
inc [ eax ]
mov ecx [ eax ]
push edi
xor edi edi
mov [ edx ] ecx
lea esp [ esp ]
sub edx 0x47
je r-xdata
inc ecx
mov [ eax ] ecx
jmp r-xdata
inc edi
inc ecx
mov [ eax ] ecx
jmp r-xdata
sub edx 0x1
jne r-xdata
mov ecx [ eax ]
mov edx [ esi + 0x4 ]
mov edx [ edx + ecx * 4 ]
movsx edx [ edx + 0x8 ]
cmp edx 0x47
jge r-xdata
sub edx 0x37
jne r-xdata
test edi edi
jne r-xdata
jmp r-xdata
dec edi
inc ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov [ edx ] ecx
inc ecx
mov [ eax ] ecx
xor eax eax
pop edi
retn 0x8
mov eax ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
mov ecx [ esp + 0x8 ]
push eax
push 0x6f
push ecx
call sub_45e62e
mov eax 0x1
pop edi
retn 0x8
sub_40c300
sub esp 0x18
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
push edi
mov edi eax
mov edx [ edi ]
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebp + 0x4 ]
mov edx [ eax + edx * 4 ]
mov esi [ edx ]
lea ecx [ esp + 0x34 ]
xor ebx ebx
push ecx
xor ecx ecx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x1c ] ebx
call sub_40c3e0
mov esi [ esp + 0x30 ]
cmp esi ebx
je r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ esp + 0x2c ]
push eax
push 0x79
push ecx
call sub_45e62e
inc [ edi ]
cmp [ esi + 0x8 ] 0x5
mov ebx 0x4e
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
mov eax [ edi ]
mov edx [ ebp + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ esp + 0x2c ]
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
push edx
mov eax edi
mov ecx ebp
call sub_40c620
test eax eax
jne r-xdata
sub esp 0x10
mov eax esi
mov ebx esp
call sub_40bd50
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x3c ]
push eax
push edi
push ebp
call sub_47d9ce
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ esp + 0x30 ]
jmp r-xdata
xor eax eax
mov ecx [ edi ]
mov edx [ ebp + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov esi [ esp + 0x2c ]
push ecx
push 0xaa
push esi
call sub_45e62e
mov eax 0x1
jmp r-xdata
mov ebp [ esp + 0x34 ]
push esi
mov ebx ebp
call sub_409210
mov edi [ esp + 0x2c ]
cmp [ edi + 0xfd ] 0x0
jne r-xdata
mov edx [ edi ]
mov eax [ ebp + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] bx
je r-xdata
push ebp
call sub_443e34
test al al
je r-xdata
cmp [ edi + 0xfe ] 0x0
jne r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x2c ]
push ecx
push 0x7c
push edx
call sub_45e62e
mov eax 0x1
jmp r-xdata
mov eax ebp
lea ebx [ esp + 0x18 ]
call sub_40bd50
cmp [ edi + 0xfd ] 0x0
je r-xdata
cmp [ edi + 0xfe ] 0x0
je r-xdata
push ebx
call sub_457f49
push ebx
call sub_453081
push eax
call sub_4112d5
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
mov ebx ebp
call sub_409210
lea esi [ esp + 0x18 ]
call sub_4092c0
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push edi
call sub_47151f
lea eax [ esp + 0x18 ]
push eax
call sub_453081
push eax
call sub_4112d5
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_409210
push esi
lea ebx [ esp + 0x1c ]
call sub_409210
sub_40c3e0
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
cmp [ rw-data ] ecx
jne r-xdata
sub ecx 0x1
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
push esi
push rw-data
call sub_435959
push eax
call sub_453155
test eax eax
jne r-xdata
push rw-data
push esi
call sub_4042f0
test al al
je r-xdata
mov ecx [ esp + 0x8 ]
push ecx
push esi
push rw-data
call sub_453155
jmp r-xdata
sub ecx 0xe
jne r-xdata
mov edx [ esp + 0x8 ]
push edx
push esi
push rw-data
call sub_435959
push eax
call sub_453155
jmp r-xdata
push rw-data
push esi
call sub_4042f0
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
test eax eax
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
push eax
push esi
push rw-data
call sub_453155
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn 0x8
mov eax 0x1
retn 0x8
mov ecx [ eax + 0x10 ]
mov edx [ esp + 0x8 ]
and ecx 0xff00
mov [ edx ] ecx
mov edx [ eax + 0x10 ]
mov ecx [ esp + 0x8 ]
and edx 0xff00
mov [ ecx ] edx
jmp r-xdata
mov eax [ eax + 0x14 ]
sub_40c480
push ebx
push esi
xor ebx ebx
push edi
mov edi r--data
mov esi rw-data
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] 0x1
mov [ rw-data ] 0x9
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
call sub_401b70
mov edi r--data
mov esi rw-data
call sub_401b70
mov ecx rw-data
call sub_40c060
mov ecx rw-data
call sub_40c060
mov ecx rw-data
call sub_40c060
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
inc [ eax ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
inc [ eax ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov esi rw-data
lea edi [ ebx + 0xd ]
mov ecx esi
call sub_40c060
add esi 0x10
sub edi 0x1
jns r-xdata
pop edi
pop esi
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0xffffffff
mov eax rw-data
pop ebx
retn
sub_40c600
cmp [ eax + 0x4 ] 0x2
jne r-xdata
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ eax ]
retn
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x10 ]
mov eax [ ecx + 0x10 ]
retn
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x10 ]
retn
sub_40c620
sub esp 0x118
push ebx
push ebp
mov ebp [ esp + 0x128 ]
push esi
push edi
mov esi eax
mov eax [ esi ]
mov edi ecx
mov ecx [ edi + 0x4 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] ebx
mov edx [ ecx + eax * 4 - 0x4 ]
lea eax [ ecx + eax * 4 ]
movsx ecx [ edx + 0xa ]
mov edx [ eax ]
cmp [ edx + 0x8 ] 0x4e
mov [ esp + 0x24 ] ecx
jne r-xdata
mov esi [ ebp ]
cmp [ esi + 0x8 ] 0x5
jne r-xdata
inc [ esi ]
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x134 ]
push esi
push edi
mov [ esp + 0x30 ] eax
call sub_40ab50
test eax eax
jne r-xdata
mov eax esi
call sub_40e8f0
jmp r-xdata
mov eax [ esi ]
xor edi edi
cmp ebx edi
mov [ eax + 0x210 ] edi
jle r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
mov eax 0x1
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c760
test eax eax
jl r-xdata
mov ecx [ esp + 0x134 ]
mov edx [ ebp ]
push 0x0
push ecx
push edx
call sub_40d030
add esp 0xc
mov [ ebp ] eax
test eax eax
je r-xdata
mov esi [ esp + edi * 4 + 0x28 ]
mov edx [ ebp ]
call sub_40d0f0
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x118
retn 0xc
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x12c ]
push edx
push 0x7b
push eax
jmp r-xdata
mov eax [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x12c ]
push eax
push 0x7a
push ecx
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
xor eax eax
call sub_45e62e
mov eax [ edx + eax * 4 - 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x12c ]
push ecx
push 0x7b
push edx
inc eax
lea ecx [ esp + 0x10 ]
mov [ esi ] eax
call sub_40c760
mov edx [ esi ]
mov [ esp + ebx * 4 + 0x28 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
inc ebx
cmp [ ecx + 0x8 ] 0x4e
je r-xdata
sub_40c740
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp edi eax
jb r-xdata
cmp ebx 0xffffffff
je r-xdata
sub eax edi
mov ebx eax
lea ecx [ edi + ebx ]
cmp ecx eax
jbe r-xdata
mov eax esi
call sub_402ae0
mov edx [ esi + 0x4 ]
mov eax [ esi ]
sub edx edi
sub edx ebx
lea ecx [ edx + edx + 0x2 ]
push ecx
lea edx [ edi + ebx ]
lea ecx [ eax + edx * 2 ]
push ecx
lea edx [ eax + edi * 2 ]
push edx
call sub_410f70
sub [ esi + 0x4 ] ebx
add esp 0xc
pop ebx
retn
sub_40c760
mov eax [ ecx + 0x8 ]
cmp eax 0x1
jne r-xdata
sub esp 0x8
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ecx ]
retn
xor eax eax
add esp 0x8
retn
jmp [ eax * 4 + jump_table_42987d ]
mov eax [ ecx + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ecx ]
add esp 0x8
retn
fld [ ecx ]
add esp 0x8
jmp sub_4290f0
xor eax eax
cmp [ ecx ] al
setne al
add esp 0x8
retn
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add esp 0x8
retn
mov ecx [ ecx ]
cmp [ ecx ] 0x4
jg r-xdata
push eax
call sub_413431
add esp 0x4
add esp 0x8
retn
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
mov edx [ ecx ]
lea eax [ esp ]
push eax
mov eax [ ecx + 0x4 ]
push edx
push eax
call sub_435bf6
mov eax [ esp + 0xc ]
add esp 0xc
add esp 0x8
retn
push 0x8
lea ecx [ esp + 0x4 ]
push ecx
add eax 0x4
push eax
call sub_435d02
mov eax [ esp + 0xc ]
add esp 0xc
add esp 0x8
retn
cmp cx 0x58
jne r-xdata
sub_40c770
mov ecx [ esi + 0x8 ]
sub esp 0xc
push ebx
push edi
mov edi eax
mov eax [ edi + 0x8 ]
lea eax [ eax + eax * 2 ]
lea edx [ ecx + eax * 4 ]
mov eax [ edx * 4 + rw-data ]
cmp eax 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
mov ecx edi
call sub_40c760
mov ecx esi
mov edi eax
call sub_40c760
xor ecx ecx
cmp edi eax
sub eax 0x2
cmp eax 0x7
ja r-xdata
mov ecx edi
call sub_40be90
fstp [ esp + 0xc ]
mov ecx esi
call sub_40be90
fcomp [ esp + 0xc ]
fnstsw ax
test ah 0x41
je r-xdata
xor al al
jmp r-xdata
jmp [ eax * 4 + jump_table_42a905 ]
mov eax 0x1
jmp r-xdata
pop edi
xor eax eax
pop ebx
add esp 0xc
retn
pop edi
pop ebx
add esp 0xc
retn
push 0x0
push esi
call sub_453063
push eax
push edi
call sub_453063
push eax
call sub_445a57
xor ecx ecx
test eax eax
jmp r-xdata
push edi
call sub_443576
push esi
mov ebx eax
mov edi edx
call sub_443576
cmp edi edx
jg r-xdata
push edi
call sub_44b390
push esi
mov edi eax
call sub_44b390
cmp edi eax
sbb eax eax
neg eax
jmp r-xdata
setl cl
mov al cl
jl r-xdata
cmp ebx eax
jae r-xdata
sub_40c7e0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx 0x1
cmp [ edi + 0x8 ] ebx
je r-xdata
mov [ esp + 0x38 ] 0x0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ r--data ]
fstp [ esp ]
call sub_42905b
mov ecx [ edi + 0x4 ]
fstp [ esp + 0x38 ]
mov ecx [ ecx ]
call sub_40be90
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40be90
fmul [ esp + 0x38 ]
sub esp 0x8
fsub [ r--data ]
fstp [ esp ]
call sub_4290a6
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
call sub_40be90
fmul [ esp + 0x38 ]
sub esp 0x8
fadd [ r--data ]
fstp [ esp ]
call sub_42907e
fdiv [ esp + 0x38 ]
mov esi [ ebp + 0xc ]
fstp [ esp + 0x38 ]
call sub_4092c0
fld [ esp + 0x38 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
cmp [ edi + 0x8 ] ebx
je r-xdata
push esi
call sub_443576
mov edi eax
mov ebx edx
call sub_4092c0
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40c8a0
cmp [ edi + 0x9 ] 0x0
push esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x30 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_45234f
dec [ edi ]
mov [ edi + 0x9 ] 0x1
pop esi
retn
push ebx
push ebp
mov ebp [ edi + 0x4 ]
mov ebx [ ebp + 0x30 ]
test ebp ebp
je r-xdata
dec [ edi ]
pop ebp
mov [ edi + 0x4 ] ebx
pop ebx
mov [ edi + 0x9 ] 0x0
pop esi
retn
lea esi [ ebp + 0x20 ]
call sub_4092c0
lea esi [ ebp + 0x10 ]
call sub_4092c0
push ebp
call sub_4112ef
add esp 0x4
sub_40c8f0
sub esp 0x3c
push ebx
xor ebx ebx
push esi
push edi
mov [ esp + 0xc ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] bl
call sub_40dc70
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ ecx + rw-data ] r--data
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
lea ecx [ eax - 0x49c ]
mov [ eax + rw-data ] ecx
mov eax rw-data
call sub_410900
mov ecx rw-data
call sub_40c060
mov ecx rw-data
call sub_40c060
mov ecx rw-data
call sub_40c060
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40c060
mov edi 0x1
mov ecx rw-data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ebx
call sub_40c060
mov esi rw-data
call sub_40d450
mov esi rw-data
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40d350
mov ecx rw-data
call sub_40c060
mov [ rw-data ] ebx
mov [ rw-data ] ebx
push ebx
push rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_4045e0
lea eax [ esp + 0x10 ]
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ebx
call sub_4108d0
mov edx [ rw-data ]
mov ebx [ edx + 0x4 ]
add ebx rw-data
call sub_40e420
lea esi [ esp + 0x30 ]
call sub_4092c0
lea esi [ esp + 0x10 ]
call sub_4092c0
xor ebx ebx
push 0xfffffff6
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] ebx
call [ GetStdHandle@IAT ]
cmp eax ebx
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] ebx
mov esi eax
push esi
call sub_4437fa
add esp 0x4
push eax
mov [ rw-data ] eax
call sub_44b6bc
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov eax 0xa
pop edi
mov ecx 0xfa
pop esi
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x64
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov eax rw-data
pop ebx
add esp 0x3c
retn
sub_40cc10
sub esp 0x28
push ebx
push esi
mov esi ecx
push edi
mov edi eax
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov ecx [ ecx * 4 + rw-data ]
dec ecx
cmp ecx 0xa
ja r-xdata
xor al al
jmp r-xdata
jmp [ ecx * 4 + jump_table_40cca4 ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
mov ecx esi
call sub_40c760
mov ecx edi
mov esi eax
call sub_40c760
cmp esi eax
jne r-xdata
cmp edx 0x4
jne r-xdata
push esi
call sub_443576
push edi
mov esi eax
mov ebx edx
call sub_443576
cmp esi eax
jne r-xdata
mov ecx esi
call sub_40be90
fstp [ esp + 0x10 ]
mov ecx edi
call sub_40be90
fld [ esp + 0x10 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
push esi
call sub_44b390
push edi
mov esi eax
call sub_44b390
xor ecx ecx
cmp esi eax
sete cl
mov al cl
jmp r-xdata
push esi
call sub_4434cc
push edi
mov bl al
call sub_4434cc
xor ecx ecx
cmp bl al
sete cl
mov al cl
jmp r-xdata
push esi
call sub_443560
push edi
mov edx eax
call sub_443560
xor ecx ecx
cmp edx eax
sete cl
mov al cl
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
cmp eax 0xb
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
cmp [ edi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x4
mov edi [ edi + 0xc ]
jne r-xdata
cmp ebx edx
jne r-xdata
jmp r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
mov eax esi
lea ebx [ esp + 0x20 ]
call sub_40bd50
mov eax edi
lea ebx [ esp + 0x10 ]
call sub_40bd50
lea eax [ esp + 0x20 ]
push eax
call sub_467046
push ebx
call sub_467046
lea edx [ esp + 0x20 ]
push edx
call sub_443676
push ebx
mov esi eax
call sub_443676
cmp esi eax
je r-xdata
cmp edx eax
jne r-xdata
push edi
call sub_452e2a
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov esi [ esi + 0xc ]
mov ecx [ edi + 0x4 ]
mov edi [ edi ]
mov edx [ esi ]
push edi
push edx
mov edx [ esi + 0x4 ]
xor eax eax
call sub_40e740
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x28
retn
push edi
push esi
call sub_437fad
add esp 0x8
test al al
je r-xdata
push esi
push ecx
lea ecx [ esp + 0x18 ]
push ecx
call sub_4676a3
add esp 0x4
push eax
lea edx [ esp + 0x28 ]
push edx
call sub_4676a3
push eax
call sub_411b63
add esp 0xc
test eax eax
lea esi [ esp + 0x10 ]
sete bl
call sub_4092c0
lea esi [ esp + 0x20 ]
call sub_4092c0
mov al bl
jmp r-xdata
mov esi ebx
call sub_4092c0
lea esi [ esp + 0x20 ]
call sub_4092c0
push esi
call sub_443676
push edi
mov ebx eax
call sub_443676
cmp ebx eax
jne r-xdata
push esi
call sub_452e2a
jmp r-xdata
mov eax 0x1
jmp r-xdata
push esi
call sub_443676
push eax
push ecx
push edi
call sub_4676a3
add esp 0x4
push eax
push esi
call sub_4676a3
push eax
call sub_411b63
add esp 0xc
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_40ccd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
mov edi ecx
call [ __import_lookup_table_0(KERNEL32:QueryPerformanceCounter) ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
fldz
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
jmp r-xdata
mov edx [ ebp + 0x8 ]
fild [ esp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
fstp [ esp + 0x10 ]
call sub_40be90
fsubr [ esp + 0x10 ]
fstp [ esp + 0x10 ]
call sub_40dd20
fdivr [ esp + 0x10 ]
mov esi [ ebp + 0xc ]
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40cd40
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
push ebx
mov [ esi + 0xc ] eax
lea eax [ edi + 0x10 ]
lea ebx [ esi + 0x10 ]
call sub_40bd50
lea eax [ edi + 0x20 ]
lea ebx [ esi + 0x20 ]
call sub_40bd50
mov eax esi
pop ebx
retn
sub_40cd80
sub esp 0x18
push esi
xor eax eax
push 0xffffffff
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x2c ]
push edx
mov [ esp + 0x20 ] 0x1
call sub_40ab50
test eax eax
jne r-xdata
lea esi [ esp + 0x8 ]
call sub_4092c0
mov eax 0x1
jmp r-xdata
lea ecx [ esp + 0x8 ]
call sub_40cfb0
mov ecx [ esp + 0x24 ]
test al al
setne al
lea esi [ esp + 0x8 ]
mov [ ecx ] al
call sub_4092c0
xor eax eax
pop esi
add esp 0x18
retn 0x8
sub_40cde0
sub esp 0x58
mov edx [ esp + 0x60 ]
push ebx
mov ebx [ esp + 0x60 ]
push ebp
push esi
push edi
lea eax [ esp + 0x17 ]
push eax
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x1
call sub_40cd80
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0xc
mov esi [ esp + 0x70 ]
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x18 ]
mov edx [ ecx + eax * 4 ]
xor edi edi
cmp [ edx + 0x8 ] di
jne r-xdata
movsx ecx [ edx + 0xa ]
push ecx
push 0xa1
push ebx
call sub_45e62e
jmp r-xdata
cmp [ edx ] 0x5
jne r-xdata
mov ebp [ esp + 0x74 ]
inc eax
mov [ esp + 0x18 ] eax
mov ebx [ ecx + eax * 4 ]
mov edx 0x7f
cmp [ ebx + 0x8 ] dx
jne r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
lea eax [ esp + 0x38 ]
mov [ esp + 0x70 ] 0x0
xor bl bl
call sub_40dce0
mov eax [ ebp ]
lea edx [ eax - 0x1 ]
mov [ esp + 0x3c ] edx
mov dl [ esp + 0x17 ]
mov [ esp + 0x38 ] edi
test dl dl
je r-xdata
mov ebx r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov edi [ ecx + eax * 4 ]
cmp [ edi + 0x8 ] dx
je r-xdata
mov [ esp + 0x20 ] edi
jmp r-xdata
mov [ esp + 0x20 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
push edx
lea edi [ esp + 0x2c ]
call sub_402cc0
mov ecx [ esp + 0x6c ]
push ebp
push edi
call sub_40e780
mov [ esp + 0x28 ] ebx
mov ebx edi
call sub_40d1e0
mov ecx [ esp + 0x2c ]
push ecx
call sub_4112ef
add esp 0x4
mov edx eax
inc eax
mov [ esp + 0x18 ] eax
mov ecx [ ecx + edx * 4 ]
push ecx
lea edi [ esp + 0x2c ]
call sub_402cc0
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x18 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
mov [ esp + 0x74 ] edi
mov edi edi
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x6c ]
mov [ ebp ] eax
add ebx 0x16c
lea eax [ esp + 0x38 ]
call sub_40cfe0
lea esi [ esp + 0x58 ]
call sub_4092c0
lea esi [ esp + 0x48 ]
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0xc
cmp eax edi
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
test bl bl
jne r-xdata
mov esi eax
mov [ esp + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] di
jne r-xdata
mov eax [ ebp ]
lea ecx [ eax + 0x1 ]
mov [ ebp ] ecx
cmp eax [ rw-data ]
jg r-xdata
mov eax [ eax ]
cmp eax 0x8
jne r-xdata
sub eax 0x4
je r-xdata
cmp [ esp + 0x74 ] edi
jne r-xdata
mov eax 0x1
mov [ esp + 0x1c ] eax
cmp [ esi + 0x8 ] eax
jbe r-xdata
sub eax 0x2
je r-xdata
dec [ esp + 0x74 ]
jmp r-xdata
lea eax [ ecx - 0x1 ]
mov bl 0x1
mov [ esp + 0x40 ] eax
test dl dl
jne r-xdata
mov ecx [ esi + 0x4 ]
lea ecx [ ecx + eax * 4 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ecx ]
cmp [ ecx + 0x8 ] di
jne r-xdata
cmp [ esp + 0x74 ] edi
jne r-xdata
sub eax 0x1
jne r-xdata
jmp r-xdata
inc eax
mov [ esp + 0x1c ] eax
cmp eax [ esi + 0x8 ]
jb r-xdata
cmp [ ecx ] 0x5
jne r-xdata
cmp [ esp + 0x70 ] 0x1
je r-xdata
cmp [ esp + 0x74 ] edi
jne r-xdata
cmp [ esp + 0x70 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov ecx [ esp + 0x6c ]
push 0xffffffff
push 0x76
push ecx
call sub_45e62e
lea edx [ esp + 0x38 ]
push edx
call sub_452334
jmp r-xdata
mov [ esp + 0x70 ] 0x1
test dl dl
jne r-xdata
cmp [ esp + 0x70 ] 0x1
je r-xdata
mov [ esp + 0x20 ] eax
jmp r-xdata
inc [ esp + 0x74 ]
jmp r-xdata
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov edx [ esp + 0x6c ]
push 0xffffffff
push 0x76
push edx
call sub_45e62e
lea eax [ esp + 0x38 ]
push eax
call sub_452334
jmp r-xdata
test dl dl
jne r-xdata
mov eax [ esp + 0x6c ]
dec ecx
mov [ eax + 0xf4 ] ecx
lea ecx [ esp + 0x17 ]
push ecx
push eax
lea ecx [ esp + 0x24 ]
mov edx esi
mov [ esp + 0x24 ] 0x1
call sub_40cd80
test eax eax
jne r-xdata
lea ecx [ esp + 0x38 ]
push ecx
call sub_452334
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x1c ]
lea ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] di
jne r-xdata
mov edx [ ebp ]
mov ecx [ esp + 0x6c ]
dec edx
mov [ ecx + 0xf4 ] edx
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx edx [ eax + 0xa ]
push edx
push 0xa1
push ecx
call sub_45e62e
lea eax [ esp + 0x38 ]
push eax
call sub_452334
jmp r-xdata
cmp [ edx ] 0x5
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov edx [ ebp ]
mov ecx [ esp + 0x6c ]
dec edx
mov [ ecx + 0xf4 ] edx
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx edx [ eax + 0xa ]
push edx
push 0x72
push ecx
call sub_45e62e
lea eax [ esp + 0x38 ]
push eax
call sub_452334
jmp r-xdata
mov dl [ esp + 0x17 ]
test dl dl
je r-xdata
mov eax [ ebp ]
mov [ esp + 0x20 ] eax
jmp r-xdata
sub_40cfb0
mov eax [ ecx + 0x8 ]
cmp eax 0x9
jne r-xdata
dec eax
cmp eax 0xa
ja r-xdata
mov al [ ecx ]
retn
xor al al
retn
jmp [ eax * 4 + jump_table_4297a9 ]
cmp [ ecx ] 0x0
setne al
retn
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
jne r-xdata
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx [ ecx + 0xc ]
push ecx
call sub_437bfd
xor ecx ecx
test al al
sete cl
mov al cl
retn
xor eax eax
cmp [ ecx ] eax
setne al
retn
mov edx [ ecx ]
cmp [ edx ] 0x0
setne al
retn
mov al 0x1
retn
sub_40cfe0
cmp [ ebx + 0x9 ] 0x0
push edi
mov edi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push edi
push eax
call sub_471812
inc [ ebx ]
mov [ ebx + 0x9 ] 0x0
pop edi
retn
push esi
push 0x38
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
xor esi esi
mov [ esi + 0x30 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
mov esi eax
call sub_40cd40
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x30 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
sub_40d030
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx 0x5
cmp [ ebp + 0x8 ] ebx
jne r-xdata
pop ebp
xor eax eax
pop ebx
retn
cmp [ esp + 0x10 ] 0x0
push esi
push edi
mov edi [ esp + 0x1c ]
je r-xdata
mov esi ebp
call sub_40e7c0
jmp r-xdata
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov eax ebp
call sub_40d120
test eax eax
jl r-xdata
mov eax ebp
call sub_40e8f0
jmp r-xdata
mov eax [ ebp ]
mov [ eax + 0x210 ] 0x0
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ ebp ]
mov edx [ ecx ]
mov esi eax
cmp [ edx + esi * 4 ] 0x0
je r-xdata
lea ebx [ esp + 0x1c ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ecx ]
mov eax [ ecx + esi * 4 ]
pop edi
pop esi
pop ebp
pop ebx
retn
jmp r-xdata
xor eax eax
jmp r-xdata
mov edi r--data
mov ebx eax
call sub_40d420
mov esi [ ebx + 0x4 ]
add ebx 0x4
mov edx ebp
call sub_40d0f0
sub edi 0x1
je r-xdata
mov ecx [ ebp ]
mov edx [ ecx ]
mov [ edx + esi * 4 ] eax
mov eax [ ebp ]
mov ecx [ eax ]
mov eax [ ecx + esi * 4 ]
pop edi
pop esi
pop ebp
pop ebx
retn
sub_40d0f0
cmp [ edx + 0x8 ] 0x5
jne r-xdata
xor al al
retn
mov eax [ edx ]
mov ecx [ eax + 0x210 ]
cmp ecx 0x40
jge r-xdata
mov [ eax + ecx * 4 + 0x10c ] esi
mov eax [ edx ]
inc [ eax + 0x210 ]
mov al 0x1
retn
sub_40d120
push edi
mov edi eax
cmp [ edi + 0x8 ] 0x5
jne r-xdata
or eax 0xffffffff
pop edi
retn
call sub_40d170
test al al
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x20c ]
push esi
xor esi esi
test edx edx
jle r-xdata
mov eax esi
pop esi
pop edi
retn
mov eax [ ecx + 0x8 ]
add ecx 0x10c
mov edi edx
lea esp [ esp ]
cdq
idiv [ ecx - 0x100 ]
mov edx [ ecx ]
add ecx 0x4
imul edx eax
add esi edx
sub edi 0x1
jne r-xdata
sub_40d170
mov ecx [ eax ]
mov eax [ ecx + 0x20c ]
cmp eax [ ecx + 0x210 ]
jne r-xdata
xor al al
retn
push esi
test eax eax
jle r-xdata
mov al 0x1
pop esi
retn
xor edx edx
add ecx 0x10c
lea ecx [ ecx ]
xor al al
pop esi
retn
cmp esi [ ecx - 0x100 ]
jge r-xdata
inc edx
add ecx 0x4
cmp edx eax
jl r-xdata
mov esi [ ecx ]
test esi esi
jl r-xdata
sub_40d1e0
cmp [ ebx + 0x8 ] 0x0
jbe r-xdata
mov [ ebx + 0x8 ] 0x0
retn
push ebp
push esi
push edi
xor edi edi
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
mov eax esi
call sub_40d240
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + edi * 4 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
mov ebp [ esi ]
test ebp ebp
je r-xdata
push esi
call sub_4112ef
add esp 0x4
mov ecx ebp
call sub_402620
push ebp
call sub_4112ef
add esp 0x4
jmp r-xdata
sub_40d280
mov eax [ ecx + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax [ ecx + 0x64 ]
jge r-xdata
xor eax eax
retn 0x4
mov [ ecx + 0x28 ] 0xffffffff
xor eax eax
retn 0x4
mov edx [ ecx + 0x60 ]
lea eax [ edx + eax * 4 ]
mov edx [ eax ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ edx ]
cmp [ edx + 0x18 ] 0x0
je r-xdata
mov eax [ eax ]
mov ecx [ esp + 0x4 ]
mov edx [ eax ]
mov eax [ edx ]
push ecx
mov ecx [ edx + 0x18 ]
push ecx
push eax
call [ __import_lookup_table_10(USER32:TranslateAcceleratorW) ]
test eax eax
je r-xdata
mov eax 0x1
retn 0x4
sub_40d2a0
push ebp
mov ebp [ esp + 0x8 ]
cmp [ ebp ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x4
push esi
mov esi [ ebx + 0x64 ]
push edi
test esi esi
ja r-xdata
xor edi edi
xor eax eax
inc edi
cmp edi esi
jb r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x1c0 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x60 ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0x60 ]
mov eax [ edx + edi * 4 ]
mov eax [ eax ]
mov ecx [ eax ]
push ebp
push ecx
call [ IsDialogMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov edx [ eax ]
push ebp
push eax
mov eax [ edx + 0x14 ]
call eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp ]
push ecx
call sub_4340ec
add esp 0x4
movzx eax ax
cmp ax [ rw-data ]
je r-xdata
cmp ax [ rw-data ]
jne r-xdata
sub_40d2d0
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
push ebp
mov esi eax
call sub_4112d5
mov edi eax
mov eax [ esi + 0xc ]
add esp 0x4
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push ebx
call sub_4013e0
mov eax [ esi + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
push ecx
call sub_446547
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esi ]
mov ebx eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push edx
push ebx
call sub_410f70
add esp 0x10
mov [ esi ] ebx
pop ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
add eax edi
call sub_4034b0
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
lea eax [ edi + edi ]
push eax
lea eax [ edx + ecx * 2 ]
push ebp
push eax
call sub_410f70
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
add esp 0xc
xor edx edx
pop edi
mov [ ecx + eax * 2 ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40d330
push esi
mov esi eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
push ebx
call sub_4013e0
push edi
call sub_4112d5
add esp 0x4
mov ecx [ esi + 0x4 ]
lea edx [ ecx + eax + 0x1 ]
push edx
call sub_446547
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
mov edx [ esi ]
push edx
push ebx
call sub_410f70
add esp 0x10
mov [ esi ] ebx
pop ebx
jmp r-xdata
push edi
mov eax esi
call sub_40d2d0
pop esi
retn
sub_40d350
push edi
lea eax [ esi + 0x8 ]
mov [ esi ] 0x0
call sub_410480
lea ecx [ esi + 0x8c ]
call sub_40c060
lea ecx [ esi + 0x9c ]
call sub_40c060
lea ecx [ esi + 0xac ]
call sub_40c060
lea ecx [ esi + 0xbc ]
call sub_40c060
lea edi [ esi + 0xec ]
call sub_40d4c0
push 0x4
call sub_41171a
add esp 0x4
pop edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
push r--data
mov [ esi ] eax
call [ RegisterWindowMessageW@IAT ]
mov [ esi + 0x4 ] eax
mov eax esi
retn
sub_40d3d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
mov edi ecx
call [ __import_lookup_table_0(KERNEL32:QueryPerformanceCounter) ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_4092c0
fldz
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
jmp r-xdata
fild [ esp + 0x8 ]
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40d420
push 0x10
mov [ ebx + 0x8 ] 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
mov esi eax
call sub_401b70
pop esi
mov [ ebx + 0xc ] eax
mov eax ebx
retn
sub_40d450
push ebx
xor ebx ebx
push edi
lea ecx [ esi + 0x14 ]
mov [ esi ] ebx
call sub_40c060
lea ecx [ esi + 0x24 ]
call sub_40c060
lea edi [ esi + 0x34 ]
call sub_40d4c0
lea edi [ esi + 0x78 ]
call sub_40d4c0
lea ecx [ esi + 0xbc ]
call sub_40c060
push 0x4
mov [ esi + 0xec ] r--data
mov [ esi + 0xf0 ] ebx
mov [ esi + 0xf4 ] ebx
mov [ esi + 0xf8 ] ebx
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
pop edi
mov [ esi ] ebx
mov eax esi
pop ebx
retn
mov [ eax ] ebx
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
retn
sub_40d4c0
push ebx
push esi
mov esi edi
call sub_40d500
xor ebx ebx
lea esi [ edi + 0x14 ]
mov [ edi + 0x10 ] bl
call sub_40d500
pop esi
mov [ edi + 0x24 ] ebx
mov [ edi + 0x2c ] ebx
mov [ edi + 0x30 ] ebx
mov [ edi + 0x34 ] ebx
mov [ edi + 0x38 ] ebx
mov [ edi + 0x3c ] 0x2800
mov [ edi + 0x40 ] 0x2000
mov eax edi
pop ebx
retn
sub_40d500
push 0x10
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x10
call sub_41171a
mov [ esi ] eax
push 0x4
mov [ eax ] 0x0
call sub_41171a
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
retn
sub_40d540
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
call sub_40c760
test eax eax
jle r-xdata
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ esi + 0x2f8 ] eax
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
push 0x0
mov ecx esi
mov [ esi + 0x2f0 ] eax
mov [ esi + 0xf8 ] 0x2
call sub_409560
pop edi
xor eax eax
pop esi
retn 0x8
sub_40d590
push ebp
push esi
push edi
mov edi eax
cmp [ edi + 0xd ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
mov ebp [ ecx ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebp
cmp [ edi + 0xd ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ edx + 0x38 ]
pop edi
pop esi
mov [ eax + 0x10 ] 0x0
pop ebp
retn
mov edi [ edi + 0x8 ]
mov [ edi + 0x10 ] 0x0
pop edi
pop esi
pop ebp
retn
sub_40d5d0
sub esp 0x20
push ebx
push esi
push edi
lea ecx [ esp + 0x18 ]
call sub_40c060
mov ecx 0x1
mov esi rw-data
call sub_410470
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
mov eax ecx
inc ecx
test eax eax
jle r-xdata
shl eax 0x4
add eax edi
je r-xdata
mov ebx eax
lea eax [ ecx - 0x1 ]
mov [ rw-data ] eax
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x0
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp ecx esi
jg r-xdata
cmp [ eax ] 0x20
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x8 ] 0x34
jne r-xdata
push 0xffffffff
push 0x69
jmp r-xdata
mov ecx [ edx ]
push ecx
lea esi [ esp + 0x1c ]
call sub_40df50
mov edi [ esp + 0x18 ]
sub esp 0x10
mov esi esp
call sub_401b70
mov eax rw-data
call sub_40f1a0
test eax eax
jne r-xdata
push rw-data
call sub_45e62e
push 0xffffffff
push 0x84
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x20
retn
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x1c ]
push eax
push ebx
mov [ esp + 0x24 ] 0x3
call sub_40da10
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
mov eax 0x1
jmp r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
sub_40d6d0
sub esp 0x438
push ebx
push esi
push edi
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push 0x104
call [ __import_lookup_table_0(KERNEL32:GetCurrentDirectoryW) ]
push edi
call sub_401f80
call [ IsDebuggerPresent@IAT ]
test eax eax
jne r-xdata
push 0x10
push r--data
push r--data
push 0x0
call [ __import_lookup_table_10(USER32:MessageBoxA) ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x438
retn
lea ecx [ esp + 0x20 ]
mov [ rw-data ] 0xffffffff
push ecx
jmp r-xdata
mov [ esp + 0xf ] 0x0
mov esi rw-data
cmp eax 0x1
je r-xdata
call [ SetCurrentDirectoryW@IAT ]
mov edx [ rw-data ]
push 0xffffffff
push edx
push 0x1
xor bl bl
call sub_403e90
mov al [ rw-data ]
mov [ rw-data ] al
jmp r-xdata
push rw-data
lea ecx [ esp + 0x13 ]
mov eax rw-data
call sub_40f3b0
test al al
je r-xdata
mov ecx [ rw-data ]
push ecx
push rw-data
call sub_401440
test eax eax
jne r-xdata
lea ecx [ esp + 0x20 ]
mov [ rw-data ] 0x1
push ecx
jmp r-xdata
mov dl [ rw-data ]
mov bl [ rw-data ]
push rw-data
lea eax [ esp + 0x234 ]
push eax
push 0x104
push rw-data
mov [ rw-data ] dl
call [ __import_lookup_table_0(KERNEL32:GetFullPathNameW) ]
mov ebx rw-data
call sub_40ebc0
lea edx [ esp + 0x20 ]
push edx
call [ SetCurrentDirectoryW@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp bl 0x1
je r-xdata
call sub_43604b
test al al
jne r-xdata
call sub_4101f0
call sub_4103e0
cmp [ rw-data ] 0x0
jne r-xdata
push 0x104
lea eax [ esp + 0x234 ]
push eax
push 0x0
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameW) ]
cmp [ esp + 0xf ] 0x0
je r-xdata
push 0x1
mov ecx rw-data
call sub_409560
cmp [ rw-data ] 0x0
jne r-xdata
mov esi rw-data
call sub_40e1e0
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
push edi
lea edx [ esp + 0x23c ]
push edx
push r--data
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
push eax
call [ __import_lookup_table_9(SHELL32:ShellExecuteW) ]
jmp r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
mov edi rw-data
mov eax esi
call sub_40d330
mov edi r--data
mov eax esi
call sub_40d330
mov edx [ esp + 0x10 ]
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
push edx
lea eax [ esp + 0x23c ]
push eax
push r--data
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
push eax
call [ __import_lookup_table_9(SHELL32:ShellExecuteW) ]
mov ecx esi
call sub_402620
jmp r-xdata
mov ebx rw-data
call sub_40ebc0
lea eax [ esp + 0x20 ]
push eax
mov ecx rw-data
call sub_401000
sub_40d7f0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x2c
push ebx
xor ebx ebx
push esi
push edi
cmp [ eax + 0x1d ] bl
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edi 0x1
lea esi [ esp + 0x18 ]
mov [ rw-data ] ecx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ebx
call sub_4092c0
lea edx [ esp + 0x28 ]
lea esi [ esp + 0xc ]
mov [ esp + 0x20 ] 0x6
mov [ esp + 0x18 ] edx
mov [ esp + 0xc ] ebx
mov [ esp + 0x14 ] ebx
mov [ rw-data ] ebx
call sub_40eb50
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push sub_439514
call sub_411ac6
add esp 0x4
push edi
call sub_411b24
mov eax [ rw-data ]
add esp 0x4
push eax
call sub_40f370
mov eax [ ebp + 0x10 ]
call sub_40d6d0
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
push 0x2
push edx
push ebx
push 0x2001
call [ SystemParametersInfoW@IAT ]
mov eax [ esp + 0xc ]
mov edi [ rw-data ]
cmp eax ebx
je r-xdata
call sub_40eba0
call eax
mov [ rw-data ] eax
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
mov eax edi
push eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
sub_40d900
mov eax [ esi ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
pop edi
retn
push eax
call [ CloseHandle@IAT ]
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
pop edi
retn
sub_40d970
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push ebx
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] ebx
pop ebx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ ecx + edx * 4 ] eax
inc [ esi + 0x8 ]
retn
sub_40da10
sub esp 0x4c
push ebx
push ebp
mov ebp [ esp + 0x5c ]
push esi
push edi
lea ecx [ esp + 0x38 ]
call sub_40c060
mov eax [ esp + 0x6c ]
mov ebx [ eax ]
xor edi edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x10 ] 0xffffffff
dec ebx
call sub_40c060
mov ecx [ esp + 0x60 ]
mov esi [ ecx + 0x4 ]
mov edx [ ebp ]
mov eax [ esi + edx * 4 ]
cmp [ eax + 0x8 ] 0x48
je r-xdata
inc [ ebp ]
mov edx [ esp + 0x60 ]
mov ebp [ ebp ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ebp * 4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov [ esp + 0x14 ] edi
mov edi edi
push 0xffffffff
push 0x72
jmp r-xdata
mov edx [ esp + 0x6c ]
call sub_40f320
test eax eax
jne r-xdata
mov eax [ ebp ]
mov ecx [ esi + eax * 4 ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov ecx [ ebp ]
mov esi [ esi + ecx * 4 ]
cmp [ esi + 0x8 ] 0x33
jne r-xdata
push rw-data
call sub_45e62e
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_410a20
lea ecx [ esp + 0x38 ]
call sub_402620
mov eax 0x1
jmp r-xdata
mov edx [ esp + 0x68 ]
mov ebp [ esp + 0x6c ]
push edx
lea esi [ esp + 0x3c ]
call sub_40df50
mov eax [ ebp ]
dec eax
cmp [ esp + 0x10 ] 0xffffffff
mov [ esp + 0x48 ] ebx
mov [ esp + 0x54 ] eax
mov [ esp + 0x4c ] edi
jne r-xdata
cmp ecx 0x1e
je r-xdata
mov [ esp + 0x64 ] 0x1
mov eax ecx
mov ecx [ esp + 0x60 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
mov eax [ esi ]
lea edx [ esp + 0x28 ]
cmp edx eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn 0x10
mov ecx [ esp + 0x10 ]
lea edi [ esp + 0x38 ]
mov ebx rw-data
mov [ esp + 0x50 ] ecx
call sub_40eaf0
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_410a20
mov ecx edi
call sub_402620
xor eax eax
mov [ esp + 0x10 ] edi
inc eax
mov [ ebp ] eax
mov eax [ esi + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx eax
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x69
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x20 ]
xor edi edi
test eax eax
jbe r-xdata
mov ecx edx
call sub_404080
cmp edi eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ ecx + edi * 4 ]
lea eax [ esp + 0x28 ]
call sub_40dd00
test al al
jne r-xdata
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0xab
jmp r-xdata
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x18 ]
call sub_40d970
inc [ ebp ]
mov edi [ esp + 0x60 ]
mov eax [ ebp ]
mov esi [ edi + 0x4 ]
mov edx [ esi + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
mov eax [ esp + 0x20 ]
inc edi
cmp edi [ esp + 0x20 ]
jb r-xdata
cmp [ esp + 0x64 ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
mov ecx [ esi + eax * 4 + 0x4 ]
movzx ecx [ ecx + 0x8 ]
inc eax
mov [ ebp ] eax
cmp cx 0x49
je r-xdata
push 0xffffffff
push 0x69
jmp r-xdata
mov edx [ esi + eax * 4 ]
movzx ecx [ edx + 0x8 ]
inc [ esp + 0x14 ]
cmp cx 0x40
jne r-xdata
inc eax
mov [ ebp ] eax
cmp cx 0x4a
jne r-xdata
cmp cx 0x48
je r-xdata
mov edx 0x48
cmp cx 0x40
jne r-xdata
mov eax [ ebp ]
inc eax
cmp [ esp + 0x10 ] 0xffffffff
mov [ ebp ] eax
jne r-xdata
mov eax [ ebp ]
mov edx [ esi + eax * 4 ]
push edx
call sub_443773
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp ]
mov ecx [ esi + eax * 4 ]
cmp [ ecx + 0x8 ] dx
jne r-xdata
mov ecx [ esi + eax * 4 + 0x4 ]
inc eax
mov [ ebp ] eax
cmp [ ecx + 0x8 ] dx
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x69
jmp r-xdata
mov ecx [ ebp ]
mov edx [ esi + ecx * 4 ]
cmp [ edx + 0x8 ] 0x0
mov [ esp + 0x64 ] 0x0
je r-xdata
mov edi [ esp + 0x14 ]
mov edx [ esi + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
jmp r-xdata
push 0x91
sub_40dc00
cmp [ edi + 0x9 ] 0x0
push esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44cc6c
dec [ edi ]
mov [ edi + 0x9 ] 0x1
pop esi
retn
push ebx
push ebp
mov ebp [ edi + 0x4 ]
mov ebx [ ebp + 0x38 ]
test ebp ebp
je r-xdata
dec [ edi ]
pop ebp
mov [ edi + 0x4 ] ebx
pop ebx
mov [ edi + 0x9 ] 0x0
pop esi
retn
lea esi [ ebp + 0x20 ]
call sub_4092c0
mov esi ebp
call sub_4092c0
push ebp
call sub_4112ef
add esp 0x4
sub_40dc70
push ecx
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
xor eax eax
mov [ edx + rw-data ] r--data
push edi
mov edi rw-data
mov [ esp + 0x4 ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_40dc50
push r--data
mov eax rw-data
call sub_4021e0
mov eax rw-data
pop edi
pop ecx
retn
sub_40dd50
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
retn 0x4
sub_40ddd0
push ecx
push ebx
push ebp
xor ebx ebx
push esi
push edi
mov ebp 0x1
mov edi 0x2
or esi 0xffffffff
mov ecx rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_40c060
mov eax 0x7c
xor ecx ecx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x3
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] ax
mov [ rw-data ] cx
call sub_40f0d0
test al al
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebp
jmp r-xdata
mov [ esp + 0x10 ] ebx
mov edi 0x3
lea edx [ esp + 0x10 ]
push edx
mov esi rw-data
call sub_40dd50
sub edi ebp
jne r-xdata
pop edi
pop esi
pop ebp
mov eax rw-data
pop ebx
pop ecx
retn
sub_40df10
push esi
mov esi eax
mov ecx [ esi - 0x88 ]
mov edx [ ecx + 0x4 ]
lea eax [ esi - 0x88 ]
push edi
mov [ edx + esi - 0x88 ] r--data
call sub_40f040
lea edi [ esi - 0x78 ]
call sub_40dcc0
add esi 0xffffff7c
call sub_40f0b0
pop edi
pop esi
retn
sub_40dfa0
push ebx
push esi
mov esi ecx
mov ebx eax
call sub_40d900
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x28 ] ebx
test bl 0x3
jne r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esp + 0xc ]
mov edx esi
call sub_40efe0
test al al
je r-xdata
or ebx 0x2000
mov [ esi + 0x28 ] ebx
pop esi
xor al al
pop ebx
retn 0x4
push edi
mov edi esi
call sub_40e000
mov eax esi
call sub_40e1c0
call sub_40f030
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x4
sub_40e000
mov eax 0x1000c
call sub_425210
mov eax [ edi + 0x28 ]
xor ecx ecx
mov [ edi + 0x2c ] ecx
mov [ edi + 0x30 ] ecx
test eax 0x2000
je r-xdata
test al 0x1
je r-xdata
test al 0x10
jne r-xdata
add esp 0x1000c
retn
jmp r-xdata
test eax 0x180
jne r-xdata
mov [ edi + 0x2c ] 0x4
jmp r-xdata
test al 0x20
jne r-xdata
mov eax [ edi + 0x14 ]
push ebx
push ebp
mov ebp [ edi + 0x10 ]
push esi
push ecx
push ecx
push ecx
mov esi edi
mov [ esp + 0x20 ] eax
call sub_40e0d0
lea ecx [ esp + 0x18 ]
push ecx
mov ebx 0x10000
call sub_403d40
mov cl [ esp + 0x18 ]
cmp eax 0x2
jb r-xdata
mov [ edi + 0x2c ] 0x1
jmp r-xdata
test al 0x40
jne r-xdata
cmp cl 0xef
je r-xdata
cmp cl 0xff
je r-xdata
mov [ edi + 0x2c ] 0x2
jmp r-xdata
cmp eax 0x3
jb r-xdata
test eax eax
je r-xdata
cmp [ esp + 0x19 ] 0xfe
jne r-xdata
cmp cl 0xfe
je r-xdata
cmp [ esp + 0x19 ] 0xbb
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x0
push edx
push ebp
mov esi edi
call sub_40e0d0
pop esi
pop ebp
pop ebx
cmp [ edi + 0x2c ] 0x0
jne r-xdata
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x30 ] 0x2
jmp r-xdata
cmp [ esp + 0x19 ] 0xff
jne r-xdata
cmp [ esp + 0x1a ] 0xbf
jne r-xdata
cmp eax 0x10000
je r-xdata
mov [ edi + 0x2c ] 0x2
mov [ edi + 0x30 ] 0x2
jmp r-xdata
mov [ edi + 0x30 ] 0x3
mov [ edi + 0x2c ] 0x4
jmp r-xdata
test [ edi + 0x28 ] 0x4000
je r-xdata
mov esi eax
lea edx [ esp + 0x18 ]
call sub_40efb0
test al al
jne r-xdata
push 0x0
push 0x0
push 0x0
call sub_40e0d0
push edi
call sub_444288
mov ebx eax
push ebx
call sub_41171a
add esp 0x4
push eax
mov [ esp + 0x10 ] eax
call sub_403d40
mov edx [ esp + 0xc ]
mov esi eax
call sub_40efb0
test al al
je r-xdata
mov [ edi + 0x30 ] 0x0
mov [ edi + 0x2c ] 0x4
jmp r-xdata
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov [ edi + 0x2c ] 0x4
mov [ edi + 0x30 ] 0x0
sub_40e0d0
mov eax [ esi + 0x8 ]
push ebx
push ebp
push edi
mov edi [ esp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
cmp edi 0x1
je r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_40e190
mov ecx [ esi + 0x10 ]
sub ecx eax
mov eax [ esi + 0x14 ]
sbb eax edx
add [ esp + 0x10 ] ecx
adc [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esi ]
push edi
push ebx
push ecx
push edx
push eax
call [ __import_lookup_table_0(KERNEL32:SetFilePointerEx) ]
push esi
mov edi eax
call sub_40e190
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
cmp edi 0x1
je r-xdata
test edi edi
jne r-xdata
mov al 0x1
jmp r-xdata
mov ebp [ esi + 0x10 ]
add ebp eax
mov ebx [ esi + 0x14 ]
adc ebx ecx
jmp r-xdata
mov ebp eax
mov ebx ecx
xor al al
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
mov edi [ esi + 0x14 ]
cdq
sub ecx eax
sbb edi edx
cmp ebx edi
jl r-xdata
mov edi [ esp + 0x18 ]
jmp r-xdata
jg r-xdata
pop edi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x8 ]
cdq
add eax ecx
adc edx edi
sub eax 0x1
sbb edx 0x0
cmp ebx edx
jg r-xdata
cmp ebp ecx
jb r-xdata
jl r-xdata
mov eax ebp
sub eax ecx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebx
cmp ebp eax
ja r-xdata
sub_40e190
sub esp 0x8
push 0x1
lea edx [ esp + 0x4 ]
push edx
xor ecx ecx
push ecx
xor eax eax
push eax
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_0(KERNEL32:SetFilePointerEx) ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x8
retn 0x4
sub_40e1e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3a8
push ebx
push edi
push 0x3a4
lea eax [ esp + 0x10 ]
push 0x0
push eax
mov [ esp + 0x14 ] 0x3a8
call sub_4131f0
add esp 0xc
cmp [ esi + 0x188 ] 0x0
jne r-xdata
cmp [ esi + 0x194 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov [ esi + 0x188 ] ecx
cmp [ esi + 0x1a0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x194 ] eax
mov [ esi + 0x198 ] eax
mov eax [ esi + 0x18c ]
lea edi [ esi + 0x190 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ esi + 0x1a0 ] ecx
cmp [ edi ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ esi + 0x18c ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x40 ] 0x0
mov ebx 0x1
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] 0x3
mov [ esp + 0x18 ] 0x401
mov [ esp + 0x1c ] 0x0
jne r-xdata
push eax
call [ DestroyIcon@IAT ]
jmp r-xdata
mov ecx [ esi + 0x3c ]
mov eax [ esi + 0x10 ]
push edi
push ecx
push eax
push esi
call sub_43737d
cmp [ esi + 0x40 ] 0x0
mov [ esp + 0x1c ] eax
mov [ esi + 0x18c ] eax
je r-xdata
mov eax [ esi + 0x188 ]
mov [ esp + 0x1c ] eax
mov [ esi + 0x18c ] eax
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
push ebx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push 0x0
call [ Shell_NotifyIconW@IAT ]
mov [ rw-data ] bl
cmp [ rw-data ] bl
je r-xdata
jmp r-xdata
mov eax esi
call sub_401e70
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e300
cmp [ edi + 0x8 ] 0x5
jne r-xdata
retn
mov eax [ edi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ edi ]
mov [ ecx ] 0x0
mov edx [ edi ]
mov [ edx + 0x4 ] 0x0
mov eax [ edi ]
mov [ eax + 0x8 ] 0x0
mov ecx [ edi ]
mov [ ecx + 0x20c ] 0x0
mov eax [ eax + 0x4 ]
dec [ eax ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ edi ]
mov ecx [ eax ]
push ecx
call sub_4112ef
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
add esp 0x8
push esi
xor esi esi
mov eax [ edi ]
inc esi
cmp esi [ eax + 0x8 ]
jl r-xdata
push 0x1
call sub_40e2e0
mov edx [ eax ]
mov ecx [ edx + esi * 4 ]
test ecx ecx
je r-xdata
pop esi
sub_40e380
push edi
mov edi eax
cmp [ edi + 0x8 ] 0x5
jne r-xdata
pop edi
retn
call sub_40e300
mov eax [ edi ]
push eax
call sub_4112ef
add esp 0x4
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
sub_40e3e0
push ebx
mov eax edi
mov ebx esi
call sub_40bd50
movzx eax [ edi + 0x10 ]
mov [ esi + 0x10 ] al
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov dl [ edi + 0x18 ]
lea eax [ edi + 0x20 ]
lea ebx [ esi + 0x20 ]
mov [ esi + 0x18 ] dl
call sub_40bd50
movzx eax [ edi + 0x30 ]
mov [ esi + 0x30 ] al
mov eax esi
pop ebx
retn
sub_40e420
cmp [ ebx + 0x9 ] 0x0
push edi
mov edi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push edi
push eax
call sub_4721e5
inc [ ebx ]
mov [ ebx + 0x9 ] 0x0
pop edi
retn
push esi
push 0x40
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
xor esi esi
mov [ esi + 0x38 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
mov esi eax
call sub_40e3e0
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x38 ] ecx
inc [ ebx ]
mov [ ebx + 0x4 ] esi
pop esi
pop edi
retn
sub_40e470
sub esp 0x15c
push ebx
push ebp
push esi
lea esi [ edi + 0xc ]
mov ecx esi
call sub_40c060
lea eax [ esp + 0x4c ]
xor ebx ebx
push eax
mov [ edi + 0x2e ] bl
mov [ esp + 0x50 ] 0x11c
call [ GetVersionExW@IAT ]
mov ecx [ esp + 0x50 ]
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
mov [ edi ] ecx
lea ecx [ esp + 0x60 ]
mov [ edi + 0x8 ] eax
push ecx
mov eax esi
mov [ edi + 0x4 ] edx
call sub_4021e0
mov eax esi
call sub_40e600
mov eax r--data
mov ecx esi
call sub_40e620
mov eax [ edi ]
sub eax 0x5
mov [ edi + 0x2a ] bl
mov [ edi + 0x1c ] bl
mov [ edi + 0x1d ] bl
mov [ edi + 0x1e ] bl
mov [ edi + 0x1f ] bl
mov [ edi + 0x20 ] bl
mov [ edi + 0x21 ] bl
mov [ edi + 0x22 ] bl
mov [ edi + 0x23 ] bl
mov [ edi + 0x24 ] bl
mov [ edi + 0x25 ] bl
mov [ edi + 0x26 ] bl
mov [ edi + 0x27 ] bl
mov [ edi + 0x28 ] bl
mov [ edi + 0x29 ] bl
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
jne r-xdata
sub eax 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov [ edi + 0x1d ] 0x1
mov [ edi + 0x1c ] 0x1
jmp r-xdata
lea esi [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] ebx
call sub_40ee70
cmp [ esp + 0x18 ] ebx
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x1d ] 0x1
mov [ edi + 0x1f ] 0x1
mov [ edi + 0x21 ] 0x1
cmp eax ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov [ edi + 0x1d ] al
mov [ edi + 0x1f ] al
mov [ edi + 0x1e ] al
jmp r-xdata
movzx eax [ esp + 0x164 ]
shr eax 0x6
and eax 0x1
mov [ edi + 0x2e ] al
jmp r-xdata
mov ebp [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
xor eax eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
cmp [ edi + 0x2a ] bl
je r-xdata
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] ebx
call [ GetCurrentProcess@IAT ]
push eax
call sub_40ee30
call eax
cmp [ esp + 0xc ] 0x1
jne r-xdata
cmp [ esp + 0x166 ] 0x1
mov [ edi + 0x23 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ esp + 0x166 ] 0x1
mov [ edi + 0x1d ] 0x1
mov [ edi + 0x1f ] 0x1
mov [ edi + 0x21 ] 0x1
jne r-xdata
lea edx [ esp + 0x28 ]
push edx
call [ __import_lookup_table_0(KERNEL32:GetSystemInfo) ]
jmp r-xdata
lea esi [ esp + 0x1c ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] ebx
call sub_40eee0
cmp [ esp + 0x24 ] ebx
je r-xdata
mov [ edi + 0x2a ] 0x1
mov [ edi + 0x25 ] 0x1
mov [ edi + 0x24 ] 0x1
jmp r-xdata
mov [ edi + 0x22 ] 0x1
jmp r-xdata
mov [ edi + 0x23 ] al
mov [ edi + 0x25 ] al
mov [ edi + 0x27 ] al
cmp [ esp + 0x166 ] al
jne r-xdata
mov [ edi + 0x20 ] 0x1
mov [ edi + 0x1e ] 0x1
jmp r-xdata
mov ax [ esp + 0x28 ]
mov [ edi + 0x2c ] ax
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
call [ __import_lookup_table_0(KERNEL32:GetSystemInfo) ]
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call sub_40eea0
call eax
mov [ edi + 0x29 ] 0x1
mov [ edi + 0x28 ] 0x1
jmp r-xdata
mov [ edi + 0x26 ] al
pop esi
pop ebp
mov eax edi
pop ebx
add esp 0x15c
retn
push eax
call ebp
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
push eax
call ebp
sub_40e600
push esi
mov esi eax
push edi
mov edx esi
call sub_40ee10
xor edi edi
cmp eax 0xffffffff
jne r-xdata
call sub_40c740
pop edi
pop esi
retn
or eax eax
sub_40e620
push esi
push edi
mov esi ecx
push eax
call sub_40edf0
cmp eax 0xffffffff
jne r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
xor edi edi
or eax 0xffffffff
call sub_40c740
pop edi
pop esi
retn
sub_40e640
call sub_4092c0
push 0x10
mov [ esi + 0x8 ] 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi + 0xc ] eax
mov eax esi
retn
sub_40e6b0
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_44ae3a
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_40e6d0
push esi
mov esi ebx
call sub_4092c0
push 0x10
mov [ ebx + 0x8 ] 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi eax
call sub_401b70
mov [ ebx + 0xc ] eax
mov eax ebx
pop esi
retn
sub_40e700
cmp [ esi + 0x16c ] 0x0
push ebx
push edi
jne r-xdata
lea edi [ esi + 0x16c ]
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40c8a0
cmp [ edi ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ebx [ esi + 0x488 ]
mov edi r--data
call sub_40e6d0
cmp [ rw-data ] 0x0
pop edi
pop ebx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test eax eax
jne r-xdata
call [ __import_lookup_table_6(ole32:OleUninitialize) ]
mov [ rw-data ] 0x0
retn
retn
mov [ rw-data ] eax
jmp r-xdata
sub_40e740
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0x2
je r-xdata
push ebx
xor ebx ebx
xor eax eax
push ebp
mov ebp edx
cmp edx ecx
ja r-xdata
push ecx
push esi
push edx
push edi
push 0x1
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
mov ebp ecx
push 0x409
jmp r-xdata
push 0x400
sub ebx eax
jns r-xdata
movzx ecx [ edi ]
dec ebp
cmp cx [ esi ]
je r-xdata
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
pop edi
add eax 0xfffffffe
pop esi
retn 0x8
pop ebp
xor eax eax
test ebx ebx
pop ebx
pop edi
setg al
pop esi
retn 0x8
pop ebp
pop ebx
pop edi
or eax 0xffffffff
pop esi
retn 0x8
add edi 0x2
add esi 0x2
test ebp ebp
jne r-xdata
push ecx
call sub_414b07
movzx ebx ax
movzx eax [ esi ]
push eax
call sub_414b07
movzx eax ax
add esp 0x8
cmp ebx eax
jne r-xdata
sub_40e780
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ebx ecx
xor ecx ecx
mov [ esp + 0x10 ] ecx
mov edx [ eax ]
movsx eax [ edx + 0x8 ]
push edi
cmp eax ecx
jne r-xdata
dec eax
cmp eax 0x7e
ja r-xdata
mov edx [ ebp + 0xc ]
push edx
push esi
push ebx
call sub_40b380
movsx ecx [ edx + 0xa ]
push ecx
push 0x1388
push ebx
call sub_45e62e
jmp r-xdata
movzx eax [ eax + lookup_table_43101c ]
mov edi 0x1
jmp [ eax * 4 + jump_table_431004 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_409340
jmp r-xdata
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] ecx
lea ecx [ esp + 0x18 ]
push ecx
lea eax [ esp + 0x18 ]
mov edx esi
mov [ esp + 0x24 ] edi
call sub_409030
test eax eax
jne r-xdata
lea edx [ esp + 0x13 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push esi
push ebx
lea eax [ esp + 0x24 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ecx
call sub_409a40
test eax eax
jne r-xdata
lea edi [ ebx + 0x488 ]
push edi
call sub_43550e
test al al
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x14 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
push edi
lea edx [ esp + 0x18 ]
push edx
push esi
push ebx
call sub_47f2b4
test eax eax
je r-xdata
movsx ecx [ edx + 0xa ]
push ecx
push 0xa7
push ebx
call sub_45e62e
jmp r-xdata
movsx ecx [ eax + 0xa ]
push ecx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x14 ]
mov edx [ eax + ecx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xaa
push ebx
call sub_45e62e
jmp r-xdata
push 0x72
push ebx
call sub_45e62e
movsx eax [ eax + 0xa ]
push eax
sub_40e7c0
cmp [ esi + 0x8 ] 0x5
jne r-xdata
retn
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x1
jg r-xdata
dec [ eax ]
mov eax [ esi ]
push ebp
mov ebp [ eax ]
mov eax [ eax + 0x8 ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi ]
push 0x4
mov [ ecx ] eax
call sub_41171a
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov [ eax ] 0x1
jmp r-xdata
pop ebp
retn
push ebx
push edi
xor edi edi
mov edx [ esi ]
mov [ edx + 0x4 ] eax
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ eax ]
mov [ eax + edi * 4 ] 0x0
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + edi * 4 ] 0x0
je r-xdata
pop edi
pop ebx
mov ecx [ esi ]
mov edx [ ecx ]
xor eax eax
mov [ edx + edi * 4 ] eax
jmp r-xdata
mov ebx eax
mov eax [ ebp + edi * 4 ]
call sub_40bd50
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
jmp r-xdata
mov eax [ esi ]
inc edi
cmp edi [ eax + 0x8 ]
jl r-xdata
sub_40e7e0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi eax
mov ebx 0x5
cmp [ edi + 0x8 ] ebx
je r-xdata
call sub_40e300
jmp r-xdata
call sub_40e8f0
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x210 ]
mov [ eax + 0x20c ] ecx
mov edx [ edi ]
mov [ edx + 0x8 ] 0x1
mov eax [ edi ]
cmp [ eax + 0x20c ] 0x0
jle r-xdata
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8 ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ edi ]
push 0x4
mov [ ecx ] eax
call sub_41171a
add esp 0x8
test eax eax
je r-xdata
xor edx edx
mov ecx 0xc
lea esp [ esp ]
mov eax edi
call sub_40e8f0
jmp r-xdata
mov eax [ edi ]
mov [ eax + 0x210 ] 0x0
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
pop edi
pop esi
xor al al
pop ebx
retn
inc edx
add ecx 0x4
cmp edx [ eax + 0x20c ]
jl r-xdata
push ebp
lea ebx [ esp + 0x14 ]
mov ebp esi
mov edx [ edi ]
mov [ edx + 0x4 ] eax
mov eax [ edi ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
xor ecx ecx
mov esi [ ecx + eax + 0x100 ]
mov [ ecx + eax ] esi
mov eax [ edi ]
mov esi [ ecx + eax ]
imul esi [ eax + 0x8 ]
mov [ eax + 0x8 ] esi
mov eax [ edi ]
cmp [ eax + 0x8 ] 0x1000000
jg r-xdata
mov esi [ ebx + 0x4 ]
add ebx 0x4
mov edx edi
call sub_40d0f0
sub ebp 0x1
jne r-xdata
pop ebp
mov eax [ eax ]
mov [ eax + ecx * 4 ] 0x0
mov eax [ edi ]
inc ecx
cmp ecx [ eax + 0x8 ]
jl r-xdata
sub_40e8f0
push esi
mov esi eax
cmp [ esi + 0x8 ] 0x5
je r-xdata
pop esi
retn
call sub_4092c0
push 0x214
call sub_41171a
mov [ esi ] eax
add esp 0x4
xor ecx ecx
mov [ eax ] ecx
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ecx
mov eax [ esi ]
mov [ eax + 0x20c ] ecx
mov edx [ esi ]
mov [ edx + 0x210 ] ecx
mov [ esi + 0x8 ] 0x5
sub_40e940
push ecx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x14 ]
test eax eax
jg r-xdata
cmp ecx eax
je r-xdata
test ecx ecx
jne r-xdata
push 0xffffffff
push 0x92
push rw-data
call sub_45e62e
mov eax 0x1
pop ebp
pop ecx
retn 0xc
cmp edx eax
je r-xdata
test edx edx
jne r-xdata
push 0xffffffff
push 0x77
push rw-data
call sub_45e62e
mov eax 0x1
pop ebp
pop ecx
retn 0xc
cmp esi eax
je r-xdata
test esi esi
jne r-xdata
push 0xffffffff
push 0x97
push rw-data
call sub_45e62e
mov eax 0x1
pop ebp
pop ecx
retn 0xc
cmp edi eax
je r-xdata
test edi edi
jne r-xdata
push 0xffffffff
push 0xa0
push rw-data
call sub_45e62e
mov eax 0x1
pop ebp
pop ecx
retn 0xc
cmp ebx eax
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffff
push 0xb4
push rw-data
call sub_45e62e
mov eax 0x1
pop ebp
pop ecx
retn 0xc
cmp ebp eax
je r-xdata
test ebp ebp
jne r-xdata
push 0xffffffff
push 0x73
push rw-data
call sub_45e62e
mov eax 0x1
pop ebp
pop ecx
retn 0xc
jmp r-xdata
xor eax eax
pop ebp
pop ecx
retn 0xc
sub_40e990
sub esp 0xc
mov edx [ esp + 0x10 ]
push esi
push edi
mov edi eax
lea eax [ esp + 0xf ]
push eax
push edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x1
call sub_40cd80
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0xc
retn 0x8
mov esi [ esp + 0x18 ]
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
push edi
call sub_45e62e
jmp r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
add edi 0x16c
call sub_40c8a0
pop edi
pop esi
add esp 0xc
retn 0x8
lea eax [ edi + 0x16c ]
call sub_40f360
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x1c ]
inc ecx
mov [ edx ] ecx
sub_40ea10
sub esp 0x3c
push ebx
push ebp
push esi
mov ebx eax
mov ebp 0x1
push edi
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ebp
call sub_40dce0
mov edx [ esp + 0x50 ]
lea eax [ esp + 0x13 ]
push eax
push ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] ebp
call sub_40cd80
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call sub_452334
jmp r-xdata
mov edi [ esp + 0x50 ]
mov edx [ edi + 0x4 ]
mov eax [ esp + 0x14 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x8
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push ebx
call sub_45e62e
lea edx [ esp + 0x18 ]
push edx
call sub_452334
jmp r-xdata
mov esi [ esp + 0x54 ]
mov edi [ esi ]
sub edi ebp
xor ebp ebp
mov [ esp + 0x1c ] edi
xor dl dl
cmp [ esp + 0x13 ] 0x0
je r-xdata
test dl dl
jne r-xdata
mov ecx [ esp + 0x20 ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
add ebx 0x16c
lea eax [ esp + 0x18 ]
mov [ esi ] edi
call sub_40cfe0
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea esi [ esp + 0x38 ]
call sub_4092c0
lea esi [ esp + 0x28 ]
call sub_4092c0
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_40f2a0
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0x9
je r-xdata
inc ebp
jmp r-xdata
sub eax 0x1
jne r-xdata
test ebp ebp
jne r-xdata
dec ebp
jmp r-xdata
dec ecx
mov dl 0x1
mov [ esp + 0x20 ] ecx
jmp r-xdata
sub_40eaf0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
retn
push esi
push 0x24
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov esi eax
mov ecx esi
call sub_40c060
mov eax esi
call sub_4109f0
mov eax esi
call sub_402ae0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
push ecx
call [ CharUpperBuffW@IAT ]
mov [ esi + 0x20 ] 0x0
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0xc ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
pop esi
retn
mov [ eax + 0x20 ] esi
inc [ ebx + 0xc ]
mov [ ebx + 0x4 ] esi
pop esi
sub_40ebc0
push ebp
push esi
mov esi [ ebx + 0x8 ]
xor ebp ebp
cmp esi ebp
je r-xdata
mov ecx [ ebx + 0x44 ]
cmp ecx ebp
je r-xdata
push edi
lea esp [ esp ]
mov ecx [ ebx + 0x14 ]
push ecx
call sub_4112ef
add esp 0x4
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x10 ] ebp
mov [ ebx + 0x14 ] ebp
mov [ ebx + 0x44 ] ebp
cmp [ ebx + 0x20 ] ebp
jbe r-xdata
cmp [ ecx - 0x4 ] ebp
je r-xdata
mov eax [ esi ]
mov edi [ esi + 0xc ]
push eax
call sub_4112ef
push esi
call sub_4112ef
add esp 0x8
mov esi edi
cmp edi ebp
jne r-xdata
pop edi
lea esi [ ebx + 0x18 ]
call sub_40ec50
lea esi [ ebx + 0x28 ]
call sub_40ec50
pop esi
pop ebp
retn
xor esi esi
lea eax [ ecx - 0x4 ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x3
call eax
mov edx [ ebx + 0x1c ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi [ ebx + 0x20 ]
jb r-xdata
sub_40ec50
cmp [ esi + 0x8 ] 0x0
ja r-xdata
push edi
xor edi edi
mov [ esi + 0x8 ] 0x0
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_4112ef
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jb r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
retn
sub_40ec80
push ebx
push esi
mov ebx rw-data
call sub_40ebc0
cmp [ rw-data ] 0x0
jbe r-xdata
mov edx [ rw-data ]
push edx
call sub_4112ef
add esp 0x4
mov esi rw-data
mov [ rw-data ] r--data
call sub_40ec50
mov eax [ rw-data ]
push eax
call sub_4112ef
add esp 0x4
mov esi rw-data
mov [ rw-data ] r--data
call sub_40ec50
mov ecx [ rw-data ]
push ecx
call sub_4112ef
add esp 0x4
pop esi
pop ebx
retn
xor esi esi
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi [ rw-data ]
jb r-xdata
sub_40ed10
test [ esp + 0x4 ] 0x2
push ebp
mov ebp ecx
je r-xdata
call sub_40ed60
test [ esp + 0x8 ] 0x1
je r-xdata
push ebx
push esi
push edi
mov edi [ ebp - 0x4 ]
lea ebx [ ebp - 0x4 ]
mov esi edi
sub edi 0x1
js r-xdata
mov eax ebp
pop ebp
retn 0x4
push ebp
call sub_4112ef
add esp 0x4
test [ esp + 0x14 ] 0x1
je r-xdata
shl esi 0x4
add esi ebp
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push ebx
call sub_4112ef
add esp 0x4
sub esi 0x10
mov ecx esi
call sub_40ed60
sub edi 0x1
jns r-xdata
sub_40ed60
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
mov [ ebx ] r--data
jbe r-xdata
mov ecx [ ebx + 0x4 ]
push ecx
mov [ ebx + 0x8 ] 0x0
call sub_4112ef
add esp 0x4
pop ebx
retn
push ebp
push esi
push edi
xor edi edi
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x3f
jle r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + edi * 4 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
cmp ax 0x30
jl r-xdata
push esi
call sub_4112ef
add esp 0x4
mov ebp [ esi ]
test ebp ebp
je r-xdata
mov eax [ ebp + 0xc ]
dec [ eax ]
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
push ebp
call sub_4112ef
add esp 0x4
jmp r-xdata
mov edx [ ebp ]
push edx
call sub_4112ef
mov eax [ ebp + 0xc ]
push eax
call sub_4112ef
add esp 0x8
sub_40edf0
mov ecx [ esi + 0x4 ]
sub esp 0x8
push ebx
push ebp
push edi
test ecx ecx
ja r-xdata
mov edi [ esp + 0x18 ]
movzx edi [ edi ]
lea eax [ ecx - 0x1 ]
xor edx edx
mov [ esp + 0x10 ] edi
jmp r-xdata
or eax 0xffffffff
xor ebx ebx
cmp di bx
je r-xdata
pop edi
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov ebp [ esi ]
movzx ebp [ ebp + eax * 2 ]
mov [ esp + 0xc ] ebx
movzx edi di
mov edi [ esp + 0x18 ]
movzx edi [ edi + ebx * 2 + 0x2 ]
inc ebx
test di di
jne r-xdata
inc [ esp + 0xc ]
cmp bp di
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
inc edx
cmp edx ecx
jb r-xdata
mov edi [ esp + 0x10 ]
dec eax
jmp r-xdata
sub_40ee10
mov ecx [ edx + 0x4 ]
push ebx
push ebp
push esi
push edi
test ecx ecx
ja r-xdata
mov edx [ edx ]
xor eax eax
or eax 0xffffffff
movzx esi [ edi * 2 + r--data ]
inc edi
test si si
jne r-xdata
inc ebx
cmp bp si
jne r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
inc eax
add edx 0x2
cmp eax ecx
jb r-xdata
movzx ebp [ edx ]
xor edi edi
xor ebx ebx
mov esi 0x20
jmp r-xdata
sub_40ef10
push 0x34
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi eax
call sub_40ef40
call sub_40e470
pop edi
mov [ rw-data ] eax
mov eax rw-data
retn
sub_40ef70
push 0xc
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
push esi
mov esi eax
call sub_40ef40
mov [ rw-data ] esi
pop esi
mov eax rw-data
retn
sub_40efa0
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_40efb0
push ebx
push edi
test esi esi
jbe r-xdata
pop edi
xor eax eax
pop ebx
retn
mov bl 0x1
xor eax eax
lea ebx [ ebx ]
cmp cl 0xc2
jb r-xdata
inc eax
cmp cl 0xe0
jb r-xdata
cmp cl 0xdf
ja r-xdata
mov cl [ eax + edx ]
cmp cl 0x7f
ja r-xdata
test bl bl
je r-xdata
cmp cl 0xf0
jb r-xdata
cmp cl 0xef
ja r-xdata
mov edi 0x1
jmp r-xdata
pop edi
mov eax 0x1
pop ebx
retn
pop edi
xor al al
pop ebx
retn
cmp cl 0xf4
ja r-xdata
mov edi 0x2
jmp r-xdata
inc eax
xor bl bl
mov edi 0x3
mov cl [ eax + edx ]
cmp cl 0x80
jb r-xdata
cmp cl 0xbf
ja r-xdata
inc eax
sub edi 0x1
jne r-xdata
cmp eax esi
jae r-xdata
jmp r-xdata
cmp eax esi
jb r-xdata
sub_40efe0
push esi
mov esi edx
mov [ esi ] 0xffffffff
test ecx 0x2000
je r-xdata
test cl 0x1
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x7
push 0x80000000
test cl 0x2
je r-xdata
mov eax [ eax ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x7
push 0xc0000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0x0
push 0x80
push 0x2
push 0x0
push 0x7
push 0xc0000000
jmp r-xdata
push 0x2
push 0x0
push 0x0
call sub_40e0d0
jmp r-xdata
mov eax [ eax ]
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov [ esi ] eax
cmp [ esi ] 0xffffffff
je r-xdata
sub_40f030
mov eax [ esi + 0x28 ]
test al 0x3
jne r-xdata
test al 0x10
jne r-xdata
retn
test al 0x1
je r-xdata
test al 0x20
je r-xdata
mov ecx [ esi + 0x10 ]
or ecx [ esi + 0x14 ]
jne r-xdata
test al 0x40
je r-xdata
push 0x2
push r--data
push esi
call sub_444343
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0x2
retn
test al al
jns r-xdata
push 0x2
push r--data
push esi
call sub_444343
mov [ esi + 0x2c ] 0x2
mov [ esi + 0x30 ] 0x2
retn
test eax 0x100
je r-xdata
push 0x3
push r--data
push esi
call sub_444343
mov [ esi + 0x30 ] 0x3
mov [ esi + 0x2c ] 0x4
retn
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x2c ] 0x4
retn
sub_40f040
sub esp 0x8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
lea esp [ esp ]
mov ecx [ eax ]
push ecx
call sub_442be2
lea edx [ esp + 0x4 ]
push edx
lea eax [ esp + 0x4 ]
push eax
call sub_440eac
mov eax [ esp ]
jmp r-xdata
add esp 0x8
retn
test eax eax
jne r-xdata
sub_40f060
sub esp 0x8
mov eax esi
call sub_40f040
mov eax [ esi + 0x468 ]
mov [ esp ] eax
mov ecx [ esp ]
mov edx [ ecx ]
push edx
call sub_44b7a4
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
call sub_440eac
jmp r-xdata
add esp 0x8
retn
push ecx
lea eax [ esp + 0x4 ]
mov [ esp ] 0x0
call sub_40f090
test al al
jne r-xdata
sub_40f0b0
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_451fe2
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_40f0d0
sub esp 0x8
push esi
push 0x4
push r--data
push r--data
push 0x80000001
lea esi [ esp + 0x14 ]
call sub_40f110
add esp 0x10
cmp [ esp + 0x4 ] 0x31
pop esi
je r-xdata
mov al 0x1
add esp 0x8
retn
xor al al
add esp 0x8
retn
sub_40f110
push ecx
mov eax [ esp + 0x14 ]
lea ecx [ eax + eax ]
lea eax [ esp ]
push eax
xor edx edx
push 0x1
push edx
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x18 ]
mov [ esi ] dx
mov edx [ esp + 0x14 ]
push ecx
push edx
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
test eax eax
jne r-xdata
pop ecx
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp ]
lea eax [ esp + 0x14 ]
push eax
push esi
push 0x0
push 0x0
push ecx
push edx
call [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
mov eax [ esp ]
push eax
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
sub_40f170
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
lea eax [ esp ]
push eax
call [ QueryPerformanceFrequency@IAT ]
test eax eax
mov eax esi
je r-xdata
fldz
jmp r-xdata
fild [ esp ]
fdiv [ r--data ]
fstp [ esi ]
mov esp ebp
pop ebp
retn
sub_40f1a0
push ecx
push edi
mov edi eax
cmp [ edi + 0xc ] 0x0
jne r-xdata
push ebx
push esi
lea esi [ esp + 0x14 ]
call sub_410a40
mov ebx [ edi + 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ esp + 0xc ]
call sub_402620
xor eax eax
pop edi
pop ecx
retn 0x10
push ebp
mov ebp [ edi + 0xc ]
sub ebp 0x1
js r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
pop ebp
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x14 ]
call sub_402620
xor eax eax
lea eax [ esp + 0x14 ]
call sub_40dd00
test al al
jne r-xdata
pop esi
pop ebx
pop edi
pop ecx
retn 0x10
jle r-xdata
lea ebp [ edi - 0x1 ]
jmp r-xdata
lea ecx [ esp + 0x14 ]
call sub_402620
mov eax esi
jmp r-xdata
mov esi [ esi + 0x20 ]
test esi esi
jne r-xdata
cmp [ esp + 0x10 ] ebp
jg r-xdata
inc edi
mov [ esp + 0x10 ] edi
cmp [ esp + 0x10 ] ebp
jle r-xdata
mov edi [ ebx + edi * 4 ]
lea ecx [ esp + 0x18 ]
call sub_402620
mov eax edi
pop ebp
jmp r-xdata
mov eax [ esp + 0x10 ]
add eax ebp
cdq
sub eax edx
mov edi eax
sar edi 0x1
mov ecx [ ebx + edi * 4 ]
lea esi [ esp + 0x18 ]
call sub_40c0b0
test eax eax
jge r-xdata
sub_40f200
sub esp 0x34
push ebx
push esi
mov esi eax
push edi
lea eax [ esp + 0x10 ]
call sub_40dce0
mov edi [ esi ]
dec edi
xor ebx ebx
mov [ esp + 0x10 ] 0x2
mov [ esp + 0x14 ] edi
xor dl dl
mov ebx [ esp + 0x44 ]
add ebx 0x16c
lea eax [ esp + 0x10 ]
call sub_40cfe0
inc edi
mov [ esi ] edi
lea esi [ esp + 0x30 ]
call sub_4092c0
lea esi [ esp + 0x20 ]
call sub_4092c0
pop edi
pop esi
pop ebx
add esp 0x34
retn 0x4
test dl dl
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_40f2a0
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0xb
je r-xdata
inc ebx
jmp r-xdata
sub eax 0x1
jne r-xdata
test ebx ebx
jne r-xdata
dec ebx
jmp r-xdata
dec ecx
mov dl 0x1
mov [ esp + 0x18 ] ecx
jmp r-xdata
sub_40f2c0
sub esp 0xc
push edi
lea edi [ esi + 0x16c ]
mov eax edi
call sub_40f360
mov eax [ eax + 0x4 ]
call sub_40f2a0
lea ecx [ esp + 0xb ]
push ecx
push esi
lea ecx [ esp + 0x14 ]
mov edx eax
mov [ esp + 0x14 ] 0x1
call sub_40cd80
test eax eax
jne r-xdata
pop edi
add esp 0xc
retn 0x4
cmp [ esp + 0xb ] al
je r-xdata
call sub_40c8a0
pop edi
add esp 0xc
retn 0x4
mov eax edi
call sub_40f360
mov edx [ eax + 0x4 ]
mov eax [ esp + 0x14 ]
inc edx
mov [ eax ] edx
sub_40f320
push ecx
xor eax eax
pop ecx
retn
dec ecx
mov [ rw-data ] ecx
mov eax [ eax + 0x4 ]
mov eax [ eax ]
movzx ecx [ eax + 0x8 ]
test cx cx
jne r-xdata
mov eax [ edx ]
lea ecx [ eax + 0x1 ]
mov [ edx ] ecx
call sub_40f2a0
test eax eax
je r-xdata
cmp [ eax ] 0x20
je r-xdata
push 0xffffffff
push 0x83
push rw-data
call sub_45e62e
mov eax 0x1
pop ecx
retn
test cx cx
jne r-xdata
cmp [ eax ] 0x21
jne r-xdata
sub_40f370
push ecx
push esi
mov esi [ SystemParametersInfoW@IAT ]
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x2000
call esi
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
push 0x2
push 0x0
push 0x0
push 0x2001
mov [ edx + 0x4 ] ecx
call esi
pop esi
pop ecx
retn 0x4
sub_40f3b0
sub esp 0x58
push ebx
push edi
mov edi eax
mov al [ rw-data ]
mov [ esi + 0x3 ] al
cmp [ edi ] 0x0
je r-xdata
push 0x58
lea edx [ esp + 0xc ]
push 0x0
push edx
mov [ ecx ] 0x1
call sub_4131f0
add esp 0xc
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] 0x58
mov [ esp + 0x3c ] r--data
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] 0x104
mov [ esp + 0x18 ] r--data
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x40 ] 0x1804
mov [ esp + 0x48 ] r--data
call [ GetOpenFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax edi
mov ecx edi
call sub_40ffb0
mov ebx edi
call sub_410130
mov ecx [ esp + 0x64 ]
push ecx
mov edx edi
mov ebx esi
call sub_410020
push eax
push esi
mov eax edi
call sub_40f400
xor al al
jmp r-xdata
pop edi
pop ebx
add esp 0x58
retn 0x4
sub_40f400
sub esp 0x58
push ebx
push ebp
mov ebp [ esp + 0x64 ]
push esi
push edi
mov esi eax
push esi
lea edi [ esp + 0x30 ]
call sub_40f5e0
test eax eax
je r-xdata
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x78 ]
push ecx
push r--data
lea edx [ esp + 0x38 ]
push edx
call sub_452574
test eax eax
je r-xdata
mov ebx [ esp + 0x74 ]
cmp [ ebx ] 0x4
je r-xdata
mov eax [ esp + 0x74 ]
mov eax [ eax ]
or ecx 0xffffffff
lea esi [ eax + 0x1 ]
mov [ ebp + 0x10 ] eax
mov [ esp + 0x28 ] cx
xor ecx ecx
xor edi edi
mov eax esi
mov edx 0x10
mul edx
seto cl
mov [ esp + 0x6c ] 0x4
mov [ esp + 0x38 ] r--data
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_41171a
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ esp + 0x2c ]
push eax
call sub_434fe1
movzx ecx [ ebp + 0x3 ]
mov edx [ ebp + 0x48 ]
push ecx
push edx
call sub_43717f
add esp 0x8
xor al al
jmp r-xdata
movzx eax [ ebp + 0x3 ]
mov ecx [ ebp + 0x48 ]
push eax
push ecx
call sub_43717f
add esp 0x8
xor al al
jmp r-xdata
mov edx [ esp + 0x70 ]
push 0x0
push r--data
push esi
push edx
push esi
push ebp
mov [ ebx ] 0x2
call sub_4037e0
or ecx 0xffffffff
mov eax 0x1
cmp [ ebp + 0x10 ] eax
mov [ ebp + 0x44 ] edi
mov [ esp + 0x2a ] cx
jl r-xdata
lea edi [ eax + 0x4 ]
mov [ eax ] esi
push 0x10
mov ebx sub_4027b6
mov eax esi
mov ecx edi
call sub_410b20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0xc
mov ecx [ esp + 0x74 ]
push ecx
call sub_413a88
add esp 0x4
lea edx [ esp + 0x2c ]
push edx
call sub_434fe1
lea ecx [ esp + 0x38 ]
call sub_40ed60
lea eax [ esp + 0x20 ]
push eax
call sub_44b453
mov al 0x1
jmp r-xdata
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] 0x10
lea ecx [ esp + 0x20 ]
push ecx
call sub_435662
test al al
je r-xdata
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x74 ]
lea eax [ ecx + edx ]
mov eax [ eax ]
add ecx 0x4
mov [ esp + 0x6c ] ecx
mov [ esp + 0x20 ] eax
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_435644
test al al
je r-xdata
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x74 ]
lea eax [ ecx + edx ]
mov edx [ eax + 0x4 ]
add ecx 0x8
mov [ esp + 0x6c ] ecx
mov ecx [ eax ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
lea edi [ esp + 0x3c ]
call sub_402cc0
cmp ebx 0x7f
jne r-xdata
lea eax [ esp + 0x20 ]
call sub_40d240
test al al
je r-xdata
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x74 ]
fld [ ecx + edx ]
lea eax [ ecx + edx ]
add ecx 0x8
fstp [ esp + 0x20 ]
mov [ esp + 0x6c ] ecx
jmp r-xdata
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x74 ]
movzx ebx [ ecx + edx ]
lea eax [ ecx + edx ]
inc ecx
mov edi ebx
lea esi [ esp + 0x20 ]
mov [ esp + 0x6c ] ecx
call sub_402b00
push esi
call sub_435680
test al al
je r-xdata
mov eax [ ebp + 0x44 ]
mov esi [ esp + 0x1c ]
push edi
add eax esi
push eax
call sub_4026a0
mov eax [ esp + 0x18 ]
inc eax
add esi 0x10
cmp eax [ ebp + 0x10 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] esi
jle r-xdata
mov ecx [ esp + 0x74 ]
lea eax [ esp + 0x6c ]
push eax
push ecx
mov [ esp + 0x1c ] ebx
call sub_445051
mov ebx eax
mov eax edi
cmp eax 0x31
jne r-xdata
lea ebx [ esp + 0x38 ]
call sub_40d1e0
cmp eax 0x30
jne r-xdata
mov edi ebx
lea esi [ esp + 0x48 ]
call sub_401b70
push esi
push ebp
call sub_44501b
mov ecx esi
mov [ esp + 0x70 ] eax
call sub_402620
mov edi 0x1
lea esi [ esp + 0x20 ]
call sub_402b00
mov eax [ esp + 0x70 ]
mov [ esp + 0x20 ] eax
jmp r-xdata
push ebx
cmp eax 0x37
jne r-xdata
mov edi ebx
lea esi [ esp + 0x58 ]
call sub_401b70
push esi
call sub_444fea
mov ecx esi
mov [ esp + 0x70 ] eax
call sub_402620
xor edi edi
lea esi [ esp + 0x20 ]
call sub_402b00
mov edx [ esp + 0x70 ]
mov [ esp + 0x20 ] edx
jmp r-xdata
push ebx
call sub_4112ef
mov ebx [ esp + 0x18 ]
add esp 0x4
lea eax [ esp + 0x24 ]
push eax
call sub_44b408
push ebp
call sub_44c80c
push ebx
call sub_4112ef
add esp 0x4
jmp r-xdata
sub_40f450
mov eax 0x10020
call sub_425210
xor eax eax
lea esp [ esp ]
mov cl [ eax + rw-data ]
mov dl [ eax + rw-data ]
mov [ esp + eax + 0xc ] cl
mov [ esp + eax + 0x14 ] dl
inc eax
cmp eax 0x8
jl r-xdata
lea eax [ esp ]
push r--data
push eax
call sub_413990
push 0x4
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_410f70
add esp 0x14
push ebx
push ebp
push esi
mov [ esp + 0x14 ] 0x0
push edi
jmp r-xdata
mov eax [ esp + 0x10034 ]
mov ecx [ eax ]
push ecx
push 0x10000
lea edx [ esp + 0x38 ]
push 0x1
push edx
call sub_4151b0
add esp 0x10
cmp eax 0x18
jl r-xdata
mov eax 0x3
mov ebp eax
lea edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10034 ]
lea edx [ ecx + ebp - 0x14 ]
mov ecx [ eax ]
push 0x1
push 0xffffffec
push ecx
mov [ esp + 0x24 ] edx
call sub_41557c
add esp 0xc
jmp r-xdata
xor edx edx
mov edi edi
mov bl [ esp + ecx + 0x1d ]
lea eax [ ecx + edx ]
cmp bl [ esp + eax + 0x31 ]
je r-xdata
cmp ecx 0x14
je r-xdata
mov bl [ esp + ecx + 0x1e ]
lea eax [ ecx + edx ]
cmp bl [ esp + eax + 0x32 ]
je r-xdata
inc ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x10034 ]
lea ecx [ eax + edx + 0x14 ]
mov edx [ esi ]
push 0x0
push ecx
push edx
call sub_41557c
mov eax [ esi ]
push eax
push 0x4
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call sub_4151b0
lea edx [ esp + 0x2c ]
push r--data
push edx
mov [ esp + 0x38 ] 0x0
call sub_4151d0
add esp 0x24
neg eax
sbb eax eax
and eax 0x4
jmp r-xdata
inc edx
cmp edx edi
jl r-xdata
mov bl [ esp + ecx + 0x1f ]
lea eax [ ecx + edx ]
cmp bl [ esp + eax + 0x33 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10020
retn 0x4
xor ecx ecx
lea esi [ esp + edx + 0x30 ]
add ecx 0x3
jmp r-xdata
mov bl [ esp + ecx + 0x20 ]
lea eax [ ecx + edx ]
cmp bl [ esp + eax + 0x34 ]
je r-xdata
add ecx 0x5
cmp ecx 0x14
jl r-xdata
add ecx 0x4
jmp r-xdata
mov al [ esp + ecx + 0x1c ]
cmp al [ esi + ecx ]
je r-xdata
jmp r-xdata
sub_40f580
push esi
test ebx ebx
je r-xdata
or esi 0xffffffff
jmp r-xdata
push ebx
call sub_4112d5
mov esi eax
add esp 0x4
inc esi
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push ebp
push edi
mov edi eax
cmp edi esi
jl r-xdata
push esi
jmp r-xdata
push edi
call sub_41171a
add esp 0x4
push 0x0
push 0x0
push edi
mov ebp eax
push ebp
push esi
push ebx
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
pop edi
mov eax ebp
pop ebp
pop esi
retn
sub_40f5e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1a8
push ebx
push esi
mov ebx r--data
call sub_40f580
mov esi eax
lea eax [ esp + 0xa8 ]
push esi
push eax
call sub_413990
push esi
call sub_4112ef
add esp 0xc
lea esi [ esp + 0x18 ]
call sub_40f6a0
lea eax [ esp + 0xa8 ]
mov ecx esi
call sub_40f6d0
xor ebx ebx
mov [ edi + 0x8 ] ebx
xor ecx ecx
mov eax ebx
movzx edx [ esp + ecx + 0x18 ]
add eax edx
movzx edx [ esp + ecx + 0x19 ]
add eax edx
movzx edx [ esp + ecx + 0x1a ]
add eax edx
movzx edx [ esp + ecx + 0x1b ]
add ecx 0x4
add eax edx
cmp ecx 0x10
jl r-xdata
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
push r--data
push eax
call sub_414e06
add esp 0x8
mov [ edi ] eax
cmp eax ebx
je r-xdata
mov eax 0x1
jmp r-xdata
push edi
call sub_40f450
cmp eax ebx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
push edx
push 0x10
lea eax [ esp + 0x10 ]
push 0x1
push eax
call sub_4151b0
add esp 0x10
push 0x8631bfd3
push 0x10
lea ecx [ esp + 0x10 ]
push ecx
call sub_44afdc
xor eax eax
mov [ edi + 0x8 ] ebx
xor ecx ecx
mov ecx [ edi ]
push ecx
mov esi eax
call sub_414e94
add esp 0x4
mov eax esi
movzx edx [ esp + eax + 0x8 ]
inc eax
imul ecx edx
cmp eax 0x10
jl r-xdata
mov eax [ edi ]
push eax
mov [ edi + 0x8 ] ecx
call sub_415484
add esp 0x4
mov [ edi + 0x4 ] eax
xor eax eax
jmp r-xdata
sub_40f6d0
push ebx
push esi
push edi
mov edi eax
push edi
mov esi ecx
call sub_4137e0
add esp 0x4
mov ebx eax
call sub_40f6a0
push edi
mov eax ebx
mov ecx esi
call sub_40f700
mov edi esi
call sub_40f790
pop edi
pop esi
pop ebx
retn
sub_40f700
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x44 ]
mov esi eax
mov eax ecx
shr eax 0x3
lea ecx [ ecx + esi * 8 ]
lea edx [ esi * 8 ]
and eax 0x3f
mov [ edi + 0x44 ] ecx
cmp ecx edx
jb r-xdata
inc [ edi + 0x48 ]
jmp r-xdata
mov ecx esi
shr ecx 0x1d
add [ edi + 0x48 ] ecx
mov ebx 0x40
sub ebx eax
cmp esi ebx
jae r-xdata
push ebx
lea edx [ eax + edi + 0x4c ]
push ebp
push edx
call sub_410f70
add esp 0xc
lea eax [ edi + 0x4c ]
call sub_40f890
lea eax [ ebx + 0x3f ]
cmp eax esi
jb r-xdata
xor ebx ebx
mov [ esp + 0x14 ] eax
xor eax eax
jmp r-xdata
mov eax [ esp + 0x14 ]
lea eax [ eax + ebp - 0x3f ]
call sub_40f890
mov eax [ esp + 0x14 ]
add eax 0x40
add ebx 0x40
mov [ esp + 0x14 ] eax
cmp eax esi
jb r-xdata
jmp r-xdata
sub esi ebx
push esi
add ebx ebp
lea ecx [ eax + edi + 0x4c ]
push ebx
push ecx
call sub_410f70
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40f790
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push ebx
lea ebx [ edi + 0x44 ]
push esi
mov edx 0x8
mov eax ebx
lea ecx [ esp + 0x10 ]
call sub_40f850
mov ecx [ ebx ]
shr ecx 0x3
and ecx 0x3f
cmp ecx 0x38
jae r-xdata
mov eax 0x78
jmp r-xdata
mov eax 0x38
sub eax ecx
push rw-data
mov ecx edi
call sub_40f700
lea eax [ esp + 0x10 ]
push eax
mov eax 0x8
mov ecx edi
call sub_40f700
lea esi [ edi + 0x34 ]
mov edx 0x10
mov eax esi
mov ecx edi
call sub_40f850
push 0x8
push 0x0
push ebx
call sub_4131f0
push 0x10
push 0x0
push esi
call sub_4131f0
push 0x40
lea ecx [ edi + 0x4c ]
push 0x0
push ecx
call sub_4131f0
lea ebx [ edi + 0x10 ]
add esp 0x24
mov [ ebx ] 0x0
xor esi esi
movzx edx [ esi + edi ]
push edx
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_415258
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_4139a0
inc esi
add esp 0x14
cmp esi 0x10
jl r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f850
test edx edx
jbe r-xdata
retn
push esi
lea esi [ edx - 0x1 ]
shr esi 0x2
inc ecx
add eax 0x2
inc esi
movzx edx [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
movzx edx [ eax - 0x1 ]
mov [ ecx ] dl
movzx edx [ eax ]
mov [ ecx + 0x1 ] dl
movzx edx [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
sub esi 0x1
jne r-xdata
pop esi
sub_40f890
sub esp 0x48
push ebx
mov ebx [ edi + 0x3c ]
push ebp
mov ebp [ edi + 0x40 ]
push esi
mov esi [ edi + 0x38 ]
lea ecx [ esp + 0x14 ]
call sub_40ff50
mov eax [ edi + 0x34 ]
mov edx ebx
and edx esi
mov ecx esi
not ecx
and ecx ebp
or ecx edx
add ecx eax
mov eax [ esp + 0x14 ]
lea eax [ ecx + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
mov ecx eax
not ecx
and ecx ebx
mov edx esi
and edx eax
or ecx edx
add ecx [ esp + 0x18 ]
lea ecx [ ecx + ebp - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edx ecx
not edx
and edx esi
mov ebp ecx
and ebp eax
or edx ebp
add edx [ esp + 0x1c ]
mov ebp ecx
lea edx [ edx + ebx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x20 ]
mov ebp edx
lea esi [ ebx + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
and ebp esi
mov ebx esi
not ebx
and ebx ecx
or ebx ebp
add ebx [ esp + 0x24 ]
mov ebp esi
lea eax [ ebx + eax - 0xa83f051 ]
rol eax 0x7
add eax esi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x28 ]
lea ecx [ ebx + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
and ebx esi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x2c ]
lea edx [ ebx + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov ebx edx
not ebx
and ebx eax
mov ebp ecx
and ebp edx
or ebx ebp
add ebx [ esp + 0x30 ]
mov ebp edx
lea esi [ ebx + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
and ebp esi
mov ebx esi
not ebx
and ebx ecx
or ebx ebp
add ebx [ esp + 0x34 ]
mov ebp esi
lea eax [ ebx + eax + 0x698098d8 ]
rol eax 0x7
add eax esi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x38 ]
lea ecx [ ebx + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
and ebx esi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x3c ]
mov ebp ecx
lea edx [ ebx + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x40 ]
mov ebp edx
lea esi [ ebx + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
and ebp esi
mov ebx esi
not ebx
and ebx ecx
or ebx ebp
add ebx [ esp + 0x44 ]
mov ebp esi
lea eax [ ebx + eax + 0x6b901122 ]
rol eax 0x7
add eax esi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x48 ]
lea ecx [ ebx + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
mov [ esp + 0xc ] ebx
and ebx esi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x4c ]
lea edx [ ebx + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov ebx edx
not ebx
mov [ esp + 0x10 ] ebx
and ebx eax
mov ebp ecx
and ebp edx
or ebx ebp
add ebx [ esp + 0x50 ]
mov ebp ecx
lea esi [ ebx + esi + 0x49b40821 ]
mov ebx [ esp + 0xc ]
and ebx edx
ror esi 0xa
add esi edx
and ebp esi
or ebx ebp
add ebx [ esp + 0x18 ]
mov ebp edx
lea eax [ ebx + eax - 0x9e1da9e ]
mov ebx [ esp + 0x10 ]
and ebx esi
rol eax 0x5
add eax esi
and ebp eax
or ebx ebp
add ebx [ esp + 0x2c ]
lea ecx [ ebx + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x40 ]
lea edx [ ebx + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov ebx eax
not ebx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x14 ]
mov ebp ecx
lea esi [ ebx + esi - 0x16493856 ]
ror esi 0xc
add esi edx
and ebp esi
mov ebx ecx
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x28 ]
mov ebp edx
lea eax [ ebx + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov ebx edx
not ebx
and ebx esi
and ebp eax
or ebx ebp
add ebx [ esp + 0x3c ]
lea ecx [ ebx + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x50 ]
lea edx [ ebx + edx - 0x275e197f ]
rol edx 0xe
mov ebx eax
not ebx
add edx ecx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x24 ]
mov ebp ecx
lea esi [ ebx + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
and ebp esi
mov ebx ecx
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x38 ]
mov ebp edx
lea eax [ ebx + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
and ebp eax
mov ebx edx
not ebx
and ebx esi
or ebx ebp
add ebx [ esp + 0x4c ]
lea ecx [ ebx + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x20 ]
lea edx [ ebx + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov ebx eax
not ebx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x34 ]
mov ebp ecx
lea esi [ ebx + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
and ebp esi
mov ebx ecx
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x48 ]
mov ebp edx
lea eax [ ebx + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov ebx edx
not ebx
and ebx esi
and ebp eax
or ebx ebp
add ebx [ esp + 0x1c ]
lea ecx [ ebx + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx + 0x676f02d9 ]
rol edx 0xe
mov ebx eax
add edx ecx
not ebx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x44 ]
lea esi [ ebx + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
mov ebx ecx
xor ebx edx
xor ebx esi
add ebx [ esp + 0x28 ]
lea eax [ ebx + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov ebx edx
xor ebx esi
xor ebx eax
add ebx [ esp + 0x34 ]
lea ebx [ ebx + ecx - 0x788e097f ]
rol ebx 0xb
add ebx eax
mov ecx ebx
xor ecx esi
xor ecx eax
add ecx [ esp + 0x40 ]
mov ebp ebx
lea edx [ ecx + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ebx
xor ebp edx
mov ecx ebp
xor ecx eax
add ecx [ esp + 0x4c ]
lea ecx [ ecx + esi - 0x21ac7f4 ]
ror ecx 0x9
add ecx edx
xor ebp ecx
add ebp [ esp + 0x18 ]
mov esi edx
xor esi ecx
lea eax [ eax + ebp - 0x5b4115bc ]
rol eax 0x4
add eax ecx
xor esi eax
add esi [ esp + 0x24 ]
lea esi [ esi + ebx + 0x4bdecfa9 ]
rol esi 0xb
add esi eax
mov ebx esi
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx - 0x944b4a0 ]
rol edx 0x10
add edx esi
mov ebx esi
xor ebx edx
mov ebp ebx
xor ebp eax
add ebp [ esp + 0x3c ]
lea ecx [ ecx + ebp - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ esp + 0x48 ]
lea eax [ ebx + eax + 0x289b7ec6 ]
rol eax 0x4
add eax ecx
mov ebx edx
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x14 ]
lea esi [ ebx + esi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov ebx esi
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x20 ]
lea ebx [ ebx + edx - 0x2b10cf7b ]
rol ebx 0x10
add ebx esi
mov edx esi
xor edx ebx
mov ebp edx
xor ebp eax
add ebp [ esp + 0x2c ]
lea ecx [ ecx + ebp + 0x4881d05 ]
ror ecx 0x9
add ecx ebx
xor edx ecx
add edx [ esp + 0x38 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx ebx
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ esp + 0x44 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ esp + 0x50 ]
lea esi [ esi + ebx + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov ebx edx
xor ebx esi
xor ebx eax
add ebx [ esp + 0x1c ]
lea ecx [ ebx + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x14 ]
lea eax [ ebx + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov ebx esi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x4c ]
lea esi [ ebx + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov ebx eax
not ebx
or ebx esi
xor ebx edx
add ebx [ esp + 0x28 ]
lea ecx [ ebx + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x44 ]
lea eax [ ebx + eax + 0x655b59c3 ]
rol eax 0x6
mov ebx esi
not ebx
add eax ecx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x20 ]
lea edx [ ebx + edx - 0x70f3336e ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x3c ]
lea esi [ ebx + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov ebx eax
not ebx
or ebx esi
xor ebx edx
add ebx [ esp + 0x18 ]
lea ecx [ ebx + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x34 ]
lea eax [ ebx + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov ebx esi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x50 ]
lea edx [ ebx + edx - 0x1d31920 ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x2c ]
lea esi [ ebx + esi - 0x5cfebcec ]
mov ebx eax
not ebx
rol esi 0xf
add esi edx
or ebx esi
xor ebx edx
add ebx [ esp + 0x48 ]
lea ecx [ ebx + ecx + 0x4e0811a1 ]
ror ecx 0xb
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x24 ]
lea eax [ ebx + eax - 0x8ac817e ]
rol eax 0x6
add eax ecx
mov ebx esi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x40 ]
lea edx [ ebx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x1c ]
lea esi [ ebx + esi + 0x2ad7d2bb ]
mov ebx [ edi + 0x34 ]
add ebx eax
rol esi 0xf
not eax
add esi edx
or eax esi
xor eax edx
add eax [ esp + 0x38 ]
mov [ edi + 0x34 ] ebx
lea eax [ eax + ecx - 0x14792c6f ]
ror eax 0xb
add eax [ edi + 0x38 ]
push 0x40
add eax esi
mov [ edi + 0x38 ] eax
mov eax [ edi + 0x3c ]
add eax esi
mov [ edi + 0x3c ] eax
mov eax [ edi + 0x40 ]
lea ecx [ esp + 0x18 ]
add eax edx
push 0x0
push ecx
mov [ edi + 0x40 ] eax
call sub_4131f0
add esp 0xc
pop esi
pop ebp
pop ebx
add esp 0x48
retn
sub_40ff50
push esi
add eax 0x2
mov edx 0x10
push edi
lea ebx [ ebx ]
movzx esi [ eax + 0x1 ]
movzx edi [ eax ]
shl esi 0x8
or esi edi
movzx edi [ eax - 0x1 ]
shl esi 0x8
or esi edi
movzx edi [ eax - 0x2 ]
shl esi 0x8
or esi edi
mov [ ecx ] esi
add ecx 0x4
add eax 0x4
sub edx 0x1
jne r-xdata
pop edi
pop esi
retn
sub_40ff90
sub esp 0x18
push edi
push eax
lea edi [ esp + 0x14 ]
call sub_40f5e0
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0xc ]
push edx
push r--data
lea eax [ esp + 0x1c ]
push eax
call sub_452574
test eax eax
je r-xdata
xor al al
pop edi
add esp 0x18
retn
mov edx [ esp + 0x8 ]
push edx
call sub_413a88
add esp 0x4
lea eax [ esp + 0x10 ]
push eax
call sub_434fe1
mov al 0x1
pop edi
add esp 0x18
retn
lea ecx [ esp + 0x10 ]
push ecx
call sub_434fe1
jmp r-xdata
sub_40ffb0
push ecx
push esi
push edi
mov edi ecx
mov esi eax
call sub_40fff0
mov edi eax
lea eax [ esp + 0x8 ]
push eax
push esi
push 0x104
push edi
call [ __import_lookup_table_0(KERNEL32:GetFullPathNameW) ]
call sub_410110
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ecx
retn
sub_40fff0
push esi
push edi
call sub_4112d5
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi eax
push edi
push esi
call sub_411691
add esp 0x10
mov eax esi
pop esi
retn
sub_410020
sub esp 0x214
push esi
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push 0x104
push edx
call [ __import_lookup_table_0(KERNEL32:GetFullPathNameW) ]
cmp [ ebx + 0x20 ] 0x0
ja r-xdata
xor esi esi
push edi
lea edi [ esp + 0x10 ]
call sub_40fff0
lea ecx [ esp + 0x8 ]
push ecx
lea esi [ ebx + 0x18 ]
mov [ esp + 0xc ] eax
call sub_410090
lea edx [ esp + 0xc ]
push edx
lea esi [ ebx + 0x28 ]
mov [ esp + 0x10 ] 0x1
call sub_410090
mov eax [ ebx + 0x20 ]
dec eax
pop edi
mov eax [ ebx + 0x2c ]
mov eax [ eax + esi * 4 ]
inc [ eax ]
mov eax esi
jmp r-xdata
inc esi
cmp esi [ ebx + 0x20 ]
jb r-xdata
pop esi
add esp 0x214
retn
mov eax [ ebx + 0x1c ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
lea ecx [ esp + 0xc ]
push ecx
push edx
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
sub_410090
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
add eax eax
mov [ esi + 0xc ] eax
cmp eax 0x4
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov eax 0x4
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
retn 0x4
sub_410130
sub esp 0x420
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jne r-xdata
push edi
push ebx
call sub_411691
add esp 0x8
xor al al
jmp r-xdata
push esi
lea ecx [ esp + 0x8 ]
push ecx
xor esi esi
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
add esp 0x420
retn
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
pop esi
je r-xdata
lea edx [ esp + 0x14 ]
push edi
push edx
call sub_411691
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
add esp 0x8
push esi
lea edx [ esp + 0x10 ]
push edx
lea edx [ esp + 0x18 ]
push edx
lea edx [ esp + 0x20 ]
push edx
push esi
push esi
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jne r-xdata
mov al 0x1
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x21c ]
push ecx
push edx
call [ __import_lookup_table_9(SHELL32:SHGetPathFromIDListW) ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
lea eax [ esp + 0x21c ]
push eax
push ebx
call sub_411691
add esp 0x8
sub_4101f0
sub esp 0x34
push ebx
push ebp
push esi
push edi
push 0xf
call [ __import_lookup_table_10(USER32:GetSysColorBrush) ]
push 0x7f00
xor ebx ebx
push ebx
mov edi eax
call [ LoadCursorW@IAT ]
mov esi [ LoadIconW@IAT ]
mov ebp eax
mov eax [ rw-data ]
push 0x63
push eax
call esi
mov ecx [ rw-data ]
push 0xa4
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push 0xa2
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0x1f ] bl
je r-xdata
push 0x4
call sub_443e8f
add esp 0x4
jmp r-xdata
mov ecx [ rw-data ]
push ebx
push 0x10
push 0x10
push 0x1
push 0x63
push ecx
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x10 ]
push edx
mov [ rw-data ] eax
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x18 ] 0x23
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] r--data
mov [ esp + 0x2c ] ecx
mov [ esp + 0x40 ] eax
mov [ esp + 0x1c ] sub_4010d0
call [ __import_lookup_table_10(USER32:RegisterClassExW) ]
mov ecx [ rw-data ]
mov [ rw-data ] ax
mov eax [ rw-data ]
push eax
push ecx
call sub_4102f0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
sub_4102f0
sub esp 0x40
mov eax [ rw-data ]
push esi
xor esi esi
push 0xf
mov [ rw-data ] eax
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x18 ] 0x2b
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] 0x1e
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] esi
call [ __import_lookup_table_10(USER32:GetSysColorBrush) ]
mov ecx [ esp + 0x48 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x4c ]
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x38 ] esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x3c ] r--data
mov [ esp + 0x1c ] r-xdata
call [ __import_lookup_table_10(USER32:RegisterClassExW) ]
push r--data
mov [ rw-data ] ax
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] 0x8
mov [ esp + 0x10 ] 0x13b
call [ InitCommonControlsEx@IAT ]
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
push 0xa9
push ecx
mov [ rw-data ] eax
call [ LoadIconW@IAT ]
mov edx [ rw-data ]
push eax
push 0xffffffff
push edx
call [ ImageList_ReplaceIcon@IAT ]
mov [ rw-data ] esi
pop esi
add esp 0x40
retn 0x8
sub_4103e0
mov eax [ rw-data ]
push esi
push 0x0
mov esi [ __import_lookup_table_10(USER32:CreateWindowExW) ]
push eax
push 0x0
push 0x0
push 0x64
push 0x12c
push 0x80000000
push 0x80000000
push 0xcf0000
push r--data
push r--data
push 0x0
call esi
mov ecx [ rw-data ]
push 0x0
push ecx
push 0x1
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x50b008c4
push 0x0
push r--data
push 0x0
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
mov esi [ ShowWindow@IAT ]
push 0x0
push edx
mov [ rw-data ] eax
call esi
mov eax [ rw-data ]
push 0x0
push eax
call esi
pop esi
retn
sub_410470
push ecx
mov eax [ esi + 0xc ]
cmp eax 0x6
jge r-xdata
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
cmp [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
jle r-xdata
pop ecx
retn
push ebx
push ebp
push edi
mov eax [ esi ]
xor ecx ecx
pop edi
pop ebp
pop ebx
pop ecx
retn
mov [ esp + 0xf ] 0x0
xor ebp ebp
mov edx [ esi + 0x8 ]
mov [ edx + ecx * 4 ] eax
mov eax [ eax + 0x20 ]
inc ecx
cmp ecx [ esi + 0xc ]
jl r-xdata
mov edx [ esi + 0xc ]
inc ebp
dec edx
cmp ebp edx
jl r-xdata
mov eax [ edi ]
mov [ edi ] ebx
mov ecx [ esi + 0x8 ]
mov [ esp + 0xf ] 0x1
mov [ ecx + ebp * 4 + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov edx [ ecx + ebp * 4 ]
mov ebx [ ecx + ebp * 4 + 0x4 ]
lea edi [ ecx + ebp * 4 ]
push edx
push ebx
call sub_443711
add esp 0x8
test al al
je r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
dec eax
test eax eax
jle r-xdata
sub_4104a0
push esi
xor esi esi
push 0x8000
push 0x0
push eax
mov eax [ edi + esi * 8 ]
push eax
call [ __import_lookup_table_0(KERNEL32:VirtualFreeEx) ]
mov ecx [ edi + esi * 8 ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
inc esi
cmp esi 0x10
jl r-xdata
mov eax [ edi + esi * 8 + 0x4 ]
test eax eax
jne r-xdata
pop esi
retn
sub_4104c0
push ebx
push esi
mov esi rw-data
xor ebx ebx
lea esp [ esp ]
push eax
call sub_44478f
mov [ esi ] ebx
jmp r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] bl
cmp [ rw-data ] bl
jne r-xdata
push eax
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp eax ebx
je r-xdata
pop esi
mov [ rw-data ] ebx
mov [ rw-data ] bl
pop ebx
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
retn
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_447ce0
mov eax [ rw-data ]
mov esi [ eax ]
push rw-data
call sub_437294
test esi esi
je r-xdata
pop esi
retn
sub_410560
push esi
push edi
call sub_4105e0
mov esi rw-data
call sub_410670
mov esi rw-data
call sub_410650
mov edi rw-data
mov [ rw-data ] r--data
call sub_410620
mov eax [ rw-data ]
push eax
call sub_4112ef
add esp 0x4
mov esi rw-data
mov [ rw-data ] r--data
call sub_410810
mov ecx [ rw-data ]
push ecx
call sub_4112ef
add esp 0x4
mov ecx rw-data
call sub_402620
pop edi
mov eax rw-data
pop esi
jmp sub_4014e0
sub_4105e0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 - 0x4 ]
mov eax [ edx ]
test eax eax
je r-xdata
push esi
mov esi rw-data
call sub_410810
cmp [ rw-data ] 0x0
pop esi
jne r-xdata
push rw-data
call sub_4333e4
mov eax [ eax ]
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push eax
call [ DeleteObject@IAT ]
push rw-data
call sub_43330a
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
retn
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_447ce0
mov eax [ rw-data ]
mov esi [ eax ]
push rw-data
call sub_437294
test esi esi
je r-xdata
pop esi
retn
sub_410620
cmp [ edi + 0x8 ] 0x0
jbe r-xdata
mov [ edi + 0x8 ] 0x0
retn
push esi
xor esi esi
lea esp [ esp ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi [ edi + 0x8 ]
jb r-xdata
pop esi
sub_410650
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_4427f7
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_410670
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_447d79
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_4106b0
mov ecx rw-data
call sub_40c060
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] 0x4
mov [ rw-data ] 0x1
mov eax rw-data
retn
sub_410750
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi eax
mov ebx 0x1
add [ esi ] ebx
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x7f
jne r-xdata
xor eax eax
push 0xffffffff
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x14 ]
push eax
push esi
push edi
mov ecx ebp
mov [ esp + 0x28 ] ebx
call sub_40ab50
mov [ rw-data ] ebx
mov [ ebp + 0xf8 ] ebx
test eax eax
jne r-xdata
mov [ rw-data ] ebx
mov [ ebp + 0xf8 ] ebx
lea esi [ esp + 0x10 ]
call sub_4092c0
jmp r-xdata
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
lea ecx [ esp + 0x10 ]
call sub_40c760
cmp [ ebp + 0x118 ] 0x0
mov [ rw-data ] eax
je r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ebp
call sub_45e62e
lea esi [ esp + 0x10 ]
call sub_4092c0
jmp r-xdata
add eax 0x80001000
cmp eax 0xfff
ja r-xdata
push 0xffffffff
push 0xb9
push ebp
call sub_45e62e
sub_410790
sub esp 0x18
mov eax [ esi + 0x11c ]
mov [ esp ] eax
lea esp [ esp ]
mov eax [ eax ]
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
push eax
push esi
call sub_4646a2
cmp al 0x1
jne r-xdata
add esp 0x18
retn
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x4 ]
push edx
call sub_440eac
mov eax [ esp ]
jmp r-xdata
mov eax [ esp + 0x4 ]
push 0x1
inc eax
push eax
push esi
call sub_46e7ba
test eax eax
jne r-xdata
sub_4107b0
push 0x10
mov [ edi + 0x8 ] 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ edi + 0xc ] eax
mov eax edi
retn
sub_4107f0
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
mov [ esi + 0x8 ] 0x0
retn
mov ebx [ eax + 0x4 ]
push eax
call sub_45231a
mov eax ebx
test ebx ebx
jne r-xdata
pop ebx
jmp r-xdata
sub_410810
cmp [ esi + 0x8 ] 0x0
ja r-xdata
push edi
xor edi edi
mov [ esi + 0x8 ] 0x0
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_4112ef
add esp 0x4
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
pop edi
jmp r-xdata
sub_410850
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x38 ]
push eax
call sub_44cc6c
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_410860
push esi
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
push edi
pop esi
retn
mov edi [ esi + 0x20 ]
call sub_4109d0
mov esi edi
test edi edi
jne r-xdata
pop edi
pop esi
retn
sub_410890
push esi
mov esi eax
push edi
mov edi [ esi + 0x8 ]
test edi edi
ja r-xdata
push ebx
xor ebx ebx
mov [ esi ] r--data
call sub_410810
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
push edx
call sub_4112ef
add esp 0x4
inc ebx
cmp ebx edi
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx * 4 ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
jmp r-xdata
sub_4108c0
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x30 ]
push eax
call sub_45234f
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_4108d0
xor ecx ecx
mov edx 0x1
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] cl
retn
sub_410900
push esi
mov esi eax
xor al al
mov [ esi + 0x14 ] al
mov [ esi + 0x15 ] al
mov [ esi + 0x16 ] al
mov [ esi + 0x17 ] al
mov [ esi + 0x18 ] al
mov [ esi + 0x19 ] al
mov [ esi + 0x1a ] al
mov [ esi + 0x1b ] al
mov [ esi + 0x1c ] al
mov [ esi + 0x1d ] al
mov [ esi + 0x1e ] al
mov [ esi + 0x1f ] al
call sub_410940
mov eax esi
pop esi
retn
sub_410940
mov [ esi ] 0x5
mov [ esi + 0x4 ] 0x5
mov [ esi + 0x8 ] 0x1
push ebx
xor ebx ebx
mov [ esi + 0x9 ] bl
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] bl
mov [ esi + 0x15 ] bl
mov [ esi + 0x16 ] bl
mov [ esi + 0x17 ] bl
mov [ esi + 0x18 ] bl
mov [ esi + 0x19 ] bl
push edi
mov edi [ MapVirtualKeyW@IAT ]
push ebx
mov [ esi + 0x1a ] bl
mov [ esi + 0x1b ] bl
mov [ esi + 0x1c ] bl
mov [ esi + 0x1d ] bl
mov [ esi + 0x1e ] bl
mov [ esi + 0x1f ] bl
push 0x5b
mov [ esi + 0xc ] 0x4
call edi
push ebx
push 0x10
mov [ esi + 0x29 ] al
call edi
push ebx
push 0xa0
mov [ esi + 0x26 ] al
call edi
push ebx
push 0xa1
mov [ esi + 0x27 ] al
call edi
push ebx
push 0x11
mov [ esi + 0x28 ] al
call edi
push ebx
push 0x12
mov [ esi + 0x24 ] al
call edi
pop edi
mov [ esi + 0x25 ] al
pop ebx
retn
sub_4109f0
push esi
mov esi eax
push edi
call sub_40df50
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
retn
sub_410aa0
mov eax [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
imul eax edi
sub edi 0x1
js r-xdata
pop edi
retn 0x10
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x14 ]
add esi eax
sub esi ebx
mov ecx esi
call ebp
sub edi 0x1
jns r-xdata
pop esi
pop ebp
pop ebx
sub_410ae0
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi ] r--data
ja r-xdata
push edi
xor edi edi
mov ecx [ esi + 0x4 ]
push ecx
mov [ esi + 0x8 ] 0x0
call sub_4112ef
add esp 0x4
pop esi
retn
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push 0x1
call sub_40e2e0
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
pop edi
jmp r-xdata
sub_410b20
push edi
mov edi eax
sub edi 0x1
js r-xdata
pop edi
retn 0x4
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
mov ecx esi
call ebx
add esi ebp
sub edi 0x1
jns r-xdata
pop esi
pop ebp
sub_410b50
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
retn
mov esi [ eax + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
pop esi
retn
sub_410b90
mov eax 0x2062c
call sub_425210
mov eax [ esp + 0x20630 ]
push ebx
xor ebx ebx
push 0x400
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x66
call sub_41171a
add esp 0x4
push 0x104
lea ecx [ esp + 0x14 ]
push ecx
push ebx
mov [ rw-data ] eax
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameW) ]
push ebx
push ebx
lea edx [ esp + 0x224 ]
push edx
lea eax [ esp + 0x434 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_413db0
push 0x104
lea edx [ esp + 0x234 ]
push r--data
push edx
call sub_413dfc
push ebx
push ebx
lea eax [ esp + 0x244 ]
push eax
lea ecx [ esp + 0x454 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
call sub_413e3c
push 0x20a
call sub_41171a
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
lea edx [ esp + 0x48 ]
push edx
inc eax
push ecx
mov [ rw-data ] eax
call sub_411691
add esp 0x40
lea eax [ esp + 0x8 ]
push eax
push 0x20019
push ebx
push r--data
push 0x80000001
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x630 ]
push edx
push ebx
push ebx
push r--data
push eax
mov [ esp + 0x1c ] 0x1fffe
call [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
test eax eax
jne r-xdata
mov eax rw-data
pop ebx
add esp 0x2062c
retn 0x4
mov ecx [ esp + 0x8 ]
push ecx
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
jmp r-xdata
mov eax [ esp + 0x4 ]
shr eax 0x1
xor ecx ecx
xor edx edx
mov [ esp + eax * 2 + 0x62c ] cx
mov [ esp + 0x4 ] eax
mov [ esp + eax * 2 + 0x62e ] dx
xor eax eax
push esi
mov [ esp + 0x14 ] ax
lea esi [ esp + 0x630 ]
lea ecx [ esp + 0x14 ]
push ecx
call sub_4112d5
add esp 0x4
test eax eax
je r-xdata
cmp ax 0x3b
je r-xdata
push 0x20a
call sub_41171a
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
push 0x104
lea edx [ esp + 0x1c ]
push edx
inc eax
push ecx
mov [ rw-data ] eax
call sub_41326a
xor eax eax
add esp 0x10
mov [ esp + 0x14 ] ax
cmp [ esi ] bx
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_4112d5
add esp 0x4
cmp [ esp + eax * 2 + 0x12 ] 0x5c
je r-xdata
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_411663
add esp 0x8
add esi 0x2
jmp r-xdata
pop esi
lea eax [ esp + 0x14 ]
push r--data
push eax
call sub_411663
add esp 0x8
movzx eax [ esi ]
xor ecx ecx
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] cx
cmp ax bx
je r-xdata
sub_410d10
pushfd
pop eax
mov ebx eax
xor eax 0x200000
push eax
popfd
pushfd
pop eax
cmp eax ebx
je r-xdata
mov eax 0x0
jmp r-xdata
mov eax 0x80000001
cpuid
and edx 0x20000000
je r-xdata
retn
mov eax 0x1
jmp r-xdata
sub_410d40
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ebx
pushad
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ edx + 0x4 ]
cmp eax 0x1
je r-xdata
mov eax ecx
dec eax
imul eax eax 0x18
add eax 0x30
add edx eax
add ecx esp
mov [ ebp - 0x4 ] ecx
mov eax [ edx + 0x24 ]
cmp eax 0x1
je r-xdata
mov ecx [ edx + 0x8 ]
lea eax [ edx ]
push eax
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ edx + 0x20 ]
cmp eax 0xa
je r-xdata
sub edx 0x18
jmp r-xdata
mov eax [ edx ]
push eax
jmp r-xdata
mov eax [ edx + 0x4 ]
push eax
mov eax [ edx ]
push eax
jmp r-xdata
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ edx + 0xc ]
cmp eax 0x1
je r-xdata
dec ecx
je r-xdata
popad
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x4 ] esp
je r-xdata
mov eax [ edx + 0x28 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
add esp [ edx + 0x8 ]
mov edx [ edx ]
call edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
jmp r-xdata
sub_410e26
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ebx
mov edx 0xbc614e
mov [ ebp - 0x4 ] edx
mov edx 0xbc614e
mov [ ebp - 0x8 ] edx
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax 0xbc614e
call eax
mov ebx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
add edx 0x30
lea ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ edx ] eax
mov eax [ ebx ]
mov [ edx ] eax
add ebx 0x4
mov eax [ ebx ]
mov [ edx + 0x4 ] eax
jmp r-xdata
add ebx 0x4
add edx 0x18
jmp r-xdata
dec ecx
je r-xdata
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
sub_410f70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_410ff8 ]
jmp [ ecx * 4 + jump_table_411078 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4110e4 ]
pop esi
pop edi
pop ebp
jmp sub_4167cc
jmp [ ecx * 4 + jump_table_411280 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_411184 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411280 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4110e4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_411280 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4110e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4110e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4110e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411280 ]
sub_4112d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4112fa
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_4169e9
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_4169e9
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_4170e7
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_41696e
mov [ esi ] eax
add esi 0x4
push esi
call sub_41696e
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_417047
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_417047
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_41696e
pop ecx
mov [ rw-data ] eax
sub_4113b4
mov edi edi
push esi
push 0x4
push 0x20
call sub_416ffb
mov esi eax
push esi
call sub_41696e
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4113e5
push 0xc
push r--data
call sub_41718c
call sub_41181b
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4112fa
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41141b
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
sub_411438
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_416c72
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_417d0e
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4175a2
mov [ esi + 0x4 ] eax
sub_4114bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov ebx [ ebp + 0x8 ]
xor esi esi
cmp ebx esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414a52
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
inc ebx
push eax
inc ebx
call sub_414a52
add esp 0x10
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp si ax
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
inc ebx
inc ebx
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
cmp si ax
je r-xdata
add eax 0x20
jmp r-xdata
sub_4115d0
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4114bf
add esp 0xc
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
pop edi
pop esi
pop ebp
retn
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
movzx eax ax
cmp cx si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx ax
je r-xdata
add eax 0x20
sub_411663
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
mov edx eax
je r-xdata
push esi
mov esi [ ebp + 0xc ]
inc edx
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx ecx [ esi ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_411691
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
mov [ ecx ] ax
inc ecx
inc ecx
inc edx
inc edx
test ax ax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4116d6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_417fe6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4112ef
pop ecx
sub_41171a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4138ba
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_411afc
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_4116fd
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_41805b
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_4116b0
push sub_42925f
call sub_411421
pop ecx
sub_41177f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_4117af
mov edi edi
push ebp
mov ebp esp
call sub_418252
push [ ebp + 0x8 ]
call sub_4180a7
push [ rw-data ]
call sub_4169e9
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_4117d8
mov edi edi
push ebp
mov ebp esp
push r--data
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_41182d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_41184a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_41186e
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_418486
push r--data
push r--data
call sub_41184a
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_418540
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_418460
call sub_411421
mov eax r--data
mov [ esp ] r--data
call sub_41182d
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_418540
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4118f3
push 0x18
push r--data
call sub_41718c
push 0x8
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411a0a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4171d1
retn
mov [ rw-data ] ebx
push 0x8
call sub_41832d
pop ecx
push [ ebp + 0x8 ]
call sub_411803
push r--data
mov eax r--data
call sub_41182d
pop ecx
push [ rw-data ]
call sub_4169e9
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_41182d
pop ecx
push [ rw-data ]
call sub_4169e9
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_4169e0
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_4169e9
mov edi eax
call sub_4169e0
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_4169e9
mov edi eax
push [ rw-data ]
call sub_4169e9
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_411a69
mov edi edi
push esi
call sub_4169e0
mov esi eax
push esi
call sub_411ab7
push esi
call sub_4189d7
push esi
call sub_417d84
push esi
call sub_4189c8
push esi
call sub_4189b9
push esi
call sub_4187a7
push esi
call sub_41ae89
push esi
call sub_418636
push sub_411a35
call sub_41696e
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_411ac6
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_418407
push [ rw-data ]
call sub_4169e9
push [ ebp + 0x8 ]
mov esi eax
call sub_41696e
push 0x4
mov [ rw-data ] eax
call sub_41832d
add esp 0x10
mov eax esi
pop esi
pop ebp
retn
sub_411afc
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_4169e9
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_411b24
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x1
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_411b63
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_413163 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_4131f0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_418a9d
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_41326a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
movzx eax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_4132b4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi ecx
push 0x2d
pop edx
mov [ ecx ] dx
add ecx 0x2
neg eax
add edx 0x30
add edx 0x57
jmp r-xdata
xor edx edx
div [ ebp + 0x8 ]
cmp edx 0x9
jbe r-xdata
xor eax eax
mov [ ecx ] ax
dec ecx
dec ecx
mov [ ecx ] dx
inc ecx
inc ecx
test eax eax
ja r-xdata
mov dx [ esi ]
movzx eax [ ecx ]
mov [ ecx ] dx
dec ecx
mov [ esi ] ax
dec ecx
inc esi
inc esi
cmp esi ecx
jb r-xdata
pop esi
pop ebp
retn 0x8
sub_413308
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_4132b4
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_413332
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
push 0x2d
pop eax
mov [ esi ] ax
mov eax [ ebp + 0xc ]
add esi 0x2
neg ebx
adc eax 0x0
neg eax
jmp r-xdata
add ecx 0x30
add ecx 0x57
jmp r-xdata
mov edi esi
xor ecx ecx
push ecx
push [ ebp + 0x10 ]
push eax
push ebx
call sub_418b30
mov [ ebp + 0xc ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
jb r-xdata
mov [ esi ] cx
inc esi
inc esi
test eax eax
ja r-xdata
xor eax eax
mov [ esi ] ax
dec esi
dec esi
test ebx ebx
ja r-xdata
mov cx [ edi ]
movzx eax [ esi ]
mov [ esi ] cx
dec esi
mov [ edi ] ax
dec esi
inc edi
inc edi
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4133b1
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413332
mov eax [ ebp + 0x10 ]
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_4133e4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_413452
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411438
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413503
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_41353a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_4193d5
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_4135d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_414a52
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_414a52
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_4136bc
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4135d2
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_413772
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
movzx edx cx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
inc edi
inc edi
movzx edx [ edi ]
inc eax
inc eax
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
movzx edx dx
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
inc ecx
inc ecx
cmp [ eax + ecx ] bx
jne r-xdata
sub_4137e0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41386b
push 0xc
push r--data
call sub_41718c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
push 0x4
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41a74c
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4138b1
sub_4138ba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_411afc
pop ecx
call sub_417f23
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_418252
push 0x1e
call sub_4180a7
push 0xff
call sub_411803
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_41386b
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_417f23
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_411afc
pop ecx
test eax eax
je r-xdata
call sub_417f23
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_413990
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4139a0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_413a88
push 0xc
push r--data
call sub_41718c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4171d1
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_419f6d
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_417f23
mov esi eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call sub_417ee1
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413ade
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_419f9d
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_413b16
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41aa61
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_413b67
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_413b16
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_413b95
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
cmp edx edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax edi
je r-xdata
cmp [ ebp + 0x10 ] edi
jbe r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax edi
je r-xdata
cmp [ ebp + 0x18 ] edi
jbe r-xdata
xor eax eax
mov [ edx ] ax
cmp [ ebp + 0x18 ] edi
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax edi
je r-xdata
cmp [ ebp + 0x20 ] edi
jbe r-xdata
xor edx edx
mov [ eax ] dx
cmp [ ebp + 0x1c ] edi
jne r-xdata
jmp r-xdata
cmp ecx edi
jne r-xdata
cmp [ ebp + 0x28 ] edi
jbe r-xdata
xor edx edx
mov [ eax ] dx
cmp [ ebp + 0x20 ] edi
je r-xdata
cmp [ ebp + 0x20 ] edi
jne r-xdata
call sub_417f23
cmp [ ebp - 0x4 ] edi
jne r-xdata
call sub_417f23
xor edx edx
mov [ eax ] dx
cmp [ ebp + 0x24 ] edi
jne r-xdata
jmp r-xdata
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
push 0x22
pop ecx
mov [ eax ] ecx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x28 ] edi
jne r-xdata
cmp [ ebp + 0x28 ] edi
jne r-xdata
xor eax eax
inc eax
mov esi ecx
cmp [ esi ] 0x3a
jne r-xdata
dec eax
inc esi
inc esi
cmp eax edi
ja r-xdata
cmp edx edi
je r-xdata
cmp edx edi
je r-xdata
cmp [ esi ] di
je r-xdata
movzx eax [ ecx ]
xor ebx ebx
mov esi ecx
test ax ax
je r-xdata
xor eax eax
mov [ edx ] ax
add esi 0x2
mov [ ebp + 0x8 ] esi
mov ecx esi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x3
jb r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movzx eax ax
cmp edx edi
je r-xdata
push 0x2
push ecx
push 0xffffffff
push edx
call sub_41ab19
add esp 0x10
test ebx ebx
je r-xdata
xor edx edx
mov [ eax ] dx
lea edi [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp ebx ecx
jb r-xdata
cmp ax 0x2f
je r-xdata
test edi edi
je r-xdata
cmp ax 0x2e
jne r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
sub esi ecx
sar esi 0x1
cmp [ ebp + 0x20 ] esi
ja r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ebx esi
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
push esi
push ecx
push 0xffffffff
push [ ebp + 0x1c ]
call sub_41ab19
add esp 0x10
xor edi edi
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov eax ebx
sub eax ecx
sar eax 0x1
cmp [ ebp + 0x20 ] eax
jbe r-xdata
mov [ ebp + 0x8 ] edi
mov ecx edi
jmp r-xdata
mov eax edi
sub eax ecx
sar eax 0x1
cmp [ ebp + 0x18 ] eax
jbe r-xdata
sub esi ebx
sar esi 0x1
cmp [ ebp + 0x28 ] esi
jbe r-xdata
push eax
push ecx
push 0xffffffff
push [ ebp + 0x1c ]
call sub_41ab19
mov ecx [ ebp + 0x8 ]
add esp 0x10
push eax
push ecx
push 0xffffffff
push [ ebp + 0x14 ]
call sub_41ab19
add esp 0x10
push esi
push ebx
push 0xffffffff
push [ ebp + 0x24 ]
call sub_41ab19
add esp 0x10
jmp r-xdata
sub_413db0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
neg ecx
sbb ecx ecx
mov eax 0x100
and ecx eax
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
neg ecx
sbb ecx ecx
and ecx eax
push ecx
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
neg ecx
sbb ecx ecx
and ecx eax
mov eax [ ebp + 0xc ]
push ecx
push [ ebp + 0x10 ]
neg eax
sbb eax eax
and eax 0x3
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413b95
add esp 0x24
pop ebp
retn
sub_413dfc
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
mov cx [ edx ]
inc edx
inc edx
test cx cx
jne r-xdata
dec edx
dec edx
cmp [ ebp + 0x10 ] 0x0
push esi
je r-xdata
xor ecx ecx
mov [ edx ] cx
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx ecx [ esi ]
dec [ ebp + 0x10 ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
je r-xdata
sub_413e3c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_41abec
add esp 0x18
pop ebp
retn
sub_413e5c
push 0xc
push r--data
call sub_41718c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_41588e
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_4159a6
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_41588e
add eax ebx
push eax
call sub_41ad10
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_41588e
add eax ebx
push eax
call sub_4193d5
mov [ ebp - 0x1c ] eax
call sub_41588e
add eax ebx
push eax
push edi
call sub_41adac
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413ef8
mov eax [ ebp - 0x1c ]
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_4171d1
retn
sub_413f0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_4190c9
add esp 0xc
test eax eax
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
inc esi
inc esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push esi
call sub_4112d5
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_41ade0
fld [ eax + 0x10 ]
add esp 0x18
cmp [ ebp - 0x4 ] bl
je r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_413faa
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_4193d5
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_41405d
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_416bf9
test eax eax
je r-xdata
push r--data
call sub_418540
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:ExitThread) ]
push eax
call sub_416dbb
pop ecx
call [ r--data ]
sub_4140db
mov edi edi
push ebp
mov ebp esp
push esi
call sub_416a84
call sub_416a7e
push eax
call sub_416a64
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_416c8c
mov esi [ ebp + 0x8 ]
push esi
call sub_416a7e
push eax
call sub_416ab8
test eax eax
jne r-xdata
call sub_41409a
push r--data
call sub_418540
pop ecx
test eax eax
je r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call [ __import_lookup_table_0(KERNEL32:ExitThread) ]
call [ r--data ]
cmp [ r--data ] 0x0
je r-xdata
sub_41415e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_416a84
push 0x214
push 0x1
call sub_416ffb
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
xor eax eax
jmp r-xdata
push esi
call sub_413a88
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_416c72
push [ eax + 0x6c ]
push esi
call sub_416b12
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
cmp eax ebx
jne r-xdata
pop edi
pop ebx
leave
retn
xor eax eax
push [ ebp - 0x4 ]
call sub_417f49
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_4140db
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:CreateThread) ]
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ ebp - 0x4 ] eax
sub_41420e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
inc eax
inc eax
xor eax eax
sub_414234
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
push ebx
push esi
push edi
test dx dx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
inc eax
inc eax
movzx edx [ eax ]
test dx dx
jne r-xdata
movzx ecx di
mov esi ebx
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_414277
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
dec eax
dec eax
cmp eax edx
je r-xdata
sub_4142a3
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_416c72
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test ecx ecx
jne r-xdata
movzx edx [ ecx ]
push esi
push edi
test dx dx
je r-xdata
mov ecx [ eax + 0x1c ]
cmp [ ecx ] 0x0
mov [ ebp + 0x8 ] ecx
je r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
neg eax
sbb eax eax
and eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
cmp [ edi ] 0x0
je r-xdata
movzx esi ax
cmp [ esi ] 0x0
jne r-xdata
movzx edi [ ecx ]
movzx edx ax
inc ecx
inc ecx
movzx edx [ ecx ]
test dx dx
jne r-xdata
inc edi
inc edi
movzx esi [ edi ]
test si si
jne r-xdata
xor eax eax
mov [ ecx ] ax
inc ecx
inc ecx
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
inc esi
inc esi
movzx edx [ esi ]
test dx dx
jne r-xdata
mov edi [ ebp + 0xc ]
test ax ax
je r-xdata
cmp si dx
je r-xdata
mov esi [ ebp + 0xc ]
test ax ax
je r-xdata
jmp r-xdata
cmp dx di
je r-xdata
sub_41434e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_41440a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_414443
push 0x10
push r--data
call sub_41718c
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_417f23
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_417f23
mov [ eax ] 0x9
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
call sub_4171d1
retn
cmp eax 0x20000
je r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x16
xor ebx ebx
call sub_417f23
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41434e
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414530
mov eax [ ebp - 0x1c ]
sub_41453a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_41456c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_4191c9
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_41486c
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_41453a
pop ecx
push eax
call sub_41c3cf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_410f70
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_4146ce
push 0xc
push r--data
call sub_41718c
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_415965
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41456c
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414746
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
call sub_4171d1
retn
sub_414750
push 0xc
push r--data
call sub_41718c
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_415965
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_4171d1
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_41453a
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414862
mov eax [ ebp - 0x1c ]
push ebx
call sub_41ad10
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_41c551
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_41adac
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_41486c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_41453a
pop ecx
push eax
call sub_41c3cf
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4148d4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41486c
pop ecx
test eax eax
je r-xdata
push esi
call sub_41491c
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_41453a
push eax
call sub_41d0e9
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_41491c
push 0x14
push r--data
call sub_41718c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_418407
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4149ed
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_4171d1
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4159a6
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_4149be
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_4148d4
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4148d4
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4149f6
push 0xc
push r--data
call sub_41718c
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_415965
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_4148d4
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414a3f
mov eax [ ebp - 0x1c ]
push esi
call sub_41491c
pop ecx
jmp r-xdata
call sub_4171d1
retn
sub_414a52
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_411438
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_41d1ca
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_4190c9
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_414b1a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_411438
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_417f23
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41aa61
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41d5c6
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_414c2f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_414b1a
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_414c5b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xe ]
mov ecx 0x7ff0
mov edx eax
and edx ecx
cmp dx cx
jne r-xdata
and eax 0x8000
mov ecx eax
test dx dx
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41d637
dec eax
pop ecx
pop ecx
je r-xdata
fldz
fcomp [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
mov eax ecx
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff08
add eax 0x100
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffffe0
add eax 0x40
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffff90
sub eax 0xffffff80
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_414cef
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_41df70
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_414d40
push 0xc
push r--data
call sub_41718c
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_4171d1
retn
call sub_41e28c
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_417f23
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_41dfd8
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414dfc
mov eax [ ebp - 0x1c ]
call sub_417f23
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_41e3c4
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_414e1d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_41486c
push esi
mov ebx eax
call sub_41e680
push esi
call sub_41453a
push eax
call sub_41e5b3
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_413a88
pop ecx
mov [ esi + 0x1c ] edi
sub_414e94
push 0xc
push r--data
call sub_41718c
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_417f23
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_415965
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_414e1d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414f08
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_4171d1
retn
mov eax [ ebp - 0x1c ]
sub_414f10
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_4131f0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_41e6b1
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_417f23
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4131f0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_41453a
pop ecx
push eax
call sub_41ed9e
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41ee9b
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_417ebb
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4131f0
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_41511a
push 0xc
push r--data
call sub_41718c
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_415965
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414f10
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4151a6
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_4171d1
retn
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4131f0
add esp 0xc
sub_4151d0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_415258
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41c551
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_4152e7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_41453a
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
push 0x1
push ebx
push eax
call sub_41efd4
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_417f23
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_41efd4
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_41efd4
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_415484
push 0xc
push r--data
call sub_41718c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_415965
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_4152e7
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4154e8
mov eax [ ebp - 0x1c ]
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_4171d1
retn
sub_4154f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_417f23
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41486c
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_4152e7
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41453a
pop ecx
push eax
call sub_41efd4
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_41557c
push 0xc
push r--data
call sub_41718c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_417f23
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_415965
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4154f2
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4155f7
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_4171d1
retn
cmp edi 0x2
jne r-xdata
sub_415601
cmp [ r--data ] 0x0
push esi
je r-xdata
call sub_416bf9
mov esi eax
test esi esi
je r-xdata
push r--data
call sub_418540
pop ecx
test eax eax
je r-xdata
push 0x0
call [ __import_lookup_table_0(KERNEL32:ExitThread) ]
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
call [ r--data ]
push esi
call sub_416dbb
pop ecx
push eax
call [ CloseHandle@IAT ]
sub_41568b
mov edi edi
push ebp
mov ebp esp
call sub_416a84
call sub_416a7e
push eax
call sub_416a64
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_416c8c
push [ ebp + 0x8 ]
call sub_416a7e
push eax
call sub_416ab8
test eax eax
jne r-xdata
call sub_41564a
push r--data
call sub_418540
pop ecx
test eax eax
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call [ __import_lookup_table_0(KERNEL32:ExitThread) ]
call [ r--data ]
sub_415702
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_416a84
push 0x214
push 0x1
call sub_416ffb
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_413a88
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_416c72
push [ eax + 0x6c ]
push esi
call sub_416b12
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
push esi
push 0x4
push esi
push sub_41568b
push [ ebp + 0xc ]
mov [ esi + 0x54 ] edi
push ebx
mov [ esi + 0x58 ] eax
call [ __import_lookup_table_0(KERNEL32:CreateThread) ]
mov edi eax
mov [ esi + 0x4 ] edi
cmp edi ebx
je r-xdata
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
push [ ebp - 0x4 ]
call sub_417f49
pop ecx
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ ebp - 0x4 ] eax
push edi
call [ __import_lookup_table_0(KERNEL32:ResumeThread) ]
cmp eax 0xffffffff
jne r-xdata
pop esi
mov eax edi
sub_4157bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
dec [ ebp - 0x1c ]
js r-xdata
push edi
lea eax [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4193d5
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
pop esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4191c9
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_415894
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_416ffb
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_416ffb
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_415965
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_418407
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4159a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_418407
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_4159d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41832d
pop ecx
pop ebp
retn
sub_415a14
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_41832d
pop ecx
pop ebp
retn
sub_415a64
fxch st1
call sub_41ffac
fprem
jmp r-xdata
cmp [ rw-data ] 0x1
je r-xdata
fstp st1
retn
fwait
fnstsw ax
fwait
sahf
jpe r-xdata
sub_415a82
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0xc ] ebx
ja r-xdata
call sub_417f23
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x14 ] ebx
mov [ esi ] ax
setne al
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
call sub_417f23
push 0x16
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x10 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_417f23
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x14 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
neg [ ebp + 0x8 ]
push 0x2d
pop eax
mov [ esi ] ax
lea ecx [ esi + 0x2 ]
mov [ ebp - 0x4 ] 0x1
add edx 0x30
add edx 0x57
jmp r-xdata
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp eax [ ebp + 0xc ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ecx ] dx
inc ecx
inc ecx
inc eax
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
xor eax eax
mov [ ecx ] ax
dec ecx
dec ecx
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp edx 0x9
jbe r-xdata
mov dx [ edi ]
movzx eax [ ecx ]
mov [ ecx ] dx
dec ecx
mov [ edi ] ax
dec ecx
inc edi
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_415b78
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415a82
pop ebp
retn
sub_415ba4
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push edi
push 0x24
push 0xff
push esi
call sub_4131f0
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi ebx
jne r-xdata
call sub_417f23
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
mov ecx [ edi ]
jg r-xdata
call sub_417f23
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
jmp r-xdata
call sub_420a73
lea eax [ ebp - 0x8 ]
push eax
call sub_420d46
pop ecx
test eax eax
je r-xdata
jg r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
cmp ecx ebx
jb r-xdata
pop edi
lea eax [ ebp - 0xc ]
push eax
call sub_420d7f
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_420db8
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx ebx
mov edi [ edi ]
jl r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
push eax
push esi
call sub_420b03
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_420b03
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_420ac2
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_420e10
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_420ec0
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov edi eax
sub edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
sbb ebx ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_420ac2
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_420e10
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_420ec0
mov [ esi + 0x8 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_420ec0
mov [ esi ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_420b03
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_420e10
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
jbe r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_415e5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_413a88
pop ecx
sub_415e7c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp eax ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jbe r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0x10 ]
call sub_4112d5
mov esi eax
lea eax [ edi - 0x1 ]
mov edi 0x7fffffef
inc esi
pop ecx
cmp eax edi
ja r-xdata
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0xc ]
lea eax [ eax + eax + 0x8 ]
cmp eax 0x400
ja r-xdata
xor eax eax
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax edi
ja r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov eax esp
cmp eax ebx
je r-xdata
mov [ ebp - 0xc ] ebx
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp - 0x10 ]
call sub_415e5c
mov eax [ ebp - 0x8 ]
pop ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x18 ]
lea eax [ esi + esi ]
lea ecx [ eax - 0x1 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp - 0xc ]
push ebx
call sub_421eed
add esp 0x18
cmp eax ebx
je r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov eax esp
cmp eax ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
add eax 0x8
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx ] cx
push [ ebp + 0x18 ]
mov esi [ ebp + 0xc ]
push ebx
push [ ebp + 0x14 ]
lea eax [ esi + esi ]
push [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_421b07
add esp 0x18
test eax eax
je r-xdata
cmp eax 0x16
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov [ ebp - 0x8 ] ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x8 ]
push 0xffffffff
push [ ebp - 0x10 ]
push esi
push [ ebp + 0x8 ]
push eax
call sub_421113
add esp 0x18
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
jmp r-xdata
cmp eax 0x22
jne r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
push 0x22
pop edi
cmp eax 0x16
je r-xdata
push [ ebp - 0xc ]
call sub_415e5c
pop ecx
dec [ ebp - 0x8 ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
cmp eax edi
jne r-xdata
mov [ ebp - 0x8 ] ebx
call sub_417f23
mov [ eax ] edi
cmp [ ebp - 0x8 ] esi
jb r-xdata
sub_416052
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415e7c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4160b0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
push esi
push edi
fstp [ ebp - 0x8 ]
mov esi 0xffff
push esi
push 0x133f
call sub_41de71
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x7fffffff
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x8 ] eax
call sub_41de71
fld [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41d637
dec eax
pop ecx
pop ecx
je r-xdata
push esi
push edi
call sub_41de71
fld [ ebp + 0x8 ]
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
push esi
push edi
call sub_41de71
fld [ ebp + 0x8 ]
fchs
jmp r-xdata
dec eax
fld [ ebp + 0x8 ]
push edi
je r-xdata
push ecx
push ecx
fstp [ esp ]
push 0x15
call sub_41dd32
add esp 0x10
jmp r-xdata
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x15
push 0x8
call sub_41dd87
add esp 0x1c
jmp r-xdata
pop edi
pop esi
leave
retn
sub_416193
push 0x58
push r--data
call sub_41718c
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetStartupInfoW) ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_416e29
test eax eax
jne r-xdata
push 0x1c
call sub_41616a
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_41843a
mov [ ebp - 0x4 ] ebx
call sub_41b669
test eax eax
jge r-xdata
push 0x10
call sub_41616a
cmp [ eax + r--data ] 0xe
jbe r-xdata
call GetCommandLineW
mov [ rw-data ] eax
call sub_42235f
mov [ rw-data ] eax
call sub_4222b1
test eax eax
jge r-xdata
push 0x1b
call sub_4117af
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_422082
test eax eax
jge r-xdata
push 0x8
call sub_4117af
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_41aa31
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_41186e
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_4117af
pop ecx
call sub_42203c
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_4117af
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_411a4b
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_411a1f
push ecx
push eax
push esi
push __dos_header
call sub_40d7f0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
call sub_4171d1
retn
sub_4162d1
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_411a5a
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
jmp r-xdata
push eax
call sub_411a35
call sub_4171d1
retn
sub_416320
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4163a8 ]
jmp [ ecx * 4 + jump_table_416428 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416494 ]
pop esi
pop edi
pop ebp
jmp sub_4167cc
jmp [ ecx * 4 + jump_table_416630 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_416534 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416630 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416494 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416630 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416494 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416494 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416494 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416630 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416630 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416630 ]
sub_416685
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_416745
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4167cc
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_4167cc
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_416745
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_4168ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_4168af
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41696e
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
call sub_41177f
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_4169e9
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
call sub_41177f
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_416a84
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_4169e9
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:TlsSetValue) ]
sub_416ad5
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_4182d6
push eax
call [ __import_lookup_table_0(KERNEL32:TlsFree) ]
or [ rw-data ] 0xffffffff
sub_416b12
push 0xc
push r--data
call sub_41718c
mov esi r--data
push esi
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_41177f
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416be7
push 0xc
call sub_418407
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_417ba8
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416bf0
call sub_4171d1
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_416bf9
mov edi edi
push esi
push edi
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push [ rw-data ]
mov edi eax
call sub_416a84
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ __import_lookup_table_0(KERNEL32:SetLastError) ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_416ffb
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_413a88
pop ecx
xor esi esi
push 0x0
push esi
call sub_416b12
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_416c8c
push 0x8
push r--data
call sub_41718c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4171d1
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_413a88
pop ecx
push 0xd
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_413a88
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416da6
push 0xc
call sub_418407
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416db2
push esi
call sub_413a88
pop ecx
push edi
call sub_417c37
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_413a88
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_417a5f
pop ecx
sub_416dbb
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ __import_lookup_table_0(KERNEL32:TlsSetValue) ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_416c8c
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_416e29
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_41177f
pop ecx
call sub_416ad5
mov esi [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ __import_lookup_table_0(KERNEL32:TlsSetValue) ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ __import_lookup_table_0(KERNEL32:TlsFree) ]
mov [ rw-data ] sub_416a5b
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_411a69
push [ rw-data ]
call sub_41696e
push [ rw-data ]
mov [ rw-data ] eax
call sub_41696e
push [ rw-data ]
mov [ rw-data ] eax
call sub_41696e
push [ rw-data ]
mov [ rw-data ] eax
call sub_41696e
add esp 0x10
mov [ rw-data ] eax
call sub_41828b
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_416c8c
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ __import_lookup_table_0(KERNEL32:TlsAlloc) ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_416ffb
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_416b12
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_416fb6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4138ba
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_416ffb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422452
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_417047
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422570
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_417095
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42278b
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4170e7
push 0x10
push r--data
call sub_41718c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_417f23
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:HeapSize) ]
mov esi eax
push 0x4
call sub_418407
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_419f6d
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_4171d1
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417181
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_41718c
push sub_4171f0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4171f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_421fa7
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_421fa7
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41e500
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_41e4b6
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_421fa7
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_421fa7
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41e4e6
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41e500
mov eax [ ebp + 0xc ]
push rw-data
call sub_418540
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_421fa7
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_41e4cd
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_421fa7
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_41737c
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4173ab
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4131f0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41740f
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:GetCPInfo) ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4229c0
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41d5c6
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41d5c6
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4131f0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4175a2
push 0xc
push r--data
call sub_41718c
call sub_416c72
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41763d
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_4171d1
retn
push 0x20
call sub_4117af
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_413a88
pop ecx
sub_417646
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_411438
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ __import_lookup_table_0(KERNEL32:GetOEMCP) ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ __import_lookup_table_0(KERNEL32:GetACP) ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4176c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_417646
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_4173ab
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4131f0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_41737c
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ __import_lookup_table_0(KERNEL32:IsValidCodePage) ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_41740f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ __import_lookup_table_0(KERNEL32:GetCPInfo) ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4131f0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41737c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4178a7
push 0x14
push r--data
call sub_41718c
or [ ebp - 0x20 ] 0xffffffff
call sub_416c72
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4175a2
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_417646
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_416fb6
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_4171d1
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4176c2
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_417f23
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_413a88
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_413a88
pop ecx
push 0xd
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417a08
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_413a88
pop ecx
sub_417a5f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_413a88
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_413a88
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_413a88
push [ esi + 0xc0 ]
call sub_413a88
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_422a02
push [ edi ]
call sub_413a88
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_413a88
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_413a88
pop ecx
push [ esi + 0xb0 ]
call sub_413a88
push [ esi + 0xbc ]
call sub_413a88
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_413a88
push [ esi + 0xbc ]
call sub_422bdc
pop ecx
pop ecx
push eax
call sub_413a88
pop ecx
push eax
call sub_413a88
push [ esi + 0xbc ]
call sub_422b97
pop ecx
pop ecx
sub_417ba8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_417c37
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_417cd0
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_417ba8
pop ecx
test esi esi
je r-xdata
push esi
call sub_417c37
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_417a5f
pop ecx
sub_417d0e
push 0xc
push r--data
call sub_41718c
call sub_416c72
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_417cd0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417d78
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_416c72
mov esi [ eax + 0x6c ]
mov eax esi
call sub_4171d1
retn
push 0x20
call sub_4117af
pop ecx
sub_417d93
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_4131f0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ __import_lookup_table_0(KERNEL32:SetUnhandledExceptionFilter) ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ __import_lookup_table_0(KERNEL32:TerminateProcess) ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_422ec0
pop ecx
sub_417ebb
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_4169e9
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_422ec0
pop ecx
pop ebp
jmp sub_417d93
pop ebp
jmp eax
sub_417ee1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_417f49
mov edi edi
push ebp
mov ebp esp
push esi
call sub_417f36
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_417ee1
pop ecx
mov esi eax
call sub_417f23
mov [ eax ] esi
pop esi
pop ebp
retn
sub_417f89
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_4137e0
mov edi eax
inc edi
push edi
call sub_4138ba
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_422e0b
add esp 0xc
jmp r-xdata
sub_418009
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_417fe6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4112ef
pop ecx
sub_41803a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41802a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4112ef
pop ecx
sub_41805b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ __import_lookup_table_0(KERNEL32:RaiseException) ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_4180a7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_4230a1
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_4230a1
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_4137e0
pop ecx
push eax
push [ esi ]
push ebx
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_422e0b
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameA) ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
push esi
call sub_4137e0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_422e0b
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_4137e0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_422d56
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417d93
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_422c90
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_422f38
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
push r--data
push ebx
push edi
call sub_422c90
add esp 0xc
test eax eax
je r-xdata
sub_418252
push 0x3
call sub_4230a1
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4180a7
push 0xff
call sub_4180a7
pop ecx
pop ecx
push 0x3
call sub_4230a1
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41828b
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_4189e6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4182d6
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_413a88
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_418344
push 0xc
push r--data
call sub_41718c
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_418252
push 0x1e
call sub_4180a7
push 0xff
call sub_411803
push 0x18
call sub_416fb6
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_418407
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_417f23
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_4171d1
retn
push edi
call sub_413a88
pop ecx
push 0xfa0
push edi
call sub_4189e6
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_413a88
pop ecx
call sub_417f23
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4183fe
mov eax [ ebp - 0x1c ]
sub_418407
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_418344
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4117af
pop ecx
sub_41843a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_418460
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_418486
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_41696e
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4184b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_4184f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418540
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4171f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4184b0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4184f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418647
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_416bf9
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_4187c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_418809
push 0x20
push r--data
call sub_41718c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_416bf9
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4171d1
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_4187c5
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_411a35
mov [ ebp - 0x1c ] 0x1
push eax
call sub_4169e9
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_417f23
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ebb
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_418407
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_4169e0
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41897d
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_4189e6
push 0x10
push r--data
call sub_41718c
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
sub_418a46
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418a9d
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_418a9d
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_418a46
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_418b30
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_418bc5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_411438
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
push esi
movzx esi [ edi ]
mov [ ebp - 0x4 ] ebx
add edi 0x2
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x8
push esi
call sub_4190c9
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop ebx
leave
retn
movzx esi [ edi ]
inc edi
inc edi
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
movzx esi [ edi ]
inc edi
inc edi
cmp [ ebp + 0x14 ] 0x10
jne r-xdata
push esi
call sub_42320c
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_42320c
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
cmp ax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
dec edi
test al 0x8
jne r-xdata
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
inc edi
inc edi
movzx esi [ edi ]
inc edi
inc edi
cmp ax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x14 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_417f23
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_42320c
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
inc edi
inc edi
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_418dbf
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_418bc5
add esp 0x14
pop ebp
retn
sub_418dea
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_411438
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor esi esi
cmp eax esi
je r-xdata
cmp ebx esi
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] esi
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
movzx esi [ ebx ]
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x30 ]
push eax
push 0x8
push esi
call sub_4190c9
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
pop ebx
leave
retn
movzx esi [ edi ]
inc edi
inc edi
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
movzx esi [ edi ]
inc edi
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_42320c
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_418b30
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_42320c
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp ax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
dec edi
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
inc edi
inc edi
movzx esi [ edi ]
inc edi
inc edi
cmp ax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_4233f0
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_417f23
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_42320c
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
inc edi
inc edi
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_41909e
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_418dea
add esp 0x14
pop ebp
retn
sub_4190c9
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_411438
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_423424
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_419153
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4190c9
add esp 0xc
leave
retn
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push rw-data
call sub_423424
add esp 0x1c
sub_4191c9
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41453a
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_417f23
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41588e
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_41c3cf
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_423649
pop ecx
test eax eax
jne r-xdata
call sub_41588e
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41c3cf
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_423600
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4234e7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41932d
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_4236ad
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_41935c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_41932d
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_419383
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_41932d
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_417f23
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_41932d
pop ecx
sub_4193d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_411438
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_419f4d ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_41932d
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_413a88
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_419383
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41935c
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_423834
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_417f23
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_42384a
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_419383
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41935c
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_416fb6
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
pop ecx
pop ecx
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_418b30
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41935c
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_41932d
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_4137e0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_42384a
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_419f6d
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_419f9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_416320
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_41a2b3
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_41a363
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_41a46b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_41a74c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_41a363
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_41a2b3
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_41aa31
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_41aa61
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_411438
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4229c0
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41ab19
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp esi edi
je r-xdata
cmp esi edi
jne r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
dec ebx
je r-xdata
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
sub_41abec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
call sub_417f23
push 0x16
cmp [ ebp + 0xc ] edi
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x10 ]
xor ebx ebx
push 0x2
pop esi
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx edi
je r-xdata
movzx ecx [ ecx ]
cmp cx di
je r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx edi
je r-xdata
cmp [ ecx ] di
je r-xdata
mov ebx esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
mov ecx [ ebp + 0x1c ]
cmp ecx edi
je r-xdata
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx ] ax
call sub_417f23
push 0x22
jmp r-xdata
mov [ eax ] cx
push 0x3a
add eax esi
pop ecx
mov [ eax ] cx
add eax esi
inc ebx
cmp ebx [ ebp + 0xc ]
jbe r-xdata
movzx edx [ ecx ]
cmp dx di
je r-xdata
cmp [ ecx ] di
jne r-xdata
mov dx [ ecx ]
mov [ eax ] dx
add ecx esi
add eax esi
cmp [ ecx ] di
jne r-xdata
pop ecx
push edi
push edi
push edi
push edi
push edi
mov esi ecx
mov [ eax ] ecx
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp dx 0x2e
je r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
sub ecx esi
movzx ecx [ ecx ]
cmp cx 0x2f
je r-xdata
cmp [ ecx ] di
jne r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov dx [ ecx ]
mov [ eax ] dx
add eax esi
add ecx esi
cmp cx 0x5c
je r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
push 0x2e
pop edx
mov [ eax ] dx
add eax esi
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jae r-xdata
mov dx [ ecx ]
mov [ eax ] dx
add eax esi
add ecx esi
push 0x5c
pop ecx
mov [ eax ] cx
add eax esi
sub_41ad10
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41453a
push eax
call sub_423649
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_41588e
add eax 0x20
cmp esi eax
jne r-xdata
call sub_41588e
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_416fb6
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_41adac
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_41486c
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_41ade0
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_41af0d
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42397b
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
sar eax 0x1
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_41af0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x78 ] eax
inc edi
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x70 ] esi
cmp [ ebp + 0x24 ] esi
jne r-xdata
mov edx [ ebp + 0x10 ]
push 0x2
mov [ ebp - 0x54 ] edx
pop esi
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
xor eax eax
jmp r-xdata
add edx esi
jmp r-xdata
cmp ax 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_421fa7
leave
retn
movzx eax [ edx ]
cmp ax 0x20
je r-xdata
cmp ax 0xa
je r-xdata
cmp ax 0xd
jne r-xdata
push ebx
push 0x30
pop ebx
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_41b639 ]
movzx eax [ edx ]
add edx esi
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x5c ] edi
cmp cx 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
mov [ ebp - 0x5c ] edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] edi
jne r-xdata
add eax 0xffffffd0
mov [ ebp - 0x6c ] edi
cmp ax 0x9
ja r-xdata
lea ecx [ edx - 0x4 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
mov [ ebp - 0x60 ] edi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] edi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax bx
jae r-xdata
cmp ax bx
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movzx eax ax
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp ax bx
je r-xdata
cmp ax bx
jmp r-xdata
push 0xa
pop ecx
sub edx esi
movzx eax ax
sub eax 0x2b
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp ax bx
jae r-xdata
mov [ ebp - 0x70 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
sub eax 0x2b
je r-xdata
push 0x5
cmp eax 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
cmp ax 0x39
ja r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax 0x39
ja r-xdata
movzx eax ax
jmp r-xdata
cmp ax bx
je r-xdata
pop ecx
sub edx esi
jmp r-xdata
push 0x7
jmp r-xdata
sub eax esi
je r-xdata
movzx eax [ edx ]
add edx esi
add eax 0xffffffcf
cmp ax 0x8
jbe r-xdata
jne r-xdata
sub eax esi
je r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
mov eax [ ebp - 0x58 ]
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
mov ecx esi
jmp r-xdata
sub eax esi
je r-xdata
sub edx esi
push 0xb
jmp r-xdata
cmp eax 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp eax 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
movzx eax [ edx ]
add edx esi
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
sub edx esi
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x68 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movzx edi ax
lea ecx [ ecx + edi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x58 ]
dec eax
inc [ ebp - 0x50 ]
jmp r-xdata
inc [ ebp - 0x9 ]
mov ecx esi
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
je r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc [ ebp - 0x4c ]
sub al bl
inc [ ebp - 0x58 ]
mov [ ecx ] al
jmp r-xdata
cmp eax 0x2d
je r-xdata
movzx eax [ edx ]
add edx esi
inc [ ebp - 0x4c ]
mov ecx [ ebp - 0x58 ]
sub al bl
inc [ ebp - 0x58 ]
dec [ ebp - 0x50 ]
mov [ ecx ] al
cmp ax bx
jae r-xdata
mov ecx 0x1451
movzx eax [ edx ]
add edx esi
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp eax 0x43
jle r-xdata
movzx eax [ edx ]
add edx esi
jmp r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_424f70
mov eax [ ebp - 0x68 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x64 ] edx
jge r-xdata
cmp eax 0x45
jle r-xdata
movzx eax [ edx ]
add edx esi
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
add eax 0xffffff9c
cmp eax edi
ja r-xdata
cmp [ ebp - 0x6c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x70 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x70 ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x70 ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x78 ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x78 ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x4c ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x64 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x5c ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x64 ]
dec [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x6c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
add eax eax
mov [ ebp - 0x68 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x50 ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x68 ]
cmp [ ebp - 0x68 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x50 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x60 ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x50 ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x58 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x4c ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_41b669
push 0x54
push r--data
call sub_41718c
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetStartupInfoA) ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_416ffb
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:SetHandleCount) ]
xor eax eax
jmp r-xdata
push edi
call [ __import_lookup_table_0(KERNEL32:GetFileType) ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_416ffb
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_4171d1
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4189e6
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4189e6
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ __import_lookup_table_0(KERNEL32:GetFileType) ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_41b8bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ __import_lookup_table_0(KERNEL32:SetStdHandle) ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41b93e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ __import_lookup_table_0(KERNEL32:SetStdHandle) ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41b9c4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_417f36
mov [ eax ] esi
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_41ba3b
push 0xc
push r--data
call sub_41718c
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_418407
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41bad2
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4189e6
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_41badb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41bb02
push 0x18
push r--data
call sub_41718c
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_418344
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_418407
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41bc93
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_4171d1
retn
push 0x40
push 0x20
call sub_416ffb
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_41ba3b
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_418407
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41bbd5
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4189e6
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41bc9c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_425210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_417f36
mov [ eax ] esi
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_421fa7
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_417f36
xor esi esi
mov [ eax ] esi
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_423649
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_423462
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_416c72
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ __import_lookup_table_0(KERNEL32:GetConsoleMode) ]
test eax eax
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ __import_lookup_table_0(KERNEL32:GetConsoleCP) ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_417f23
mov [ eax ] 0x1c
call sub_417f36
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_417f49
pop ecx
jmp r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41348a
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_42513e
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_423961
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_423961
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_42513e
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_41c3cf
push 0x10
push r--data
call sub_41718c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
call sub_417f23
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4171d1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bc9c
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c4a1
mov eax [ ebp - 0x1c ]
sub_41c4ab
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_4191c9
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41c4de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_41c4ab
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_41c504
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_41c4ab
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_417f23
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_41c4ab
sub_41c551
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_411438
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_417f23
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_41453a
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_41d0e9
push 0x10
push r--data
call sub_41718c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f23
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4171d1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_41b9c4
pop ecx
push eax
call [ __import_lookup_table_0(KERNEL32:FlushFileBuffers) ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d1c0
mov eax [ ebp - 0x1c ]
call sub_417f36
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_41d1ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ __import_lookup_table_0(KERNEL32:LCMapStringW) ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_41d221
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ __import_lookup_table_0(KERNEL32:LCMapStringW) ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_4253c4
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
mov esi [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_42540d
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_413a88
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_413a88
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_415e5c
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ __import_lookup_table_0(KERNEL32:LCMapStringW) ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_4131f0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_42540d
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_415e5c
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:LCMapStringW) ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_415e5c
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_41d5c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41d221
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41d60b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
mov ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_41d637
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0xe ]
mov eax 0x7ff8
and ecx eax
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_41d697
mov edi edi
push ebp
mov ebp esp
fldz
fcom [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov edx [ ebp + 0xe ]
xor ecx ecx
test edx 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41d60b
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_41d60b
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_41d750
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_41de50
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_41de60
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ __import_lookup_table_0(KERNEL32:RaiseException) ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_41da2c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d750
add esp 0x1c
pop ebp
retn
sub_41da4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_41de9a
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_41de9a
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_41de9a
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_41de9a
pop ecx
and esi 0xffffffef
fldz
push edi
mov edi [ ebp + 0xc ]
fcomp [ edi ]
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41d697
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_41de9a
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_41dc31
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_417f23
mov [ eax ] 0x22
pop ebp
retn
sub_41dc5e
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_41dc92
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_41de71
push [ ebp + 0x8 ]
call sub_41dc31
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_41de71
lea eax [ ebp - 0x20 ]
push eax
call sub_4255c1
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_41dc31
pop ecx
sub_41dd32
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_417f23
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_41de71
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_41dc92
add esp 0x24
pop ebp
retn
sub_41dd87
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_41da4f
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_41dc5e
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41da2c
add esp 0x18
push eax
call sub_41dc31
mov [ esp ] 0xffff
push [ ebx + 0x20 ]
call sub_41de71
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x20 ]
fld [ ebx + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_41dc92
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41de71
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and eax [ ebp - 0x4 ]
or eax ecx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41de9a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_41def2
push 0x8
push r--data
call sub_41718c
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_4171d1
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41df70
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41dfd8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_425db0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_413503
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_41e28c
push 0x10
push r--data
call sub_41718c
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_418407
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e3bb
mov eax edi
call sub_4171d1
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_416fb6
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_4189e6
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_413a88
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4159a6
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_418344
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_415a14
pop ecx
pop ecx
sub_41e3c4
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_41e454
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_425ee5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_425f04
jmp r-xdata
sub_41e454
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_421fa7
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_41e3c4
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41e4b6
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41e4e6
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e517
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41b9c4
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_417f49
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_41b9c4
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_41b9c4
push 0x1
mov edi eax
call sub_41b9c4
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov edi eax
jmp r-xdata
push esi
call sub_41b93e
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_41e5b3
push 0x10
push r--data
call sub_41718c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
call sub_417f23
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4171d1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_41e517
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e676
mov eax [ ebp - 0x1c ]
sub_41e680
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_413a88
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_41e6b1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_423600
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_41453a
pop ecx
push eax
call sub_41ed9e
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_41453a
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_41453a
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_41453a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41453a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_41e7dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_417f36
mov [ eax ] ebx
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_417f36
mov [ eax ] ebx
call sub_417f23
mov [ eax ] 0x9
jmp r-xdata
call sub_417f36
mov [ eax ] ebx
call sub_417f23
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_416fb6
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_423462
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_417f23
mov [ eax ] 0xc
call sub_417f36
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_417f49
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_417f23
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_423462
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_423462
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_423462
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_41ed9e
push 0x10
push r--data
call sub_41718c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] esi
call sub_417f23
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_4171d1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_417f36
mov [ eax ] esi
call sub_417f23
mov [ eax ] 0x16
jmp r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e7dc
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ee91
mov eax [ ebp - 0x1c ]
sub_41ee9b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_4131f0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_410f70
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
sub_41ef20
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41ef40
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41ef5f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41b9c4
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_417f23
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_417f49
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_41efd4
push 0x10
push r--data
call sub_41718c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
call sub_417f23
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4171d1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ef5f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f0a6
mov eax [ ebp - 0x1c ]
sub_41f0b0
push 0x10
push r--data
call sub_41718c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_418407
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f146
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_414e94
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_413a88
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_41f150
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
fwait
cmp [ rw-data ] 0x0
je r-xdata
fxch st1
fst [ ebp - 0x86 ]
fxch st1
fst [ ebp - 0x7e ]
jmp r-xdata
call sub_41f437
or [ ebp - 0x2c8 ] 0x3
call sub_41f21a
pop ebx
leave
retn
sub_41f18e
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
cmp [ rw-data ] 0x0
je r-xdata
fst [ ebp - 0x86 ]
jmp r-xdata
call sub_41f3d0
or [ ebp - 0x2c8 ] 0x1
and [ ebp - 0x2c8 ] 0xfd
call sub_41f21a
pop ebx
leave
retn
sub_41f1cb
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f394
add esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41f394
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
or [ ebp - 0x2c8 ] 0x2
mov [ ebp - 0x8f ] 0x1
call sub_41f437
call sub_41f213
pop ebx
leave
retn
sub_41f21a
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ ebp - 0xa4 ]
fwait
retn
fst [ ebp - 0x2d0 ]
mov al [ ebp - 0x90 ]
or al al
je r-xdata
mov ax [ ebp - 0xa4 ]
and ax 0x20
jne r-xdata
cmp al 0xff
je r-xdata
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
cmp ax 0x7ff0
je r-xdata
cmp al 0xfe
je r-xdata
mov [ ebp - 0x8e ] 0x8
jmp r-xdata
mov [ ebp - 0x8e ] 0x3
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jbe r-xdata
jmp r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
or ax ax
je r-xdata
or al al
je r-xdata
push esi
push edi
mov ebx [ ebp - 0x94 ]
inc ebx
mov [ ebp - 0x8a ] ebx
test [ ebp - 0x2c8 ] 0x1
jne r-xdata
fmul [ r--data ]
mov [ ebp - 0x8e ] 0x4
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jae r-xdata
cmp ax 0x7ff0
je r-xdata
movsx eax al
mov [ ebp - 0x8e ] eax
jmp r-xdata
fstp [ ebp - 0x76 ]
lea eax [ ebp - 0x8e ]
lea ebx [ ebp - 0xa4 ]
push ebx
push eax
mov ebx [ ebp - 0x94 ]
mov al [ ebx + 0xe ]
movsx eax al
push eax
call sub_425f07
add esp 0xc
pop edi
pop esi
fld [ ebp - 0x76 ]
jmp r-xdata
cld
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x86 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0xc ] 0x1
je r-xdata
fmul [ r--data ]
jmp r-xdata
jmp r-xdata
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0x7e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_41f361
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f394
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
and [ ebp - 0x2c8 ] 0xfd
call sub_41f3d0
call sub_41f213
pop ebx
leave
retn
sub_41f394
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ax [ ebp + 0xe ]
mov bx ax
and ax 0x7ff0
cmp ax 0x7ff0
jne r-xdata
fld [ ebp + 0x8 ]
or bx 0x7fff
mov [ ebp - 0x2 ] bx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
shld eax ebx 0xb
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xa ] ebx
fld [ ebp - 0xa ]
jmp r-xdata
pop ebx
leave
retn
sub_41f3d0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx rw-data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_41f437
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx rw-data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fxch st1
mov cl [ ebp - 0x9f ]
fxam
fwait
fnstsw [ ebp - 0xa0 ]
fxch st1
mov ch [ ebp - 0x9f ]
shl ch 0x1
sar ch 0x1
rol ch 0x1
mov al ch
and al 0xf
xlat
mov ah al
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
shl ah 0x1
shl ah 0x1
or al ah
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_41f5a0
fld [ esp + 0x10 ]
fld [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
or eax [ esp + 0x8 ]
jne r-xdata
xor eax 0xe000000
test eax 0xe000000
je r-xdata
mov eax [ esp + 0xc ]
and eax 0x7fff
jne r-xdata
fdivp st1
retn
shr eax 0x1c
cmp [ eax + rw-data ] 0x0
jne r-xdata
fdivp st1
retn
fnstcw [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
or eax 0x33f
and eax 0xf3ff
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0xc ]
and eax 0x7fff
je r-xdata
fdivp st1
retn
mov eax [ esp + 0x14 ]
add eax eax
jb r-xdata
cmp eax 0x7fff
je r-xdata
cmp eax 0x7fff
je r-xdata
fldcw [ esp + 0x1c ]
fdivp st1
retn
fxch st1
fstp st0
fld st0
fmul [ rw-data ]
fstp [ esp + 0x4 ]
fld [ esp + 0x10 ]
fxch st1
fwait
fldcw [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jae r-xdata
fnstcw [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
or eax 0x33f
and eax 0xf3ff
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x8 ]
add eax eax
jae r-xdata
jmp r-xdata
fmul [ rw-data ]
fxch st1
fmul [ rw-data ]
fxch st1
fldcw [ esp + 0x1c ]
fdivp st1
retn
fmul [ rw-data ]
fxch st1
fmul [ rw-data ]
fxch st1
fldcw [ esp + 0x1c ]
fdivp st1
retn
sub_41f7bd
add esp 0x2c
int 0x6
fxch st2
fstp [ esp + 0xc ]
fxch st1
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st1
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41f861
add esp 0x2c
int 0x6
fxch st3
fstp [ esp + 0xc ]
fxch st2
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st2
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41f905
add esp 0x2c
int 0x6
fxch st4
fstp [ esp + 0xc ]
fxch st3
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st3
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41f9a9
add esp 0x2c
int 0x6
fxch st5
fstp [ esp + 0xc ]
fxch st4
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st4
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41fa4d
add esp 0x2c
int 0x6
fxch st6
fstp [ esp + 0xc ]
fxch st5
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st5
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41faf1
add esp 0x2c
int 0x6
fxch st7
fstp [ esp + 0xc ]
fxch st6
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st6
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41fb7c
push eax
mov eax [ esp + 0x8 ]
and eax 0x7f800000
cmp eax 0x7f800000
je r-xdata
fdiv [ esp + 0x8 ]
pop eax
retn 0x4
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41fb56
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fld [ esp + 0x8 ]
call sub_41fb56
pop eax
retn 0x4
sub_41fbc8
push eax
mov eax [ esp + 0xc ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
fdiv [ esp + 0x8 ]
pop eax
retn 0x8
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41fb56
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x8
fld [ esp + 0x8 ]
call sub_41fb56
pop eax
retn 0x8
sub_41fc14
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41fb56
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41fb56
pop eax
retn 0x4
sub_41fc48
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41fb56
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41fb56
pop eax
retn 0x4
sub_41fc7c
push eax
mov eax [ esp + 0x8 ]
and eax 0x7f800000
cmp eax 0x7f800000
je r-xdata
fdivr [ esp + 0x8 ]
pop eax
retn 0x4
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41fb69
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fld [ esp + 0x8 ]
call sub_41fb69
pop eax
retn 0x4
sub_41fcc8
push eax
mov eax [ esp + 0xc ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
fdivr [ esp + 0x8 ]
pop eax
retn 0x8
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41fb69
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x8
fld [ esp + 0x8 ]
call sub_41fb69
pop eax
retn 0x8
sub_41fd14
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41fb69
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41fb69
pop eax
retn 0x4
sub_41fd48
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41fb69
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41fb69
pop eax
retn 0x4
sub_41fda6
push eax
push ebx
push ecx
mov eax [ esp + 0x16 ]
xor eax 0x700
test eax 0x700
jne r-xdata
fld [ esp + 0x10 ]
fld [ esp + 0x28 ]
fprem
shr eax 0xb
and eax 0xf
cmp [ eax + rw-data ] 0x0
je r-xdata
pop ecx
pop ebx
pop eax
retn
fnstsw [ esp + 0x3c ]
test edx 0x1
je r-xdata
mov eax [ esp + 0x16 ]
and eax 0x7fff0000
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x3c ]
fxch st1
fstp st0
fld [ esp + 0x1c ]
fxch st1
and eax 0x4300
sub esp 0x1c
fnstenv [ esp ]
and [ esp + 0x4 ] 0xbcff
or [ esp + 0x4 ] eax
fldenv [ esp ]
add esp 0x1c
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x300
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fmul [ rw-data ]
fldcw [ esp + 0x34 ]
mov eax [ esp + 0x2e ]
and eax 0x7fff0000
je r-xdata
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x2c ]
add eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0x3f
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
ja r-xdata
test edx 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0xa
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
js r-xdata
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x33f
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
and ebx 0x3f
or ebx 0x20
add ebx 0x1
mov ecx ebx
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
and eax 0x8000
or ebx eax
mov [ esp + 0x18 ] ebx
fld [ esp + 0x10 ]
fabs
fld [ esp + 0x28 ]
fabs
fld [ esp + 0x10 ]
fstp [ esp + 0x1c ]
fld [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
mov ecx ebx
sub ebx eax
and ebx 0x7
or ebx 0x4
sub ecx ebx
mov ebx eax
and ebx 0x8000
or ecx ebx
mov [ esp + 0x18 ] ecx
fld [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
fxch st1
fprem
fstp [ esp + 0x28 ]
fstp st0
jmp r-xdata
fxch st1
fmul [ rw-data ]
fxch st1
sub ecx 0x1
jne r-xdata
fsub st1
fcom st1
fnstsw ax
and eax 0x100
jne r-xdata
mov ebx [ esp + 0x30 ]
fstp [ esp + 0x28 ]
fstp st0
fld [ esp + 0x1c ]
fld [ rw-data ]
fprem
fstp st0
fld [ esp + 0x28 ]
fldcw [ esp + 0x34 ]
and ebx 0x8000
je r-xdata
test edx 0x3
je r-xdata
fchs
jmp r-xdata
sub_41ffac
push edx
sub esp 0x30
fstp [ esp + 0x18 ]
fstp [ esp ]
xor edx edx
mov eax [ esp + 0x6 ]
test eax 0x7fff0000
je r-xdata
fld [ esp ]
fld [ esp + 0x18 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
call sub_41fda6
add esp 0x30
pop edx
retn
fprem
add esp 0x30
pop edx
retn
fxch st1
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
or edx 0x2
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x33f
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
and eax 0x7fff
cmp eax 0x7fbe
ja r-xdata
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x300
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fstp st0
fmul [ rw-data ]
fstp [ esp ]
or edx 0x1
fmul [ rw-data ]
fstp [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
jmp r-xdata
fldcw [ esp + 0x24 ]
call sub_41fda6
add esp 0x30
pop edx
retn
sub_42005e
push eax
push ebx
push ecx
mov eax [ esp + 0x16 ]
xor eax 0x700
test eax 0x700
jne r-xdata
fld [ esp + 0x10 ]
fld [ esp + 0x28 ]
fprem1
shr eax 0xb
and eax 0xf
cmp [ eax + rw-data ] 0x0
je r-xdata
pop ecx
pop ebx
pop eax
retn
fnstsw [ esp + 0x3c ]
test edx 0x1
je r-xdata
mov eax [ esp + 0x16 ]
and eax 0x7fff0000
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x3c ]
fxch st1
fstp st0
fld [ esp + 0x1c ]
fxch st1
and eax 0x4300
sub esp 0x1c
fnstenv [ esp ]
and [ esp + 0x4 ] 0xbcff
or [ esp + 0x4 ] eax
fldenv [ esp ]
add esp 0x1c
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x300
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fmul [ rw-data ]
fldcw [ esp + 0x34 ]
mov eax [ esp + 0x2e ]
and eax 0x7fff0000
je r-xdata
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x2c ]
add eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0x3f
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
ja r-xdata
test ebx 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0xa
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
js r-xdata
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x33f
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
and ebx 0x3f
or ebx 0x20
add ebx 0x1
mov ecx ebx
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
and eax 0x8000
or ebx eax
mov [ esp + 0x18 ] ebx
fld [ esp + 0x10 ]
fabs
fld [ esp + 0x28 ]
fabs
fld [ esp + 0x10 ]
fstp [ esp + 0x1c ]
fld [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
mov ecx ebx
sub ebx eax
and ebx 0x7
or ebx 0x4
sub ecx ebx
mov ebx eax
and ebx 0x8000
or ecx ebx
mov [ esp + 0x18 ] ecx
fld [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
fxch st1
fprem
fstp [ esp + 0x28 ]
fstp st0
jmp r-xdata
fxch st1
fmul [ rw-data ]
fxch st1
sub ecx 0x1
jne r-xdata
fsub st1
fcom st1
fnstsw ax
and eax 0x100
jne r-xdata
mov ebx [ esp + 0x30 ]
fstp [ esp + 0x28 ]
fstp st0
fld [ esp + 0x1c ]
fld [ rw-data ]
fprem1
fstp st0
fld [ esp + 0x28 ]
fldcw [ esp + 0x34 ]
and ebx 0x8000
je r-xdata
test edx 0x3
je r-xdata
fchs
jmp r-xdata
sub_420264
push edx
sub esp 0x30
fstp [ esp + 0x18 ]
fstp [ esp ]
mov edx 0x0
mov eax [ esp + 0x6 ]
test eax 0x7fff0000
je r-xdata
fld [ esp ]
fld [ esp + 0x18 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
call sub_42005e
add esp 0x30
pop edx
retn
fprem
add esp 0x30
pop edx
retn
fxch st1
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
or edx 0x2
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x33f
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
and eax 0x7fff
cmp eax 0x7fbe
ja r-xdata
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x300
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fstp st0
fmul [ rw-data ]
fstp [ esp ]
or edx 0x1
fmul [ rw-data ]
fstp [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
jmp r-xdata
fldcw [ esp + 0x24 ]
call sub_42005e
add esp 0x30
pop edx
retn
sub_42035e
push 0x2c
push r--data
call sub_41718c
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_418407
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_420e03
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_420db8
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_420d46
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_420d7f
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
call sub_422c6a
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_42605c
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_413a88
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_4137e0
inc eax
push eax
call sub_416fb6
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_4151d0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4171d1
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_422d56
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_4137e0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_422e0b
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_42034d
push [ ebp - 0x24 ]
call sub_42032b
push [ ebp - 0x28 ]
call sub_42033c
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42060a
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
jmp r-xdata
push eax
call sub_413a88
pop ecx
push esi
call sub_426046
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_426046
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_422d56
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_420dfd
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_420df1
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_426046
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_4206a4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_420d7f
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417d93
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_42089b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_420d46
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_4206a4
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_4206a4
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_4206a4
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_4206a4
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_420a73
push 0x8
push r--data
call sub_41718c
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_4171d1
retn
push 0x6
call sub_418407
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420ab9
call sub_42035e
inc [ rw-data ]
sub_420ac2
push 0xc
push r--data
call sub_41718c
push 0x6
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_42089b
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420afa
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
sub_420b03
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_4131f0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_417f23
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_420e10
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_4233f0
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_4233f0
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_420e10
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_4233f0
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_420e10
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_420e10
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_4233f0
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_420e10
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_420d46
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_420d7f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_420db8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_420e10
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_420ec0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_420f72
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_411438
mov eax [ ebp - 0x14 ]
cmp esi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jmp r-xdata
jbe r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x14 ] ebx
jne r-xdata
cmp [ eax + 0x14 ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov [ esi ] ax
pop esi
pop ebx
leave
retn
push ebx
push ebx
push 0xffffffff
push edi
push 0x9
push [ eax + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
cmp eax ebx
jne r-xdata
push edi
call sub_4137e0
pop ecx
jmp r-xdata
push [ ebp + 0x10 ]
push esi
push 0xffffffff
push edi
mov edi [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
push 0x9
push [ eax + 0x4 ]
call edi
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
pop edi
dec eax
call sub_417f23
mov [ eax ] 0x2a
cmp [ ebp - 0x8 ] bl
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x7a
je r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + edi ]
movzx dx [ eax ]
mov [ esi ] dx
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
call sub_417f23
mov [ eax ] 0x2a
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] bl
je r-xdata
inc ecx
inc esi
inc esi
mov [ ebp - 0x4 ] ecx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
push [ ebp + 0x10 ]
sub esi [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
push esi
push [ ebp + 0xc ]
push 0x1
push [ eax + 0x4 ]
call edi
cmp eax ebx
jne r-xdata
mov al [ esi ]
dec [ ebp - 0x4 ]
cmp al bl
je r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
call sub_417f23
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x2a
xor eax eax
mov [ ecx ] ax
jmp r-xdata
lea ecx [ ebp - 0x14 ]
movzx eax al
push ecx
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
cmp [ ebp - 0x4 ] ebx
jne r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
sub_421113
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
ja r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
mov [ esi ] ax
call sub_417f23
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_411438
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0x10 ]
jbe r-xdata
mov [ edi ] ebx
pop esi
pop ebx
leave
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x14 ]
push esi
call sub_420f72
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_417f23
push 0x16
jmp r-xdata
inc eax
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x8 ] bl
je r-xdata
cmp edi ebx
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
call sub_417f23
mov eax [ eax ]
cmp [ ebp - 0x8 ] bl
je r-xdata
xor eax eax
mov [ esi ] ax
mov eax esi
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] bl
je r-xdata
mov [ edi ] eax
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
pop edi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x50
xor eax eax
mov [ esi ] ax
call sub_417f23
push 0x22
sub_421223
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_421243
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_4212be
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_417f23
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_417f23
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_420a73
call sub_420e03
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_421223
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_421243
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4216a6
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4216a6
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_4216a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_415e5c
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_4212be
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_4260e3
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_4260e3
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_421b07
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_411438
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_417f23
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_4212be
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_421cab
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
cmp esi ebx
je r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x20 ]
call sub_411438
cmp esi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov esi [ ebp - 0x20 ]
cmp [ esi + 0x14 ] ebx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push ebx
push ebx
push 0xffffffff
push edi
push ebx
push [ eax + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
cmp eax ebx
je r-xdata
push edi
call sub_4112d5
pop ecx
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_417f23
mov [ eax ] 0x2a
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x28 ]
push 0xffffffff
push edi
push ebx
push [ esi + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
mov eax 0xff
cmp [ edi ] ax
ja r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x28 ]
push [ ebp + 0x10 ]
push edi
push ebx
push [ esi + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
cmp eax ebx
je r-xdata
mov eax edi
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ edi ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
mov [ edx + eax ] cl
mov cx [ edi ]
inc edi
inc edi
test cx cx
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x7a
je r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp ecx ebx
je r-xdata
inc eax
inc eax
dec ecx
jne r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx + eax - 0x1 ] bl
jne r-xdata
cmp [ eax ] bx
jne r-xdata
cmp [ eax ] bx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ esi + 0xac ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
push [ ebp - 0x2c ]
push ebx
push [ esi + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
jmp r-xdata
sub eax edi
sar eax 0x1
inc eax
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0x10 ] ebx
jne r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
cmp eax ebx
jl r-xdata
cmp eax 0x5
ja r-xdata
lea ecx [ eax + edi ]
cmp ecx [ ebp + 0x10 ]
ja r-xdata
xor edx edx
cmp eax ebx
jle r-xdata
add [ ebp - 0x2c ] 0x2
mov cl [ ebp + edx - 0xc ]
mov eax [ ebp - 0x28 ]
mov [ eax + edi ] cl
cmp cl bl
je r-xdata
inc edx
inc edi
cmp edx [ ebp - 0x24 ]
jl r-xdata
sub_421eed
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp esi ebx
je r-xdata
call sub_417f23
push 0x16
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ esi ] bl
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x18 ]
cmp eax edi
jbe r-xdata
mov [ eax ] ebx
cmp eax 0x7fffffff
ja r-xdata
mov eax edi
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_421cab
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
inc eax
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
cmp eax edi
jbe r-xdata
call sub_417f23
mov eax [ eax ]
jmp r-xdata
mov [ esi ] bl
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax + esi - 0x1 ] bl
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov eax edi
mov [ ebp - 0x4 ] 0x50
mov [ esi ] bl
cmp edi eax
ja r-xdata
call sub_417f23
push 0x22
jmp r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
sub_421fec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4185fd
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_42203c
mov eax [ rw-data ]
xor edx edx
test eax eax
jne r-xdata
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
mov eax r--data
cmp cx 0x22
jne r-xdata
test cx cx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
test edx edx
sete cl
mov edx ecx
retn
test edx edx
je r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x20
ja r-xdata
inc eax
inc eax
sub_422082
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_416ffb
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_4112d5
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_4112d5
mov edi eax
inc edi
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_413a88
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_416ffb
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_413a88
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_426349
add esp 0xc
test eax eax
je r-xdata
pop ecx
add ebx 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417d93
add esp 0x14
sub_422160
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
inc eax
inc eax
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
inc eax
inc eax
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
inc esi
inc esi
test edx edx
jne r-xdata
dec eax
dec eax
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp cx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
inc eax
inc eax
jmp r-xdata
cmp cx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
inc esi
inc esi
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
inc esi
inc esi
test edi edi
je r-xdata
cmp cx 0x20
je r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp cx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
inc esi
inc esi
sub_4222b1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameW) ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_422160
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_416fb6
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_422160
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42235f
mov edi edi
push esi
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentStringsW) ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
sub eax esi
inc eax
push ebx
inc eax
mov ebx eax
push edi
push ebx
call sub_416fb6
mov edi eax
pop ecx
test edi edi
jne r-xdata
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_410f70
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
sub_4223bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ __import_lookup_table_0(KERNEL32:GetCurrentProcessId) ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ __import_lookup_table_0(KERNEL32:GetTickCount) ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ __import_lookup_table_0(KERNEL32:QueryPerformanceCounter) ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_422452
push 0xc
push r--data
call sub_41718c
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_417f23
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_4171d1
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_411afc
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_418407
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41a74c
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42254e
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_4131f0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_422570
push 0x10
push r--data
call sub_41718c
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4138ba
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_413a88
pop ecx
jmp r-xdata
call sub_4171d1
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_411afc
pop ecx
call sub_417f23
push 0x4
call sub_418407
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_419f6d
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4226b4
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_41a46b
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_411afc
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_41a74c
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_417f23
call sub_417f23
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_411afc
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call sub_417ee1
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_417f23
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_417f23
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_410f70
push ebx
call sub_419f6d
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_419f9d
add esp 0x18
mov eax esi
mov esi eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call sub_417ee1
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_410f70
push ebx
push [ ebp - 0x20 ]
call sub_419f9d
add esp 0x14
mov eax esi
sub_42278b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_422570
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4170e7
pop ecx
mov ebx eax
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_417ebb
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_4131f0
add esp 0xc
sub_422806
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ __import_lookup_table_0(KERNEL32:GetStringTypeW) ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_4253c4
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ __import_lookup_table_0(KERNEL32:GetStringTypeA) ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_42540d
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_413a88
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4131f0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_415e5c
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:GetStringTypeW) ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4138ba
pop ecx
cmp eax ebx
je r-xdata
call sub_421fc0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4229c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_422806
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_422a02
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_413a88
push [ esi + 0x8 ]
call sub_413a88
push [ esi + 0xc ]
call sub_413a88
push [ esi + 0x10 ]
call sub_413a88
push [ esi + 0x14 ]
call sub_413a88
push [ esi + 0x18 ]
call sub_413a88
push [ esi ]
call sub_413a88
push [ esi + 0x20 ]
call sub_413a88
push [ esi + 0x24 ]
call sub_413a88
push [ esi + 0x28 ]
call sub_413a88
push [ esi + 0x2c ]
call sub_413a88
push [ esi + 0x30 ]
call sub_413a88
push [ esi + 0x34 ]
call sub_413a88
push [ esi + 0x1c ]
call sub_413a88
push [ esi + 0x38 ]
call sub_413a88
push [ esi + 0x3c ]
call sub_413a88
add esp 0x40
push [ esi + 0x40 ]
call sub_413a88
push [ esi + 0x44 ]
call sub_413a88
push [ esi + 0x48 ]
call sub_413a88
push [ esi + 0x4c ]
call sub_413a88
push [ esi + 0x50 ]
call sub_413a88
push [ esi + 0x54 ]
call sub_413a88
push [ esi + 0x58 ]
call sub_413a88
push [ esi + 0x5c ]
call sub_413a88
push [ esi + 0x60 ]
call sub_413a88
push [ esi + 0x64 ]
call sub_413a88
push [ esi + 0x68 ]
call sub_413a88
push [ esi + 0x6c ]
call sub_413a88
push [ esi + 0x70 ]
call sub_413a88
push [ esi + 0x74 ]
call sub_413a88
push [ esi + 0x78 ]
call sub_413a88
push [ esi + 0x7c ]
call sub_413a88
add esp 0x40
push [ esi + 0x80 ]
call sub_413a88
push [ esi + 0x84 ]
call sub_413a88
push [ esi + 0x88 ]
call sub_413a88
push [ esi + 0x8c ]
call sub_413a88
push [ esi + 0x90 ]
call sub_413a88
push [ esi + 0x94 ]
call sub_413a88
push [ esi + 0x98 ]
call sub_413a88
push [ esi + 0x9c ]
call sub_413a88
push [ esi + 0xa0 ]
call sub_413a88
push [ esi + 0xa4 ]
call sub_413a88
push [ esi + 0xa8 ]
call sub_413a88
add esp 0x2c
sub_422b97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
push esi
call sub_413a88
pop ecx
sub_422bdc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_413a88
pop ecx
push esi
call sub_413a88
pop ecx
sub_422c90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
sub_422d10
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_422d56
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
sub_422e0b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
sub_422e80
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_422ec8
push 0xc
push r--data
call sub_41718c
push 0xe
call sub_418407
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422f2f
call sub_4171d1
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_413a88
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_413a88
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_422f38
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_4169e0
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_4169e9
pop ecx
test eax eax
je r-xdata
push eax
call sub_4169e9
pop ecx
test eax eax
je r-xdata
push eax
call sub_4169e9
push [ rw-data ]
mov esi eax
call sub_4169e9
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_41696e
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41696e
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41696e
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41696e
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_41696e
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_4169e9
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_4230a1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_4230f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_4187fc
test eax eax
je r-xdata
push 0xa
call sub_4180a7
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_418809
pop ecx
push 0x3
call sub_411a35
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_4131f0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ __import_lookup_table_0(KERNEL32:SetUnhandledExceptionFilter) ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_42320c
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jae r-xdata
cmp ax 0x3a
jae r-xdata
mov eax 0xffffffff
pop ebp
retn
mov ecx 0xff10
mov edx ecx
cmp ax dx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
mov edx ecx
cmp ax dx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
add edx 0xa
cmp ax dx
jae r-xdata
mov ecx 0x6f0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x966
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x9e6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xa66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xae6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xb66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xc66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xce6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xd66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xe50
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xed0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
add ecx 0x50
mov edx ecx
cmp ax dx
jb r-xdata
mov edx 0xf2a
cmp ax dx
jb r-xdata
mov ecx 0x1040
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x17e0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
add ecx 0x30
mov edx ecx
cmp ax dx
jb r-xdata
mov edx 0x181a
jmp r-xdata
cmp ax dx
jb r-xdata
sub_4233f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_423424
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ __import_lookup_table_0(KERNEL32:GetStringTypeW) ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_423462
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_41b9c4
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_417f23
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_417f49
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_4234e7
push 0x14
push r--data
call sub_41718c
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_417f36
and [ eax ] 0x0
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
call sub_417f23
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4171d1
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_41ba3b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_417f36
mov [ eax ] edi
call sub_417f23
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_417f23
mov [ eax ] 0x9
call sub_417f36
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423462
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4235f6
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_423600
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_416fb6
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_423649
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_417f23
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_417ebb
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_4236ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_41453a
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_4264aa
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_41453a
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
push esi
call sub_41453a
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_41453a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41453a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_41453a
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_41453a
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_41453a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41453a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_41453a
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4253a7
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_41453a
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41453a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_4191c9
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_42384a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_413452
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_417f23
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_42397b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_423ebf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_424403
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_414c2f
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_413b67
test eax eax
movsx eax [ esi ]
push eax
call sub_414c2f
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_424476
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_4244f8
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_424514
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4266f5
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_42664d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_424570
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_4137e0
inc eax
push eax
push esi
add esi edi
push esi
call sub_416320
add esp 0x10
sub_4245b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_411438
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_417f23
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_417f23
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_424570
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
push r--data
push ebx
push esi
call sub_422e0b
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_416320
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_424724
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_426919
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_4245b5
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_42679d
add esp 0x10
cmp eax ebx
je r-xdata
sub_4247f4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424724
add esp 0x18
pop ebp
retn
sub_424814
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_411438
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_417f23
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_417f23
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_4247f4
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_426620
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41ef40
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41ef40
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4131f0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41ef40
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_4269b0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_4269b0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_4269b0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_424b87
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_411438
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_424570
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_424570
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_424570
push edi
push 0x30
push esi
call sub_4131f0
add esp 0xc
sub_424c7e
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_426919
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_424b87
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_42679d
add esp 0x10
cmp eax ebx
je r-xdata
sub_424d39
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_426919
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_417ebb
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_42679d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4245b5
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_424b87
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_424e33
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424724
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424c7e
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424814
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424d39
jmp r-xdata
sub_424ebb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424e33
add esp 0x1c
pop ebp
retn
sub_424ede
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_426a8f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
sub_424f09
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_424f47
push r--data
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleA) ]
test eax eax
je r-xdata
jmp sub_424f09
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_424f70
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_42513e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ __import_lookup_table_0(KERNEL32:GetConsoleOutputCP) ]
push eax
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ __import_lookup_table_0(KERNEL32:WriteConsoleA) ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_426d55
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_421fa7
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ __import_lookup_table_0(KERNEL32:WriteConsoleW) ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_425210
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_42523b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_417f23
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_417f23
mov [ eax ] 0x2a
call sub_417f23
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_417f23
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4131f0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4131f0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4253c4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ __import_lookup_table_0(KERNEL32:GetLocaleInfoA) ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_426046
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
sub_42540d
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ __import_lookup_table_0(KERNEL32:GetCPInfo) ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_4131f0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_415e5c
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_4138ba
pop ecx
cmp eax edi
je r-xdata
call sub_421fc0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_4137e0
mov esi eax
pop ecx
inc esi
mov ebx [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_416ffb
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_413a88
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_4255c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_41440a
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_417f36
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_417f23
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_417ebb
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_41bb02
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_417f36
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_417f23
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ __import_lookup_table_0(KERNEL32:GetFileType) ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_417f23
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov esi eax
push esi
call sub_417f49
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call sub_417f49
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_417f23
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_41b8bd
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_41ef5f
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_41e7dc
add esp 0xc
test eax eax
jne r-xdata
call sub_417f36
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_41ef5f
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_41e517
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
push eax
call sub_417f49
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_41b93e
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_426da1
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_41e7dc
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_423462
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_423462
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_41e517
pop ecx
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_41ef5f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_41c3cf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_41ef5f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_423462
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_423462
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_425ce4
push 0x14
push r--data
call sub_41718c
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_417f23
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_417ebb
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_4171d1
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4255c4
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425d82
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_425d82
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_41badb
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_425db0
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_425ce4
add esp 0x18
pop ebp
retn
sub_425dd0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425df0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_421fa7
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_425e35
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_425e35
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_425df0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_425ee5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_425f04
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_425ee5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_425f07
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
movzx ecx [ eax ]
push esi
mov esi [ ebx + 0xc ]
mov eax [ esi ]
dec eax
push edi
mov [ ebp - 0x88 ] ecx
je r-xdata
mov [ ebp - 0x84 ] 0x8
dec eax
je r-xdata
push 0xffff
push [ ebp - 0x88 ]
call sub_41de71
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0x84 ] 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_41dc31
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and ecx 0xffffffe3
fstp [ ebp - 0x50 ]
or ecx 0x3
mov [ ebp - 0x40 ] ecx
cmp eax 0x16
je r-xdata
push ecx
lea edi [ esi + 0x18 ]
push edi
push [ ebp - 0x84 ]
call sub_41da4f
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x84 ] 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_4255c1
pop ecx
test eax eax
jne r-xdata
cmp eax 0x1d
je r-xdata
mov [ ebp - 0x84 ] 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_421fa7
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
push edi
lea ecx [ esi + 0x8 ]
push ecx
push eax
push [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41da2c
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
mov [ ebp - 0x84 ] 0x10
jmp r-xdata
sub_42605c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_4137e0
pop ecx
mov edi eax
jmp r-xdata
call sub_42705f
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_4137e0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_427045
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_4260e3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_42611c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_4260e3
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414b1a
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414b1a
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_4261f1
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42611c
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_417f23
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_4260e3
pop esi
pop ebp
retn
sub_426243
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_422ec0
pop ecx
push 0x0
call [ __import_lookup_table_0(KERNEL32:SetUnhandledExceptionFilter) ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ __import_lookup_table_0(KERNEL32:TerminateProcess) ]
leave
retn
push 0x1
call sub_422ec0
pop ecx
sub_426349
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_417ebb
add esp 0x14
mov eax esi
sub_4263b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414b1a
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414b1a
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_427100
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_4264aa
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41453a
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_417f23
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_417f23
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41588e
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_41c3cf
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_423649
pop ecx
test eax eax
jne r-xdata
call sub_41588e
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41c3cf
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_423600
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_4234e7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_426620
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_42664d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_411438
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_427161
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42397b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
sub_4266f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_411438
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_427161
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_423ebf
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
sub_42679d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_417f23
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_417f23
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417ebb
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_4137e0
inc eax
push eax
push edi
push esi
call sub_416320
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_42685c
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_426919
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42685c
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_427859
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_422e0b
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_417d93
add esp 0x14
sub_4269b0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_426a8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_4282ab
call sub_4282ab
mov [ esi ] eax
jmp r-xdata
call sub_417f23
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_417ebb
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_4282ab
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_426afb
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_411438
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_417f23
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41aa61
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_417f23
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_426d2a
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_426afb
add esp 0x14
pop ebp
retn
sub_426d74
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_426da1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_423462
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_417f23
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_423462
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_423462
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423462
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_41434e
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_417f23
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_41b9c4
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_417f23
mov [ eax ] 0xd
call sub_417f36
mov esi eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_417f36
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_417f23
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_41bc9c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_41434e
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_426f57
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_428948
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42898a
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42705f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_416ffb
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_413a88
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_428b30
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_413a88
pop ecx
mov [ ebp - 0x4 ] esi
sub_427100
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_427161
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_427829 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_424f70
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_427859
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_421fa7
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_422e0b
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_417d93
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_422e0b
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_42817d
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42820b
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4282ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_42817d
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_42820b
push eax
mov [ ebp - 0xc ] eax
call sub_41def2
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_4285ba
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_4285d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_4285ba
pop ecx
mov [ ebp + 0x10 ] eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_4285ba
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_421fa7
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4253c4
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:CompareStringA) ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_42540d
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_413a88
push edi
call sub_413a88
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_42540d
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_413a88
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ __import_lookup_table_0(KERNEL32:GetCPInfo) ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_415e5c
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_4138ba
pop ecx
test eax eax
je r-xdata
call sub_421fc0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_415e5c
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_4138ba
pop ecx
test eax eax
je r-xdata
call sub_421fc0
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_428948
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4285d8
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42898a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_428948
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4263b8
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_417f23
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428a84
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_427045
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_428ad6
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_416ffb
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_4117af
jmp r-xdata
push eax
call sub_428d7b
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_428b30
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_417f23
mov [ eax ] 0x16
push 0x3d
push esi
call sub_428e8c
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_428ad6
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_428a84
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_416fb6
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_42705f
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_413a88
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_413a88
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_416fb6
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_417095
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_417095
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_4137e0
inc eax
pop ecx
inc eax
push eax
call sub_416ffb
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_413a88
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_4137e0
inc eax
pop ecx
inc eax
push eax
push edi
call sub_422e0b
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
push edi
call sub_413a88
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_417f23
mov [ eax ] 0x2a
sub_428d7b
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_4137e0
mov esi eax
inc esi
push esi
call sub_4138ba
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_422e0b
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_417d93
add esp 0x14
pop edi
pop esi
sub_428dd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411438
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_417f23
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_417ebb
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_428ec0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_428ec0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_428fb7
fld [ esp + 0x4 ]
fld1
fchs
fcomp st1
fwait
fnstsw ax
sahf
je r-xdata
fld1
fldz
fld st0
fld1
fsubrp st1
fxch st1
fld1
faddp st1
fdivp st1
fsqrt
fld1
jmp r-xdata
fpatan
fadd st0
retn 0x8
sub_428fe6
fld [ esp + 0x4 ]
fld st0
fabs
fcom [ rw-data ]
fwait
fnstsw ax
sahf
jbe r-xdata
fstp st0
fld st0
fmul st0
fld1
fsubrp st1
fld1
fsubrp st1
fld st0
fadd st0
fxch st1
fmul st0
fsubp st1
jmp r-xdata
fsqrt
fpatan
retn 0x8
sub_42905b
fld [ esp + 0xc ]
fld [ esp + 0x4 ]
ftst
fwait
fnstsw ax
sahf
je r-xdata
fstp st1
retn 0x10
fyl2x
fld1
fld st1
fprem
f2xm1
faddp st1
fscale
sub_42907e
fld [ esp + 0x4 ]
fld1
fld st1
fprem
sub esp 0x4
fst [ esp ]
fxch st2
mov eax [ esp ]
cmp eax 0x80000000
jbe r-xdata
fsub st2
fstp st1
fstp st1
pop eax
retn 0x8
fsub st1
sub_4290a6
fld [ esp + 0x4 ]
fchs
fld1
fld st1
fprem
sub esp 0x4
fst [ esp ]
fxch st2
mov eax [ esp ]
cmp eax 0x80000000
jbe r-xdata
fsub st2
fstp st1
fstp st1
fchs
pop eax
retn 0x8
fsub st1
sub_42910c
cmp [ rw-data ] 0x0
je sub_429126
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_429126
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_42d21d
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x58 ]
cmp edx ebx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x84 ]
push eax
push 0x70
cmp ebx [ esp + 0x74 ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x58 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
xor esi esi
xor ecx ecx
cmp eax esi
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] eax
jl r-xdata
mov eax [ esp + 0x80 ]
inc eax
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x50 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] ecx
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x5c ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x4c ]
mov edx 0x1
add [ rw-data ] edx
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x50 ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x50 ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x74 ] edx
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x4c ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x6c ]
mov eax [ esp + 0x70 ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
xor eax eax
mov [ esi + 0x148 ] ebx
mov [ esp + 0x88 ] eax
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] al
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] al
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xd ] 0x0
mov ecx 0x1
lea edi [ eax + esi + 0x4 ]
mov [ esp + 0x90 ] ecx
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov [ esp + 0x80 ] edx
lea esp [ esp ]
push 0x20
mov [ esp + 0x1c ] eax
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x88 ]
push ecx
push edx
call sub_4721e5
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x80 ]
cmp edx [ esp + 0x5c ]
jg r-xdata
xor eax eax
push eax
call sub_44b3f6
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x70 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x6c ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x58 ] eax
call sub_410f70
mov eax [ esp + 0x74 ]
add esp 0xc
push eax
call sub_4112ef
mov ecx [ esp + 0x50 ]
add esp 0x4
mov [ esp + 0x68 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4436f6
mov edx 0x1
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov eax [ esp + 0x7c ]
mov edx [ esi + 0xf4 ]
mov ebx [ esi + 0x16c ]
inc eax
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x50 ] edx
call sub_409560
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xc0 ]
call sub_40d1e0
mov ecx [ esp + 0x60 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x84 ] 0x0
mov esi [ edx + esi * 4 + 0x8 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x4a
je r-xdata
mov edi [ esp + 0x68 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40df50
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_4530b3
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_4530b3
xor esi esi
jmp r-xdata
mov edx [ esp + 0x68 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x6c ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push edx
call sub_40e2e0
call sub_40c8a0
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x4c ]
mov edi esi
mov edx [ edi ]
mov [ edi + 0xf4 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
push eax
cmp ax 0x49
je r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_4355fd
push eax
mov eax [ ecx ]
push eax
call sub_45ee98
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x4c ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c3e0
test al al
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x4c ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
push esi
jmp r-xdata
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e62e
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b453
lea ecx [ esp + 0xc0 ]
call sub_40ed60
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_404260
jmp r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] edx
jne r-xdata
call sub_45e62e
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xd ] 0x0
lea eax [ ecx + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402b00
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_40ab50
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x4c ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_4019e0
jmp r-xdata
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x58 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc8 ] 0x0
mov [ esp + 0xc0 ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x4b ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40be00
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc4 ]
push ecx
mov [ esp + 0xcc ] 0x0
call sub_4112ef
mov eax [ esp + 0x84 ]
inc eax
add esp 0x4
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x78 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x64 ]
call sub_40c620
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410f70
add esp 0xc
push ebx
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_404110
mov ecx [ eax + 0x14 ]
mov [ esp + 0x9c ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4436f6
jmp r-xdata
inc esi
cmp esi [ esp + 0xc8 ]
jb r-xdata
push eax
call sub_44c7f2
mov ecx [ esp + 0x60 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0x84 ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x60 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ab50
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc4 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3b8
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_404110
add eax 0x20
push eax
lea ebx [ esp + 0xac ]
call sub_409210
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov esi eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
dec eax
mov [ esp + 0x54 ] esi
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x4b ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x54 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_443711
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40c0e0
jmp r-xdata
test eax eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x54 ]
jmp [ eax * 4 + jump_table_40ab18 ]
push eax
call sub_446547
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410f70
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_443711
add esp 0x8
test al al
je r-xdata
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov edi edi
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44cc6c
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x4c ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x54 ] eax
lea esp [ esp ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4112ef
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_409210
jmp r-xdata
mov [ esp + 0x54 ] eax
mov edi edi
mov eax [ ebx ]
mov ecx [ esp + 0x78 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x78 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov dx bx
mov ebx [ esp + 0x14 ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
lea ebx [ esi + 0x20 ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42e62d ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a7
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_46e9cd
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x4b ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov edx [ esi ]
mov [ ebx ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ esi ]
mov [ ebx ] cl
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3b8
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x4c ] eax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi ]
push edx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x78 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa8 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x54 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4112ef
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42d285
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov esi [ esp + 0x20 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x58 ]
cmp edx ebx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x84 ]
push eax
push 0x70
cmp ebx [ esp + 0x74 ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x58 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
xor esi esi
xor ecx ecx
cmp eax esi
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] eax
jl r-xdata
mov eax [ esp + 0x80 ]
inc eax
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x50 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] ecx
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x5c ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x4c ]
mov edx 0x1
add [ rw-data ] edx
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x50 ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x50 ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x74 ] edx
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x4c ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x6c ]
mov eax [ esp + 0x70 ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
xor eax eax
mov [ esi + 0x148 ] ebx
mov [ esp + 0x88 ] eax
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] al
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] al
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xd ] 0x0
mov ecx 0x1
lea edi [ eax + esi + 0x4 ]
mov [ esp + 0x90 ] ecx
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov [ esp + 0x80 ] edx
lea esp [ esp ]
push 0x20
mov [ esp + 0x1c ] eax
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x88 ]
push ecx
push edx
call sub_4721e5
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x80 ]
cmp edx [ esp + 0x5c ]
jg r-xdata
xor eax eax
push eax
call sub_44b3f6
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x70 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x6c ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x58 ] eax
call sub_410f70
mov eax [ esp + 0x74 ]
add esp 0xc
push eax
call sub_4112ef
mov ecx [ esp + 0x50 ]
add esp 0x4
mov [ esp + 0x68 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4436f6
mov edx 0x1
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov eax [ esp + 0x7c ]
mov edx [ esi + 0xf4 ]
mov ebx [ esi + 0x16c ]
inc eax
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x50 ] edx
call sub_409560
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xc0 ]
call sub_40d1e0
mov ecx [ esp + 0x60 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x84 ] 0x0
mov esi [ edx + esi * 4 + 0x8 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x4a
je r-xdata
mov edi [ esp + 0x68 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40df50
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_4530b3
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_4530b3
xor esi esi
jmp r-xdata
mov edx [ esp + 0x68 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x6c ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push edx
call sub_40e2e0
call sub_40c8a0
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x4c ]
mov edi esi
mov edx [ edi ]
mov [ edi + 0xf4 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
push eax
cmp ax 0x49
je r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_4355fd
push eax
mov eax [ ecx ]
push eax
call sub_45ee98
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x4c ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c3e0
test al al
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x4c ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
push esi
jmp r-xdata
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e62e
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b453
lea ecx [ esp + 0xc0 ]
call sub_40ed60
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_404260
jmp r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] edx
jne r-xdata
call sub_45e62e
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xd ] 0x0
lea eax [ ecx + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402b00
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_40ab50
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x4c ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_4019e0
jmp r-xdata
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x58 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc8 ] 0x0
mov [ esp + 0xc0 ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x4b ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40be00
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc4 ]
push ecx
mov [ esp + 0xcc ] 0x0
call sub_4112ef
mov eax [ esp + 0x84 ]
inc eax
add esp 0x4
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x78 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x64 ]
call sub_40c620
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410f70
add esp 0xc
push ebx
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_404110
mov ecx [ eax + 0x14 ]
mov [ esp + 0x9c ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4436f6
jmp r-xdata
inc esi
cmp esi [ esp + 0xc8 ]
jb r-xdata
push eax
call sub_44c7f2
mov ecx [ esp + 0x60 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0x84 ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x60 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ab50
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc4 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3b8
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_404110
add eax 0x20
push eax
lea ebx [ esp + 0xac ]
call sub_409210
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov esi eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
dec eax
mov [ esp + 0x54 ] esi
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x4b ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x54 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_443711
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40c0e0
jmp r-xdata
test eax eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x54 ]
jmp [ eax * 4 + jump_table_40ab18 ]
push eax
call sub_446547
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410f70
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_443711
add esp 0x8
test al al
je r-xdata
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov edi edi
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44cc6c
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x4c ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x54 ] eax
lea esp [ esp ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4112ef
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_409210
jmp r-xdata
mov [ esp + 0x54 ] eax
mov edi edi
mov eax [ ebx ]
mov ecx [ esp + 0x78 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x78 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov dx bx
mov ebx [ esp + 0x14 ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
lea ebx [ esi + 0x20 ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42e62d ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a7
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_46e9cd
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x4b ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov edx [ esi ]
mov [ ebx ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ esi ]
mov [ ebx ] cl
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3b8
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x4c ] eax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi ]
push edx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x78 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa8 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x54 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4112ef
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42d326
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x58 ]
cmp edx ebx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x84 ]
push eax
push 0x70
cmp ebx [ esp + 0x74 ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x58 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
xor esi esi
xor ecx ecx
cmp eax esi
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] eax
jl r-xdata
mov eax [ esp + 0x80 ]
inc eax
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x50 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] ecx
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x5c ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x4c ]
mov edx 0x1
add [ rw-data ] edx
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x50 ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x50 ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x74 ] edx
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x4c ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x6c ]
mov eax [ esp + 0x70 ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
xor eax eax
mov [ esi + 0x148 ] ebx
mov [ esp + 0x88 ] eax
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] al
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] al
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xd ] 0x0
mov ecx 0x1
lea edi [ eax + esi + 0x4 ]
mov [ esp + 0x90 ] ecx
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov [ esp + 0x80 ] edx
lea esp [ esp ]
push 0x20
mov [ esp + 0x1c ] eax
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x88 ]
push ecx
push edx
call sub_4721e5
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x80 ]
cmp edx [ esp + 0x5c ]
jg r-xdata
xor eax eax
push eax
call sub_44b3f6
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x70 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x6c ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x58 ] eax
call sub_410f70
mov eax [ esp + 0x74 ]
add esp 0xc
push eax
call sub_4112ef
mov ecx [ esp + 0x50 ]
add esp 0x4
mov [ esp + 0x68 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4436f6
mov edx 0x1
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov eax [ esp + 0x7c ]
mov edx [ esi + 0xf4 ]
mov ebx [ esi + 0x16c ]
inc eax
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x50 ] edx
call sub_409560
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xc0 ]
call sub_40d1e0
mov ecx [ esp + 0x60 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x84 ] 0x0
mov esi [ edx + esi * 4 + 0x8 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x4a
je r-xdata
mov edi [ esp + 0x68 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40df50
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_4530b3
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_4530b3
xor esi esi
jmp r-xdata
mov edx [ esp + 0x68 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x6c ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push edx
call sub_40e2e0
call sub_40c8a0
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x4c ]
mov edi esi
mov edx [ edi ]
mov [ edi + 0xf4 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
push eax
cmp ax 0x49
je r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_4355fd
push eax
mov eax [ ecx ]
push eax
call sub_45ee98
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x4c ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c3e0
test al al
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x4c ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
push esi
jmp r-xdata
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e62e
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b453
lea ecx [ esp + 0xc0 ]
call sub_40ed60
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_404260
jmp r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] edx
jne r-xdata
call sub_45e62e
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xd ] 0x0
lea eax [ ecx + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402b00
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_40ab50
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x4c ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_4019e0
jmp r-xdata
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x58 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc8 ] 0x0
mov [ esp + 0xc0 ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x4b ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40be00
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc4 ]
push ecx
mov [ esp + 0xcc ] 0x0
call sub_4112ef
mov eax [ esp + 0x84 ]
inc eax
add esp 0x4
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x78 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x64 ]
call sub_40c620
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410f70
add esp 0xc
push ebx
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_404110
mov ecx [ eax + 0x14 ]
mov [ esp + 0x9c ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4436f6
jmp r-xdata
inc esi
cmp esi [ esp + 0xc8 ]
jb r-xdata
push eax
call sub_44c7f2
mov ecx [ esp + 0x60 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0x84 ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x60 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ab50
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc4 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3b8
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_404110
add eax 0x20
push eax
lea ebx [ esp + 0xac ]
call sub_409210
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov esi eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
dec eax
mov [ esp + 0x54 ] esi
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x4b ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x54 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_443711
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40c0e0
jmp r-xdata
test eax eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x54 ]
jmp [ eax * 4 + jump_table_40ab18 ]
push eax
call sub_446547
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410f70
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_443711
add esp 0x8
test al al
je r-xdata
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov edi edi
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44cc6c
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x4c ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x54 ] eax
lea esp [ esp ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4112ef
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_409210
jmp r-xdata
mov [ esp + 0x54 ] eax
mov edi edi
mov eax [ ebx ]
mov ecx [ esp + 0x78 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x78 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov dx bx
mov ebx [ esp + 0x14 ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
lea ebx [ esi + 0x20 ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42e62d ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a7
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_46e9cd
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x4b ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov edx [ esi ]
mov [ ebx ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ esi ]
mov [ ebx ] cl
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3b8
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x4c ] eax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi ]
push edx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x78 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa8 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x54 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4112ef
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42d353
push 0x8
call sub_41171a
mov [ ebx ] eax
mov edx [ esp + 0x24 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax ]
mov ecx [ esp + 0x24 ]
mov eax [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ecx + 0x4 ]
push edx
push eax
call sub_410f70
add esp 0xc
jmp r-xdata
mov eax ebx
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
inc eax
cmp [ edx + 0x8 ] 0x41
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0x58 ]
cmp edx ebx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx [ esp + 0x44 ]
jl r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
mov ecx 0x40
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x84 ]
push eax
push 0x70
cmp ebx [ esp + 0x74 ]
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x6f
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax [ esp + 0x14 ]
je r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov esi [ esp + 0x10 ]
mov edx eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x58 ] edx
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ esp + 0x7c ]
xor esi esi
xor ecx ecx
cmp eax esi
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] eax
jl r-xdata
mov eax [ esp + 0x80 ]
inc eax
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jl r-xdata
inc [ esp + 0x10 ]
mov [ esp + 0x50 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edx [ esp + 0x14 ]
jae r-xdata
mov edx [ rw-data ]
mov [ edx ] ecx
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push 0xc
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0x60 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x10 ]
inc [ esp + 0x5c ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor edi edi
xor bl bl
cmp [ ecx + 0x8 ] di
je r-xdata
mov eax [ esp + 0x4c ]
mov edx 0x1
add [ rw-data ] edx
cmp eax esi
jne r-xdata
xor edi edi
jmp r-xdata
mov edi eax
mov [ edi ] esi
mov edx [ esp + 0x50 ]
mov [ edi + 0x4 ] edx
cmp [ esp + 0x50 ] esi
jl r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
cmp ecx 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov edi eax
mov eax [ eax + 0x18 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x74 ] edx
jl r-xdata
mov ecx [ rw-data ]
mov [ edi + 0x8 ] ecx
mov [ rw-data ] edi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp + 0x4c ]
cmp eax esi
jne r-xdata
cmp ecx 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi [ esp + 0x6c ]
mov eax [ esp + 0x70 ]
cmp esi eax
je r-xdata
xor bl bl
mov eax [ edi + 0x1c ]
cmp eax esi
je r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
xor eax eax
mov [ esi + 0x148 ] ebx
mov [ esp + 0x88 ] eax
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] al
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] al
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] al
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xd ] 0x0
mov ecx 0x1
lea edi [ eax + esi + 0x4 ]
mov [ esp + 0x90 ] ecx
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov [ esp + 0x80 ] edx
lea esp [ esp ]
push 0x20
mov [ esp + 0x1c ] eax
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov [ edi ] esi
push 0xffffffff
push 0x91
jmp r-xdata
mov edi 0x100
mov ecx [ eax + 0x4 ]
inc [ esp + 0x10 ]
add eax 0x4
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
push 0x1
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x50 ]
call sub_40b800
mov edx 0x1
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x88 ]
push ecx
push edx
call sub_4721e5
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0x40
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov edi [ edx ]
mov edi [ edi ]
cmp edi 0x24
je r-xdata
mov edx [ esp + 0x80 ]
cmp edx [ esp + 0x5c ]
jg r-xdata
xor eax eax
push eax
call sub_44b3f6
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x70 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x6c ]
add esp 0x4
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
mov [ esp + 0x58 ] eax
call sub_410f70
mov eax [ esp + 0x74 ]
add esp 0xc
push eax
call sub_4112ef
mov ecx [ esp + 0x50 ]
add esp 0x4
mov [ esp + 0x68 ] ecx
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov [ eax ] bl
push edi
call sub_4436f6
mov edx 0x1
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
je r-xdata
inc [ edi ]
mov eax [ esp + 0x7c ]
mov edx [ esi + 0xf4 ]
mov ebx [ esi + 0x16c ]
inc eax
lea edi [ esi + 0x16c ]
push eax
mov ecx esi
mov [ esp + 0x50 ] edx
call sub_409560
cmp ebx [ edi ]
jb r-xdata
xor eax eax
jmp r-xdata
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x30 ] cl
inc esi
add edx 0x4
cmp edi 0x1e
jne r-xdata
lea ebx [ esp + 0xc0 ]
call sub_40d1e0
mov ecx [ esp + 0x60 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x84 ] 0x0
mov esi [ edx + esi * 4 + 0x8 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x4a
je r-xdata
mov edi [ esp + 0x68 ]
mov edx [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
or eax 0x200
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov esi eax
mov [ edi ] eax
call sub_40df50
mov edx [ edi ]
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x10 ]
mov [ edx + 0x10 ] eax
mov ecx [ edi ]
mov edx [ esi + 0x14 ]
mov [ ecx + 0x14 ] edx
mov ecx [ edi ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ edi ]
mov [ edx + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx edi
call sub_4530b3
mov edx [ esi + 0x1c ]
mov eax [ edi ]
push edx
add eax 0x1c
push eax
mov ecx edi
call sub_4530b3
xor esi esi
jmp r-xdata
mov edx [ esp + 0x68 ]
mov [ edx + esi * 4 ] eax
inc esi
mov [ esp + 0x6c ] esi
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push edx
call sub_40e2e0
call sub_40c8a0
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x4c ]
mov edi esi
mov edx [ edi ]
mov [ edi + 0xf4 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + edi + 0xd ] 0x0
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x38 ] ecx
mov [ edi + 0x4 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ edx ]
cmp [ edi + 0x8 ] bx
je r-xdata
mov [ esp + 0x14 ] 0x100
mov eax [ esp + 0x14 ]
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 + 0xc ]
push eax
cmp ax 0x49
je r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi + edx * 4 ]
mov ecx [ ecx + esi * 4 ]
push 0x1
push eax
push edx
call sub_4355fd
push eax
mov eax [ ecx ]
push eax
call sub_45ee98
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x34 ]
mov edx [ edx + esi * 4 ]
mov esi eax
mov eax [ esp + 0x10 ]
add eax eax
add eax eax
mov [ esp + 0x4c ] eax
mov eax [ eax + ecx ]
mov edi [ eax ]
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x91
push eax
jmp r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
xor ecx ecx
call sub_40c3e0
test al al
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0x2c ] 0x0
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x4c ]
mov edx [ ecx + eax + 0x4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
push esi
jmp r-xdata
mov edx [ esp + 0x60 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
call sub_45e62e
lea ecx [ esp + 0xd0 ]
push ecx
call sub_44b453
lea ecx [ esp + 0xc0 ]
call sub_40ed60
jmp r-xdata
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
push esi
mov eax edi
push edx
mov edi rw-data
call sub_404260
jmp r-xdata
cmp [ rw-data ] 0x0
mov [ esp + 0x18 ] edx
jne r-xdata
call sub_45e62e
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0x79
push eax
jmp r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xd ] 0x0
lea eax [ ecx + edi + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 + 0x8 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x4a
je r-xdata
add [ esp + 0x10 ] 0x2
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov edi 0x7f
lea esi [ esp + 0xd0 ]
call sub_402b00
push esi
lea edi [ esp + 0xc4 ]
call sub_402cc0
mov ecx [ ebp + 0x8 ]
push 0xffffffff
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_40ab50
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov edx [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
add eax eax
add eax eax
mov esi [ eax + edx ]
mov esi [ esi ]
mov [ esp + 0x4c ] eax
or ecx 0x200
mov eax 0x1
lea edx [ esp + 0x20 ]
call sub_4019e0
jmp r-xdata
mov ax [ esp + 0xd8 ]
inc [ esp + 0x1c ]
cmp ax 0x30
jge r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edi 0x1
add [ esp + 0x58 ] edi
add [ esp + 0x10 ] edi
cmp [ eax + 0x8 ] 0x5
jne r-xdata
test edi 0x100
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] 0x0
cmp esi eax
je r-xdata
push eax
call [ VariantClear@IAT ]
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
cmp [ edx + edi + 0xd ] 0x0
mov eax [ edx + edi + 0x8 ]
lea esi [ edx + edi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
add [ esp + 0x10 ] 0x5
jmp r-xdata
cmp ax 0x49
je r-xdata
cmp ax 0x3f
jg r-xdata
cmp [ esp + 0xc8 ] 0x0
mov [ esp + 0xc0 ] r--data
ja r-xdata
xor eax eax
mov [ esp + 0x14 ] ebx
cmp [ ebx ] eax
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x48 ] esi
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x4b ] al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x1c ]
push esi
lea esi [ esp + 0x34 ]
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x24 ] eax
call sub_40be00
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov edx [ edx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ ebp + 0x8 ]
push edx
push 0xb0
push eax
jmp r-xdata
add eax eax
cmp eax 0x4
jae r-xdata
mov edi [ esp + 0x34 ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
add [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0xc4 ]
push ecx
mov [ esp + 0xcc ] 0x0
call sub_4112ef
mov eax [ esp + 0x84 ]
inc eax
add esp 0x4
cmp eax [ esp + 0x74 ]
mov [ esp + 0x80 ] eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi eax
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
mov [ esi + 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
xor eax eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
mov [ esp + 0x78 ] eax
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ esp + 0x20 ]
push eax
push edx
lea eax [ esp + 0x64 ]
call sub_40c620
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x3c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx [ esp + 0x38 ]
mov edi eax
add esp 0x4
lea eax [ esi * 4 ]
push eax
push ebx
push edi
call sub_410f70
add esp 0xc
push ebx
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax 0x4
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax esi
call sub_404110
mov ecx [ eax + 0x14 ]
mov [ esp + 0x9c ] ecx
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
push eax
call sub_4436f6
jmp r-xdata
inc esi
cmp esi [ esp + 0xc8 ]
jb r-xdata
push eax
call sub_44c7f2
mov ecx [ esp + 0x60 ]
mov ecx [ ecx + 0x4 ]
mov esi [ esp + 0x10 ]
xor ebx ebx
or edx 0xffffffff
mov [ esp + 0xd8 ] dx
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0x84 ] ebx
mov edi [ ecx + esi * 4 ]
lea edx [ ecx + esi * 4 ]
xor eax eax
mov [ esp + 0xda ] ax
mov [ esp + 0x14 ] eax
cmp [ edi + 0x8 ] bx
je r-xdata
mov ebx [ esp + 0x5c ]
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test edx edx
jne r-xdata
test edx edx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x64 ]
call sub_434222
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ edi + esi * 4 ] eax
inc esi
push ebx
mov [ esp + 0x3c ] esi
mov esi [ edi + esi * 4 - 0x4 ]
push esi
lea eax [ esp + 0x60 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ab50
test eax eax
jne r-xdata
dec eax
cmp eax 0xb
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ ebx ] edx
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov eax [ esp + 0xc4 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
push 0x10
mov [ ebx + 0x10 ] eax
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov ebx esi
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp eax edx
jb r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push eax
call sub_44b3b8
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax esi
call sub_404110
add eax 0x20
push eax
lea ebx [ esp + 0xac ]
call sub_409210
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xd ] 0x0
lea edi [ ecx + ebx + 0x4 ]
jne r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x18 ]
mov esi eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
dec eax
mov [ esp + 0x54 ] esi
mov [ esi + 0xc ] ecx
cmp eax 0xb
ja r-xdata
dec [ eax ]
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov ecx [ edi ]
mov [ ebx ] ecx
mov edi [ edi + 0xc ]
mov [ ebx + 0xc ] edi
inc [ edi ]
jmp r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x8 ] eax
jb r-xdata
cmp [ esp + 0x4b ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebx ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x54 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebx ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov edx [ ebx ]
mov eax [ rw-data ]
mov [ edx + 0x1c ] eax
jne r-xdata
push eax
push edi
call sub_443711
add esp 0x8
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ecx ]
mov eax [ edi ]
call sub_40c0e0
jmp r-xdata
test eax eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x38 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp eax 0x4
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x18 ] edi
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
mov ecx [ esp + 0x54 ]
jmp [ eax * 4 + jump_table_40ab18 ]
push eax
call sub_446547
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + edx + 0x2 ]
mov edx [ ebx ]
push eax
push ecx
push edx
call sub_410f70
add esp 0xc
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x18 ] edx
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ ebx ] ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax + 0x1c ]
mov [ ecx + 0x18 ] edx
mov ecx [ ebx ]
mov [ eax + 0x1c ] ecx
mov [ ebx ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
push edi
push eax
call sub_443711
add esp 0x8
test al al
je r-xdata
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
mov edx eax
mov eax [ edi ]
mov edi edi
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push eax
call sub_44cc6c
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x38 ]
mov [ esp + 0x4c ] edx
test esi esi
je r-xdata
dec eax
cmp eax 0xb
ja r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov [ eax ] ebx
or [ rw-data ] 0x1
push rw-data
call sub_44b3f6
push sub_429283
call sub_411421
add esp 0x4
jmp r-xdata
mov eax rw-data
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x54 ] eax
lea esp [ esp ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov edx [ edi ]
mov [ esi ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi ] ecx
je r-xdata
mov al [ edi ]
mov [ esi ] al
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ esi ] eax
mov edx [ edi ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
xor ecx ecx
mov [ ebx ] eax
mov [ eax + esi * 2 ] cx
jmp r-xdata
push eax
call sub_4112ef
add esp 0x4
mov ecx [ esp + 0x18 ]
mov ebx [ ebx + 0x14 ]
push ecx
call sub_409210
jmp r-xdata
mov [ esp + 0x54 ] eax
mov edi edi
mov eax [ ebx ]
mov ecx [ esp + 0x78 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov [ esp + 0x78 ] eax
mov [ ebx ] edx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x1c ]
mov edx [ ebx ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x18 ] edx
mov [ ebx ] eax
cmp [ eax + 0x1c ] 0x0
je r-xdata
jle r-xdata
mov dx bx
mov ebx [ esp + 0x14 ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
dec [ edi ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x8 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ esp + 0x4c ]
mov [ edi + 0x4 ] edx
mov [ edi + 0x9 ] 0x0
mov eax [ esi + 0x2c ]
lea ebx [ esi + 0x20 ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_42e62d ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov eax [ ebx ]
test eax eax
je r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
xor eax eax
mov edx [ esp + 0x18 ]
mov esi [ edx ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_44b8a7
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov esi [ esi ]
mov edx [ esi ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ esi + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ edi ]
push ecx
push eax
call sub_46e9cd
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x4b ] 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
jmp r-xdata
mov ecx [ ecx + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ ecx + 0x14 ] edx
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov ecx [ esi ]
mov [ ebx ] ecx
jmp r-xdata
fld [ esi ]
fstp [ ebx ]
jmp r-xdata
mov edx [ esi ]
mov [ ebx ] edx
jmp r-xdata
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ esi ]
mov [ ebx ] cl
jmp r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_41171a
mov [ ebx ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
push eax
call sub_44b3b8
jmp r-xdata
lea eax [ esi + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov [ ecx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax + 0xd ] 0x0
mov [ esp + 0x4c ] eax
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov esi [ esi ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x10
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
mov ecx [ ebx ]
push eax
push ecx
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi ]
push edx
push eax
call sub_44b8a7
mov [ ebx ] eax
jmp r-xdata
push 0x1
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebx + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
push ecx
push eax
call sub_46e9cd
mov [ ebx ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esp + 0x54 ]
mov [ eax + 0x1c ] edx
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x78 ]
mov [ edx + 0x18 ] ecx
mov eax [ rw-data ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1c ] ecx
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
push ebx
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ edx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx ]
push edx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
jmp r-xdata
cmp edx edi
jne r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ esp + 0x78 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x1c ] esi
mov esi eax
cmp [ eax + 0x18 ] edi
je r-xdata
push ebx
push eax
mov [ esp + 0x4c ] eax
call sub_443711
add esp 0x8
test al al
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
lea esp [ esp ]
lea ebx [ eax + 0x20 ]
lea eax [ esp + 0xa8 ]
cmp ebx eax
je r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ebx [ esi + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] esi
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
cmp eax edi
je r-xdata
add eax 0x18
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x1c ] esi
mov [ esp + 0x54 ] esi
mov esi [ ecx ]
jmp r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov [ eax + 0x18 ] esi
mov esi eax
cmp [ eax + 0x1c ] edi
je r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
push eax
call sub_4436f6
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] esi
mov [ esi + 0x1c ] edi
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
call sub_40c0e0
jmp r-xdata
cmp eax edi
jbe r-xdata
add eax 0x1c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ ebx ]
push edx
call sub_4112ef
mov eax [ ebx + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov edx eax
mov eax [ ebx ]
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ ebx ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
jle r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jb r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] eax
cmp eax 0x1
jne r-xdata
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
mov ebx [ ebp + 0x8 ]
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov ebx esi
jmp r-xdata
or eax 0xffffffff
xor edi edi
jmp r-xdata
mov eax 0x1
xor edi edi
mov di [ eax ]
cmp di [ ecx ]
jne r-xdata
jmp r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ esp + 0xa8 ]
mov [ ebx ] eax
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ ebx ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
xor edi edi
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42e08b
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0xb4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42e0dc
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov esi [ esp + 0xa8 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov edi [ esp + 0x6c ]
mov [ ebx ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42e183
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0xa8 ]
push ecx
push eax
call sub_44b8a7
jmp r-xdata
mov [ ebx ] eax
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_42e1af
push 0x8
call sub_41171a
mov esi [ esp + 0xac ]
mov [ ebx ] eax
mov edx [ esi ]
mov [ eax ] edx
mov eax [ ebx ]
mov eax [ eax ]
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_41171a
mov edx [ ebx ]
mov [ edx + 0x4 ] eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add esp 0x4
mov [ ecx ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebx ]
mov [ ecx + 0x4 ] eax
mov ebx [ ebx ]
mov edx [ ebx ]
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x4 ]
add esp 0x4
push edx
push eax
push ecx
call sub_410f70
add esp 0xc
jmp r-xdata
mov edi [ esp + 0x6c ]
mov eax [ esp + 0x4c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x38 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ eax + 0x30 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
push eax
call sub_46e709
mov ecx esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esp + 0x68 ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ecx ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] ecx
test esi esi
je r-xdata
mov eax [ esp + 0xdc ]
dec [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] eax
mov eax [ esp + 0xb4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov ebx [ esp + 0x68 ]
push ecx
call sub_4112ef
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov eax [ esi + 0x18 ]
mov ebx ecx
test eax eax
je r-xdata
push eax
call sub_4436f6
mov [ esp + 0xb4 ] 0x0
jmp r-xdata
mov eax [ esp + 0xb0 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push eax
call sub_40b800
mov esi [ esp + 0xa8 ]
test esi esi
je r-xdata
cmp eax 0xa
je r-xdata
push eax
mov ecx ebx
call sub_40b800
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x90 ]
xor ecx ecx
mov edx 0x1
mov [ esp + 0xb0 ] edx
mov [ esp + 0xa8 ] ecx
cmp eax ecx
jne r-xdata
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
je r-xdata
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x94 ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0x8
je r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0xa8 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
push esi
call sub_4112ef
mov edi [ esp + 0x70 ]
add esp 0x4
mov edx [ esi ]
push edx
call sub_4112ef
mov eax [ esi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0xa
je r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x88 ]
push esi
call [ VariantClear@IAT ]
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
cmp esi 0x5
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov ecx [ edi ]
push ecx
call sub_4112ef
mov edx [ edi + 0xc ]
add esp 0x4
push edx
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ ebx + 0xc ] 0x0
push eax
call sub_4436f6
xor ecx ecx
mov [ esp + 0x2c ] 0x0
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x8
je r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x88 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xb
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
push ecx
call [ VariantClear@IAT ]
mov eax [ ebx ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x88 ]
mov ecx [ esi + 0x4 ]
push ecx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp esi 0xc
je r-xdata
push ebx
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax ebx
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
cmp edi ecx
jbe r-xdata
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x20 ]
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x88 ] ecx
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ ebx ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x38 ] 0x0
jbe r-xdata
xor esi esi
push eax
call sub_44478f
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esp + 0x20 ]
call sub_40e380
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor ebx ebx
mov ecx [ ebx + esi * 4 ]
push ecx
call sub_4112ef
inc esi
add esp 0x4
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x24 ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x38 ]
jb r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x8
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov ecx [ edi + 0xc ]
cmp [ ecx ] 0x0
je r-xdata
push eax
call sub_44b3b8
xor ecx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ edi + 0xc ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] 0x0
push ecx
call [ VariantClear@IAT ]
mov ecx [ esi ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
push esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4112ef
add esp 0x4
push eax
call sub_44478f
jmp r-xdata
mov eax esi
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esi ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_430644
mov eax [ esp + 0x34 ]
fstp st0
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
push eax
call sub_413f97
fld [ esp + 0x24 ]
add esp 0x4
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
push 0x8
lea ecx [ esp + 0x1c ]
push ecx
add eax 0x4
push eax
call sub_435d02
fild [ esp + 0x24 ]
fld [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp cx 0x58
jne r-xdata
lea eax [ edi + 0x10 ]
push eax
push ebp
call sub_4671e2
add esp 0x8
test al al
je r-xdata
mov eax [ edi + 0x18 ]
mov edx [ ebp + 0x8 ]
lea esi [ edi + 0x10 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 4 ]
mov ecx [ ecx * 4 + rw-data ]
cmp ecx 0x1
jne r-xdata
mov edi [ esp + 0x3c ]
call sub_40c8a0
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x44 ]
inc ecx
mov [ edx ] ecx
jmp r-xdata
sub ecx 0x2
cmp ecx 0x7
ja r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
cmp ecx ebx
jne r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esp + 0x44 ]
inc ecx
mov [ edx ] ecx
jmp [ ecx * 4 + jump_table_430e40 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov esi [ esi ]
push ecx
call sub_4436f6
mov eax [ esp + 0x30 ]
mov [ esp + 0x34 ] ebx
jmp r-xdata
cmp eax 0x8
je r-xdata
push ebx
push ebp
call sub_453063
push eax
push esi
call sub_453063
push eax
call sub_445a57
test eax eax
jl r-xdata
push esi
call sub_443576
push ebp
mov [ esp + 0x24 ] eax
mov esi edx
call sub_443576
cmp esi edx
jl r-xdata
mov ecx esi
call sub_40be90
fstp [ esp + 0x20 ]
mov ecx ebp
call sub_40be90
fcomp [ esp + 0x20 ]
fnstsw ax
test ah 0x41
je r-xdata
push esi
call sub_44b390
push ebp
mov esi eax
call sub_44b390
cmp esi eax
jb r-xdata
xor esi esi
jmp r-xdata
jmp [ eax * 4 + jump_table_430e60 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ebp ]
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp eax 0xa
je r-xdata
jmp r-xdata
jg r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ esi ]
call sub_4290f0
mov esi eax
jmp r-xdata
xor edx edx
cmp [ esi ] bl
setne dl
mov esi edx
jmp r-xdata
mov eax [ esi ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov esi [ esi ]
cmp [ esi ] 0x4
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_430e88 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x28 ]
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ esp + 0x20 ] eax
jb r-xdata
push eax
call sub_413431
add esp 0x4
mov esi eax
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x4 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
push eax
call sub_435bf6
mov esi [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp esi eax
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ebp ]
call sub_4290f0
jmp r-xdata
xor eax eax
cmp [ ebp ] bl
setne al
jmp r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ebp [ ebp ]
cmp [ ebp ] 0x4
jg r-xdata
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
jmp r-xdata
push 0x8
lea ecx [ esp + 0x24 ]
push ecx
add eax 0x4
push eax
call sub_435d02
mov esi [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp cx 0x58
jne r-xdata
push eax
call sub_413431
add esp 0x4
jmp r-xdata
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
mov edx [ ebp ]
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
push eax
call sub_435bf6
mov eax [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4112ef
mov eax [ esp + 0x2c ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
jne r-xdata
push 0x8
lea edx [ esp + 0x24 ]
push edx
add eax 0x4
push eax
call sub_435d02
mov eax [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
cmp cx 0x58
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_430ba1
push 0x214
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov esi [ esp + 0x28 ]
mov ecx 0x85
mov edi eax
[ edi ] [ esi ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
inc [ eax ]
jmp r-xdata
mov [ ebp ] eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] 0x1
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ esi ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] 0x0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ esp + 0x28 ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x3c ]
push ecx
push 0x72
push edx
call sub_45e62e
jmp r-xdata
mov eax [ esp + 0x3c ]
mov [ eax + 0x144 ] 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esp + 0x2c ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_430c45
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebp ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
push ecx
push eax
call sub_44b8a7
mov [ ebp ] eax
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] 0x1
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ esi ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] 0x0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ esp + 0x28 ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x3c ]
push ecx
push 0x72
push edx
call sub_45e62e
jmp r-xdata
mov eax [ esp + 0x3c ]
mov [ eax + 0x144 ] 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esp + 0x2c ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_430c74
push 0x8
call sub_41171a
mov [ ebp ] eax
mov edx [ esp + 0x2c ]
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ ebp ]
mov eax [ edx ]
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_41171a
mov ecx [ ebp ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_41171a
mov ecx [ ebp ]
mov [ ecx + 0x4 ] eax
mov ebp [ ebp ]
mov edx [ ebp ]
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x4 ]
push ecx
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] 0x1
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax 0x8
je r-xdata
lea esi [ eax + 0xc ]
mov edi eax
mov eax [ esi ]
dec [ eax ]
mov ecx [ esi ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov edx [ edi ]
push edx
call sub_4112ef
mov eax [ esi ]
add esp 0x4
push eax
call sub_4112ef
add esp 0x4
jmp r-xdata
push edi
call sub_4112ef
add esp 0x4
mov [ esp + 0x34 ] 0x0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
push eax
call [ VariantClear@IAT ]
mov ecx [ esp + 0x28 ]
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x3c ]
push ecx
push 0x72
push edx
call sub_45e62e
jmp r-xdata
mov eax [ esp + 0x3c ]
mov [ eax + 0x144 ] 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
push eax
call sub_44478f
jmp r-xdata
lea eax [ esp + 0x28 ]
call sub_40e380
jmp r-xdata
cmp eax 0xb
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4112ef
mov ecx [ esp + 0x2c ]
add esp 0x4
push ecx
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_44b3b8
jmp r-xdata
sub_430eb2
inc ebx
add [ edx + 0xb ] ch
inc ebx
add [ ecx + 0x6f00430b ] cl
mov ah 0x40
add [ ecx + 0x7d00430b ] ah
or eax [ ebx ]
xchg ebp eax
or eax [ ebx ]
loope r-xdata
or al 0x43
add bl ah
or al 0x43
add [ eax - 0x7d ] cl
clc
jle r-xdata
inc ebx
add [ ecx ] bh
or al 0x43
add [ ebp + 0xc ] al
inc ebx
add [ esp + ecx + 0x43 ] dh
add [ eax ] al
jmp [ eax * 4 + jump_table_431004 ]
xchg [ ecx + eax ] eax
add [ eax ] al
movzx eax [ eax + lookup_table_43101c ]
mov edi 0x1
sub_431bd5
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov bl [ esi ]
movzx ebp bl
push edi
mov edi [ esp + 0x14 ]
and ebp 0x1
cmp edi 0x100
jge r-xdata
and bl 0x2
inc esi
test bl bl
je r-xdata
test bl 0x2
je r-xdata
movzx eax [ esi ]
test eax eax
je r-xdata
add esi 0x20
mov ecx edi
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx eax
mov eax edi
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov al [ eax + esi + 0x1 ]
test al cl
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
inc esi
cmp eax 0x1
jne r-xdata
pop edi
xor eax eax
pop esi
test ebp ebp
pop ebp
sete al
pop ebx
retn
cmp eax 0x2
jne r-xdata
movzx edx [ esi ]
inc esi
cmp edx 0xc0
jl r-xdata
movzx eax [ esi ]
test eax eax
jne r-xdata
movzx edi [ esi ]
inc esi
cmp edi 0xc0
jl r-xdata
cmp edi edx
je r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
test eax eax
jle r-xdata
movzx edx [ esi ]
inc esi
cmp edx 0xc0
jl r-xdata
mov edx edi
and edx 0x3f
movzx eax [ edx + r--data ]
mov edx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and edx edi
add ecx ecx
shl edx cl
mov edi edx
test eax eax
jle r-xdata
jmp r-xdata
jmp r-xdata
cmp [ esp + 0x14 ] edi
jl r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
test eax eax
jle r-xdata
movzx edx [ esi ]
sub ecx 0x6
and edx 0x3f
shl edx cl
dec eax
inc esi
or edi edx
test eax eax
jg r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
test eax eax
jg r-xdata
mov edi [ esp + 0x14 ]
cmp [ esp + 0x14 ] edx
jle r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
test eax eax
jg r-xdata
sub_431d42
cmp [ esp + 0x8 ] 0x2
mov ecx [ esp + 0x4 ]
mov eax ecx
jne r-xdata
mov edx ecx
shr edx 0x10
and eax 0xff0000
or eax edx
mov edx ecx
and edx 0xff00
shl ecx 0x10
or edx ecx
shr eax 0x8
shl edx 0x8
or eax edx
retn
movzx ecx cl
shr eax 0x8
and eax 0xff
shl ecx 0x8
or eax ecx
retn
sub_431d82
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x18 ]
test edi edi
jge r-xdata
mov eax ebp
test edi edi
jle r-xdata
cmp [ ebp ] 0x0
mov edi ebp
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
lea ebx [ ebx ]
sub edi ebp
inc edi
cmp [ edi ] 0x0
jne r-xdata
inc eax
test edi edi
jg r-xdata
cmp ecx 0xc0
jl r-xdata
movzx ecx [ eax ]
dec edi
cmp ecx 0x80
jl r-xdata
pop edi
pop esi
sub eax ebp
pop ebp
pop ebx
retn
mov edx ecx
and edx 0x3f
movzx esi [ edx + r--data ]
cmp edi esi
jl r-xdata
cmp esi 0x3
jg r-xdata
mov dl [ eax + 0x1 ]
inc eax
mov bl dl
and bl 0xc0
sub edi esi
cmp bl 0x80
jne r-xdata
mov ebx esi
sub ebx 0x1
je r-xdata
test cl 0x3e
je r-xdata
sub ebx 0x1
je r-xdata
cmp ecx 0xe0
jne r-xdata
sub ebx 0x1
jne r-xdata
cmp ecx 0xed
jne r-xdata
test dl 0x20
je r-xdata
dec esi
test esi esi
jle r-xdata
cmp ecx 0xf0
jne r-xdata
cmp dl 0xa0
jae r-xdata
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
and cl 0xc0
cmp cl 0x80
jne r-xdata
cmp ecx 0xf4
jg r-xdata
test dl 0x30
jne r-xdata
dec esi
test esi esi
jg r-xdata
jne r-xdata
jmp r-xdata
cmp dl 0x8f
ja r-xdata
jmp r-xdata
sub_431e6f
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
jmp r-xdata
cmp edx [ eax * 4 + r--data ]
jle r-xdata
add esi eax
mov ecx eax
test eax eax
jle r-xdata
inc eax
cmp eax 0x6
jl r-xdata
mov cl [ eax * 4 + r--data ]
or cl dl
mov [ esi ] cl
inc eax
pop esi
retn
push ebx
mov bl dl
and bl 0x3f
or bl 0x80
mov [ esi ] bl
dec ecx
dec esi
sar edx 0x6
test ecx ecx
jg r-xdata
pop ebx
sub_431eb9
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ esp + 0x10 ]
dec esi
push edi
test ebx ebx
je r-xdata
movzx eax [ esi ]
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp eax 0x85
jg r-xdata
cmp eax 0xa
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jl r-xdata
mov cl [ esi - 0x1 ]
dec esi
and cl 0xc0
cmp cl 0x80
je r-xdata
cmp eax 0x2028
jl r-xdata
je r-xdata
cmp esi [ esp + 0x1c ]
jbe r-xdata
cmp eax 0xd
je r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov edx eax
and edx 0x3f
movzx edx [ edx + r--data ]
mov edi [ edx * 4 + r--data ]
and edi eax
lea ecx [ edx + edx * 2 ]
add ecx ecx
shl edi cl
mov eax edi
mov edi 0x1
cmp edx edi
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp eax 0x2029
jg r-xdata
xor eax eax
test ebx ebx
setne al
pop edi
pop esi
inc eax
mov [ ebp ] eax
pop ebp
mov eax 0x1
pop ebx
retn
cmp eax 0xa
je r-xdata
mov eax 0x1
cmp [ esi - 0x1 ] 0xd
mov eax 0x2
je r-xdata
pop edi
pop esi
mov [ ebp ] 0x1
pop ebp
mov eax 0x1
pop ebx
retn
movzx ebp [ edi + esi ]
sub ecx 0x6
and ebp 0x3f
shl ebp cl
inc edi
or eax ebp
cmp edi edx
jle r-xdata
pop edi
pop esi
mov [ ebp ] 0x3
pop ebp
mov eax 0x1
pop ebx
retn
cmp esi [ esp + 0x1c ]
jbe r-xdata
jle r-xdata
pop edi
pop esi
mov [ ebp ] eax
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x20 ]
jmp r-xdata
mov eax 0x1
cmp [ esi - 0x1 ] 0xd
mov eax 0x2
je r-xdata
cmp eax 0xd
jg r-xdata
pop edi
pop esi
mov [ ebp ] eax
pop ebp
mov eax 0x1
pop ebx
retn
sub_43200a
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
test ebx ebx
je r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
cmp eax 0xc0
jl r-xdata
cmp eax 0x85
jg r-xdata
cmp eax 0xa
je r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov esi [ edx * 4 + r--data ]
and esi eax
lea ecx [ edx + edx * 2 ]
add ecx ecx
shl esi cl
mov eax esi
mov esi 0x1
cmp edx esi
jl r-xdata
cmp eax 0x2028
jl r-xdata
je r-xdata
pop edi
pop esi
mov [ ebp ] 0x1
pop ebp
mov eax 0x1
pop ebx
retn
cmp eax 0xd
je r-xdata
movzx ebp [ esi + edi ]
sub ecx 0x6
and ebp 0x3f
shl ebp cl
inc esi
or eax ebp
cmp esi edx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp eax 0x2029
jg r-xdata
xor eax eax
test ebx ebx
setne al
pop edi
pop esi
inc eax
mov [ ebp ] eax
pop ebp
mov eax 0x1
pop ebx
retn
cmp eax 0xa
jl r-xdata
mov edx [ esp + 0x1c ]
dec edx
cmp edi edx
jae r-xdata
mov ebp [ esp + 0x20 ]
pop edi
pop esi
mov [ ebp ] 0x3
pop ebp
mov eax 0x1
pop ebx
retn
cmp eax 0xc
jle r-xdata
mov eax 0x1
cmp [ edi + 0x1 ] 0xa
mov eax 0x2
je r-xdata
cmp eax 0xd
jne r-xdata
pop edi
pop esi
mov [ ebp ] eax
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esp + 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov eax 0x1
cmp [ edi + 0x1 ] 0xa
mov eax 0x2
je r-xdata
pop edi
pop esi
mov [ ebp ] eax
pop ebp
mov eax 0x1
pop ebx
retn
sub_43212f
mov eax [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0xc ]
test eax eax
jl r-xdata
mov eax 0xfffffff9
pop ebp
retn
cmp eax [ esp + 0x10 ]
jge r-xdata
push ebx
lea ebx [ eax + eax ]
push esi
mov esi [ ebp + ebx * 4 + 0x4 ]
sub esi [ ebp + ebx * 4 ]
push edi
lea eax [ esi + 0x1 ]
push eax
call [ rw-data ]
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ ebp + ebx * 4 ]
add ecx [ esp + 0x14 ]
push esi
push ecx
push edi
call sub_410f70
mov edx [ esp + 0x30 ]
add esp 0xc
mov [ edi + esi ] 0x0
mov [ edx ] edi
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
lea eax [ edi - 0x6 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_432196
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0xc ]
mov eax [ eax + edx * 4 ]
mov edx [ ecx + 0x68 ]
add eax [ ecx + 0x64 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
sub edx edi
cmp esi edx
jle r-xdata
test [ esp + 0x1c ] 0x1
push ebx
je r-xdata
pop edi
xor eax eax
pop esi
retn
test esi esi
jle r-xdata
test esi esi
jle r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
retn
mov cl [ eax ]
mov dl [ edi ]
dec esi
inc edi
inc eax
cmp cl dl
jne r-xdata
mov ecx [ ecx + 0x30 ]
jmp r-xdata
pop ebx
pop edi
xor eax eax
pop esi
retn
test esi esi
jg r-xdata
movzx edx [ edi ]
movzx ebx [ eax ]
mov dl [ edx + ecx ]
dec esi
inc edi
inc eax
cmp [ ebx + ecx ] dl
jne r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
retn
test esi esi
jg r-xdata
sub_432216
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi r--data
xor esi esi
mov edi edi
movzx edx [ esi + r--data ]
inc esi
cmp [ esi + r--data ] 0x0
lea edi [ edi + edx + 0x1 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
push ebx
push edi
push ecx
call sub_416685
add esp 0xc
test eax eax
je r-xdata
movzx eax [ esi + r--data ]
cmp ebx eax
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_432266
mov eax [ esp + 0x4 ]
movzx edx [ eax + 0x1 ]
inc eax
mov cl [ eax + 0x1 ]
inc eax
test cl cl
je r-xdata
xor eax eax
retn
cmp cl 0x5c
jne r-xdata
cmp cl 0x5d
je r-xdata
cmp [ eax + 0x1 ] 0x5d
jne r-xdata
movzx ecx cl
cmp ecx edx
jne r-xdata
inc eax
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
cmp [ eax + 0x1 ] 0x5d
je r-xdata
mov edx [ esp + 0x8 ]
mov [ edx ] eax
mov eax 0x1
retn
sub_4322ae
mov eax [ esp + 0x4 ]
movzx ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
nop
retn
cmp ecx 0x50
jne r-xdata
lea edx [ ecx - 0x39 ]
cmp edx 0xc
ja r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
jmp r-xdata
movzx edx [ ecx + r--data ]
add eax edx
cmp [ esp + 0x8 ] 0x0
je r-xdata
movzx edx [ edx + lookup_table_432366 ]
jmp [ edx * 4 + jump_table_43235e ]
add eax ecx
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
add ecx 0xffffffe4
cmp ecx 0xf
ja r-xdata
mov dl [ eax + 0x1 ]
cmp dl 0x10
je r-xdata
mov dl [ eax + 0x3 ]
cmp dl 0x10
je r-xdata
cmp ecx 0x52
je r-xdata
movzx ecx [ ecx + lookup_table_43237e ]
jmp [ ecx * 4 + jump_table_432376 ]
add eax 0x2
cmp dl 0xf
jne r-xdata
cmp dl 0xf
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl 0xc0
jb r-xdata
jmp r-xdata
movzx edx cl
and edx 0x3f
movzx ecx [ edx + r--data ]
sub_43238e
mov eax [ esp + 0x4 ]
movzx ecx [ eax ]
push esi
mov esi [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x50
jne r-xdata
cmp ecx 0x5c
jne r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
jmp r-xdata
cmp ecx 0x5f
jne r-xdata
test esi esi
jl r-xdata
add eax ecx
lea edx [ ecx - 0x39 ]
cmp edx 0xc
ja r-xdata
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x4 ]
shl ecx 0x8
or ecx edx
cmp ecx esi
je r-xdata
pop esi
retn
add eax 0x3
jmp r-xdata
movzx edx [ ecx + r--data ]
add eax edx
cmp [ esp + 0xc ] 0x0
je r-xdata
movzx edx [ edx + lookup_table_432476 ]
jmp [ edx * 4 + jump_table_43246e ]
add eax 0x5
jmp r-xdata
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
add ecx 0xffffffe4
cmp ecx 0xf
ja r-xdata
mov dl [ eax + 0x1 ]
cmp dl 0x10
je r-xdata
mov dl [ eax + 0x3 ]
cmp dl 0x10
je r-xdata
movzx ecx [ ecx + lookup_table_43248e ]
jmp [ ecx * 4 + jump_table_432486 ]
add eax 0x2
cmp dl 0xf
jne r-xdata
cmp dl 0xf
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl 0xc0
jb r-xdata
jmp r-xdata
movzx edx cl
and edx 0x3f
movzx ecx [ edx + r--data ]
sub_43249e
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov [ esp + 0x10 ] 0xffffffff
xor edi edi
or eax 0xffffffff
movzx edx [ eax + lookup_table_432722 ]
jmp [ edx * 4 + jump_table_4326ea ]
mov edx [ esp + 0x20 ]
xor ecx ecx
cmp eax 0x5f
setne cl
push ebp
push edx
push ebx
dec ecx
and ecx 0x2
add ecx esi
push ecx
call sub_43249e
add esp 0x10
test eax eax
jl r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jge r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
shl ecx 0x8
or ecx edx
add esi ecx
cmp [ esi ] 0x54
je r-xdata
movzx eax [ esi ]
movzx ecx [ eax + r--data ]
add esi ecx
jmp r-xdata
inc edi
add esi 0x2
test ebx 0x800
je r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
shl ecx 0x8
or ecx edx
add edi ecx
add esi 0x4
test ebx 0x800
je r-xdata
movzx edx [ esi + 0x1 ]
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
mov al [ esi + 0x3 ]
add edi edx
cmp al 0x10
je r-xdata
add esi 0x2
inc edi
inc esi
jmp r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
shl ecx 0x8
or ecx edx
lea esi [ esi + ecx - 0x21 ]
movzx eax [ esi + 0x21 ]
add esi 0x21
add eax 0xffffffba
cmp eax 0x7
ja r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
add edi eax
cmp eax edi
jne r-xdata
mov [ esp + 0x10 ] edi
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
pop ecx
retn
movzx eax [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
shl eax 0x8
or eax edx
add eax [ ebp + 0x14 ]
mov ecx eax
mov cl [ esi ]
movzx eax cl
cmp eax 0x68
ja r-xdata
mov al [ esi - 0x1 ]
cmp al 0xc0
jb r-xdata
mov al [ esi - 0x1 ]
cmp al 0xc0
jb r-xdata
add esi 0x2
cmp al 0xf
jne r-xdata
inc edi
jmp r-xdata
movzx eax [ eax + lookup_table_43279a ]
jmp [ eax * 4 + jump_table_43278e ]
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
jmp r-xdata
cmp cl 0x54
jne r-xdata
movzx edx [ eax + 0x1 ]
movzx ebp [ eax + 0x2 ]
shl edx 0x8
or edx ebp
add eax edx
cmp [ eax ] 0x54
je r-xdata
cmp esi ecx
jbe r-xdata
movzx edx al
and edx 0x3f
movzx eax [ edx + r--data ]
add esi eax
jmp r-xdata
movzx eax al
and eax 0x3f
movzx ecx [ eax + r--data ]
add esi ecx
jmp r-xdata
add esi 0x4
jmp r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
movzx edx [ esi + 0x3 ]
shl eax 0x8
or eax ecx
movzx ecx [ esi + 0x4 ]
shl edx 0x8
or edx ecx
cmp eax edx
jne r-xdata
add esi 0x3
mov edi edi
add esi 0x3
xor edi edi
jmp r-xdata
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push ebp
push eax
add ecx 0x2
push ebx
push ecx
call sub_43249e
add esp 0x10
test eax eax
jl r-xdata
cmp esi eax
jb r-xdata
add edi eax
add esi 0x5
jmp r-xdata
add edi eax
jmp r-xdata
sub_4327a2
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
retn
movzx edx [ edx + lookup_table_43283e ]
jmp [ edx * 4 + jump_table_43282a ]
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movzx ecx [ ecx + r--data ]
add eax ecx
jmp r-xdata
add eax 0x2
jmp r-xdata
movzx ecx [ eax + 0x1 ]
mov edx [ edi ]
mov ebp ecx
and edx esi
and ebp esi
cmp ebp edx
je r-xdata
lea esp [ esp ]
movzx ecx [ eax ]
lea edx [ ecx - 0x4 ]
cmp edx 0x64
ja r-xdata
mov [ edi ] ecx
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
je r-xdata
movzx ecx [ eax ]
movzx edx [ ecx + r--data ]
add eax edx
jmp r-xdata
sub_4328a3
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x30 ]
mov eax [ edi ]
mov [ esp + 0x10 ] ecx
cmp [ ecx ] 0x28
mov ebp eax
mov [ esp + 0x30 ] ebp
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov dl [ ecx + 0x1 ]
cmp dl 0x3f
jne r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
or eax 0xffffffff
pop ebx
add esp 0x8
retn
mov ebx [ esp + 0x20 ]
mov edx ebp
jmp r-xdata
cmp dl 0x2a
je r-xdata
cmp [ ecx + 0x2 ] 0x7c
jne r-xdata
cmp al 0x5c
jne r-xdata
cmp [ ecx + 0x2 ] 0x28
jne r-xdata
inc eax
mov [ edi ] eax
test esi esi
jne r-xdata
cmp dl 0x3f
je r-xdata
add ecx 0x3
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] 0x1
jmp r-xdata
cmp al 0x5b
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
je r-xdata
add ecx 0x2
mov [ esp + 0x10 ] ecx
cmp [ ecx ] 0x50
jne r-xdata
add ecx 0x2
mov [ esp + 0x10 ] ecx
cmp [ ecx + 0x1 ] 0x3f
je r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
jmp r-xdata
cmp eax [ esp + 0x28 ]
jne r-xdata
cmp [ esp + 0x2c ] 0x0
je r-xdata
xor esi esi
cmp al 0x51
jne r-xdata
mov dl [ ecx ]
cmp dl 0x3c
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp al 0x28
jne r-xdata
cmp al 0x23
jne r-xdata
test esi esi
jne r-xdata
add ecx 0x2
cmp [ ecx ] 0x45
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
je r-xdata
cmp dl 0x27
jne r-xdata
mov bl [ ecx + 0x1 ]
cmp bl 0x21
je r-xdata
lea esp [ esp ]
cmp al 0x29
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push edi
push ecx
push edx
push esi
lea eax [ esp + 0x20 ]
push ebx
push eax
call sub_4328a3
add esp 0x18
test eax eax
jg r-xdata
lea ecx [ ecx ]
cmp [ ecx + 0x1 ] 0x5d
jne r-xdata
cmp al 0x5e
jne r-xdata
push 0x3
push r--data
push ecx
call sub_416685
mov ecx [ esp + 0x1c ]
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov esi [ esp + 0x24 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
or eax 0xffffffff
pop ebx
add esp 0x8
retn
cmp al 0x5c
jne r-xdata
inc eax
mov [ edi ] eax
test esi esi
jne r-xdata
cmp bl 0x3d
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
cmp al 0x7c
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
cmp al 0xa
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
cmp al 0x5d
je r-xdata
test [ ebx + 0x44 ] 0x2000000
jne r-xdata
inc ecx
mov esi 0x1
mov [ esp + 0x10 ] ecx
jmp r-xdata
add ecx 0x4
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al 0x5c
jne r-xdata
test al al
je r-xdata
movzx eax [ ecx ]
inc ecx
mov [ esp + 0x10 ] ecx
cmp eax 0x3c
jne r-xdata
cmp eax [ esp + 0x28 ]
je r-xdata
cmp al 0x29
je r-xdata
mov edx [ esp + 0x1c ]
mov [ edx ] ecx
cmp [ edi ] edx
jge r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
jmp r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
inc ecx
inc ecx
mov [ esp + 0x10 ] ecx
cmp [ ecx ] 0x45
jne r-xdata
movzx ebx [ ecx ]
mov edx ecx
cmp ebx eax
je r-xdata
mov eax 0x3e
mov [ edi ] edx
mov eax [ edi ]
cmp eax edx
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x8
retn
cmp al 0x5c
jne r-xdata
jmp r-xdata
test esi esi
je r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
movzx ebx [ ecx ]
cmp ebx eax
jne r-xdata
mov [ edi ] ebp
mov [ esp + 0x30 ] eax
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
cmp al 0x5d
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
je r-xdata
mov eax [ esp + 0x28 ]
mov ebx ecx
sub ebx edx
cmp eax ebx
jne r-xdata
jmp r-xdata
cmp al 0x51
jne r-xdata
push eax
push edx
push esi
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
nop
mov ecx [ esp + 0x10 ]
mov eax [ edi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp al 0x5c
jne r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
mov al [ ecx ]
test al al
je r-xdata
test al al
je r-xdata
inc ecx
mov [ esp + 0x10 ] ecx
cmp [ ecx ] 0x45
jne r-xdata
sub_432bed
mov eax [ esp + 0x4 ]
movzx edx [ eax ]
push ebx
push esi
mov ebx 0x4
xor esi esi
or ecx 0xffffffff
push edi
mov edi [ esp + 0x1c ]
test [ edx + r--data ] bl
je r-xdata
cmp [ eax ] 0x7d
jne r-xdata
lea esi [ esi + esi * 4 ]
inc eax
lea esi [ edx + esi * 2 - 0x30 ]
movzx edx [ eax ]
test [ edx + r--data ] bl
jne r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x7d
je r-xdata
mov ecx esi
test esi esi
jl r-xdata
mov edx [ esp + 0x14 ]
pop edi
mov [ edx ] esi
mov edx [ esp + 0x14 ]
pop esi
mov [ edx ] ecx
pop ebx
retn
movzx edx dl
xor ecx ecx
test [ edx + r--data ] bl
je r-xdata
mov [ edi ] 0x5
pop edi
pop esi
pop ebx
retn
cmp esi 0xffff
jg r-xdata
cmp ecx esi
jge r-xdata
lea esp [ esp ]
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
lea ecx [ ecx + ecx * 4 ]
inc eax
lea ecx [ edx + ecx * 2 - 0x30 ]
movzx edx [ eax ]
test [ edx + r--data ] bl
jne r-xdata
test ecx ecx
jl r-xdata
cmp ecx 0xffff
jg r-xdata
sub_432c90
mov eax [ esp + 0x4 ]
movzx ecx [ eax ]
mov cl [ ecx + r--data ]
mov dl 0x4
and cl dl
inc eax
test cl cl
jne r-xdata
movzx ecx [ eax ]
test [ ecx + r--data ] dl
je r-xdata
xor eax eax
retn
mov cl [ eax ]
cmp cl 0x7d
jne r-xdata
movzx ecx [ eax + 0x1 ]
inc eax
test [ ecx + r--data ] dl
jne r-xdata
inc eax
cmp cl 0x2c
jne r-xdata
mov eax 0x1
retn
mov cl [ eax ]
cmp cl 0x7d
je r-xdata
movzx ecx cl
mov cl [ ecx + r--data ]
and cl dl
inc eax
test cl cl
je r-xdata
movzx ecx [ eax ]
test [ ecx + r--data ] dl
je r-xdata
xor edx edx
cmp [ eax ] 0x7d
sete dl
mov eax edx
retn
jmp r-xdata
movzx ecx [ eax + 0x1 ]
inc eax
test [ ecx + r--data ] dl
jne r-xdata
sub_432d18
mov eax [ esp + 0x4 ]
mov edx [ eax ]
movzx eax [ edx + 0x1 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x1c ]
inc edx
shr esi 0xb
and esi 0x1
inc edx
push edi
test esi esi
je r-xdata
dec edx
test eax eax
jne r-xdata
cmp eax 0xc0
jl r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x4a
ja r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x1
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov ecx eax
and ecx 0x3f
movzx edi [ ecx + r--data ]
mov ebx [ edi * 4 + r--data ]
lea ecx [ edi + edi * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edi edi
jle r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ ecx ] edx
pop ebx
retn
movsx ebx [ ecx * 2 + r--data ]
test ebx ebx
je r-xdata
jmp r-xdata
cmp ecx 0x48
ja r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov eax ebx
mov [ ecx ] edx
pop ebx
retn
movzx ebx [ edx ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edi
inc edx
or eax ebx
test edi edi
jg r-xdata
test [ esp + 0x20 ] 0x40
je r-xdata
movzx edi [ ecx + lookup_table_4330f8 ]
jmp [ edi * 4 + jump_table_4330dc ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] 0x3
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x25
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov al [ edx + 0x1 ]
cmp al 0x3c
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
sub eax 0x30
lea ecx [ ecx ]
cmp [ edx + 0x1 ] 0x7b
jne r-xdata
movzx eax [ edx + 0x1 ]
inc edx
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov eax 0xffffffe5
mov [ ecx ] edx
pop ebx
retn
cmp al 0x27
je r-xdata
movzx eax [ edx ]
cmp eax 0x38
jl r-xdata
mov eax ecx
movzx ecx [ edx + 0x1 ]
test [ ecx + r--data ] 0x4
mov edi edx
je r-xdata
test esi esi
jne r-xdata
cmp cl 0x37
ja r-xdata
xor eax eax
nop
movzx edi [ edx + 0x2 ]
lea ebp [ edx + 0x2 ]
xor ecx ecx
xor eax eax
test [ edi + r--data ] 0x8
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x2
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
cmp al 0x7b
jne r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
dec edx
pop ebp
xor eax eax
mov [ ecx ] edx
pop ebx
retn
test eax eax
jge r-xdata
movzx ecx [ edx + 0x1 ]
inc edx
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
movzx ecx [ edx + 0x1 ]
test [ ecx + r--data ] 0x4
jne r-xdata
cmp eax 0xff
jle r-xdata
movzx ecx [ edx + 0x1 ]
inc edx
cmp ebx 0x2
lea eax [ ecx + eax * 8 - 0x30 ]
jl r-xdata
movzx esi [ edx + 0x1 ]
inc edx
cmp esi 0x61
jl r-xdata
cmp [ ebp ] 0x7d
jne r-xdata
inc ebp
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax 0x40
mov [ ecx ] edx
pop ebx
retn
sub eax 0x20
xor esi esi
mov al [ edx + 0x2 ]
lea ecx [ edx + 0x2 ]
test al al
je r-xdata
cmp eax 0xa
jl r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x3d
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x33
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov cl [ edx + 0x1 ]
inc ebx
cmp cl 0x30
jb r-xdata
xor ecx ecx
cmp esi 0x41
setge cl
shl eax 0x4
dec ecx
and ecx 0xfffffff9
add ecx 0x37
sub eax ecx
add eax esi
cmp ebx 0x2
jl r-xdata
sub esi 0x20
test eax eax
jl r-xdata
inc ecx
cmp edi 0x61
mov [ esp + 0x20 ] ecx
jl r-xdata
cmp edi 0x30
je r-xdata
xor ecx ecx
mov ecx 0x1
inc edx
jmp r-xdata
mov esi 0x1
inc edx
jmp r-xdata
nop
pop edi
mov ecx 0xffffffe3
sub ecx eax
pop esi
mov eax ecx
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
cmp eax ebp
jle r-xdata
movzx ecx [ edx + 0x1 ]
inc ebx
test [ ecx + r--data ] 0x8
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov edx [ esp + 0x18 ]
mov [ edx ] 0x22
neg esi
sbb esi esi
and esi 0x6
add esi 0x2
cmp ecx esi
jle r-xdata
xor ecx ecx
cmp edi 0x41
setge cl
shl eax 0x4
dec ecx
and ecx 0xfffffff9
add ecx 0x37
sub eax ecx
mov ecx [ esp + 0x20 ]
add eax edi
sub edi 0x20
movzx edi [ ebp ]
test [ edi + r--data ] 0x8
jne r-xdata
test esi esi
je r-xdata
movzx edi [ edx + 0x1 ]
inc edx
lea eax [ eax + eax * 4 ]
lea eax [ edi + eax * 2 - 0x30 ]
movzx edi [ edx + 0x1 ]
test [ edi + r--data ] 0x4
jne r-xdata
movzx edi [ edx + 0x1 ]
xor eax eax
test [ edi + r--data ] 0x4
je r-xdata
cmp [ edx + 0x1 ] 0x2d
jne r-xdata
mov cl [ ecx ]
test cl cl
je r-xdata
cmp al 0x2d
je r-xdata
mov edx edi
mov ecx [ esp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
pop ebx
retn
test eax eax
jne r-xdata
inc edx
cmp [ edx ] 0x7d
je r-xdata
test eax eax
jl r-xdata
cmp cl 0x7d
je r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
movzx eax al
test [ eax + r--data ] 0x4
je r-xdata
test ecx ecx
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x3a
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0x39
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov eax 0xffffffe4
mov [ ecx ] edx
pop ebx
retn
cmp al 0x7d
je r-xdata
cmp eax ebp
jle r-xdata
sub ebp eax
inc ebp
mov eax ebp
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ ecx ] 0xf
mov ecx [ esp + 0xc ]
pop ebp
mov [ ecx ] edx
pop ebx
retn
sub_433141
mov ecx [ esp + 0x4 ]
mov eax r--data
test ecx ecx
jle r-xdata
retn
lea ecx [ ecx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
dec ecx
test ecx ecx
jg r-xdata
sub_43315e
cmp [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn 0x8
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
push eax
mov [ rw-data ] 0x0
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
push esi
call [ StrokePath@IAT ]
cmp edi 0xfffffffe
je r-xdata
push esi
call [ __import_lookup_table_4(GDI32:StrokeAndFillPath) ]
jmp r-xdata
sub_4331d9
sub esp 0x8
cmp [ rw-data ] 0x0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
je r-xdata
mov edx [ esp + 0x24 ]
movzx eax si
movzx ecx di
shl eax 0x10
or eax ecx
push eax
push edx
push 0x200
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
add esp 0x8
retn 0x10
lea eax [ esp + 0xc ]
push eax
push ebx
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] esi
call [ ClientToScreen@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
call [ ImageList_DragMove@IAT ]
sub_43323e
push esi
mov esi [ esp + 0x8 ]
push 0xffffffec
push esi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x10000
je r-xdata
movzx eax [ esp + 0x10 ]
movzx ecx [ esp + 0xc ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x84
push esi
call [ DefDlgProcW@IAT ]
pop esi
retn 0xc
mov eax 0x2
pop esi
retn 0xc
sub_43327e
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push 0xc
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn 0x8
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov [ eax ] ecx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn 0x8
sub_4332c8
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_4427f7
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
retn 0x8
mov [ esi + 0x4 ] ecx
sub_43330a
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax + 0x8 ]
push eax
mov [ esi + 0x4 ] ecx
call sub_4427f7
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
dec [ esi + 0x8 ]
mov [ esi ] 0x0
mov [ eax + 0x4 ] 0x0
dec [ esi + 0x8 ]
pop esi
retn 0x4
sub_433344
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ esp + 0x10 ]
push 0xc
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_43327e
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
inc [ esi + 0x8 ]
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_43327e
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_4333fe
push esi
mov esi [ esp + 0x8 ]
push 0x8
call sub_41171a
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
add esp 0x4
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
cmp [ esi + 0x4 ] 0x0
je r-xdata
inc [ esi ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
retn 0x8
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] eax
inc [ esi ]
mov [ esi + 0x8 ] eax
pop esi
retn 0x8
sub_43343d
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ ebp + 0x1bc ]
mov ebx esi
test esi esi
je r-xdata
mov edx [ ebp ]
push 0x1
push 0x0
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
pop esi
pop ebp
pop ebx
retn 0x8
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
cmp esi [ eax + 0x78 ]
jne r-xdata
mov eax [ ebp + 0x1bc ]
cmp [ ebx ] eax
je r-xdata
mov eax edi
mov edi [ edi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
test edi edi
jne r-xdata
mov ebx esi
mov esi [ esi ]
mov ecx [ esi ]
mov [ ebp + 0x1bc ] ecx
cmp esi eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
pop edi
mov esi [ ebp + 0x1bc ]
mov ebx esi
jmp r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
test esi esi
jne r-xdata
push esi
call sub_4112ef
add esp 0x4
cmp [ esp + 0x18 ] 0x0
jne r-xdata
sub_4334ca
sub esp 0x24
mov eax [ esp + 0x2c ]
push ebx
push ebp
mov ebp [ esp + 0x38 ]
push esi
xor esi esi
push edi
mov [ esp + 0x3c ] esi
cmp [ eax ] si
je r-xdata
mov [ esp + 0x40 ] esi
push esi
push esi
push 0x3
push esi
push esi
push 0x80000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esp + 0x40 ]
push eax
push 0x0
mov [ esi + 0x60 ] eax
mov esi [ esi ]
push 0x172
push esi
call [ SendMessageW@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x10
push eax
call [ DeleteObject@IAT ]
push esi
push edi
call [ __import_lookup_table_0(KERNEL32:GetFileSize) ]
mov ebx eax
push ebx
push 0x2
call [ __import_lookup_table_0(KERNEL32:GlobalAlloc) ]
mov esi eax
push esi
call [ __import_lookup_table_0(KERNEL32:GlobalLock) ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push eax
push edi
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
push esi
call [ __import_lookup_table_0(KERNEL32:GlobalUnlock) ]
push edi
call [ CloseHandle@IAT ]
lea edx [ esp + 0x10 ]
push edx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x3c ]
push eax
push r--data
push 0x0
push 0x0
push ecx
call [ OleLoadPicture@IAT ]
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
push esi
call [ __import_lookup_table_0(KERNEL32:GlobalFree) ]
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x10
mov ecx [ eax ]
lea edx [ esp + 0x40 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov edx [ esp + 0x40 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x18
push edx
call [ GetObjectW@IAT ]
cmp [ ebp ] 0x0
mov eax [ esp + 0x44 ]
jne r-xdata
mov eax [ eax ]
mov ecx [ ebp ]
mov edx [ esp + 0x40 ]
push 0x2000
push eax
push ecx
push 0x0
push edx
call [ __import_lookup_table_10(USER32:CopyImage) ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x3c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov [ ebp ] ecx
mov [ eax ] edx
sub_43362d
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
push esi
or ecx 0x50000000
push edi
mov edi [ esp + 0xc ]
test eax 0x80000
je r-xdata
mov edx [ rw-data ]
push 0x0
push edx
mov edx [ esp + 0x38 ]
push edx
mov edx [ edi ]
push edx
mov edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x3c ]
push ecx
push edx
push eax
call [ __import_lookup_table_10(USER32:CreateWindowExW) ]
mov esi eax
test esi esi
je r-xdata
and eax 0xfff7ffff
pop edi
mov eax esi
pop esi
retn 0x2c
cmp [ esp + 0x34 ] 0x0
je r-xdata
cmp [ edi + 0x180 ] 0x0
jl r-xdata
push 0x0
push 0x11
call [ GetStockObject@IAT ]
push eax
push 0x30
push esi
call [ SendMessageW@IAT ]
cmp [ edi + 0x18c ] 0x0
je r-xdata
push 0x0
push esi
call [ ShowWindow@IAT ]
sub_4336c7
sub esp 0x30
push ebx
push ebp
push esi
mov esi [ esp + 0x44 ]
push edi
mov edi [ esp + 0x44 ]
cmp [ edi + 0x3a ] 0x0
je r-xdata
movzx eax [ esi + 0x7e ]
mov edx [ edi ]
lea ecx [ esp + 0x30 ]
push ecx
push edx
mov [ esp + 0x50 ] eax
call [ __import_lookup_table_10(USER32:GetClientRect) ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
mov ecx [ edi + 0x44 ]
mov ebx [ edi + 0x48 ]
mov [ esp + 0x4c ] eax
mov [ esp + 0x1c ] edx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x14 ] ebx
mov ebp 0x1
test eax eax
jne r-xdata
cmp [ esi + 0x88 ] 0x7
mov ax [ edi + 0x58 ]
mov [ esi + 0x80 ] ax
mov cx [ edi + 0x5c ]
mov [ esi + 0x82 ] cx
jne r-xdata
test edx edx
jne r-xdata
mov [ esp + 0x4c ] ebp
test ecx ecx
je r-xdata
mov dx [ edi + 0x60 ]
mov [ esi + 0x84 ] dx
mov ax [ edi + 0x64 ]
mov [ esi + 0x86 ] ax
cmp [ esp + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x190 ] 0x0
je r-xdata
mov [ esp + 0x1c ] ebp
test ebx ebx
je r-xdata
mov [ esp + 0x4c ] ecx
cmp [ edi + 0x5c ] ebx
jne r-xdata
mov ax [ esp + 0x20 ]
mov [ esi + 0x80 ] ax
mov edx [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call [ __import_lookup_table_10(USER32:GetClientRect) ]
or ebx 0xffffffff
cmp [ edi + 0x58 ] ebx
jne r-xdata
mov ecx [ esi ]
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x30 ]
mov ebp [ esp + 0x38 ]
sub eax edx
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ edi ]
push edx
push eax
sub ebp ecx
mov [ esp + 0x28 ] ecx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov ecx [ esp + 0x20 ]
mov eax ecx
imul eax [ esp + 0x44 ]
cdq
idiv [ esp + 0x4c ]
mov edi [ esp + 0x24 ]
mov [ esi + 0x80 ] ax
mov eax edi
imul eax ebx
cdq
idiv [ esp + 0x1c ]
mov ebx [ esp + 0x1c ]
mov [ esi + 0x82 ] ax
mov eax ebp
imul eax [ esp + 0x44 ]
cdq
idiv [ esp + 0x4c ]
mov [ esi + 0x84 ] ax
mov eax [ esp + 0x18 ]
imul eax [ esp + 0x14 ]
cdq
idiv ebx
mov [ esi + 0x86 ] ax
mov eax [ esp + 0x48 ]
test ax ax
je r-xdata
push 0xf
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
sub ebx eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] ebx
mov eax [ esi ]
lea edx [ esp + 0x20 ]
push edx
push eax
call [ GetWindowRect@IAT ]
cmp [ edi + 0x60 ] ebx
jne r-xdata
mov cx [ esp + 0x24 ]
mov [ esi + 0x82 ] cx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0xc
test eax 0x100
je r-xdata
cmp [ edi + 0x64 ] ebx
je r-xdata
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x20 ]
mov [ esi + 0x84 ] cx
test eax 0x200
je r-xdata
mov [ esi + 0x84 ] bp
test al 0x6
jne r-xdata
mov edx [ esp + 0x2c ]
sub edx [ esp + 0x24 ]
mov [ esi + 0x86 ] dx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0xc
cmp [ esi + 0x88 ] 0x0
jne r-xdata
mov edx eax
and edx 0x2
je r-xdata
mov dx [ esp + 0x18 ]
mov [ esi + 0x86 ] dx
test al 0x60
jne r-xdata
test al 0x8
je r-xdata
test al 0x4
je r-xdata
mov [ esi + 0x80 ] cx
test al al
jns r-xdata
mov eax [ esp + 0x4c ]
cdq
sub eax edx
sar eax 0x1
cmp ecx eax
jle r-xdata
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x4c ]
cdq
sub eax edx
sar eax 0x1
mov edx ecx
sub edx eax
mov [ esi + 0x80 ] dx
jmp r-xdata
mov ecx eax
and ecx 0x20
je r-xdata
test dx dx
je r-xdata
mov eax ebx
cdq
sub eax edx
sar eax 0x1
cmp edi eax
jle r-xdata
mov eax [ esp + 0x14 ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
mov edx edi
sub edx eax
mov [ esi + 0x82 ] dx
jmp r-xdata
mov eax [ esp + 0x48 ]
mov ebx [ esp + 0x4c ]
mov eax ecx
sub eax ebx
add eax ebp
imul eax [ esp + 0x44 ]
cdq
idiv ebx
mov ebx [ esp + 0x1c ]
sub eax ebp
add eax [ esp + 0x44 ]
mov [ esi + 0x80 ] ax
test al 0x40
je r-xdata
mov [ esi + 0x82 ] di
sub ecx [ esp + 0x4c ]
sub cx [ esi + 0x84 ]
add cx [ esp + 0x44 ]
add cx bp
mov [ esi + 0x80 ] cx
sub cx [ esi + 0x80 ]
sub cx [ esp + 0x4c ]
add cx [ esp + 0x44 ]
add cx bp
mov [ esi + 0x84 ] cx
jmp r-xdata
mov eax [ esp + 0x48 ]
mov eax edi
sub eax ebx
add eax [ esp + 0x18 ]
imul eax [ esp + 0x14 ]
cdq
idiv ebx
sub eax [ esp + 0x18 ]
add eax [ esp + 0x14 ]
mov [ esi + 0x82 ] ax
test cx cx
je r-xdata
sub di [ esi + 0x86 ]
sub di bx
add di [ esp + 0x14 ]
add di [ esp + 0x18 ]
mov [ esi + 0x82 ] di
sub di [ esi + 0x82 ]
sub di bx
add di [ esp + 0x14 ]
add di [ esp + 0x18 ]
mov [ esi + 0x86 ] di
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0xc
sub_433a1f
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ rw-data ]
push edi
mov edi [ esp + 0x18 ]
cmp esi 0x1
jne r-xdata
cmp esi 0x2
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp edx 0xffffffff
je r-xdata
mov [ eax + 0x58 ] ecx
cmp edx 0xffffffff
je r-xdata
add [ eax + 0x58 ] ecx
cmp edx 0xffffffff
je r-xdata
mov esi [ eax + 0x60 ]
add esi ecx
add [ eax + 0x58 ] esi
test edi edi
jle r-xdata
mov [ eax + 0x5c ] edx
jmp r-xdata
add [ eax + 0x5c ] edx
mov ecx [ eax + 0x64 ]
add ecx edx
add [ eax + 0x5c ] ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax + 0x60 ] edi
pop edi
pop esi
pop ebx
retn 0x14
mov [ eax + 0x64 ] ebx
sub_433a98
mov ecx [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x18 ]
mov eax [ edi ]
push ecx
push eax
call sub_414234
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov edx [ edi ]
push edx
call sub_4112d5
add esp 0x4
mov esi eax
mov esi ebx
sub esi [ edi ]
sar esi 0x1
jmp r-xdata
mov eax [ edi ]
push esi
push eax
push ebp
call sub_41326a
xor ecx ecx
add esp 0xc
mov [ ebp + esi * 2 ] cx
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0xc
cmp esi 0xffe
jle r-xdata
lea edx [ esi + esi ]
add [ edi ] edx
pop edi
test esi esi
pop esi
pop ebp
setne al
pop ebx
retn 0xc
inc esi
sub_433b0a
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ebp [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov esi ebp
mov edx ecx
sub edx eax
sub esi ebx
imul esi edx
mov edx [ rw-data ]
cmp edx eax
jl r-xdata
mov eax 0x1
cmp edx ecx
jg r-xdata
mov eax [ rw-data ]
cmp eax ebx
jl r-xdata
cmp eax ebp
jg r-xdata
cmp esi [ rw-data ]
jg r-xdata
push edi
call [ __import_lookup_table_10(USER32:IsWindowVisible) ]
test eax eax
je r-xdata
push edi
call [ __import_lookup_table_10(USER32:GetDlgCtrlID) ]
test eax eax
mov eax 0x1
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
sub_433bac
mov eax [ esp + 0x4 ]
cmp eax 0x10
ja r-xdata
push 0x7f00
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
jmp [ eax * 4 + jump_table_433d18 ]
push 0x7f89
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f8a
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f03
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f8b
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f01
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f88
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f86
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f83
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f85
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f82
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f84
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f04
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x7f02
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
push 0x0
push 0x0
call [ LoadCursorW@IAT ]
mov [ esp + 0x4 ] eax
jmp [ SetCursor@IAT ]
sub_433d5c
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x50 ]
mov ebp [ edi + 0x10 ]
mov esi [ edi + 0x18 ]
mov ecx ebp
and ecx 0x10
and ebp 0x6
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] ebp
je r-xdata
mov ebx [ esp + 0x54 ]
mov eax [ ebx + 0x48 ]
cmp eax 0xffffffff
jne r-xdata
push 0xe
call [ GetSysColor@IAT ]
push eax
push esi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
mov ebx [ esp + 0x54 ]
jmp r-xdata
push eax
push esi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
push 0x12
call [ GetSysColor@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x44 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ __import_lookup_table_4(GDI32:CreateSolidBrush) ]
mov [ esp + 0x50 ] eax
mov eax [ ebx + 0x44 ]
push 0xf
call [ __import_lookup_table_10(USER32:GetSysColorBrush) ]
push 0xf
mov [ esp + 0x54 ] eax
call [ GetSysColor@IAT ]
jmp r-xdata
mov eax 0x743c00
push 0x11
call [ GetSysColor@IAT ]
jmp r-xdata
mov [ esp + 0x18 ] eax
test ebp ebp
je r-xdata
mov edx [ esp + 0x54 ]
mov eax [ edx ]
push 0x0
push 0x0
push 0xe
push eax
call [ SendMessageW@IAT ]
inc eax
xor ecx ecx
mov [ esp + 0x1c ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x58 ]
add esp 0x4
push ecx
push eax
mov [ esp + 0x30 ] eax
mov eax [ edx ]
push eax
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x125
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
mov ebp [ SelectObject@IAT ]
mov ebx eax
push ebx
push esi
call ebp
mov ecx [ esp + 0x18 ]
push ecx
push esi
mov [ esp + 0x38 ] eax
call [ SetBkColor@IAT ]
mov edx [ esp + 0x50 ]
push edx
push esi
mov [ esp + 0x3c ] eax
call ebp
mov ecx [ edi + 0x20 ]
mov edx [ edi + 0x24 ]
mov [ esp + 0x2c ] eax
mov eax [ edi + 0x1c ]
push 0xffffffff
mov [ esp + 0x40 ] ecx
mov [ esp + 0x3c ] eax
mov eax [ edi + 0x28 ]
push 0xffffffff
lea ecx [ esp + 0x40 ]
push ecx
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] eax
call [ InflateRect@IAT ]
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
push 0x5
push 0x5
push edx
mov edx [ esp + 0x44 ]
push eax
push ecx
push edx
push esi
call [ RoundRect@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ eax ]
push 0xfffffff0
push ecx
mov [ esp + 0x20 ] 0x105
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x2000
jne r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov edx [ edi + 0x20 ]
mov ecx [ edi + 0x1c ]
mov eax [ edi + 0x24 ]
push 0xfffffffd
mov [ esp + 0x40 ] edx
mov [ esp + 0x3c ] ecx
mov ecx [ edi + 0x28 ]
push 0xfffffffd
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] ecx
call [ InflateRect@IAT ]
lea eax [ esp + 0x38 ]
push eax
push esi
call [ __import_lookup_table_10(USER32:DrawFocusRect) ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push 0xffffffff
push edi
push esi
call [ __import_lookup_table_10(USER32:DrawTextW) ]
push edi
call sub_4112ef
mov eax [ esp + 0x30 ]
add esp 0x4
push eax
push esi
call ebp
mov ecx [ esp + 0x50 ]
mov edi [ DeleteObject@IAT ]
push ecx
call edi
mov edx [ esp + 0x30 ]
push edx
push esi
call ebp
push ebx
call edi
mov eax [ esp + 0x14 ]
push eax
push esi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
mov ecx [ esp + 0x34 ]
push ecx
push esi
call [ SetBkColor@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn 0x8
push 0x11
call [ GetSysColor@IAT ]
push eax
push esi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
sub_433fa4
push 0x44
push 0x0
push rw-data
call sub_4131f0
push 0x10
push 0x0
push rw-data
call sub_4131f0
mov ecx [ esp + 0x1c ]
add esp 0x18
push rw-data
push rw-data
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
push ecx
mov eax 0x1
push 0x0
mov [ rw-data ] 0x44
mov [ rw-data ] 0x1
mov [ rw-data ] ax
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
retn 0x4
mov edx [ rw-data ]
mov [ esp + 0x4 ] edx
jmp [ CloseHandle@IAT ]
sub_43401c
sub esp 0x18
push esi
mov esi [ esp + 0x20 ]
cmp [ esi + 0x39 ] 0x0
push edi
jne r-xdata
pop edi
pop esi
add esp 0x18
retn 0xc
mov ecx [ esp + 0x28 ]
mov edx [ ecx ]
lea eax [ esp + 0x10 ]
push eax
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ __import_lookup_table_10(USER32:ScreenToClient) ]
lea edx [ esp + 0x8 ]
mov [ esp + 0x8 ] eax
mov eax [ esi ]
push edx
push eax
mov [ esp + 0x14 ] ecx
call edi
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0x8 ]
mov [ esp + 0x8 ] eax
mov eax [ esi ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x1c ]
push edx
push eax
mov [ esp + 0x14 ] ecx
call edi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x18 ] ecx
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] edx
mov edx [ esi ]
push ecx
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
sub_4340b2
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffeb
push esi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
cmp eax [ edi + 0x64 ]
jae r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x8
mov ecx [ edi + 0x60 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx ] esi
jne r-xdata
pop edi
pop esi
retn 0x8
sub_4340fa
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
test ecx ecx
jbe r-xdata
xor eax eax
lea esp [ esp ]
retn
add eax 0x2
sub ecx 0x1
jne r-xdata
mov dx [ eax ]
cmp dx [ esp + 0x8 ]
je r-xdata
sub_434124
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_43416a
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_4341e9
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
lea ecx [ ecx ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_4112ef
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jb r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
retn 0x4
sub_4342a8
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
test esi esi
jne r-xdata
push esi
call sub_4112d5
inc eax
add esp 0x4
add eax eax
push eax
call [ __import_lookup_table_6(ole32:CoTaskMemAlloc) ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov [ edi ] esi
pop edi
xor eax eax
pop esi
retn 0x8
push esi
push eax
call sub_411691
add esp 0x8
pop edi
xor eax eax
pop esi
retn 0x8
pop edi
mov eax 0x8007000e
pop esi
retn 0x8
sub_4342f3
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_434343
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push edi
add eax eax
push eax
call sub_438867
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
xor eax eax
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
retn 0x8
sub_4343ce
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_4343fd
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_43442c
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_4344b7
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
sub esp 0x10
xor edx edx
push esi
mov esi [ esp + 0x1c ]
cmp eax edx
jne r-xdata
mov [ esi ] edx
mov [ esi + 0x4 ] edx
cmp eax 0x2
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
pop esi
add esp 0x10
retn 0xc
pop esi
add esp 0x10
retn 0xc
push esi
push ecx
call [ ClientToScreen@IAT ]
sub_434506
sub esp 0x40
push ebx
push ebp
push esi
mov esi [ esp + 0x58 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
mov ebp [ esi + 0x4 ]
cmp eax ecx
push edi
mov edi [ esi + 0xc ]
setl dl
cmp edi ebp
setl bl
mov [ esp + 0x5c ] dl
mov [ esp + 0x13 ] bl
test dl dl
je r-xdata
test bl bl
je r-xdata
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
push eax
mov eax [ edx + 0x104 ]
lea ecx [ esp + 0x20 ]
push ecx
push eax
call sub_4344b7
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add [ esi ] eax
add [ esi + 0x8 ] eax
mov edx [ esi ]
mov edi [ esi + 0x8 ]
add [ esi + 0x4 ] ecx
add [ esi + 0xc ] ecx
mov ebx [ esi + 0x4 ]
mov ebp [ esi + 0xc ]
sub edi edx
inc edi
sub ebp ebx
push 0x0
mov [ esp + 0x5c ] edi
inc ebp
call [ GetDC@IAT ]
push ebp
mov ebx eax
push edi
push ebx
call [ __import_lookup_table_4(GDI32:CreateCompatibleBitmap) ]
push ebx
mov [ esp + 0x18 ] eax
call [ CreateCompatibleDC@IAT ]
mov ecx [ esp + 0x14 ]
mov edi eax
push ecx
push edi
call [ SelectObject@IAT ]
mov dl [ esp + 0x13 ]
mov [ esp + 0x18 ] eax
mov ecx ebp
test dl dl
je r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] ebp
cmp [ esp + 0x5c ] 0x0
mov eax [ esp + 0x58 ]
je r-xdata
neg ecx
test dl dl
je r-xdata
neg eax
mov edx [ esi + 0x4 ]
mov edx [ esi + 0xc ]
jmp r-xdata
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
cmp [ esp + 0x5c ] 0x0
mov [ esp + 0x54 ] edx
je r-xdata
mov ecx [ esp + 0x4c ]
push ecx
call sub_4112ef
add esp 0x4
xor eax eax
add esp 0x40
retn 0x10
mov eax [ esp + 0x4c ]
add esp 0x40
retn 0x10
push 0xcc0020
push ecx
mov ecx [ esp + 0x60 ]
push eax
mov eax [ esp + 0x60 ]
push eax
push esi
push ebx
push ebp
push ecx
push 0x0
push 0x0
push edi
call [ StretchBlt@IAT ]
mov edx [ esp + 0x58 ]
mov esi [ esp + 0x14 ]
push 0x0
mov eax ebp
neg eax
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0x0
push 0x0
mov [ esp + 0x3c ] edx
push esi
mov ecx 0x1
mov edx 0x20
push edi
mov [ esp + 0x40 ] 0x28
mov [ esp + 0x4c ] cx
mov [ esp + 0x4e ] dx
mov [ esp + 0x50 ] 0x0
call [ GetDIBits@IAT ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x60 ]
push eax
mov [ ecx ] eax
call sub_41171a
add esp 0x4
push 0x0
lea edx [ esp + 0x28 ]
push edx
push eax
push ebp
push 0x0
push esi
push edi
mov [ esp + 0x78 ] eax
call [ GetDIBits@IAT ]
mov ebp eax
mov eax [ esp + 0x18 ]
push eax
push edi
call [ SelectObject@IAT ]
push esi
call [ DeleteObject@IAT ]
push edi
call [ DeleteDC@IAT ]
push ebx
push 0x0
call [ ReleaseDC@IAT ]
pop edi
pop esi
test ebp ebp
pop ebp
pop ebx
je r-xdata
sub_4346d0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
lea ebx [ ecx + edx ]
mov edx edi
imul edx esi
add edx edx
add esi esi
or eax 0xffffffff
add edx edx
add esi esi
lea edi [ ecx + edi * 4 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] edi
mov esi ecx
cmp esi [ esp + 0x1c ]
jb r-xdata
add esi [ esp + 0x20 ]
mov ecx esi
movzx ebp [ ecx + 0x2 ]
add ecx 0x2
mov edi eax
and edi 0xff
xor edi ebp
movzx ebp [ ecx - 0x1 ]
shr eax 0x8
xor eax [ edi * 4 + rw-data ]
dec ecx
mov edi eax
and edi 0xff
xor edi ebp
movzx ebp [ ecx - 0x1 ]
shr eax 0x8
xor eax [ edi * 4 + rw-data ]
dec ecx
mov edi eax
and edi 0xff
xor edi ebp
shr eax 0x8
xor eax [ edi * 4 + rw-data ]
add ecx edx
cmp ecx ebx
jb r-xdata
not eax
mov [ esp + 0x20 ] eax
fild [ esp + 0x20 ]
test eax eax
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
fadd [ r--data ]
sub_43477e
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
add ecx edx
push esi
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x18 ] ecx
mov ecx edi
imul ecx ebx
add ebx ebx
add ecx ecx
add ebx ebx
lea edi [ edx + edi * 4 ]
xor esi esi
add ecx ecx
mov [ esp + 0x10 ] ebx
mov eax 0x1
mov ebx edx
cmp edx edi
jae r-xdata
mov edx esi
shr edx 0x10
mov ecx edx
shl ecx 0x4
sub ecx edx
movzx edx si
pop edi
add ecx edx
pop esi
pop ebx
cmp ecx 0xfff1
jb r-xdata
push ebp
nop
shl ecx 0x10
or ecx eax
mov [ esp + 0x10 ] ecx
fild [ esp + 0x10 ]
test ecx ecx
jge r-xdata
sub ecx 0xfff1
movzx ebp [ edx + 0x2 ]
add edx 0x2
add eax ebp
movzx ebp [ edx - 0x1 ]
dec edx
add esi eax
add eax ebp
movzx ebp [ edx - 0x1 ]
dec edx
add esi eax
add eax ebp
add edx ecx
add esi eax
cmp edx [ esp + 0x1c ]
jb r-xdata
retn 0x10
fadd [ r--data ]
sub [ esp + 0x20 ] 0x3
je r-xdata
add ebx [ esp + 0x14 ]
mov edx ebx
mov [ esp + 0x20 ] ebx
mov ebx eax
shr ebx 0x10
mov ebp ebx
shl ebp 0x4
sub ebp ebx
mov ebx esi
movzx eax ax
shr ebx 0x10
add eax ebp
mov ebp ebx
shl ebp 0x4
sub ebp ebx
mov ebx [ esp + 0x20 ]
movzx esi si
add esi ebp
cmp ebx edi
jb r-xdata
cmp ebx edi
jb r-xdata
mov [ esp + 0x20 ] 0x15ae
jmp r-xdata
pop ebp
cmp eax 0xfff1
jb r-xdata
sub eax 0xfff1
sub_43487b
movzx ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov edx ecx
sub edx esi
mov eax 0x0
sets al
push edi
mov edi [ esp + 0x18 ]
dec eax
and eax edx
mov edx [ esp + 0x14 ]
mov [ edx ] al
lea eax [ ecx + esi ]
cmp eax 0xff
jle r-xdata
mov [ edi ] al
pop edi
pop esi
retn 0x10
mov eax 0xff
sub_43491e
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x8
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push edi
add eax eax
push eax
call sub_438867
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
xor eax eax
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x8
mov ecx [ ebp ]
mov [ eax ] ecx
mov edx [ ebp + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ edx + ecx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_4349dd
mov eax [ esp + 0x4 ]
movsx eax [ eax ]
push ebx
xor ebx ebx
sub eax 0x1
je r-xdata
xor al al
pop ebx
retn 0x4
sub eax 0x1
je r-xdata
mov al 0x1
pop ebx
retn 0x4
push edi
mov edi [ __import_lookup_table_13(WININET:InternetQueryOptionW) ]
lea ecx [ esp + 0xc ]
push ecx
push ebx
push 0x26
push ebx
mov [ esp + 0x1c ] ebx
call edi
mov eax [ esp + 0xc ]
cmp eax ebx
je r-xdata
pop edi
mov al bl
pop ebx
retn 0x4
push esi
push eax
call sub_41171a
mov edx [ esp + 0x14 ]
push edx
mov esi eax
push ebx
push esi
call sub_4131f0
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x26
push ebx
call edi
cmp [ esi + 0x4 ] ebx
push esi
setne bl
call sub_4112ef
add esp 0x4
pop esi
sub_434a55
sub esp 0x8
lea eax [ esp ]
push eax
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
push 0x20000013
push eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x4
call [ __import_lookup_table_13(WININET:HttpQueryInfoW) ]
test eax eax
je r-xdata
or eax 0xffffffff
add esp 0x8
retn 0x4
mov eax [ esp + 0xc ]
add esp 0x8
retn 0x4
sub_434a9d
sub esp 0x8
push ebx
mov ebx [ esp + 0x18 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
pop edi
pop esi
xor al al
pop ebx
add esp 0x8
retn 0xc
test ebx ebx
jbe r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x0
call sub_43491e
push 0x0
call sub_4112ef
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 - 0x4 ]
mov [ eax ] edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 - 0x4 ]
add esp 0x4
pop edi
mov [ eax + 0x4 ] ebx
pop esi
mov al 0x1
pop ebx
add esp 0x8
retn 0xc
sub_434b1f
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
retn 0x8
mov ecx [ esp + 0x8 ]
push ecx
push eax
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
neg eax
sbb eax eax
inc eax
retn 0x8
sub_434b61
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
xor ecx ecx
test eax eax
mov [ esi ] eax
setne cl
mov al cl
pop esi
retn 0x4
push eax
call [ CloseHandle@IAT ]
mov [ esi ] 0x0
sub_434b96
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x4 ]
push ebx
push ebp
push esi
push edi
xor eax eax
xor edi edi
test edx edx
jbe r-xdata
or eax 0xffffffff
mov ecx [ esp + 0x18 ]
movzx ebx [ ecx ]
lea ebx [ ebx ]
inc edi
inc eax
cmp edi edx
jb r-xdata
mov ecx [ esp + 0x14 ]
mov ecx [ ecx ]
movzx ebp [ ecx + eax * 2 ]
movzx ecx bx
xor esi esi
test bx bx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ esp + 0x18 ]
movzx ecx [ ecx + esi * 2 + 0x2 ]
inc esi
test cx cx
jne r-xdata
cmp bp cx
je r-xdata
sub_434bee
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ esp + 0x10 ]
mov [ esp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
mov esi [ FindClose@IAT ]
call esi
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea ecx [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push r--data
call edi
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ esp + 0x10 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push edi
call esi
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ SetCurrentDirectoryW@IAT ]
lea edx [ esp + 0x3c ]
push r--data
push edx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x3c ]
push ecx
call [ GetFileAttributesW@IAT ]
or eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
not edx
and eax edx
push eax
lea eax [ esp + 0x40 ]
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesW) ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl 0x1
test [ esp + 0x10 ] 0x10
je r-xdata
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x3c ]
push edx
call ebx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push eax
call sub_434bee
test al al
je r-xdata
push edi
call esi
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x10
push r--data
call ebx
sub_434d50
mov edx [ esp + 0x4 ]
sub esp 0xa30
push edi
mov edi [ esp + 0xa3c ]
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x830 ]
push ecx
push 0x104
push edx
call [ __import_lookup_table_0(KERNEL32:GetFullPathNameW) ]
test eax eax
je r-xdata
xor eax eax
pop edi
add esp 0xa30
retn 0xc
lea eax [ esp + 0x82c ]
push eax
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_41353a
lea edx [ esp + 0x18 ]
push edx
call sub_4112d5
add esp 0x10
cmp [ esp + eax * 2 + 0xa ] 0x5c
jne r-xdata
push 0x0
push edi
call [ __import_lookup_table_0(KERNEL32:CreateDirectoryW) ]
test eax eax
jne r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_4112d5
add esp 0x4
cmp [ esp + eax * 2 + 0x8 ] 0x3a
je r-xdata
push esi
push 0x0
push 0x2200000
push 0x3
push 0x0
push 0x0
push 0x40000000
push edi
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
cmp [ esp + 0xa40 ] al
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
call sub_4112d5
add esp 0x4
xor edx edx
mov [ esp + eax * 2 + 0xa ] dx
push edi
call [ __import_lookup_table_0(KERNEL32:RemoveDirectoryW) ]
pop esi
xor eax eax
pop edi
add esp 0xa30
retn 0xc
push 0x14
lea eax [ esp + 0x21c ]
push 0x0
push eax
call sub_4131f0
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x228 ] 0xa0000003
call sub_4112d5
add eax eax
mov [ esp + 0x232 ] ax
mov edx [ esp + 0x232 ]
push 0x104
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x240 ]
add edx 0x2
push ecx
mov [ esp + 0x240 ] dx
call sub_41326a
mov eax [ esp + 0x23e ]
add esp 0x1c
push 0x0
add eax 0xc
mov [ esp + 0x220 ] ax
lea edx [ esp + 0x10 ]
push edx
push 0x0
movzx eax ax
push 0x0
add eax 0x8
push eax
lea ecx [ esp + 0x22c ]
push ecx
push 0x900a4
push esi
call [ DeviceIoControl@IAT ]
push esi
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
pop esi
mov eax 0x1
pop edi
add esp 0xa30
retn 0xc
call [ CloseHandle@IAT ]
sub_434ee4
mov eax [ esp + 0x8 ]
sub eax 0x1
jne r-xdata
xor eax eax
retn 0x10
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
mov eax [ esp + 0x8 ]
push 0x1
push 0x467
push eax
call [ SendMessageW@IAT ]
sub_434f0d
mov eax [ rw-data ]
push esi
mov esi [ eax + 0x4 ]
push eax
call sub_4112ef
dec [ rw-data ]
add esp 0x4
mov [ rw-data ] esi
test esi esi
pop esi
jne r-xdata
retn
mov [ rw-data ] 0x0
sub_434f66
mov eax [ esp + 0x4 ]
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
retn 0xc
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push 0x0
push edx
push esi
call [ __import_lookup_table_0(KERNEL32:SetFileTime) ]
push esi
call [ CloseHandle@IAT ]
sub_434fa9
sub esp 0x20c
lea eax [ esp ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
mov ecx [ esp + 0x210 ]
push ecx
push 0x0
push r--data
lea edx [ esp + 0xc ]
push edx
call [ GetTempFileNameW@IAT ]
add esp 0x20c
retn 0x4
sub_434ff5
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi ]
mov ecx [ esi + eax * 4 + 0x8 ]
push edi
push 0x9
push ecx
call sub_4152d5
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + edx * 4 + 0x8 ]
push 0xd
push eax
call sub_4152d5
mov ecx [ esi ]
add edi eax
mov [ esi + ecx * 4 + 0x8 ] edi
mov eax [ esi ]
mov edi [ esi + eax * 4 + 0x8 ]
add esp 0x10
add eax 0xffffffff
mov [ esi ] eax
jns r-xdata
add [ esi + 0x4 ] 0xffffffff
jns r-xdata
mov [ esi ] 0x10
mov eax [ esi ]
mov edx [ esi + eax * 4 + 0x8 ]
cmp edx [ esi + 0x4c ]
jne r-xdata
mov [ esi + 0x4 ] 0x10
mov esi [ esi + 0xd4 ]
sub esi 0x0
je r-xdata
mov ecx 0x24
sub ecx eax
push 0x44
lea edx [ esi + ecx * 4 ]
push edx
lea eax [ esi + 0x8 ]
push eax
call sub_411b63
add esp 0xc
test eax eax
jne r-xdata
mov edx edi
shr edi 0xc
shl edx 0x14
or edi 0x3ff00000
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] edx
fld [ esp + 0x8 ]
pop edi
fsub [ r--data ]
pop esi
add esp 0x8
retn 0x4
sub esi 0x1
je r-xdata
fldz
pop edi
pop esi
add esp 0x8
retn 0x4
mov ecx edi
shr edi 0xc
shl ecx 0x14
or edi 0x3ff00000
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] ecx
fld [ esp + 0x8 ]
pop edi
fsub [ r--data ]
pop esi
add esp 0x8
retn 0x4
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
test edi edi
jge r-xdata
fmul [ r--data ]
pop edi
pop esi
add esp 0x8
retn 0x4
fadd [ r--data ]
sub_4350fa
cmp [ rw-data ] 0x1000
push esi
mov esi [ esp + 0x8 ]
jbe r-xdata
inc [ rw-data ]
pop esi
retn 0x4
push edi
mov edi [ esi + 0x454 ]
mov [ rw-data ] 0x0
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
mov eax ecx
imul eax eax 0x64
xor edx edx
div [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push ecx
push eax
call edi
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x448 ] 0x1
sub_435152
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x464 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x45c ]
push eax
push 0x10000
push 0x1
push ecx
call sub_4151b0
add esp 0x10
mov [ esi + 0x464 ] 0x0
cmp eax 0x10000
jne r-xdata
mov ecx [ esi + 0x464 ]
mov edx [ esi + 0x45c ]
mov al [ ecx + edx ]
inc ecx
mov [ esi + 0x464 ] ecx
pop esi
retn 0x4
sub_4351a6
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x460 ]
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x458 ]
push ecx
push eax
push 0x1
push edx
call sub_4146ce
add esp 0x10
mov [ esi + 0x460 ] 0x0
sub_4351d9
mov dl [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x458 ]
mov ecx [ esi + 0x460 ]
mov [ eax + ecx ] dl
inc [ esi + 0x460 ]
mov eax [ esi + 0x460 ]
cmp eax 0x10000
jne r-xdata
pop esi
retn 0x8
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x458 ]
push eax
push 0x10000
push 0x1
push ecx
call sub_4146ce
add esp 0x10
mov [ esi + 0x460 ] 0x0
sub_43522c
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x438 ]
test eax eax
je r-xdata
mov eax [ esi + 0x45c ]
test eax eax
je r-xdata
push eax
call sub_413a88
add esp 0x4
mov esi [ esi + 0x458 ]
test esi esi
je r-xdata
push eax
call sub_413a88
add esp 0x4
pop esi
retn 0x4
push esi
call sub_413a88
add esp 0x4
sub_43526e
push esi
mov esi [ esp + 0x8 ]
push 0x20000
call sub_4138ba
push 0x10000
mov [ esi + 0x438 ] eax
call sub_4138ba
push 0x10000
mov [ esi + 0x45c ] eax
call sub_4138ba
add esp 0xc
cmp [ esi + 0x438 ] 0x0
mov [ esi + 0x458 ] eax
je r-xdata
push esi
call sub_43522c
mov eax 0x5
pop esi
retn 0x4
cmp [ esi + 0x45c ] 0x0
je r-xdata
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
sub_4352d1
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
cmp [ esi + 0x14 ] 0x1
jne r-xdata
mov edx [ esi + 0x1c ]
push edx
push 0x8
lea eax [ esp + 0xc ]
push 0x1
push eax
call sub_4151b0
add esp 0x10
mov eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push 0x8
push eax
lea ecx [ esp + 0xc ]
push ecx
call sub_410f70
add esp 0xc
jmp r-xdata
movzx ecx [ esp + 0x8 ]
movzx edx [ esp + 0x9 ]
movzx eax [ esp + 0xa ]
add [ esi + 0xc ] 0x8
shl ecx 0x8
or ecx edx
movzx edx [ esp + 0xb ]
shl ecx 0x8
or ecx eax
mov eax [ esp + 0x14 ]
shl ecx 0x8
or ecx edx
mov [ eax ] ecx
lea ecx [ esp + 0x4 ]
push r--data
push ecx
mov [ esp + 0x10 ] 0x0
call sub_4151d0
add esp 0x8
neg eax
sbb eax eax
neg eax
pop esi
add esp 0x8
retn 0x8
sub_43535d
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0xc ]
test ebx ebx
je r-xdata
pop ebp
pop ebx
retn 0xc
movzx ecx [ ebp + 0x2 ]
push esi
movzx esi [ ebp ]
push edi
xor edi edi
test ebx ebx
jle r-xdata
shl ecx 0x10
add ecx esi
pop edi
mov [ ebp ] ecx
pop esi
mov edi edi
mov eax [ esp + 0x18 ]
movzx eax [ edi + eax ]
add eax esi
xor edx edx
mov esi 0xfff1
div esi
inc edi
mov esi edx
lea eax [ ecx + esi ]
xor edx edx
mov ecx 0xfff1
div ecx
cmp edi ebx
mov ecx edx
jl r-xdata
sub_4353b4
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov edx 0x1
mov eax rw-data
push edi
mov ecx [ eax ]
mov edi ecx
shr edi 0x1e
xor edi ecx
imul edi edi 0x6c078965
add edi edx
mov [ eax + 0x4 ] edi
add eax 0x4
inc edx
cmp eax rw-data
jl r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
pop edi
retn
sub_4353fd
fldz
sub esp 0x10
fld st0
push ebx
fld [ esp + 0x18 ]
push ebp
fucom st1
push esi
push edi
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
pop edi
fstp st0
pop esi
fstp st0
pop ebp
xor eax eax
xor edx edx
pop ebx
add esp 0x10
retn
fst [ esp + 0x18 ]
fld st0
call sub_429126
mov edi [ esp + 0x18 ]
mov ebp eax
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] edx
fild [ esp + 0x24 ]
fst [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
fxch st1
mov ebx [ esp + 0x14 ]
fcomp st2
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fadd [ r--data ]
fstp [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
sub ecx esi
sbb eax ebx
sub ecx 0xa
sbb eax 0x0
sub edi esi
mov esi [ esp + 0x1c ]
sbb esi ebx
cmp esi eax
jl r-xdata
fsub [ r--data ]
fstp [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
sub ecx esi
sbb eax ebx
sub ecx 0xa
sbb eax 0x0
sub edi esi
mov esi [ esp + 0x1c ]
sbb esi ebx
cmp esi eax
jl r-xdata
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
jg r-xdata
jg r-xdata
add ebp 0x1
adc edx 0x0
cmp edi ecx
jb r-xdata
add ebp 0xffffffff
adc edx 0xffffffff
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp edi ecx
jb r-xdata
sub_4354dd
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov ecx [ esp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
retn 0x8
test ecx ecx
jne r-xdata
jl r-xdata
mov eax [ eax + 0x20c ]
retn 0x8
cmp ecx [ eax + 0x20c ]
jg r-xdata
mov eax [ eax + ecx * 4 + 0x8 ]
retn 0x8
sub_43550e
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x8
jne r-xdata
xor al al
retn 0x4
mov eax [ eax ]
test eax eax
je r-xdata
movzx ecx [ eax ]
cmp cx 0x9
jne r-xdata
cmp cx 0xd
je r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
retn 0x4
sub_43553d
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
push edi
xor edi edi
cmp eax 0x3
jne r-xdata
cmp eax 0x1
jne r-xdata
fld [ esi ]
sub esp 0x8
fstp [ esp ]
call sub_414c5b
mov edi eax
add esp 0x8
test edi 0x1f8
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi ]
cdq
mov ecx eax
jmp r-xdata
pop edi
pop esi
add esp 0x8
retn 0x4
fld [ esi ]
call sub_429126
mov ecx eax
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fcomp [ esi ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov eax edi
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax ecx
or eax edx
je r-xdata
jmp r-xdata
or edi 0x40000
mov eax edi
pop edi
pop esi
add esp 0x8
retn 0x4
mov eax ecx
and eax 0x1
xor esi esi
or eax esi
je r-xdata
or edi 0x200000
or edi 0x100000
jmp r-xdata
or edi 0x20000
mov eax edi
pop edi
pop esi
add esp 0x8
retn 0x4
jl r-xdata
test edx edx
jg r-xdata
or edi 0x10000
test ecx ecx
jae r-xdata
sub_43569d
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push ecx
push 0x0
push eax
call esi
push eax
push edi
call esi
push eax
call [ __import_lookup_table_0(KERNEL32:DuplicateHandle) ]
pop edi
pop esi
retn
mov [ eax ] edi
sub_43574b
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
xor ecx ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x2 ] dx
mov ecx [ eax ]
test cl 0x8
je r-xdata
test [ eax ] 0x10
je r-xdata
or ecx 0x6
mov [ eax ] ecx
retn 0x8
mov [ eax ] 0x10
sub_4357ad
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2c ] 0x0
je r-xdata
pop esi
retn 0x4
push edi
mov edi [ VariantClear@IAT ]
lea eax [ esi + 0x38 ]
push eax
call edi
lea ecx [ esi + 0x58 ]
push ecx
call edi
lea edx [ esi + 0x68 ]
push edx
call edi
lea eax [ esi + 0x78 ]
push eax
call edi
lea ecx [ esi + 0x88 ]
push ecx
call edi
lea edx [ esi + 0x48 ]
push edx
call edi
lea eax [ esi + 0x98 ]
push eax
call edi
lea ecx [ esi + 0xa8 ]
push ecx
call edi
cmp [ esi + 0x8 ] 0x0
pop edi
je r-xdata
mov [ rw-data ] 0x0
sub_43580a
test [ esp + 0x4 ] 0x4
mov eax [ esp + 0x8 ]
je r-xdata
mov edx [ esp + 0x10 ]
push eax
push edx
call [ VariantCopy@IAT ]
retn 0x10
mov ecx [ esp + 0xc ]
push ecx
push eax
call [ VariantCopy@IAT ]
retn 0x10
sub_435833
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push ebx
push esi
push edi
jne r-xdata
pop edi
pop esi
mov eax 0x80020006
pop ebx
retn 0x18
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
mov edi [ esp + 0x24 ]
test edi edi
je r-xdata
xor esi esi
nop
mov eax [ esi * 8 + rw-data ]
mov [ edi ] eax
pop edi
pop esi
xor eax eax
pop ebx
retn 0x18
inc esi
cmp esi 0xd
jl r-xdata
mov ecx [ esi * 8 + rw-data ]
mov edx [ ebx ]
push ecx
push edx
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
sub_43588c
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax 0x8002000b
pop esi
retn 0x10
push edi
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
pop edi
mov eax 0x80070057
pop esi
retn 0x10
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov [ edi ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ esi + 0x28 ]
mov [ edi ] eax
pop edi
xor eax eax
pop esi
retn 0x10
pop edi
mov eax 0x8002000b
pop esi
retn 0x10
sub_43591e
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ esi + 0xc ]
push edx
push esi
push eax
mov eax [ ecx + 0x14 ]
call eax
push eax
test eax eax
jge r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
sub_43596c
push ebx
mov ebx [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push 0x0
push 0x0
push 0xffffffff
push ebp
push 0x0
push 0xfde9
call ebx
mov esi eax
test esi esi
jne r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push esi
mov edi eax
push edi
push 0xffffffff
push ebp
push 0x0
push 0xfde9
call ebx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
pop esi
pop ebp
pop ebx
retn
sub_4359c4
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
cmp esi 0xffffffff
jne r-xdata
push 0x0
push 0x0
push esi
push ebp
push 0x1
push 0x0
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov edi eax
test edi edi
jne r-xdata
test ebp ebp
je r-xdata
xor ecx ecx
cmp edi esi
push ebx
lea edx [ ecx + 0x2 ]
mov eax esi
jl r-xdata
pop edi
pop esi
pop ebp
retn
push ebp
call sub_4137e0
mov esi eax
add esp 0x4
inc esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push edi
mov ebx eax
push ebx
push esi
push ebp
push 0x1
push 0x0
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn
mov eax edi
sub_435a35
sub esp 0xc
push ebx
mov ebx [ esp + 0x20 ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x20 ]
push edi
call [ GetLocalTime@IAT ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
xor al al
pop ebx
add esp 0xc
retn
push esi
call sub_4112d5
add esp 0x4
cmp eax 0x4
jb r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
push esi
call sub_4112d5
add esp 0x4
cmp eax 0x2
jb r-xdata
push 0x4
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_41326a
lea edx [ esp + 0x18 ]
xor ecx ecx
push edx
mov [ esp + 0x24 ] cx
call sub_413431
lea esi [ esi + ebx * 2 + 0x8 ]
push esi
mov [ edi ] ax
call sub_4112d5
add esp 0x14
cmp eax 0x2
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0xc
retn
push 0x2
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_41326a
lea edx [ esp + 0x18 ]
xor ecx ecx
push edx
mov [ esp + 0x20 ] cx
call sub_413431
lea ebx [ ebx + ebx + 0x4 ]
add esi ebx
push esi
mov [ edi + 0x8 ] ax
call sub_4112d5
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_41326a
lea edx [ esp + 0x18 ]
xor ecx ecx
push edx
mov [ esp + 0x20 ] cx
call sub_413431
lea esi [ esi + ebx * 2 + 0x4 ]
push esi
mov [ edi + 0x2 ] ax
call sub_4112d5
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_41326a
lea edx [ esp + 0x18 ]
xor ecx ecx
push edx
mov [ esp + 0x20 ] cx
call sub_413431
add esi ebx
push esi
mov [ edi + 0xa ] ax
call sub_4112d5
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_41326a
lea edx [ esp + 0x18 ]
xor ecx ecx
push edx
mov [ esp + 0x20 ] cx
call sub_413431
add esi 0x4
push esi
mov [ edi + 0x6 ] ax
call sub_4112d5
add esp 0x14
test eax eax
jbe r-xdata
push 0x2
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_41326a
lea edx [ esp + 0x18 ]
xor ecx ecx
push edx
mov [ esp + 0x20 ] cx
call sub_413431
add esp 0x10
mov [ edi + 0xc ] ax
xor eax eax
mov [ edi + 0xe ] ax
lea esi [ esi + ebx * 2 ]
sub_435bc8
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
test eax eax
jle r-xdata
retn
push esi
mov edx eax
mov esi eax
sar edx 0x10
and esi 0xff
shl esi 0x10
and edx 0xff
or edx esi
and eax 0xff00
or edx eax
mov [ ecx ] edx
pop esi
sub_435bf6
mov eax [ esp + 0x8 ]
lea ecx [ eax - 0x1 ]
push esi
mov esi [ esp + 0x10 ]
cmp ecx 0x7
ja r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
xor al al
pop esi
retn
push ebx
push ebp
xor ebp ebp
push edi
xor edi edi
cmp eax ebp
mov [ esi ] ebp
mov [ esi + 0x4 ] ebp
lea ebx [ ebp + 0x1 ]
jle r-xdata
pop edi
pop ebp
pop ebx
mov al 0x1
pop esi
retn
mov edx [ esp + 0x14 ]
movzx eax [ edi + edx ]
push ebp
cdq
push ebx
push edx
push eax
call sub_4233f0
add [ esi ] eax
push 0x0
push 0x100
adc [ esi + 0x4 ] edx
push ebp
push ebx
inc edi
call sub_4233f0
cmp edi [ esp + 0x18 ]
mov ebx eax
mov ebp edx
jl r-xdata
sub_435c62
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
push ebx
call sub_4112d5
add esp 0x4
dec eax
mov [ esi ] 0x0
mov edx 0x1
xor edi edi
cmp eax 0xffffffff
je r-xdata
movzx ecx [ ebx + eax * 2 ]
cmp cx 0x30
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
movzx eax [ ebx + 0x2 ]
cmp ax 0x78
je r-xdata
cmp cx 0x41
jb r-xdata
cmp cx 0x39
ja r-xdata
cmp [ ebx ] 0x30
jne r-xdata
cmp ax 0x58
jne r-xdata
cmp cx 0x61
jb r-xdata
cmp cx 0x46
ja r-xdata
movzx ecx cx
sub ecx 0x30
jmp r-xdata
pop edi
mov [ esi ] 0x0
pop esi
xor al al
pop ebx
retn
cmp cx 0x66
ja r-xdata
movzx ecx cx
sub ecx 0x37
jmp r-xdata
imul ecx edx
add [ esi ] ecx
inc edi
dec eax
shl edx 0x4
cmp edi 0x8
jl r-xdata
movzx ecx cx
sub ecx 0x57
test eax eax
jl r-xdata
sub_435d02
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
push eax
call sub_4112d5
xor ecx ecx
mov edi eax
add esp 0x4
dec edi
xor ebp ebp
cmp [ esp + 0x1c ] ecx
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
lea ebx [ ecx + 0x1 ]
mov [ esp + 0x18 ] ecx
jle r-xdata
cmp edi 0xffffffff
je r-xdata
mov edi edi
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
pop edi
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
pop esi
pop ebp
xor al al
pop ebx
retn
mov edx [ esp + 0x14 ]
movzx eax [ edx + edi * 2 ]
cmp ax 0x30
jb r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
ja r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x46
ja r-xdata
movzx eax ax
sub eax 0x30
jmp r-xdata
cmp ax 0x66
ja r-xdata
movzx eax ax
sub eax 0x37
jmp r-xdata
push ebp
cdq
push ebx
push edx
push eax
call sub_4233f0
add [ esi ] eax
push 0x0
push 0x10
adc [ esi + 0x4 ] edx
push ebp
push ebx
dec edi
call sub_4233f0
mov ebx eax
mov eax [ esp + 0x18 ]
inc eax
xor ecx ecx
cmp eax [ esp + 0x1c ]
mov ebp edx
mov [ esp + 0x18 ] eax
jl r-xdata
movzx eax ax
sub eax 0x57
cmp edi ecx
jl r-xdata
sub_435dc0
sub esp 0x10
push ebx
mov ebx [ esp + 0x18 ]
push edi
push ebx
call sub_4112d5
mov edi eax
cdq
sub eax edx
sar eax 0x1
add eax eax
add esp 0x4
cmp edi eax
je r-xdata
push esi
xor esi esi
test edi edi
jle r-xdata
pop edi
xor al al
pop ebx
add esp 0x10
retn
pop esi
pop edi
mov al 0x1
pop ebx
add esp 0x10
retn
mov edi edi
pop esi
pop edi
xor al al
pop ebx
add esp 0x10
retn
mov ecx [ esp + 0x24 ]
mov eax esi
cdq
sub eax edx
mov dl [ esp + 0x14 ]
sar eax 0x1
add esi 0x2
cmp esi edi
mov [ eax + ecx ] dl
jl r-xdata
mov ax [ ebx + esi * 2 ]
mov cx [ ebx + esi * 2 + 0x2 ]
mov [ esp + 0xc ] ax
push 0x8
lea eax [ esp + 0x18 ]
mov [ esp + 0x12 ] cx
push eax
lea ecx [ esp + 0x14 ]
xor edx edx
push ecx
mov [ esp + 0x1c ] dx
call sub_435d02
add esp 0xc
test al al
je r-xdata
sub_435e4d
sub esp 0x24
push ebx
mov ebx [ esp + 0x30 ]
push ebp
mov ebp [ esp + 0x38 ]
push esi
push edi
mov ecx 0x8
mov esi r--data
lea edi [ esp + 0x10 ]
[ edi ] [ esi ]
mov ecx 0x78
movsw [ edi ] [ esi ]
mov [ ebx + 0x2 ] cx
lea ecx [ ebp - 0x1 ]
mov eax 0x30
mov [ ebx ] ax
test ecx ecx
jl r-xdata
pop edi
xor edx edx
pop esi
mov [ ebx + ebp * 4 + 0x4 ] dx
pop ebp
pop ebx
add esp 0x24
retn
lea esi [ ebx + ecx * 4 + 0x4 ]
lea ecx [ ecx ]
mov edx eax
and edx 0x8000000f
jns r-xdata
add eax 0x100
mov dx [ esp + edx * 2 + 0x10 ]
mov [ esi + 0x2 ] dx
cdq
and edx 0xf
add eax edx
sar eax 0x4
mov ax [ esp + eax * 2 + 0x10 ]
mov [ esi ] ax
dec ecx
sub esi 0x4
test ecx ecx
jge r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov edx [ esp + 0x38 ]
movzx eax [ ecx + edx ]
test eax eax
jge r-xdata
pop edi
xor ecx ecx
pop esi
mov [ ebx + ebp * 4 + 0x4 ] cx
pop ebp
pop ebx
add esp 0x24
retn
sub_435eed
mov edx [ esp + 0xc ]
sub esp 0x24
push ebx
mov ebx [ esp + 0x30 ]
push esi
push edi
mov ecx 0x8
mov esi r--data
lea edi [ esp + 0xc ]
[ edi ] [ esi ]
mov ecx [ esp + 0x34 ]
lea eax [ edx - 0x1 ]
movsw [ edi ] [ esi ]
test eax eax
jl r-xdata
xor eax eax
pop edi
mov [ ebx + edx * 2 ] ax
test ecx ecx
pop esi
sete al
pop ebx
add esp 0x24
retn
jmp r-xdata
mov esi ecx
and esi 0xf
mov si [ esp + esi * 2 + 0xc ]
mov [ ebx + eax * 2 ] si
shr ecx 0x4
sub eax 0x1
jns r-xdata
sub_435f45
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
xor bl bl
mov [ esp + 0x14 ] 0x1
test edi edi
jne r-xdata
mov eax [ esi ]
movzx ecx [ edi + eax * 2 ]
push ecx
call sub_4134c6
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn
mov ecx [ esi ]
movzx eax [ edi + ecx * 2 ]
sub eax 0x2b
mov [ ebp ] 0x0
je r-xdata
inc [ esi ]
mov edx [ esi ]
movzx eax [ edi + edx * 2 ]
push eax
call sub_4134c6
add esp 0x4
test eax eax
jne r-xdata
inc ecx
mov [ esi ] ecx
sub eax 0x2
jne r-xdata
mov ecx [ ebp ]
imul ecx [ esp + 0x14 ]
pop edi
pop esi
mov [ ebp ] ecx
pop ebp
mov al bl
pop ebx
retn
mov edx [ esi ]
movzx eax [ edi + edx * 2 ]
push eax
call sub_413b67
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi ]
cmp [ edi + ecx * 2 ] 0x0
je r-xdata
mov [ esp + 0x14 ] 0xffffffff
mov eax [ esi ]
movzx edx [ edi + eax * 2 ]
mov ecx [ ebp ]
lea ecx [ ecx + ecx * 4 ]
inc eax
cmp [ edi + eax * 2 ] 0x0
lea edx [ edx + ecx * 2 - 0x30 ]
mov [ ebp ] edx
mov bl 0x1
mov [ esi ] eax
jne r-xdata
sub_436001
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub esp 0x10
cmp eax 0x80000000
jne r-xdata
cmp ecx 0x80000000
jne r-xdata
xor eax eax
mov edx [ esp + 0x20 ]
mov [ esp + 0x4 ] ecx
add ecx edx
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x1c ]
mov [ esp ] eax
push 0x0
lea edx [ esp + 0x4 ]
add eax ecx
push edx
mov [ esp + 0x10 ] eax
call [ __import_lookup_table_10(USER32:MonitorFromRect) ]
add esp 0x10
retn
xor ecx ecx
sub_43604b
push ebx
push esi
push 0x8
push 0x0
push 0x0
xor bl bl
call [ __import_lookup_table_1(ADVAPI32:OpenSCManagerW) ]
mov esi eax
test esi esi
je r-xdata
pop esi
mov al bl
pop ebx
retn
push esi
call [ LockServiceDatabase@IAT ]
test eax eax
je r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x41f
jne r-xdata
push eax
call [ UnlockServiceDatabase@IAT ]
push esi
mov bl 0x1
call [ CloseServiceHandle@IAT ]
pop esi
mov al bl
pop ebx
retn
push esi
call [ CloseServiceHandle@IAT ]
mov bl 0x1
sub_43609c
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
push esi
xor ebp ebp
mov [ esp + 0x20 ] 0x1
xor ebx ebx
call sub_4112d5
add esp 0x4
test eax eax
jbe r-xdata
push r--data
push esi
call sub_4142a3
mov esi eax
add esp 0x8
test esi esi
je r-xdata
cmp [ esi + ebx * 2 ] 0xa
jne r-xdata
mov eax [ edi + 0x4 ]
imul eax [ esp + 0x1c ]
mov [ edi ] ebp
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
pop ebx
retn
push edi
push esi
call sub_4112d5
add esp 0x4
push eax
mov eax [ esp + 0x1c ]
push esi
push eax
call [ __import_lookup_table_4(GDI32:GetTextExtentPoint32W) ]
mov eax [ edi ]
cmp eax ebp
jle r-xdata
push esi
inc ebx
call sub_4112d5
add esp 0x4
cmp ebx eax
jb r-xdata
inc [ esp + 0x1c ]
push r--data
push 0x0
call sub_4142a3
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ebp eax
sub_436134
mov ecx [ esp + 0x4 ]
test ecx ecx
jge r-xdata
cmp ecx 0x1
jne r-xdata
or eax 0xffffffff
sub eax ecx
retn
neg ecx
mov eax ecx
retn
xor eax eax
retn
sub_43614f
sub esp 0x18
push esi
mov esi [ esp + 0x28 ]
push esi
lea eax [ esp + 0x8 ]
push r--data
push eax
call sub_41353a
mov ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_41353a
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_4115d0
add esp 0x20
test eax eax
je r-xdata
push ebp
push 0xe
push esi
mov esi [ esp + 0x2c ]
push esi
call [ FindResourceW@IAT ]
push eax
push esi
call [ __import_lookup_table_0(KERNEL32:LoadResource) ]
push eax
call [ __import_lookup_table_0(KERNEL32:LockResource) ]
mov ebp eax
xor edx edx
mov [ esp + 0x2c ] 0x0
cmp dx [ ebp + 0x4 ]
jae r-xdata
mov eax 0x1
pop esi
add esp 0x18
retn 0x10
pop ebp
xor eax eax
pop esi
add esp 0x18
retn 0x10
push ebx
lea ebx [ ebp + 0x6 ]
push edi
mov eax [ esp + 0x34 ]
movzx ecx [ ebp + 0x4 ]
inc eax
add ebx 0xe
mov [ esp + 0x34 ] eax
cmp eax ecx
jb r-xdata
movzx edx [ ebx + 0x1 ]
cmp edx [ rw-data ]
jne r-xdata
movzx eax [ ebx + 0xc ]
push 0x3
push eax
push esi
call [ FindResourceW@IAT ]
mov edi eax
push edi
push esi
call [ __import_lookup_table_0(KERNEL32:LoadResource) ]
push edi
push esi
mov [ esp + 0x40 ] eax
call [ SizeofResource@IAT ]
mov ecx [ esp + 0x38 ]
push ecx
mov edi eax
call [ __import_lookup_table_0(KERNEL32:LockResource) ]
movzx edx [ ebx ]
mov ecx [ rw-data ]
cmp edx ecx
jne r-xdata
pop edi
pop ebx
movzx edx [ ebx + 0x6 ]
cmp edx [ rw-data ]
je r-xdata
mov edx [ rw-data ]
push 0x0
push edx
push ecx
push 0x30000
push 0x1
push edi
push eax
call [ CreateIconFromResourceEx@IAT ]
pop edi
pop ebx
pop ebp
mov [ rw-data ] eax
xor eax eax
pop esi
add esp 0x18
retn 0x10
sub_436272
sub esp 0x28
push esi
mov esi [ esp + 0x30 ]
push edi
test esi esi
jl r-xdata
pop edi
pop esi
add esp 0x28
retn
jne r-xdata
cmp esi 0xf
jae r-xdata
push 0x0
call [ Sleep@IAT ]
pop edi
pop esi
add esp 0x28
retn
push esi
call [ Sleep@IAT ]
mov edi [ __import_lookup_table_0(KERNEL32:QueryPerformanceCounter) ]
lea eax [ esp + 0x18 ]
push eax
call edi
test eax eax
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
call [ QueryPerformanceFrequency@IAT ]
push 0x0
call [ Sleep@IAT ]
lea edx [ esp + 0x10 ]
push edx
call edi
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
sbb ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] ecx
fild [ esp + 0x20 ]
movzx eax [ esp + 0x34 ]
fild [ esp + 0x28 ]
or eax 0xc00
mov [ esp + 0x8 ] eax
fdivp st1
fmul [ r--data ]
fldcw [ esp + 0x8 ]
fistp [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
fldcw [ esp + 0x34 ]
cmp edx esi
jb r-xdata
pop edi
pop esi
add esp 0x28
retn
sub_436328
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
lea eax [ esi - 0x1 ]
push eax
push ecx
push edi
call sub_41326a
add esp 0xc
xor edx edx
mov [ edi + esi * 2 - 0x2 ] dx
pop edi
pop esi
retn
sub_43634e
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x1c ]
mov ecx [ ebp ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
cmp ecx esi
jne r-xdata
jge r-xdata
mov eax [ esp + 0x28 ]
cmp [ eax ] edi
jne r-xdata
cmp ecx esi
jle r-xdata
mov eax esi
sub eax ecx
cdq
idiv ebx
test eax eax
je r-xdata
cmp ecx esi
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn
mov ecx [ esp + 0x28 ]
mov ecx [ ecx ]
cmp ecx edi
jge r-xdata
mov eax ecx
sub eax esi
cdq
idiv ebx
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x20 ]
jge r-xdata
jle r-xdata
mov eax edi
sub eax ecx
cdq
idiv ebx
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x20 ]
jge r-xdata
mov [ ebp ] eax
jmp r-xdata
mov [ ebp ] esi
jmp r-xdata
add eax ecx
cmp eax esi
jle r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
mov eax ecx
sub eax edi
cdq
idiv ebx
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x20 ]
jge r-xdata
mov [ ebp ] ecx
mov [ ebp ] esi
jmp r-xdata
sub ecx eax
cmp ecx esi
jge r-xdata
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x20 ]
jge r-xdata
mov edx [ esp + 0x28 ]
mov [ edx ] edi
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ ecx ] eax
mov al 0x1
pop ebx
retn
add eax ecx
cmp eax edi
jg r-xdata
mov eax [ esp + 0x28 ]
mov [ eax ] ecx
sub ecx eax
cmp ecx edi
jge r-xdata
sub_436431
push esi
mov esi [ esp + 0x8 ]
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x78
push eax
push eax
push 0x800
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
pop esi
retn
xor al al
pop esi
retn
push eax
push 0xffffff88
push eax
push eax
push 0x800
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
pop esi
retn
sub_436486
push ecx
mov ecx [ esp + 0x8 ]
lea eax [ esp ]
push eax
push 0x1388
push 0x2
push 0x0
push 0x0
push 0x0
push ecx
call [ __import_lookup_table_10(USER32:SendMessageTimeoutW) ]
test eax eax
sete al
pop ecx
retn
sub_4364aa
sub esp 0x14
push ebx
mov ebx [ esp + 0x1c ]
lea eax [ esp + 0x4 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ __import_lookup_table_1(ADVAPI32:OpenProcessToken) ]
test eax eax
je r-xdata
xor eax eax
pop ebx
add esp 0x14
retn
lea ecx [ esp + 0xc ]
push ecx
push r--data
push 0x0
call [ LookupPrivilegeValueW@IAT ]
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
push edx
push 0x0
push eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x2c ] 0x2
call [ __import_lookup_table_1(ADVAPI32:AdjustTokenPrivileges) ]
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
test eax eax
je r-xdata
cmp ebx 0x20
je r-xdata
mov eax 0x1
push 0x0
push eax
call SetSystemPowerState
pop ebx
add esp 0x14
retn
cmp ebx 0x40
je r-xdata
xor eax eax
push eax
push eax
call SetSystemPowerState
pop ebx
add esp 0x14
retn
test bl 0xb
jne r-xdata
xor ecx ecx
test bl 0x14
je r-xdata
push 0x0
push ebx
call [ __import_lookup_table_10(USER32:ExitWindowsEx) ]
pop ebx
add esp 0x14
retn
xor eax eax
test bl 0x2
je r-xdata
mov ecx 0x1
mov edx [ esp + 0x20 ]
push edx
push eax
push ecx
push 0x0
push 0x0
push 0x0
call [ __import_lookup_table_1(ADVAPI32:InitiateSystemShutdownExW) ]
pop ebx
add esp 0x14
retn
mov eax 0x1
sub_436582
sub esp 0x29c
push esi
mov esi [ esp + 0x2a4 ]
push edi
mov edi [ esp + 0x2ac ]
lea eax [ esp + 0x110 ]
push eax
push 0x101
call Ordinal_WSOCK32_115
test eax eax
jne r-xdata
push r--data
push edi
call sub_411691
add esp 0x8
pop edi
pop esi
add esp 0x29c
retn
push 0x100
lea ecx [ esp + 0x14 ]
push ecx
call Ordinal_WSOCK32_57
lea edx [ esp + 0x10 ]
push edx
call Ordinal_WSOCK32_52
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
xor edx edx
cmp [ eax ] edx
je r-xdata
cmp esi edx
jle r-xdata
mov ecx eax
lea esp [ esp ]
mov eax [ eax + esi * 4 - 0x4 ]
push 0x4
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_410f70
mov edx [ esp + 0x18 ]
add esp 0xc
push edx
call Ordinal_WSOCK32_11
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_413990
lea ecx [ esp + 0x18 ]
push 0xffffffff
push ecx
call sub_4359c4
mov esi eax
push esi
push edi
call sub_411691
push esi
call sub_4112ef
add esp 0x1c
call Ordinal_WSOCK32_116
pop edi
pop esi
add esp 0x29c
retn
push r--data
push edi
call sub_411691
add esp 0x8
call Ordinal_WSOCK32_116
pop edi
pop esi
add esp 0x29c
retn
add ecx 0x4
inc edx
cmp [ ecx ] 0x0
jne r-xdata
sub_436677
push esi
mov esi [ esp + 0xc ]
push esi
call sub_4112d5
add esp 0x4
cmp eax 0x7fff
jae r-xdata
xor edx edx
mov [ esi + eax * 2 ] dx
pop esi
retn
mov edx [ esp + 0x8 ]
lea esp [ esp ]
xor ecx ecx
mov [ esi + eax * 2 ] cx
pop esi
retn
mov [ esi + eax * 2 ] cx
inc eax
add edx 0x2
cmp eax 0x7fff
jb r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
sub_4366be
mov eax [ esp + 0x4 ]
sub esp 0x20c
push 0x104
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_436328
lea edx [ esp + 0xc ]
push edx
call sub_4112d5
add esp 0x10
test eax eax
je r-xdata
push ebp
lea edx [ esp + 0x4 ]
push edx
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + eax * 2 - 0x2 ] 0x5c
lea eax [ esp + eax * 2 - 0x2 ]
jne r-xdata
test al 0x10
jne r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov ebp [ __import_lookup_table_0(KERNEL32:CreateDirectoryW) ]
cmp eax 0x2
jne r-xdata
xor ecx ecx
mov [ eax ] cx
mov al 0x1
pop ebp
add esp 0x20c
retn
xor al al
pop ebp
add esp 0x20c
retn
cmp eax 0x3
jne r-xdata
push 0x0
lea eax [ esp + 0x8 ]
push eax
call ebp
test eax eax
je r-xdata
push esi
push edi
lea edi [ esp + 0xc ]
call sub_40fff0
mov esi eax
push 0x5c
push esi
call sub_414277
add esp 0x8
test eax eax
jne r-xdata
push ebx
xor ecx ecx
push esi
mov [ eax ] cx
call sub_4366be
push esi
mov bl al
call sub_4112ef
add esp 0x8
test bl bl
je r-xdata
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor al al
pop ebp
add esp 0x20c
retn
mov al bl
pop ebx
pop edi
pop esi
pop ebp
add esp 0x20c
retn
push 0x0
lea edx [ esp + 0x14 ]
push edx
call ebp
test eax eax
setne bl
sub_4367b1
push ecx
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
push edi
push 0x2a
push ebx
mov [ esp + 0x1b ] 0x0
xor edi edi
xor esi esi
xor ebp ebp
call sub_41420e
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
push r--data
push edx
call sub_414234
add esp 0x8
cmp [ esp + 0x13 ] 0x0
jne r-xdata
movzx eax [ ebx ]
cmp ax 0x2a
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
push ebx
push eax
call sub_411691
add esp 0x8
mov ecx [ esp + 0x18 ]
movzx eax [ ecx ]
test ax ax
je r-xdata
movzx eax ax
nop
inc edi
cmp [ ebx + edi * 2 ] 0x0
lea eax [ ebx + edi * 2 ]
je r-xdata
movzx eax ax
mov ecx [ esp + 0x24 ]
inc edi
mov [ ecx + esi * 2 ] ax
movzx eax [ ebx + edi * 2 ]
inc esi
cmp ax 0x2a
jne r-xdata
mov ecx [ esp + 0x24 ]
xor eax eax
mov [ ecx + esi * 2 ] ax
mov [ esp + 0x13 ] 0x1
movzx ecx [ eax ]
cmp cx 0x2a
je r-xdata
mov edx [ esp + 0x24 ]
inc ebp
mov [ edx + esi * 2 ] ax
movzx eax [ ecx + ebp * 2 ]
inc esi
test ax ax
jne r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
mov edx [ esp + 0x24 ]
mov [ edx + esi * 2 ] cx
inc esi
sub_436879
mov eax 0x1060
call sub_425210
push esi
mov esi [ esp + 0x1074 ]
push edi
mov edi [ esp + 0x107c ]
push 0x2a
push esi
call sub_41420e
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0xe60 ]
push ecx
mov ecx [ esp + 0x1074 ]
lea edx [ esp + 0xa4c ]
push edx
lea eax [ esp + 0x638 ]
push eax
push ecx
call sub_413db0
lea edx [ esp + 0x434 ]
push edx
lea eax [ esp + 0xc68 ]
push eax
lea ecx [ esp + 0xa60 ]
push ecx
lea edx [ esp + 0x64c ]
push edx
push esi
call sub_413db0
mov esi 0x2e
add esp 0x28
cmp [ esp + 0x8 ] si
jne r-xdata
push esi
push edi
call sub_411691
add esp 0x8
pop edi
pop esi
add esp 0x1060
retn
cmp [ esp + 0x420 ] si
jne r-xdata
lea eax [ esp + 0xa ]
push eax
lea ecx [ esp + 0xc ]
push ecx
call sub_411691
add esp 0x8
lea ecx [ esp + 0x62c ]
push ecx
push edi
call sub_411691
lea edx [ esp + 0xa4c ]
push edx
push edi
call sub_411663
mov edx [ esp + 0x1084 ]
lea eax [ esp + 0x848 ]
push eax
lea ecx [ esp + 0x434 ]
push ecx
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_4367b1
mov eax [ esp + 0x1090 ]
lea ecx [ esp + 0x234 ]
push ecx
lea edx [ esp + 0xc74 ]
push edx
push eax
lea ecx [ esp + 0xe88 ]
push ecx
call sub_4367b1
add esp 0x30
cmp [ esp + 0x838 ] 0x0
je r-xdata
lea edx [ esp + 0x422 ]
push edx
lea eax [ esp + 0x424 ]
push eax
call sub_411691
add esp 0x8
cmp [ esp + 0x8 ] 0x0
je r-xdata
lea edx [ esp + 0x214 ]
push r--data
push edx
call sub_411663
lea eax [ esp + 0x840 ]
jmp r-xdata
lea edx [ esp + 0x214 ]
push edx
push edi
call sub_411663
add esp 0x8
pop edi
pop esi
add esp 0x1060
retn
lea edx [ esp + 0x214 ]
push r--data
push edx
call sub_411663
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x220 ]
push ecx
call sub_411663
add esp 0x10
sub_436a1d
sub esp 0x820
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x41c ]
push ecx
mov ecx [ esp + 0x82c ]
lea edx [ esp + 0x624 ]
push edx
lea eax [ esp + 0x14 ]
push eax
push ecx
call sub_413db0
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x430 ]
push eax
mov eax [ esp + 0x844 ]
lea ecx [ esp + 0x230 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_413db0
add esp 0x28
cmp [ esp + 0x8 ] 0x0
jne r-xdata
lea eax [ esp ]
push eax
lea ecx [ esp + 0xc ]
push ecx
call sub_4115d0
add esp 0x8
test eax eax
setne al
add esp 0x820
retn
cmp [ esp ] 0x0
jne r-xdata
lea ecx [ esp + 0x214 ]
push ecx
lea edx [ esp + 0x620 ]
push edx
call sub_4115d0
add esp 0x8
test eax eax
setne al
add esp 0x820
retn
sub_436ade
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x8 ]
push eax
push esi
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov eax [ esp + 0x8 ]
or eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_436b3a
sub esp 0x10
push ebx
mov ebx [ esp + 0x18 ]
push esi
push edi
mov edi [ esp + 0x28 ]
lea eax [ esp + 0x18 ]
push eax
push ebx
call GetFileVersionInfoSizeW
mov esi eax
test esi esi
jne r-xdata
push ebp
push esi
call sub_41171a
add esp 0x4
mov ebp eax
push ebp
push esi
push 0x0
push ebx
call GetFileVersionInfoW
push edi
call sub_4112d5
xor ecx ecx
add eax 0x1a
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi eax
push r--data
push esi
call sub_411691
push r--data
push edi
call sub_4133e4
add esp 0x18
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
add esp 0x10
retn
push r--data
push edi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_411663
push r--data
push edi
call sub_413772
add esp 0x10
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
push esi
push ebp
call VerQueryValueW
test eax eax
je r-xdata
mov edi [ esp + 0x28 ]
push 0x8
lea edx [ esi + 0x20 ]
push edx
push edi
call sub_41326a
xor eax eax
push ebp
mov [ edi + 0x10 ] ax
call sub_4112ef
push esi
call sub_4112ef
add esp 0x14
pop ebp
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0x10
retn
push edi
push esi
call sub_411663
add esp 0x8
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push r--data
push ebp
call VerQueryValueW
test eax eax
je r-xdata
push ebp
call sub_4112ef
push esi
call sub_4112ef
add esp 0x8
pop ebp
pop edi
pop esi
xor al al
pop ebx
add esp 0x10
retn
push r--data
push edi
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_411663
add esp 0x8
mov edx [ esp + 0x14 ]
mov ebx [ edx ]
push 0x4
lea eax [ esi + 0x20 ]
push eax
push ebx
call sub_435eed
push 0x4
lea ecx [ esi + 0x28 ]
push ecx
shr ebx 0x10
push ebx
call sub_435eed
add esp 0x18
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x28 ]
push 0x200
push eax
push edi
call sub_41326a
add esp 0xc
xor ecx ecx
mov [ edi + 0x400 ] cx
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
movzx edx cx
push edx
mov edx [ esp + 0x2c ]
shr ecx 0x10
push ecx
movzx ecx ax
push ecx
shr eax 0x10
push eax
push r--data
push edx
call sub_41353a
add esp 0x18
jmp r-xdata
push r--data
push esi
call sub_411663
push edi
push esi
call sub_411663
add esp 0x10
jmp r-xdata
push ebp
call sub_4112ef
push esi
call sub_4112ef
add esp 0x8
pop ebp
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0x10
retn
sub_436d2d
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
push 0x0
push 0x2000080
push 0x3
push 0x0
push 0x1
push 0x40000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
test ebx ebx
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
retn
push 0x0
cmp ebx 0x1
jne r-xdata
push edi
push ebx
jmp r-xdata
push edi
push 0x0
push edi
push esi
call [ __import_lookup_table_0(KERNEL32:SetFileTime) ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al bl
pop ebx
retn
push 0x0
push esi
call [ __import_lookup_table_0(KERNEL32:SetFileTime) ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_436d9f
mov ecx [ esp + 0x4 ]
xor eax eax
xor edx edx
cmp [ ecx ] ax
je r-xdata
lea eax [ edx + eax + 0x1 ]
retn
push esi
mov edi edi
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
inc edx
mov si [ ecx + eax * 2 ]
inc eax
cmp si 0xa
jne r-xdata
pop esi
sub_436dc8
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
mov [ edx + eax * 2 ] si
add ecx 0x2
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov esi 0xd
mov [ edx + eax * 2 ] si
mov si [ ecx ]
inc eax
movzx esi [ ecx ]
cmp si 0xa
jne r-xdata
pop esi
sub_436e04
mov edx [ esp + 0x4 ]
xor eax eax
cmp [ edx ] ax
je r-xdata
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
mov ecx edx
push esi
mov edi edi
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
mov [ edx + eax * 2 ] si
inc eax
movzx esi [ ecx ]
cmp si 0xd
je r-xdata
pop esi
sub_436e33
sub esp 0x200
push esi
mov esi [ esp + 0x208 ]
push edi
push 0x100
lea eax [ esp + 0xc ]
push eax
push esi
mov edi 0x1
call [ GetClassNameW@IAT ]
lea ecx [ esp + 0x8 ]
push r--data
push ecx
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x200
retn 0x8
pop edi
mov [ rw-data ] esi
pop esi
add esp 0x200
retn 0x8
sub_436e8c
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
cmp [ edi ] si
je r-xdata
push edi
call sub_41343c
add esp 0x4
pop edi
pop esi
retn
mov eax edi
nop
pop edi
xor eax eax
pop esi
retn
inc esi
cmp [ edi + esi * 2 ] 0x0
lea eax [ edi + esi * 2 ]
jne r-xdata
movzx eax [ eax ]
push eax
call sub_41349d
add esp 0x4
test eax eax
je r-xdata
sub_436ec8
mov eax 0x102c
call sub_425210
push ebp
mov ebp [ esp + 0x103c ]
lea eax [ esp + 0x4 ]
push eax
push 0x800
lea ecx [ esp + 0x838 ]
push ecx
call EnumProcesses
test eax eax
jne r-xdata
mov edx [ esp + 0x1034 ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edx
shr esi 0x2
mov [ ebp ] 0x0
call sub_436e8c
add esp 0x4
xor ebx ebx
mov [ esp + 0x14 ] eax
test esi esi
jbe r-xdata
xor al al
pop ebp
add esp 0x102c
retn
pop esi
pop ebx
mov al 0x1
pop ebp
add esp 0x102c
retn
push edi
pop edi
mov eax [ esp + ebx * 4 + 0x83c ]
push eax
push 0x0
push 0x410
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x4
lea edx [ esp + 0x1c ]
mov edi eax
push edx
push edi
call EnumProcessModules
mov ecx [ esp + 0x14 ]
push 0x104
lea eax [ esp + 0x22c ]
push eax
push ecx
push edi
call GetModuleBaseNameW
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
inc ebx
cmp ebx esi
jb r-xdata
lea edx [ esp + 0x434 ]
push edx
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x640 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x238 ]
push eax
call sub_413db0
lea ecx [ esp + 0x448 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
call sub_411663
mov eax [ esp + 0x105c ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
call sub_4115d0
add esp 0x24
test eax eax
jne r-xdata
cmp [ ebp ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
mov edx [ esp + ebx * 4 + 0x83c ]
mov eax [ esp + 0x1044 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ esp + ebx * 4 + 0x83c ]
cmp ecx eax
jne r-xdata
mov [ ebp ] 0x1
mov ecx [ esp + 0x1044 ]
mov [ ecx ] eax
sub_43701f
sub esp 0x840
push ebx
push ebp
mov ebp [ esp + 0x84c ]
push esi
mov esi [ esp + 0x858 ]
push edi
push 0x0
push 0x2
mov [ esp + 0x20 ] 0x22c
call CreateToolhelp32Snapshot
mov edi eax
lea eax [ esp + 0x18 ]
push eax
push edi
call Process32FirstW
push ebp
mov [ esi ] 0x0
call sub_436e8c
add esp 0x4
cmp [ esi ] 0x0
mov ebx eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x840
retn
lea ecx [ ecx ]
lea edx [ esp + 0x448 ]
push edx
lea eax [ esp + 0x248 ]
push eax
lea ecx [ esp + 0x654 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x4c ]
push eax
call sub_413db0
lea ecx [ esp + 0x45c ]
push ecx
lea edx [ esp + 0x25c ]
push edx
call sub_411663
lea eax [ esp + 0x260 ]
push ebp
push eax
call sub_4115d0
add esp 0x24
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x858 ]
mov [ edx ] ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
cmp ebx eax
jne r-xdata
mov [ esi ] 0x1
lea ecx [ esp + 0x18 ]
push ecx
push edi
call Process32NextW
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x858 ]
mov [ ecx ] eax
sub_437118
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
push 0x0
push 0x0
push 0x10
push esi
call [ PostMessageW@IAT ]
lea eax [ esp + 0x8 ]
push eax
push 0x1f4
push 0x2
push 0x0
push 0x0
push 0x10
push esi
call [ __import_lookup_table_10(USER32:SendMessageTimeoutW) ]
test eax eax
jne r-xdata
pop esi
add esp 0x8
retn
lea ecx [ esp + 0x4 ]
push ecx
push esi
call [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
mov edx [ esp + 0x4 ]
push edx
push 0x0
push 0x1f0fff
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov esi eax
push 0x0
push esi
call [ __import_lookup_table_0(KERNEL32:TerminateProcess) ]
push esi
call [ CloseHandle@IAT ]
sub_43717f
mov ecx [ esp + 0x4 ]
sub esp 0x408
push esi
mov esi [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
push edi
push 0x100
lea eax [ esp + 0xc ]
push eax
push ecx
push 0x0
call esi
mov edi [ __import_lookup_table_10(USER32:LoadStringW) ]
push eax
call edi
push 0x100
lea edx [ esp + 0x210 ]
push edx
push 0x1389
push 0x0
call esi
push eax
call edi
cmp [ esp + 0x418 ] 0x0
pop edi
pop esi
lea eax [ esp + 0x204 ]
je r-xdata
push 0x11010
lea edx [ esp + 0x4 ]
push edx
push eax
push 0x0
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
add esp 0x408
retn
push r--data
push r--data
push eax
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push r--data
call sub_413e5c
add esp 0x18
add esp 0x408
retn
sub_437257
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x2c ]
sub eax 0x1
je r-xdata
mov eax 0x20
retn 0x4
sub eax 0x1
je r-xdata
mov eax 0x40
retn 0x4
sub eax 0x2
je r-xdata
mov eax [ ecx + 0x30 ]
neg eax
sbb eax eax
and eax 0xffffff80
add eax 0x100
retn 0x4
xor eax eax
retn 0x4
sub_437294
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ecx + 0x4 ]
push ecx
call sub_4112ef
dec [ esi ]
add esp 0x4
mov [ esi + 0x4 ] edi
test edi edi
jne r-xdata
pop edi
pop esi
retn 0x4
mov [ esi + 0x8 ] edi
sub_4372ba
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
dec [ eax ]
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
retn 0x4
push eax
call sub_4112ef
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x8
sub_4372e1
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push 0x4
mov [ esi ] eax
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn 0x8
mov [ eax ] 0x1
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn 0x8
sub_437314
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov [ eax ] 0xffffffff
test ecx ecx
jge r-xdata
mov [ eax ] ecx
mov eax ecx
cmp eax 0x207
jge r-xdata
mov ecx [ edx + 0x9c4 ]
cmp ecx 0xffffffff
jne r-xdata
xor al al
retn 0xc
cmp [ edx + eax * 4 + 0x1a4 ] 0x0
setne al
retn 0xc
sub_437353
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
push edi
mov edi [ esp + 0x10 ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ edi ] 0x0
pop edi
pop esi
retn 0x8
cmp [ edi ] 0x0
je r-xdata
push eax
call [ DestroyIcon@IAT ]
sub_43737d
push esi
mov esi [ esp + 0x10 ]
xor eax eax
push edi
mov edi [ esp + 0x18 ]
mov [ edi ] al
mov [ esp + 0x18 ] eax
cmp [ esi ] ax
je r-xdata
pop edi
pop esi
retn 0x10
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax + 0x1a0 ]
pop edi
pop esi
retn 0x10
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push 0x7f04
push eax
call [ LoadIconW@IAT ]
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push 0x7f02
push eax
call [ LoadIconW@IAT ]
pop edi
pop esi
retn 0x10
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push 0x7f01
push eax
call [ LoadIconW@IAT ]
pop edi
pop esi
retn 0x10
mov edx [ esp + 0x10 ]
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push edx
push esi
call [ ExtractIconExW@IAT ]
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0x7f03
push eax
call [ LoadIconW@IAT ]
pop edi
pop esi
retn 0x10
mov [ edi ] 0x1
pop edi
pop esi
retn 0x10
sub_437472
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + 0x4 ]
mov edi edi
cmp eax 0x10
je r-xdata
inc eax
add ecx 0x8
cmp eax 0x10
jl r-xdata
pop esi
retn 0x10
mov ecx [ esp + 0x14 ]
mov edx [ edx + eax * 8 ]
push 0x0
push ecx
mov ecx [ esp + 0x18 ]
push ecx
push esi
push edx
call [ ReadProcessMemory@IAT ]
cmp [ ecx ] esi
je r-xdata
sub_4374af
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
xor eax eax
lea ecx [ edx + 0x4 ]
mov edi edi
cmp eax 0x10
je r-xdata
inc eax
add ecx 0x8
cmp eax 0x10
jl r-xdata
pop esi
retn 0x10
mov ecx [ esp + 0x14 ]
mov edx [ edx + eax * 8 ]
push 0x0
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push esi
push edx
call [ __import_lookup_table_0(KERNEL32:WriteProcessMemory) ]
cmp [ ecx ] esi
je r-xdata
sub_4374ec
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
lea eax [ edi + 0x4 ]
jmp r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x10 ]
je r-xdata
mov edx [ edi + esi * 8 + 0x4 ]
mov eax [ edi + esi * 8 ]
push ebx
push 0x8000
lea ebx [ edi + esi * 8 + 0x4 ]
push 0x0
push edx
push eax
call [ __import_lookup_table_0(KERNEL32:VirtualFreeEx) ]
mov ecx [ edi + esi * 8 ]
push ecx
call [ CloseHandle@IAT ]
mov [ ebx ] 0x0
pop ebx
pop edi
pop esi
retn 0x8
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
pop edi
pop esi
retn 0x8
sub_437543
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
lea eax [ edi + 0x4 ]
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp esi 0x10
jne r-xdata
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0xc ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
mov edx [ esp + 0xc ]
push edx
push 0x0
push 0x438
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov ecx [ esp + 0x10 ]
push 0x4
push 0x1000
push ecx
push 0x0
push eax
mov [ edi + esi * 8 ] eax
call [ VirtualAllocEx@IAT ]
mov [ edi + esi * 8 + 0x4 ] eax
pop edi
pop esi
retn 0xc
pop edi
xor eax eax
pop esi
retn 0xc
sub_4375b0
push ecx
push ebp
push esi
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov ebp [ esp + 0x10 ]
mov esi eax
cmp ebp esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
mov eax 0x1
pop ebp
pop ecx
retn 0x4
push ebp
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push esi
push r--data
call [ FindWindowW@IAT ]
mov esi eax
push ebp
mov [ esp + 0xc ] 0x0
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
push 0x9
push ebp
call [ ShowWindow@IAT ]
pop esi
mov eax 0x2
pop ebp
pop ecx
retn 0x4
push ebx
push edi
push eax
push esi
mov esi [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
call esi
mov edi eax
call [ GetCurrentThreadId@IAT ]
push 0x0
push ebp
mov ebx eax
call esi
mov esi [ __import_lookup_table_10(USER32:AttachThreadInput) ]
push 0x1
mov ebp eax
push ebp
push ebx
call esi
push 0x1
push edi
push ebx
call esi
push 0x1
push ebp
push edi
call esi
mov eax [ esp + 0x18 ]
push eax
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x3
push eax
push eax
push eax
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
push 0x0
push 0x2
push 0x0
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
push 0x0
push 0x0
push 0x0
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
push 0x0
push 0x2
push 0x0
push 0x12
call [ MapVirtualKeyW@IAT ]
push eax
push 0x12
call [ keybd_event@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call [ SetForegroundWindow@IAT ]
test eax eax
je r-xdata
push 0x0
push ebp
push ebx
call esi
push 0x0
push edi
push ebx
call esi
push 0x0
push ebp
push edi
call esi
mov eax [ esp + 0x10 ]
pop edi
pop ebx
pop esi
pop ebp
pop ecx
retn 0x4
mov [ esp + 0x10 ] 0x4
jmp r-xdata
sub_43770a
sub esp 0x28
push esi
mov esi [ esp + 0x30 ]
test esi esi
jl r-xdata
pop esi
add esp 0x28
retn 0x4
jne r-xdata
push edi
cmp esi 0xf
jae r-xdata
push 0x0
call [ Sleep@IAT ]
pop esi
add esp 0x28
retn 0x4
push esi
call [ Sleep@IAT ]
pop edi
mov edi [ __import_lookup_table_0(KERNEL32:QueryPerformanceCounter) ]
lea eax [ esp + 0x10 ]
push eax
call edi
test eax eax
je r-xdata
mov [ esp + 0x34 ] esi
fild [ esp + 0x34 ]
test esi esi
jge r-xdata
fstp [ esp + 0x28 ]
mov edi edi
fadd [ r--data ]
push 0x0
call [ Sleep@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
call edi
mov edx [ esp + 0x8 ]
sub edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
sbb eax [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
fild [ esp + 0x18 ]
fstp [ esp + 0x20 ]
call sub_40dd20
fdivr [ esp + 0x20 ]
fcomp [ esp + 0x28 ]
fnstsw ax
test ah 0x5
jpo r-xdata
pop edi
pop esi
add esp 0x28
retn 0x4
sub_4377b4
push ecx
push ebx
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0xc ] ebx
call [ GetCurrentThreadId@IAT ]
mov esi eax
cmp [ esp + 0x1c ] bl
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ eax + 0x9 ] bl
je r-xdata
cmp edi ebx
mov edi [ __import_lookup_table_10(USER32:AttachThreadInput) ]
je r-xdata
push ebp
push ebx
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov ebp [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
push eax
call ebp
mov ebx [ __import_lookup_table_10(USER32:AttachThreadInput) ]
push 0x1
push eax
push esi
mov [ rw-data ] eax
call ebx
mov [ esp + 0x20 ] eax
test edi edi
je r-xdata
pop edi
pop ebx
pop ecx
retn 0xc
mov ecx [ rw-data ]
push ebx
push ecx
push esi
call edi
mov eax [ rw-data ]
push ebx
push eax
push esi
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
je r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x10 ]
push ecx
push edi
call ebp
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp ecx eax
je r-xdata
push ebx
push eax
push ecx
call edi
pop esi
cmp [ esp + 0x18 ] 0x0
jne r-xdata
push 0x1
push eax
push esi
call ebx
jmp r-xdata
push 0x1
push eax
push ecx
call ebx
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ esp + 0x20 ] 0x0
pop ebp
jne r-xdata
mov eax [ rw-data ]
cmp esi eax
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov edx [ esp + 0x14 ]
pop esi
pop edi
mov [ edx + 0x20 ] 0x0
pop ebx
pop ecx
retn 0xc
sub_4378b5
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
sub esp 0x1c
push esi
mov esi [ esp + 0x24 ]
test [ esi + 0xc ] 0x4
pop esi
je r-xdata
add esp 0x1c
mov [ esp + 0x10 ] 0x0
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
jmp [ keybd_event@IAT ]
movzx dx dl
mov [ esp + 0x4 ] dx
push 0x1c
lea edx [ esp + 0x4 ]
movzx cx cl
mov [ esp + 0xc ] eax
xor eax eax
push edx
push 0x1
mov [ esp + 0xc ] 0x1
mov [ esp + 0x12 ] cx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
call [ __import_lookup_table_10(USER32:SendInput) ]
add esp 0x1c
retn 0x10
sub_43797b
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
movzx edi [ esp + 0x14 ]
push edi
call [ __import_lookup_table_10(USER32:GetKeyState) ]
mov bx ax
and bl 0x1
cmp [ esp + 0x18 ] bl
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
retn 0xc
push ebp
mov ebp [ MapVirtualKeyW@IAT ]
push 0x0
push 0x0
push edi
call ebp
push eax
mov eax [ esp + 0x20 ]
push eax
push esi
call sub_4378b5
push esi
call sub_43792a
push 0x2
push 0x0
push edi
call ebp
mov ecx [ esp + 0x1c ]
push eax
push ecx
push esi
call sub_4378b5
push esi
call sub_437953
pop ebp
sub_4379dc
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
cmp eax ecx
je r-xdata
retn 0x8
movzx edx [ ecx ]
mov [ eax ] dl
movzx edx [ ecx + 0x1 ]
mov [ eax + 0x1 ] dl
movzx edx [ ecx + 0x3 ]
mov [ eax + 0x3 ] dl
movzx edx [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
movzx edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] dl
mov cl [ ecx + 0x5 ]
mov [ eax + 0x5 ] cl
sub_437a4d
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
test eax eax
je r-xdata
or eax 0xffffffff
retn 0x4
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x4 ]
retn 0x4
mov edi edi
sub ecx 0x1
mov eax [ eax + 0xc ]
jne r-xdata
sub_437aca
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
test eax eax
je r-xdata
or eax 0xffffffff
retn 0x4
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x8 ]
retn 0x4
mov edi edi
sub ecx 0x1
mov eax [ eax + 0xc ]
jne r-xdata
sub_437afe
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push ecx
call sub_4112d5
push ebp
mov edi eax
call sub_4112d5
add edi eax
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push ecx
push edi
call sub_411691
push ebp
push edi
call sub_411663
mov edx [ esi + 0xc ]
mov eax [ edx ]
push eax
call sub_4112ef
mov ecx [ esi + 0xc ]
add esp 0x20
mov [ ecx ] edi
pop edi
sub_437b6b
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4134ef
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_4134c6
add esp 0x4
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn
sub_437bb9
push esi
mov esi [ esp + 0x8 ]
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
pop esi
retn 0x4
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
pop esi
retn 0x4
sub_437c0c
mov al [ esp + 0x4 ]
cmp al 0x7f
ja r-xdata
cmp al 0xdf
ja r-xdata
mov eax 0x1
retn 0x4
mov cl 0xef
cmp cl al
sbb eax eax
neg eax
add eax 0x3
retn 0x4
mov eax 0x2
retn 0x4
sub_437c4f
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jl r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x8
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
push edx
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
push edx
call sub_4112ef
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
xor eax eax
pop esi
retn 0x8
sub_437ca6
push ecx
mov eax [ esp + 0xc ]
push ebp
push edi
mov edi [ esp + 0x10 ]
push eax
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov ebp eax
test ebp ebp
jne r-xdata
push ebx
mov ebx [ edi + 0x8 ]
push esi
xor esi esi
test ebx ebx
jbe r-xdata
pop edi
lea eax [ ebp + 0x3 ]
pop ebp
pop ecx
retn 0xc
push 0xc
call sub_41171a
add esp 0x4
mov [ esp + 0x10 ] eax
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
nop
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
mov [ edx ] eax
lea edx [ esp + 0x10 ]
push edx
push edi
call sub_434343
jmp r-xdata
inc esi
add eax 0x4
cmp esi ebx
jb r-xdata
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
call eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ esp + 0x20 ]
mov [ edx + 0x4 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0x8
mov [ edx ] esi
pop esi
pop ebx
pop edi
mov [ eax + 0x8 ] ecx
xor eax eax
pop ebp
pop ecx
retn 0xc
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
push eax
call sub_4112ef
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
add esp 0x4
pop esi
mov [ edx ] ebx
lea eax [ ebx + 0x3 ]
pop ebx
pop edi
pop ebp
pop ecx
retn 0xc
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov [ edx ] ebp
mov eax [ edi + 0x4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push r--data
push edx
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx [ eax ]
cmp [ ecx ] 0x0
je r-xdata
sub_437db1
sub esp 0x10
push ebx
mov ebx [ esp + 0x20 ]
push esi
xor esi esi
cmp [ esp + 0x20 ] 0x1
push edi
mov edi [ esp + 0x2c ]
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x10
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x54 ]
push ebp
push 0x1
push ecx
call [ __import_lookup_table_10(USER32:GetDlgItem) ]
mov ebp eax
test ebp ebp
je r-xdata
mov edi [ __import_lookup_table_10(USER32:MoveWindow) ]
lea edx [ esp + 0x10 ]
push edx
push ebp
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
cmp edx eax
jle r-xdata
mov edx [ esp + 0x24 ]
mov eax [ edx + 0x54 ]
push 0x3e9
push eax
call [ __import_lookup_table_10(USER32:GetDlgItem) ]
mov ebp eax
test ebp ebp
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push ebp
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
cmp ecx eax
jle r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
cmp esi ecx
jle r-xdata
mov ecx edx
mov edx eax
mov eax ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] eax
mov ebp [ esp + 0x24 ]
mov ecx [ ebp + 0x54 ]
push 0x3ea
push ecx
call [ __import_lookup_table_10(USER32:GetDlgItem) ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push ebp
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
cmp eax ecx
jle r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
cmp edx ecx
jle r-xdata
mov [ esp + 0x10 ] eax
mov eax ecx
mov [ esp + 0x18 ] eax
sub eax edx
mov edx eax
sub ecx esi
push 0x0
push ecx
push edx
mov eax 0xa
sub eax edx
cdq
sub eax edx
sub edi ecx
mov ecx eax
mov eax ebx
cdq
and edx 0x3
sub edi 0xa
add eax edx
mov esi edi
mov edi [ __import_lookup_table_10(USER32:MoveWindow) ]
sar ecx 0x1
sar eax 0x2
push esi
add ecx eax
push ecx
push ebp
call edi
jmp r-xdata
mov [ esp + 0x30 ] esi
mov esi ecx
mov ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x1c ] ecx
mov edx [ ebp + 0x54 ]
push 0x1
push 0x0
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
pop ebp
push 0x0
add esi 0xfffffffb
push esi
add ebx 0xffffffec
push ebx
push 0xa
push 0xa
push eax
call edi
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
cmp ecx eax
jle r-xdata
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] eax
sub eax [ esp + 0x10 ]
sub ecx [ esp + 0x14 ]
push 0x0
push ecx
push eax
add eax 0xa
cdq
sub eax edx
mov ecx eax
lea eax [ ebx + ebx * 2 ]
cdq
and edx 0x3
add eax edx
sar ecx 0x1
sar eax 0x2
push esi
sub eax ecx
push eax
push ebp
call edi
mov [ esp + 0x14 ] ecx
mov ecx edx
mov [ esp + 0x1c ] ecx
mov edx [ esp + 0x24 ]
mov eax [ edx + 0x54 ]
push 0x2
push eax
call [ __import_lookup_table_10(USER32:GetDlgItem) ]
mov ebp eax
test ebp ebp
je r-xdata
push 0x0
sub eax ecx
push eax
mov edx 0xfffffffb
sub edx eax
lea eax [ ebx - 0x14 ]
push eax
add esi edx
push esi
push 0xa
push ebp
call edi
mov edx ecx
mov ecx eax
mov eax edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] eax
sub_437f88
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0xc ]
jle r-xdata
mov edx [ eax + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
mov edx [ eax + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] ecx
sub_437fc7
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
xor dl dl
mov [ esp + 0x8 ] 0x0
test ecx ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ ecx + 0x88 ] 0x1d
jne r-xdata
retn 0x8
cmp [ eax + 0x18 ] 0x0
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
jne r-xdata
push esi
mov esi [ ecx + 0x78 ]
test esi esi
je r-xdata
mov edx [ ecx + 0x1c ]
push 0x0
push eax
call edx
retn 0x8
lea edx [ esp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov dl [ esi + 0x3c ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push eax
call edx
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
retn 0x8
cmp [ eax + 0x18 ] 0x0
jne r-xdata
test dl dl
jne r-xdata
pop esi
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push 0x0
push eax
call edx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
lea edx [ esi + 0x10 ]
push edx
mov edx [ esi + 0x8 ]
push edx
mov edx [ esi + 0x28 ]
push 0xffffffff
push edx
push 0x0
push 0xffffffff
push eax
mov eax [ ecx + 0x2c ]
call eax
sub_438079
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
pop edi
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
retn 0xc
pop edi
pop esi
mov eax 0x80004002
pop ebx
retn 0xc
mov ecx [ edi + 0xc ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
retn 0xc
sub_43812c
mov edx [ esp + 0xc ]
xor eax eax
cmp edx 0x3
jl r-xdata
retn 0xc
mov ecx [ esp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push ebx
push esi
push edi
add ecx 0xc
lea esi [ edx - 0x2 ]
jmp r-xdata
mov edx [ ecx ]
mov edx [ edx ]
test edx edx
je r-xdata
add ecx 0x4
sub esi 0x1
jne r-xdata
mov edi [ edx + 0x4 ]
mov ebx [ esp + 0x10 ]
cmp edi [ ebx + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
cmp [ edx + 0x88 ] 0x1d
jne r-xdata
cmp [ edx + 0x78 ] 0x0
je r-xdata
inc eax
sub_43817e
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x8 ] edi
mov eax [ esi ]
cmp eax edi
je r-xdata
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn 0x4
push eax
call sub_4112ef
add esp 0x4
mov [ esi ] edi
sub_4381d8
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x28 ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi + 0x30 ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi + 0x30 ]
pop edi
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0xc ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
pop edi
mov [ esi ] eax
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi + 0x34 ]
pop edi
mov [ esi ] ecx
pop esi
xor eax eax
pop ebx
retn 0xc
push r--data
push ebx
call sub_437fad
add esp 0x8
test eax eax
jne r-xdata
mov edx [ edi + 0x2c ]
pop edi
mov [ esi ] edx
pop esi
xor eax eax
pop ebx
retn 0xc
mov edi [ edi ]
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x80004002
pop ebx
retn 0xc
push esi
push ebx
push edi
call sub_438079
pop edi
pop esi
pop ebx
retn 0xc
sub_438357
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004003
retn 0x8
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx ] edx
xor eax eax
retn 0x8
sub_438399
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0xc ]
push ecx
push r--data
push eax
call edx
test eax eax
jl r-xdata
lea esi [ edi + 0x8 ]
mov [ esi ] eax
jmp r-xdata
mov eax [ eax ]
mov [ eax + 0x18 ] 0x0
pop edi
mov eax 0x80004005
pop esi
retn 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
lea esi [ edi + 0x8 ]
push esi
push 0x0
push 0x0
push 0x0
push eax
call edx
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov edx [ edi + 0x4 ]
mov eax [ esi ]
mov edx [ edx + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jge r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
push 0x1
push eax
call edx
mov edx [ edi + 0x4 ]
mov eax [ esi ]
mov ecx [ eax ]
add edx 0x10
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov esi [ esi ]
mov ecx [ esi ]
mov edx [ ecx + 0x24 ]
push 0x1
push esi
call edx
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
pop edi
mov [ ecx + 0x18 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_438463
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x8 ] 0x0
sub_4384a4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop esi
retn 0x10
mov eax [ eax + 0x14 ]
push eax
call [ __import_lookup_table_10(USER32:GetMenu) ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push esi
push edx
push eax
push ecx
call [ __import_lookup_table_6(ole32:OleSetMenuDescriptor) ]
sub_4384df
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
je r-xdata
mov edx [ edi + 0x4 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov eax [ edi + 0x4 ]
mov [ eax + 0x10 ] esi
pop edi
xor eax eax
pop esi
retn 0xc
mov eax [ edi + 0x4 ]
mov [ eax + 0x10 ] esi
pop edi
xor eax eax
pop esi
retn 0xc
mov edx [ edx + 0x10 ]
mov ecx [ edx ]
push edx
mov edx [ ecx + 0x8 ]
call edx
sub_438547
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
sub esp 0x10
lea eax [ esp ]
push eax
push edx
call [ __import_lookup_table_10(USER32:GetClientRect) ]
mov ecx [ esp + 0x18 ]
lea eax [ esp ]
push eax
push ecx
call [ CopyRect@IAT ]
xor eax eax
add esp 0x10
retn 0x8
sub_43859a
mov eax [ esp + 0x8 ]
cmp eax 0xfffffd3b
jne r-xdata
cmp eax 0xfffffd2b
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx 0xb
mov edx 0x1
mov [ eax ] cx
mov [ eax + 0x8 ] dx
xor eax eax
retn 0x24
cmp eax 0xffffea83
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx 0x3
mov [ eax ] cx
mov [ eax + 0x8 ] 0x400
xor eax eax
retn 0x24
cmp eax 0xffffea82
jne r-xdata
mov eax [ esp + 0x1c ]
xor ecx ecx
mov edx 0xb
mov [ eax ] dx
mov [ eax + 0x8 ] cx
xor eax eax
retn 0x24
mov eax 0x80020003
retn 0x24
mov eax [ esp + 0x1c ]
mov edx 0xb
mov ecx 0x1
mov [ eax ] dx
mov [ eax + 0x8 ] cx
xor eax eax
retn 0x24
sub_43863d
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
movsx edx [ eax + 0x80 ]
mov [ ecx + 0x10 ] edx
movsx edx [ eax + 0x80 ]
movsx ecx [ eax + 0x84 ]
add ecx edx
mov edx [ esi + 0x4 ]
mov [ edx + 0x18 ] ecx
movsx ecx [ eax + 0x82 ]
mov edx [ esi + 0x4 ]
mov [ edx + 0x14 ] ecx
movsx edx [ eax + 0x82 ]
movsx ecx [ eax + 0x86 ]
mov eax [ esi + 0x4 ]
add ecx edx
mov [ eax + 0x1c ] ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x8 ]
push ecx
push r--data
push eax
call edx
test eax eax
jl r-xdata
mov eax 0x8000ffff
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
add eax 0x20
push eax
mov eax [ edx + 0x48 ]
push 0x1
push ecx
call eax
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
add edx 0x10
push edx
mov edx [ esp + 0x10 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
pop esi
retn 0x8
sub_4386fd
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
push edi
mov edi [ CopyRect@IAT ]
add edx 0x10
push edx
push eax
call edi
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x1c ]
add ecx 0x10
push ecx
push edx
call edi
mov eax [ esp + 0x20 ]
mov [ eax ] 0x14
mov [ eax + 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov ecx [ edx + 0x14 ]
pop edi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
xor eax eax
pop esi
retn 0x18
sub_43879e
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x1
retn 0x8
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x14 ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_4388ba
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
je r-xdata
mov ecx [ eax ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov al 0x1
retn 0x8
mov eax [ eax ]
push 0x4
push eax
call [ ShowWindow@IAT ]
mov al 0x1
retn 0x8
sub_4388e5
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
je r-xdata
mov ecx [ eax ]
push 0x0
push ecx
call [ __import_lookup_table_10(USER32:EnableWindow) ]
mov al 0x1
retn 0x8
mov eax [ eax ]
push 0x1
push eax
call [ __import_lookup_table_10(USER32:EnableWindow) ]
mov al 0x1
retn 0x8
sub_438910
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x1
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
mov edx [ ecx ]
push eax
push edx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
test eax eax
setne al
retn 0x14
sub_43893b
push esi
mov esi [ esp + 0x8 ]
push 0xfffffff0
push esi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax eax
jns r-xdata
push esi
call [ __import_lookup_table_10(USER32:GetParent) ]
pop esi
retn 0x4
xor eax eax
pop esi
retn 0x4
sub_43896d
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x4 ]
push eax
push 0x1388
push 0x2
push 0x0
push 0x0
push 0x0
push ecx
call [ __import_lookup_table_10(USER32:SendMessageTimeoutW) ]
test eax eax
sete al
retn 0x4
sub_4389a1
cmp [ esp + 0x8 ] 0x1
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push 0x0
lea eax [ esp + 0xc ]
push eax
push 0x1388
push 0x2
push 0x0
push 0x0
push 0x0
push esi
call [ __import_lookup_table_10(USER32:SendMessageTimeoutW) ]
test eax eax
je r-xdata
pop esi
retn 0x8
push 0x1
jmp r-xdata
push 0x0
push esi
call [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ __import_lookup_table_10(USER32:AttachThreadInput) ]
sub_4389eb
mov eax [ esp + 0x4 ]
push esi
mov esi [ __import_lookup_table_10(USER32:GetParent) ]
push eax
call esi
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x8
cmp eax [ esp + 0xc ]
je r-xdata
mov eax 0x1
pop esi
retn 0x8
push eax
call esi
test eax eax
jne r-xdata
sub_438a38
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_43895e
mov ecx [ esi ]
mov edx [ esp + 0xc ]
push ecx
push edx
push 0x111
push eax
call [ SendMessageW@IAT ]
mov al 0x1
pop esi
retn 0x8
sub_438a5d
sub esp 0xa8
push ebx
push ebp
mov ebp [ esp + 0xb4 ]
push esi
push edi
lea eax [ esp + 0x38 ]
call sub_410480
mov ecx [ ebp ]
mov eax [ esp + 0xc0 ]
push ecx
push 0x10
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x20 ] eax
call sub_437543
push 0x10
mov esi eax
push esi
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
call sub_4374af
mov edx [ ebp ]
mov ebx [ SendMessageW@IAT ]
push esi
push 0x0
push 0x1104
push edx
call ebx
push 0x10
lea eax [ esp + 0x18 ]
push eax
push esi
lea ecx [ esp + 0x44 ]
push ecx
call sub_437472
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
mov edi [ esp + 0x14 ]
sub eax ecx
cdq
sub eax edx
mov edx [ esp + 0xc4 ]
sar eax 0x1
add eax ecx
mov [ edx + 0x4 ] eax
mov [ esp + 0x28 ] eax
mov eax [ ebp ]
push eax
push 0x10
lea ecx [ esp + 0x40 ]
push ecx
call sub_437543
cmp edi [ esp + 0x1c ]
mov esi eax
jg r-xdata
lea edi [ esp + 0x38 ]
call sub_4104a0
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn 0xc
lea ebx [ ebx ]
cmp edi [ esp + 0x1c ]
jle r-xdata
inc edi
cmp edi [ esp + 0x1c ]
jle r-xdata
mov [ esp + 0x34 ] edi
mov edi edi
push 0x10
push esi
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x34 ] edi
call sub_4374af
mov ecx [ ebp ]
push esi
push 0x0
push 0x1111
push ecx
call ebx
push 0x10
lea edx [ esp + 0x28 ]
push edx
push esi
lea eax [ esp + 0x44 ]
push eax
call sub_437472
test [ esp + 0x2c ] 0x40
jne r-xdata
lea edi [ esp + 0x38 ]
call sub_4104a0
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn 0xc
cmp edi [ esp + 0x1c ]
jg r-xdata
inc edi
cmp edi [ esp + 0x1c ]
jle r-xdata
mov ecx [ esp + 0x34 ]
mov eax edi
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov ecx [ esp + 0xc4 ]
lea edi [ esp + 0x38 ]
mov [ ecx ] eax
call sub_4104a0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0xa8
retn 0xc
push 0x10
push esi
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x44 ]
push edx
mov [ esp + 0x34 ] edi
call sub_4374af
mov eax [ ebp ]
push esi
push 0x0
push 0x1111
push eax
call ebx
push 0x10
lea ecx [ esp + 0x28 ]
push ecx
push esi
lea edx [ esp + 0x44 ]
push edx
call sub_437472
test [ esp + 0x2c ] 0x40
je r-xdata
jmp r-xdata
sub_438c5c
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x101f
push ecx
call esi
push 0x0
push 0x0
push 0x1200
push eax
call esi
pop esi
retn 0x4
sub_438c9e
sub esp 0xac
push ebx
mov ebx [ esp + 0xb4 ]
push ebp
mov ebp [ esp + 0xc4 ]
push esi
push edi
mov edi [ esp + 0xc8 ]
lea eax [ esp + 0x38 ]
call sub_410480
movzx eax [ esp + 0xc4 ]
mov ecx [ ebx ]
neg eax
push ecx
sbb eax eax
push 0x28
lea edx [ esp + 0x40 ]
and eax 0x2
push edx
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x28 ] eax
call sub_437543
push 0x28
mov esi eax
push esi
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
call sub_4374af
cmp edi 0xffffffff
je r-xdata
mov eax [ ebx ]
push esi
push 0xffffffff
push 0x102b
push eax
call [ SendMessageW@IAT ]
cmp edi ebp
jg r-xdata
lea edi [ esp + 0x38 ]
call sub_4104a0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0xac
retn 0x10
nop
mov edx [ ebx ]
push esi
push edi
push 0x102b
push edx
call [ SendMessageW@IAT ]
inc edi
cmp edi ebp
jle r-xdata
jmp r-xdata
sub_438d4e
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov edx [ esi ]
push edi
mov edi [ SendMessageW@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0xb0
push edx
call edi
mov eax [ esp + 0x18 ]
push 0x0
push eax
mov ebp eax
mov eax [ esi ]
push 0xc9
push eax
call edi
mov ebx eax
cmp ebx 0x1
jl r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
pop edi
pop esi
inc edx
pop ebp
mov [ eax ] edx
mov al 0x1
pop ebx
pop ecx
retn 0x8
mov ecx [ esp + 0x18 ]
mov edx [ esi ]
push 0x0
push ecx
push 0xc9
push edx
call edi
cmp ebx eax
jne r-xdata
sub ebp [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
mov al 0x1
pop ebx
pop ecx
retn 0x8
mov eax [ esp + 0x18 ]
dec eax
push 0x0
push eax
mov [ esp + 0x20 ] eax
mov eax [ esi ]
push 0xc9
push eax
call edi
cmp ebx eax
je r-xdata
sub_438e45
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push 0x0
je r-xdata
mov ecx [ eax ]
push 0x0
push 0x14f
push ecx
jmp r-xdata
mov eax [ eax ]
push 0x1
push 0x14f
push eax
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
mov al 0x1
retn 0x8
xor al al
retn 0x8
sub_438e7c
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
mov esi [ esp + 0xc ]
push 0x0
push 0x0
push 0x130b
push ecx
call [ SendMessageW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
inc eax
mov [ esi ] eax
mov al 0x1
pop esi
retn 0x8
xor al al
pop esi
retn 0x8
sub_438ead
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ esp + 0x30 ]
push edi
mov edi [ esp + 0x30 ]
lea eax [ esp + 0x10 ]
push eax
push edx
call [ GetWindowRect@IAT ]
cmp edi 0xffffffff
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
cdq
sub eax edx
mov edi eax
sar edi 0x1
movzx esi si
movzx eax di
shl esi 0x10
or esi eax
mov [ esp + 0x30 ] 0x201
mov [ esp + 0x34 ] 0x203
mov ebx 0x202
mov edi 0x1
cmp ebp 0x2
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp ebp 0x1
jne r-xdata
mov [ esp + 0x30 ] 0x204
mov ebx 0x205
mov edi ebp
jmp r-xdata
mov ebp 0x1
cmp [ esp + 0x2c ] ebp
jl r-xdata
mov [ esp + 0x30 ] 0x207
mov ebx 0x208
lea edi [ ebp + 0xf ]
mov [ esp + 0x34 ] 0x206
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x10
retn 0x14
mov ecx [ esp + 0x34 ]
mov eax ebp
cdq
sub eax edx
mov edx [ esp + 0x24 ]
sar eax 0x1
add eax eax
push esi
cmp eax ebp
mov eax [ edx ]
push edi
je r-xdata
push ecx
push eax
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
push esi
push 0x0
push ebx
push edx
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
inc ebp
cmp ebp [ esp + 0x2c ]
jle r-xdata
mov ecx [ esp + 0x38 ]
sub_438ff6
push ebx
mov ebx [ GetTokenInformation@IAT ]
push ebp
mov ebp [ esp + 0x10 ]
mov eax [ ebp ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x14 ]
push esi
push 0x0
push eax
push 0x2
push edi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov ecx [ esi ]
push ecx
call sub_438fcf
add esp 0x4
mov [ ebp ] eax
test eax eax
je r-xdata
mov edx [ esi ]
push esi
push edx
push eax
push 0x2
push edi
call ebx
test eax eax
je r-xdata
sub_43905c
push ebx
mov ebx [ GetTokenInformation@IAT ]
push ebp
mov ebp [ esp + 0x10 ]
mov eax [ ebp ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x14 ]
push esi
push 0x0
push eax
push 0x3
push edi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov ecx [ esi ]
push ecx
call sub_438fcf
add esp 0x4
mov [ ebp ] eax
test eax eax
je r-xdata
mov edx [ esi ]
push esi
push edx
push eax
push 0x3
push edi
call ebx
test eax eax
je r-xdata
sub_4390c2
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
push edi
push 0xffffffff
push eax
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push edx
call [ __import_lookup_table_11(USERENV:UnloadUserProfile) ]
mov eax [ esi + 0x8 ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
mov ecx [ esi ]
push ecx
call edi
push esi
call sub_438fb6
add esp 0x4
pop edi
xor eax eax
pop esi
retn 0x4
sub_439102
push ebx
push esi
push edi
call sub_438fe4
mov edi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
mov esi eax
push 0x0
push esi
call edi
push eax
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push ecx
call edi
mov ebx [ __import_lookup_table_0(KERNEL32:DuplicateHandle) ]
push eax
call ebx
push 0x2
push 0x0
push 0x0
lea edx [ esi + 0x8 ]
push edx
call edi
push eax
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
push ecx
call edi
push eax
call ebx
mov edx [ esp + 0x14 ]
mov eax [ edx ]
push 0x0
push 0x0
push esi
push sub_4390c2
push 0x0
push 0x0
mov [ esi + 0x4 ] eax
call [ __import_lookup_table_0(KERNEL32:CreateThread) ]
pop edi
pop esi
pop ebx
retn 0xc
sub_43916a
movsx eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0x8 ]
and eax 0x2
or eax 0x4
push 0x0
shr eax 0x1
push eax
mov eax [ esp + 0x14 ]
push edx
push eax
push ecx
call [ LogonUserW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x14
sub_43919d
sub esp 0x8
mov edx [ esp + 0xc ]
push ebx
push edi
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
xor ebx ebx
push edx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] ebx
call sub_438ff6
mov edi [ esp + 0xc ]
test al al
je r-xdata
push edi
call sub_438fb6
add esp 0x4
pop edi
mov al bl
pop ebx
add esp 0x8
retn 0x8
mov eax [ edi ]
push esi
xor esi esi
cmp eax ebx
jbe r-xdata
pop esi
lea ecx [ edi + 0x8 ]
jmp r-xdata
mov edx [ ecx ]
and edx 0xc0000000
cmp edx 0xc0000000
je r-xdata
mov eax [ edi + esi * 8 + 0x4 ]
push eax
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
push eax
mov [ esp + 0x10 ] eax
call sub_438fcf
mov ecx [ esp + 0x20 ]
add esp 0x4
mov [ ecx ] eax
cmp eax ebx
je r-xdata
inc esi
add ecx 0x8
cmp esi eax
jb r-xdata
mov edx [ edi + esi * 8 + 0x4 ]
push edx
push eax
mov eax [ esp + 0x14 ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
pop esi
push edi
call sub_438fb6
add esp 0x4
pop edi
mov al bl
pop ebx
add esp 0x8
retn 0x8
mov bl 0x1
sub_439256
push esi
mov esi [ esp + 0xc ]
push esi
call sub_438fcf
mov ecx [ esp + 0xc ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x8
push 0x2
push esi
push eax
call [ __import_lookup_table_1(ADVAPI32:InitializeAcl) ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn 0x8
sub_43928b
mov eax [ esp + 0x8 ]
push eax
call sub_438fcf
mov ecx [ esp + 0x8 ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
xor eax eax
retn 0x8
push 0x1
push eax
call [ __import_lookup_table_1(ADVAPI32:InitializeSecurityDescriptor) ]
test eax eax
je r-xdata
mov eax 0x1
retn 0x8
sub_4392bc
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ __import_lookup_table_10(USER32:GetUserObjectSecurity) ]
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x18 ]
push esi
push 0x0
push ecx
push edi
push ebx
call ebp
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x10
mov edx [ esi ]
push edx
call sub_438fcf
mov ecx [ esp + 0x20 ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
mov edx [ esi ]
push esi
push edx
push eax
push edi
push ebx
call ebp
test eax eax
je r-xdata
sub_439326
mov al [ esp + 0x10 ]
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
xor ecx ecx
xor edi edi
mov [ esp + 0x1c ] ecx
test al 0x1
je r-xdata
test al 0x2
je r-xdata
lea edi [ ecx + 0x1 ]
jmp r-xdata
xor bl bl
test al 0x4
je r-xdata
mov edi 0x2
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
or esi 0x400
push esi
push edx
mov edx [ esp + 0x28 ]
push 0x0
push edi
push eax
push ecx
push edx
call [ __import_lookup_table_1(ADVAPI32:CreateProcessWithLogonW) ]
test eax eax
setne bl
push ebp
lea eax [ esp + 0x28 ]
push eax
push 0xa
mov [ esp + 0x30 ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ __import_lookup_table_1(ADVAPI32:OpenProcessToken) ]
mov ecx [ esp + 0x28 ]
push 0x1
push ecx
lea edx [ esp + 0x28 ]
push edx
call [ __import_lookup_table_11(USERENV:CreateEnvironmentBlock) ]
mov ebp eax
mov eax [ esp + 0x28 ]
push eax
call [ CloseHandle@IAT ]
test ebp ebp
pop ebp
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
retn 0x24
push eax
call [ __import_lookup_table_11(USERENV:DestroyEnvironmentBlock) ]
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
sub_4393e2
sub esp 0x24
push ebx
push ebp
mov ebp [ GetCurrentProcess@IAT ]
push esi
push edi
lea eax [ esp + 0x10 ]
xor esi esi
push eax
push esi
xor edi edi
push 0x8
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] edi
xor bl bl
mov [ esp + 0x24 ] esi
call ebp
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push ecx
call sub_43905c
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x8
call ebp
push eax
call [ __import_lookup_table_1(ADVAPI32:OpenProcessToken) ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov edi [ LookupPrivilegeValueW@IAT ]
lea edx [ esp + 0x1c ]
push edx
push r--data
push esi
call edi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax esi
je r-xdata
push edi
call sub_438fb6
add esp 0x4
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0x24
retn
push eax
call [ CloseHandle@IAT ]
lea eax [ esp + 0x28 ]
push eax
push r--data
push esi
mov [ esp + 0x30 ] esi
call edi
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov [ esp + 0x30 ] esi
cmp [ edi ] esi
jbe r-xdata
mov bl 0x1
xor eax eax
lea ecx [ esp + 0x24 ]
lea ebx [ edi + 0x4 ]
jmp r-xdata
xor bl bl
jmp r-xdata
inc eax
add ecx 0xc
cmp eax 0x2
jb r-xdata
lea ebp [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x2
lea esp [ esp ]
cmp [ ecx ] esi
je r-xdata
jmp r-xdata
add ebp 0xc
sub [ esp + 0x14 ] eax
jne r-xdata
mov [ ebp ] eax
push 0x8
lea ecx [ ebp - 0x8 ]
push ecx
push ebx
call sub_411b63
add esp 0xc
test eax eax
mov eax 0x1
jne r-xdata
inc esi
add ebx 0xc
cmp esi [ edi ]
jb r-xdata
xor esi esi
sub_439530
push 0x8
call sub_41171a
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] 0x0
mov edx [ ecx ]
add esp 0x4
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
inc [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
retn 0x4
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
inc [ rw-data ]
mov [ rw-data ] eax
retn 0x4
sub_43957c
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx ]
push ebp
mov ebp [ esp + 0x10 ]
push 0x4
push eax
call sub_431d42
add esp 0x8
cmp eax 0x50435245
je r-xdata
push esi
push edi
mov ecx 0xa
mov esi ebx
mov edi ebp
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
push 0x4
push ecx
call sub_431d42
mov [ ebp + 0x4 ] eax
mov edx [ ebx + 0x8 ]
push 0x4
push edx
call sub_431d42
mov [ ebp + 0x8 ] eax
movzx eax [ ebx + 0xc ]
push 0x2
push eax
call sub_431d42
mov [ ebp + 0xc ] ax
movzx ecx [ ebx + 0x10 ]
push 0x2
push ecx
call sub_431d42
mov [ ebp + 0x10 ] ax
movzx edx [ ebx + 0x12 ]
push 0x2
push edx
call sub_431d42
mov [ ebp + 0x12 ] ax
movzx eax [ ebx + 0x14 ]
push 0x2
push eax
call sub_431d42
mov [ ebp + 0x14 ] ax
movzx ecx [ ebx + 0x16 ]
push 0x2
push ecx
call sub_431d42
mov [ ebp + 0x16 ] ax
movzx edx [ ebx + 0x18 ]
push 0x2
push edx
call sub_431d42
mov [ ebp + 0x18 ] ax
movzx eax [ ebx + 0x1a ]
add esp 0x40
push 0x2
push eax
call sub_431d42
mov [ ebp + 0x1a ] ax
movzx ecx [ ebx + 0x1c ]
push 0x2
push ecx
call sub_431d42
mov ebx [ esp + 0x2c ]
add esp 0x10
mov [ ebp + 0x1c ] ax
test ebx ebx
je r-xdata
pop ebp
xor eax eax
pop ebx
retn
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
mov edi [ esp + 0x20 ]
mov ecx 0xb
mov esi ebx
[ edi ] [ esi ]
mov edx [ ebx ]
push 0x4
push edx
call sub_431d42
mov esi [ esp + 0x28 ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
push 0x4
push eax
call sub_431d42
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x28 ]
push 0x4
push ecx
call sub_431d42
add esp 0x18
mov [ esi + 0x28 ] eax
sub_439699
sub esp 0x128
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14c ]
mov ecx [ edi ]
mov eax [ edi + 0x44 ]
mov [ esp + 0x30 ] eax
cmp ecx [ edi + 0x4 ]
jae r-xdata
inc [ edi ]
mov eax 0xfffffff8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x154 ]
mov ebp [ esp + 0x140 ]
mov esi [ esp + 0x13c ]
mov eax 0xffffffeb
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
test [ esp + 0x158 ] 0x2
mov eax [ esp + 0x150 ]
mov [ esp + 0x38 ] eax
je r-xdata
mov cl [ ebp ]
movzx eax cl
xor ebx ebx
mov edx eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x24 ] edx
cmp edx 0x72
ja r-xdata
lea ecx [ esp + 0x58 ]
mov [ esp + 0x5c ] esi
mov [ esp + 0x58 ] ebx
mov [ esp + 0x154 ] ecx
mov eax 0xfffffffb
movzx edx [ edx + lookup_table_43f5c9 ]
jmp [ edx * 4 + jump_table_43f4a9 ]
movzx ebx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl ebx 0x8
or ebx eax
cmp [ ebp + 0x3 ] 0x53
jne r-xdata
movzx eax [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl eax 0x8
or eax edx
lea ecx [ eax + eax ]
cmp ecx [ edi + 0x14 ]
mov [ edi + 0x80 ] eax
jl r-xdata
mov ebp [ edi + 0x90 ]
cmp ebp ebx
je r-xdata
movzx edx [ ebp + 0x1 ]
mov [ esp + 0x150 ] edx
add ebp 0x2
jmp r-xdata
mov ebx [ esp + 0x15c ]
inc ebx
lea esp [ esp ]
mov ebx [ esp + 0x15c ]
inc ebx
nop
movzx eax [ ebp + 0x1 ]
movzx ecx [ ebp + 0x2 ]
shl eax 0x8
cmp [ esp + 0x30 ] ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov ebx [ esp + 0x154 ]
mov [ esp + 0x20 ] ebp
mov [ esp + 0x28 ] esi
jmp r-xdata
movzx eax [ ebp + 0x1 ]
movzx ecx [ ebp + 0x2 ]
shl eax 0x8
or eax ecx
add ebp eax
cmp [ ebp ] 0x54
je r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
inc edx
push edx
mov edx [ esp + 0x14c ]
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
inc ebp
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
inc ebp
mov eax ebp
inc ebp
jmp r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
mov eax ebp
sub eax ecx
mov [ esp + 0x20 ] eax
mov al [ eax ]
cmp al 0x61
jb r-xdata
cmp [ edi + 0x3c ] ebx
je r-xdata
cmp esi [ edi + 0x64 ]
jne r-xdata
mov ecx [ edi + 0x84 ]
add ecx [ edi + 0x64 ]
cmp esi ecx
jne r-xdata
mov [ esp + 0x144 ] esi
inc ebp
jmp r-xdata
test [ esp + 0x150 ] 0x2
je r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
je r-xdata
cmp esi [ edi + 0x68 ]
jb r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
mov ecx [ edi + 0x18 ]
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x68 ]
mov ecx esi
inc esi
cmp ecx eax
jae r-xdata
mov eax esi
inc esi
cmp eax [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
movzx eax [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl eax 0x8
or eax edx
add eax eax
add ebp 0x3
cmp eax [ esp + 0x148 ]
mov [ esp + 0x24 ] eax
jge r-xdata
mov al [ ebp + 0x21 ]
lea ecx [ ebp + 0x1 ]
add ebp 0x21
mov [ esp + 0x20 ] ecx
movzx ecx al
lea edx [ ecx - 0x46 ]
cmp edx 0x7
ja r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
lea eax [ ebp + 0x3 ]
add ebp ecx
mov cl [ ebp ]
mov [ esp + 0x20 ] eax
movzx eax cl
lea edx [ eax - 0x46 ]
cmp edx 0x7
ja r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
movzx ebx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ebx 0x8
or ebx edx
mov [ esp + 0x1c ] ebx
add ebp 0x3
jmp r-xdata
mov eax 0x1
mov [ esp + 0x28 ] eax
movzx eax [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl eax 0x8
or eax edx
mov [ esp + 0x1c ] eax
xor eax eax
xor ebx ebx
cmp cl 0x26
sete al
add ebp 0x3
mov [ esp + 0x2c ] eax
jmp r-xdata
mov eax 0x1
xor ebx ebx
mov [ esp + 0x28 ] eax
add ebp eax
jmp r-xdata
mov ebx 0x1
mov [ esp + 0x28 ] ebx
add ebp ebx
jmp r-xdata
mov eax 0x1
xor ebx ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
add ebp eax
jmp r-xdata
movsx ebx [ eax + r--data ]
add eax 0xffffffe1
movzx ecx al
movsx eax [ eax + r--data ]
and ecx 0x1
inc ebp
mov [ esp + 0x2c ] ecx
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
movzx ebx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl ebx 0x8
or ebx eax
mov eax ebx
add ebp 0x3
jmp r-xdata
movzx ebx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ebx 0x8
or ebx edx
xor edx edx
xor eax eax
cmp cl 0x33
sete dl
add ebp 0x3
mov [ esp + 0x2c ] edx
jmp r-xdata
mov ecx 0x1
xor eax eax
mov [ esp + 0x28 ] ecx
add ebp ecx
jmp r-xdata
mov eax 0x1
mov [ esp + 0x28 ] eax
add ebp eax
jmp r-xdata
mov ebx 0x1
xor eax eax
mov [ esp + 0x28 ] ebx
add ebp ebx
jmp r-xdata
movzx ebx [ ebp + 0x1 ]
movzx ecx [ ebp + 0x2 ]
shl ebx 0x8
xor eax eax
or ebx ecx
mov [ esp + 0x28 ] 0x1
add ebp 0x3
jmp r-xdata
lea ecx [ eax - 0x2c ]
movsx ebx [ ecx + r--data ]
movzx eax cl
and eax 0x1
inc ebp
mov [ esp + 0x2c ] eax
movsx eax [ ecx + r--data ]
test ebx ebx
jne r-xdata
movzx ebx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl ebx 0x8
or ebx eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x2c ] 0x1
add ebp 0x3
jmp r-xdata
movzx eax [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl eax 0x8
or eax edx
mov [ esp + 0x1c ] eax
xor eax eax
xor ebx ebx
cmp cl 0x40
sete al
add ebp 0x3
mov [ esp + 0x2c ] eax
jmp r-xdata
xor ebx ebx
mov [ esp + 0x28 ] 0x1
inc ebp
jmp r-xdata
mov ebx 0x1
mov [ esp + 0x28 ] ebx
add ebp ebx
jmp r-xdata
mov eax 0x1
xor ebx ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
add ebp eax
jmp r-xdata
movzx eax [ ebp + 0x1 ]
movzx ecx [ ebp + 0x2 ]
shl eax 0x8
or eax ecx
xor ebx ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x1c ] eax
add ebp 0x3
jmp r-xdata
movsx ebx [ eax + r--data ]
add eax 0xffffffc7
movzx ecx al
movsx eax [ eax + r--data ]
and ecx 0x1
inc ebp
mov [ esp + 0x2c ] ecx
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
movzx eax [ ebp + 0x3 ]
movzx ecx [ ebp + 0x4 ]
shl eax 0x8
or eax ecx
lea ebx [ eax + eax ]
cmp ebx [ edi + 0x14 ]
mov [ esp + 0x2c ] eax
jl r-xdata
movzx edx [ ebp + 0x1 ]
mov ebx [ esp + 0x154 ]
xor eax eax
cmp [ esp + 0x24 ] 0x61
setl al
shl edx 0x8
dec eax
and eax 0x2
mov [ esp + 0x158 ] eax
movzx eax [ ebp + 0x2 ]
or edx eax
cmp [ edx + ebp ] 0x54
jne r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x154 ]
inc edx
push edx
mov edx [ esp + 0x154 ]
push eax
mov eax [ esp + 0x150 ]
push ecx
mov ecx [ esp + 0x150 ]
push edx
movzx edx [ ebp ]
push edi
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebp
push eax
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ esp + 0x15c ]
mov edx [ esp + 0x158 ]
mov eax [ esp + 0x154 ]
inc ecx
push ecx
mov ecx [ esp + 0x154 ]
push edx
mov edx [ esp + 0x150 ]
push eax
mov eax [ esp + 0x150 ]
push ecx
movzx ecx [ ebp ]
push edi
push edx
movzx edx [ ecx + r--data ]
push eax
add edx ebp
push edx
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x158 ]
mov edx [ esp + 0x154 ]
inc eax
push eax
mov eax [ esp + 0x154 ]
push ecx
mov ecx [ esp + 0x150 ]
push edx
mov edx [ esp + 0x150 ]
push eax
movzx eax [ ebp ]
push edi
push ecx
movzx ecx [ eax + r--data ]
push edx
add ecx ebp
push ecx
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x154 ]
inc edx
push edx
mov edx [ esp + 0x154 ]
push eax
mov eax [ esp + 0x150 ]
push ecx
mov ecx [ esp + 0x150 ]
push edx
movzx edx [ ebp ]
push edi
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebp
push eax
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
movzx ebx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
mov eax [ edi + 0x60 ]
shl ebx 0x8
or ebx edx
add ebx eax
cmp ebx eax
jne r-xdata
movzx ecx [ ebp + 0x3 ]
lea eax [ ebp + 0x3 ]
cmp ecx 0x66
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ebx [ edi + 0x10 ]
mov edx [ edi + 0xc ]
sub ebx eax
mov eax [ edx + ebx * 4 ]
mov [ edx + ecx * 4 ] eax
mov eax [ edi + 0xc ]
mov edx esi
sub edx [ edi + 0x64 ]
cmp [ esp + 0x148 ] ecx
mov [ eax + ecx * 4 + 0x4 ] edx
jg r-xdata
mov [ edi + 0x38 ] 0x1
add ebp 0x3
jmp r-xdata
mov eax [ esp + 0x144 ]
cmp esi eax
jne r-xdata
cmp [ ebp + 0x4 ] ebx
jne r-xdata
cmp [ ebp ] 0x55
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
or eax ecx
sub esi eax
cmp esi [ edi + 0x64 ]
jb r-xdata
or eax ecx
jle r-xdata
add ebp 0x6
jmp r-xdata
movzx edx [ ebp + 0x1 ]
mov eax [ edi + 0xc ]
mov [ esp + 0x98 ] eax
mov eax [ edi + 0x64 ]
mov [ esp + 0x94 ] edx
mov edx [ edi + 0x68 ]
sub edx eax
mov [ esp + 0xa0 ] edx
mov edx [ esp + 0x144 ]
sub edx eax
mov [ esp + 0x9c ] eax
mov [ esp + 0xa4 ] edx
mov edx esi
sub edx eax
movzx eax [ ebp + 0x2 ]
shl eax 0x8
mov [ esp + 0xa8 ] edx
movzx edx [ ebp + 0x3 ]
or eax edx
movzx edx [ ebp + 0x5 ]
mov [ esp + 0xb8 ] eax
movzx eax [ ebp + 0x4 ]
shl eax 0x8
or eax edx
mov [ esp + 0xbc ] eax
mov eax [ esp + 0x148 ]
cdq
sub eax edx
mov edx [ edi + 0x94 ]
sar eax 0x1
mov [ esp + 0xac ] eax
mov eax [ edi + 0x80 ]
mov [ esp + 0xb0 ] eax
lea eax [ esp + 0x90 ]
push eax
mov [ esp + 0x94 ] 0x1
mov [ esp + 0xb8 ] edx
call ecx
add esp 0x4
test eax eax
jg r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc eax
push eax
mov eax [ esp + 0x148 ]
push 0x0
push ebx
push ecx
push edi
push edx
push eax
lea ecx [ ebp + 0x3 ]
push ecx
push esi
call sub_439699
add esp 0x24
cmp eax 0x1
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
lea esp [ esp ]
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
je r-xdata
mov ecx [ esp + 0x15c ]
mov edx [ esp + 0x154 ]
inc ecx
push ecx
mov ecx [ esp + 0x154 ]
push 0x0
push edx
mov edx [ esp + 0x154 ]
push ecx
mov ecx [ esp + 0x154 ]
push edi
push edx
push ecx
add eax 0x3
push eax
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
movzx edx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl edx 0x8
or edx eax
add ebp edx
cmp [ ebp ] 0x54
je r-xdata
mov ebx [ esp + 0x154 ]
mov [ esp + 0x28 ] 0x0
mov ecx [ esp + 0x154 ]
mov edx [ ecx + 0x4 ]
mov ebx [ ecx ]
mov [ esp + 0x28 ] edx
mov [ esp + 0x154 ] ebx
jmp r-xdata
test [ esp + 0x150 ] 0x2
je r-xdata
cmp esi [ edi + 0x64 ]
je r-xdata
inc ebp
jmp r-xdata
inc ebp
jmp r-xdata
cmp [ edi + 0x40 ] ebx
jne r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
inc ebp
jmp r-xdata
mov ecx [ edi + 0x18 ]
cmp ecx ebx
je r-xdata
inc ebp
jmp r-xdata
cmp esi [ edi + 0x64 ]
jne r-xdata
cmp esi [ edi + 0x64 ]
je r-xdata
mov eax [ edi + 0x1c ]
mov ecx [ edi + 0x68 ]
sub ecx eax
cmp esi ecx
ja r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
mov eax [ edi + 0x78 ]
test eax eax
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov eax [ edi + 0x78 ]
cmp eax ebx
jmp r-xdata
inc ebp
jmp r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ esp + 0x30 ] ebx
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ esp + 0x30 ] ebx
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ esp + 0x30 ] ebx
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ esp + 0x30 ] ebx
je r-xdata
movzx eax [ esi ]
inc esi
cmp [ esp + 0x30 ] ebx
je r-xdata
cmp [ edi + 0x48 ] ebx
je r-xdata
mov ecx [ edi + 0xc ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
cmp ecx ebx
jl r-xdata
mov edx 0x1
mov [ esp + 0x1c ] edx
mov eax edx
movzx edx [ edx + lookup_table_43f655 ]
jmp [ edx * 4 + jump_table_43f64d ]
mov ebx 0x1
mov [ esp + 0x1c ] ebx
movzx edx [ edx + lookup_table_43f665 ]
jmp [ edx * 4 + jump_table_43f65d ]
mov eax [ edi + 0x68 ]
sub eax esi
cmp eax 0x1
jl r-xdata
movzx eax [ ebp + 0x1 ]
inc ebp
mov ecx 0x1
cmp eax 0xc0
jb r-xdata
mov ecx [ edi + 0x68 ]
sub ecx esi
cmp ecx 0x1
jl r-xdata
movzx ecx [ ebp + 0x1 ]
inc ebp
mov edx ecx
mov eax 0x1
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] ecx
cmp edx 0xc0
jb r-xdata
cmp [ esp + 0x30 ] 0x0
movzx eax [ ebp ]
mov [ esp + 0x24 ] eax
je r-xdata
mov [ esp + 0x1c ] 0x7fffffff
movzx eax [ esi ]
inc ebp
inc esi
cmp [ esp + 0x30 ] ebx
je r-xdata
movzx edx [ ebp ]
inc ebp
test [ esp + 0x150 ] 0x1
mov [ esp + 0x24 ] edx
mov [ esp + 0x14 ] 0x1
je r-xdata
mov ebx 0x7fffffff
movzx eax [ ebp ]
mov edx 0x1
add ebp edx
mov [ esp + 0x20 ] eax
test ebx ebx
jle r-xdata
mov [ esp + 0x1c ] 0x7fffffff
mov eax [ edi + 0xc ]
mov ecx [ eax + ebx * 4 ]
mov edx [ eax + ebx * 4 + 0x4 ]
mov [ esp + 0x18 ] ecx
mov ecx [ edi + 0x10 ]
sub ecx [ esp + 0x2c ]
mov [ esp + 0x38 ] edx
mov edx [ eax + ecx * 4 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ edi + 0x80 ]
mov [ esp + 0x20 ] edx
mov edx esi
sub edx [ edi + 0x64 ]
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x15c ]
mov [ eax ] edx
xor eax eax
cmp [ esp + 0x24 ] 0x62
setne al
dec eax
and eax 0x2
inc ecx
mov [ esp + 0x158 ] eax
mov [ esp + 0x28 ] ecx
cmp [ esp + 0x158 ] 0x0
jne r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x158 ]
mov edx [ esp + 0x150 ]
inc eax
push eax
mov eax [ esp + 0x14c ]
push ecx
mov ecx [ esp + 0x14c ]
push ebx
push edx
movzx edx [ ebp ]
push edi
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebp
push eax
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov eax 0xfffffc1a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov eax 0xfffffc19
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov [ edi + 0x6c ] esi
mov eax 0xfffffc1b
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov eax 0xfffffc1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
movzx eax [ ebx + 0x3 ]
movzx ecx [ ebx + 0x4 ]
shl eax 0x8
or eax ecx
mov [ esp + 0x40 ] eax
mov [ esp + 0x40 ] 0x0
jmp r-xdata
mov edx [ edi + 0x90 ]
test edx edx
jne r-xdata
cmp ecx 0x67
je r-xdata
add ebp 0x6
movzx edx [ ebp + 0x4 ]
mov eax [ edi + 0xc ]
mov [ esp + 0x68 ] eax
mov eax [ edi + 0x64 ]
mov [ esp + 0x64 ] edx
mov edx [ edi + 0x68 ]
sub edx eax
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x144 ]
sub edx eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x74 ] edx
mov edx esi
sub edx eax
movzx eax [ ebp + 0x5 ]
shl eax 0x8
mov [ esp + 0x78 ] edx
movzx edx [ ebp + 0x6 ]
or eax edx
movzx edx [ ebp + 0x8 ]
mov [ esp + 0x88 ] eax
movzx eax [ ebp + 0x7 ]
shl eax 0x8
or eax edx
mov [ esp + 0x8c ] eax
mov eax [ esp + 0x148 ]
cdq
sub eax edx
mov edx [ edi + 0x94 ]
sar eax 0x1
mov [ esp + 0x7c ] eax
mov eax [ edi + 0x80 ]
mov [ esp + 0x80 ] eax
lea eax [ esp + 0x60 ]
push eax
mov [ esp + 0x64 ] 0x1
mov [ esp + 0x88 ] edx
call ecx
add esp 0x4
test eax eax
jg r-xdata
add ebp 0x3
jmp r-xdata
add ecx 0x2
mov [ esp + 0x148 ] ecx
mov ecx [ esp + 0x148 ]
mov [ edi + 0x70 ] esi
mov [ edi + 0x7c ] ecx
mov [ edi + 0x6c ] eax
cmp [ edi + 0x50 ] ebx
jne r-xdata
mov ecx [ ebp ]
mov [ edi + 0x90 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ edi + 0xc ]
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_416320
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x44 ]
mov ebp [ ebp + 0x8 ]
add esp 0xc
mov [ esp + 0x148 ] edx
mov [ esp + 0x144 ] eax
mov [ esp + 0x150 ] ecx
jmp r-xdata
test [ esp + 0x158 ] 0x1
jne r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
add ebp ecx
cmp [ ebp ] 0x54
je r-xdata
cmp eax 0xfffffc1c
jne r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
add ebp ecx
cmp [ ebp ] 0x54
je r-xdata
cmp eax 0xfffffc1c
jne r-xdata
cmp esi [ edi + 0x74 ]
jae r-xdata
mov ecx [ edi + 0x64 ]
jl r-xdata
mov al [ ebp ]
cmp al 0x5d
je r-xdata
test eax eax
je r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
add ebp ecx
cmp [ ebp ] 0x54
je r-xdata
add ebp 0x3
jmp r-xdata
jmp r-xdata
add ebp 0x3
jmp r-xdata
mov edx [ esp + 0x148 ]
mov [ edi + 0x70 ] esi
mov [ edi + 0x7c ] edx
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp al 0x59
je r-xdata
cmp al 0x58
je r-xdata
mov eax [ edi + 0x64 ]
cmp esi eax
je r-xdata
cmp [ edi + 0x4c ] ebx
jne r-xdata
cmp [ edi + 0x40 ] ebx
jne r-xdata
mov ecx [ edi + 0x18 ]
cmp ecx ebx
je r-xdata
mov ecx [ edi + 0x1c ]
lea ebx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
cmp esi eax
jae r-xdata
cmp esi [ edi + 0x74 ]
ja r-xdata
xor ecx ecx
jmp r-xdata
xor ecx ecx
mov cl [ esi - 0x1 ]
lea eax [ esi - 0x1 ]
and cl 0xc0
mov [ esp + 0x18 ] eax
cmp cl 0x80
jne r-xdata
mov dl [ esi ]
cmp dl [ edi + 0x2c ]
jne r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
cmp esi [ esp + 0x144 ]
inc ebp
jmp r-xdata
cmp esi eax
jae r-xdata
je r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0xc0
jb r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0xc0
jb r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0xc0
jb r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0xc0
jb r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0xc0
jb r-xdata
cmp edx 0x100
jae r-xdata
cmp edx 0xc0
jb r-xdata
cmp eax 0xd
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0xc0
jb r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0xc0
jb r-xdata
mov ebx [ edi + 0x68 ]
sub ebx esi
inc ebx
xor ebx ebx
jmp r-xdata
mov ebx [ eax + 0x4 ]
sub ebx ecx
jmp r-xdata
cmp eax edx
jl r-xdata
cmp eax edx
jl r-xdata
add ecx 0xffffffba
movzx eax cl
mov edx 0x1
and eax edx
mov [ esp + 0x2c ] eax
movsx eax [ ecx + r--data ]
movsx ecx [ ecx + r--data ]
add ebp edx
mov [ esp + 0x1c ] ecx
test ecx ecx
jne r-xdata
movzx edx [ ebp + 0x2 ]
xor ecx ecx
cmp al 0x4d
movzx eax [ ebp + 0x1 ]
sete cl
shl eax 0x8
or eax edx
movzx edx [ ebp + 0x4 ]
mov [ esp + 0x2c ] ecx
movzx ecx [ ebp + 0x3 ]
shl ecx 0x8
or ecx edx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
movsx ebx [ eax + r--data ]
add eax 0xffffffba
movzx ecx al
movsx eax [ eax + r--data ]
and ecx 0x1
inc ebp
mov [ esp + 0x2c ] ecx
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
movzx ebx [ ebp + 0x1 ]
movzx edx [ ebp + 0x4 ]
xor eax eax
cmp cl 0x4d
movzx ecx [ ebp + 0x2 ]
sete al
shl ebx 0x8
or ebx ecx
mov [ esp + 0x2c ] eax
movzx eax [ ebp + 0x3 ]
shl eax 0x8
or eax edx
mov [ esp + 0x1c ] eax
jne r-xdata
mov cl [ esi ]
inc esi
cmp [ ebp + 0x1 ] cl
jne r-xdata
mov edx [ edi + 0x68 ]
sub edx esi
cmp ecx edx
jg r-xdata
and eax 0x3f
movzx ecx [ eax + r--data ]
inc ecx
movzx ecx [ esi ]
mov eax [ edi + 0x30 ]
movzx edx [ ebp + 0x1 ]
mov cl [ ecx + eax ]
inc esi
cmp [ edx + eax ] cl
jne r-xdata
mov ebx [ edi + 0x68 ]
sub ebx esi
cmp eax ebx
jg r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
inc ebp
mov edx 0x1
mov [ esp + 0x20 ] edx
mov [ esp + 0x18 ] ebp
cmp eax 0xc0
jb r-xdata
test [ esp + 0x150 ] 0x1
je r-xdata
cmp eax 0xc0
jb r-xdata
cmp [ esp + 0x30 ] 0x0
je r-xdata
cmp [ esp + 0x30 ] 0x0
mov ecx [ edi + 0x30 ]
movzx edx [ edx + ecx ]
mov [ esp + 0x24 ] edx
je r-xdata
cmp ebx [ esp + 0x1c ]
je r-xdata
add eax 0xfffffffa
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov ecx [ esp + 0x34 ]
mov [ edi + 0x80 ] ecx
movzx edx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl edx 0x8
or edx eax
add ebp edx
cmp [ ebp ] 0x54
je r-xdata
cmp eax 0xfffffc1c
jne r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x150 ]
inc edx
push edx
mov edx [ esp + 0x14c ]
push eax
mov eax [ esp + 0x14c ]
push ebx
push ecx
movzx ecx [ ebp ]
push edi
push edx
movzx edx [ ecx + r--data ]
push eax
add edx ebp
push edx
push esi
call sub_439699
add esp 0x24
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
movzx edx [ ebp ]
movzx eax [ edx + r--data ]
add ebp eax
jmp r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
movzx eax [ ebp + ecx + 0x1 ]
add ebp ecx
movzx ecx [ ebp + 0x2 ]
shl eax 0x8
or eax ecx
cmp [ eax + ebp ] 0x54
je r-xdata
cmp eax 0xfffffc1c
jne r-xdata
add ecx ecx
add ecx ecx
push ecx
call [ rw-data ]
add esp 0x4
mov [ esp + 0x4c ] eax
test eax eax
jne r-xdata
lea eax [ esp + 0xc0 ]
mov [ esp + 0x4c ] eax
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x90 ]
add ebp 0x3
cmp ecx 0x1e
lea eax [ esp + 0x3c ]
mov [ esp + 0x3c ] edx
mov [ edi + 0x90 ] eax
mov [ esp + 0x44 ] ebp
mov [ esp + 0x50 ] ecx
jg r-xdata
movzx eax [ ebp + 0x4 ]
movzx ebx [ ebp + 0x5 ]
shl eax 0x8
or eax ebx
cmp eax 0xffff
je r-xdata
movzx edx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl edx 0x8
or edx eax
add ebp edx
jmp r-xdata
cmp ecx 0x64
je r-xdata
jl r-xdata
cmp [ edi + 0x54 ] ebx
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
lea esp [ esp ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
mov edx [ esp + 0x144 ]
push ebx
push 0x0
push 0x0
push eax
push edi
push ecx
push edx
lea eax [ ebp + 0x3 ]
push eax
push esi
call sub_439699
add esp 0x24
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
mov edx [ esp + 0x144 ]
push ebx
push 0x0
push 0x0
push eax
push edi
push ecx
push edx
lea eax [ ebp + 0x3 ]
push eax
push esi
call sub_439699
add esp 0x24
cmp eax 0x1
je r-xdata
test [ esp + 0x158 ] 0x1
jne r-xdata
add ebp 0x3
jmp r-xdata
mov [ edi + 0x74 ] esi
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
add ebp ecx
cmp [ ebp ] 0x54
je r-xdata
cmp al 0x54
jne r-xdata
movzx edx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl edx 0x8
or edx eax
add ebp edx
cmp [ ebp ] 0x54
je r-xdata
cmp eax 0xfffffc1c
jne r-xdata
cmp al 0x5a
je r-xdata
inc ebp
jmp r-xdata
cmp esi [ edi + 0x68 ]
je r-xdata
inc ebp
jmp r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
je r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
mov edx [ esp + 0x30 ]
push edx
lea ebx [ edi + 0x1c ]
push ebx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
je r-xdata
movzx eax [ esi - 0x1 ]
mov edx [ edi + 0x34 ]
movzx ecx [ eax + edx ]
shr ecx 0x4
and ecx 0x1
lea ecx [ esi - 0x1 ]
mov [ edi + 0x74 ] ecx
cmp esi [ edi + 0x68 ]
jb r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
jmp r-xdata
cmp eax [ edi + 0x74 ]
jae r-xdata
mov dl [ eax - 0x1 ]
dec eax
and dl 0xc0
cmp dl 0x80
je r-xdata
cmp eax 0x1
je r-xdata
jmp r-xdata
mov [ edi + 0x58 ] 0x1
cmp eax 0x1
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
inc ebp
jmp r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x4
jne r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x4
je r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
inc ebp
jmp r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x1
jne r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x1
je r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
inc ebp
jmp r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x10
jne r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x10
je r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
cmp eax 0x85
je r-xdata
je r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
mov edx eax
and edx 0x3f
movzx edx [ edx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
mov edx eax
and edx 0x3f
movzx edx [ edx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x24 ]
push edx
push edi
push ebx
push esi
push eax
call sub_432196
add esp 0x14
test eax eax
je r-xdata
movzx edx [ edx + lookup_table_43f645 ]
jmp [ edx * 4 + jump_table_43f63d ]
mov cl [ ebp ]
movzx eax cl
lea edx [ eax - 0x46 ]
cmp edx 0x7
ja r-xdata
mov ebx [ esp + 0x1c ]
cmp eax ebx
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x14 ] edx
je r-xdata
mov [ esp + 0x1c ] 0x7fffffff
jmp r-xdata
add ebp 0x5
mov edx 0x1
jmp r-xdata
mov [ esp + 0x1c ] 0x7fffffff
cmp [ esp + 0x2c ] 0x0
mov [ esp + 0x14 ] ebx
je r-xdata
movzx ecx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
cmp ebx 0x1
mov [ esp + 0x14 ] 0x1
jl r-xdata
mov [ esp + 0x1c ] 0x7fffffff
jmp r-xdata
add ebp 0x5
jmp r-xdata
mov [ esp + 0x1c ] 0x7fffffff
add ebp 0x2
jmp r-xdata
mov eax [ edi + 0x78 ]
cmp eax ebx
je r-xdata
cmp ecx ebx
jle r-xdata
add ebp 0x2
jmp r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
cmp edx 0x80
jae r-xdata
mov ecx [ esp + 0x28 ]
inc eax
mov [ esp + 0x20 ] eax
movzx ebx [ ebx + ebp ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
mov ecx 0x1
cmp ebx ecx
jl r-xdata
mov ecx [ edi + 0x30 ]
movzx eax [ eax + ecx ]
mov [ esp + 0x24 ] eax
mov eax 0x1
cmp ebx eax
jl r-xdata
add ebp edx
cmp edx 0x1
jle r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
mov [ esp + 0x20 ] ecx
mov ecx [ edx * 4 + r--data ]
and ecx eax
mov eax ecx
mov ecx [ esp + 0x20 ]
shl eax cl
mov ecx 0x1
cmp edx ecx
mov [ esp + 0x34 ] edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] ecx
jl r-xdata
movzx edx [ ebp ]
inc ebp
cmp edx eax
jne r-xdata
cmp eax 0x100
jae r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
cmp eax 0x1
jl r-xdata
cmp eax 0x1
jl r-xdata
cmp eax 0x1
jl r-xdata
cmp eax 0x1
jl r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
cmp eax 0xf
ja r-xdata
cmp eax 0xf
ja r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x154 ]
push edx
mov edx [ esp + 0x154 ]
push eax
mov eax [ esp + 0x150 ]
push ecx
mov ecx [ esp + 0x150 ]
push edx
movzx edx [ ebp ]
push edi
push eax
movzx eax [ edx + r--data ]
push ecx
add eax ebp
push eax
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ esp + 0x18 ]
mov [ ecx + ebx * 4 ] edx
mov eax [ edi + 0xc ]
mov ecx [ esp + 0x38 ]
mov [ eax + ebx * 4 + 0x4 ] ecx
mov edx [ edi + 0x10 ]
sub edx [ esp + 0x2c ]
mov eax [ edi + 0xc ]
mov ecx [ esp + 0x20 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ edi ]
mov eax [ edi + 0x44 ]
mov [ esp + 0x30 ] eax
cmp ecx [ edi + 0x4 ]
jb r-xdata
mov ecx [ esp + 0x50 ]
mov eax 0xfffffffa
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
lea edx [ ecx * 4 ]
mov ecx [ edi + 0xc ]
push edx
push ecx
push eax
call sub_410f70
mov eax [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov ecx [ esp + 0x168 ]
mov [ esp + 0x54 ] edx
mov [ esp + 0x60 ] eax
mov al [ ebx ]
add esp 0xc
cmp al 0x61
sbb ebp ebp
and ebp 0xfffffffe
add ebp 0x2
inc ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x20 ] 0x1
mov eax 0x3
jmp r-xdata
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebp ] 0x54
je r-xdata
movzx eax [ ebp + 0x4 ]
movzx edx [ ebp + 0x5 ]
shl eax 0x8
or eax edx
add eax eax
cmp eax [ esp + 0x148 ]
jge r-xdata
cmp ecx 0x65
je r-xdata
mov edx [ edi + 0x84 ]
add edx [ edi + 0x64 ]
cmp eax edx
je r-xdata
movzx eax [ ebp + 0x1 ]
movzx ecx [ ebp + 0x2 ]
shl eax 0x8
or eax ecx
add ebp eax
cmp [ ebp ] 0x54
je r-xdata
mov edx [ edi + 0x7c ]
add ebp 0x3
mov [ esp + 0x148 ] edx
jmp r-xdata
add ebp 0x3
jmp r-xdata
cmp eax ebx
jg r-xdata
lea ebx [ ebx ]
cmp [ ebp ] 0x55
mov eax [ edi + 0x7c ]
mov esi [ edi + 0x70 ]
mov [ esp + 0x148 ] eax
je r-xdata
lea ebx [ ebx ]
cmp al 0x5b
je r-xdata
mov ecx [ edi + 0x18 ]
cmp ecx ebx
je r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
inc ebp
jmp r-xdata
cmp ecx 0x1
je r-xdata
jmp r-xdata
movzx eax [ esi ]
mov edx [ edi + 0x34 ]
movzx eax [ eax + edx ]
shr eax 0x4
and eax 0x1
mov eax [ edi + 0x78 ]
cmp eax ebx
cmp edx 0x100
jae r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
je r-xdata
movzx edx [ eax ]
cmp edx 0xc0
jb r-xdata
mov [ edi + 0x74 ] eax
mov [ esp + 0x18 ] eax
mov al [ esi + 0x1 ]
cmp al [ edi + 0x2d ]
je r-xdata
mov eax 0xfffffff4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
inc esi
cmp esi [ edi + 0x68 ]
jb r-xdata
nop
inc ebp
jmp r-xdata
jmp r-xdata
lea esp [ esp ]
inc ebp
jmp r-xdata
jmp r-xdata
lea esp [ esp ]
inc ebp
jmp r-xdata
jmp r-xdata
cmp [ edi + 0x5c ] 0x0
jne r-xdata
cmp eax 0x2027
jbe r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp eax 0xa
je r-xdata
jmp r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
jmp r-xdata
cmp eax 0x3000
jne r-xdata
je r-xdata
inc ebp
jmp r-xdata
cmp eax 0xa0
ja r-xdata
jmp r-xdata
inc ebp
jmp r-xdata
cmp eax 0x2029
jbe r-xdata
cmp eax 0xa
jb r-xdata
jmp r-xdata
cmp eax 0x2029
ja r-xdata
inc ebp
jmp r-xdata
cmp eax 0xa
jb r-xdata
jmp r-xdata
add esi ebx
jmp r-xdata
add eax 0xffffffba
movzx ecx al
and ecx 0x1
mov [ esp + 0x2c ] ecx
movsx ecx [ eax + r--data ]
movsx eax [ eax + r--data ]
inc ebp
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
movzx eax [ ebp + 0x1 ]
xor edx edx
cmp cl 0x4d
movzx ecx [ ebp + 0x2 ]
sete dl
shl eax 0x8
or eax ecx
mov [ esp + 0x20 ] eax
movzx eax [ ebp + 0x3 ]
mov [ esp + 0x2c ] edx
movzx edx [ ebp + 0x4 ]
shl eax 0x8
or eax edx
mov [ esp + 0x1c ] eax
jne r-xdata
cmp [ esp + 0x2c ] 0x0
mov [ esp + 0x14 ] eax
je r-xdata
movzx edx [ esi ]
mov ecx edx
and ecx 0x7
mov ebx 0x1
shl ebx cl
mov ecx [ esp + 0x20 ]
shr edx 0x3
mov dl [ edx + ecx ]
inc esi
test dl bl
je r-xdata
movzx edx [ esi ]
inc esi
cmp edx 0xc0
jb r-xdata
cmp ebx eax
mov [ esp + 0x2c ] esi
jge r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
inc eax
push eax
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x15c ]
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
push ecx
call sub_431bd5
add esp 0x8
test eax eax
je r-xdata
cmp ecx 0xc0
jb r-xdata
cmp esi [ edi + 0x68 ]
jb r-xdata
mov al [ ebp ]
mov dl [ esi ]
dec ecx
inc esi
inc ebp
cmp al dl
jne r-xdata
cmp esi [ edi + 0x68 ]
jb r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jb r-xdata
movzx edx [ esi ]
mov eax [ edi + 0x30 ]
mov dl [ edx + eax ]
inc esi
inc ebp
cmp [ ecx + eax ] dl
je r-xdata
cmp ebx [ esp + 0x1c ]
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp ebx [ esp + 0x1c ]
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
test [ esp + 0x150 ] 0x1
je r-xdata
cmp ebx 0x1
mov [ esp + 0x14 ] 0x1
jl r-xdata
inc edx
mov [ esp + 0x20 ] edx
movzx ecx [ ecx + ebp ]
mov edx [ esp + 0x20 ]
sub edx 0x6
and ecx 0x3f
mov [ esp + 0x24 ] ecx
mov ecx edx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x24 ]
shl edx cl
mov ecx [ esp + 0x14 ]
inc ecx
mov [ esp + 0x14 ] ecx
or eax edx
mov edx [ esp + 0x34 ]
cmp ecx edx
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
movzx ecx [ ebp ]
mov edx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
inc ebp
cmp ecx eax
jne r-xdata
mov edx [ edi + 0x30 ]
movzx eax [ edx + eax ]
jmp r-xdata
cmp eax ebx
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp eax ebx
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x14 ] ebx
je r-xdata
mov eax [ esp + 0x20 ]
add eax 0xfffffffa
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x2c ] esi
je r-xdata
mov eax 0xfffffff2
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
jmp [ eax * 4 + jump_table_43f6ad ]
jmp [ eax * 4 + jump_table_43f66d ]
mov edx [ esp + 0x15c ]
inc [ edi ]
cmp edx [ edi + 0x8 ]
jae r-xdata
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc0 ]
mov [ edi + 0x90 ] edx
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
add ebp eax
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov [ esp + 0x20 ] 0x0
cmp ecx 0x67
jne r-xdata
add ebp 0x3
cmp [ esp + 0x24 ] 0x63
je r-xdata
add ebp 0x3
jmp r-xdata
mov [ esp + 0x20 ] 0x0
cmp ecx 0x65
jne r-xdata
mov edx [ edi + 0xc ]
cmp [ edx + eax * 4 ] 0x0
jge r-xdata
cmp ecx 0x68
jne r-xdata
dec esi
dec eax
cmp esi ecx
jb r-xdata
jmp r-xdata
mov dl [ esi - 0x1 ]
dec esi
and dl 0xc0
cmp dl 0x80
je r-xdata
add ebp 0x3
jmp r-xdata
cmp esi [ esp + 0x28 ]
jne r-xdata
cmp al 0x5d
je r-xdata
mov ecx [ edi + 0x1c ]
add eax ecx
cmp esi eax
jb r-xdata
cmp esi eax
jbe r-xdata
cmp ecx 0x1
je r-xdata
mov edx [ edi + 0x68 ]
sub edx [ ebx ]
cmp esi edx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
jne r-xdata
cmp eax ecx
je r-xdata
cmp eax ecx
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x10
je r-xdata
mov ecx [ esp + 0x20 ]
lea ebx [ ebx ]
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] ebx
jl r-xdata
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
inc ebp
jmp r-xdata
cmp eax 0x2029
ja r-xdata
cmp [ esi ] 0xa
jne r-xdata
jbe r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x18 ] ecx
or eax ebx
test edx edx
jg r-xdata
inc ebp
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x18 ] ecx
or eax ebx
test edx edx
jg r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x18 ] ecx
or eax ebx
test edx edx
jg r-xdata
cmp eax 0xd
jbe r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x18 ] ecx
or eax ebx
test edx edx
jg r-xdata
cmp eax 0xd
ja r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x18 ] ecx
or eax ebx
test edx edx
jg r-xdata
test ebx ebx
je r-xdata
mov [ esp + 0x1c ] 0x7fffffff
jmp r-xdata
add ebp 0x5
mov [ esp + 0x1c ] 0x7fffffff
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x2c ] esi
je r-xdata
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jle r-xdata
cmp edx 0xff
jbe r-xdata
mov ecx edx
and ecx 0x3f
movzx ebx [ ecx + r--data ]
lea ecx [ ebx + ebx * 2 ]
add ecx ecx
mov [ esp + 0x28 ] ecx
mov ecx [ ebx * 4 + r--data ]
and ecx edx
mov edx ecx
mov ecx [ esp + 0x28 ]
shl edx cl
test ebx ebx
jle r-xdata
mov ebx [ esp + 0x15c ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
jmp r-xdata
cmp ebx [ esp + 0x1c ]
jge r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
mov eax ecx
and eax 0x3f
movzx eax [ eax + r--data ]
lea edx [ eax + eax * 2 ]
add edx edx
mov [ esp + 0x28 ] edx
mov edx [ eax * 4 + r--data ]
and edx ecx
mov ecx [ esp + 0x28 ]
shl edx cl
mov ecx edx
mov [ esp + 0x24 ] ecx
test eax eax
jle r-xdata
jmp r-xdata
cmp ecx ebx
jle r-xdata
jmp r-xdata
add ebp [ esp + 0x20 ]
cmp edx ecx
je r-xdata
mov eax ecx
and eax 0x3f
movzx eax [ eax + r--data ]
lea ebx [ eax + eax * 2 ]
add ebx ebx
mov [ esp + 0x28 ] ebx
mov ebx [ eax * 4 + r--data ]
and ebx ecx
mov ecx [ esp + 0x28 ]
shl ebx cl
mov ecx ebx
mov [ esp + 0x18 ] ecx
test eax eax
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp [ esp + 0x2c ] 0x0
jne r-xdata
movzx edx [ esi ]
inc esi
cmp eax edx
jne r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
movzx edx [ esi ]
movzx edx [ edx + ecx ]
inc esi
cmp [ esp + 0x24 ] edx
jne r-xdata
cmp ebx [ esp + 0x1c ]
je r-xdata
mov eax [ edi + 0x68 ]
sub eax edx
cmp esi eax
ja r-xdata
mov [ esp + 0x24 ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x34 ] ecx
or eax ebx
test edx edx
jg r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
movzx ecx [ esi ]
inc esi
cmp edx ecx
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jb r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
inc esi
cmp [ esp + 0x24 ] ecx
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jb r-xdata
mov ebx [ esp + 0x15c ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc eax
push eax
push 0x0
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x15c ]
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
cmp eax 0xf
ja r-xdata
cmp eax 0xf
ja r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
mov eax [ edi + 0x68 ]
sub eax ebx
cmp esi eax
ja r-xdata
mov ecx [ edi + 0x68 ]
sub ecx ebx
cmp esi ecx
ja r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov eax edx
jl r-xdata
mov eax [ edi + 0x68 ]
sub eax ebx
cmp esi eax
ja r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov [ esp + 0x14 ] edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
cmp ebx edx
mov ecx edx
jl r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
push eax
call [ rw-data ]
add esp 0x4
mov edx [ esp + 0x50 ]
lea ecx [ esp + 0x3c ]
lea eax [ edx * 4 ]
mov edx [ edi + 0xc ]
mov [ edi + 0x90 ] ecx
mov ecx [ esp + 0x4c ]
push eax
push ecx
push edx
call sub_410f70
movzx eax [ ebx + 0x1 ]
movzx ecx [ ebx + 0x2 ]
shl eax 0x8
or eax ecx
add ebx eax
mov al [ ebx ]
add esp 0xc
cmp al 0x54
je r-xdata
cmp eax 0xfffffc1c
jne r-xdata
movzx eax [ ebp + 0x1 ]
movzx ecx [ ebp + 0x2 ]
shl eax 0x8
or eax ecx
mov ebx [ edi + 0x28 ]
xor ecx ecx
cmp [ edi + 0x20 ] ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
inc eax
push eax
mov eax [ esp + 0x14c ]
push 0x2
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x154 ]
jmp r-xdata
mov ebx [ edi + 0x28 ]
xor ecx ecx
sar eax 0x1
cmp [ edi + 0x20 ] ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] ecx
jle r-xdata
mov ecx [ esp + 0x15c ]
mov edx [ esp + 0x150 ]
inc ecx
push ecx
mov ecx [ esp + 0x14c ]
push 0x1
push 0x0
push edx
mov edx [ esp + 0x154 ]
push edi
push ecx
push edx
push eax
push esi
call sub_439699
add esp 0x24
cmp eax 0x1
je r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
add ebp ecx
jmp r-xdata
cmp [ ebp + 0x3 ] 0x19
lea ecx [ ebp + 0x3 ]
mov [ esp + 0x18 ] ecx
jne r-xdata
cmp al 0x5f
je r-xdata
mov eax esi
sub eax ecx
mov dl [ eax ]
cmp dl [ edi + 0x2c ]
jne r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_431eb9
add esp 0x14
test eax eax
je r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov dl [ ebp ]
inc ebp
cmp dl 0x5
jne r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
mov eax 0x1
jmp r-xdata
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x10
je r-xdata
lea ebx [ ebx ]
inc esi
inc ebp
jmp r-xdata
cmp eax 0xc
ja r-xdata
mov ecx [ esp + 0x18 ]
cmp eax 0x200a
jbe r-xdata
inc ebp
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ esp + 0x18 ]
cmp eax 0x200a
jbe r-xdata
inc ebp
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ esp + 0x18 ]
inc ebp
jmp r-xdata
mov ecx [ esp + 0x18 ]
inc ebp
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
cmp eax 0x1
mov [ esp + 0x14 ] 0x1
jl r-xdata
cmp eax ebx
jge r-xdata
cmp eax ebx
jge r-xdata
mov ebx [ esp + 0x15c ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
mov ebx [ esp + 0x144 ]
inc eax
push eax
push 0x0
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x15c ]
push eax
push ecx
push edi
push edx
push ebx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx edx
and ecx 0x7
mov ebx 0x1
shl ebx cl
mov ecx [ esp + 0x20 ]
shr edx 0x3
mov dl [ edx + ecx ]
test dl bl
je r-xdata
cmp [ esp + 0x24 ] 0x4e
je r-xdata
mov ecx [ esp + 0x28 ]
dec ebx
mov [ esp + 0x18 ] ebx
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
inc esi
mov [ esp + 0x28 ] ecx
or edx ebx
mov ebx [ esp + 0x18 ]
test ebx ebx
jg r-xdata
mov edx esi
dec esi
cmp edx [ esp + 0x2c ]
je r-xdata
mov ebx 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
mov edi edi
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
lea ebx [ ebx ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x15c ]
inc ebx
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
mov [ esp + 0x2c ] esi
jge r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x15c ]
inc ebx
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x2c ] esi
jge r-xdata
inc eax
cmp eax ebx
jle r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
push esi
call sub_411b63
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x15c ]
inc eax
cmp [ esp + 0x30 ] 0x0
push eax
mov [ esp + 0x2c ] eax
push 0x0
je r-xdata
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x2c ] esi
je r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jle r-xdata
cmp edx ecx
je r-xdata
mov edx ecx
and edx 0x3f
movzx edx [ edx + r--data ]
mov [ esp + 0x20 ] edx
lea edx [ edx + edx * 2 ]
add edx edx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x20 ]
mov edx [ edx * 4 + r--data ]
and edx ecx
mov ecx [ esp + 0x1c ]
shl edx cl
cmp [ esp + 0x20 ] 0x0
mov ecx edx
mov [ esp + 0x18 ] ecx
jle r-xdata
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x15c ]
inc eax
cmp [ esp + 0x30 ] 0x0
push eax
mov [ esp + 0x2c ] eax
push 0x0
je r-xdata
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x2c ] esi
je r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jle r-xdata
cmp ecx 0x100
jae r-xdata
mov edx ecx
and edx 0x3f
movzx edx [ edx + r--data ]
mov [ esp + 0x20 ] edx
lea edx [ edx + edx * 2 ]
add edx edx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x20 ]
mov edx [ edx * 4 + r--data ]
and edx ecx
mov ecx [ esp + 0x1c ]
shl edx cl
cmp [ esp + 0x20 ] 0x0
mov ecx edx
mov [ esp + 0x18 ] ecx
jle r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
jge r-xdata
cmp ebx [ esp + 0x1c ]
jge r-xdata
jmp [ eax * 4 + jump_table_43f7b9 ]
jmp [ eax * 4 + jump_table_43f779 ]
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
add esi ebx
jmp r-xdata
add esi ebx
jmp r-xdata
mov edx [ edi + 0x68 ]
mov edx [ edi + 0x68 ]
mov edx [ edi + 0x68 ]
mov edx [ edi + 0x68 ]
jmp r-xdata
mov edx [ edi + 0x68 ]
lea esp [ esp ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
mov ecx [ edi + 0x68 ]
add esi ebx
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
jmp r-xdata
mov eax [ edi + 0x68 ]
jmp r-xdata
mov eax [ edi + 0x68 ]
jmp r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x154 ]
push edx
mov edx [ esp + 0x154 ]
push ebp
push ecx
mov ecx [ esp + 0x154 ]
push edx
movzx edx al
movzx eax [ edx + r--data ]
push edi
push ecx
push esi
add eax ebx
push eax
push esi
call sub_439699
add esp 0x24
mov [ esp + 0x18 ] eax
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x3c ]
mov [ edi + 0x90 ] eax
mov eax [ esp + 0x4c ]
lea ecx [ esp + 0xc0 ]
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x4c ]
lea edx [ esp + 0xc0 ]
cmp ecx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ edi + 0x20 ]
jge r-xdata
movzx ecx [ ebx ]
movzx edx [ ebx + 0x1 ]
shl ecx 0x8
or ecx edx
cmp ecx eax
je r-xdata
mov [ esp + 0x158 ] 0x0
cmp ecx [ edi + 0x20 ]
jge r-xdata
movzx eax [ ebx ]
movzx edx [ ebx + 0x1 ]
shl eax 0x8
or eax edx
cmp eax [ esp + 0x18 ]
je r-xdata
movzx eax [ ebp + 0x4 ]
movzx ecx [ ebp + 0x5 ]
shl eax 0x8
or eax ecx
cmp [ eax + ebp + 0x3 ] 0x54
lea ebp [ eax + ebp + 0x3 ]
jne r-xdata
test eax eax
je r-xdata
cmp [ ebp ] 0x57
jne r-xdata
mov edx [ esp + 0x150 ]
movzx ecx [ ebp + 0x4 ]
and edx 0xfffffff8
or ecx edx
mov [ esp + 0x150 ] ecx
mov ecx [ esp + 0x20 ]
movzx eax [ ecx + 0x3 ]
movzx ecx [ ecx + 0x4 ]
shl eax 0x8
or eax ecx
lea ecx [ eax + eax ]
cmp ecx [ edi + 0x14 ]
mov [ esp + 0x2c ] eax
mov [ edi + 0x80 ] eax
jl r-xdata
cmp al 0x62
jne r-xdata
cmp ecx 0x1
je r-xdata
inc ebp
jmp r-xdata
inc ebp
jmp r-xdata
mov ecx 0x1
jmp r-xdata
mov edx [ esp + 0x18 ]
movzx ebx [ ebx + edx ]
mov edx [ esp + 0x24 ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x20 ]
inc ebx
cmp ebx eax
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] ebx
jle r-xdata
jmp r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
mov ecx [ esp + 0x1c ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x24 ]
push eax
push edi
push ebx
push esi
push ecx
call sub_432196
add esp 0x14
test eax eax
je r-xdata
mov ebx [ esp + 0x15c ]
inc ebx
lea ebx [ ebx ]
cmp esi [ edi + 0x68 ]
jae r-xdata
mov ebx [ esp + 0x15c ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx 0x1
mov [ esp + 0x18 ] ecx
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax [ esp + 0x1c ]
cmp [ esp + 0x14 ] eax
jge r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
jge r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jle r-xdata
jmp r-xdata
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
cmp [ esp + 0x30 ] 0x0
movzx edx [ esi ]
je r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x30 ] 0x0
je r-xdata
movzx edx [ esi ]
mov ecx [ esp + 0x28 ]
sub ecx 0x6
and edx 0x3f
shl edx cl
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x24 ]
dec eax
or ecx edx
inc esi
mov [ esp + 0x24 ] ecx
test eax eax
jg r-xdata
movzx ebx [ esi ]
mov ecx [ esp + 0x28 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x18 ]
dec eax
or ecx ebx
inc esi
mov [ esp + 0x18 ] ecx
test eax eax
jg r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x1c ]
jge r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ecx [ edi + 0x68 ]
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
jge r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov eax [ edi + 0x68 ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x15c ]
inc ebx
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x2c ] esi
jge r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
inc eax
add esi edx
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x150 ]
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x158 ]
mov edx [ esp + 0x150 ]
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
cmp eax ebx
jge r-xdata
cmp eax ebx
mov [ esp + 0x14 ] eax
jge r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jle r-xdata
mov edx [ esp + 0x24 ]
movzx edx [ esi ]
mov ecx [ esp + 0x1c ]
dec [ esp + 0x20 ]
sub ecx 0x6
and edx 0x3f
shl edx cl
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x18 ]
inc esi
or ecx edx
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x18 ] ecx
jg r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x158 ]
mov edx [ esp + 0x150 ]
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x150 ]
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
cmp eax ebx
jge r-xdata
cmp eax ebx
mov [ esp + 0x14 ] eax
jge r-xdata
cmp [ esp + 0x24 ] ecx
je r-xdata
mov edx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
movzx edx [ esi ]
mov ecx [ esp + 0x1c ]
dec [ esp + 0x20 ]
sub ecx 0x6
and edx 0x3f
shl edx cl
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x18 ]
inc esi
or ecx edx
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x18 ] ecx
jg r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
cmp ebx [ esp + 0x1c ]
jge r-xdata
mov ecx [ edi + 0x68 ]
mov eax [ esp + 0x1c ]
mov edx ecx
sub eax ebx
sub edx esi
cmp eax edx
jbe r-xdata
mov edx [ esp + 0x1c ]
cmp ebx edx
jge r-xdata
mov ecx [ esp + 0x1c ]
cmp ebx ecx
jge r-xdata
mov ecx [ esp + 0x1c ]
cmp ebx ecx
jge r-xdata
mov ecx [ esp + 0x1c ]
cmp ebx ecx
jge r-xdata
mov ecx [ esp + 0x1c ]
cmp ebx ecx
jge r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x1c ]
cmp ebx eax
jge r-xdata
mov edx [ esp + 0x1c ]
cmp edx 0x7fffffff
jge r-xdata
mov ecx [ esp + 0x1c ]
cmp ecx 0x7fffffff
jge r-xdata
mov ecx [ edi + 0x68 ]
mov eax [ esp + 0x1c ]
mov edx ecx
sub eax ebx
sub edx esi
cmp eax edx
jbe r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] ebx
jge r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
movzx eax [ esi ]
sub eax 0xa
inc esi
cmp eax 0x7b
ja r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0x9
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0x9
je r-xdata
cmp esi edx
jae r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xa
jl r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
add esi edx
cmp esi ecx
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
movzx ecx [ esi ]
add esi edx
cmp ecx 0xc0
jb r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
push eax
call [ rw-data ]
add esp 0x4
push ecx
call [ rw-data ]
mov eax [ esp + 0x1c ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov [ esp + 0x28 ] ebx
cmp ebx [ edi + 0x28 ]
jbe r-xdata
mov ecx [ esp + 0x14 ]
add ebx [ edi + 0x24 ]
inc ecx
cmp ecx [ edi + 0x20 ]
mov [ esp + 0x14 ] ecx
jl r-xdata
mov [ esp + 0x28 ] ebx
cmp ebx [ edi + 0x28 ]
jbe r-xdata
mov [ esp + 0x14 ] ecx
add ebx [ edi + 0x24 ]
inc ecx
cmp ecx [ edi + 0x20 ]
jl r-xdata
movzx edx [ ebp + 0x1 ]
movzx eax [ ebp + 0x2 ]
shl edx 0x8
or edx eax
add ebp edx
cmp [ ebp ] 0x54
je r-xdata
add ebp ebx
jmp r-xdata
cmp eax 0xfffffc1c
jne r-xdata
mov edx [ esp + 0x15c ]
mov ecx [ esp + 0x150 ]
inc edx
push edx
mov edx [ esp + 0x148 ]
push 0x2
push ebx
push ecx
push edi
push eax
mov eax [ esp + 0x38 ]
push edx
push eax
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ esp + 0x15c ]
mov edx [ esp + 0x150 ]
inc ecx
push ecx
mov ecx [ esp + 0x1c ]
push 0x0
push ebx
push edx
push edi
push eax
mov eax [ esp + 0x15c ]
push eax
push ecx
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov edx [ edi + 0x10 ]
sub edx eax
mov eax [ edi + 0xc ]
mov edx [ eax + edx * 4 ]
mov [ eax + ecx * 4 ] edx
mov edx [ edi + 0xc ]
mov eax esi
sub eax [ edi + 0x64 ]
cmp [ esp + 0x148 ] ecx
mov [ edx + ecx * 4 + 0x4 ] eax
mov eax [ esp + 0x2c ]
jg r-xdata
mov [ edi + 0x38 ] 0x1
jmp r-xdata
cmp [ ebp ] 0x55
mov ecx [ esp + 0x38 ]
mov [ esp + 0x150 ] ecx
je r-xdata
mov al [ eax + 0x1 ]
cmp al [ edi + 0x2d ]
jne r-xdata
mov [ esp + 0x20 ] ecx
cmp esi [ edi + 0x68 ]
jb r-xdata
inc ebp
jmp r-xdata
inc ebp
jmp r-xdata
inc ebp
jmp r-xdata
inc ebp
jmp r-xdata
cmp [ esp + 0x2c ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
add esi ebx
cmp eax [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
jle r-xdata
dec esi
cmp esi [ esp + 0x2c ]
jae r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
mov ecx edx
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x20 ]
shr edx 0x3
mov dl [ edx + ecx ]
test dl al
je r-xdata
mov edi edi
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
jmp r-xdata
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov eax [ esp + 0x20 ]
push eax
push edx
call sub_431bd5
add esp 0x8
test eax eax
je r-xdata
cmp edx 0xc0
jb r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push edx
call sub_431bd5
add esp 0x8
test eax eax
je r-xdata
cmp edx 0xc0
jb r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ esp + 0x2c ]
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
cmp [ esp + 0x24 ] edx
jne r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ esp + 0x2c ]
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
movzx edx [ edx + ecx ]
cmp [ esp + 0x24 ] edx
jne r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x1c ]
jge r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
lea esp [ esp ]
lea ebx [ ebx ]
mov edi edi
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ecx [ edi + 0x68 ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
jmp r-xdata
lea esp [ esp ]
jmp r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov edx 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jle r-xdata
cmp [ esp + 0x20 ] 0xc
jne r-xdata
cmp [ esp + 0x20 ] 0xc
jne r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
jmp r-xdata
add esi eax
jmp r-xdata
mov esi ecx
mov ecx [ edi + 0x68 ]
mov edx [ edi + 0x68 ]
nop
mov edx [ edi + 0x68 ]
mov edx [ edi + 0x68 ]
lea esp [ esp ]
mov edx [ edi + 0x68 ]
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp ebx edx
jge r-xdata
cmp ebx edx
jge r-xdata
mov esi [ edi + 0x68 ]
jmp r-xdata
cmp ebx ecx
jge r-xdata
add esi eax
jmp r-xdata
mov esi ecx
cmp [ esp + 0x28 ] 0x0
jne r-xdata
nop
mov edx 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov edx 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov eax 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
push 0x0
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
mov [ edi + 0x58 ] edx
cmp eax edx
jmp r-xdata
movzx eax [ eax + lookup_table_43f6fd ]
jmp [ eax * 4 + jump_table_43f6ed ]
cmp eax 0x20
je r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
cmp eax 0x20
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xa
jl r-xdata
cmp eax 0xd
jle r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
mov cl [ ecx + edx ]
and cl 0x4
inc esi
test cl cl
jne r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x34 ]
mov dl [ edx + ecx ]
and dl 0x4
inc esi
test dl dl
je r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
mov cl [ ecx + edx ]
and cl 0x1
inc esi
test cl cl
jne r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x34 ]
mov dl [ edx + ecx ]
and dl 0x1
inc esi
test dl dl
je r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
mov cl [ ecx + edx ]
and cl 0x10
inc esi
test cl cl
jne r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x34 ]
mov dl [ edx + ecx ]
and dl 0x10
inc esi
test dl dl
je r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
add eax edx
cmp eax ebx
jle r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
movzx eax [ esi ]
add esi edx
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
add esi edx
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
add esi edx
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
add esi edx
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
add esi edx
cmp eax 0xc0
jb r-xdata
cmp ecx 0x80
jae r-xdata
mov eax ecx
and eax 0x3f
movzx eax [ eax + r--data ]
lea edx [ eax + eax * 2 ]
add edx edx
mov [ esp + 0x18 ] edx
mov edx [ eax * 4 + r--data ]
and edx ecx
mov ecx [ esp + 0x18 ]
shl edx cl
mov ecx edx
mov [ esp + 0x24 ] ecx
test eax eax
jle r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov eax [ edi + 0x68 ]
add esi edx
cmp esi eax
jae r-xdata
mov edx [ edi + 0x34 ]
movzx eax al
test [ eax + edx ] 0x1
jne r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov eax [ edi + 0x68 ]
add esi edx
cmp esi eax
jae r-xdata
movzx edx al
mov eax [ edi + 0x34 ]
test [ edx + eax ] 0x10
jne r-xdata
mov al [ esi ]
cmp al 0x80
jae r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ edi + 0x20 ]
mov [ esp + 0x14 ] eax
jge r-xdata
lea esp [ esp ]
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ edi + 0x20 ]
mov [ esp + 0x14 ] eax
jge r-xdata
mov eax [ esp + 0x28 ]
sub eax [ edi + 0x24 ]
mov [ esp + 0x28 ] eax
add eax 0x2
push eax
lea eax [ ebx + 0x2 ]
push eax
call sub_4151d0
add esp 0x8
test eax eax
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
mov ebp [ esp + 0x20 ]
jmp r-xdata
mov ecx [ edi + 0x90 ]
test ecx ecx
je r-xdata
add ecx 0x2
mov [ esp + 0x148 ] ecx
add ebp 0x3
jmp r-xdata
cmp esi [ esp + 0x28 ]
jne r-xdata
cmp eax ecx
mov [ esp + 0x2c ] esi
mov [ esp + 0x14 ] eax
jge r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x15c ]
inc eax
push eax
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x15c ]
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp esi [ esp + 0x2c ]
jb r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov eax [ esp + 0x14 ]
inc eax
inc esi
cmp eax ebx
mov [ esp + 0x14 ] eax
jl r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
cmp edx 0xff
jbe r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov [ esp + 0x34 ] eax
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
movzx eax [ esi ]
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ esp + 0x20 ]
shr eax 0x3
mov al [ eax + ecx ]
inc esi
test al dl
je r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov cl [ esi - 0x1 ]
dec esi
and cl 0xc0
cmp cl 0x80
je r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] ebx
jg r-xdata
mov eax [ esp + 0x14 ]
inc eax
add esi ebx
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov ebx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14c ]
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
inc ebx
push esi
mov [ esp + 0x38 ] ebx
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and ebx edx
add ecx ecx
shl ebx cl
mov edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jle r-xdata
movzx edx [ esi ]
inc esi
cmp [ esp + 0x24 ] edx
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x15c ]
inc ebx
cmp esi [ esp + 0x144 ]
jbe r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x30 ]
movzx eax [ ecx + edx ]
inc esi
cmp [ esp + 0x24 ] eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x15c ]
inc ebx
cmp esi [ esp + 0x144 ]
jbe r-xdata
inc ebx
inc esi
cmp ebx [ esp + 0x1c ]
jl r-xdata
mov edx [ edi + 0x68 ]
sub edx [ esp + 0x20 ]
cmp esi edx
ja r-xdata
mov ebx [ esp + 0x15c ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
push esi
call sub_411b63
add esp 0xc
test eax eax
jne r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp esi [ esp + 0x2c ]
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
cmp [ esp + 0x24 ] edx
je r-xdata
mov ebx [ esp + 0x15c ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp [ esp + 0x14 ] ebx
jge r-xdata
cmp esi [ esp + 0x2c ]
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
mov ecx [ edi + 0x30 ]
movzx ecx [ edx + ecx ]
cmp [ esp + 0x24 ] ecx
je r-xdata
mov ebx [ esp + 0x15c ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
jmp r-xdata
mov ecx [ esp + 0x20 ]
movzx eax [ esi ]
add ecx 0xfffffffa
inc esi
cmp ecx 0xf
ja r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
movzx eax [ esi ]
inc esi
cmp eax 0xc0
jb r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
cmp esi [ esp + 0x2c ]
jb r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx eax [ esi ]
cmp eax 0xd
jne r-xdata
movzx eax [ esi ]
cmp eax 0x9
je r-xdata
movzx eax [ esi ]
cmp eax 0x9
je r-xdata
movzx eax [ esi ]
cmp eax 0xa
je r-xdata
movzx eax [ esi ]
cmp eax 0xa
je r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x4
jne r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x4
je r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x1
jne r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x1
je r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x10
jne r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x34 ]
test [ ecx + edx ] 0x10
je r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
jmp r-xdata
mov eax [ edi + 0x68 ]
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov ebx [ esp + 0x15c ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
inc ebx
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
movzx eax [ esi ]
cmp eax 0xc0
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
movzx edx [ esi ]
cmp edx 0xc0
jb r-xdata
mov eax [ esp + 0x14 ]
add eax edx
add esi edx
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
lea edx [ eax + 0x1 ]
jmp r-xdata
jle r-xdata
cmp esi edx
jae r-xdata
cmp [ edi + 0x5c ] 0x0
jne r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
cmp eax 0xa0
je r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
cmp eax 0xa0
jne r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
cmp eax 0xd
jle r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
cmp eax 0x85
jne r-xdata
inc eax
cmp eax ebx
jle r-xdata
inc eax
cmp eax ebx
jle r-xdata
inc eax
cmp eax ebx
jle r-xdata
inc eax
cmp eax ebx
jle r-xdata
inc eax
cmp eax ebx
jle r-xdata
inc eax
cmp eax ebx
jle r-xdata
add esi edx
cmp esi [ edi + 0x68 ]
jae r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ecx
jae r-xdata
jmp r-xdata
mov edx 0x1
inc esi
cmp esi [ edi + 0x68 ]
jb r-xdata
cmp eax 0xd
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx * 4 + r--data ]
and ecx eax
mov eax ecx
mov ecx [ esp + 0x24 ]
shl eax cl
test edx edx
jle r-xdata
cmp eax 0x180e
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx * 4 + r--data ]
and ecx eax
mov eax ecx
mov ecx [ esp + 0x24 ]
shl eax cl
test edx edx
jle r-xdata
cmp eax 0x180e
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx * 4 + r--data ]
and ecx eax
mov eax ecx
mov ecx [ esp + 0x24 ]
shl eax cl
test edx edx
jle r-xdata
cmp eax 0x85
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx * 4 + r--data ]
and ecx eax
mov eax ecx
mov ecx [ esp + 0x24 ]
shl eax cl
test edx edx
jle r-xdata
cmp eax 0x85
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx * 4 + r--data ]
and ecx eax
mov eax ecx
mov ecx [ esp + 0x24 ]
shl eax cl
test edx edx
jle r-xdata
mov eax [ esp + 0x14 ]
add eax edx
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
mov eax [ edi + 0x34 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov edx 0x1
movzx edx [ esi ]
mov ecx [ esp + 0x18 ]
sub ecx 0x6
and edx 0x3f
shl edx cl
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x24 ]
dec eax
or ecx edx
inc esi
mov [ esp + 0x24 ] ecx
test eax eax
jg r-xdata
movzx edx al
mov eax [ edi + 0x34 ]
mov dl [ edx + eax ]
and dl 0x4
inc esi
test dl dl
je r-xdata
add ecx edx
cmp ecx ebx
jle r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
je r-xdata
mov edx 0x1
mov edx [ edi + 0x34 ]
movzx eax al
mov al [ eax + edx ]
and al 0x1
inc esi
test al al
je r-xdata
add ecx edx
cmp ecx ebx
jle r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
je r-xdata
mov edx 0x1
mov edx [ edi + 0x34 ]
movzx eax al
mov al [ eax + edx ]
and al 0x10
inc esi
test al al
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x28 ]
movzx edx [ eax ]
movzx ecx [ eax + 0x1 ]
shl edx 0x8
or ecx edx
mov edx [ edi + 0x90 ]
cmp ecx [ edx + 0x4 ]
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ esp + 0x18 ] eax
lea esp [ esp ]
mov ecx [ esp + 0x28 ]
movzx eax [ ecx ]
movzx edx [ ecx + 0x1 ]
shl eax 0x8
or eax edx
add eax eax
cmp eax [ esp + 0x148 ]
jge r-xdata
cmp [ ecx + 0x4 ] eax
jne r-xdata
mov ecx [ esp + 0x20 ]
cmp [ ecx ] 0x61
sbb eax eax
and eax 0xfffffffe
add eax 0x2
cmp [ ebp ] 0x57
mov [ esp + 0x158 ] eax
jne r-xdata
mov eax [ esp + 0x15c ]
inc eax
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x24 ]
push ecx
push edi
push ebx
push esi
push edx
call sub_432196
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
jmp r-xdata
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov al [ esi - 0x1 ]
dec esi
and al 0xc0
cmp al 0x80
je r-xdata
cmp eax ecx
mov [ edi + 0x58 ] ecx
jg r-xdata
mov ecx edx
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x20 ]
shr edx 0x3
mov dl [ edx + ecx ]
test dl al
je r-xdata
cmp [ esp + 0x24 ] 0x4e
je r-xdata
mov ebx [ esp + 0x1c ]
inc eax
mov [ esp + 0x18 ] eax
movzx eax [ ebx + esi ]
mov ebx [ esp + 0x18 ]
and eax 0x3f
sub ecx 0x6
shl eax cl
inc ebx
mov [ esp + 0x18 ] ebx
or edx eax
mov eax [ esp + 0x34 ]
cmp ebx eax
jle r-xdata
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
inc [ esp + 0x14 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
cmp esi ebx
jmp r-xdata
cmp eax 0xff
jbe r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
jmp r-xdata
lea ebx [ eax + 0x1 ]
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
movzx ebx [ esi ]
mov edx [ esp + 0x24 ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec eax
inc esi
or edx ebx
mov [ esp + 0x24 ] edx
test eax eax
jg r-xdata
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc [ esp + 0x14 ]
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
cmp esi [ esp + 0x2c ]
jae r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
cmp esi ecx
jae r-xdata
jmp r-xdata
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
inc [ esp + 0x14 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
cmp esi [ esp + 0x2c ]
jae r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
cmp esi eax
jae r-xdata
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push esi
call sub_411b63
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ ecx ]
cmp esi [ edi + 0x68 ]
jb r-xdata
add esi [ esp + 0x20 ]
inc ebx
cmp ebx [ esp + 0x1c ]
jl r-xdata
movzx eax [ esi ]
inc esi
cmp [ esp + 0x24 ] eax
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x15c ]
inc ebx
cmp esi [ esp + 0x144 ]
jbe r-xdata
inc eax
inc esi
cmp eax ebx
jl r-xdata
mov ecx esi
dec esi
cmp ecx [ esp + 0x2c ]
je r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
cmp [ esp + 0x24 ] edx
je r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
lea ecx [ eax + eax * 2 ]
mov [ esp + 0x18 ] eax
mov eax [ eax * 4 + r--data ]
and eax edx
add ecx ecx
shl eax cl
mov [ esp + 0x20 ] 0x1
mov edx eax
mov eax [ esp + 0x18 ]
cmp eax 0x1
mov [ esp + 0x1c ] edx
jl r-xdata
movzx ecx [ esi ]
mov edx [ edi + 0x30 ]
movzx eax [ ecx + edx ]
inc esi
cmp [ esp + 0x24 ] eax
je r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x15c ]
inc ebx
cmp esi [ esp + 0x144 ]
jbe r-xdata
inc eax
inc esi
cmp eax ebx
jl r-xdata
mov ecx esi
dec esi
cmp ecx [ esp + 0x2c ]
je r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
cmp eax 0x100
jae r-xdata
mov edx eax
and edx 0x3f
movzx edx [ edx + r--data ]
lea ecx [ edx + edx * 2 ]
mov [ esp + 0x18 ] edx
mov edx [ edx * 4 + r--data ]
and edx eax
add ecx ecx
shl edx cl
mov [ esp + 0x20 ] 0x1
mov eax edx
mov edx [ esp + 0x18 ]
cmp edx 0x1
mov [ esp + 0x1c ] eax
jl r-xdata
jmp [ ecx * 4 + jump_table_43f839 ]
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
push 0x0
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
add ecx 0xfffffffa
cmp ecx 0xf
ja r-xdata
mov edx eax
and edx 0x3f
movzx edx [ edx + r--data ]
mov ebx [ edx * 4 + r--data ]
lea ecx [ edx + edx * 2 ]
and ebx eax
add ecx ecx
shl ebx cl
mov eax ebx
test edx edx
jle r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebx [ esp + 0x15c ]
inc ebx
jmp r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
cmp eax 0xa
je r-xdata
inc esi
cmp esi ecx
jae r-xdata
cmp eax 0x20
je r-xdata
inc ebx
inc esi
cmp ebx ecx
jl r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0xb
je r-xdata
inc ebx
inc esi
cmp ebx ecx
jl r-xdata
cmp eax 0xb
je r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
inc ebx
inc esi
cmp ebx eax
jl r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x68 ]
cmp esi eax
jae r-xdata
inc esi
cmp esi eax
jae r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
mov edx esi
dec esi
cmp edx [ esp + 0x2c ]
je r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
cmp eax 0xd
jne r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
and ebx eax
lea ecx [ edx + edx * 2 ]
add ecx ecx
shl ebx cl
mov [ esp + 0x34 ] edx
mov eax ebx
mov ebx 0x1
cmp edx ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp eax 0x180e
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
and ebx eax
lea ecx [ edx + edx * 2 ]
add ecx ecx
shl ebx cl
mov [ esp + 0x34 ] edx
mov eax ebx
mov ebx 0x1
cmp edx ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp eax 0x85
ja r-xdata
mov ecx eax
and ecx 0x3f
movzx edx [ ecx + r--data ]
mov ebx [ edx * 4 + r--data ]
and ebx eax
lea ecx [ edx + edx * 2 ]
add ecx ecx
shl ebx cl
mov [ esp + 0x34 ] edx
mov eax ebx
mov ebx 0x1
cmp edx ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
cmp edx 0x100
jae r-xdata
mov eax edx
and eax 0x3f
movzx eax [ eax + r--data ]
mov ebx [ eax * 4 + r--data ]
and ebx edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl ebx cl
mov edx ebx
mov ebx 0x1
cmp eax ebx
mov [ esp + 0x18 ] ebx
jl r-xdata
jmp r-xdata
cmp ecx edx
je r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
jmp r-xdata
cmp eax 0x85
je r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
mov eax [ esp + 0x14 ]
add eax edx
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp ecx edx
je r-xdata
cmp eax 0x85
je r-xdata
je r-xdata
mov ecx [ esp + 0x24 ]
dec edx
mov [ esp + 0x34 ] edx
movzx edx [ esi ]
sub ecx 0x6
and edx 0x3f
shl edx cl
inc esi
mov [ esp + 0x24 ] ecx
or eax edx
mov edx [ esp + 0x34 ]
test edx edx
jg r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
mov ecx [ esp + 0x24 ]
dec edx
mov [ esp + 0x34 ] edx
movzx edx [ esi ]
sub ecx 0x6
and edx 0x3f
shl edx cl
inc esi
mov [ esp + 0x24 ] ecx
or eax edx
mov edx [ esp + 0x34 ]
test edx edx
jg r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
mov ecx [ esp + 0x24 ]
dec edx
mov [ esp + 0x34 ] edx
movzx edx [ esi ]
sub ecx 0x6
and edx 0x3f
shl edx cl
inc esi
mov [ esp + 0x24 ] ecx
or eax edx
mov edx [ esp + 0x34 ]
test edx edx
jg r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
mov ecx [ esp + 0x24 ]
dec edx
mov [ esp + 0x34 ] edx
movzx edx [ esi ]
sub ecx 0x6
and edx 0x3f
shl edx cl
inc esi
mov [ esp + 0x24 ] ecx
or eax edx
mov edx [ esp + 0x34 ]
test edx edx
jg r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
mov ecx [ esp + 0x24 ]
dec edx
mov [ esp + 0x34 ] edx
movzx edx [ esi ]
sub ecx 0x6
and edx 0x3f
shl edx cl
inc esi
mov [ esp + 0x24 ] ecx
or eax edx
mov edx [ esp + 0x34 ]
test edx edx
jg r-xdata
jmp r-xdata
inc ecx
cmp ecx ebx
jle r-xdata
cmp esi eax
jae r-xdata
jmp r-xdata
mov edx 0x1
inc ecx
cmp ecx ebx
jle r-xdata
cmp esi eax
jae r-xdata
jmp r-xdata
mov edx 0x1
inc ecx
cmp ecx ebx
jle r-xdata
movzx ecx [ ebx ]
movzx eax [ ebx + 0x1 ]
mov edx [ edi + 0x90 ]
shl ecx 0x8
or eax ecx
cmp eax [ edx + 0x4 ]
je r-xdata
mov [ esp + 0x20 ] 0x0
cmp eax [ edi + 0x28 ]
ja r-xdata
movzx eax [ ebx ]
movzx ecx [ ebx + 0x1 ]
shl eax 0x8
or eax ecx
add eax eax
cmp eax [ esp + 0x148 ]
jge r-xdata
mov [ esp + 0x20 ] 0x0
cmp ecx [ edi + 0x28 ]
ja r-xdata
mov edx [ edi + 0xc ]
cmp [ edx + eax * 4 ] 0x0
jge r-xdata
mov ebx ecx
mov eax [ ebx ]
mov [ edi + 0x90 ] eax
mov edx [ ebx + 0x14 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x10 ]
add edx edx
add edx edx
push edx
mov [ esp + 0x148 ] ecx
mov ecx [ edi + 0xc ]
push eax
push ecx
call sub_410f70
mov edx [ ebx + 0x18 ]
mov eax [ esp + 0x44 ]
mov ebp [ ebx + 0x8 ]
add esp 0xc
mov [ esp + 0x148 ] edx
mov [ esp + 0x150 ] eax
jmp r-xdata
mov eax [ esp + 0x15c ]
mov ecx [ esp + 0x158 ]
mov edx [ esp + 0x38 ]
inc eax
push eax
mov eax [ esp + 0x14c ]
push ecx
mov ecx [ esp + 0x14c ]
push ebx
push edx
mov edx [ esp + 0x30 ]
push edi
push eax
push ecx
push edx
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x148 ]
inc edx
push edx
mov edx [ esp + 0x148 ]
push 0x0
push ebx
push eax
push edi
push ecx
push edx
add ebp 0x3
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
push ecx
mov ecx [ esp + 0x14c ]
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov eax [ edi + 0x78 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
add esi ebx
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov edx [ esp + 0x1c ]
cmp [ esp + 0x14 ] edx
jge r-xdata
mov ecx esi
dec esi
cmp ecx [ esp + 0x2c ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov eax [ esp + 0x14 ]
add esi [ esp + 0x18 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
jbe r-xdata
mov ecx eax
and ecx 0x7
mov edx 0x1
shl edx cl
mov ecx [ esp + 0x20 ]
shr eax 0x3
mov al [ eax + ecx ]
test al dl
je r-xdata
cmp [ esp + 0x24 ] 0x4e
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
dec esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
dec esi
test eax eax
jne r-xdata
mov edx [ esp + 0x154 ]
mov ecx [ esp + 0x148 ]
add esi [ esp + 0x20 ]
inc [ esp + 0x14 ]
push ebx
push eax
mov eax [ esp + 0x158 ]
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
sub esi [ esp + 0x20 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov eax [ edi + 0x68 ]
sub eax [ esp + 0x20 ]
cmp esi eax
ja r-xdata
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
inc [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14c ]
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
cmp [ esp + 0x24 ] ecx
je r-xdata
mov edx ecx
and edx 0x3f
movzx eax [ edx + r--data ]
lea edx [ eax + eax * 2 ]
add edx edx
mov [ esp + 0x18 ] edx
mov edx [ eax * 4 + r--data ]
and edx ecx
mov ecx [ esp + 0x18 ]
shl edx cl
mov ecx edx
mov [ esp + 0x38 ] ecx
test eax eax
jle r-xdata
dec esi
cmp esi [ esp + 0x2c ]
jae r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
cmp esi ecx
jae r-xdata
jmp r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jl r-xdata
inc eax
lea ebx [ ebx ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
inc [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14c ]
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0xc0
jb r-xdata
dec esi
cmp esi [ esp + 0x2c ]
jae r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
jmp r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp eax edx
mov [ edi + 0x58 ] edx
jg r-xdata
cmp [ esp + 0x24 ] eax
je r-xdata
mov ecx [ edi + 0x30 ]
movzx eax [ ecx + eax ]
inc edx
nop
add eax 0xfffffff6
cmp eax 0x7b
ja r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0xa
jb r-xdata
cmp eax 0xa
jb r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x4
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x1
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x10
je r-xdata
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
inc [ esp + 0x14 ]
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
jmp r-xdata
jmp [ ecx * 4 + jump_table_43f7f9 ]
jmp r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x148 ]
push ebx
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
push ebp
push esi
call sub_439699
add esp 0x24
dec esi
test eax eax
jne r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
push 0x0
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
inc esi
cmp [ edi + 0x5c ] 0x0
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp eax 0xa0
je r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
cmp eax 0xa0
jne r-xdata
cmp eax 0xc
je r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
cmp eax 0xc
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
jmp r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx ecx
jl r-xdata
mov dl [ esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
jmp r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp eax edx
mov [ edi + 0x58 ] edx
jg r-xdata
cmp eax 0xa
je r-xdata
inc esi
cmp esi [ edi + 0x68 ]
jae r-xdata
inc edx
movzx edx [ ebx + esi ]
mov ebx [ esp + 0x18 ]
and edx 0x3f
sub ecx 0x6
shl edx cl
inc ebx
mov [ esp + 0x18 ] ebx
or eax edx
mov edx [ esp + 0x34 ]
cmp ebx edx
jle r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
inc edx
movzx edx [ ebx + esi ]
mov ebx [ esp + 0x18 ]
and edx 0x3f
sub ecx 0x6
shl edx cl
inc ebx
mov [ esp + 0x18 ] ebx
or eax edx
mov edx [ esp + 0x34 ]
cmp ebx edx
jle r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
inc edx
movzx edx [ ebx + esi ]
mov ebx [ esp + 0x18 ]
and edx 0x3f
sub ecx 0x6
shl edx cl
inc ebx
mov [ esp + 0x18 ] ebx
or eax edx
mov edx [ esp + 0x34 ]
cmp ebx edx
jle r-xdata
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx [ edi + 0x34 ]
test [ edx + ecx ] 0x4
jne r-xdata
inc eax
lea esp [ esp ]
mov ecx [ edi + 0x34 ]
test [ edx + ecx ] 0x4
je r-xdata
inc eax
lea ecx [ ecx ]
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx [ edi + 0x34 ]
test [ edx + ecx ] 0x1
jne r-xdata
inc eax
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
mov ecx [ edi + 0x34 ]
test [ edx + ecx ] 0x1
je r-xdata
inc eax
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx [ edi + 0x34 ]
test [ edx + ecx ] 0x10
jne r-xdata
inc eax
jmp r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
mov ecx [ edi + 0x34 ]
test [ edx + ecx ] 0x10
je r-xdata
inc eax
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
inc esi
jmp r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
jmp r-xdata
add esi edx
cmp esi [ edi + 0x68 ]
jb r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
cmp [ edi + 0x5c ] 0x0
jne r-xdata
cmp eax 0x2027
jbe r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
cmp eax 0x3000
jne r-xdata
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
cmp eax 0xa0
ja r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
cmp eax 0x2029
jbe r-xdata
cmp eax 0xa
jb r-xdata
cmp eax 0x2029
ja r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
cmp eax 0xa
jb r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov edx 0x1
jmp r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ edi + 0x20 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x14 ] eax
jl r-xdata
mov eax [ esp + 0x28 ]
sub eax [ edi + 0x24 ]
mov [ esp + 0x28 ] eax
add eax 0x2
push eax
lea eax [ ebx + 0x2 ]
push eax
call sub_4151d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ edi + 0x20 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x14 ] eax
jl r-xdata
mov edx [ edi + 0xc ]
cmp [ edx + eax * 4 ] 0x0
jge r-xdata
add ebp 0x3
cmp [ esp + 0x158 ] eax
jne r-xdata
sub esi ebx
cmp esi [ esp + 0x2c ]
jae r-xdata
cmp esi [ esp + 0x2c ]
jb r-xdata
cmp esi [ edi + 0x68 ]
jb r-xdata
jmp r-xdata
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x24 ]
push eax
push edi
push ebx
push esi
push ecx
call sub_432196
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ebx [ esp + 0x144 ]
inc [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14c ]
push 0x0
push edx
push eax
push edi
push ecx
push ebx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
jmp r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x34 ] ecx
or eax ebx
test edx edx
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp esi [ esp + 0x2c ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
cmp [ esp + 0x14 ] ebx
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
inc [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14c ]
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
movzx edx [ esi ]
mov ecx [ esp + 0x18 ]
sub ecx 0x6
and edx 0x3f
shl edx cl
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x38 ]
dec eax
or ecx edx
inc esi
mov [ esp + 0x38 ] ecx
test eax eax
jg r-xdata
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov al [ esi - 0x1 ]
dec esi
and al 0xc0
cmp al 0x80
je r-xdata
jmp r-xdata
mov edx [ esp + 0x20 ]
movzx eax [ edx + esi ]
and eax 0x3f
sub ecx 0x6
shl eax cl
inc edx
mov [ esp + 0x20 ] edx
or [ esp + 0x1c ] eax
mov eax [ esp + 0x18 ]
cmp edx eax
jle r-xdata
mov edx [ esp + 0x1c ]
cmp [ esp + 0x14 ] ebx
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0x3f
movzx eax [ eax + r--data ]
lea edx [ eax + eax * 2 ]
add edx edx
mov [ esp + 0x18 ] edx
mov edx [ eax * 4 + r--data ]
and edx ecx
mov ecx [ esp + 0x18 ]
shl edx cl
mov ecx edx
mov [ esp + 0x38 ] ecx
test eax eax
jle r-xdata
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov eax [ esp + 0x148 ]
push ebx
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x14 ]
inc eax
add esi edx
cmp eax ebx
mov [ esp + 0x14 ] eax
jl r-xdata
mov eax [ esp + 0x20 ]
movzx edx [ eax + esi ]
and edx 0x3f
sub ecx 0x6
shl edx cl
inc eax
mov [ esp + 0x20 ] eax
or [ esp + 0x1c ] edx
mov edx [ esp + 0x18 ]
cmp eax edx
jle r-xdata
mov eax [ esp + 0x1c ]
movzx edx [ eax + lookup_table_43f889 ]
jmp [ edx * 4 + jump_table_43f879 ]
cmp eax 0x20
je r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0xd
jbe r-xdata
cmp eax 0xd
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp ecx 0x1
je r-xdata
cmp eax 0xd
ja r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0x180e
ja r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0x85
ja r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
cmp eax 0x100
jae r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x154 ]
mov edx [ esp + 0x150 ]
mov ebx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14c ]
push 0x0
push ecx
mov ecx [ esp + 0x150 ]
push edx
push edi
push eax
push ecx
push ebp
inc ebx
push esi
mov [ esp + 0x38 ] ebx
call sub_439699
add esp 0x24
test eax eax
je r-xdata
movzx ebx [ esi ]
sub ecx 0x6
and ebx 0x3f
shl ebx cl
dec edx
inc esi
mov [ esp + 0x34 ] ecx
or eax ebx
test edx edx
jg r-xdata
cmp ecx 0x1
je r-xdata
cmp esi [ esp + 0x2c ]
jae r-xdata
inc ebx
inc esi
cmp ebx [ esp + 0x1c ]
jl r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
jmp r-xdata
cmp esi ecx
jae r-xdata
jmp r-xdata
cmp eax 0xb
je r-xdata
inc ebx
cmp ebx edx
jl r-xdata
jmp r-xdata
inc ebx
inc esi
cmp ebx ecx
jl r-xdata
cmp eax 0xd
je r-xdata
cmp eax 0xd
je r-xdata
inc esi
cmp esi [ edi + 0x68 ]
jae r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
mov edx [ esp + 0x1c ]
jmp r-xdata
mov ecx [ edi + 0x1c ]
sub eax ecx
cmp esi eax
ja r-xdata
mov edx [ esp + 0x30 ]
push edx
lea edx [ edi + 0x1c ]
push edx
push eax
push ecx
push esi
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
cmp esi eax
jae r-xdata
jmp r-xdata
inc esi
cmp esi [ edi + 0x68 ]
jb r-xdata
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
mov ecx [ esp + 0x148 ]
push ebx
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
mov cl [ esi - 0x1 ]
dec esi
and cl 0xc0
cmp cl 0x80
je r-xdata
jmp r-xdata
add esi edx
cmp [ edi + 0x5c ] 0x0
jne r-xdata
cmp [ esi ] 0xa
jne r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
mov ecx 0x1
cmp eax 0xa0
ja r-xdata
xor ecx ecx
cmp eax 0x2029
ja r-xdata
mov ecx 0x1
jmp r-xdata
cmp eax 0xa
jb r-xdata
jmp r-xdata
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
jmp r-xdata
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
jmp r-xdata
movzx ebx [ ebx + esi ]
and ebx 0x3f
sub ecx 0x6
shl ebx cl
or edx ebx
mov ebx [ esp + 0x18 ]
inc ebx
cmp ebx eax
mov [ esp + 0x18 ] ebx
jle r-xdata
add esi eax
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
cmp eax 0x2029
ja r-xdata
cmp [ esi ] 0xa
jne r-xdata
jbe r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jle r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
cmp eax 0x2000
jb r-xdata
mov edx 0x1
jmp r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
mov edx 0x1
jmp r-xdata
cmp eax 0xd
jbe r-xdata
mov edx 0x1
jmp r-xdata
cmp eax 0xd
ja r-xdata
add ebx [ edi + 0x24 ]
mov edx [ esp + 0x18 ]
lea ecx [ ebx + 0x2 ]
push ecx
push edx
call sub_4151d0
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
add ebx [ edi + 0x24 ]
mov edx [ esp + 0x18 ]
lea ecx [ ebx + 0x2 ]
push ecx
push edx
call sub_4151d0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x15c ]
mov eax [ esp + 0x158 ]
mov ecx [ esp + 0x38 ]
inc edx
push edx
mov edx [ esp + 0x14c ]
push eax
mov eax [ esp + 0x14c ]
push ebx
push ecx
mov ecx [ esp + 0x30 ]
push edi
push edx
push eax
push ecx
push esi
call sub_439699
add esp 0x24
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ebp [ esp + 0x20 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp esi [ esp + 0x144 ]
jbe r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x150 ]
inc [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14c ]
push 0x0
push eax
mov eax [ esp + 0x150 ]
push ecx
push edi
push edx
push eax
add esi ebx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ecx [ esp + 0x34 ]
cmp [ esp + 0x14 ] ebx
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
cmp [ esp + 0x24 ] ecx
je r-xdata
mov eax [ edi + 0x30 ]
movzx ecx [ eax + ecx ]
movzx edx [ esi ]
mov ecx [ esp + 0x18 ]
sub ecx 0x6
and edx 0x3f
shl edx cl
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x38 ]
dec eax
or ecx edx
inc esi
mov [ esp + 0x38 ] ecx
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov al [ esi - 0x1 ]
dec esi
and al 0xc0
cmp al 0x80
je r-xdata
jmp r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp [ edi + 0x5c ] 0x0
jne r-xdata
cmp eax 0xa0
je r-xdata
cmp eax 0xa0
jne r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x85
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
cmp eax 0x85
je r-xdata
je r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
cmp eax 0x205f
ja r-xdata
je r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
cmp eax 0x2028
jb r-xdata
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x4
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x4
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x1
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x1
je r-xdata
mov ecx [ edi + 0x34 ]
test [ eax + ecx ] 0x10
jne r-xdata
mov edx [ edi + 0x34 ]
test [ eax + edx ] 0x10
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ecx [ esp + 0x34 ]
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
cmp eax 0xc
je r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x85
jne r-xdata
inc ebx
cmp ebx edx
jl r-xdata
nop
cmp ecx 0x1
je r-xdata
inc esi
cmp esi [ edi + 0x68 ]
jae r-xdata
mov al [ esi ]
cmp al [ edi + 0x2c ]
jne r-xdata
mov edx [ esp + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov edx 0x1
cmp esi [ edi + 0x68 ]
jae r-xdata
jmp r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
inc esi
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp eax 0x2000
jb r-xdata
mov eax [ esp + 0x14 ]
inc eax
add esi edx
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
add esi edx
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
xor eax eax
cmp [ esp + 0x20 ] 0x14
sete al
cmp ecx eax
je r-xdata
cmp eax 0xd
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx 0x1
jmp r-xdata
inc esi
jmp r-xdata
cmp eax 0xc
ja r-xdata
mov edx 0x1
jmp r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x1
mov [ edi + 0x58 ] 0x1
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x150 ]
inc [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14c ]
push 0x0
push edx
mov edx [ esp + 0x150 ]
push eax
push edi
push ecx
push edx
push ebp
push esi
call sub_439699
add esp 0x24
test eax eax
je r-xdata
cmp [ esi ] 0xa
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ edi + 0x5c ] 0x0
jne r-xdata
cmp eax 0x2027
jbe r-xdata
cmp esi [ edi + 0x68 ]
jae r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
cmp eax 0x3000
jne r-xdata
je r-xdata
cmp eax 0xa0
ja r-xdata
cmp eax 0x2029
jbe r-xdata
cmp eax 0xa
jb r-xdata
cmp eax 0x2029
ja r-xdata
cmp eax 0xa
jb r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
cmp eax 0x85
jne r-xdata
inc ebx
inc esi
cmp ebx ecx
jl r-xdata
jmp r-xdata
inc esi
cmp esi [ edi + 0x68 ]
jb r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
inc ebx
cmp ebx edx
jl r-xdata
nop
cmp ecx 0x1
je r-xdata
cmp eax 0xc
je r-xdata
xor eax eax
cmp [ esp + 0x20 ] 0x12
sete al
cmp ecx eax
je r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp eax 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn
inc esi
jmp r-xdata
jmp r-xdata
cmp eax 0x2029
ja r-xdata
cmp [ esi ] 0xa
jne r-xdata
jbe r-xdata
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp eax 0x2000
jb r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp eax 0xd
jbe r-xdata
jmp r-xdata
cmp eax 0xd
ja r-xdata
cmp esi edx
jae r-xdata
jmp r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
jmp r-xdata
inc esi
cmp esi [ edi + 0x68 ]
jb r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x2d ]
je r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
inc esi
jmp r-xdata
cmp eax 0xc
ja r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0x200a
jbe r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp eax 0x2028
je r-xdata
xor ecx ecx
jmp r-xdata
jmp r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0x2029
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_43f905
mov eax [ esp + 0x4 ]
sub esp 0x58
push esi
mov esi [ esp + 0x64 ]
test eax eax
je r-xdata
mov eax 0xfffffffe
pop esi
add esp 0x58
retn
test esi esi
je r-xdata
cmp [ eax ] 0x50435245
je r-xdata
movzx eax [ eax + 0x10 ]
mov [ esi ] eax
xor eax eax
pop esi
add esp 0x58
retn
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
lea edx [ esp + 0xc ]
push edx
push eax
call sub_43957c
add esp 0x10
test eax eax
jne r-xdata
mov eax 0xfffffffc
pop esi
add esp 0x58
retn
sub_43f95b
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
or esi 0xffffffff
mov edi edi
pop edi
pop esi
or eax 0xffffffff
pop ebp
retn
movzx edx [ edx + lookup_table_43fa17 ]
jmp [ edx * 4 + jump_table_43fa07 ]
xor edx edx
cmp ecx 0x58
sete dl
push edx
push edi
push eax
call sub_43f95b
add esp 0xc
test eax eax
jl r-xdata
add eax 0x2
cmp [ esp + 0x18 ] 0x0
je r-xdata
test esi esi
jge r-xdata
test esi esi
jge r-xdata
cmp esi eax
je r-xdata
mov esi eax
jmp r-xdata
movzx eax [ eax + 0x1 ]
cmp esi eax
jne r-xdata
test [ edi ] 0x1
movzx esi [ eax + 0x1 ]
je r-xdata
movzx ecx [ ebp + 0x1 ]
movzx edx [ ebp + 0x2 ]
shl ecx 0x8
or ecx edx
add ebp ecx
cmp [ ebp ] 0x54
je r-xdata
or esi 0x100
jmp r-xdata
push 0x1
push 0x1
lea eax [ ebp + 0x3 ]
push edi
push eax
call sub_4327a2
movzx ecx [ eax ]
lea edx [ ecx - 0x1c ]
add esp 0x10
cmp edx 0x44
ja r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
sub_43fa5c
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
cmp eax 0x5e
jne r-xdata
add esi 0x3
cmp [ esi ] 0x53
jne r-xdata
cmp eax 0x5f
jne r-xdata
push ebx
push ebp
jmp r-xdata
mov al [ esi ]
cmp al 0x64
jb r-xdata
add esi 0x6
cmp eax 0x58
je r-xdata
movzx ecx [ esi + 0x3 ]
movzx edx [ esi + 0x4 ]
shl ecx 0x8
or ecx edx
cmp ecx 0x20
mov eax 0x1
jge r-xdata
push esi
call sub_43fa5c
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebp
push esi
call sub_43fa5c
add esp 0xc
test eax eax
je r-xdata
cmp al 0x68
jbe r-xdata
push ebx
push ebp
push esi
call sub_43fa5c
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x5d
je r-xdata
push ebx
or eax ebp
push eax
shl eax cl
movzx eax [ edi + 0x1 ]
movzx ecx [ edi + 0x2 ]
shl eax 0x8
or eax ecx
add edi eax
cmp [ edi ] 0x54
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea esp [ esp ]
cmp eax 0x39
je r-xdata
movzx eax [ edi ]
movzx ecx [ eax + r--data ]
push 0x0
push 0x0
add ecx edi
push 0x0
push ecx
call sub_4327a2
mov esi eax
movzx eax [ esi ]
add esp 0x10
cmp eax 0x60
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
movzx edx [ esi + 0x1 ]
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
add esi edx
cmp [ esi ] 0x54
je r-xdata
push 0x0
push 0x0
push 0x0
add esi 0x3
push esi
call sub_4327a2
mov esi eax
movzx eax [ esi ]
add esp 0x10
cmp [ esi + 0x1 ] 0xc
jne r-xdata
cmp eax 0x3a
je r-xdata
test ebx ebp
jne r-xdata
cmp eax 0x42
je r-xdata
jmp r-xdata
cmp eax 0x1a
jne r-xdata
jmp r-xdata
sub_43fb83
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
cmp ecx 0x5f
jne r-xdata
push ebx
push ebp
jmp r-xdata
cmp ecx 0x58
je r-xdata
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x4 ]
shl ecx 0x8
or ecx edx
cmp ecx 0x20
mov edx 0x1
jge r-xdata
push esi
push eax
call sub_43fb83
add esp 0x10
test eax eax
jne r-xdata
push ebx
push ebp
push esi
push eax
call sub_43fb83
add esp 0x10
test eax eax
je r-xdata
cmp ecx 0x5d
je r-xdata
push ebx
or edx ebp
push edx
shl edx cl
movzx eax [ edi + 0x1 ]
movzx ecx [ edi + 0x2 ]
shl eax 0x8
or eax ecx
add edi eax
cmp [ edi ] 0x54
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp ecx 0x60
je r-xdata
movzx eax [ edi ]
movzx ecx [ eax + r--data ]
push 0x0
push 0x2
add ecx edi
push esi
push ecx
call sub_4327a2
movzx ecx [ eax ]
add esp 0x10
cmp ecx 0x5e
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
cmp ecx 0x39
je r-xdata
cmp [ eax + 0x1 ] 0xd
jne r-xdata
cmp ecx 0x3a
je r-xdata
test ebx ebp
jne r-xdata
cmp ecx 0x42
je r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x2
je r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x1a
jne r-xdata
jmp r-xdata
sub_43fc66
sub esp 0x8
mov eax [ esp + 0x20 ]
push ebx
mov ebx [ esp + 0x28 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x1c ]
and eax 0x8
push edi
mov edi [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
je r-xdata
mov al [ ebp ]
cmp al 0x5c
jne r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
movzx eax al
test [ eax + edx ] 0x80
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ ebx + 0x34 ]
push 0x0
push ecx
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x24 ] 0x0
call sub_432d18
add esp 0x14
cmp [ esp + 0x10 ] 0x0
mov edi eax
je r-xdata
movzx ecx [ ebp ]
mov eax [ ebx + 0xc ]
test [ ecx + eax ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
test edi edi
mov edi eax
je r-xdata
mov ebp [ esp + 0x2c ]
cmp [ ebp ] 0x23
jne r-xdata
lea ecx [ ecx ]
inc ebp
inc ebp
cmp edi 0xc0
jl r-xdata
mov al [ ebp ]
cmp al 0x2a
je r-xdata
nop
mov al [ ebp + 0x1 ]
inc ebp
mov [ esp + 0x2c ] ebp
test al al
je r-xdata
movzx edx [ ebp + 0x1 ]
inc ebp
test [ edx + eax ] 0x1
jne r-xdata
mov [ esp + 0x2c ] ebp
cmp [ esp + 0x14 ] 0x0
je r-xdata
and eax 0x3f
movzx eax [ eax + r--data ]
mov edx [ eax * 4 + r--data ]
lea ecx [ eax + eax * 2 ]
and edx edi
add ecx ecx
shl edx cl
mov edi edx
test eax eax
jle r-xdata
cmp al 0x3f
je r-xdata
cmp [ ebp ] 0x23
jne r-xdata
lea ecx [ ecx ]
mov ecx [ ebx + 0x58 ]
test ecx ecx
je r-xdata
jmp r-xdata
push 0x3
push r--data
push ebp
call sub_416685
add esp 0xc
test eax eax
je r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
je r-xdata
movzx edx [ ebp + 0x1 ]
inc ebp
test [ edx + eax ] 0x1
jne r-xdata
mov ecx [ ebx + 0x5c ]
mov edx [ ebx + 0x1c ]
sub edx ecx
cmp ebp edx
ja r-xdata
mov eax [ ebx + 0x1c ]
cmp ebp eax
jae r-xdata
movzx edx [ ebp ]
sub ecx 0x6
and edx 0x3f
shl edx cl
dec eax
inc ebp
mov [ esp + 0x2c ] ecx
or edi edx
test eax eax
jg r-xdata
test edi edi
jl r-xdata
movzx ecx [ ebp ]
mov eax [ ebx + 0xc ]
test [ ecx + eax ] 0x1
je r-xdata
lea ecx [ ecx ]
mov al [ ebp + 0x1 ]
inc ebp
mov [ esp + 0x2c ] ebp
test al al
jne r-xdata
cmp al [ ebx + 0x60 ]
jne r-xdata
push edi
lea edx [ ebx + 0x5c ]
push edx
push eax
push ecx
push ebp
call sub_43200a
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
jmp r-xdata
mov eax [ esp + 0x1c ]
add eax 0xfffffffa
cmp eax 0x17
ja r-xdata
mov ecx [ esp + 0x1c ]
lea eax [ ecx - 0x6 ]
cmp eax 0x18
ja r-xdata
mov ecx [ ebx + 0x5c ]
mov edx [ ebx + 0x1c ]
sub edx ecx
cmp ebp edx
ja r-xdata
mov eax [ ebx + 0x1c ]
cmp ebp eax
jae r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
add ebp [ ebx + 0x5c ]
mov [ esp + 0x2c ] ebp
jmp r-xdata
movzx edx [ eax + lookup_table_44055e ]
jmp [ edx * 4 + jump_table_44052e ]
movzx edx [ eax + lookup_table_440512 ]
jmp [ edx * 4 + jump_table_4404e2 ]
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
cmp al [ ebx + 0x60 ]
jne r-xdata
mov edx [ esp + 0x24 ]
push edx
lea edx [ ebx + 0x5c ]
push edx
push eax
push ecx
push ebp
call sub_43200a
add esp 0x14
test eax eax
je r-xdata
mov al [ ebp + 0x1 ]
cmp al [ ebx + 0x61 ]
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp edi 0xfffffffa
je r-xdata
xor eax eax
cmp edi 0xfffffff9
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp edi 0xfffffff8
je r-xdata
cmp edi 0xfffffff8
je r-xdata
xor eax eax
cmp edi 0xffffffed
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp edi 0xffffffec
jmp r-xdata
xor eax eax
cmp edi 0xffffffeb
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp edi 0xfffffff6
je r-xdata
cmp edi 0xfffffff7
jmp r-xdata
cmp edi 0xfffffff5
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp esi edi
je r-xdata
cmp edi 0x7f
jg r-xdata
cmp edi 0x7f
jg r-xdata
cmp edi 0x7f
jg r-xdata
cmp edi 0x7f
jg r-xdata
cmp edi 0x7f
jg r-xdata
cmp edi 0x7f
jg r-xdata
cmp edi 0x180e
jg r-xdata
cmp edi 0x85
jg r-xdata
mov ecx [ ebx + 0x58 ]
test ecx ecx
je r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
add ebp [ ebx + 0x5c ]
jmp r-xdata
neg edi
lea eax [ edi - 0x6 ]
cmp eax 0xf
ja r-xdata
cmp esi 0x7f
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
cmp edi 0xfffffff7
je r-xdata
cmp edi 0xfffffff9
je r-xdata
cmp edi 0xffffffee
je r-xdata
je r-xdata
cmp edi 0xfffffff9
jmp r-xdata
xor eax eax
cmp esi edi
pop edi
pop esi
pop ebp
setne al
pop ebx
add esp 0x8
retn
cmp esi 0x7f
jle r-xdata
cmp esi edi
je r-xdata
cmp esi 0x7f
jle r-xdata
test [ esp + 0x30 ] 0x1
je r-xdata
mov edx [ ebx + 0xc ]
test [ edi + edx ] 0x4
je r-xdata
mov eax [ ebx + 0xc ]
test [ edi + eax ] 0x4
je r-xdata
mov ecx [ ebx + 0xc ]
test [ edi + ecx ] 0x1
je r-xdata
mov edx [ ebx + 0xc ]
test [ edi + edx ] 0x1
je r-xdata
mov eax [ ebx + 0xc ]
test [ edi + eax ] 0x10
je r-xdata
mov ecx [ ebx + 0xc ]
test [ edi + ecx ] 0x10
je r-xdata
cmp edi 0x205f
jg r-xdata
je r-xdata
cmp edi 0x2028
jl r-xdata
je r-xdata
mov al [ ebp + 0x1 ]
cmp al [ ebx + 0x61 ]
je r-xdata
movzx eax [ eax + lookup_table_44059a ]
jmp [ eax * 4 + jump_table_440576 ]
mov eax [ esp + 0x28 ]
movzx esi [ eax ]
cmp esi 0xc0
jl r-xdata
cmp edi 0xfffffff6
cmp edi 0xfffffff5
je r-xdata
cmp edi 0xfffffff9
je r-xdata
cmp edi 0xffffffed
je r-xdata
je r-xdata
mov ebx [ esp + 0x28 ]
movzx esi [ ebx ]
cmp esi 0xc0
jl r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
movzx esi [ eax ]
cmp esi 0xc0
jl r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
cmp edi 0x3000
je r-xdata
je r-xdata
pop edi
pop esi
xor eax eax
cmp ecx 0x13
pop ebp
setne al
pop ebx
add esp 0x8
retn
cmp edi 0xa0
jg r-xdata
pop edi
pop esi
xor eax eax
cmp ecx 0x15
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp edi 0x2029
jg r-xdata
pop edi
pop esi
xor eax eax
cmp ecx 0x15
pop ebp
setne al
pop ebx
add esp 0x8
retn
cmp edi 0xa
jl r-xdata
cmp esi 0x7f
jg r-xdata
cmp esi 0x7f
jg r-xdata
cmp esi 0x7f
jg r-xdata
cmp esi 0x7f
jg r-xdata
cmp esi 0x7f
jg r-xdata
cmp esi 0x7f
jg r-xdata
cmp esi 0x180e
jg r-xdata
cmp esi 0x85
jg r-xdata
mov ecx esi
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov edx [ eax * 4 + r--data ]
and edx esi
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl edx cl
mov esi edx
mov edx 0x1
cmp eax edx
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
cmp edi 0xfffffff5
jmp r-xdata
cmp edi 0xffffffeb
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov eax esi
and eax 0x3f
movzx eax [ eax + r--data ]
mov edx [ eax * 4 + r--data ]
and edx esi
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl edx cl
mov esi edx
mov edx 0x1
cmp eax edx
jl r-xdata
mov edx [ ebx + 0x4 ]
movzx eax [ edx + edi ]
xor ecx ecx
cmp esi eax
setne cl
pop edi
pop esi
pop ebp
pop ebx
mov eax ecx
add esp 0x8
retn
cmp edi 0x80
jge r-xdata
mov ecx esi
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov edx [ eax * 4 + r--data ]
and edx esi
lea ecx [ eax + eax * 2 ]
add ecx ecx
shl edx cl
mov esi edx
mov edx 0x1
cmp eax edx
jl r-xdata
mov edx [ ebx + 0x4 ]
movzx eax [ edx + edi ]
xor ecx ecx
cmp esi eax
sete cl
pop edi
pop esi
pop ebp
pop ebx
mov eax ecx
add esp 0x8
retn
cmp edi 0x80
jge r-xdata
pop edi
pop esi
xor eax eax
cmp ecx 0x13
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp edi 0x2000
jl r-xdata
cmp edi 0x1680
je r-xdata
je r-xdata
cmp edi 0xd
jle r-xdata
mov ecx [ ebx + 0xc ]
test [ esi + ecx ] 0x4
je r-xdata
mov edx [ ebx + 0xc ]
test [ esi + edx ] 0x4
je r-xdata
mov eax [ ebx + 0xc ]
test [ esi + eax ] 0x1
je r-xdata
mov ecx [ ebx + 0xc ]
test [ esi + ecx ] 0x1
je r-xdata
mov edx [ ebx + 0xc ]
test [ esi + edx ] 0x10
je r-xdata
mov eax [ ebx + 0xc ]
test [ esi + eax ] 0x10
je r-xdata
cmp esi 0x205f
jg r-xdata
je r-xdata
cmp esi 0x2028
jl r-xdata
je r-xdata
mov ebp [ esp + 0x28 ]
movzx ebp [ edx + ebp ]
sub ecx 0x6
and ebp 0x3f
shl ebp cl
inc edx
or esi ebp
cmp edx eax
jle r-xdata
nop
or eax 0xffffffff
xor ecx ecx
cmp esi eax
setne cl
pop edi
pop esi
pop ebp
pop ebx
mov eax ecx
add esp 0x8
retn
mov eax [ ebx + 0x4 ]
movzx eax [ eax + edi ]
xor ecx ecx
cmp esi eax
setne cl
pop edi
pop esi
pop ebp
pop ebx
mov eax ecx
add esp 0x8
retn
mov ebp [ esp + 0x28 ]
movzx ebp [ edx + ebp ]
sub ecx 0x6
and ebp 0x3f
shl ebp cl
inc edx
or esi ebp
cmp edx eax
jle r-xdata
or eax 0xffffffff
xor ecx ecx
cmp esi eax
sete cl
pop edi
pop esi
pop ebp
pop ebx
mov eax ecx
add esp 0x8
retn
mov edx [ ebx + 0x4 ]
movzx eax [ edx + edi ]
xor ecx ecx
cmp esi eax
sete cl
pop edi
pop esi
pop ebp
pop ebx
mov eax ecx
add esp 0x8
retn
cmp edi 0x200a
jle r-xdata
pop edi
pop esi
xor eax eax
cmp ecx 0x13
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp edi 0x9
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
cmp esi 0x3000
je r-xdata
je r-xdata
xor eax eax
cmp edi 0x13
pop edi
pop esi
pop ebp
setne al
pop ebx
add esp 0x8
retn
cmp esi 0xa0
jg r-xdata
xor eax eax
cmp edi 0x15
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp esi 0x2029
jg r-xdata
xor eax eax
cmp edi 0x15
pop edi
pop esi
pop ebp
setne al
pop ebx
add esp 0x8
retn
cmp esi 0xa
jl r-xdata
movzx ebp [ edx + ebx ]
sub ecx 0x6
and ebp 0x3f
shl ebp cl
inc edx
or esi ebp
cmp edx eax
jle r-xdata
cmp edi 0x202f
je r-xdata
cmp edi 0x20
jne r-xdata
xor eax eax
cmp edi 0x13
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp esi 0x2000
jl r-xdata
cmp esi 0x1680
je r-xdata
je r-xdata
cmp esi 0xd
jle r-xdata
pop edi
pop esi
xor eax eax
cmp ecx 0x13
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp esi 0x200a
jle r-xdata
xor eax eax
cmp edi 0x13
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
cmp esi 0x9
je r-xdata
cmp esi 0x202f
je r-xdata
cmp esi 0x20
jne r-xdata
xor eax eax
cmp edi 0x13
pop edi
pop esi
pop ebp
sete al
pop ebx
add esp 0x8
retn
sub_4405aa
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
mov edi [ esp + 0x20 ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esp + 0x24 ]
mov edx [ edi + 0x24 ]
cmp esi edx
jae r-xdata
cmp esi [ edi + 0x24 ]
jb r-xdata
lea ebp [ eax + 0x1 ]
add eax 0x3
jmp r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
mov edx [ edi + 0x14 ]
add edx ecx
cmp edx [ esp + 0x14 ]
jb r-xdata
mov ebx [ esp + 0x18 ]
lea edx [ ecx + ebx ]
sar edx 0x8
mov [ esi ] dl
mov dl bl
add dl cl
mov [ esi + 0x1 ] dl
add esi 0x2
cmp esi edx
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push eax
call sub_4322ae
add esp 0x8
test eax eax
je r-xdata
lea edx [ ecx + ebx ]
sar edx 0x8
mov [ eax + 0x1 ] dl
mov dl bl
add dl cl
mov [ eax + 0x2 ] dl
movzx ecx [ esi ]
movzx ebx [ esi + 0x1 ]
shl ecx 0x8
or ecx ebx
mov ebx [ edi + 0x14 ]
add ebx ecx
cmp ebx ebp
je r-xdata
mov ebx [ esp + 0x18 ]
jmp r-xdata
sub_440649
mov eax [ esp + 0x4 ]
movzx ecx [ eax ]
movzx edx [ ecx + r--data ]
push ebx
push ebp
push esi
push edi
push 0x1
push 0x0
add edx eax
push 0x0
push edx
call sub_4327a2
mov ebx [ esp + 0x28 ]
mov esi eax
add esp 0x10
cmp esi ebx
jae r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x1c ]
cmp eax 0x69
je r-xdata
lea ecx [ ecx ]
movzx edx [ eax + r--data ]
add esi edx
nop
cmp eax 0x6a
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
jmp r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
movzx eax [ esi ]
cmp eax 0x72
je r-xdata
movzx eax [ esi ]
cmp eax 0x58
jne r-xdata
cmp eax 0x5e
je r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
shl ecx 0x8
or ecx edx
je r-xdata
cmp eax 0x5f
je r-xdata
cmp eax 0x60
jne r-xdata
cmp eax 0x5d
je r-xdata
xor edi edi
nop
cmp [ ecx + esi ] 0x54
je r-xdata
cmp eax 0x60
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x8
or eax ecx
add esi eax
cmp [ esi ] 0x54
je r-xdata
push ebp
push ebx
push esi
call sub_440649
add esp 0xc
test eax eax
je r-xdata
add esi ecx
jmp r-xdata
lea ecx [ eax - 0x6 ]
cmp ecx 0x51
ja r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
mov edi 0x1
movzx edx [ eax + r--data ]
push 0x1
push 0x0
add edx esi
push 0x0
push edx
call sub_4327a2
mov esi eax
add esp 0x10
cmp esi ebx
jb r-xdata
movzx edx [ ecx + lookup_table_440861 ]
jmp [ edx * 4 + jump_table_44083d ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
jmp r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi + 0x2 ]
shl ecx 0x8
or ecx edx
add esi ecx
mov ecx esi
jmp r-xdata
lea ecx [ esi + 0x21 ]
mov cl [ esi + 0x1 ]
mov cl [ esi + 0x3 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
movzx edx [ ecx ]
add edx 0xffffffba
cmp edx 0x7
ja r-xdata
movzx edx [ edx + lookup_table_4408c1 ]
jmp [ edx * 4 + jump_table_4408b5 ]
add esi 0x2
jmp r-xdata
cmp cl 0xf
jne r-xdata
cmp cl 0x10
je r-xdata
mov cl [ esi + 0x1 ]
jmp r-xdata
mov cl [ esi + 0x3 ]
movzx edx [ ecx + 0x1 ]
movzx ecx [ ecx + 0x2 ]
shl edx 0x8
or edx ecx
jle r-xdata
cmp cl 0xc0
jb r-xdata
movzx edx cl
and edx 0x3f
movzx ecx [ edx + r--data ]
add esi ecx
jmp r-xdata
sub_4408c9
push ecx
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x18 ]
push edi
mov edi [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push ecx
push edi
push ebx
push ebp
lea edx [ esp + 0x28 ]
push esi
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x28 ] 0x0
call sub_4328a3
add esp 0x18
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov edi edi
lea eax [ esp + 0x10 ]
push eax
push edi
push ebx
push ebp
lea ecx [ esp + 0x28 ]
push esi
push ecx
call sub_4328a3
add esp 0x18
test eax eax
jle r-xdata
mov ecx [ esp + 0x18 ]
mov dl [ ecx ]
inc ecx
mov [ esp + 0x18 ] ecx
test dl dl
je r-xdata
sub_440938
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
mov [ eax + 0x19c ] 0x1
mov eax [ esp + 0x10 ]
push 0x212
push eax
call [ DefDlgProcW@IAT ]
retn 0x10
sub_44096a
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
mov [ eax + 0x19c ] 0x0
mov eax [ esp + 0x10 ]
push 0x211
push eax
call [ DefDlgProcW@IAT ]
retn 0x10
sub_44099c
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push esi
lea esi [ eax + 0x28 ]
push esi
call sub_437bfd
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push ecx
push edx
push 0x53
push eax
call [ DefDlgProcW@IAT ]
pop esi
retn 0x10
mov eax [ esi ]
push eax
call sub_433fa4
pop esi
retn 0x10
sub_4409df
mov eax [ esp + 0x4 ]
sub esp 0x18
push ebx
push ebp
push esi
push edi
push eax
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
mov ecx [ esi ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
sub edi [ esi + 0x3c ]
sub ebx [ esi + 0x40 ]
cmp [ esi + 0xc ] 0x80000000
jne r-xdata
add [ esi + 0x3c ] edi
add [ esi + 0x40 ] ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
mov ecx [ rw-data ]
xor ebp ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ebp
cmp ecx ebp
jbe r-xdata
mov edx [ esp + 0x2c ]
cmp edx [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebp * 4 ]
cmp [ eax ] 0x0
je r-xdata
inc ebp
mov [ esp + 0x10 ] ebp
cmp ebp ecx
jb r-xdata
mov eax [ eax ]
mov edx [ eax + 0x8 ]
inc [ esp + 0x2c ]
cmp edx [ esi ]
jne r-xdata
mov edx [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
mov ebp [ esp + 0x20 ]
sub edx eax
push 0x1
sub ebp ecx
push edx
add eax ebx
push ebp
mov [ esp + 0x2c ] ebp
mov ebp [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
push eax
mov eax [ rw-data ]
add ecx edi
mov [ esp + 0x34 ] edx
mov [ esp + 0x28 ] ecx
push ecx
mov ecx [ eax + ebp * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ __import_lookup_table_10(USER32:MoveWindow) ]
mov ecx [ esp + 0x14 ]
sub_440adf
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push edi
push rw-data
call sub_4340b2
test esi esi
je r-xdata
mov [ rw-data ] 0xffffffff
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
cmp [ ecx + 0x18 ] 0x0
mov [ rw-data ] eax
jne r-xdata
movzx eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
movzx ecx si
push edx
shl eax 0x10
or eax ecx
push eax
push 0x6
push edi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
retn 0x10
sub_440b39
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
mov esi [ esp + 0x24 ]
push edi
push esi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
cmp [ edi + 0x190 ] 0x0
mov eax [ edi + 0x44 ]
mov ebp [ edi + 0x48 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] ebp
je r-xdata
cmp [ esp + 0x2c ] 0x0
jle r-xdata
push 0xf
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
sub ebp eax
mov [ esp + 0x28 ] ebp
movzx eax [ esp + 0x34 ]
movzx ecx [ esp + 0x30 ]
shl eax 0x10
or eax ecx
push eax
push ebx
push 0x5
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x10
test ebp ebp
jle r-xdata
cmp [ esp + 0x30 ] 0x0
jle r-xdata
cmp [ esp + 0x34 ] 0x0
jle r-xdata
cmp ebx 0x1
je r-xdata
mov eax 0x3
cmp [ rw-data ] eax
mov [ esp + 0x20 ] eax
jl r-xdata
mov edx [ edi ]
push 0x1
push 0x0
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
mov [ edi + 0x178 ] 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x10
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
test esi esi
je r-xdata
mov eax [ esp + 0x20 ]
inc eax
cmp eax [ rw-data ]
mov [ esp + 0x20 ] eax
jle r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
mov ebp [ esp + 0x28 ]
cmp [ esi ] 0x0
je r-xdata
movsx eax [ esi + 0x80 ]
imul eax [ esp + 0x30 ]
cdq
idiv [ esp + 0x2c ]
movsx ecx [ esi + 0x84 ]
movsx edi [ esi + 0x86 ]
mov [ esp + 0x18 ] eax
movsx eax [ esi + 0x82 ]
imul eax [ esp + 0x34 ]
cdq
idiv ebp
mov ebp eax
mov eax ecx
imul eax [ esp + 0x30 ]
cdq
idiv [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
mov eax edi
imul eax [ esp + 0x34 ]
cdq
idiv [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
movzx eax [ esi + 0x7e ]
test ax ax
je r-xdata
mov ebx [ esp + 0x18 ]
test eax 0x100
je r-xdata
cmp al 0x16
jne r-xdata
mov eax [ esi ]
push 0xffff
push 0x0
push 0x142
push eax
call [ SendMessageW@IAT ]
mov ebx [ esp + 0x18 ]
mov [ esp + 0x14 ] ecx
test al 0x6
jne r-xdata
mov edi [ esp + 0x1c ]
test [ esi + 0x8a ] 0x20
jne r-xdata
movzx edx [ esi + 0x7e ]
mov eax edx
and eax 0x2
je r-xdata
mov [ esp + 0x10 ] edi
test al 0x60
jne r-xdata
test al 0x8
mov eax [ esp + 0x30 ]
je r-xdata
mov ecx [ esi + 0x30 ]
mov edx [ esi ]
push 0x0
push ecx
push 0x469
push edx
call [ SendMessageW@IAT ]
mov al [ esi + 0x8b ]
cmp al 0xff
je r-xdata
test dl 0x4
je r-xdata
movsx ebx [ esi + 0x80 ]
test al al
mov eax [ esp + 0x34 ]
jns r-xdata
mov ebx [ esp + 0x18 ]
cdq
sub eax edx
sar eax 0x1
cmp ebx eax
jle r-xdata
sub eax [ esp + 0x2c ]
cdq
sub eax edx
mov ebx eax
movsx eax [ esi + 0x80 ]
sar ebx 0x1
add ebx eax
jmp r-xdata
mov edi [ esp + 0x1c ]
movzx eax al
cmp eax [ edi + 0x184 ]
je r-xdata
mov eax edx
and eax 0x20
je r-xdata
test ax ax
movsx eax [ esi + 0x80 ]
je r-xdata
cdq
sub eax edx
sar eax 0x1
cmp ebp eax
jle r-xdata
sub eax [ esp + 0x28 ]
cdq
sub eax edx
mov ebp eax
movsx eax [ esi + 0x82 ]
sar ebp 0x1
add ebp eax
jmp r-xdata
movzx eax [ esi + 0x7e ]
test eax 0x200
je r-xdata
mov ebx [ esp + 0x2c ]
movsx edx [ esi + 0x80 ]
mov eax ebx
sub eax edx
sub eax [ esp + 0x14 ]
imul eax [ esp + 0x30 ]
cdq
idiv ebx
mov ebx [ esp + 0x30 ]
sub ebx eax
sub ebx [ esp + 0x14 ]
jmp r-xdata
mov ecx [ esi ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
jmp r-xdata
test dl 0x40
je r-xdata
movsx ebp [ esi + 0x82 ]
sub ecx [ esp + 0x14 ]
sub ecx [ esp + 0x2c ]
add ecx eax
add ecx [ esp + 0x30 ]
mov ebx ecx
sub ecx ebx
sub ecx [ esp + 0x2c ]
add ecx eax
add ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ebp [ esp + 0x28 ]
movsx edx [ esi + 0x82 ]
mov eax ebp
sub eax edx
sub eax [ esp + 0x10 ]
imul eax [ esp + 0x34 ]
cdq
idiv ebp
mov ebp [ esp + 0x34 ]
sub ebp eax
sub ebp [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov eax [ esi ]
push 0x0
push ecx
push edx
push ebp
push ebx
push eax
call [ __import_lookup_table_10(USER32:MoveWindow) ]
mov al [ esi + 0x88 ]
test al al
jne r-xdata
test ax ax
movsx eax [ esi + 0x82 ]
je r-xdata
sub edi [ esp + 0x10 ]
sub edi [ esp + 0x28 ]
add edi eax
add edi [ esp + 0x34 ]
mov ebp edi
jmp r-xdata
sub edi ebp
sub edi [ esp + 0x28 ]
add edi eax
add edi [ esp + 0x34 ]
mov [ esp + 0x10 ] edi
jmp r-xdata
sub_440ee0
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x100
cmp edi 0xffffffff
jne r-xdata
xor ecx ecx
cmp ebx 0xffffffff
jne r-xdata
mov edi 0x96
mov edx [ esp + 0x1c ]
push 0x1
push edx
mov edx [ esp + 0x2c ]
push ebx
push edi
push edx
mov edx [ esp + 0x34 ]
push edx
push eax
push r--data
push r--data
push ecx
push ebp
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
mov ebx 0x96
mov ax [ esp + 0x20 ]
mov cx [ esp + 0x24 ]
push 0x910
mov [ esi + 0x80 ] ax
mov [ esi + 0x82 ] cx
mov [ esi + 0x84 ] di
mov [ esi + 0x86 ] bx
mov [ esi + 0x48 ] 0xffffffff
call sub_41171a
xor edx edx
mov [ eax + 0xc ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x78 ] eax
mov [ eax + 0x8 ] esi
mov [ eax ] edx
mov ecx [ ebp + 0x1bc ]
add esp 0x4
cmp ecx edx
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x24
cmp [ ecx ] edx
je r-xdata
mov [ ebp + 0x1bc ] eax
pop edi
mov edx 0x300
or [ esi + 0x7e ] dx
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x24
pop edi
mov [ ecx ] eax
mov edx 0x300
or [ esi + 0x7e ] dx
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x24
mov ecx [ ecx ]
cmp [ ecx ] edx
jne r-xdata
sub_440fdf
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ eax + 0x78 ]
push edi
xor edi edi
cmp [ esi + 0x4 ] edi
je r-xdata
mov ecx [ esi + 0xc ]
add ecx [ esp + 0x20 ]
cmp ecx 0x100
jl r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] edi
jne r-xdata
mov edi [ esi + 0xc ]
mov [ edi + esi + 0x810 ] bl
cmp ebx 0x8
jne r-xdata
push 0x910
call sub_41171a
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ esi + 0x4 ] eax
add esp 0x4
mov esi eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov [ esi + edi * 8 + 0x10 ] ecx
mov [ esi + edi * 8 + 0x14 ] edx
inc edi
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebx
retn 0x14
or ebx 0xffffffff
cmp [ esp + 0x18 ] ebx
je r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_435bc8
add esp 0x4
lea eax [ esp + 0x1c ]
push eax
call sub_435bc8
add esp 0x4
sub_441077
push ebx
mov ebx [ ShowWindow@IAT ]
push ebp
mov ebp [ esp + 0x10 ]
mov ecx [ ebp + 0x184 ]
mov eax [ ebp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov [ esp + 0x18 ] eax
cmp ecx [ esp + 0x1c ]
je r-xdata
mov edi 0x3
cmp [ esi + 0x84 ] edi
jl r-xdata
mov edi 0x3
cmp [ esi + 0x84 ] edi
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ ebp + 0x17c ]
push 0x0
push edx
push 0x130c
push eax
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
lea ecx [ ecx ]
mov ecx [ esp + 0x1c ]
mov [ ebp + 0x184 ] ecx
mov edx [ esi + 0x74 ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov ecx [ esp + 0x18 ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jle r-xdata
mov eax [ eax ]
mov ecx [ esp + 0x18 ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov edx [ esi + 0x74 ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ eax + 0x88 ] 0xb
je r-xdata
cmp [ eax + 0x88 ] 0xb
je r-xdata
movzx edx [ eax + 0x8b ]
cmp edx [ ebp + 0x184 ]
jne r-xdata
mov cl [ eax + 0x8b ]
movzx edx cl
cmp edx [ ebp + 0x184 ]
je r-xdata
test [ eax + 0x8a ] 0x20
jne r-xdata
mov eax [ eax ]
push 0x0
push eax
call ebx
mov ecx [ esi + 0x74 ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
test [ eax + 0x8a ] 0x40
je r-xdata
cmp [ ebp + 0x18c ] 0x0
je r-xdata
mov eax [ eax ]
push 0x0
push eax
call ebx
mov ecx [ esi + 0x74 ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push 0x4
push ecx
call ebx
mov edx [ esi + 0x74 ]
mov eax [ edx + edi * 4 ]
mov eax [ eax ]
test [ eax + 0x8a ] 0x40
je r-xdata
cmp [ eax + 0x88 ] 0x1a
jne r-xdata
cmp cl 0xff
je r-xdata
cmp [ eax + 0x88 ] 0x1a
jne r-xdata
mov eax [ eax ]
push 0x0
push eax
call [ __import_lookup_table_10(USER32:EnableWindow) ]
cmp [ eax + 0x88 ] 0xa
je r-xdata
mov ecx [ eax ]
push 0x1
push ecx
call [ __import_lookup_table_10(USER32:EnableWindow) ]
sub_4411e2
mov edx [ esp + 0x10 ]
sub esp 0x1c
push esi
mov esi [ esp + 0x24 ]
mov eax [ esi + 0x17c ]
test eax eax
jne r-xdata
cmp [ edx ] 0x0
je r-xdata
xor al al
pop esi
add esp 0x1c
retn 0x10
cmp [ esi + 0x38 ] 0x0
mov eax [ esi + 0x188 ]
je r-xdata
inc [ esi + 0x180 ]
mov ecx [ esi + 0x180 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x1c ] edx
lea edx [ esp + 0x4 ]
push edx
push ecx
push 0x133e
push eax
mov [ esp + 0x14 ] 0x9
call [ SendMessageW@IAT ]
mov eax [ esi + 0x180 ]
mov edx [ esp + 0x28 ]
mov [ esi + 0x184 ] eax
mov [ esi + 0x18c ] 0x1
or ecx 0xffffffff
mov [ edx + 0x80 ] cx
mov al 0x1
pop esi
add esp 0x1c
retn 0x10
push eax
push esi
push rw-data
call sub_441077
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x18c ] 0x0
je r-xdata
mov eax [ esi + 0x184 ]
mov [ esi + 0x184 ] 0xffffffff
xor al al
pop esi
add esp 0x1c
retn 0x10
mov eax [ esi ]
push 0x1
push 0x0
push eax
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
sub_4412ae
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x10
jge r-xdata
mov eax 0x2
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
or eax 0x2
cmp edx 0xffffffff
jne r-xdata
mov ecx 0x96
cmp [ ebx ] 0x0
je r-xdata
mov edx 0x96
pop esi
xor al al
pop ebx
retn 0x28
push edi
mov edi [ esp + 0x18 ]
push 0x0
push edi
push edx
mov edx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x34 ]
push ecx
push edx
push eax
mov eax [ esp + 0x2c ]
push 0x0
push r--data
push 0x0
push eax
call sub_43362d
mov [ esi ] eax
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x28
mov edi [ SendMessageW@IAT ]
push ebx
push 0x0
push 0x467
push eax
call edi
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x28
mov ecx 0x300
mov [ esi + 0x7e ] cx
mov ecx [ esp + 0x34 ]
mov edx [ esi ]
push ecx
push eax
push 0x467
push edx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
sub_44138a
mov eax [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x58 ] ecx
mov [ eax + 0x5c ] edx
test esi esi
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x14
cmp eax 0xffffffff
jne r-xdata
test edi edi
jle r-xdata
mov [ eax + 0x60 ] esi
pop edi
mov eax 0x1
pop esi
retn 0x14
mov [ eax + 0x64 ] edi
sub_4413f0
mov eax [ rw-data ]
push ebp
mov ebp [ esp + 0x8 ]
mov eax [ eax + ebp * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push esi
push 0x0
push 0x0
push 0xf0
push edx
mov esi ebp
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
cmp ebp 0x3
push ebx
push edi
mov bl 0x1a
jl r-xdata
cmp [ esp + 0x10 ] eax
je r-xdata
inc esi
jmp r-xdata
pop esi
pop ebp
retn 0x8
dec edi
cmp esi edi
mov ebx esi
jg r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ esp + 0x18 ] 0x1
pop edi
pop ebx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x0
push 0x0
push 0xf1
push eax
call [ SendMessageW@IAT ]
inc ebx
cmp ebx edi
jle r-xdata
mov eax [ eax ]
cmp [ eax + 0x88 ] bl
jne r-xdata
mov eax [ eax ]
cmp [ eax + 0x88 ] bl
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
mov ecx [ eax ]
push 0xfffffff0
push ecx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
mov edx [ rw-data ]
or eax 0x10000
push eax
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0xfffffff0
push edx
call [ SetWindowLongW@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx + ebp * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push 0x0
push 0x1
push 0xf1
push ecx
call [ SendMessageW@IAT ]
pop esi
pop ebp
retn 0x8
mov eax [ ecx + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0xfffffff0
push edx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x20000
jne r-xdata
mov eax [ ecx + esi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0xfffffff0
push edx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x20000
jne r-xdata
inc edi
cmp edi [ rw-data ]
jle r-xdata
lea edi [ ebp + 0x1 ]
cmp edi [ rw-data ]
jg r-xdata
dec esi
cmp esi 0x3
jge r-xdata
sub_441533
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x60 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov [ eax + 0x69 ] 0x0
mov [ eax + 0x68 ] 0x0
pop esi
retn 0x8
push eax
push esi
call sub_4340b2
mov [ esi + 0x6c ] eax
sub_441561
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebp ]
push esi
mov esi [ esp + 0x28 ]
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x40 ]
push edi
test eax eax
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0x5a
push ebx
call [ GetDeviceCaps@IAT ]
push ebx
push 0x0
mov edi eax
call [ ReleaseDC@IAT ]
imul edi [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
mov edx [ esp + 0x30 ]
push eax
push 0x0
push edx
mov edx [ esp + 0x34 ]
push 0x0
push 0x4
push 0x1
mov eax esi
and eax 0x8
push eax
mov ecx esi
and ecx 0x4
push ecx
and esi 0x2
push esi
push edx
mov eax 0x49f49f49
imul edi
sub edx edi
sar edx 0x9
push 0x0
mov eax edx
push 0x0
shr eax 0x1f
push 0x0
add eax edx
push eax
call [ __import_lookup_table_4(GDI32:CreateFontW) ]
mov ebx [ esp + 0x2c ]
mov edi [ SendMessageW@IAT ]
push 0x1
mov esi eax
push esi
push 0x30
push ebx
call edi
cmp [ ebp + 0x88 ] 0x1
jne r-xdata
push eax
call [ DeleteObject@IAT ]
cmp [ ebp + 0x88 ] 0x0
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
push 0x1
push ebp
push eax
mov [ ebp + 0x40 ] esi
call sub_43401c
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x20
cmp [ esp + 0x34 ] 0x0
je r-xdata
movsx ecx [ ebp + 0x86 ]
movsx edx [ ebp + 0x84 ]
movsx eax [ ebp + 0x82 ]
push 0x0
push ecx
movsx ecx [ ebp + 0x80 ]
push edx
mov edx [ ebp ]
push eax
push ecx
push edx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
push 0x0
push 0x0
push 0x142
push ebx
call edi
sub_441673
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push esi
mov esi [ eax ]
push edi
mov edi [ __import_lookup_table_10(USER32:GetWindowLongW) ]
push 0xfffffff0
push esi
call edi
mov ecx [ esp + 0xc ]
push 0xffffffec
push esi
mov [ ecx ] eax
call edi
mov edx [ esp + 0x10 ]
pop edi
mov [ edx ] eax
mov eax 0x1
pop esi
retn 0xc
xor eax eax
retn 0xc
cmp eax 0xffffffff
jne r-xdata
sub_4416d1
mov eax [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push ebx
mov ebx [ edx ]
push ebp
push esi
mov esi [ ebx ]
push 0xfffffff0
push esi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
xor ecx ecx
and eax 0xc00000
cmp eax 0xc00000
sete cl
mov ebp ecx
cmp edi 0xffffffff
je r-xdata
xor eax eax
pop edi
retn 0xc
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0xffffffff
je r-xdata
push edi
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
pop ebx
xor eax eax
pop edi
retn 0xc
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
retn 0xc
and edi 0xc00000
xor eax eax
cmp edi 0xc00000
sete al
cmp ebp eax
je r-xdata
push 0x47
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
push 0x4
test eax eax
je r-xdata
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
sub [ ebx + 0x48 ] eax
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
add [ ebx + 0x48 ] eax
jmp r-xdata
sub_4417bc
mov eax [ esp + 0x8 ]
push ebx
xor ebx ebx
push ebp
mov ebp [ esp + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
push edi
mov edi [ esi ]
cmp [ esi + 0x3a ] bl
je r-xdata
pop ebp
xor eax eax
pop ebx
retn 0x8
cmp eax 0xffffffff
jne r-xdata
cmp ebp 0x43
ja r-xdata
cmp [ esi + 0x180 ] ebx
mov [ esi + 0x3a ] bl
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
movzx ecx [ ebp + lookup_table_441964 ]
jmp [ ecx * 4 + jump_table_44193c ]
cmp [ esi + 0x18c ] bl
je r-xdata
cmp [ esi + 0x38 ] bl
je r-xdata
cmp [ esi + 0x38 ] bl
jne r-xdata
push ebx
push edi
call [ ShowWindow@IAT ]
pop edi
mov [ esi + 0x38 ] bl
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
mov [ esi + 0x38 ] 0x1
cmp [ esi + 0x38 ] bl
je r-xdata
push ebx
push edi
call [ __import_lookup_table_10(USER32:EnableWindow) ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
push 0x1
push edi
call [ __import_lookup_table_10(USER32:EnableWindow) ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
push edi
mov [ esi + 0x39 ] 0x1
call [ __import_lookup_table_10(USER32:LockWindowUpdate) ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
push ebx
mov [ esi + 0x39 ] bl
call [ __import_lookup_table_10(USER32:LockWindowUpdate) ]
mov edx [ esi ]
push 0x1
push ebx
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
mov eax [ esi + 0x188 ]
push eax
push esi
push rw-data
call sub_441077
mov [ esi + 0x18c ] bl
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
push ebp
push edi
call [ ShowWindow@IAT ]
push edi
call sub_4375b0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
push ebp
push edi
call [ ShowWindow@IAT ]
cmp ebp 0x8
je r-xdata
push 0x6
push edi
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
cmp ebp 0x4
je r-xdata
push edi
call sub_4375b0
sub_4419a8
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov eax 0x1
retn 0x4
xor eax eax
retn 0x4
cmp eax 0xffffffff
jne r-xdata
sub_4419ed
sub esp 0x8
mov eax [ rw-data ]
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] eax
call sub_434330
xor eax eax
add esp 0x8
retn 0x4
mov ecx [ esp ]
mov edx [ ecx ]
mov eax [ edx ]
cmp eax [ esp + 0xc ]
je r-xdata
dec [ edx + 0x4 ]
mov ecx [ ecx ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x4 ]
push edx
call sub_440eac
jmp r-xdata
mov eax 0x1
add esp 0x8
retn 0x4
mov eax [ ecx + 0x8 ]
push eax
call [ DeleteObject@IAT ]
lea ecx [ esp ]
push ecx
push rw-data
call sub_4332c8
push ecx
lea eax [ esp + 0x4 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
sub_441a7a
sub esp 0x10
push esi
mov esi [ rw-data ]
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x1c ] esi
push edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] 0x1
call [ __import_lookup_table_4(GDI32:CreateSolidBrush) ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0xc ]
push eax
push rw-data
call sub_433344
mov eax [ esp + 0x14 ]
pop edi
pop esi
add esp 0x10
retn 0x8
mov ecx [ esi ]
cmp [ ecx ] edi
je r-xdata
mov eax ecx
mov ecx [ esp + 0x20 ]
add [ eax + 0x4 ] ecx
mov edx [ esi ]
mov eax [ edx + 0x8 ]
pop edi
pop esi
add esp 0x10
retn 0x8
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x20 ]
push eax
call sub_440eac
mov esi [ esp + 0x1c ]
jmp r-xdata
push ecx
lea eax [ esp + 0x20 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
sub_441b06
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + ecx * 4 ]
push esi
push edi
mov edi [ edx ]
push 0xf
call [ GetSysColor@IAT ]
mov esi eax
mov eax [ edi + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push eax
call [ SetBkColor@IAT ]
push 0x0
push esi
call sub_441a7a
pop edi
pop esi
retn 0x8
mov esi eax
sub_441b43
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x0
push 0x0
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] edx
mov eax [ eax ]
push 0x20
push eax
call [ PostMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
sub_441b92
mov eax [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
pop edi
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp eax 0xffffffff
je r-xdata
test edi edi
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
pop esi
mov ecx [ esp + 0x10 ]
push ecx
push edi
call [ __import_lookup_table_10(USER32:CreateAcceleratorTableW) ]
mov [ esi + 0x18 ] eax
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
cmp [ esi ] eax
jne r-xdata
mov eax [ esi + 0x18 ]
push eax
call [ DestroyAcceleratorTable@IAT ]
mov [ esi + 0x18 ] 0x0
mov [ rw-data ] 0xffffffff
mov edx [ rw-data ]
mov [ rw-data ] edx
sub_441c1e
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x8
cmp ebx 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
push esi
mov esi [ edx ]
mov eax [ esi + 0x1c0 ]
push edi
mov edi [ ecx ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push eax
call sub_437fc7
mov ecx [ esi ]
push ebp
mov ebp [ edi ]
push 0x1
push ebp
push 0x28
mov [ esi + 0x1c ] ebx
mov ebx [ PostMessageW@IAT ]
push ecx
call ebx
cmp [ edi + 0x88 ] 0x2
jne r-xdata
pop edi
mov [ esi + 0x1c ] 0xffffffff
pop esi
pop ebx
retn 0x8
pop ebp
pop edi
pop esi
mov edx [ esi + 0x1b4 ]
mov eax [ esi + 0x1b0 ]
push edx
push eax
push 0xb1
push ebp
call ebx
sub_441cb4
sub esp 0x18
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
push ebx
push ebp
or eax 0xffffffff
push esi
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
push edi
lea eax [ esp + 0x30 ]
push eax
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ ClientToScreen@IAT ]
mov ebx [ rw-data ]
xor esi esi
test ebx ebx
jle r-xdata
push 0x0
call [ __import_lookup_table_10(USER32:MessageBeep) ]
or eax 0xffffffff
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov ebp [ edx ]
test ebp ebp
je r-xdata
inc esi
cmp esi ebx
jl r-xdata
mov edi 0x3
cmp [ rw-data ] edi
jl r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jl r-xdata
inc edi
cmp edi [ rw-data ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
cmp ecx [ ebp + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
mov edx [ esp + 0x2c ]
mov [ edx ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
test [ eax + 0x8a ] 0x20
jne r-xdata
mov cl [ eax + 0x8b ]
cmp cl 0xff
je r-xdata
mov edx [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
movzx edx cl
cmp edx [ ebp + 0x184 ]
jne r-xdata
mov eax [ esp + 0x2c ]
cmp [ eax ] esi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
test [ ecx + 0x8a ] 0x8
jne r-xdata
mov [ esp + 0x14 ] esi
cmp [ eax ] esi
je r-xdata
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
mov edx [ esp + 0x14 ]
mov [ eax ] edx
mov [ esp + 0x10 ] edi
sub_441e05
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
je r-xdata
mov eax [ esi + 0x10 ]
mov edi [ esi + 0x18 ]
mov ebx eax
mov ecx eax
and ebx 0x6
and ecx 0x10
and eax 0x1
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_433d5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x48 ]
cmp eax 0xffffffff
jne r-xdata
push 0xe
jmp r-xdata
push eax
push edi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
mov edx [ ebp + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ edx + 0x44 ]
cmp eax 0xffffffff
jne r-xdata
push 0x12
call [ GetSysColor@IAT ]
push eax
call [ __import_lookup_table_4(GDI32:CreateSolidBrush) ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x44 ]
push 0xf
call [ __import_lookup_table_10(USER32:GetSysColorBrush) ]
push 0xf
mov [ esp + 0x14 ] eax
call [ GetSysColor@IAT ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
push 0x10
call [ GetSysColor@IAT ]
push eax
call [ __import_lookup_table_4(GDI32:CreateSolidBrush) ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edi
mov [ esp + 0x2c ] eax
call [ __import_lookup_table_10(USER32:FrameRect) ]
mov edx [ esp + 0x20 ]
push edx
call [ DeleteObject@IAT ]
jmp r-xdata
push eax
push edi
call [ SetBkColor@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push edi
mov [ esp + 0x34 ] eax
call [ SelectObject@IAT ]
cmp [ esp + 0x14 ] 0x0
mov edx [ esi + 0x1c ]
mov ecx [ esi + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x20 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x28 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
je r-xdata
push 0x10
push 0x4
lea ecx [ esp + 0x38 ]
push ecx
push edi
call [ DrawFrameControl@IAT ]
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x14 ] 0x0
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x28 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
jmp r-xdata
push 0xfffffffe
push 0xfffffffe
lea edx [ esp + 0x38 ]
push edx
push 0xfffffffd
push 0xfffffffd
lea ecx [ esp + 0x38 ]
push ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edi
call [ FillRect@IAT ]
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov eax 0x2
add [ esp + 0x30 ] eax
add [ esp + 0x34 ] eax
test ebx ebx
je r-xdata
call [ InflateRect@IAT ]
mov eax 0x1
sub [ esp + 0x30 ] eax
sub [ esp + 0x34 ] eax
mov eax [ ebx ]
push 0x0
push 0x0
push 0xe
push eax
call [ SendMessageW@IAT ]
mov ebx eax
inc ebx
xor ecx ecx
mov eax ebx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push ebx
push eax
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x34 ]
push eax
push 0xffffffff
push ebx
push edi
call [ __import_lookup_table_10(USER32:DrawTextW) ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov [ esp + 0x14 ] 0x125
mov ebx [ ebp + 0xc ]
mov edx [ ebx ]
push 0xfffffff0
push edx
mov [ esp + 0x1c ] 0x105
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x2000
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov [ esp + 0x38 ] edx
mov edx [ esi + 0x28 ]
inc eax
inc ecx
push 0x11
mov [ esp + 0x40 ] edx
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
call [ GetSysColor@IAT ]
push eax
push edi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push 0xffffffff
push ebx
push edi
call [ __import_lookup_table_10(USER32:DrawTextW) ]
push ebx
call sub_4112ef
mov eax [ esp + 0x2c ]
add esp 0x4
push eax
push edi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esp + 0x1c ]
push edx
push edi
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
mov eax [ esp + 0x2c ]
push eax
push edi
call [ SetBkColor@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x28 ]
push 0x0
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] edx
call [ __import_lookup_table_4(GDI32:CreateSolidBrush) ]
mov esi eax
push esi
lea eax [ esp + 0x34 ]
push eax
push edi
call [ __import_lookup_table_10(USER32:FrameRect) ]
push esi
call [ DeleteObject@IAT ]
push 0xfffffffc
push 0xfffffffc
lea ecx [ esp + 0x38 ]
push ecx
call [ InflateRect@IAT ]
lea edx [ esp + 0x30 ]
push edx
push edi
call [ __import_lookup_table_10(USER32:DrawFocusRect) ]
sub_44213b
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
test eax eax
jge r-xdata
cmp eax 0x3
jl r-xdata
mov edx [ ecx + 0x98 ]
cmp edx 0xffffffff
je r-xdata
pop edi
xor al al
pop esi
retn 0x10
cmp eax [ ecx + 0x84 ]
jg r-xdata
mov eax [ ecx + 0x94 ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx + 0x74 ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
mov [ edi ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ edx ]
mov edx [ eax + 0x4 ]
mov eax edx
mov [ esi ] edx
mov edx [ ecx + 0x60 ]
mov eax [ edx + eax * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi ]
cmp eax 0x3
jl r-xdata
cmp eax [ ecx + 0x84 ]
jg r-xdata
mov ecx [ ecx + 0x74 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
pop edi
mov al 0x1
pop esi
retn 0x10
sub_4421c1
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx + 0x84 ]
mov eax 0x3
cmp edx eax
push esi
jl r-xdata
cmp eax [ ecx + 0x84 ]
jg r-xdata
pop esi
or eax 0xffffffff
pop edi
retn 0x8
mov ecx [ ecx + 0x74 ]
add ecx 0xc
mov edx [ ecx + 0x74 ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jle r-xdata
mov esi [ esi ]
cmp [ esi ] edi
je r-xdata
mov edx [ edx ]
cmp [ edx ] edi
je r-xdata
mov esi [ ecx ]
cmp [ esi ] 0x0
je r-xdata
mov [ rw-data ] eax
pop esi
pop edi
retn 0x8
sub_44222a
push esi
push 0x0
push 0x1a0
push 0x111
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push eax
call [ PostMessageW@IAT ]
mov eax [ esi + 0x2f4 ]
push eax
call sub_436272
add esp 0x4
xor eax eax
pop esi
retn 0x8
sub_442262
push esi
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push 0x0
push 0x197
push 0x111
push eax
call [ PostMessageW@IAT ]
mov eax [ esi + 0x2f4 ]
push eax
call sub_436272
add esp 0x4
xor eax eax
pop esi
retn 0x8
sub_4422b9
sub esp 0x224
push ebx
push ebp
mov ebp [ RegEnumKeyExW@IAT ]
push esi
mov esi [ esp + 0x234 ]
push edi
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
push 0x0
push esi
mov [ esp + 0x30 ] 0xff
call ebp
cmp eax 0x103
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x224
retn
mov edi [ esp + 0x23c ]
mov eax edi
or eax 0x20019
mov [ esp + 0x18 ] eax
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push eax
push 0x0
lea edx [ esp + 0x3c ]
push edx
push esi
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x224
retn
mov eax [ esp + 0x14 ]
push edi
push eax
call sub_4422b9
mov ecx [ esp + 0x1c ]
add esp 0x8
push ecx
mov bl al
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
test bl bl
je r-xdata
lea edx [ esp + 0x1c ]
xor ebx ebx
push edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
call sub_434153
test al al
je r-xdata
lea edx [ esp + 0x30 ]
push edx
push esi
call [ __import_lookup_table_1(ADVAPI32:RegDeleteKeyW) ]
push ebx
push edi
lea eax [ esp + 0x38 ]
push eax
push esi
lea ecx [ esp + 0x2c ]
push ecx
call sub_44229a
call eax
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_4344a0
lea eax [ esp + 0x1c ]
push eax
call sub_4344a0
lea ecx [ esp + 0x28 ]
push ecx
push ebx
push ebx
push ebx
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ebx
push esi
mov [ esp + 0x30 ] 0xff
call ebp
cmp eax 0x103
jne r-xdata
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x18 ]
sub_442408
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ edi ]
mov ecx [ ecx + edx * 4 ]
movsx eax [ ecx + 0x8 ]
cmp eax 0x47
jne r-xdata
cmp eax 0x48
jne r-xdata
inc esi
jmp r-xdata
cmp eax 0x7f
je r-xdata
sub esi 0x1
jns r-xdata
test esi esi
jne r-xdata
xor eax eax
test esi esi
pop edi
setne al
pop esi
retn 0x8
pop edi
xor eax eax
pop esi
retn 0x8
inc edx
mov [ edi ] edx
jmp r-xdata
test eax eax
jne r-xdata
cmp eax 0x40
je r-xdata
mov ecx [ ecx ]
cmp ecx 0x3
je r-xdata
add ecx 0xffffffd9
cmp ecx 0x2
ja r-xdata
inc edx
mov [ edi ] edx
jmp r-xdata
sub_442478
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
call sub_4341cf
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
add esp 0x8
retn 0x4
sub_4424bb
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_43424d
test al al
je r-xdata
mov eax [ esi ]
pop esi
retn 0x4
push 0x0
push esi
call sub_4342f3
pop esi
retn 0x4
sub_4424dc
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push edi
push esi
call sub_43428d
test al al
je r-xdata
mov eax [ esi ]
pop edi
pop esi
retn 0x8
push edi
push esi
call sub_4342f3
pop edi
pop esi
retn 0x8
sub_442582
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x100 ]
push eax
lea eax [ esp + 0x1c ]
push eax
push edx
call sub_4344b7
add esi [ esp + 0x18 ]
add edi [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea eax [ esi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x30 ]
mov esi eax
lea eax [ edi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x34 ]
dec esi
mov edi eax
dec edi
test ebx ebx
jne r-xdata
jle r-xdata
push ebx
push ebx
push edi
push esi
push 0x8001
call [ __import_lookup_table_10(USER32:mouse_event) ]
cmp [ ebp + 0x18 ] bl
je r-xdata
mov ebx 0xa
cmp ebx 0x64
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0xa
call sub_436272
add esp 0x4
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push ecx
push edx
push 0x8001
call [ __import_lookup_table_10(USER32:mouse_event) ]
push 0xa
call sub_436272
add esp 0x4
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x30 ]
imul eax eax 0xffff
lea ecx [ edx - 0x1 ]
cdq
idiv ecx
mov edx [ esp + 0x34 ]
lea ecx [ edx - 0x1 ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x24 ]
imul eax eax 0xffff
cdq
idiv ecx
inc eax
mov [ esp + 0x10 ] eax
lea ebx [ ebx ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push 0x20
push ebx
push edi
push esi
call sub_43634e
add esp 0x18
test al al
je r-xdata
sub_4426a2
push esi
mov esi [ esp + 0xc ]
movzx eax [ esi ]
push edi
mov edi [ esp + 0xc ]
push eax
push edi
call sub_4348d6
inc esi
test al al
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
movzx eax [ esi ]
push eax
push edi
call sub_4348ef
test al al
je r-xdata
movzx eax [ esi + 0x1 ]
push eax
push edi
call sub_434908
test al al
je r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x8
sub_4426e9
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
lea eax [ esp + 0x14 ]
push eax
call sub_435bc8
add esp 0x4
test edi edi
jge r-xdata
cmp edi 0xff
jle r-xdata
xor edi edi
jmp r-xdata
mov ebx [ esp + 0x14 ]
lea ecx [ esi + 0x1 ]
push ecx
push esi
push edi
push ebx
call sub_43487b
lea edx [ esi + 0x3 ]
push edx
lea eax [ esi + 0x2 ]
push eax
mov ecx ebx
push edi
shr ecx 0x8
push ecx
call sub_43487b
lea edx [ esi + 0x5 ]
push edx
lea eax [ esi + 0x4 ]
push eax
push edi
sar ebx 0x10
push ebx
call sub_43487b
pop edi
mov eax esi
pop esi
pop ebx
retn 0xc
mov edi 0xff
sub_442763
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
mov [ esi ] r--data
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
cmp [ esi + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
push eax
call sub_438867
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
xor edi edi
add esp 0x4
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] edi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
nop
xor eax eax
mov ecx [ ebp + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
push 0x8
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_442813
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
lea ecx [ ecx ]
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push eax
call sub_4427f7
mov eax [ esi + 0x4 ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
retn 0x4
sub_44286a
cmp [ esp + 0xc ] 0xdeadbeef
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
jne r-xdata
add esi 0xd4
push esi
call sub_434b42
mov al [ esp + 0x14 ]
pop esi
retn 0x10
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov [ esi + 0x1c ] eax
sub_44289d
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
push ebx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x24 ] 0x1
call [ InternetQueryDataAvailable@IAT ]
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov [ esp + 0x14 ] 0x400
mov edx [ esi + 0x8 ]
or edx [ esi + 0xc ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_434b0b
add esp 0x4
mov edi eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x10 ]
push edx
push eax
push edi
push ebx
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
push 0x0
push esi
call sub_44286a
pop edi
pop esi
pop ebx
retn 0x8
push edx
push 0xdeadbeef
push 0x21
push esi
call sub_44286a
pop edi
pop esi
pop ebx
retn 0x8
push edi
call sub_4112ef
add esp 0x4
push 0x0
push 0xdeadbeef
push 0x20
push esi
call sub_44286a
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push edi
call sub_4112ef
add esp 0x4
push eax
push edi
lea ecx [ esi + 0x44 ]
push ecx
call sub_434a9d
mov eax [ esp + 0x10 ]
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
jmp r-xdata
sub_44297c
sub esp 0x40c
push ebx
push esi
mov esi [ esp + 0x418 ]
mov eax [ esi + 0x34 ]
push edi
push r--data
push eax
mov [ esp + 0x1c ] sub_414e94
call sub_414e06
mov edi eax
add esp 0x8
mov [ esp + 0x10 ] edi
test edi edi
jne r-xdata
mov [ esp + 0xc ] 0x1
push eax
push 0xdeadbeef
push 0x1f
push esi
call sub_44286a
mov bl al
lea eax [ esp + 0x10 ]
push eax
call sub_4349b3
pop edi
pop esi
mov al bl
pop ebx
add esp 0x40c
retn 0x8
push 0x0
push 0xdeadbeef
push 0x20
push esi
call sub_44286a
lea edx [ esp + 0x10 ]
push edx
jmp r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov bl al
call sub_4349b3
pop edi
pop esi
mov al bl
pop ebx
add esp 0x40c
retn 0x8
mov eax [ esi + 0x8 ]
or eax [ esi + 0xc ]
jne r-xdata
push edi
push 0x1
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_4146ce
mov eax [ esp + 0x1c ]
add esp 0x10
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push esi
call sub_44286a
lea edx [ esp + 0x10 ]
push edx
jmp r-xdata
push eax
push 0xdeadbeef
push 0x21
push esi
call sub_44286a
lea ecx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x420 ]
lea ecx [ esp + 0xc ]
push ecx
push 0x400
lea edx [ esp + 0x20 ]
push edx
push eax
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_442aa9
mov eax [ esp + 0xc ]
mov eax [ eax + 0x70 ]
mov edx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
lea ecx [ edx + 0x90 ]
cmp eax 0x1
je r-xdata
lea esi [ edx + 0xa0 ]
jmp r-xdata
lea ecx [ edx + 0x5c ]
lea esi [ edx + 0x6c ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn 0xc
mov ecx [ ecx ]
push edi
mov edi [ __import_lookup_table_13(WININET:InternetSetOptionW) ]
inc eax
push eax
push ecx
push 0x2b
push ebx
call edi
mov edx [ esi + 0x4 ]
mov eax [ esi ]
inc edx
push edx
push eax
push 0x2c
push ebx
call edi
pop edi
sub_442afe
mov ecx [ esp + 0x8 ]
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
cmp ecx 0x1
jne r-xdata
movzx eax [ esi + 0x58 ]
movzx eax [ esi + 0x8c ]
jmp r-xdata
mov eax [ esi + 0xc0 ]
push 0x0
cmp edx 0x1
jne r-xdata
lea ecx [ esi + 0x7c ]
cmp ecx 0x1
movsx edx ax
lea ecx [ esi + 0xb0 ]
je r-xdata
cmp edx 0x2
jne r-xdata
push 0x0
push 0x0
push edx
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov ecx [ ecx ]
push r--data
push ecx
push 0x3
jmp r-xdata
push eax
call [ InternetOpenW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
cmp [ esi + 0xdc ] 0x0
je r-xdata
xor al al
pop esi
add esp 0x8
retn 0x8
mov al 0x1
pop esi
add esp 0x8
retn 0x8
push 0x8
lea eax [ esp + 0x8 ]
push eax
push 0x32
push 0x0
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x18 ] 0x0
call [ __import_lookup_table_13(WININET:InternetSetOptionW) ]
sub_442ba2
push esi
mov esi [ esp + 0x8 ]
lea ecx [ esi + 0x60 ]
call sub_402620
lea ecx [ esi + 0x50 ]
call sub_402620
lea ecx [ esi + 0x40 ]
call sub_402620
lea ecx [ esi + 0x30 ]
call sub_402620
lea ecx [ esi + 0x20 ]
call sub_402620
lea ecx [ esi + 0x10 ]
call sub_402620
mov ecx esi
call sub_402620
pop esi
retn 0x4
sub_442be2
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ InternetCloseHandle@IAT ]
push eax
call edi
mov ecx [ esi ]
push ecx
call edi
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x2710
add esi 0xd4
push esi
call sub_434b1f
pop edi
pop esi
retn 0x4
sub_442c52
push ebx
mov ebx [ esp + 0x20 ]
xor eax eax
cmp ebx 0x7fffffff
push ebp
sete al
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] eax
test edi edi
jge r-xdata
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call sub_4112d5
mov edi eax
add esp 0x4
test edi edi
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x1c
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
mov ebp [ esp + 0x20 ]
test ebp ebp
je r-xdata
jle r-xdata
neg ebp
mov [ esp + 0x20 ] ebp
test esi esi
jl r-xdata
test esi esi
jge r-xdata
mov esi eax
sub esi edi
cmp esi eax
jge r-xdata
cmp esi eax
jge r-xdata
xor esi esi
test ebx ebx
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x1c
mov ecx 0x1
sub ecx edi
add esi ecx
jmp r-xdata
test ebx ebx
jge r-xdata
lea eax [ esi + 0x1 ]
cmp ebx eax
jle r-xdata
lea ebx [ esi + 0x1 ]
test esi esi
jge r-xdata
sub eax esi
cmp ebx eax
jle r-xdata
mov ebx eax
sub ebx esi
mov ebp esi
sub ebp ebx
cmp esi ebp
jle r-xdata
mov ebx eax
mov eax esi
sub eax edi
lea ebx [ eax + ebx + 0x1 ]
cmp esi ebx
jge r-xdata
mov ebx eax
mov ebp [ esp + 0x20 ]
mov ebx [ esp + 0x2c ]
cmp ebx [ esp + 0x20 ]
jge r-xdata
mov eax [ esp + 0x2c ]
cmp eax ebp
jge r-xdata
cmp [ esp + 0x2c ] ebp
jge r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x1c
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x1c
push ecx
mov ecx [ edx ]
lea edx [ ecx + esi * 2 ]
push edx
mov ecx edi
mov edx edi
call sub_40e740
mov eax [ edx ]
lea eax [ eax + esi * 2 ]
mov edx edi
call sub_40c0e0
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ edx ]
lea edx [ ecx + esi * 2 ]
push edx
mov ecx edi
mov edx edi
call sub_40e740
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov ecx [ esp + 0x18 ]
lea eax [ edx + esi * 2 ]
mov edx edi
call sub_40c0e0
jmp r-xdata
dec esi
inc ebx
mov [ esp + 0x2c ] ebx
cmp ebx [ esp + 0x20 ]
je r-xdata
test eax eax
jne r-xdata
inc esi
mov eax [ esp + 0x2c ]
inc eax
mov [ esp + 0x2c ] eax
cmp eax ebp
je r-xdata
test eax eax
jne r-xdata
sub esi edi
jmp r-xdata
jmp r-xdata
add esi edi
jmp r-xdata
cmp esi ebp
jg r-xdata
cmp esi ebx
jl r-xdata
sub_442e1f
sub esp 0x254
push ebx
push ebp
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ esp + 0x10 ]
mov ebp ecx
mov ecx [ esp + 0x268 ]
push eax
push ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
mov esi [ FindClose@IAT ]
call esi
cmp [ esp + 0x274 ] 0x0
jne r-xdata
lea ebx [ ebx ]
lea edx [ esp + 0x10 ]
push edx
push r--data
call edi
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0x254
retn 0x10
lea ecx [ esp + 0x10 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push edi
call esi
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x254
retn 0x10
mov ebx [ SetCurrentDirectoryW@IAT ]
lea edx [ esp + 0x3c ]
push r--data
push edx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x270 ]
mov edx [ esp + 0x26c ]
push ecx
push edx
lea eax [ esp + 0x44 ]
push eax
call sub_436d2d
add esp 0xc
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x254
retn 0x10
mov bl 0x1
test [ esp + 0x10 ] 0x10
je r-xdata
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x3c ]
push edx
call ebx
mov eax [ esp + 0x274 ]
mov ecx [ esp + 0x270 ]
mov edx [ esp + 0x26c ]
push eax
mov eax [ esp + 0x26c ]
push ecx
push edx
push eax
mov ecx ebp
call sub_442e1f
test al al
je r-xdata
push edi
call esi
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x254
retn 0x10
push r--data
call ebx
sub_443009
sub esp 0x1c
cmp [ rw-data ] 0x0
push esi
mov esi [ esp + 0x24 ]
jne r-xdata
xor eax eax
pop esi
add esp 0x1c
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
mov edi [ PeekMessageW@IAT ]
mov ebx 0x1
push ebx
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call edi
test eax eax
je r-xdata
cmp [ esi + 0xf8 ] 0x0
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
jmp r-xdata
cmp [ esi + 0xf8 ] ebx
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ esi + 0xf8 ] ebx
cmp [ esp + 0x10 ] 0x12
je r-xdata
movzx eax [ rw-data ]
neg eax
pop edi
sbb eax eax
pop ebx
and eax 0xb
pop esi
add esp 0x1c
retn 0x4
pop edi
mov eax ebx
pop ebx
pop esi
add esp 0x1c
retn 0x4
mov [ esi + 0xfc ] bl
mov [ esi + 0xf8 ] ebx
lea ecx [ esp + 0xc ]
push ecx
mov ecx rw-data
call sub_40d280
test eax eax
jne r-xdata
push ebx
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov ebx rw-data
call sub_40d2a0
test eax eax
jne r-xdata
jmp r-xdata
mov ebx 0x1
lea eax [ esp + 0xc ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ esp + 0xc ]
push ecx
call [ DispatchMessageW@IAT ]
sub_44313a
movzx eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
lea edi [ esi + 0x8 ]
mov ecx edi
mov edx 0x11
push ebx
jmp r-xdata
imul eax eax 0x53a9b4fb
mov ebx 0x1
sub ebx eax
mov eax ebx
mov [ ecx ] eax
add ecx 0x4
sub edx 0x1
jne r-xdata
push 0x44
lea eax [ esi + 0x4c ]
push edi
push eax
mov [ esi ] edx
mov [ esi + 0x4 ] 0xa
call sub_410f70
push 0x44
lea ecx [ esi + 0x90 ]
push edi
push ecx
call sub_410f70
add esp 0x18
mov edi 0x9
pop ebx
push esi
call sub_434ff5
fstp st0
sub edi 0x1
jne r-xdata
pop edi
pop esi
retn 0x8
sub_4431b2
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_434ff5
fstp st0
push esi
call sub_434ff5
fmul [ r--data ]
call sub_4290f0
cmp eax 0x100
pop esi
jl r-xdata
retn 0x4
mov eax 0xff
sub_4431e0
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
push 0x0
call sub_414cef
add esp 0x4
push eax
push esi
call sub_44313a
fld1
fstp [ esp + 0x4 ]
mov eax 0x3ff00000
cmp [ esp + 0x8 ] eax
jne r-xdata
xor ecx ecx
cmp [ esp + 0x4 ] eax
mov eax esi
setne cl
inc ecx
mov [ esi + 0xd4 ] ecx
pop esi
add esp 0x8
retn 0x4
mov [ esi + 0xd4 ] 0x0
mov eax esi
pop esi
add esp 0x8
retn 0x4
sub_443236
push esi
mov esi [ esp + 0x8 ]
xor eax eax
push edi
mov edi [ esp + 0x10 ]
mov [ esi + 0x44e ] ax
shl [ esi + 0x44c ] 0x1
dec [ esi + 0x450 ]
mov eax [ esi + 0x44c ]
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
dec edi
cmp [ esi + 0x450 ] 0x0
jne r-xdata
pop edi
shr eax 0x10
pop esi
retn 0x8
push esi
call sub_435152
movzx eax al
shl eax 0x8
or [ esi + 0x44c ] eax
push esi
call sub_435152
movzx eax al
or [ esi + 0x44c ] eax
add [ esi + 0xc ] 0x2
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
movzx edx [ ecx + eax ]
inc eax
shl edx 0x8
or [ esi + 0x44c ] edx
mov [ esi + 0xc ] eax
movzx ecx [ eax + ecx ]
or [ esi + 0x44c ] ecx
inc eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov [ esi + 0x450 ] 0x10
sub_4432cd
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x444 ]
push edi
mov edi 0x1
cmp [ esi + 0x18 ] edi
jne r-xdata
cmp eax [ esi + 0x43c ]
jae r-xdata
cmp eax [ esi + 0x43c ]
jae r-xdata
pop edi
mov [ esi + 0x440 ] 0x0
pop esi
retn 0x4
lea esp [ esp ]
push ebx
jmp r-xdata
mov ecx [ esi + 0x444 ]
mov edx [ esi + 0x438 ]
and ecx 0x1ffff
movzx eax [ ecx + edx ]
push eax
push esi
call sub_4351d9
add [ esi + 0x444 ] edi
add [ esi + 0x8 ] edi
mov ecx [ esi + 0x444 ]
cmp ecx [ esi + 0x43c ]
jb r-xdata
mov ecx [ esi + 0x444 ]
mov edx [ esi + 0x438 ]
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
and ecx 0x1ffff
mov cl [ ecx + edx ]
mov [ eax + ebx ] cl
add [ esi + 0x8 ] edi
add [ esi + 0x444 ] edi
mov edx [ esi + 0x444 ]
cmp edx [ esi + 0x43c ]
jb r-xdata
pop ebx
pop edi
mov [ esi + 0x440 ] 0x0
pop esi
retn 0x4
sub_443390
cmp [ rw-data ] 0x0
push esi
push edi
mov esi rw-data
jne r-xdata
mov [ rw-data ] 0x270
mov [ rw-data ] esi
mov edx 0xe3
push 0x0
call sub_414cef
push eax
call sub_4353b4
add esp 0x8
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
mov al cl
and al 0x1
movzx eax al
neg eax
sbb eax eax
xor edi ecx
and edi 0x7ffffffe
xor edi [ esi ]
and eax 0x9908b0df
shr edi 0x1
xor edi [ esi + 0x634 ]
add esi 0x4
xor edi eax
sub edx 0x1
mov [ esi - 0x4 ] edi
jne r-xdata
mov edx 0x18c
mov edi edi
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
mov al cl
and al 0x1
movzx eax al
neg eax
sbb eax eax
xor edi ecx
and edi 0x7ffffffe
xor edi [ esi ]
and eax 0x9908b0df
shr edi 0x1
xor edi [ esi - 0x38c ]
add esi 0x4
xor edi eax
sub edx 0x1
mov [ esi - 0x4 ] edi
jne r-xdata
mov ecx [ rw-data ]
mov dl cl
and dl 0x1
movzx eax dl
mov edx [ esi ]
neg eax
sbb eax eax
xor edx ecx
and edx 0x7ffffffe
xor edx [ esi ]
and eax 0x9908b0df
shr edx 0x1
xor edx [ esi - 0x38c ]
pop edi
xor edx eax
mov [ esi ] edx
pop esi
retn
sub_443466
mov eax [ esp + 0x8 ]
inc eax
push esi
mov esi [ esp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
call sub_41171a
add esp 0x4
mov [ esi ] eax
push esi
mov [ eax ] 0x0
call sub_437bb9
mov eax esi
pop esi
retn 0x8
sub_4434cc
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
dec eax
cmp eax 0xa
ja r-xdata
xor al al
retn 0x4
jmp [ eax * 4 + jump_table_443534 ]
mov al [ ecx ]
retn 0x4
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ecx + 0xc ]
push eax
call sub_437bfd
test al al
jne r-xdata
mov edx [ ecx ]
or edx [ ecx + 0x4 ]
je r-xdata
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x44
jpo r-xdata
xor eax eax
cmp [ ecx ] eax
setne al
retn 0x4
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
retn 0x4
mov al 0x1
retn 0x4
mov al 0x1
retn 0x4
mov al 0x1
retn 0x4
sub_443576
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
dec eax
sub esp 0x8
cmp eax 0xa
ja r-xdata
xor eax eax
xor edx edx
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_44364a ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
cdq
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx + 0xc ]
mov eax [ eax ]
cmp [ eax ] 0x30
jne r-xdata
fld [ ecx ]
sub esp 0x8
fstp [ esp ]
call sub_4353fd
mov esp ebp
pop ebp
retn 0x4
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ecx ]
cmp [ ecx ] 0x8
jg r-xdata
push eax
call sub_41343c
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ eax + 0x2 ]
cmp cx 0x78
je r-xdata
mov eax 0x1
xor edx edx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
lea edx [ esp ]
push edx
push eax
push ecx
call sub_435bf6
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
add esp 0xc
mov esp ebp
pop ebp
retn 0x4
push 0x10
lea ecx [ esp + 0x4 ]
push ecx
add eax 0x4
push eax
call sub_435d02
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
add esp 0xc
mov esp ebp
pop ebp
retn 0x4
cmp cx 0x58
jne r-xdata
sub_443676
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
dec eax
cmp eax 0xb
ja r-xdata
xor eax eax
retn 0x4
jmp [ eax * 4 + jump_table_4436c6 ]
mov eax 0x4
retn 0x4
mov eax 0x8
retn 0x4
mov eax 0x1
retn 0x4
mov eax [ ecx + 0xc ]
mov eax [ eax + 0x4 ]
lea eax [ eax + eax + 0x2 ]
retn 0x4
mov ecx [ ecx ]
mov eax [ ecx ]
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0xc ]
retn 0x4
sub_443711
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
cmp esi edi
jbe r-xdata
mov ecx [ eax ]
mov eax [ ebx ]
mov edx esi
call sub_40c0e0
test eax eax
jl r-xdata
mov esi edi
pop edi
pop esi
mov al 0x1
pop ebx
retn
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
retn
cmp esi edi
jae r-xdata
sub_443749
mov ecx [ esp + 0x4 ]
push ecx
call sub_435680
test al al
jne r-xdata
mov al 0x1
retn 0x4
push ecx
call sub_435662
test al al
jne r-xdata
push ecx
call sub_435644
test al al
jne r-xdata
retn 0x4
sub_443773
mov edx [ esp + 0x4 ]
mov eax edx
call sub_40d240
test al al
jne r-xdata
mov al 0x1
retn 0x4
push edx
call sub_443749
test al al
jne r-xdata
cmp [ edx + 0x8 ] 0x0
sete al
retn 0x4
sub_44379c
push esi
mov esi [ esp + 0x8 ]
push 0xfa0
lea eax [ esi + 0x14 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push eax
mov [ esi + 0xc ] 0x0
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov edx [ esp + 0xc ]
push 0x0
lea ecx [ esi + 0x2c ]
push ecx
push edx
mov [ esi + 0x30 ] 0x0
call sub_43569d
add esp 0xc
push 0x1f4
lea eax [ esi + 0x34 ]
push eax
call [ __import_lookup_table_0(KERNEL32:InterlockedExchange) ]
mov eax esi
pop esi
retn 0x8
sub_443817
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x20 ]
push eax
call sub_435703
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebp ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
push esi
call sub_4356cd
push ebx
call sub_4356cd
mov ecx [ edi ]
push 0x0
push esi
push ecx
call sub_43569d
mov edx [ ebp ]
push 0x0
push ebx
push edx
call sub_43569d
mov eax [ edi ]
add esp 0x20
sub_443887
sub esp 0xc
mov eax [ esp + 0x10 ]
mov eax [ eax ]
push esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x4 ] 0xc
mov [ esp + 0xc ] 0x0
mov [ esp + 0x8 ] 0x0
test al 0x10
je r-xdata
test al 0x1
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
pop esi
add esp 0xc
retn 0xc
push 0x1
push esi
push eax
call sub_43569d
mov eax [ esi ]
add esp 0xc
pop esi
add esp 0xc
retn 0xc
push 0x0
push 0x80
push 0x3
lea eax [ esp + 0x10 ]
push eax
push 0x1
push 0x80000000
push r--data
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
push edx
push esi
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
pop esi
add esp 0xc
retn 0xc
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
push edx
call sub_43569d
push esi
call sub_4356cd
mov eax [ esp + 0x28 ]
add esp 0x10
mov [ esi ] eax
pop esi
add esp 0xc
retn 0xc
or eax 0xffffffff
pop esi
add esp 0xc
retn 0xc
sub_443981
sub esp 0xc
mov eax [ esp + 0x10 ]
mov eax [ eax ]
mov ecx [ esp + 0x18 ]
push esi
mov esi [ esp + 0x20 ]
mov [ esp + 0x4 ] 0xc
mov [ esp + 0xc ] 0x0
mov [ esp + 0x8 ] 0x0
test al 0x10
je r-xdata
test [ esp + 0x18 ] eax
je r-xdata
push ecx
call [ GetStdHandle@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
push ecx
call [ GetStdHandle@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
pop esi
add esp 0xc
retn 0x14
push 0x1
push esi
push eax
call sub_43569d
mov eax [ esi ]
add esp 0xc
pop esi
add esp 0xc
retn 0x14
push 0x0
push 0x80
push 0x3
lea eax [ esp + 0x10 ]
push eax
push 0x2
push 0x40000000
push r--data
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x24 ]
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
push esi
push edx
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
pop esi
add esp 0xc
retn 0x14
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
push edx
call sub_43569d
push esi
call sub_4356cd
mov eax [ esp + 0x30 ]
add esp 0x10
mov [ esi ] eax
pop esi
add esp 0xc
retn 0x14
or eax 0xffffffff
pop esi
add esp 0xc
retn 0x14
sub_443a7f
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
call sub_4356cd
lea ecx [ esi + 0xc ]
push ecx
call sub_4356cd
add esi 0x14
push esi
call sub_4356cd
add esp 0xc
pop esi
retn 0x4
sub_443aa6
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
xor edx edx
push ecx
mov [ esp + 0x18 ] edx
call sub_4356e7
test al al
je r-xdata
pop edi
mov eax edx
pop ebx
retn 0xc
test ebx ebx
je r-xdata
test edi edi
je r-xdata
push esi
push edx
lea eax [ esp + 0x1c ]
push eax
lea esi [ ecx + 0x18 ]
mov ecx [ esi ]
push edi
push ebx
push ecx
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop esi
pop edi
pop ebx
retn 0xc
push esi
call sub_4356cd
add esp 0x4
sub_443b14
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
lea eax [ esi + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
lea edi [ esi + 0x10 ]
push edi
lea ebx [ esi + 0x14 ]
push ebx
push esi
call sub_443817
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push edi
push ebx
push 0xfffffff4
push 0x4
push esi
call sub_443981
sub_443b47
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0x14 ]
push ecx
lea edi [ esi + 0x8 ]
push edi
lea ebx [ esi + 0xc ]
push ebx
push esi
call sub_443817
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push edi
push ebx
push 0xfffffff5
push 0x2
push esi
call sub_443981
sub_443b7a
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx 0x1
test eax eax
je r-xdata
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
test eax eax
je r-xdata
add [ eax + 0x4 ] ecx
mov eax [ edi + 0x8 ]
push 0x0
lea edx [ esi + 0x8 ]
push edx
push eax
call sub_43569d
mov edx [ edi + 0xc ]
push 0x0
lea ecx [ esi + 0xc ]
push ecx
push edx
call sub_43569d
mov ecx [ edi + 0x10 ]
push 0x0
lea eax [ esi + 0x10 ]
push eax
push ecx
call sub_43569d
mov eax [ edi + 0x14 ]
push 0x0
lea edx [ esi + 0x14 ]
push edx
push eax
call sub_43569d
mov edx [ edi + 0x18 ]
push 0x0
lea ecx [ esi + 0x18 ]
push ecx
push edx
call sub_43569d
mov ecx [ edi + 0x1c ]
push 0x0
lea eax [ esi + 0x1c ]
push eax
push ecx
call sub_43569d
add esp 0x48
pop edi
mov eax esi
pop esi
retn 0x8
add [ eax + 0x4 ] ecx
sub_443c48
sub esp 0x20
push ebx
push esi
push edi
mov edi [ esp + 0x30 ]
xor bl bl
cmp [ edi + 0x8 ] bl
jne r-xdata
pop edi
pop esi
mov eax 0x80040202
pop ebx
add esp 0x20
retn 0xc
mov esi [ esp + 0x34 ]
push r--data
push esi
call sub_437fad
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x38 ]
mov [ eax ] edi
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x20
retn 0xc
push r--data
push esi
call sub_437fad
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_437fad
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x10 ] ax
xor ecx ecx
mov edx 0xe3e3
mov eax 0x4296
push r--data
push esi
mov [ esp + 0x14 ] 0x1b
mov [ esp + 0x1a ] cx
mov [ esp + 0x1c ] 0xc0
mov [ esp + 0x1d ] bl
mov [ esp + 0x1e ] bl
mov [ esp + 0x1f ] bl
mov [ esp + 0x20 ] bl
mov [ esp + 0x21 ] bl
mov [ esp + 0x22 ] bl
mov [ esp + 0x23 ] 0x46
mov [ esp + 0x24 ] 0x4c1e39e1
mov [ esp + 0x28 ] dx
mov [ esp + 0x2a ] ax
mov [ esp + 0x2c ] 0xaa
mov [ esp + 0x2d ] 0x86
mov [ esp + 0x2e ] 0xec
mov [ esp + 0x2f ] 0x93
mov [ esp + 0x30 ] 0x8d
mov [ esp + 0x31 ] 0x89
mov [ esp + 0x32 ] 0x6e
mov [ esp + 0x33 ] 0x92
call sub_443c30
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_443c30
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_443c30
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_443c30
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_443c30
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_443c30
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x1c ]
push edx
push esi
call sub_443c30
add esp 0x8
test eax eax
jne r-xdata
sub_443dc2
mov eax [ esp + 0x4 ]
mov ecx [ eax - 0x4 ]
push esi
lea esi [ eax - 0x4 ]
push sub_443dba
push ecx
push 0x20
push eax
call sub_410aa0
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_443dea
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_443dc2
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0xc ] edi
pop edi
pop esi
retn 0x4
dec [ eax ]
mov eax [ esi + 0x10 ]
cmp [ eax ] edi
jne r-xdata
mov [ esi + 0x10 ] edi
push eax
call sub_4112ef
mov eax [ esi + 0x8 ]
push eax
call sub_4112ef
add esp 0x8
sub_443e8f
mov eax [ esp + 0x4 ]
push esi
mov esi [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x10
push 0x10
push 0x1
push 0x63
push esi
call [ __import_lookup_table_10(USER32:LoadImageW) ]
push 0x63
push sub_43614f
push 0xe
push 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x10
mov [ rw-data ] 0x10
mov [ rw-data ] eax
call [ EnumResourceNamesW@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop esi
retn
sub_443eef
cmp [ esp + 0x8 ] 0x1
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push 0x0
push esi
call sub_436486
add esp 0x4
test al al
jne r-xdata
pop esi
retn
push 0x1
jmp r-xdata
push 0x0
push esi
call [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ __import_lookup_table_10(USER32:AttachThreadInput) ]
sub_443f27
mov eax 0x10000
call sub_425210
mov ecx [ esp + 0x10004 ]
push 0x7fff
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ GetClassNameW@IAT ]
cmp [ esp ] 0x0
je r-xdata
mov eax 0x1
add esp 0x10000
retn 0x8
push esi
mov esi [ esp + 0x1000c ]
lea edx [ esp + 0x4 ]
push esi
push edx
call sub_436677
push esi
push r--data
call sub_436677
add esp 0x10
pop esi
sub_443fa3
push ebx
mov ebx [ esp + 0x8 ]
push ebx
call sub_436486
add esp 0x4
test al al
jne r-xdata
mov eax 0x1
pop ebx
retn 0x8
push ebx
call [ __import_lookup_table_10(USER32:IsWindowVisible) ]
test eax eax
jne r-xdata
push ebp
push esi
push edi
push 0x0
push 0x0
push 0xe
push ebx
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
xor ecx ecx
lea ebp [ edi + 0x1 ]
mov eax ebp
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov esi eax
push esi
push ebp
push 0xd
push ebx
call [ SendMessageW@IAT ]
xor ecx ecx
mov [ esi + edi * 2 ] cx
test eax eax
jle r-xdata
mov edi 0x7fff
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
mov edi [ esp + 0x18 ]
push edi
push esi
call sub_436677
push edi
push r--data
call sub_436677
add esp 0x10
sub_444078
push ebx
push ebp
push esi
push edi
mov edi [ timeGetTime@IAT ]
call edi
cmp [ rw-data ] 0x0
mov esi eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov ebx [ esp + 0x14 ]
mov ebp [ Sleep@IAT ]
sub eax esi
sub eax esi
dec eax
jmp r-xdata
mov eax [ ebx ]
push 0x0
push sub_436e33
push eax
mov [ rw-data ] 0x0
call [ __import_lookup_table_10(USER32:EnumThreadWindows) ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xa
call ebp
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax [ ebx + 0x4 ]
jae r-xdata
push 0x0
push r--data
push 0x0
push eax
mov [ rw-data ] 0x1
call [ __import_lookup_table_10(USER32:FindWindowExW) ]
mov ecx [ rw-data ]
mov esi eax
test esi esi
je r-xdata
call edi
cmp eax esi
jae r-xdata
push 0x0
push 0x0
push 0x10
push ecx
call [ SendMessageW@IAT ]
push 0xfa
call ebp
mov edx [ rw-data ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x1
push ecx
call sub_443eef
mov edx [ rw-data ]
add esp 0x8
push edx
call [ SetActiveWindow@IAT ]
push 0x0
push 0x0
push 0xf5
push esi
call [ SendMessageW@IAT ]
mov eax [ rw-data ]
push 0x0
push eax
call sub_443eef
add esp 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov eax [ rw-data ]
push 0x0
push eax
call [ __import_lookup_table_10(USER32:EndDialog) ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
sub_44419b
sub esp 0x8
push esi
push edi
mov edi [ esp + 0x24 ]
xor esi esi
mov [ rw-data ] 0x0
test edi edi
je r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
push ecx
push edx
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
mov edi eax
test esi esi
je r-xdata
mov [ rw-data ] 0x1
call [ GetCurrentThreadId@IAT ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x24 ]
push eax
push esi
lea ecx [ esp + 0x10 ]
push ecx
push sub_444078
push esi
push esi
mov [ esp + 0x24 ] edi
call sub_41415e
add esp 0x18
mov esi eax
cmp [ rw-data ] 0x1
jne r-xdata
push 0xffffffff
push esi
mov [ rw-data ] 0x0
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
add esp 0x8
retn
pop edi
or eax 0xffffffff
pop esi
add esp 0x8
retn
sub_444233
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
je r-xdata
push edi
push ebx
push esi
call sub_43701f
add esp 0xc
pop edi
pop esi
pop ebx
retn
push esi
call sub_4112d5
add esp 0x4
cmp eax 0xf
jbe r-xdata
push edi
push ebx
push esi
call sub_436ec8
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_444288
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov ebx [ esi + 0x14 ]
push edi
mov edi [ esi + 0x10 ]
push 0x2
push 0x0
push 0x0
call sub_40e0d0
mov eax [ esi + 0x14 ]
mov ebp [ esi + 0x10 ]
push 0x0
push ebx
push edi
mov [ esp + 0x20 ] eax
call sub_40e0d0
mov edx [ esp + 0x14 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x8
retn 0x4
sub_4442c7
push esi
mov esi [ esp + 0x8 ]
push esi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_40e190
mov ecx [ esi + 0x10 ]
sub ecx eax
mov eax [ esi + 0x14 ]
push 0x1
push 0x0
sbb eax edx
push eax
mov eax [ esi ]
push ecx
push eax
call [ __import_lookup_table_0(KERNEL32:SetFilePointerEx) ]
push esi
call sub_40e190
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
pop esi
retn 0x4
sub_444343
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_444326
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
lea eax [ esp + 0xc ]
push eax
mov eax [ esi ]
push ecx
push edx
push eax
call [ __import_lookup_table_0(KERNEL32:WriteFile) ]
mov eax [ esp + 0x8 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
pop esi
retn 0xc
sub_444377
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx 0x2
push edi
mov edi [ esp + 0x14 ]
test [ esi + 0x2c ] bl
je r-xdata
push edi
call sub_403d40
cmp eax ebx
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_403d40
cmp eax ebx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
mov al [ esp + 0x14 ]
mov cl [ esp + 0x15 ]
mov [ esp + 0x15 ] al
mov [ esp + 0x14 ] cl
mov dx [ esp + 0x14 ]
mov [ edi ] dx
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_4443f3
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
mov ebx [ edi ]
push eax
call sub_403d40
mov [ edi ] eax
pop edi
test eax eax
pop esi
setne al
pop ebx
retn 0xc
sub_444417
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ eax ]
push esi
mov esi [ eax + 0x4 ]
push edi
add esi esi
push esi
call sub_41171a
add esp 0x4
xor ecx ecx
mov edi eax
test esi esi
jbe r-xdata
mov eax [ esp + 0x10 ]
push esi
push edi
push eax
call sub_444343
push edi
mov ebx eax
call sub_4112ef
add esp 0x4
xor eax eax
cmp ebx esi
pop edi
pop esi
sete al
pop ebx
retn 0x8
push ebp
mov ebp edi
mov eax ebx
sub ebp ebx
movzx edx [ eax + 0x1 ]
mov [ eax + ebp ] dl
movzx edx [ eax ]
mov [ edi + ecx + 0x1 ] dl
add ecx 0x2
add eax 0x2
cmp ecx esi
jb r-xdata
pop ebp
sub_44447a
mov eax [ esp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
add esi esi
push esi
push eax
mov eax [ esp + 0x10 ]
push eax
call sub_444343
xor ecx ecx
cmp eax esi
sete cl
mov al cl
pop esi
retn 0x8
sub_44449f
mov eax [ esp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push esi
push eax
mov eax [ esp + 0x10 ]
push eax
call sub_444343
xor ecx ecx
cmp eax esi
sete cl
mov al cl
pop esi
retn 0x8
sub_4444c2
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push esi
push eax
push ecx
call sub_444343
xor ecx ecx
cmp eax esi
sete cl
mov al cl
pop esi
retn 0xc
sub_444508
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_437ba7
test al al
je r-xdata
mov eax [ esi ]
mov cx [ esp + 0xc ]
mov [ esi + 0x4 ] 0x1
mov [ eax ] cx
mov edx [ esi ]
xor eax eax
mov [ edx + 0x2 ] ax
mov eax esi
pop esi
retn 0x8
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_4013e0
xor ecx ecx
mov eax 0x8
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov [ esi ] eax
sub_444571
sub esp 0x30
push ebx
mov ebx [ esp + 0x3c ]
push esi
mov esi [ esp + 0x3c ]
mov [ esp + 0x40 ] 0xffffffff
test esi esi
jne r-xdata
cmp esi 0x5
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
lea eax [ esi + 0x1 ]
pop esi
pop ebx
add esp 0x30
retn 0x8
pop esi
xor eax eax
pop ebx
add esp 0x30
retn 0x8
cmp esi 0x6
je r-xdata
push edi
cmp esi 0x3
je r-xdata
mov edi esi
jmp r-xdata
cmp esi 0x4
je r-xdata
cmp [ edi * 4 + rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x44 ]
push ecx
push esi
push rw-data
call sub_437314
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn 0x8
mov edx [ edi * 4 + rw-data ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edi [ esp + 0x44 ]
push 0x2c
lea eax [ esp + 0x14 ]
push 0x0
push eax
mov [ esp + 0x18 ] 0x30
call sub_4131f0
add esp 0xc
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x14 ] 0x4
mov edx [ edi * 4 + rw-data ]
mov eax [ edx ]
push 0x0
push esi
push eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
pop edi
pop esi
mov [ ebx ] ecx
mov eax 0x1
pop ebx
add esp 0x30
retn 0x8
sub_444652
sub esp 0x30
mov eax [ esp + 0x34 ]
push ebp
mov ebp [ esp + 0x3c ]
push esi
mov esi [ esp + 0x44 ]
mov [ esp + 0x44 ] 0xffffffff
cmp eax 0x5
je r-xdata
pop esi
xor eax eax
pop ebp
add esp 0x30
retn 0xc
cmp eax 0x6
je r-xdata
push ebx
cmp eax 0x3
je r-xdata
mov ebx eax
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ esi ] 0x0
test eax eax
je r-xdata
lea ecx [ esp + 0x48 ]
push ecx
push eax
push rw-data
call sub_437314
test al al
jne r-xdata
pop ebx
pop esi
xor eax eax
pop ebp
add esp 0x30
retn 0xc
push edi
mov edi [ eax ]
push 0x2c
lea edx [ esp + 0x18 ]
push 0x0
push edx
mov [ esp + 0x1c ] 0x30
call sub_4131f0
add esp 0xc
test edi edi
je r-xdata
mov ebx [ esp + 0x48 ]
pop edi
pop ebx
pop esi
xor eax eax
pop ebp
add esp 0x30
retn 0xc
push 0x208
call sub_41171a
add esp 0x4
mov [ ebp ] eax
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x10 ]
push eax
push 0x0
push ebx
push edi
mov [ esp + 0x24 ] 0x11
mov [ esp + 0x48 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp ]
push ecx
call sub_4112ef
add esp 0x4
test [ esp + 0x18 ] 0x800
jne r-xdata
mov eax [ esp + 0x1c ]
test al 0x3
je r-xdata
or [ esi ] 0x40
or [ esi ] 0x80
jmp r-xdata
test al 0x8
je r-xdata
or [ esi ] 0x100
test eax 0x8080
je r-xdata
or [ esi ] 0x4
or [ esi ] 0x1
jmp r-xdata
pop edi
pop ebx
pop esi
mov eax 0x1
pop ebp
add esp 0x30
retn 0xc
or [ esi ] 0x200
test eax 0x1000
je r-xdata
sub_4447ab
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ ebx + edi * 4 + 0x1a4 ]
lea esi [ ebx + edi * 4 + 0x1a4 ]
test eax eax
je r-xdata
mov [ esi ] 0x0
cmp edi [ ebx + 0x9c0 ]
jne r-xdata
push eax
call sub_44478f
pop edi
pop esi
pop ebx
retn 0x8
cmp edi 0x7
mov eax edi
jl r-xdata
xor eax eax
cmp [ esi ] 0x0
jne r-xdata
cmp eax 0x7
jge r-xdata
dec eax
sub esi 0x4
cmp eax 0x7
jge r-xdata
mov [ ebx + 0x9c0 ] eax
pop edi
xor eax eax
pop esi
mov [ ebx + 0x9c0 ] eax
pop ebx
retn 0x8
sub_444812
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x194 ] 0x0
push edi
jne r-xdata
push ebx
push ebp
lea ebp [ esi + 0x19c ]
push ebp
lea edi [ esi + 0x198 ]
push edi
call sub_437353
lea ebx [ esi + 0x4c ]
push ebx
call sub_437bfd
test al al
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x194 ] eax
push ebx
call sub_437bfd
pop ebp
pop ebx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx [ esi + 0x14 ]
push ebp
push eax
push ecx
push esi
call sub_43737d
mov [ edi ] eax
mov edx [ esi + 0x194 ]
mov [ edi ] edx
cmp [ edi ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
sub_44487c
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x10 ]
push esi
xor esi esi
cmp eax esi
je r-xdata
pop esi
pop ebx
retn 0x4
cmp [ ebx + 0x20 ] esi
jne r-xdata
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn 0x4
push edi
pop edi
push edi
call sub_4375b0
push 0xf
call sub_43770a
inc esi
cmp esi 0x3
jl r-xdata
mov edi [ ebx + 0x10 ]
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
cmp eax edi
je r-xdata
sub_4448ca
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ eax + 0x4 ]
dec edi
mov [ esi ] 0x0
mov ebx 0x1
xor ebp ebp
lea ecx [ ecx ]
cmp edi 0xffffffff
je r-xdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
call sub_438a19
movzx eax [ eax ]
cmp ax 0x30
jb r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x8
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
xor al al
pop ebx
retn 0x8
cmp ax 0x41
jb r-xdata
cmp ax 0x39
ja r-xdata
cmp ax 0x61
jb r-xdata
cmp ax 0x46
ja r-xdata
movzx edx ax
sub edx 0x30
imul edx ebx
add [ esi ] edx
jmp r-xdata
cmp ax 0x66
ja r-xdata
movzx eax ax
sub eax 0x37
imul eax ebx
add [ esi ] eax
jmp r-xdata
inc ebp
dec edi
shl ebx 0x4
cmp ebp 0x8
jl r-xdata
movzx ecx ax
sub ecx 0x57
imul ecx ebx
add [ esi ] ecx
test edi edi
jl r-xdata
sub_44496c
sub esp 0x100
push esi
mov esi [ esp + 0x108 ]
push edi
mov edi [ esp + 0x110 ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
push ebx
test eax eax
je r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push eax
call [ __import_lookup_table_10(USER32:GetParent) ]
test eax eax
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
movzx eax [ esi + 0x27 ]
push 0x2
push eax
push 0xa0
push esi
call sub_4378b5
lea eax [ esp + 0xc ]
push eax
call [ __import_lookup_table_10(USER32:GetKeyboardState) ]
cmp [ edi ] 0x0
mov al 0x80
je r-xdata
cmp [ edi + 0x3 ] 0x0
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
movzx ecx [ esi + 0x28 ]
push 0x2
push ecx
push 0xa1
push esi
call sub_4378b5
cmp [ edi + 0x1 ] 0x0
je r-xdata
xor [ esp + 0x1c ] al
xor [ esp + 0xac ] al
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x3 ] 0x0
je r-xdata
movzx edx [ esi + 0x24 ]
push 0x2
push edx
push 0x11
push esi
call sub_4378b5
cmp [ edi + 0x2 ] 0x0
je r-xdata
xor [ esp + 0x1c ] al
xor [ esp + 0xad ] al
pop edi
pop esi
add esp 0x100
retn 0x8
cmp [ edi + 0x4 ] 0x0
je r-xdata
movzx eax [ esi + 0x25 ]
push 0x2
push eax
push 0x12
push esi
call sub_4378b5
cmp [ edi + 0x3 ] 0x0
je r-xdata
xor [ esp + 0x1d ] al
push esi
call sub_437953
pop ebx
movzx ecx [ esi + 0x29 ]
push 0x2
push ecx
push 0x5b
push esi
call sub_4378b5
cmp [ edi + 0x4 ] 0x0
je r-xdata
xor [ esp + 0x1e ] al
lea ecx [ esp + 0xc ]
push ecx
call [ __import_lookup_table_10(USER32:SetKeyboardState) ]
cmp [ edi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
xor [ esp + 0x67 ] al
movzx edx [ esi + 0x26 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0xc0000001
push edx
push 0x10
push 0x101
push eax
call ebx
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al [ edi + 0x3 ]
test al al
je r-xdata
movzx ecx [ esi + 0x24 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0xc0000001
push ecx
push 0x11
push 0x101
push edx
call ebx
cmp [ edi + 0x2 ] 0x0
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
movzx ecx [ esi + 0x29 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0xc0000001
push ecx
push 0x5b
push 0x101
push edx
call ebx
push esi
call sub_437953
pop ebx
pop edi
pop esi
add esp 0x100
retn 0x8
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
movzx edx [ esi + 0x25 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0xc0000001
push edx
push 0x12
push 0x101
push eax
movzx eax [ esi + 0x25 ]
mov ecx [ esi + 0x20 ]
shl eax 0x10
or eax 0xe0000001
push eax
push 0x12
push 0x105
push ecx
jmp r-xdata
call ebx
sub_444b65
sub esp 0x100
push esi
mov esi [ esp + 0x108 ]
push edi
mov edi [ esp + 0x110 ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
push ebx
test eax eax
je r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push eax
call [ __import_lookup_table_10(USER32:GetParent) ]
test eax eax
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
movzx eax [ esi + 0x27 ]
push 0x0
push eax
push 0xa0
push esi
call sub_4378b5
lea eax [ esp + 0xc ]
push eax
call [ __import_lookup_table_10(USER32:GetKeyboardState) ]
cmp [ edi ] 0x0
mov al 0x80
je r-xdata
cmp [ edi + 0x3 ] 0x0
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
movzx ecx [ esi + 0x28 ]
push 0x0
push ecx
push 0xa1
push esi
call sub_4378b5
cmp [ edi + 0x1 ] 0x0
je r-xdata
or [ esp + 0x1c ] al
or [ esp + 0xac ] al
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x3 ] 0x0
je r-xdata
movzx edx [ esi + 0x24 ]
push 0x0
push edx
push 0x11
push esi
call sub_4378b5
cmp [ edi + 0x2 ] 0x0
je r-xdata
or [ esp + 0x1c ] al
or [ esp + 0xad ] al
pop edi
pop esi
add esp 0x100
retn 0x8
cmp [ edi + 0x4 ] 0x0
je r-xdata
movzx eax [ esi + 0x25 ]
push 0x0
push eax
push 0x12
push esi
call sub_4378b5
cmp [ edi + 0x3 ] 0x0
je r-xdata
or [ esp + 0x1d ] al
push esi
call sub_43792a
pop ebx
movzx ecx [ esi + 0x29 ]
push 0x0
push ecx
push 0x5b
push esi
call sub_4378b5
cmp [ edi + 0x4 ] 0x0
je r-xdata
or [ esp + 0x1e ] al
lea ecx [ esp + 0xc ]
push ecx
call [ __import_lookup_table_10(USER32:SetKeyboardState) ]
cmp [ edi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
or [ esp + 0x67 ] al
movzx edx [ esi + 0x26 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0x1
push edx
push 0x10
push 0x100
push eax
call ebx
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al [ edi + 0x3 ]
test al al
je r-xdata
movzx ecx [ esi + 0x24 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0x1
push ecx
push 0x11
push 0x100
push edx
call ebx
cmp [ edi + 0x2 ] 0x0
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x0
jne r-xdata
movzx ecx [ esi + 0x29 ]
mov edx [ esi + 0x20 ]
shl ecx 0x10
or ecx 0x1
push ecx
push 0x5b
push 0x100
push edx
call ebx
push esi
call sub_43792a
pop ebx
pop edi
pop esi
add esp 0x100
retn 0x8
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
movzx edx [ esi + 0x25 ]
mov eax [ esi + 0x20 ]
shl edx 0x10
or edx 0x1
push edx
push 0x12
push 0x100
push eax
movzx eax [ esi + 0x25 ]
mov ecx [ esi + 0x20 ]
shl eax 0x10
or eax 0x20000001
push eax
push 0x12
push 0x104
push ecx
jmp r-xdata
call ebx
sub_444d52
sub esp 0x100
push esi
mov esi [ esp + 0x10c ]
push edi
mov edi [ esp + 0x10c ]
cmp [ edi + 0x20 ] 0x0
mov [ esi ] 0x0
mov [ esi + 0x1 ] 0x0
mov [ esi + 0x2 ] 0x0
mov [ esi + 0x3 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x5 ] 0x0
je r-xdata
push ebx
push ebp
mov ebp [ __import_lookup_table_10(USER32:GetAsyncKeyState) ]
push 0xa0
call ebp
mov ebx [ __import_lookup_table_10(USER32:GetKeyState) ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
call [ __import_lookup_table_10(USER32:GetKeyboardState) ]
mov al 0x80
cmp [ esp + 0xa8 ] al
je r-xdata
cmp [ edi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call ebx
mov edx 0x8000
test dx ax
je r-xdata
cmp [ edi + 0x1a ] 0x0
jne r-xdata
cmp [ esp + 0x18 ] al
jne r-xdata
push 0xa1
call ebp
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi ] 0x1
cmp [ esp + 0xa9 ] al
jne r-xdata
mov [ esi ] 0x1
cmp [ edi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call ebx
mov edx 0x8000
test dx ax
je r-xdata
cmp [ esp + 0x19 ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
push 0x11
call ebp
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x1 ] 0x1
cmp [ esp + 0x1a ] al
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov [ esi + 0x1 ] 0x1
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x11
call ebx
mov edx 0x8000
test dx ax
je r-xdata
cmp [ esp + 0x63 ] al
mov eax esi
jne r-xdata
cmp [ edi + 0x1d ] 0x0
jne r-xdata
mov [ esi + 0x2 ] 0x1
push 0x12
call ebp
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x2 ] 0x1
pop edi
pop esi
add esp 0x100
retn 0x8
cmp [ edi + 0x1e ] 0x0
jne r-xdata
mov [ esi + 0x3 ] 0x1
cmp [ edi + 0x1d ] 0x0
jne r-xdata
push 0x12
call ebx
mov edx 0x8000
test dx ax
je r-xdata
pop edi
mov [ esi + 0x4 ] 0x1
pop esi
add esp 0x100
retn 0x8
push 0x5b
call ebp
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x3 ] 0x1
cmp [ edi + 0x1e ] 0x0
mov eax esi
jne r-xdata
push 0x5b
call ebx
mov edx 0x8000
test dx ax
je r-xdata
pop ebp
pop ebx
pop ebp
pop ebx
pop edi
mov [ esi + 0x4 ] 0x1
pop esi
add esp 0x100
retn 0x8
mov eax esi
sub_444ef7
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0xa ] 0x0
je r-xdata
push esi
call sub_437a22
test al al
jne r-xdata
mov al 0x1
pop esi
retn 0x4
mov al [ esi ]
cmp al 0x2d
je r-xdata
xor al al
pop esi
retn 0x4
mov al 0x1
pop esi
retn 0x4
cmp al 0x2e
je r-xdata
cmp al 0x23
je r-xdata
cmp al 0x28
je r-xdata
cmp al 0x22
je r-xdata
cmp al 0x25
je r-xdata
cmp al 0x27
je r-xdata
cmp al 0x24
je r-xdata
cmp al 0x26
je r-xdata
cmp al 0x21
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x5d
je r-xdata
cmp al 0x5b
je r-xdata
cmp al 0x5c
je r-xdata
cmp al 0xa5
je r-xdata
cmp al 0xa3
je r-xdata
cmp al 0x5f
je r-xdata
cmp al 0xa6
je r-xdata
cmp al 0xa7
je r-xdata
cmp al 0xa8
je r-xdata
cmp al 0xa9
je r-xdata
cmp al 0xaa
je r-xdata
cmp al 0xab
je r-xdata
cmp al 0xac
je r-xdata
cmp al 0xad
je r-xdata
cmp al 0xae
je r-xdata
cmp al 0xaf
je r-xdata
cmp al 0xb0
je r-xdata
cmp al 0xb1
je r-xdata
cmp al 0xb2
je r-xdata
cmp al 0xb3
je r-xdata
cmp al 0xb4
je r-xdata
cmp al 0xb5
je r-xdata
cmp al 0xb6
je r-xdata
cmp al 0xb7
jne r-xdata
sub_444fc0
mov eax [ esp + 0x4 ]
xor cl cl
mov [ eax + 0x7 ] cl
mov [ eax ] 0xff
xor edx edx
mov [ eax + 0x8 ] dx
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] cl
mov [ eax + 0x3 ] cl
mov [ eax + 0x4 ] cl
mov [ eax + 0x5 ] cl
mov [ eax + 0x6 ] cl
mov [ eax + 0xa ] cl
retn 0x4
sub_444fea
push esi
xor esi esi
mov eax esi
pop esi
retn 0x4
inc esi
cmp esi 0x2b
jl r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax ]
mov ecx [ esi * 4 + rw-data ]
push eax
push ecx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
retn 0x4
sub_445051
mov edx [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi ]
lea ecx [ eax + 0x4 ]
push edi
mov edi [ eax + edx ]
mov [ esi ] ecx
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ebx eax
mov eax [ esi ]
add eax [ esp + 0x18 ]
lea ebp [ edi + edi ]
push ebp
push eax
push ebx
call sub_410f70
add [ esi ] ebp
xor ecx ecx
add esp 0x10
xor eax eax
mov [ ebx + ebp ] cx
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn 0x8
xor [ ebx + eax * 2 ] di
inc eax
cmp eax edi
jl r-xdata
sub_4450b6
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
xor ebx ebx
jmp r-xdata
movzx eax [ edi + esi * 2 ]
push eax
call sub_437b6b
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
inc esi
jmp r-xdata
xor edx edx
mov [ edi + ebx * 2 ] dx
pop edi
pop esi
pop ebx
retn 0x4
lea esp [ esp ]
inc esi
mov [ edi + ebx * 2 ] ax
movzx eax [ edi + esi * 2 ]
inc ebx
test ax ax
jne r-xdata
xor ecx ecx
mov [ edi + ebx * 2 ] cx
pop edi
pop esi
pop ebx
retn 0x4
sub_445111
push edi
mov edi [ esp + 0x8 ]
push edi
call sub_4112d5
add esp 0x4
test eax eax
je r-xdata
pop edi
retn 0x4
push esi
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
xor ecx ecx
mov [ edi + esi * 2 + 0x2 ] cx
pop esi
lea ebx [ ebx ]
sub esi 0x1
jns r-xdata
movzx eax [ edi + esi * 2 ]
push eax
call sub_437b6b
add esp 0x4
test eax eax
je r-xdata
sub_445153
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
xor eax eax
mov edi edi
inc eax
jmp r-xdata
cmp cx 0x9
jne r-xdata
movzx ecx [ esi + eax * 2 ]
cmp cx 0x20
je r-xdata
movzx ecx [ esi + eax * 2 ]
cmp cx 0x22
jne r-xdata
cmp cx 0x27
jne r-xdata
mov edx 0x22
mov bl 0x1
jmp r-xdata
cmp cx 0x3c
jne r-xdata
mov edx 0x27
mov bl 0x1
jmp r-xdata
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
xor ebp ebp
cmp cx dx
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0xc
mov edx 0x3e
xor bl bl
cmp [ esi + eax * 2 ] dx
jne r-xdata
test cx cx
je r-xdata
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
cmp cx 0x20
je r-xdata
inc eax
mov [ edi + ebp * 2 ] cx
movzx ecx [ esi + eax * 2 ]
inc ebp
cmp cx dx
jne r-xdata
cmp cx 0x9
je r-xdata
movzx eax [ esi + eax * 2 ]
test ax ax
je r-xdata
xor eax eax
mov [ edi + ebp * 2 ] ax
call sub_40fff0
mov esi eax
push esi
call sub_4450b6
push esi
call sub_445111
test bl bl
je r-xdata
cmp ax 0x3b
jne r-xdata
mov ebx [ esp + 0x14 ]
xor ebp ebp
cmp [ ebx + 0x3c ] ebp
jbe r-xdata
push edi
call sub_436b22
add esp 0x4
test al al
jne r-xdata
push esi
call sub_4112ef
add esp 0x4
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ ebx + 0x38 ]
mov ecx [ eax + ebp * 4 ]
push ecx
push edi
call sub_411691
push esi
push edi
call sub_411663
push edi
call sub_436b22
add esp 0x14
test al al
jne r-xdata
mov ebx [ esp + 0x14 ]
mov ebp [ ebx + 0x3c ]
sub ebp 0x1
js r-xdata
push esi
push edi
call sub_411691
inc ebp
add esp 0x8
cmp ebp [ ebx + 0x3c ]
jb r-xdata
mov ecx [ ebx + 0x38 ]
mov edx [ ecx + ebp * 4 ]
push edx
push edi
call sub_411691
push esi
push edi
call sub_411663
push edi
call sub_436b22
add esp 0x14
test al al
jne r-xdata
push esi
push edi
call sub_411691
add esp 0x8
sub ebp 0x1
jns r-xdata
push esi
call sub_4112ef
add esp 0x4
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_4452d0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_437ba7
test al al
je r-xdata
mov eax [ esi ]
mov [ esi + 0x4 ] 0x0
mov [ eax ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_437bb9
push 0x10
mov [ esi + 0x8 ] 0x10
call sub_41171a
add esp 0x4
mov [ esi ] eax
sub_445329
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0xc
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push edi
add eax eax
push eax
call sub_438867
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ esi + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_410f70
mov edx [ esi + 0x4 ]
push edx
call sub_4112ef
add esp 0x14
mov [ esi + 0x4 ] edi
pop edi
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ ecx + edx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x8
mov ecx [ ebp ]
mov [ eax ] ecx
mov edx [ ebp + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ ecx + edx * 4 ] eax
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_4453c4
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push edi
call sub_4137e0
mov [ esi + 0x4 ] eax
add esp 0x4
inc eax
push eax
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
mov ecx [ esi + 0x4 ]
inc ecx
push ecx
push edi
push eax
mov [ esi ] eax
call sub_410f70
add esp 0x10
push esi
call sub_437bb9
pop edi
mov eax esi
pop esi
retn 0x8
sub_445408
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_437ba7
test al al
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
dec [ eax ]
push edi
push esi
call sub_437bb9
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
inc ecx
push ecx
mov edi eax
push edx
push edi
call sub_410f70
add esp 0x10
mov [ esi ] edi
pop edi
sub_445450
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
xor esi esi
xor edi edi
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x4 ]
cmp ebx esi
jle r-xdata
mov ecx [ ecx ]
cmp ecx 0xffffffff
je r-xdata
mov [ ebp ] edi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
lea ebx [ ebx ]
mov esi eax
mov edi ecx
mov eax [ esp + 0x14 ]
push esi
push eax
call sub_437be2
movzx ecx [ eax ]
push ecx
call sub_437c0c
add esi eax
inc edi
cmp ebx esi
jg r-xdata
sub_4454a5
mov edx [ esp + 0x8 ]
mov eax [ edx + 0x4 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
xor esi esi
xor ecx ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
cmp eax ecx
jle r-xdata
mov edx [ edx ]
cmp edx 0xffffffff
je r-xdata
mov [ ebx + 0x4 ] esi
pop esi
pop ebx
retn 0xc
sub eax ecx
push edi
mov edi eax
lea esp [ esp ]
mov esi eax
mov ecx edx
mov eax [ esp + 0x10 ]
push esi
push eax
call sub_437be2
movzx ecx [ eax ]
push ecx
call sub_437c0c
add esi eax
sub edi 0x1
jne r-xdata
pop edi
sub_445513
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
xor ebx ebx
mov [ esp + 0x8 ] ebx
mov [ esp + 0x10 ] ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x3c ] bl
cmp eax ebx
je r-xdata
mov ecx [ eax ]
lea edx [ esi + 0x10 ]
push edx
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push edx
mov edx [ esi + 0x28 ]
push 0xffffffff
push edx
push ebx
push 0xfffffffd
push eax
mov eax [ ecx + 0x2c ]
call eax
cmp [ esi + 0x3d ] bl
jne r-xdata
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x34 ] ebx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esp + 0x8 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x3c ] bl
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax ebx
je r-xdata
push eax
call sub_4454f9
mov [ esi + 0x2c ] ebx
mov eax [ esi + 0xc ]
push ebx
push eax
call [ __import_lookup_table_6(ole32:OleSetContainedObject) ]
mov eax [ esi + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x3d ] bl
je r-xdata
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x30 ] ebx
mov eax [ esi + 0xc ]
mov edx [ esi + 0x38 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x50 ]
call eax
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push ebx
push eax
call edx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push ebx
push ebx
push eax
call edx
mov eax [ esi + 0x8 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push ebx
push 0x2
push 0x1
push eax
call edx
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x10 ] ebx
cmp [ esi + 0x3c ] bl
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push eax
call edx
mov eax [ esp + 0x8 ]
pop esi
pop ebx
pop ecx
retn 0x4
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0xc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0xc ] ebx
mov ecx [ esi + 0x8 ]
push ecx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push eax
call edx
sub_445691
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebp
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
call sub_410810
mov eax [ ebp + 0x8 ]
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x8 ] eax
test eax eax
jbe r-xdata
push eax
call sub_438867
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x8
mov [ esi + 0x4 ] edi
pop edi
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_445719
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
push ebx
call [ __import_lookup_table_10(USER32:IsWindowVisible) ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0xe
push ebx
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
cmp [ eax + 0x5 ] 0x1
jne r-xdata
push ebp
xor ecx ecx
lea ebp [ edi + 0x1 ]
mov eax ebp
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov esi eax
push esi
push ebp
push 0xd
push ebx
call [ SendMessageW@IAT ]
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop ebp
test eax eax
jg r-xdata
mov edi 0x7fff
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x8
mov edi [ esp + 0x10 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
push esi
mov eax [ edi + 0x24 ]
push eax
push esi
call sub_413772
add esp 0x8
push esi
test eax eax
je r-xdata
push esi
call sub_4112d5
add esp 0x4
push eax
push esi
call [ CharUpperBuffW@IAT ]
call sub_4112ef
add esp 0x4
mov [ edi + 0xe8 ] 0x1
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_4457ee
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
lea eax [ esi + 0x24 ]
push eax
call sub_437bfd
test al al
je r-xdata
push edi
call sub_43896d
test al al
je r-xdata
pop edi
mov al 0x1
pop esi
retn 0x8
push esi
push sub_4457dc
push edi
mov [ esi + 0xe8 ] 0x0
call [ EnumChildWindows@IAT ]
cmp [ esi + 0xe8 ] 0x0
pop edi
setne al
pop esi
retn 0x8
pop edi
xor al al
pop esi
retn 0x8
sub_445840
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x4 ] 0x0
ja r-xdata
mov eax [ esp + 0xc ]
push ebp
push esi
push edi
push eax
call sub_4112d5
mov edi [ ebx + 0x4 ]
add esp 0x4
xor esi esi
mov ebp eax
test edi edi
jbe r-xdata
or eax 0xffffffff
pop ebx
retn 0x8
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x8
mov ebx [ ebx ]
nop
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
inc esi
add ebx 0x2
cmp esi edi
jb r-xdata
mov ecx [ esp + 0x18 ]
mov edx ebp
mov eax ebx
call sub_40c0e0
test eax eax
je r-xdata
sub_4458ab
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_438992
test al al
je r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
mov ecx [ esi ]
push eax
push 0x0
push 0xc
push ecx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
xor al al
pop esi
retn 0xc
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov al 0x1
pop esi
retn 0xc
mov edx [ esi ]
push 0x1
push 0x0
push edx
call [ __import_lookup_table_10(USER32:GetParent) ]
push eax
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
sub_4458f9
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
push edi
mov edi [ __import_lookup_table_10(USER32:GetWindowLongW) ]
push 0xfffffff0
push esi
call edi
test eax 0x40000000
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
lea ebx [ ebx ]
push esi
call sub_43893b
mov esi eax
push 0xfffffff0
push esi
call edi
test eax 0x40000000
jne r-xdata
push esi
call sub_43893b
test eax eax
je r-xdata
sub_44593e
cmp [ esp + 0x8 ] 0x1
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push 0x0
push esi
call sub_43896d
test al al
jne r-xdata
pop esi
retn 0x8
push 0x1
jmp r-xdata
push 0x0
push esi
call [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ __import_lookup_table_10(USER32:AttachThreadInput) ]
sub_445975
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
push edi
mov edi [ esp + 0x14 ]
push edi
call sub_4112d5
add esp 0x4
cmp esi eax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
retn
mov eax [ ebx ]
mov edx esi
mov ecx edi
call sub_40c0e0
test eax eax
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4459ab
sub esp 0x204
push ebx
push esi
mov esi [ esp + 0x210 ]
push edi
mov edi [ esp + 0x218 ]
push 0x100
lea eax [ esp + 0x10 ]
push eax
push edi
call [ GetClassNameW@IAT ]
call [ __import_lookup_table_10(USER32:GetFocus) ]
lea ecx [ esp + 0xc ]
mov ebx eax
mov eax [ esi + 0x8c ]
push ecx
push eax
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x204
retn 0x8
inc [ esi + 0x130 ]
cmp edi [ esi + 0xd8 ]
jne r-xdata
mov edx [ esi + 0xd4 ]
push edx
push ebx
call sub_4389eb
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x204
retn 0x8
sub_445a77
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
sub esp 0x204
push esi
mov esi [ esp + 0x210 ]
push edi
push ecx
call [ __import_lookup_table_10(USER32:GetParent) ]
push 0x100
lea edx [ esp + 0xc ]
mov edi eax
push edx
push edi
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x8 ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
pop edi
xor al al
pop esi
add esp 0x204
retn 0x8
mov eax [ esi ]
push r--data
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
push r--data
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x7029
jmp r-xdata
mov eax [ esi ]
push r--data
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x702c
jmp r-xdata
push 0x111
push edi
call [ SendMessageW@IAT ]
mov esi [ esi ]
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push eax
push 0x702a
jmp r-xdata
pop edi
mov al 0x1
pop esi
add esp 0x204
retn 0x8
push eax
push 0x702b
sub_445b50
sub esp 0x8b0
push ebx
push ebp
push esi
mov esi [ esp + 0x8c0 ]
push edi
push esi
call sub_438c85
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x40 ]
call sub_410480
mov eax [ esi ]
push eax
push 0x28
lea ecx [ esp + 0x48 ]
push ecx
call sub_437543
mov edx [ esi ]
push edx
mov edi eax
push 0x800
lea eax [ esp + 0x48 ]
push eax
call sub_437543
mov ecx [ esp + 0x8cc ]
push 0x28
push edi
mov ebx eax
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x4c ]
push eax
mov [ esp + 0x40 ] 0x400
mov [ esp + 0x30 ] ecx
mov [ esp + 0x3c ] ebx
call sub_4374af
xor ebp ebp
cmp ebp [ esp + 0x14 ]
jge r-xdata
lea edi [ esp + 0x40 ]
jne r-xdata
lea ebx [ ebx ]
call sub_4104a0
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x8b0
retn 0xc
call sub_4104a0
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8b0
retn 0xc
cmp ebp [ esp + 0x14 ]
inc ebp
cmp ebp [ esp + 0x14 ]
jl r-xdata
mov ecx [ esi ]
push edi
push ebp
push 0x1073
push ecx
call [ SendMessageW@IAT ]
push 0x800
lea edx [ esp + 0xc4 ]
push edx
push ebx
lea eax [ esp + 0x4c ]
push eax
call sub_437472
mov ecx [ esp + 0x8c8 ]
mov eax [ ecx ]
push eax
lea edx [ esp + 0xc4 ]
push edx
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
sub_445c50
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
call sub_438c85
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ecx
retn 0x4
mov eax [ edi ]
push 0x2
push esi
push 0x102c
push eax
call [ SendMessageW@IAT ]
push esi
push esi
test eax eax
je r-xdata
push 0x1
push 0x0
jmp r-xdata
push edi
call sub_438c9e
inc esi
cmp esi ebx
jl r-xdata
sub_445cb7
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_438e26
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp al 0x1
jne r-xdata
test al al
jne r-xdata
mov al 0x1
pop esi
retn 0x8
push 0xffffffff
push 0xffffffff
push 0x1
push 0x0
push esi
call sub_438ead
push 0xffffffff
push 0xffffffff
push 0x1
push 0x0
push esi
call sub_438ead
mov al 0x1
pop esi
retn 0x8
sub_445cf9
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi ]
push edi
push 0x1
push eax
call sub_44593e
mov ebx [ MapVirtualKeyW@IAT ]
push 0x0
push 0x25
call ebx
mov ebp [ PostMessageW@IAT ]
shl eax 0x10
or eax 0x1
cmp [ esp + 0x18 ] 0x0
push eax
jge r-xdata
mov eax [ esi ]
push 0x27
push 0x100
push eax
call ebp
mov edi [ Sleep@IAT ]
push 0x0
call edi
push 0x0
push 0x25
call ebx
mov ecx [ esi ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x27
push 0x101
push ecx
mov ecx [ esi ]
push 0x25
push 0x100
push ecx
call ebp
mov edi [ Sleep@IAT ]
push 0x0
call edi
push 0x0
push 0x25
call ebx
mov edx [ esi ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x25
push 0x101
push edx
jmp r-xdata
call ebp
push 0x0
call edi
mov edx [ esi ]
push 0x0
push edx
call sub_44593e
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x8
sub_445da4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
push edi
push 0x1
push eax
call sub_44593e
mov ecx [ esi ]
push ecx
call [ __import_lookup_table_10(USER32:SetFocus) ]
mov edx [ esi ]
push 0x0
push edx
mov edi eax
call sub_44593e
test edi edi
pop edi
setne al
pop esi
retn 0x4
sub_445dd3
sub esp 0x2c
push ebx
mov ebx [ esp + 0x38 ]
push ebp
push esi
push edi
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x44 ]
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x28 ]
push edx
xor esi esi
xor ebp ebp
push eax
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x30 ] 0x4
call sub_4392bc
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call sub_438fb6
mov edx [ esp + 0x20 ]
push edx
call sub_438fb6
push ebp
call sub_438fb6
push esi
call sub_438fb6
mov al [ esp + 0x54 ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0xc
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
call sub_43928b
test al al
je r-xdata
lea eax [ esp + 0x2c ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push eax
mov [ esp + 0x20 ] esi
call [ __import_lookup_table_1(ADVAPI32:GetSecurityDescriptorDacl) ]
test eax eax
je r-xdata
push 0xc
lea ecx [ esp + 0x34 ]
push esi
push ecx
call sub_4131f0
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esp + 0x34 ] 0x8
cmp eax esi
je r-xdata
push ebx
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
mov ecx [ esp + 0x34 ]
lea eax [ ecx + eax * 2 + 0x10 ]
push eax
lea edx [ esp + 0x18 ]
push edx
call sub_439256
mov ebp [ esp + 0x14 ]
test al al
je r-xdata
push 0x2
push 0xc
lea edx [ esp + 0x38 ]
push edx
push eax
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x28 ] esi
je r-xdata
push ebx
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
mov edi eax
add edi 0x8
push edi
call sub_438fcf
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax esi
je r-xdata
push ebx
lea eax [ esi + 0x8 ]
push eax
push ebx
mov [ esi + 0x2 ] di
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
xor edi edi
cmp eax esi
jbe r-xdata
mov edi [ esp + 0x48 ]
xor ebx ebx
add edi 0x4
jmp r-xdata
inc ebx
add edi 0xc
cmp ebx 0x1
jb r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push edi
push ecx
call [ __import_lookup_table_1(ADVAPI32:GetAce) ]
test eax eax
je r-xdata
mov cl [ edi - 0x4 ]
mov dl [ edi - 0x3 ]
mov eax [ edi ]
mov [ esi ] cl
movzx ecx [ esi + 0x2 ]
push ecx
push esi
push 0xffffffff
push 0x2
push ebp
mov [ esi + 0x1 ] dl
mov [ esi + 0x4 ] eax
call [ __import_lookup_table_1(ADVAPI32:AddAce) ]
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
push 0x0
push ebp
push 0x1
push edi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
movzx edx [ eax + 0x2 ]
push edx
push eax
push 0xffffffff
push 0x2
push ebp
call [ __import_lookup_table_1(ADVAPI32:AddAce) ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
push edi
lea edx [ esp + 0x24 ]
push edx
push eax
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
inc edi
cmp edi [ esp + 0x30 ]
jb r-xdata
mov [ esp + 0x44 ] 0x1
sub_445fe0
sub esp 0x2c
push ebx
mov ebx [ esp + 0x38 ]
push ebp
push esi
push edi
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x44 ]
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x28 ]
push edx
xor esi esi
xor ebp ebp
push eax
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x30 ] 0x4
call sub_4392bc
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call sub_438fb6
mov edx [ esp + 0x20 ]
push edx
call sub_438fb6
push ebp
call sub_438fb6
push esi
call sub_438fb6
mov al [ esp + 0x54 ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0xc
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
call sub_43928b
test al al
je r-xdata
lea eax [ esp + 0x2c ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push eax
mov [ esp + 0x20 ] esi
call [ __import_lookup_table_1(ADVAPI32:GetSecurityDescriptorDacl) ]
test eax eax
je r-xdata
push 0xc
lea ecx [ esp + 0x34 ]
push esi
push ecx
call sub_4131f0
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esp + 0x34 ] 0x8
cmp eax esi
je r-xdata
push ebx
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
mov ecx [ esp + 0x34 ]
lea eax [ ecx + eax * 2 + 0x10 ]
push eax
lea edx [ esp + 0x18 ]
push edx
call sub_439256
mov ebp [ esp + 0x14 ]
test al al
je r-xdata
push 0x2
push 0xc
lea edx [ esp + 0x38 ]
push edx
push eax
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x28 ] esi
je r-xdata
push ebx
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
mov edi eax
add edi 0x8
push edi
call sub_438fcf
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax esi
je r-xdata
push ebx
lea eax [ esi + 0x8 ]
push eax
push ebx
mov [ esi + 0x2 ] di
call [ __import_lookup_table_1(ADVAPI32:GetLengthSid) ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
xor edi edi
cmp eax esi
jbe r-xdata
mov edi [ esp + 0x48 ]
xor ebx ebx
add edi 0x4
jmp r-xdata
inc ebx
add edi 0xc
cmp ebx 0x2
jb r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push edi
push ecx
call [ __import_lookup_table_1(ADVAPI32:GetAce) ]
test eax eax
je r-xdata
mov cl [ edi - 0x4 ]
mov dl [ edi - 0x3 ]
mov eax [ edi ]
mov [ esi ] cl
movzx ecx [ esi + 0x2 ]
push ecx
push esi
push 0xffffffff
push 0x2
push ebp
mov [ esi + 0x1 ] dl
mov [ esi + 0x4 ] eax
call [ __import_lookup_table_1(ADVAPI32:AddAce) ]
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
push 0x0
push ebp
push 0x1
push edi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
movzx edx [ eax + 0x2 ]
push edx
push eax
push 0xffffffff
push 0x2
push ebp
call [ __import_lookup_table_1(ADVAPI32:AddAce) ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
push edi
lea edx [ esp + 0x24 ]
push edx
push eax
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
inc edi
cmp edi [ esp + 0x30 ]
jb r-xdata
mov [ esp + 0x44 ] 0x1
sub_4461ed
sub esp 0x50
push ebx
push ebp
mov ebp [ esp + 0x5c ]
push esi
push edi
xor esi esi
push 0x20
lea eax [ esp + 0x44 ]
push esi
push eax
mov [ esp + 0x23 ] 0x0
mov [ esp + 0x24 ] esi
xor edi edi
xor ebx ebx
mov [ esp + 0x28 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x2c ] esi
call sub_4131f0
mov eax [ esp + 0x7c ]
add esp 0xc
mov [ esp + 0x40 ] 0x20
mov [ esp + 0x48 ] ebp
mov [ esp + 0x64 ] bl
test al 0x1
je r-xdata
mov edx [ esp + 0x6c ]
lea ecx [ esp + 0x18 ]
push ecx
push eax
mov eax [ esp + 0x70 ]
push edx
push eax
push ebp
call sub_43916a
test al al
je r-xdata
mov [ esp + 0x64 ] 0x1
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
test [ esp + 0x70 ] 0x2
je r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_438fb6
add esp 0x4
push edi
call [ CloseWindowStation@IAT ]
push ebx
call [ __import_lookup_table_10(USER32:CloseDesktop) ]
mov eax [ esp + 0x24 ]
push eax
call [ SetProcessWindowStation@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call [ CloseHandle@IAT ]
push esi
call sub_4112ef
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call [ __import_lookup_table_11(USERENV:DestroyEnvironmentBlock) ]
mov al [ esp + 0x17 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x24
mov ecx [ esp + 0x18 ]
push eax
push ecx
call [ __import_lookup_table_11(USERENV:UnloadUserProfile) ]
push 0x60000
push 0x0
push r--data
call [ OpenWindowStationW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x6c ]
push ecx
push 0x1
push 0x2
push 0x0
push 0x0
push edx
call [ DuplicateTokenEx@IAT ]
test eax eax
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ esp + 0x18 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x6c ]
mov [ esp + 0x18 ] ecx
call [ __import_lookup_table_10(USER32:GetProcessWindowStation) ]
push edi
mov [ esp + 0x28 ] eax
call [ SetProcessWindowStation@IAT ]
test eax eax
je r-xdata
push 0x60081
push 0x0
push 0x0
push r--data
call [ OpenDesktopW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
push edx
push eax
call sub_43919d
test al al
je r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x28 ]
push ecx
push edx
push edi
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x35 ] 0xb
mov [ esp + 0x38 ] 0xf0000000
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x41 ] 0x4
mov [ esp + 0x44 ] 0xf037f
call sub_445fe0
test al al
je r-xdata
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push eax
push ecx
push ebx
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x35 ] 0x0
mov [ esp + 0x38 ] 0xf01ff
call sub_445dd3
test al al
je r-xdata
mov eax [ esp + 0x80 ]
mov ebp [ eax + 0x2c ]
mov [ eax + 0x8 ] r--data
mov eax [ esp + 0x74 ]
and ebp 0x100
mov [ esp + 0x6c ] ebp
test eax eax
je r-xdata
cmp [ esp + 0x64 ] 0x0
je r-xdata
push eax
call sub_4112d5
mov ebp eax
inc ebp
xor ecx ecx
mov eax ebp
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi eax
mov eax [ esp + 0x7c ]
push ebp
push eax
push esi
call sub_41326a
mov ebp [ esp + 0x80 ]
add esp 0x14
test [ esp + 0x70 ] 0x4
jne r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x40 ]
push ecx
push edx
call [ __import_lookup_table_11(USERENV:LoadUserProfileW) ]
test eax eax
je r-xdata
mov edx [ esp + 0x84 ]
mov eax [ esp + 0x80 ]
mov ecx [ esp + 0x7c ]
push edx
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x80 ]
push ecx
push edx
or eax 0x400
push eax
mov eax [ esp + 0x2c ]
push ebp
push 0x0
push 0x0
push esi
push 0x0
push eax
call [ CreateProcessAsUserW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push eax
lea ecx [ esp + 0x28 ]
push ecx
call [ __import_lookup_table_11(USERENV:CreateEnvironmentBlock) ]
test eax eax
je r-xdata
cmp [ esp + 0x64 ] 0x0
je r-xdata
mov [ esp + 0x17 ] 0x1
jmp r-xdata
mov eax [ esp + 0x84 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x60 ]
push edx
push eax
call sub_439102
sub_4464dc
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ esp + 0x30 ]
push edi
mov edi [ esp + 0x30 ]
call sub_4393e2
push esi
push edi
push ebx
push ebp
test al al
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x2c ]
push eax
mov eax [ esp + 0x2c ]
push ecx
push edx
push eax
call sub_439326
pop edi
pop esi
pop ebp
pop ebx
retn 0x24
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push eax
mov eax [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x2c ]
push edx
push eax
push ecx
call sub_4461ed
pop edi
pop esi
pop ebp
pop ebx
retn 0x24
sub_446566
sub esp 0x130
mov ecx [ esp + 0x138 ]
mov edx [ esp + 0x14c ]
or eax 0xffffffff
push ebx
mov ebx [ esp + 0x148 ]
push ebp
mov [ esp + 0x14 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x148 ]
push esi
mov esi [ esp + 0x140 ]
lea ebp [ ecx + eax ]
push edi
xor edi edi
lea eax [ ebp - 0x1 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x38 ] eax
test ebx 0xe20f5a6f
je r-xdata
cmp esi edi
je r-xdata
lea eax [ edi - 0x3 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
add esp 0x130
retn
cmp ecx edi
je r-xdata
cmp [ esp + 0x158 ] edi
jne r-xdata
cmp edx edi
jge r-xdata
cmp edx edi
jg r-xdata
movzx eax [ esi + 0x1a ]
movzx ecx [ esi + 0x18 ]
movzx edx [ esi + 0x1c ]
mov [ esp + 0x6c ] eax
mov eax 0x989680
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
mov eax [ esi + 0x20 ]
add ecx esi
mov [ esp + 0x70 ] ecx
mov [ esp + 0x68 ] edx
mov [ esp + 0xdc ] edi
mov [ esp + 0x10 ] eax
cmp eax edi
jne r-xdata
mov eax 0xfffffff1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
cmp [ esi ] 0x50435245
je r-xdata
mov [ esp + 0x10 ] r--data
mov eax [ esi + 0x8 ]
movzx edx [ esi + 0x1c ]
movzx ecx al
shr eax 0x12
and eax 0x1
mov [ esp + 0x30 ] eax
movzx eax [ esi + 0x1a ]
imul edx eax
movzx eax [ esi + 0x18 ]
add edx [ esp + 0x144 ]
movzx edi bl
add eax edx
mov edx [ esp + 0x14c ]
or edi ecx
movzx ecx [ esi + 0xc ]
mov [ esp + 0xa8 ] eax
mov eax [ esp + 0x148 ]
mov [ esp + 0xac ] eax
add eax edx
mov [ esp + 0xb0 ] eax
mov [ esp + 0x44 ] eax
shr ecx 0x3
and ecx 0x1
mov [ esp + 0xe0 ] ecx
mov ecx [ esp + 0x150 ]
mov [ esp + 0xcc ] ecx
movzx eax [ esi + 0x8 ]
shr eax 0x5
and eax 0x1
mov [ esp + 0x94 ] eax
mov ecx [ esi + 0x8 ]
shr ecx 0xb
and ecx 0x1
mov [ esp + 0x8c ] ecx
mov eax [ esi + 0x8 ]
shr eax 0x19
and eax 0x1
mov [ esp + 0x90 ] eax
shr edi 0x4
and edi 0x1
mov eax 0x0
test bl 0x80
setne al
mov [ esp + 0xe8 ] edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x84 ] eax
mov eax ebx
shr eax 0x8
and eax 0x1
mov [ esp + 0x88 ] eax
mov eax ebx
shr eax 0xa
and eax 0x1
mov [ esp + 0x98 ] eax
mov eax ebx
shr eax 0x1c
and eax 0x1
mov [ esp + 0x9c ] eax
test ebx 0x8000000
je r-xdata
lea ecx [ esp + 0x114 ]
push ecx
push edi
lea edx [ esp + 0xf4 ]
push edx
push esi
call sub_43957c
mov esi eax
add esp 0x10
cmp esi edi
jne r-xdata
mov eax ebx
shr eax 0xf
and eax 0x1
mov eax 0x2
jmp r-xdata
mov eax 0xfffffffc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
mov eax [ esi + 0x8 ]
test eax 0x1800000
je r-xdata
cmp eax 0x800000
je r-xdata
mov [ esp + 0xc0 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x78 ] eax
add eax 0x340
mov [ esp + 0x7c ] eax
xor edx edx
mov eax ebx
and eax 0x1800000
mov [ esp + 0xa0 ] edx
mov [ esp + 0xd8 ] edx
je r-xdata
mov [ esp + 0xa4 ] edx
shr eax 0x17
and eax 0x1
mov [ esp + 0xa4 ] eax
jmp r-xdata
mov [ esp + 0xa4 ] 0x1
jmp r-xdata
cmp eax 0x1000000
je r-xdata
mov eax ebx
mov eax [ esi + 0x8 ]
jmp r-xdata
test ebx 0x700000
jne r-xdata
mov eax 0xffffffe9
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
cmp eax __dos_header
je r-xdata
je r-xdata
and eax 0x700000
cmp eax 0x300000
ja r-xdata
mov [ esp + 0x60 ] 0x1
jmp r-xdata
cmp eax 0x500000
jne r-xdata
mov eax 0xd0a
jmp r-xdata
cmp eax edx
je r-xdata
cmp [ esp + 0xc0 ] edx
je r-xdata
mov [ esp + 0x60 ] 0x2
jmp r-xdata
cmp eax 0xff
mov [ esp + 0x60 ] edx
jle r-xdata
mov eax 0xa
cmp eax 0x100000
je r-xdata
cmp ecx edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov [ esp + 0x64 ] 0x1
mov [ esp + 0x74 ] al
mov edx eax
sar edx 0x8
mov [ esp + 0x74 ] dl
mov [ esp + 0x64 ] 0x2
mov [ esp + 0x75 ] al
xor edx edx
jmp r-xdata
mov eax 0xd
jmp r-xdata
cmp eax 0x200000
jne r-xdata
mov eax [ esi + 0x8 ]
and eax 0x7
mov [ esp + 0xe4 ] eax
mov eax 0x55555556
imul [ esp + 0x15c ]
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ eax + eax * 2 ]
movzx eax [ esi + 0x12 ]
mov [ esp + 0x18 ] edx
test ax ax
jbe r-xdata
test ebx 0x2000
jne r-xdata
mov eax 0xfffffff3
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
mov edx [ esp + 0x158 ]
mov [ esp + 0x54 ] edx
movzx ecx ax
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jl r-xdata
mov eax [ esp + 0x14c ]
mov ecx [ esp + 0x148 ]
push eax
push ecx
call sub_431d82
add esp 0x8
test eax eax
jl r-xdata
mov edx [ esp + 0x54 ]
test edx edx
je r-xdata
mov eax ecx
mov [ esp + 0x18 ] ecx
lea eax [ ecx + ecx * 2 + 0x3 ]
lea ecx [ eax * 4 ]
push ecx
mov [ esp + 0x1c ] eax
call [ rw-data ]
add esp 0x4
mov [ esp + 0x54 ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x150 ]
test eax eax
jle r-xdata
mov eax 0xfffffff6
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
test edi edi
jne r-xdata
lea ecx [ edx + ecx * 4 ]
cdq
sub eax edx
sar eax 0x1
mov edx 0x1
sub edx eax
lea eax [ ecx + edx * 4 ]
sub ecx 0x4
cmp ecx eax
jb r-xdata
mov [ esp + 0x28 ] 0x1
jmp r-xdata
mov eax 0xfffffffa
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
cmp eax [ esp + 0x14c ]
jge r-xdata
test [ esi + 0xc ] 0x4
je r-xdata
test [ esi + 0xc ] 0x2
je r-xdata
lea esp [ esp ]
mov ecx [ esp + 0x18 ]
lea edx [ ecx + ecx ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x5c ] eax
mov [ esp + 0x58 ] ecx
mov [ esp + 0x80 ] 0x0
mov [ esp + 0xc8 ] 0xffffffff
movzx eax [ esi + 0x10 ]
lea eax [ eax + eax + 0x2 ]
cmp eax [ esp + 0x15c ]
mov [ esp + 0x18 ] eax
jle r-xdata
movzx eax [ ebp ]
cmp eax 0x7f
jle r-xdata
and ebx 0x4000000
mov [ esp + 0x40 ] ebx
jmp r-xdata
movzx eax [ esi + 0x16 ]
mov edx [ esp + 0x10 ]
movzx ecx al
shr eax 0x8
and eax 0x1
mov [ esp + 0x3c ] eax
movzx eax [ edx + ecx + 0x100 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
movzx eax [ esi + 0x14 ]
movzx ecx al
mov [ esp + 0x1c ] ecx
test eax 0x100
je r-xdata
mov [ ecx ] 0xffffffff
sub ecx 0x4
cmp ecx eax
jae r-xdata
and eax 0xc0
je r-xdata
mov edi [ esp + 0x54 ]
mov ebx [ esp + 0x44 ]
mov [ esp + 0x10 ] ebx
test edi edi
je r-xdata
mov [ esp + 0x20 ] 0x0
jmp r-xdata
mov eax [ esp + 0x78 ]
movzx ecx [ eax + ecx ]
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] ecx
cmp eax 0xc0
je r-xdata
cmp [ esp + 0x30 ] 0x0
mov eax [ esp + 0xb0 ]
mov ecx [ esp + 0x64 ]
je r-xdata
mov ecx [ esp + 0x18 ]
lea ecx [ edi + ecx * 4 ]
cmp edi ecx
jae r-xdata
mov eax 0xfffffff5
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
cmp [ esp + 0x40 ] 0x0
mov edi [ esp + 0x1c ]
jne r-xdata
cmp [ esp + 0x14 ] 0x0
mov edi ebp
je r-xdata
sub ecx edi
dec ecx
shr ecx 0x2
inc ecx
or eax 0xffffffff
[ edi ]
cmp [ esp + 0x40 ] 0x0
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] eax
jne r-xdata
test edi edi
jl r-xdata
cmp ebp eax
jae r-xdata
cmp ebp eax
jae r-xdata
mov edx [ esp + 0xe4 ]
mov ecx [ esp + 0xa8 ]
push 0x0
push 0x0
push 0x0
push edx
lea eax [ esp + 0x58 ]
push eax
push 0x2
push ebp
push ecx
push ebp
mov [ esp + 0xd8 ] ebp
mov [ esp + 0xe0 ] ebp
mov [ esp + 0x6c ] 0x0
call sub_439699
add esp 0x24
cmp [ esp + 0xa0 ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0xc0 ] 0x0
jne r-xdata
cmp [ esp + 0xe0 ] 0x0
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov ebx edi
lea esp [ esp ]
mov edx [ esp + 0x60 ]
test edx edx
je r-xdata
test ebx ebx
jg r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov edx [ esp + 0x2c ]
test edx edx
jl r-xdata
mov edx [ esp + 0x150 ]
mov eax [ esp + 0xac ]
add edx eax
cmp ebp edx
jbe r-xdata
cmp ebp ebx
jae r-xdata
cmp ebp ebx
jae r-xdata
mov edx eax
sub edx ecx
cmp edi edx
ja r-xdata
push 0x0
lea ecx [ esp + 0x68 ]
push ecx
push eax
push edx
push edi
call sub_43200a
mov ecx [ esp + 0x78 ]
add esp 0x14
test eax eax
jne r-xdata
mov edx eax
sub edx ecx
cmp edi edx
ja r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x68 ]
push ecx
push eax
push edx
push edi
call sub_43200a
mov ecx [ esp + 0x78 ]
add esp 0x14
test eax eax
jne r-xdata
cmp ebx 0x1
jne r-xdata
je r-xdata
mov edx [ esp + 0xbc ]
mov [ esp + 0x24 ] edx
mov ebx eax
sub eax ebp
cmp eax 0x3e8
jge r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
jmp r-xdata
movzx eax [ ebp ]
mov ecx [ esp + 0x78 ]
movzx edx [ eax + ecx ]
cmp edx edi
je r-xdata
inc edi
cmp edi eax
jb r-xdata
mov dl [ esp + 0x74 ]
cmp [ edi ] dl
jne r-xdata
mov eax [ esp + 0xb0 ]
jmp r-xdata
inc edi
cmp edi ebx
jae r-xdata
mov dl [ edi ]
cmp dl [ esp + 0x74 ]
jne r-xdata
mov eax [ esp + 0xb0 ]
jmp r-xdata
cmp [ esp + 0x28 ] 0x0
je r-xdata
cmp [ esp + 0x28 ] 0x0
mov esi [ esp + 0x15c ]
je r-xdata
cmp [ esp + 0x14 ] 0x0
lea edi [ ebp + 0x1 ]
je r-xdata
lea eax [ ebx + 0x3e7 ]
cmp eax 0x3
ja r-xdata
xor eax eax
test edi edi
setge al
add eax ebp
cmp eax [ esp + 0x38 ]
jbe r-xdata
cmp ebp ebx
jae r-xdata
cmp ebp ebx
jae r-xdata
movzx eax [ ebp ]
cmp eax edi
je r-xdata
inc ebp
cmp ebp ebx
jb r-xdata
mov edx [ esp + 0x60 ]
test edx edx
je r-xdata
cmp ecx 0x1
je r-xdata
cmp edi eax
jb r-xdata
mov dl [ edi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp ecx 0x1
je r-xdata
test ebx ebx
je r-xdata
mov edx [ esp + 0x54 ]
push edx
call [ rw-data ]
add esp 0x4
cmp [ esp + 0x80 ] 0x0
je r-xdata
cmp esi 0x4
jl r-xdata
mov ecx [ esp + 0x60 ]
xor ebx ebx
cmp [ esp + 0x30 ] ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp edi eax
jae r-xdata
jmp [ eax * 4 + jump_table_4470be ]
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0xd
jne r-xdata
jmp r-xdata
jmp r-xdata
inc ebp
cmp ebp ebx
jb r-xdata
jmp r-xdata
mov dl [ esp + 0x75 ]
cmp [ edi + 0x1 ] dl
je r-xdata
jmp r-xdata
inc edi
cmp edi ebx
jb r-xdata
mov dl [ edi + 0x1 ]
cmp dl [ esp + 0x75 ]
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
cmp ebx 0xfffffff4
je r-xdata
mov eax [ esp + 0xc4 ]
cdq
sub eax edx
sar eax 0x1
xor eax eax
jmp r-xdata
cmp [ esp + 0xc4 ] esi
jle r-xdata
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x158 ]
lea ecx [ esi * 4 - 0x8 ]
push ecx
add edx 0x8
push edx
add eax 0x8
push eax
call sub_410f70
add esp 0xc
cmp [ esp + 0xe8 ] 0x0
mov ebp edi
jne r-xdata
test ecx ecx
je r-xdata
mov edi edi
xor ebx ebx
mov edi [ esp + 0xb4 ]
jmp r-xdata
cmp eax ebx
jae r-xdata
cmp eax ebx
jae r-xdata
mov eax [ esp + 0x60 ]
cmp eax 0x1
je r-xdata
mov edx [ esp + 0x60 ]
test edx edx
je r-xdata
mov edx [ esp + 0x60 ]
test edx edx
je r-xdata
jmp r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
cmp [ esp + 0x15c ] 0x1
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
mov ecx [ esp + 0xac ]
mov esi [ esp + 0xb4 ]
mov edx [ esp + 0x158 ]
sub esi ecx
mov [ edx ] esi
mov esi [ esp + 0xb8 ]
sub esi ecx
mov [ edx + 0x4 ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
cmp esi 0x2
jge r-xdata
mov ecx [ esp + 0x54 ]
push ecx
call [ rw-data ]
add esp 0x4
mov [ esp + 0x80 ] 0x1
mov eax [ esp + 0x10 ]
cmp edi eax
ja r-xdata
mov edx [ esp + 0xb0 ]
mov eax [ esp + 0x64 ]
sub edx eax
cmp ebp edx
ja r-xdata
mov eax [ esp + 0xb0 ]
cmp ebp eax
jae r-xdata
inc edi
cmp edi eax
jb r-xdata
movzx ecx [ eax ]
inc eax
cmp ecx edx
je r-xdata
movzx ecx [ eax ]
inc eax
cmp ecx edx
je r-xdata
cmp ebp ebx
jae r-xdata
cmp eax 0x2
jne r-xdata
lea edx [ ecx + eax ]
cmp ebp edx
jb r-xdata
cmp ebp eax
jbe r-xdata
lea edx [ ecx + eax ]
cmp ebp edx
jb r-xdata
cmp ebp eax
jbe r-xdata
mov eax 0xfffffff4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x130
retn
mov edx [ esp + 0x148 ]
mov ecx [ esp + 0x158 ]
sub eax edx
mov [ ecx ] eax
mov eax [ esp + 0x10 ]
sub eax edx
mov [ ecx + 0x4 ] eax
cmp [ edi - 0x1 ] 0xd
jne r-xdata
mov dl [ esp + 0x74 ]
cmp [ ebp ] dl
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x68 ]
push edx
push eax
push ecx
push ebp
call sub_43200a
add esp 0x14
test eax eax
jne r-xdata
mov cl [ edi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
dec eax
cmp eax ebx
jae r-xdata
cmp eax ebx
jb r-xdata
cmp ecx [ esp + 0x34 ]
je r-xdata
cmp [ ebp ] 0xa
jne r-xdata
inc ebp
cmp ebp ebx
jb r-xdata
mov eax ebp
sub eax ecx
mov dl [ eax ]
cmp dl [ esp + 0x74 ]
jne r-xdata
push 0x0
lea ecx [ esp + 0x68 ]
push ecx
push eax
push edx
push ebp
call sub_431eb9
add esp 0x14
test eax eax
jne r-xdata
inc ebp
cmp ebp ebx
jae r-xdata
mov eax ebp
sub eax ecx
mov dl [ eax ]
cmp dl [ esp + 0x74 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x68 ]
push ecx
push eax
push edx
push ebp
call sub_431eb9
add esp 0x14
test eax eax
jne r-xdata
cmp edi eax
jae r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ esp + 0x60 ]
jmp r-xdata
mov [ esp + 0x38 ] eax
jmp r-xdata
cmp eax ebx
jb r-xdata
inc ebp
jmp r-xdata
mov eax [ esp + 0xac ]
cmp ecx 0x1
je r-xdata
mov ecx [ esp + 0x64 ]
jmp r-xdata
mov al [ ebp ]
and al 0xc0
cmp al 0x80
jne r-xdata
cmp ecx 0x1
je r-xdata
mov ecx [ esp + 0x64 ]
jmp r-xdata
cmp [ edi ] 0xa
jne r-xdata
mov al [ esp + 0x75 ]
cmp [ ebp + 0x1 ] al
je r-xdata
mov dl [ esp + 0x75 ]
cmp [ eax + 0x1 ] dl
je r-xdata
cmp ebp ebx
jb r-xdata
inc ebp
cmp ebp ebx
jb r-xdata
mov dl [ esp + 0x75 ]
cmp [ eax + 0x1 ] dl
je r-xdata
test [ esi + 0xc ] 0x20
jne r-xdata
mov eax [ esp + 0xac ]
jmp r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
lea ebp [ edi + 0x1 ]
jmp r-xdata
mov eax 0x2
cmp ecx eax
je r-xdata
cmp [ esp + 0x64 ] eax
jne r-xdata
sub_4470ce
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
retn
lea esp [ esp ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0xc ]
push ecx
push edx
push eax
call sub_440649
add esp 0xc
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov esi [ esi ]
test esi esi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esp + 0x8 ]
jb r-xdata
sub_44710f
sub esp 0xc
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x30 ]
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0xffffffff
je r-xdata
cmp [ rw-data ] esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x14
cmp eax 0xfffffffe
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
push 0x0
push eax
call sub_441a7a
push eax
push ebx
call [ SelectObject@IAT ]
xor eax eax
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ebp
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] eax
cmp edi 0x1
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
cmp [ rw-data ] ebp
je r-xdata
push eax
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
push ebp
call [ ExtCreatePen@IAT ]
push eax
push ebx
mov [ rw-data ] eax
call [ SelectObject@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
or ebp 0x10000
push ebx
call [ BeginPath@IAT ]
mov [ rw-data ] 0x1
sub_4471ec
test [ esp + 0x10 ] 0x1
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push ebp
push 0x1
push 0x0
push 0xffffffff
push 0x0
push esi
call sub_44710f
mov ebp [ MoveToEx@IAT ]
push 0x0
push edi
lea eax [ ebx - 0x2 ]
push eax
push esi
call ebp
push edi
lea ecx [ ebx + 0x3 ]
push ecx
push esi
call [ LineTo@IAT ]
push 0x0
lea edx [ edi - 0x2 ]
push edx
push ebx
push esi
call ebp
add edi 0x3
push edi
push ebx
push esi
call [ LineTo@IAT ]
cmp [ rw-data ] 0x0
pop ebp
je r-xdata
push esi
call [ StrokePath@IAT ]
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_447268
test [ esp + 0x18 ] 0x2
push esi
mov esi [ esp + 0x8 ]
je r-xdata
pop esi
retn 0x18
push 0x1
push 0x2
push 0xffffffff
push 0x0
push esi
call sub_44710f
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push 0x0
push eax
push ecx
push esi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
push esi
call [ LineTo@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ StrokePath@IAT ]
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_4472c8
sub esp 0x18
push ebx
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi [ esp + 0x2c ]
mov ebx 0xfffffffe
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] edi
test edi edi
je r-xdata
push ebx
push esi
call sub_43315e
mov al [ esp + 0x2c ]
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x8
push ebp
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push 0x0
push ebx
push ecx
push esi
mov [ esp + 0x24 ] 0x0
call sub_44710f
cmp [ edi + 0xc ] 0x0
jle r-xdata
mov edi [ edi + 0x4 ]
mov [ esp + 0x20 ] edi
test edi edi
jne r-xdata
lea ebx [ edi + 0x10 ]
add edi 0x14
mov [ esp + 0x2c ] edi
jmp r-xdata
mov edi [ esp + 0x20 ]
pop ebp
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
movzx eax [ eax + ecx + 0x810 ]
mov edx [ esp + 0x2c ]
mov edi [ ebx ]
mov ebp [ edx ]
add eax 0xfffffff8
cmp eax 0x10
ja r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x20 ]
mov ecx 0x8
add [ esp + 0x2c ] ecx
inc eax
add ebx ecx
cmp eax [ edx + 0xc ]
mov [ esp + 0x10 ] eax
jl r-xdata
movzx edx [ eax + lookup_table_447568 ]
jmp [ edx * 4 + jump_table_447544 ]
mov ebx [ esp + 0x14 ]
mov edi edx
test edi edi
je r-xdata
mov [ esp + 0x1c ] edi
jmp r-xdata
or edi 0xffffffff
cmp [ esp + 0x18 ] edi
je r-xdata
mov edx [ esp + 0x14 ]
inc [ esp + 0x10 ]
mov eax 0x8
add [ esp + 0x2c ] eax
push edx
push esi
add ebx eax
call sub_43315e
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push edx
push esi
call sub_44710f
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
mov edx [ ebx ]
add ecx ebp
push ecx
add edx edi
push edx
jmp r-xdata
inc [ esp + 0x10 ]
mov eax 0x8
add [ esp + 0x2c ] eax
add ebx eax
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_43315e
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
push ecx
push 0x0
push edx
push eax
push esi
call sub_44710f
mov ecx [ esp + 0x2c ]
mov edx [ ecx ]
mov eax [ ebx ]
add edx ebp
push edx
add eax edi
push eax
push ebp
push edi
push esi
call [ Ellipse@IAT ]
jmp r-xdata
push 0x0
push ebp
push edi
push esi
call [ MoveToEx@IAT ]
mov eax [ esp + 0x2c ]
fild [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov edx [ esp + 0x10 ]
add eax 0x8
add ebx 0x8
fstp [ esp + 0x24 ]
fild [ ebx + 0x8 ]
sub esp 0x8
add ebx 0x8
inc edx
fstp [ esp + 0x4 ]
inc edx
fld [ esp + 0x2c ]
add eax 0x8
fstp [ esp ]
push ecx
push ebp
push edi
push esi
mov [ esp + 0x28 ] edx
mov [ esp + 0x44 ] eax
call [ AngleArc@IAT ]
push ebp
push edi
push esi
call [ LineTo@IAT ]
push esi
call [ CloseFigure@IAT ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push ebp
push edi
push esi
call [ SetPixel@IAT ]
jmp r-xdata
mov eax [ esp + 0x1c ]
lea edx [ eax + ebp + 0x1 ]
lea ecx [ edi + eax + 0x1 ]
push edx
sub ebp eax
push ecx
sub edi eax
mov [ esp + 0x30 ] 0x1
jmp r-xdata
mov eax [ ebx ]
cmp eax edi
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_43315e
push ebp
push edi
push esi
call [ Rectangle@IAT ]
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
cmp eax edi
je r-xdata
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push edx
push 0x0
push eax
push ecx
push esi
call sub_44710f
jmp r-xdata
mov [ esp + 0x14 ] eax
sub_447579
sub esp 0x10
mov eax [ esp + 0x18 ]
push ebx
push ebp
xor ebp ebp
xor ebx ebx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x10 ] ebp
mov [ esp + 0x20 ] eax
cmp eax ebp
je r-xdata
pop ebp
pop ebx
add esp 0x10
mov [ esp + 0x8 ] 0xffffffff
jmp sub_43315e
push esi
push edi
jmp r-xdata
cmp [ eax + 0xc ] ebp
jle r-xdata
mov eax [ eax + 0x4 ]
xor ebp ebp
mov [ esp + 0x28 ] eax
cmp eax ebp
jne r-xdata
lea edi [ eax + 0x10 ]
lea esi [ eax + 0x14 ]
mov eax [ esp + 0x28 ]
pop edi
pop esi
inc ebp
add esi 0x8
add edi 0x8
cmp ebp [ eax + 0xc ]
jl r-xdata
cmp cl 0x7
jbe r-xdata
mov ecx [ esi ]
mov edx [ edi ]
mov [ esp + 0x14 ] ecx
mov cl [ eax + ebp + 0x810 ]
mov [ esp + 0x1c ] edx
cmp cl 0x2
jb r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
push ebx
push eax
push edx
push ecx
call sub_4471ec
mov edx [ esp + 0x28 ]
mov al [ edx + ebp + 0x810 ]
and al 0xfe
cmp al 0x4
jne r-xdata
cmp cl 0x14
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push ebx
push ecx
mov ecx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x30 ]
push eax
push ecx
push edx
inc ebp
add esi 0x8
add edi 0x8
call sub_447268
mov eax [ esi ]
mov ecx [ edi ]
mov edx [ esp + 0x24 ]
push ebx
push eax
push ecx
push edx
call sub_4471ec
mov ecx [ esi ]
mov eax [ edi ]
mov edx [ esp + 0x24 ]
push ebx
push ecx
push eax
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x8 ]
add esi 0x8
mov [ esp + 0x24 ] ecx
mov ecx [ edi + 0x8 ]
add edi 0x8
push eax
push ecx
push edx
inc ebp
call sub_447268
mov eax [ esi ]
mov ecx [ edi ]
mov edx [ esp + 0x24 ]
push ebx
push eax
push ecx
push edx
call sub_4471ec
jmp r-xdata
mov ebx edx
jmp r-xdata
mov eax [ esp + 0x28 ]
sub_4476ca
sub esp 0xc
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ esp + 0x20 ]
mov ebx 0xfffffffe
push ebp
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] 0x1
call [ BeginPath@IAT ]
mov [ rw-data ] 0x1
test esi esi
je r-xdata
push ebx
push ebp
call sub_43315e
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push edi
mov edi edi
mov eax [ esi + 0xc ]
cmp edi eax
je r-xdata
mov ecx esi
lea edx [ esi + 0x10 ]
neg ecx
lea ebx [ esi + 0x810 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x18 ] ecx
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub eax edi
push eax
lea ecx [ edi + esi + 0x810 ]
push ecx
lea edx [ esi + edi * 8 + 0x10 ]
push edx
push ebp
call [ PolyDraw@IAT ]
add [ esp + 0x20 ] 0x8
inc ebx
lea eax [ ecx + ebx - 0x810 ]
cmp eax [ esi + 0xc ]
jl r-xdata
lea eax [ ecx + ebx - 0x810 ]
cmp edi eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
push eax
xor edi edi
push edi
push ebx
push ecx
push ebp
call sub_44710f
cmp [ esi + 0xc ] edi
jle r-xdata
pop edi
cmp [ ebx ] 0x8
jb r-xdata
mov ebx [ esp + 0x10 ]
mov al [ ebx ]
lea edi [ ecx + ebx - 0x80f ]
cmp al 0x14
je r-xdata
sub eax edi
push eax
lea eax [ esi + edi + 0x810 ]
push eax
lea ecx [ esi + edi * 8 + 0x10 ]
push ecx
push ebp
call [ PolyDraw@IAT ]
mov ecx [ esp + 0x18 ]
cmp al 0x8
jne r-xdata
cmp al 0x18
jne r-xdata
or edx 0xffffffff
cmp [ esp + 0x24 ] edx
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ eax ]
mov [ esp + 0x14 ] edx
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
cmp eax edx
je r-xdata
mov edx [ esp + 0x10 ]
push edx
push ebp
call sub_43315e
or edx 0xffffffff
mov eax [ ecx + 0x4 ]
cmp eax edx
je r-xdata
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
push eax
push 0x0
push ecx
push edx
push ebp
call sub_44710f
mov ecx [ esp + 0x18 ]
jmp r-xdata
mov [ esp + 0x10 ] eax
sub_44782b
sub esp 0xc
xor eax eax
push esi
lea esi [ esp + 0x4 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] eax
call sub_40eba0
call eax
push esi
mov [ rw-data ] eax
call sub_4344a0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push ecx
push edx
push 0x31a
push eax
call [ DefDlgProcW@IAT ]
pop esi
add esp 0xc
retn 0xc
sub_447870
sub esp 0x8
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
push esi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
cmp ebx esi
jne r-xdata
push ebx
push rw-data
call sub_4421c1
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
cmp [ edi + 0x194 ] 0x0
je r-xdata
movzx edx [ esp + 0x28 ]
movzx eax [ esp + 0x24 ]
shl edx 0x10
or edx eax
push edx
push ebx
push 0x7b
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + ebp * 4 ]
mov ecx [ edx ]
mov al [ ecx + 0x88 ]
cmp al 0xe
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ edi + 0x194 ]
push 0x0
push esi
push ecx
push edx
push 0x0
push eax
call [ TrackPopupMenuEx@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
cmp al 0xf
je r-xdata
cmp al 0x13
je r-xdata
cmp al 0x10
je r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov ecx [ edi ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push 0x0
push ecx
mov ecx [ rw-data ]
push edx
mov edx [ ecx + ebp * 4 ]
push eax
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
push 0x0
push ecx
call [ TrackPopupMenuEx@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
sub_44796b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_4340b2
mov edi eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov ebx [ ecx ]
lea edx [ esp + 0x20 ]
push edx
push esi
call [ __import_lookup_table_10(USER32:GetClientRect) ]
lea eax [ esp + 0x18 ]
push eax
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push esi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x20 ]
jl r-xdata
movzx eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
shl eax 0x10
or eax ecx
push eax
push edx
push 0x20
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax [ esp + 0x28 ]
jg r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x24 ]
jl r-xdata
cmp eax [ esp + 0x2c ]
jg r-xdata
cmp [ ebx + 0x15c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push edx
call sub_433bac
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
call [ WindowFromPoint@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax esi
je r-xdata
push eax
push rw-data
call sub_4421c1
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
movzx eax [ eax + 0x7c ]
cmp ax 0xffff
je r-xdata
movsx ecx ax
push ecx
call sub_433bac
sub_447a87
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
push edi
push rw-data
call sub_4340b2
cmp [ esi ] 0x4
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
jne r-xdata
mov edx [ esi + 0x4 ]
push esi
push edx
push 0x2b
push edi
call [ DefDlgProcW@IAT ]
mov eax [ esi + 0x14 ]
push eax
push rw-data
call sub_4421c1
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
push eax
push esi
call sub_441e05
test [ esi + 0x10 ] 0x10
je r-xdata
mov [ ebx + 0x1b8 ] 0x0
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ ebx ]
push 0x0
push edi
push 0x401
push ecx
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
retn 0x8
sub_447b15
push esi
mov esi [ esp + 0x8 ]
push esi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x1c ]
push edx
push eax
call sub_441c1e
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0x7
push esi
call [ DefDlgProcW@IAT ]
pop esi
retn 0x8
sub_447b66
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push eax
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
mov ecx [ ebx ]
mov esi [ ebx + 0x1bc ]
lea eax [ esp + 0x28 ]
push eax
push ecx
mov [ esp + 0x14 ] ebx
call [ __import_lookup_table_10(USER32:BeginPaint) ]
mov edi eax
test esi esi
je r-xdata
mov ecx [ ebx ]
lea eax [ esp + 0x28 ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:EndPaint) ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x8a ] 0x10
je r-xdata
movzx edx [ eax + 0x8b ]
cmp edx [ ebx + 0x184 ]
jne r-xdata
cmp [ eax + 0x8b ] 0xff
je r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
lea eax [ esp + 0x18 ]
push eax
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx ]
push edx
push eax
mov [ esp + 0x1c ] ecx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x0
push ecx
push edx
push edi
call [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x44 ]
mov eax [ eax + 0x48 ]
test ebx ebx
jl r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x1
push 0x0
push ebx
push eax
push edi
call sub_44710f
mov eax [ esi + 0x8 ]
movsx ecx [ eax + 0x86 ]
movsx edx [ eax + 0x84 ]
push ecx
push edx
push 0x0
push 0x0
push edi
call [ Rectangle@IAT ]
push ebx
push edi
call sub_43315e
test ebx ebx
jl r-xdata
mov eax ebx
mov ebx [ esp + 0xc ]
push esi
push edi
call sub_447579
push esi
push edi
call sub_4472c8
push esi
push edi
mov bl al
call sub_4476ca
test bl bl
je r-xdata
sub_447cfc
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov ecx [ ecx + 0x10 ]
mov [ eax + 0x10 ] ecx
inc [ ecx ]
retn 0x8
sub_447d3b
push esi
mov esi [ esp + 0x8 ]
push 0x14
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
push eax
call sub_447cfc
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
sub_447d93
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_447d79
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
retn 0x8
mov [ esi + 0x4 ] ecx
sub_447dd5
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ esp + 0x10 ]
push 0xc
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_447d3b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
inc [ esi + 0x8 ]
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_447d3b
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_447e6c
mov edx [ esp + 0x4 ]
push ebp
mov ebp [ esp + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x88 ] 0x1b
jne r-xdata
pop edi
xor eax eax
pop ebp
retn 0x20
pop esi
pop edi
xor eax eax
pop ebp
retn 0x20
lea eax [ edi - 0x1 ]
cmp eax 0x17
ja r-xdata
movzx eax [ eax + lookup_table_447ffc ]
jmp [ eax * 4 + jump_table_447fe0 ]
mov edx [ rw-data ]
mov ecx [ esp + 0x14 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push 0x1
push 0x0
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
pop esi
pop edi
mov eax 0x1
pop ebp
retn 0x20
mov eax [ esp + 0x18 ]
push 0x1
push ebp
push eax
push edi
push esi
call sub_440fdf
pop esi
pop edi
mov eax 0x1
pop ebp
retn 0x20
mov ecx [ esi + 0x78 ]
mov edx [ ecx + 0xc ]
sub edx 0x1
js r-xdata
mov edx [ esp + 0x18 ]
push 0x2
push ebp
push edx
push edi
push esi
call sub_440fdf
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push 0x1
push eax
push ecx
push edi
push esi
call sub_440fdf
pop esi
pop edi
mov eax 0x1
pop ebp
retn 0x20
mov edx [ esp + 0x18 ]
push 0x3
push ebp
push edx
push edi
push esi
call sub_440fdf
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push 0x1
push eax
push ecx
push edi
push esi
call sub_440fdf
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push 0x1
push edx
push eax
push edi
push esi
call sub_440fdf
pop esi
pop edi
mov eax 0x1
pop ebp
retn 0x20
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push ebx
push 0x3
push eax
mov ebx edi
push ecx
and ebx 0xfffffffe
push ebx
push esi
call sub_440fdf
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
push 0x1
push edx
push eax
push ebx
push esi
call sub_440fdf
mov ecx [ esp + 0x1c ]
push 0x1
push ebp
push ecx
push edi
push esi
call sub_440fdf
pop ebx
pop esi
pop edi
mov eax 0x1
pop ebp
retn 0x20
sub_448014
mov eax [ esp + 0xc ]
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push eax
push rw-data
call sub_44213b
test al al
jne r-xdata
cmp [ edi + 0x194 ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
mov ebx [ esp + 0x14 ]
mov ecx [ eax + ebx * 4 ]
mov ecx [ ecx ]
mov al [ ecx + 0x88 ]
mov edi [ edx ]
cmp al 0xe
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0xc
pop edi
mov [ esi + 0x8a ] 0x0
pop esi
mov al 0x1
pop ebx
retn 0xc
call [ CreatePopupMenu@IAT ]
mov [ edi + 0x194 ] eax
mov [ edi + 0x198 ] eax
mov [ esi + 0x8 ] eax
cmp [ edi + 0x194 ] 0x0
jne r-xdata
cmp al 0xf
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0xc
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
call [ CreatePopupMenu@IAT ]
mov [ esi + 0x8 ] eax
mov [ edi + 0x198 ] eax
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov edx [ esi + 0x8 ]
mov [ ecx + 0x8 ] edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
sub_4480f2
mov eax 0x204c
call sub_425210
mov edx [ esp + 0x205c ]
push ebx
mov ebx [ esp + 0x2054 ]
push ebp
push esi
push edi
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
je r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x204c
retn 0x10
mov ecx [ rw-data ]
mov eax [ esp + 0x18 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov ebp [ esp + 0x1c ]
mov edx [ ecx + ebp * 4 ]
mov edi [ SendMessageW@IAT ]
push 0x0
mov [ esp + 0x2c ] eax
mov eax [ edx ]
mov esi [ eax ]
push 0x0
mov [ ebx + 0x30 ] esi
mov ecx [ rw-data ]
mov edx [ ecx + ebp * 4 ]
mov eax [ edx ]
mov cl [ eax + 0x8b ]
push 0x1200
push 0x0
push 0x0
push 0x101f
push esi
mov [ ebx + 0x8b ] cl
call edi
push eax
call edi
mov [ ebx + 0x8c ] ax
mov edx [ rw-data ]
mov ecx [ edx + ebp * 4 ]
mov edx [ ecx ]
push 0xfffffff0
push esi
mov [ esp + 0x2c ] eax
mov [ edx + 0x8c ] ax
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
push 0x28
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x34 ]
push 0x0
push eax
call sub_4131f0
add esp 0xc
push 0x0
push 0x0
push 0x1004
push esi
call edi
mov ecx [ esp + 0x2068 ]
mov [ ebx + 0x80 ] ax
mov edx [ rw-data ]
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x4c ] 0xfffffffe
mov [ esp + 0x20 ] ecx
mov ecx [ edx + ebp * 4 ]
mov edx [ ecx ]
mov ecx [ edx + 0x94 ]
cmp ecx 0xffffffff
mov [ esp + 0x14 ] 0x1
jle r-xdata
mov edx [ esp + 0x2064 ]
mov [ esp + 0x34 ] eax
push rw-data
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x5c ]
push eax
push ecx
mov [ esp + 0x50 ] ecx
mov [ esp + 0x5c ] edx
mov [ esp + 0x44 ] 0x0
call sub_433a98
lea edx [ esp + 0x30 ]
push edx
push 0x0
push 0x104d
push esi
call edi
mov [ esp + 0x18 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x4c ] ecx
jmp r-xdata
push rw-data
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
call sub_433a98
test al al
je r-xdata
cmp [ ebx + 0x8b ] 0xff
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x24 ]
mov [ esp + 0x38 ] eax
jg r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x204c
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + ebp * 4 ]
mov eax [ edx ]
mov ecx [ esp + 0x28 ]
push 0x1
push eax
push ecx
call sub_43401c
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
push eax
push 0x1008
push esi
call edi
cmp [ esp + 0x58 ] 0x0
je r-xdata
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
push eax
push 0x1074
push esi
call edi
test eax eax
je r-xdata
inc [ esp + 0x14 ]
jmp r-xdata
lea ecx [ esp + 0x58 ]
push ecx
push 0x0
push 0x1057
push esi
call edi
add eax 0xc
cmp eax 0x96
mov [ esp + 0x1c ] eax
jle r-xdata
mov edx [ esp + 0x14 ]
push 0x0
push edx
push 0x101d
push esi
call edi
mov ecx [ esp + 0x1c ]
cmp eax ecx
jg r-xdata
mov [ esp + 0x1c ] 0x96
movzx eax cx
mov ecx [ esp + 0x14 ]
push eax
push ecx
push 0x101e
push esi
call edi
sub_448358
mov edx [ esp + 0x10 ]
sub esp 0x64
push ebx
push ebp
mov ebp [ esp + 0x70 ]
push esi
push edi
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0x7c ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
xor edx edx
cmp [ ebx + 0x1a0 ] edx
je r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn 0x10
mov eax [ ebx + 0x1a8 ]
cmp eax edx
mov [ esp + 0x14 ] 0x5
jge r-xdata
mov [ esp + 0x14 ] 0x27
mov [ esp + 0x2c ] edx
mov [ esp + 0x30 ] edx
cmp [ ebx + 0x1ac ] edx
jl r-xdata
mov eax [ ebx + 0x1ac ]
cmp eax edx
jl r-xdata
mov [ esp + 0x30 ] eax
cmp eax edx
jl r-xdata
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x80 ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x24 ] eax
mov ecx 0xa
lea esi [ esp + 0x14 ]
lea edi [ esp + 0x44 ]
[ edi ] [ esi ]
mov eax [ ebx + 0x1a4 ]
mov [ esp + 0x40 ] 0xffff0001
cmp eax edx
je r-xdata
mov [ esp + 0x2c ] eax
mov ecx [ rw-data ]
mov eax [ esp + 0x84 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov cl [ eax + 0x88 ]
cmp cl 0x10
jne r-xdata
mov [ esp + 0x40 ] eax
mov esi [ eax + 0x30 ]
mov esi [ eax ]
jmp r-xdata
mov ecx [ eax + 0xc ]
mov [ esp + 0x3c ] ecx
mov [ esp + 0x3c ] 0xffff0000
jmp r-xdata
cmp cl 0x10
jne r-xdata
mov edi [ SendMessageW@IAT ]
lea eax [ esp + 0x3c ]
push eax
push edx
push 0x1132
push esi
call edi
push 0x0
push 0x0
push 0x1105
push esi
mov [ ebp + 0xc ] eax
mov [ ebp + 0x30 ] esi
call edi
mov ecx [ ebp + 0xc ]
pop edi
mov [ ebp + 0x80 ] ax
pop esi
pop ebp
mov [ ebx + 0x1a4 ] ecx
mov al 0x1
pop ebx
add esp 0x64
retn 0x10
sub_44849c
sub esp 0x30
push ebx
mov ebx [ esp + 0x38 ]
push ebp
mov ebp [ esp + 0x50 ]
push esi
mov esi [ esp + 0x44 ]
push edi
mov edi [ esp + 0x50 ]
push 0x2c
lea eax [ esp + 0x18 ]
push 0x0
push eax
mov [ esp + 0x1c ] 0x30
call sub_4131f0
add esp 0xc
cmp edi 0xffffffff
jne r-xdata
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x5c ]
push eax
push edi
push rw-data
call sub_44213b
test al al
je r-xdata
cmp [ ebx + 0x198 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x30
retn 0x1c
mov ecx [ esp + 0x58 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ebx [ eax ]
cmp [ ebx + 0x198 ] 0x0
je r-xdata
mov ecx [ ebx + 0x190 ]
mov [ esi + 0x8 ] ecx
jmp r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x8 ]
mov [ esi + 0x8 ] edx
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0xe
jne r-xdata
cmp [ esp + 0x5c ] 0x1
mov [ esp + 0x14 ] 0x13
mov [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov edx [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push edi
push edx
mov [ esp + 0x24 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x54 ]
cmp [ eax ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x200
mov eax [ esp + 0x24 ]
mov [ esi + 0x8 ] eax
mov [ esp + 0x18 ] 0x800
mov [ esp + 0x34 ] eax
jmp r-xdata
mov [ esi + 0x80 ] bp
mov edx [ ebx ]
push edx
call [ __import_lookup_table_10(USER32:DrawMenuBar) ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x1c
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x4c ]
lea eax [ esp + 0x10 ]
push eax
push 0x1
push ebp
push ecx
mov [ esp + 0x30 ] edx
call [ __import_lookup_table_10(USER32:InsertMenuItemW) ]
test eax eax
je r-xdata
sub_448602
sub esp 0x38
push ebx
mov ebx [ esp + 0x44 ]
push esi
mov esi [ esp + 0x50 ]
push edi
mov edi [ esp + 0x48 ]
push 0x2c
lea eax [ esp + 0x18 ]
push 0x0
push eax
mov [ esp + 0x1c ] 0x30
call sub_4131f0
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
lea edx [ esp + 0x4c ]
push edx
lea eax [ esp + 0x58 ]
push eax
push esi
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ edi + 0x190 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x54 ]
mov eax [ edx + ecx * 4 ]
mov edi [ eax ]
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0xc
je r-xdata
xor al al
pop edi
pop esi
pop ebx
add esp 0x38
retn 0x18
mov [ ebx + 0x8 ] eax
jmp r-xdata
call [ CreateMenu@IAT ]
mov ecx [ edi ]
push eax
push ecx
mov [ edi + 0x190 ] eax
call [ SetMenu@IAT ]
mov eax [ edi + 0x190 ]
mov [ edi + 0x198 ] eax
mov ecx [ ebx + 0x8 ]
push ecx
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push esi
push edx
mov [ esp + 0x24 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
call [ CreatePopupMenu@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x24 ]
mov [ ebx + 0x8 ] eax
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x50 ]
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x60 ]
push 0x1
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x8 ]
push edx
push eax
mov [ esp + 0x24 ] 0x16
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x34 ] esi
call [ __import_lookup_table_10(USER32:InsertMenuItemW) ]
mov ecx [ edi ]
push ecx
call [ __import_lookup_table_10(USER32:DrawMenuBar) ]
mov [ edi + 0x198 ] esi
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0x38
retn 0x18
sub_448759
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x8 ]
sub esp 0x8c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x24 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov edi [ esp + 0x18 ]
mov edx [ ecx + edi * 4 ]
mov esi [ edx ]
mov cl [ esi + 0x88 ]
mov [ esp + 0x20 ] eax
mov eax [ esi ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x17 ] cl
mov [ esp + 0x10 ] 0x0
test ebx ebx
jge r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
and eax 0x100
mov [ esp + 0x18 ] eax
je r-xdata
xor ebx ebx
test ebx 0x800
je r-xdata
mov edx [ esp + 0x24 ]
push edi
push edx
call sub_441c1e
mov [ esp + 0x10 ] 0x1
movzx eax [ esp + 0x17 ]
add eax 0xfffffff7
cmp eax 0x11
ja r-xdata
mov eax [ esp + 0x1c ]
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
mov [ esp + 0x10 ] 0x1
and ebx 0x10f8
mov eax ebx
mov [ esp + 0x18 ] eax
jle r-xdata
movzx ecx [ eax + lookup_table_448d9d ]
jmp [ ecx * 4 + jump_table_448d71 ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esp + 0x1c ]
xor ebx ebx
mov [ esp + 0x10 ] 0x1
test al al
jns r-xdata
mov eax ebx
and eax 0x7
je r-xdata
mov eax ebx
and eax 0x7
je r-xdata
mov eax 0x3
cmp [ rw-data ] eax
jl r-xdata
test bl 0x10
je r-xdata
mov ecx [ esi + 0x30 ]
push 0xfffffff0
push ecx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
mov edx [ esi + 0xc ]
mov al bl
and al 0x1
movsx eax al
neg eax
sbb eax eax
and eax 0x1000
add eax 0x1000
mov [ esp + 0x5c ] edx
mov [ esp + 0x58 ] 0x8
mov [ esp + 0x64 ] 0xf010
mov [ esp + 0x60 ] eax
test ebx 0x200
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push edi
push ecx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x38 ] 0x30
mov [ esp + 0x3c ] 0x1
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
test ebx 0x200
je r-xdata
mov eax ebx
and eax 0x7
sub eax 0x0
je r-xdata
mov esi [ esi + 0x30 ]
lea edx [ esp + 0x80 ]
push edx
push 0xffffffff
push 0x1053
push esi
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x90 ] 0x1
mov [ esp + 0x98 ] edi
call [ SendMessageW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x40
je r-xdata
push 0x0
push edi
mov ebx 0xc0
call [ __import_lookup_table_10(USER32:EnableWindow) ]
mov eax [ esp + 0x18 ]
and eax 0x3
push eax
push edi
call sub_4413f0
jmp r-xdata
mov edx [ esp + 0x1c ]
push 0x0
and eax 0x3
push eax
push 0xf1
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
nop
mov ecx [ esp + 0x20 ]
cmp [ ecx + 0x18c ] 0x0
movzx eax [ esi + 0x8b ]
je r-xdata
mov edx [ esi + 0x30 ]
mov edi [ SendMessageW@IAT ]
lea ecx [ esp + 0x58 ]
push ecx
push 0x0
push 0x113f
push edx
call edi
test ebx 0x400
je r-xdata
or eax 0x10
mov [ esp + 0x60 ] eax
test bl 0x20
jne r-xdata
mov edx [ esp + 0x20 ]
mov eax [ edx ]
push 0x0
push edi
push 0x401
push eax
call [ SendMessageW@IAT ]
call [ __import_lookup_table_10(USER32:GetFocus) ]
cmp eax [ esi ]
jne r-xdata
mov ecx [ esp + 0x1c ]
push 0x0
push 0x0
push 0x466
push ecx
jmp r-xdata
sub eax 0x1
je r-xdata
push 0xffffffec
push esi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x30 ] 0x8
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test al 0x4
je r-xdata
mov edx eax
and edx 0x20
je r-xdata
push 0x1
push edi
mov ebx 0xc0
call [ __import_lookup_table_10(USER32:EnableWindow) ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x1
inc eax
cmp eax [ rw-data ]
jle r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x4 ]
mov edi [ esp + 0x20 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
push eax
mov edi ecx
push edi
push rw-data
call sub_441077
movzx eax [ esi + 0x8b ]
mov [ edi + 0x188 ] eax
jmp r-xdata
mov edx [ ecx + 0x188 ]
mov [ ecx + 0x184 ] edx
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x30 ]
push eax
push 0x2
push 0x1102
push ecx
call edi
test bl bl
jns r-xdata
mov ecx [ esp + 0x24 ]
push edi
push ecx
call sub_441c1e
jmp r-xdata
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
push 0xffff0000
push 0xffffffff
push 0x465
push eax
mov edx [ esp + 0x1c ]
push 0x0
push 0x0
push 0x467
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
test ebx 0x2100
je r-xdata
test bl 0x5
je r-xdata
mov ecx eax
and ecx 0x10
mov [ esp + 0x18 ] ecx
je r-xdata
add ebx 0x30
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ecx + 0x88 ] 0x3
jne r-xdata
mov edx [ esi + 0x30 ]
push edx
push rw-data
call sub_4421c1
push eax
mov eax [ esp + 0x28 ]
push eax
call sub_441c1e
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x30 ]
push ecx
push 0x9
push 0x110b
push edx
call edi
jmp r-xdata
test bl 0x1
je r-xdata
mov [ esp + 0x10 ] 0x3
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax ebx
dec eax
neg eax
lea ecx [ esp + 0x28 ]
push ecx
sbb eax eax
push 0x0
and eax 0xfffff000
push 0x104c
add eax 0x2000
push esi
mov [ esp + 0x48 ] 0xf000
mov [ esp + 0x44 ] eax
call [ SendMessageW@IAT ]
mov [ esp + 0x10 ] eax
test al 0x8
je r-xdata
add ebx 0x30
mov ecx [ ecx ]
cmp ecx [ esi + 0x30 ]
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
or [ esp + 0x10 ] 0x8
test ebx 0x2000
je r-xdata
mov [ esp + 0x34 ] 0xffffffff
test eax 0x1000
je r-xdata
add ebx 0x1008
mov cl [ esi + 0x8a ]
test bl cl
jne r-xdata
test [ esp + 0x34 ] 0x8
je r-xdata
or [ esp + 0x10 ] 0x80
lea edx [ esp + 0x28 ]
push edx
push edi
push 0x102b
push esi
mov [ esp + 0x48 ] 0x3
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x34 ] 0x0
not bl
and bl [ esi + 0x8a ]
or bl al
mov al [ esi + 0x8b ]
mov [ esi + 0x8a ] bl
cmp al 0xff
je r-xdata
add ebx 0x1008
test cl 0x10
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push edi
push ecx
mov [ esp + 0x44 ] edx
call [ SetMenuItemInfoW@IAT ]
test ebx 0x200
je r-xdata
test bl 0x4
jne r-xdata
mov ebx [ ShowWindow@IAT ]
test edx edx
je r-xdata
mov ecx [ esp + 0x20 ]
mov ecx [ ecx + 0x184 ]
movzx eax al
cmp eax ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov eax [ eax ]
movsx ecx [ eax + 0x86 ]
movsx edx [ eax + 0x84 ]
push 0x0
push ecx
movsx ecx [ eax + 0x82 ]
push edx
movsx edx [ eax + 0x80 ]
mov eax [ eax ]
push ecx
push edx
push eax
call [ __import_lookup_table_10(USER32:MoveWindow) ]
mov ecx [ esi + 0x30 ]
mov edx [ esp + 0x1c ]
push 0x0
push ecx
push 0x469
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x28 ]
push eax
push 0x0
push edi
push ecx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push 0x0
push edi
jmp r-xdata
or [ esp + 0x10 ] 0x8
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0x0
push edi
call ebx
cmp ecx 0xffffffff
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_10(USER32:DrawMenuBar) ]
jmp r-xdata
test [ esp + 0x34 ] 0x1000
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call [ SetMenuDefaultItem@IAT ]
mov ecx [ esp + 0x20 ]
push 0x1
push esi
push ecx
call sub_43401c
push 0x4
push edi
call ebx
cmp [ esp + 0x17 ] 0x1a
jne r-xdata
push 0x0
push 0xffffffff
test [ esi + 0x8a ] 0x40
je r-xdata
push 0x1
push edi
call [ __import_lookup_table_10(USER32:EnableWindow) ]
sub_448daf
mov edx [ esp + 0x4 ]
sub esp 0xc
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x8
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ esp + 0x14 ]
mov ebx [ edx ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
mov al [ esi + 0x88 ]
mov edi [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] al
call sub_435bc8
mov eax [ esi + 0x44 ]
add esp 0x4
test eax eax
jl r-xdata
movzx eax [ esp + 0x20 ]
cmp eax 0x1b
ja r-xdata
push eax
call sub_4419ed
movzx edx [ eax + lookup_table_448fdf ]
mov ebp [ esp + 0x24 ]
jmp [ edx * 4 + jump_table_448fbb ]
mov ebp [ esp + 0x24 ]
cmp ebp 0xfffffffe
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
test ebp ebp
jl r-xdata
push 0x1
push ebp
mov [ esi + 0x44 ] ebp
call sub_441a7a
push 0x1
push esi
push ebx
call sub_43401c
jmp r-xdata
mov eax [ esp + 0x24 ]
cmp eax 0xffffffff
jl r-xdata
cmp ebp 0xfe000000
jne r-xdata
push 0x1
push eax
mov [ esi + 0x44 ] eax
call sub_441a7a
jmp r-xdata
push eax
push 0x0
push 0x2001
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
push eax
push 0x0
push 0x111d
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x1
push eax
mov [ esi + 0x44 ] eax
call sub_441a7a
mov ecx [ esi + 0x30 ]
push 0x1
push 0x0
push ecx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
jmp r-xdata
push 0xfffffff0
push edi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
or eax 0xb
push eax
push 0xfffffff0
push edi
call [ SetWindowLongW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
push eax
mov [ esi + 0x44 ] eax
call sub_441a7a
test [ esi + 0x8a ] 0x20
jne r-xdata
mov ebx [ SendMessageW@IAT ]
push ebp
push 0x0
push 0x1001
push edi
call ebx
push ebp
push 0x0
push 0x1026
push edi
call ebx
mov eax [ esp + 0x18 ]
push 0x1
push esi
push eax
call sub_43401c
jmp r-xdata
push 0x1
push ebp
mov [ esi + 0x44 ] ebp
call sub_441a7a
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
cmp [ esp + 0x20 ] 0x8
jne r-xdata
mov edx [ esi ]
mov edi [ ShowWindow@IAT ]
push 0x0
push edx
call edi
mov eax [ esi ]
push 0x5
push eax
call edi
mov ecx [ esi ]
push ecx
call [ __import_lookup_table_10(USER32:SetFocus) ]
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
sub_448ffb
push ecx
mov edx [ esp + 0x8 ]
lea eax [ esp ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov ecx [ rw-data ]
mov eax [ esp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov edx [ rw-data ]
mov ecx [ esp ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx ]
mov cx [ esp + 0xc ]
push 0x0
push 0x0
mov [ edx + 0x7c ] cx
mov edx [ eax ]
push 0x20
push edx
mov [ eax + 0x15c ] 0x1
call [ PostMessageW@IAT ]
mov eax 0x1
pop ecx
retn 0x8
xor eax eax
pop ecx
retn 0x8
sub_449063
push ecx
mov edx [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ esp + 0x10 ]
mov ecx [ rw-data ]
mov ebp [ edx ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
mov edi [ esi ]
mov bl [ esi + 0x88 ]
lea eax [ esp + 0x1c ]
push eax
call sub_435bc8
movzx eax bl
add esp 0x4
cmp eax 0x1b
ja r-xdata
movzx ecx [ eax + lookup_table_4491af ]
jmp [ ecx * 4 + jump_table_449193 ]
mov edx [ esp + 0x1c ]
push edx
push 0x0
push 0x1024
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
push 0x0
push 0x409
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x111e
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ esi + 0x30 ]
mov edx [ esp + 0x1c ]
push 0x1
push 0x0
push eax
mov [ esi + 0x48 ] edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
jmp r-xdata
push 0xfffffff0
push edi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
or eax 0xb
push eax
push 0xfffffff0
push edi
call [ SetWindowLongW@IAT ]
mov ecx [ esp + 0x1c ]
push 0x1
push esi
push ebp
mov [ esi + 0x48 ] ecx
call sub_43401c
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
cmp bl 0x8
je r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
cmp bl 0x4
je r-xdata
cmp bl 0x1a
je r-xdata
cmp bl 0x19
jne r-xdata
sub_4491cb
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ edx ]
test esi 0x20000
je r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
push 0x0
push rw-data
call sub_441533
pop edi
mov eax esi
pop esi
retn 0x4
mov [ edi + 0x68 ] 0x1
or esi 0x20000
sub_44920c
mov eax 0x2108
call sub_425210
push ebx
push ebp
mov ebp [ esp + 0x2114 ]
push esi
mov esi [ esp + 0x211c ]
xor eax eax
push edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push ebp
push rw-data
call sub_44213b
test al al
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
mov edx [ esp + 0x14 ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
mov eax [ rw-data ]
mov edx [ esp + 0x28 ]
mov edx [ eax + edx * 4 ]
mov ebx [ edx ]
mov al [ ebx + 0x88 ]
mov ecx [ ecx ]
mov edi [ ebx ]
movzx eax al
mov [ esp + 0x14 ] ecx
cmp eax 0x3
ja r-xdata
mov edx [ esp + 0x2124 ]
test edx edx
je r-xdata
jmp [ eax * 4 + jump_table_449898 ]
cmp eax 0x1c
ja r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov [ esp + 0x24 ] 0x143
mov [ esp + 0x18 ] 0x158
mov [ esp + 0x1c ] 0x14e
mov [ esp + 0x20 ] 0x14b
jmp r-xdata
mov [ esp + 0x24 ] 0x180
mov [ esp + 0x18 ] 0x1a2
mov [ esp + 0x1c ] 0x186
mov [ esp + 0x20 ] 0x184
jmp r-xdata
test esi esi
je r-xdata
movzx eax [ eax + lookup_table_4498e0 ]
jmp [ eax * 4 + jump_table_4498a8 ]
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
push esi
push edi
call [ SetWindowTextW@IAT ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x2124 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push 0x1
push ebx
push eax
call sub_43401c
mov ecx [ esp + 0x18 ]
mov ebp [ SendMessageW@IAT ]
push esi
push 0xffffffff
push ecx
push edi
call ebp
cmp eax 0xffffffff
je r-xdata
push esi
push edi
call [ SetWindowTextW@IAT ]
push 0xf423f
push 0xf4240
push 0xb1
push edi
call [ SendMessageW@IAT ]
mov eax [ esp + 0x14 ]
mov [ eax + 0x1b8 ] 0xffffffff
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
cmp [ eax ] 0x0
je r-xdata
movzx eax [ esi ]
mov [ esp + 0x14 ] esi
cmp ax [ rw-data ]
je r-xdata
mov edx [ esp + 0x1c ]
push 0x0
push eax
push edx
push edi
call ebp
mov eax [ esp + 0x14 ]
push 0x1
push ebx
push eax
call sub_43401c
push esi
push 0x1
push 0xc2
push edi
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
push esi
call [ CharNextW@IAT ]
mov ecx [ esp + 0x20 ]
push 0x0
push 0x0
mov [ esp + 0x1c ] eax
push ecx
test ax ax
jne r-xdata
push rw-data
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x120 ]
push eax
call sub_433a98
test al al
je r-xdata
mov eax [ esp + 0x2124 ]
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x118 ]
push ecx
push 0x0
push edx
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2108
retn 0xc
push eax
mov eax [ esp + 0x1c ]
push 0xffffffff
push eax
push edi
call ebp
cmp eax 0xffffffff
je r-xdata
push edi
call ebp
jmp r-xdata
mov ecx [ esp + 0x1c ]
push 0x0
push eax
push ecx
push edi
call ebp
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
sub_4493e8
push 0x0
push esi
call sub_413f97
fnstcw [ esp + 0x1c ]
movzx eax [ esp + 0x1c ]
or eax 0xc00
mov [ esp + 0x30 ] eax
add esp 0x4
fldcw [ esp + 0x2c ]
fistp [ esp + 0x2c ]
mov edx [ esp + 0x2c ]
push edx
push 0x402
push edi
fldcw [ esp + 0x24 ]
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
sub_449434
push esi
call sub_413f97
add esp 0x4
call sub_4290f0
push eax
push 0x1
push 0x405
push edi
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
sub_449530
push 0x1
push 0x1
lea eax [ esp + 0x64 ]
push eax
push esi
call sub_435a35
add esp 0x10
lea ecx [ esp + 0x5c ]
push ecx
jmp r-xdata
push 0x0
push 0x1002
push edi
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2108
retn 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
sub_4497a4
push 0x208
call sub_41171a
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov edi eax
lea eax [ esp + 0x8c ]
push eax
push 0x0
push ebp
push ecx
mov [ esp + 0x9c ] 0x30
mov [ esp + 0xa0 ] 0x10
mov [ esp + 0xc0 ] edi
mov [ esp + 0xc4 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push edi
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
test [ esp + 0x94 ] 0x800
jne r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ esp + 0x8c ]
push edx
push 0x0
push ebp
push eax
mov [ esp + 0xc0 ] esi
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
push edx
call [ __import_lookup_table_10(USER32:DrawMenuBar) ]
push edi
call sub_4112ef
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
sub_4498fd
mov edx [ esp + 0x4 ]
push ebp
push esi
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push edx
push rw-data
xor ebp ebp
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov edx [ esp + 0x10 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + edx * 4 ]
push ebx
mov ebx [ eax ]
push edi
mov edi [ ebx ]
cmp esi 0xffffffff
je r-xdata
pop esi
xor eax eax
pop ebp
retn 0xc
mov esi [ esp + 0x1c ]
cmp esi 0xffffffff
je r-xdata
movzx eax [ ebx + 0x88 ]
add eax 0xfffffffe
cmp eax 0x14
ja r-xdata
mov al [ ebx + 0x8b ]
cmp al 0xff
je r-xdata
push esi
push 0xffffffec
push edi
call [ SetWindowLongW@IAT ]
mov edx [ rw-data ]
mov ebp eax
mov eax [ esp + 0x18 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0x13
jne r-xdata
or esi 0x50000000
push esi
push 0xfffffff0
push edi
call [ SetWindowLongW@IAT ]
mov ebp eax
movzx ecx [ eax + lookup_table_449a91 ]
jmp [ ecx * 4 + jump_table_449a75 ]
mov edx [ esp + 0x14 ]
push 0x1
push ebx
push edx
call sub_43401c
mov ecx [ esp + 0x14 ]
movzx eax al
cmp eax [ ecx + 0x184 ]
je r-xdata
push esi
push 0x0
push 0x1036
push edi
call [ SendMessageW@IAT ]
mov ebp eax
pop edi
pop ebx
pop esi
xor eax eax
pop ebp
retn 0xc
or esi 0xe
jmp r-xdata
or esi 0x3
jmp r-xdata
or esi 0x4
push 0x0
test esi 0x800
je r-xdata
or esi 0x4000000
mov eax [ ebx ]
push 0x27
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
cmp al 0x3
je r-xdata
push 0x0
push edi
call [ ShowWindow@IAT ]
jmp r-xdata
push 0x0
push 0xcf
push edi
or esi 0x10000
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x1
push 0xcf
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ ebx + 0x88 ]
cmp al 0x2
je r-xdata
pop edi
pop ebx
xor eax eax
test ebp ebp
pop esi
setne al
pop ebp
retn 0xc
sub_449aa6
mov edx [ esp + 0x4 ]
sub esp 0x10
push ebp
mov ebp [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
push ebx
push esi
mov esi [ edx ]
mov edx [ ecx + eax * 4 ]
mov eax [ esp + 0x24 ]
or ecx 0xffffffff
push edi
mov edi [ edx ]
cmp eax ecx
jne r-xdata
xor eax eax
pop ebp
add esp 0x10
retn 0x14
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x2c ]
mov ebx [ edi ]
push esi
push ecx
push ebp
push edx
push eax
call sub_433a1f
lea eax [ esp + 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
cmp ebp 0xffffffff
jne r-xdata
cmp [ esp + 0x2c ] ecx
jne r-xdata
cmp [ esp + 0x34 ] 0xffffffff
jne r-xdata
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
mov [ esi + 0x60 ] ecx
cmp ebp ecx
jne r-xdata
movsx ecx [ edi + 0x80 ]
mov eax [ esi + 0x58 ]
cmp ecx eax
jne r-xdata
mov edx [ esp + 0x1c ]
sub edx [ esp + 0x14 ]
mov [ esi + 0x64 ] edx
cmp [ esp + 0x34 ] ecx
je r-xdata
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x60 ]
push 0x1
push ecx
mov ecx [ esi + 0x5c ]
push edx
push ecx
push eax
push ebx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
push 0x1
push edi
push esi
call sub_4336c7
mov eax 0x3
cmp [ edi + 0x88 ] al
jne r-xdata
movsx edx [ edi + 0x82 ]
cmp edx [ esi + 0x5c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov eax 0x1
pop ebp
add esp 0x10
retn 0x14
push 0x1
push edi
push esi
call sub_43401c
cmp [ rw-data ] eax
mov ebp eax
jl r-xdata
movsx ecx [ edi + 0x84 ]
cmp ecx [ esi + 0x60 ]
jne r-xdata
lea esp [ esp ]
movsx edx [ edi + 0x86 ]
cmp edx [ esi + 0x64 ]
je r-xdata
inc ebp
cmp ebp [ rw-data ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebp * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ eax + 0x88 ] 0x16
jne r-xdata
cmp [ eax + 0x30 ] ebx
jne r-xdata
mov edx [ eax ]
push 0x0
push ebx
push 0x469
push edx
call [ SendMessageW@IAT ]
sub_449c1e
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
je r-xdata
xor eax eax
pop esi
retn 0x8
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
cmp [ eax + 0x7e ] 0x0
jne r-xdata
cmp esi 0x400
jge r-xdata
test esi esi
jl r-xdata
mov eax [ esp + 0x8 ]
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov eax [ eax ]
cmp [ eax + 0x3a ] 0x0
jne r-xdata
lea edx [ esi - 0x1 ]
cmp edx 0x3fe
ja r-xdata
mov eax 0x1
pop esi
retn 0x8
mov edx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx ]
push 0x0
push edx
push eax
call sub_4336c7
mov [ eax + 0x7e ] si
sub_449ca8
mov edx [ esp + 0x4 ]
push ebp
mov ebp [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax ]
movzx eax [ eax + 0x88 ]
dec eax
cmp eax 0x15
ja r-xdata
pop edi
xor eax eax
pop ebp
retn 0xc
pop esi
pop ebx
pop edi
xor eax eax
pop ebp
retn 0xc
movzx eax [ eax + lookup_table_449dc8 ]
mov ebx [ SendMessageW@IAT ]
jmp [ eax * 4 + jump_table_449db0 ]
test edi edi
jle r-xdata
push 0xffffffff
push 0x0
push 0xb1
push esi
call ebx
test edi edi
jle r-xdata
movzx ecx bp
movzx edx di
shl ecx 0x10
or ecx edx
push ecx
push 0x0
push 0x465
push esi
call [ SendMessageW@IAT ]
pop esi
pop ebx
pop edi
mov eax 0x1
pop ebp
retn 0xc
movzx eax di
movzx ecx bp
shl eax 0x10
or eax ecx
push eax
push 0x1
push 0x406
push esi
call [ SendMessageW@IAT ]
pop esi
pop ebx
pop edi
mov eax 0x1
pop ebp
retn 0xc
push 0x0
push edi
push 0x194
push esi
call [ SendMessageW@IAT ]
pop esi
pop ebx
pop edi
mov eax 0x1
pop ebp
retn 0xc
push 0x0
push edi
push 0xc5
push esi
call ebx
pop esi
pop ebx
pop edi
mov eax 0x1
pop ebp
retn 0xc
sub_449dde
push ecx
mov edx [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x13
jne r-xdata
or eax 0xffffffff
pop ecx
retn 0x4
movzx eax [ eax + 0x8a ]
pop ecx
retn 0x4
movsx eax [ eax + 0x8e ]
pop ecx
retn 0x4
sub_449e31
sub esp 0x34
push esi
mov esi [ esp + 0x40 ]
push edi
mov edi [ esp + 0x40 ]
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edi
push rw-data
call sub_44213b
test al al
je r-xdata
pop edi
xor al al
pop esi
add esp 0x34
retn 0x8
mov eax [ esp + 0x44 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov edx [ edx ]
movzx edx [ edx + 0x88 ]
cmp edx 0x1c
ja r-xdata
movzx edx [ edx + lookup_table_449f1d ]
jmp [ edx * 4 + jump_table_449f09 ]
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ esi ] edx
mov al 0x1
pop edi
pop esi
add esp 0x34
retn 0x8
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ esi ] edx
mov al 0x1
pop edi
pop esi
add esp 0x34
retn 0x8
mov [ esp + 0x8 ] 0x30
mov [ esp + 0xc ] 0x4
mov eax [ ecx + eax * 4 ]
mov edx [ eax ]
mov eax [ edx + 0x8 ]
lea ecx [ esp + 0x8 ]
push ecx
push 0x0
push edi
push eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
mov [ esi ] ecx
mov al 0x1
pop edi
pop esi
add esp 0x34
retn 0x8
mov ecx [ esp + 0x1c ]
mov [ esi ] ecx
mov al 0x1
pop edi
pop esi
add esp 0x34
retn 0x8
sub_449f3a
mov edx [ esp + 0x4 ]
sub esp 0x10
push ebx
mov ebx [ esp + 0x28 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi [ esp + 0x38 ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
mov edx [ esp + 0x30 ]
xor eax eax
sub edx eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x24
push edi
push ebx
push esi
push ecx
call [ SendMessageW@IAT ]
sub edx 0x1
je r-xdata
mov eax [ esp + 0x44 ]
push eax
push ebp
push esi
push ecx
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x24
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x24
lea edx [ esp + 0x10 ]
push edx
push ebp
push esi
push ecx
call [ SendMessageW@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ ebx ] ecx
mov ecx [ esp + 0x18 ]
mov [ edi ] edx
mov edx [ esp + 0x3c ]
pop edi
pop esi
mov [ edx ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x38 ]
pop ebp
mov [ edx ] ecx
pop ebx
add esp 0x10
retn 0x24
sub_44a003
push ecx
mov edx [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
add esp 0x4
mov eax [ eax ]
mov ecx [ eax ]
mov [ esp + 0x4 ] ecx
jmp [ SendMessageW@IAT ]
xor eax eax
pop ecx
retn 0x10
sub_44a045
mov eax [ rw-data ]
push esi
mov esi [ esp + 0xc ]
push edi
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov edi [ eax ]
jmp r-xdata
mov [ rw-data ] eax
cmp esi 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
push rw-data
call sub_4340b2
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x14 ]
push eax
push esi
push rw-data
call sub_44213b
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ esp + 0xc ]
mov edx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov ecx [ ecx ]
cmp [ ecx + 0x88 ] 0xb
mov eax [ eax ]
jne r-xdata
mov [ eax + 0x18c ] 0x1
movzx edx [ ecx + 0x8b ]
mov [ eax + 0x184 ] edx
sub_44a0ea
sub esp 0x10
mov eax [ rw-data ]
mov ecx [ esp + 0x14 ]
mov edx [ eax + ecx * 4 ]
mov eax [ esp + 0x1c ]
push ebx
push ebp
mov ebp [ edx ]
push esi
push edi
push eax
push rw-data
call sub_4421c1
mov ebx [ GetSysColor@IAT ]
push 0xf
mov edi eax
mov [ esp + 0x28 ] 0x0
call ebx
mov esi eax
mov eax [ ebp + 0x4c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov esi eax
mov ecx [ esp + 0x28 ]
push esi
push ecx
call [ SetBkColor@IAT ]
push 0x0
push esi
call sub_441a7a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov edi [ edx ]
mov eax [ edi + 0x44 ]
test eax eax
jl r-xdata
movzx ecx [ edi + 0x88 ]
cmp ecx 0x1b
ja r-xdata
cmp [ edi + 0x88 ] 0x1b
je r-xdata
cmp eax 0xfffffffe
sete [ esp + 0x24 ]
movzx ecx [ ecx + lookup_table_44a35e ]
jmp [ ecx * 4 + jump_table_44a342 ]
mov esi eax
jmp r-xdata
mov edi [ edi + 0x48 ]
cmp edi 0xffffffff
je r-xdata
cmp [ edi + 0x44 ] 0xffffffff
jne r-xdata
cmp [ edi + 0x8b ] 0xff
je r-xdata
mov ecx [ edi ]
push 0xfffffff0
push ecx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x8000800
je r-xdata
push 0x5
call ebx
mov esi eax
jmp r-xdata
mov [ esp + 0x24 ] 0x1
jmp r-xdata
cmp [ edi + 0x8b ] 0xff
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov edx [ esp + 0x28 ]
push edi
push edx
call [ __import_lookup_table_4(GDI32:SetTextColor) ]
mov al [ edi + 0x88 ]
cmp al 0x17
je r-xdata
mov eax [ ebp + 0x17c ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ __import_lookup_table_10(USER32:GetClientRect) ]
mov edx [ ebp + 0x17c ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x1328
push edx
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x17c ]
push eax
call [ GetWindowDC@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
mov ebx eax
push edx
push ebx
call [ GetPixel@IAT ]
mov esi eax
mov eax [ ebp + 0x17c ]
push ebx
push eax
call [ ReleaseDC@IAT ]
cmp esi 0xffffffff
jne r-xdata
push 0xf
call ebx
mov esi eax
jmp r-xdata
mov eax [ esp + 0x28 ]
push 0x1
push eax
call [ SetBkMode@IAT ]
push 0x5
call [ GetStockObject@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov [ esp + 0x24 ] 0x1
cmp al 0x7
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp al 0x1
je r-xdata
push 0x5
call [ GetSysColor@IAT ]
mov esi eax
jmp r-xdata
push 0xf
call [ GetSysColor@IAT ]
mov esi eax
jmp r-xdata
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
test al al
je r-xdata
mov edx [ edi ]
push edx
call [ GetWindowDC@IAT ]
mov ebx [ GetPixel@IAT ]
push 0x0
mov ebp eax
push 0x0
push ebp
call ebx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ edi ]
push ebp
push ecx
call [ ReleaseDC@IAT ]
cmp esi 0xffffffff
jne r-xdata
movsx eax [ edi + 0x84 ]
push 0x0
dec eax
push eax
push ebp
call ebx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
movsx ecx [ edi + 0x86 ]
dec ecx
push ecx
push 0x0
push ebp
call ebx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
movsx edx [ edi + 0x86 ]
movsx eax [ edi + 0x84 ]
dec edx
push edx
dec eax
push eax
push ebp
call ebx
mov esi eax
sub_44a37a
push esi
push edi
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov esi eax
call [ __import_lookup_table_10(USER32:GetFocus) ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
push rw-data
call sub_4340b2
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
push edi
push rw-data
call sub_4421c1
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
mov [ esi + 0x1c ] eax
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x2
jne r-xdata
mov edx [ eax ]
lea ecx [ esi + 0x1b4 ]
push ecx
add esi 0x1b0
push esi
push 0xb0
push edx
call [ SendMessageW@IAT ]
sub_44a3ff
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ecx 0x9
jbe r-xdata
mov [ rw-data ] ecx
xor eax eax
retn 0x8
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40c760
test eax eax
jl r-xdata
mov eax 0x9
cmp eax 0x7f
jle r-xdata
mov [ rw-data ] eax
xor eax eax
retn 0x8
sub_44a43b
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ eax ]
mov [ esp + 0xc ] edi
mov [ esi ] 0x0
mov eax esi
pop edi
pop esi
retn 0x10
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
fild [ ecx + 0x4 ]
test edx edx
jge r-xdata
fcomp [ esp + 0x14 ]
fnstsw ax
test ah 0x44
jpo r-xdata
fadd [ r--data ]
mov [ esi ] edi
pop edi
mov eax esi
pop esi
retn 0x10
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
call sub_440eac
mov edi [ esp + 0xc ]
jmp r-xdata
push ecx
lea eax [ esp + 0x10 ]
mov [ esp ] 0x0
call sub_40f090
test al al
je r-xdata
sub_44a4a8
push esi
mov esi [ esp + 0x8 ]
push 0x28
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
push eax
call sub_443b7a
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
sub_44a4e6
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ esp + 0x10 ]
push 0xc
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_44a4a8
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
inc [ esi + 0x8 ]
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_44a4a8
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_44a591
sub esp 0x24
push ebx
mov ebx [ esp + 0x30 ]
test ebx ebx
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_415ba4
add esp 0x8
test eax eax
je r-xdata
push 0x80004005
call sub_445675
push esi
push edi
mov edi ebx
mov ecx 0x9
lea esi [ esp + 0xc ]
[ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
pop ebx
add esp 0x24
retn 0x8
xor eax eax
pop ebx
add esp 0x24
retn 0x8
sub_44a5e0
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
inc [ edx ]
movzx edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] dl
movzx edx [ ecx + 0x11 ]
mov [ eax + 0x11 ] dl
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
mov ecx [ ecx + 0x18 ]
mov [ eax + 0x18 ] ecx
retn 0x8
sub_44a61d
push esi
mov esi [ esp + 0x8 ]
push 0x1c
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
push eax
call sub_44a5e0
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
sub_44a65b
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ esp + 0x10 ]
push 0xc
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_44a61d
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
inc [ esi + 0x8 ]
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_44a61d
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_44a6df
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esi + 0x8 ]
mov ebp 0x1f4
mov ebx 0x3e8
test edi edi
jbe r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40c760
mov ebp eax
push ebx
push ebp
call [ Beep@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov ebx eax
sub_44a760
push esi
mov esi [ esp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x3
push edi
mov edi ecx
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push 0x0
push eax
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
push edi
call sub_442582
pop edi
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
sub_44a7dc
sub esp 0x2c
push ebx
push esi
mov esi [ esp + 0x38 ]
mov ecx [ esi + 0x54 ]
mov eax [ esi + 0x20 ]
mov edx [ esi + 0x4 ]
push edi
push 0x0
and ecx 0x80000000
push ecx
push 0x0
push 0x0
push eax
push edx
call [ InternetOpenUrlW@IAT ]
mov edi eax
mov eax [ InternetCloseHandle@IAT ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
test edi edi
jne r-xdata
mov edx [ esp + 0x40 ]
push edx
push edi
push esi
call sub_442aa9
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
push edi
push 0xdeadbeef
push 0x29
push esi
call sub_44286a
lea ecx [ esp + 0x10 ]
push ecx
mov bl al
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebx
add esp 0x2c
retn 0xc
push 0x0
push 0xdeadbeef
push 0x2a
push esi
call sub_44286a
mov bl al
lea eax [ esp + 0x10 ]
push eax
call sub_4349c7
pop edi
pop esi
mov al bl
pop ebx
add esp 0x2c
retn 0xc
push edi
call sub_434a55
cmp eax 0xc8
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push 0x5
push edi
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x20
call [ __import_lookup_table_13(WININET:HttpQueryInfoW) ]
lea eax [ esp + 0x18 ]
push eax
call sub_41343c
add esp 0x4
cmp [ esp + 0x44 ] 0x0
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
je r-xdata
push 0x1
push 0x0
push 0x0
push esi
call sub_44286a
lea edx [ esp + 0x10 ]
push edx
mov bl al
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebx
add esp 0x2c
retn 0xc
push edi
push esi
call sub_442a81
lea ecx [ esp + 0x10 ]
push ecx
mov bl al
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebx
add esp 0x2c
retn 0xc
sub_44a919
sub esp 0xc
cmp [ esp + 0x18 ] 0x0
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x20 ]
je r-xdata
mov ebx [ esi + 0x70 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x10 ]
mov ebp [ edi + 0x54 ]
push 0x0
push 0x0
push ebx
push eax
push ecx
movzx ecx [ esi + 0x78 ]
push ecx
push edx
mov edx [ edi + 0x4 ]
push edx
call [ InternetConnectW@IAT ]
mov [ edi ] eax
push 0x0
test eax eax
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
push edi
call sub_44a7dc
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov esi [ esi + 0x60 ]
push ebp
push 0x80000000
push esi
push eax
call [ FtpOpenFileW@IAT ]
mov esi eax
mov eax [ InternetCloseHandle@IAT ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] eax
test esi esi
jne r-xdata
push 0xdeadbeef
push 0x15
push edi
call sub_44286a
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
lea edx [ esp + 0x28 ]
push edx
push esi
call [ FtpGetFileSize@IAT ]
mov edx [ esp + 0x28 ]
xor ecx ecx
xor ebx ebx
or ecx eax
or edx ebx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
cmp [ esp + 0x2c ] bl
je r-xdata
push esi
push 0xdeadbeef
push 0x16
jmp r-xdata
push 0x1
push 0x0
push 0x0
push esi
push edi
call sub_442a81
mov bl al
lea eax [ esp + 0x14 ]
push eax
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
push edi
call sub_44286a
lea ecx [ esp + 0x14 ]
push ecx
mov bl al
call sub_4349c7
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0xc
retn 0x10
sub_44aa1f
sub esp 0x2c
push ebx
push ebp
push esi
mov esi [ esp + 0x40 ]
cmp [ esi + 0x74 ] 0x4
push edi
mov edi [ esp + 0x40 ]
mov ebp [ edi + 0x54 ]
jne r-xdata
mov ebx [ esi + 0x70 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x10 ]
push 0x0
push 0x0
push ebx
push eax
movzx eax [ esi + 0x78 ]
push ecx
mov ecx [ edi + 0x4 ]
push eax
push edx
push ecx
call [ InternetConnectW@IAT ]
mov [ edi ] eax
push 0x0
test eax eax
jne r-xdata
or ebp 0x800000
mov ecx [ esi + 0x60 ]
push ebp
push 0x0
push 0x0
push 0x0
push ecx
push 0x0
push eax
call [ HttpOpenRequestW@IAT ]
mov edx [ InternetCloseHandle@IAT ]
mov ebx eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] edx
test ebx ebx
jne r-xdata
push 0xdeadbeef
push 0xb
push edi
call sub_44286a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x10
cmp [ esp + 0x48 ] 0x0
je r-xdata
push eax
push 0xdeadbeef
push 0xc
push edi
call sub_44286a
mov bl al
lea eax [ esp + 0x10 ]
push eax
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x10
test ebp 0x1000
je r-xdata
push esi
push ebx
push edi
call sub_442aa9
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x44 ]
push ecx
lea edx [ esp + 0x4c ]
push edx
push 0x1f
push ebx
mov [ esp + 0x54 ] 0x4
call [ __import_lookup_table_13(WININET:InternetQueryOptionW) ]
or [ esp + 0x48 ] 0x100
push 0x4
lea eax [ esp + 0x4c ]
push eax
push 0x1f
push ebx
call [ __import_lookup_table_13(WININET:InternetSetOptionW) ]
push 0x0
push 0xdeadbeef
push 0xd
push edi
call sub_44286a
lea ecx [ esp + 0x10 ]
push ecx
mov bl al
call sub_4349c7
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0x2c
retn 0x10
push ebx
call sub_434a55
cmp eax 0xc8
jne r-xdata
lea ecx [ esp + 0x48 ]
push ecx
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x20 ]
push eax
push 0x5
push ebx
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x58 ] 0x20
call [ __import_lookup_table_13(WININET:HttpQueryInfoW) ]
lea ecx [ esp + 0x18 ]
push ecx
call sub_41343c
add esp 0x4
cmp [ esp + 0x4c ] 0x0
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
je r-xdata
push 0x1
push 0x0
push 0x0
push edi
call sub_44286a
mov bl al
lea eax [ esp + 0x10 ]
push eax
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x10
push ebx
push edi
call sub_442a81
lea edx [ esp + 0x10 ]
push edx
mov bl al
call sub_4349c7
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x10
sub_44abeb
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_40c060
lea ecx [ esi + 0x10 ]
call sub_40c060
lea ecx [ esi + 0x20 ]
call sub_40c060
lea ecx [ esi + 0x30 ]
call sub_40c060
lea ecx [ esi + 0x40 ]
call sub_40c060
lea ecx [ esi + 0x50 ]
call sub_40c060
lea ecx [ esi + 0x60 ]
call sub_40c060
mov eax esi
pop esi
retn 0x4
sub_44ac2d
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_442be2
mov eax [ esi + 0xd4 ]
push eax
call [ CloseHandle@IAT ]
lea edi [ esi + 0x58 ]
call sub_40dcc0
lea ecx [ esi + 0x44 ]
call sub_44284d
lea ecx [ esi + 0x34 ]
call sub_402620
lea ecx [ esi + 0x20 ]
call sub_402620
pop edi
pop esi
retn 0x4
sub_44ac6b
mov ecx [ esp + 0x8 ]
mov dx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ eax ] dx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
inc [ edx ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ ecx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ ecx + 0x1c ]
mov [ eax + 0x1c ] edx
mov edx [ ecx + 0x20 ]
mov [ eax + 0x20 ] edx
inc [ edx ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x24 ] edx
mov edx [ ecx + 0x28 ]
mov [ eax + 0x28 ] edx
mov edx [ ecx + 0x2c ]
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x30 ]
mov [ eax + 0x30 ] ecx
inc [ ecx ]
retn 0x8
sub_44acca
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push edi
push esi
call sub_44ac6b
lea eax [ edi + 0x34 ]
push eax
lea ecx [ esi + 0x34 ]
push ecx
call sub_44ac6b
mov edx [ edi + 0x68 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
mov [ esi + 0x6c ] eax
mov ecx [ edi + 0x70 ]
mov [ esi + 0x70 ] ecx
mov edi [ edi + 0x74 ]
mov [ esi + 0x74 ] edi
inc [ edi ]
pop edi
mov eax esi
pop esi
retn 0x8
sub_44ad09
push ebx
push ebp
mov ebp [ esp + 0xc ]
xor ebx ebx
push esi
push edi
mov edi [ esp + 0x18 ]
lea esi [ ebp + 0x20 ]
mov [ ebp ] ebx
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x1c ] ebx
call sub_401b70
mov edi [ esp + 0x1c ]
lea esi [ ebp + 0x34 ]
call sub_401b70
lea eax [ ebp + 0x44 ]
push eax
call sub_442c1c
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ ebp + 0x58 ]
push edx
mov [ ebp + 0x54 ] ebx
call sub_44acca
mov al [ esp + 0x24 ]
mov [ ebp + 0xd0 ] al
mov eax [ rw-data ]
mov edx 0x1
add eax edx
mov [ ebp + 0xd4 ] ebx
mov [ rw-data ] eax
mov [ ebp + 0xd8 ] eax
xor eax eax
cmp [ ebp + 0x38 ] ebx
mov [ ebp + 0xdc ] dl
sete al
mov [ ebp + 0x30 ] al
mov eax [ esp + 0x20 ]
test dl al
je r-xdata
test al 0x2
je r-xdata
or [ ebp + 0x54 ] 0x80000000
mov ecx eax
and ecx 0x4
je r-xdata
or [ ebp + 0x54 ] 0x3000
test al 0x8
je r-xdata
test al 0x8
jne r-xdata
test al 0x10
je r-xdata
cmp ecx ebx
jne r-xdata
or [ ebp + 0x54 ] edx
lea edi [ esp + 0x28 ]
call sub_40dcc0
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn 0x8c
mov [ ebp + 0xdc ] bl
or [ ebp + 0x54 ] 0x2
sub_44adff
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_442fb2
test al al
je r-xdata
xor eax eax
pop esi
retn 0x4
mov eax [ esi ]
cmp [ eax ] 0x29
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
sub_44ae54
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push 0x10
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn 0x8
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn 0x8
sub_44aea6
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ esp + 0x10 ]
push 0xc
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_44ae54
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
inc [ esi + 0x8 ]
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_44ae54
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_44af2a
sub esp 0x10
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
lea esi [ esp + 0xc ]
mov ebx ecx
call sub_401b70
push esi
add ebx 0xfffffc80
push ebx
call sub_44aea6
mov ecx esi
call sub_402620
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
sub_44af5c
mov eax 0x2000
call sub_425210
mov eax [ esp + 0x2008 ]
push esi
mov esi [ esp + 0x2008 ]
xor ecx ecx
push edi
push ecx
mov [ esp + 0xc ] cx
push 0xfff
cmp eax 0xffffffff
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
lea edx [ esp + 0x10 ]
push edx
push ecx
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
jmp r-xdata
push eax
push 0x0
push 0x1000
call [ FormatMessageW@IAT ]
lea edi [ esp + 0x8 ]
call sub_401b70
pop edi
mov eax esi
pop esi
add esp 0x2000
retn 0x8
sub_44afdc
sub esp 0xdc
push ebx
mov ebx [ esp + 0xe4 ]
push esi
push edi
mov edi [ esp + 0xf0 ]
lea eax [ esp + 0x10 ]
push eax
call sub_4431e0
mov ecx [ esp + 0xf4 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_44313a
xor esi esi
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
add esp 0xdc
retn 0xc
lea esp [ esp ]
lea eax [ esp + 0x10 ]
push eax
call sub_4431b2
xor [ esi + ebx ] al
inc esi
cmp esi edi
jb r-xdata
sub_44b03a
push esi
push edi
mov edi [ esp + 0xc ]
push 0x2
push edi
xor esi esi
call sub_443236
cmp eax 0x3
jne r-xdata
pop edi
lea eax [ eax + esi + 0x3 ]
pop esi
retn 0x4
push eax
push edi
mov esi eax
call sub_443236
cmp eax 0x7
jne r-xdata
push 0x5
push edi
lea esi [ eax + 0x3 ]
call sub_443236
cmp eax 0x1f
jne r-xdata
push 0x8
push edi
lea esi [ eax + 0xa ]
call sub_443236
cmp eax 0xff
jne r-xdata
push 0x8
push edi
lea esi [ eax + 0x29 ]
call sub_443236
cmp eax 0xff
jne r-xdata
push 0x8
push edi
add esi 0xff
call sub_443236
cmp eax 0xff
je r-xdata
sub_44b0af
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ebx [ esi + 0x10 ]
push edi
mov [ esp + 0x14 ] ebx
cmp [ esi + 0x43c ] ebx
jae r-xdata
push esi
call sub_4351a6
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov ebp 0x1
push 0xf
push esi
call sub_443236
push esi
mov edi eax
call sub_44b03a
mov ecx [ esi + 0x43c ]
sub ecx edi
test eax eax
je r-xdata
push 0x8
push esi
call sub_443236
mov ecx [ esi + 0x43c ]
mov edx [ esi + 0x438 ]
and ecx 0x1ffff
mov [ ecx + edx ] al
add [ esi + 0x43c ] ebp
add [ esi + 0x440 ] ebp
jmp r-xdata
push esi
call sub_4432cd
push esi
call sub_4350fa
cmp [ esi + 0x448 ] 0x0
jne r-xdata
mov ebx [ esi + 0x43c ]
mov edi [ esi + 0x438 ]
mov edx ecx
and edx 0x1ffff
mov dl [ edx + edi ]
and ebx 0x1ffff
mov [ ebx + edi ] dl
add [ esi + 0x43c ] ebp
add [ esi + 0x440 ] ebp
sub eax ebp
add ecx ebp
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x4
pop ebx
retn 0x4
cmp [ esi + 0x43c ] ebx
jb r-xdata
mov ebx [ esp + 0x14 ]
push ebp
push esi
call sub_443236
cmp eax ebp
jne r-xdata
sub_44b195
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
lea eax [ esi + 0x24 ]
push r--data
push eax
call sub_414e06
add esp 0x8
mov [ esi + 0x1c ] eax
cmp eax ebx
jne r-xdata
mov [ esi + 0x20 ] ebx
lea ecx [ esi + 0x22e ]
push r--data
push ecx
call sub_414e06
add esp 0x8
mov [ esi + 0x20 ] eax
cmp eax ebx
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
pop esi
lea eax [ ebx + 0x2 ]
pop ebx
retn 0x4
push edi
push esi
call sub_43526e
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
lea edx [ esi + 0x10 ]
push edx
push esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x43c ] ebx
mov [ esi + 0x440 ] ebx
mov [ esi + 0x444 ] ebx
mov [ esi + 0x44c ] ebx
mov [ esi + 0x450 ] ebx
mov [ esi + 0x448 ] bl
mov [ esi + 0x460 ] ebx
mov [ esi + 0x464 ] ebx
call sub_4352d1
test eax eax
je r-xdata
mov esi [ esi + 0x1c ]
cmp esi ebx
je r-xdata
push esi
call sub_44b0af
push esi
call sub_43522c
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov esi [ esi + 0x20 ]
cmp esi ebx
je r-xdata
push eax
call sub_414e94
add esp 0x4
pop esi
mov eax 0x3
pop ebx
retn 0x4
push esi
call sub_414e94
add esp 0x4
mov esi [ esi + 0x20 ]
cmp esi ebx
je r-xdata
push eax
call sub_414e94
add esp 0x4
mov esi [ esi + 0x20 ]
cmp esi ebx
je r-xdata
push eax
call sub_414e94
add esp 0x4
pop esi
mov eax 0x1
pop ebx
retn 0x4
push esi
call sub_414e94
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
push esi
call sub_414e94
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
push esi
call sub_414e94
add esp 0x4
sub_44b2e9
push ecx
sub [ rw-data ] 0x1
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx ]
add ecx 0x4
mov [ rw-data ] ecx
mov ecx eax
shr ecx 0xb
xor eax ecx
mov edx eax
and edx 0xff3a58ad
shl edx 0x7
xor eax edx
mov ecx eax
and ecx 0xffffdf8c
shl ecx 0xf
xor eax ecx
mov edx eax
shr edx 0x12
xor edx eax
mov [ esp ] edx
fild [ esp ]
test edx edx
jge r-xdata
call sub_443390
fmul [ r--data ]
pop ecx
retn
fadd [ r--data ]
sub_44b349
sub [ rw-data ] 0x1
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
add eax 0x4
mov [ rw-data ] eax
mov eax ecx
shr eax 0xb
xor ecx eax
mov edx ecx
and edx 0xff3a58ad
shl edx 0x7
xor ecx edx
mov eax ecx
and eax 0xffffdf8c
shl eax 0xf
xor ecx eax
mov eax ecx
shr eax 0x12
xor eax ecx
shr eax 0x1
retn
call sub_443390
sub_44b390
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
test eax eax
jle r-xdata
xor eax eax
retn 0x4
cmp eax 0x4
jle r-xdata
mov [ esp + 0x4 ] ecx
jmp sub_443576
cmp eax 0x7
jne r-xdata
mov eax [ ecx ]
retn 0x4
sub_44b408
push ebx
mov ebx [ esp + 0x8 ]
mov eax ebx
call sub_40d240
test al al
je r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
pop ebx
retn 0x8
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi eax
call sub_401b70
pop edi
mov [ ebx ] eax
pop esi
mov eax ebx
pop ebx
retn 0x8
push eax
call sub_4436f6
sub_44b474
mov eax 0x10010
call sub_425210
push ebp
push esi
mov esi [ esp + 0x1001c ]
push 0x1f5
lea ebp [ esi + 0x34 ]
push ebp
call [ __import_lookup_table_0(KERNEL32:InterlockedExchange) ]
push 0xffff
mov [ esi + 0x10 ] 0xffff
call sub_41171a
mov edx [ esi + 0x2c ]
add esp 0x4
push 0x0
mov [ esi + 0x8 ] eax
lea eax [ esp + 0xc ]
push eax
push 0xffff
lea ecx [ esp + 0x24 ]
push ecx
push edx
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
test eax eax
je r-xdata
push 0x1f6
push ebp
call [ __import_lookup_table_0(KERNEL32:InterlockedExchange) ]
pop esi
mov eax 0x1f6
pop ebp
add esp 0x10010
retn 0x4
push ebx
push edi
mov edi edi
pop edi
pop ebx
lea ebx [ esi + 0x14 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
add eax [ esp + 0x10 ]
cmp [ esi + 0x10 ] eax
jae r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx [ esi + 0x8 ]
push edx
lea eax [ esp + 0x24 ]
push eax
push ecx
call sub_410f70
mov edx [ esp + 0x1c ]
add [ esi + 0xc ] edx
add esp 0xc
push ebx
call [ LeaveCriticalSection@IAT ]
mov edx [ esi + 0x2c ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0xffff
lea ecx [ esp + 0x2c ]
push ecx
push edx
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
push ecx
call sub_41171a
mov edx [ esi + 0xc ]
mov edi eax
mov eax [ esi + 0x8 ]
push edx
push eax
push edi
call sub_410f70
mov ecx [ esi + 0x8 ]
push ecx
call sub_4112ef
mov edx [ esi + 0xc ]
add edx [ esp + 0x24 ]
mov [ esp + 0x2c ] edx
fild [ esp + 0x2c ]
test edx edx
jge r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
fmul [ r--data ]
fnstcw [ esp + 0x2a ]
movzx eax [ esp + 0x2a ]
or eax 0xc00
mov [ esp + 0x2c ] eax
fldcw [ esp + 0x2c ]
fistp [ esp + 0x2c ]
mov eax [ esp + 0x2c ]
push eax
mov [ esi + 0x10 ] eax
fldcw [ esp + 0x2e ]
call sub_41171a
mov [ esi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
push eax
push edi
push ecx
call sub_410f70
push edi
call sub_4112ef
add esp 0x28
fadd [ r--data ]
sub_44b600
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x34 ]
lea eax [ esi + 0x34 ]
push ecx
push eax
call [ __import_lookup_table_0(KERNEL32:InterlockedExchange) ]
cmp eax 0x1f6
jne r-xdata
push edi
mov bl 0x1
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov al bl
pop ebx
retn 0x4
mov edx [ esi + 0xc ]
test edx edx
jne r-xdata
push edi
xor bl bl
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov al bl
pop ebx
retn 0x4
sub_44b64f
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x30 ] 0x0
lea esi [ edi + 0x30 ]
je r-xdata
pop edi
pop esi
retn 0x4
mov eax [ edi + 0x34 ]
push ebx
push ebp
mov ebp [ __import_lookup_table_0(KERNEL32:InterlockedExchange) ]
lea ebx [ edi + 0x34 ]
push eax
push ebx
call ebp
cmp eax 0x1f6
je r-xdata
pop ebp
pop ebx
add edi 0x14
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi ]
push 0x1f6
push ecx
call [ TerminateThread@IAT ]
mov edx [ esi ]
push 0x3e8
push edx
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
push esi
call sub_4356cd
add esp 0x4
push 0x1f6
push ebx
call ebp
push edi
call [ LeaveCriticalSection@IAT ]
sub_44b6bc
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop esi
retn 0x4
lea eax [ esp + 0x8 ]
push eax
push 0x0
push esi
push sub_44b5e7
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:CreateThread) ]
mov [ esi + 0x30 ] eax
sub_44b6e5
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x20 ]
push edi
xor edi edi
xor bl bl
test eax eax
je r-xdata
push esi
call sub_435703
test al al
je r-xdata
push eax
call sub_44b600
mov bl al
test bl bl
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_4356cd
mov ecx [ esi + 0x20 ]
add esp 0x4
push ecx
call sub_435792
mov [ esi + 0x20 ] edi
mov edi 0x2
jmp r-xdata
push esi
call sub_4356e7
test al al
je r-xdata
push eax
call sub_44b600
test al al
je r-xdata
lea edx [ esi + 0x10 ]
push edx
call sub_4356cd
add esp 0x4
jmp r-xdata
or edi 0x8
jmp r-xdata
test edi edi
jne r-xdata
or edi 0x1
lea eax [ esi + 0x10 ]
push eax
call sub_4356cd
mov ecx [ esi + 0x24 ]
add esp 0x4
push ecx
call sub_435792
mov [ esi + 0x24 ] 0x0
or edi 0x4
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
mov [ esi + 0x4 ] edi
sub_44b7a4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
pop esi
test eax eax
je r-xdata
push eax
call sub_44b64f
retn 0x4
mov [ esp + 0x4 ] eax
jmp sub_44b64f
sub_44b7ca
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
push esi
call sub_43572f
test al al
je r-xdata
pop esi
retn 0x4
push esi
call sub_435713
test al al
je r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_4437fa
add esp 0x4
push eax
mov [ esi + 0x20 ] eax
call sub_44b6bc
push esi
call sub_435703
test al al
jne r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_4437fa
add esp 0x4
mov [ esi + 0x24 ] eax
pop esi
mov [ esp + 0x4 ] eax
jmp sub_44b6bc
sub_44b82b
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_443a7f
lea eax [ esi + 0x8 ]
push eax
call sub_4356cd
lea ecx [ esi + 0x10 ]
push ecx
call sub_4356cd
lea edx [ esi + 0x18 ]
push edx
call sub_4356cd
add esp 0xc
mov [ esi + 0x4 ] 0x0
pop esi
retn 0x4
sub_44b87e
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44b82b
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
push eax
call sub_435792
pop esi
retn 0x4
push esi
call sub_435792
sub_44b8a7
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov ecx [ ecx + 0x14 ]
mov [ eax + 0x14 ] ecx
inc [ ecx ]
retn 0x8
sub_44b8d6
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] 0x29
mov [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] eax
inc [ eax ]
lea ecx [ esp + 0xc ]
call sub_402620
mov eax esi
pop esi
retn 0x14
sub_44b92e
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
retn 0x4
push esi
lea esp [ esp ]
mov esi [ eax + 0x10 ]
push eax
call sub_44b915
mov eax esi
test esi esi
jne r-xdata
pop esi
sub_44b960
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_443e61
test al al
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
push esi
call sub_443e52
test al al
jne r-xdata
xor eax eax
pop esi
retn 0x4
sub_44b988
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
mov eax 0x1
pop esi
retn
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x2
pop esi
retn
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x3
pop esi
retn
call sub_40f0d0
xor ecx ecx
test al al
setne cl
pop esi
inc ecx
mov eax ecx
retn
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
call sub_40f0d0
movzx eax al
neg eax
sbb eax eax
add eax 0x2
pop esi
retn
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop esi
retn
sub_44ba58
mov eax [ esp + 0x4 ]
push eax
call sub_44b988
add esp 0x4
sub eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x4
push 0x0
push eax
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
retn
sub eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x10
push 0x0
push eax
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
retn
sub eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x40
push 0x0
push eax
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
retn
xor al al
retn
sub_44babc
mov eax [ esp + 0x4 ]
push eax
call sub_44b988
add esp 0x4
sub eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x2
push 0x0
push eax
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
retn
sub eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x8
push 0x0
push eax
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
retn
sub eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax 0x20
push 0x0
push eax
call [ __import_lookup_table_10(USER32:mouse_event) ]
mov al 0x1
retn
xor al al
retn
sub_44bb20
mov ecx [ esp + 0x4 ]
sub esp 0x22c
lea eax [ esp + 0x20 ]
call sub_40ffb0
lea eax [ esp + 0x20 ]
push eax
call sub_436ac4
add esp 0x4
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esp + 0x238 ] bl
jne r-xdata
add esp 0x22c
retn
lea edx [ esp + 0x24 ]
push edx
call sub_4112d5
xor ecx ecx
mov [ esp + eax * 2 + 0x2a ] cx
add esp 0x4
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x24 ]
mov eax 0x614
push ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1e ] ebx
mov [ esp + 0x22 ] ebx
mov [ esp + 0x1a ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0x3
mov [ esp + 0x18 ] ax
call [ __import_lookup_table_9(SHELL32:SHFileOperationW) ]
test eax eax
sete al
pop ebx
add esp 0x22c
retn
lea ecx [ esp + 0x24 ]
push ecx
call [ __import_lookup_table_0(KERNEL32:RemoveDirectoryW) ]
test eax eax
setne al
pop ebx
add esp 0x22c
retn
sub_44bbc9
mov ecx [ esp + 0x4 ]
sub esp 0x438
push ebx
mov bl [ esp + 0x448 ]
lea eax [ esp + 0x230 ]
call sub_40ffb0
mov ecx [ esp + 0x444 ]
lea eax [ esp + 0x24 ]
call sub_40ffb0
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x234 ]
push ecx
call [ __import_lookup_table_0(KERNEL32:lstrcmpiW) ]
test eax eax
jne r-xdata
lea eax [ esp + 0x230 ]
push eax
call sub_436ac4
add esp 0x4
test al al
je r-xdata
test bl bl
je r-xdata
xor al al
pop ebx
add esp 0x438
retn
lea ecx [ esp + 0x24 ]
push ecx
call sub_436ac4
add esp 0x4
test al al
je r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x234 ]
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x24 ]
push edx
call sub_4366be
add esp 0x4
test al al
je r-xdata
test bl bl
jne r-xdata
mov al 0x1
pop ebx
add esp 0x438
retn
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x234 ]
push edx
call [ __import_lookup_table_0(KERNEL32:MoveFileW) ]
lea eax [ esp + 0x24 ]
push eax
call sub_436ac4
add esp 0x4
test al al
je r-xdata
lea ecx [ esp + 0x230 ]
push r--data
push ecx
call sub_411663
lea edx [ esp + 0x238 ]
push edx
call sub_4112d5
lea edx [ esp + 0x30 ]
xor ecx ecx
push edx
mov [ esp + eax * 2 + 0x242 ] cx
call sub_4112d5
xor ecx ecx
mov [ esp + eax * 2 + 0x36 ] cx
lea edx [ esp + 0x240 ]
lea eax [ esp + 0x34 ]
mov [ esp + 0x1c ] edx
add esp 0x10
mov [ esp + 0x10 ] eax
xor eax eax
lea edx [ esp + 0x4 ]
mov ecx 0x614
push edx
mov [ esp + 0x1e ] eax
mov [ esp + 0x22 ] eax
mov [ esp + 0x1a ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] 0x2
mov [ esp + 0x18 ] cx
call [ __import_lookup_table_9(SHELL32:SHFileOperationW) ]
test eax eax
sete al
pop ebx
add esp 0x438
retn
sub_44bd29
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x10b4
call sub_425210
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
lea eax [ esp + 0x438 ]
xor bl bl
call sub_40ffb0
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x648 ]
call sub_40ffb0
lea eax [ esp + 0x648 ]
push eax
lea ecx [ esp + 0x43c ]
push ecx
call sub_436a1d
lea edx [ esp + 0x440 ]
push edx
mov [ esp + 0x1b ] al
call sub_436ac4
add esp 0xc
test al al
je r-xdata
lea ecx [ esp + 0x648 ]
push ecx
call sub_436ac4
add esp 0x4
test al al
je r-xdata
lea eax [ esp + 0x438 ]
push r--data
push eax
call sub_411663
add esp 0x8
lea eax [ esp + 0xcb0 ]
push eax
lea ecx [ esp + 0xebc ]
push ecx
lea edx [ esp + 0xab0 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x448 ]
push ecx
call sub_413db0
add esp 0x14
lea edx [ esp + 0x858 ]
push edx
lea eax [ esp + 0x43c ]
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
mov [ esp + 0xe ] 0x1
cmp esi 0xffffffff
je r-xdata
lea edx [ esp + 0x648 ]
push r--data
push edx
call sub_411663
add esp 0x8
push esi
call [ FindClose@IAT ]
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ __import_lookup_table_0(KERNEL32:CopyFileW) ]
test [ esp + 0x858 ] 0x10
jne r-xdata
lea ecx [ esp + 0x858 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x64c ]
push edx
lea eax [ esp + 0xcb8 ]
push eax
lea ecx [ esp + 0xec4 ]
push ecx
lea edx [ esp + 0x894 ]
push edx
call sub_436879
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call sub_411691
lea edx [ esp + 0xab0 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_411663
lea ecx [ esp + 0x894 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_411663
lea eax [ esp + 0x240 ]
push eax
call sub_436b22
add esp 0x1c
test al al
je r-xdata
cmp [ esp + 0xe ] 0x1
jne r-xdata
mov [ esp + 0xe ] al
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0x0
lea eax [ esp + 0x22c ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call edi
cmp [ esp + 0xf ] 0x0
jne r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ __import_lookup_table_0(KERNEL32:lstrcmpiW) ]
test eax eax
je r-xdata
mov bl 0x1
push 0x0
lea eax [ esp + 0x22c ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call edi
test eax eax
je r-xdata
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ __import_lookup_table_0(KERNEL32:MoveFileW) ]
jmp r-xdata
lea edx [ esp + 0x228 ]
push edx
lea eax [ esp + 0x1c ]
push eax
call [ __import_lookup_table_0(KERNEL32:MoveFileW) ]
test eax eax
je r-xdata
lea eax [ esp + 0x228 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x18 ]
push edx
call [ DeleteFileW@IAT ]
jmp r-xdata
test eax eax
jne r-xdata
sub_44bf8d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa88
mov ecx [ ebp + 0x8 ]
push ebx
push esi
lea eax [ esp + 0x18 ]
mov [ esp + 0xf ] 0x0
call sub_40ffb0
lea eax [ esp + 0x18 ]
push eax
call sub_436ac4
add esp 0x4
test al al
je r-xdata
lea edx [ esp + 0x680 ]
push edx
lea eax [ esp + 0x88c ]
push eax
lea ecx [ esp + 0x480 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_413db0
add esp 0x14
lea ecx [ esp + 0x228 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ FindFirstFileW@IAT ]
mov esi eax
mov bl 0x1
cmp esi 0xffffffff
je r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_411663
add esp 0x8
push esi
call [ FindClose@IAT ]
mov al [ esp + 0xf ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp bl 0x1
jne r-xdata
test [ esp + 0x228 ] 0x10
jne r-xdata
lea ecx [ esp + 0x228 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x17 ] bl
call sub_411691
lea edx [ esp + 0x480 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_411663
lea ecx [ esp + 0x264 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_411663
add esp 0x18
lea eax [ esp + 0x18 ]
push eax
call [ DeleteFileW@IAT ]
cmp eax 0x1
jne r-xdata
xor bl bl
jmp r-xdata
push esi
call [ FindClose@IAT ]
xor al al
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c0a5
mov eax [ esp + 0x8 ]
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
inc eax
cmp [ esi + 0x8 ] eax
jae r-xdata
pop esi
add esp 0x8
retn 0x8
cmp eax 0x41c2
jae r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
jmp r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
test eax eax
jge r-xdata
mov [ esi + 0x8 ] eax
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
test eax eax
jge r-xdata
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
test eax eax
jge r-xdata
fmul [ r--data ]
fnstcw [ esp + 0x14 ]
movzx eax [ esp + 0x14 ]
or eax 0xc00
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fistp [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov [ esi + 0x8 ] ecx
fldcw [ esp + 0x14 ]
jmp r-xdata
fadd [ r--data ]
mov [ esi ] edi
pop edi
mov edx [ esi + 0x4 ]
inc edx
push edx
push eax
push edi
call sub_410f70
mov eax [ esi ]
push eax
call sub_4112ef
add esp 0x10
fmul [ r--data ]
fnstcw [ esp + 0x14 ]
movzx eax [ esp + 0x14 ]
or eax 0xc00
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fistp [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
fldcw [ esp + 0x14 ]
fadd [ r--data ]
fmul [ r--data ]
fnstcw [ esp + 0x14 ]
movzx eax [ esp + 0x14 ]
or eax 0xc00
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fistp [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
mov [ esi + 0x8 ] edx
fldcw [ esp + 0x14 ]
jmp r-xdata
fadd [ r--data ]
mov ecx [ esi + 0x8 ]
push edi
push ecx
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
mov edi eax
mov eax [ esi ]
add esp 0x4
test eax eax
je r-xdata
sub_44c1d4
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_437ba7
test al al
je r-xdata
mov eax [ esi + 0x4 ]
inc eax
push eax
push esi
call sub_44c0a5
mov eax [ esi + 0xc ]
dec [ eax ]
push edi
push esi
call sub_437bb9
mov eax [ esi + 0x4 ]
add eax 0x2
push eax
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
inc ecx
push ecx
mov edi eax
push edx
push edi
call sub_410f70
add esp 0x10
mov [ esi ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov al [ esp + 0xc ]
mov [ ecx + edx ] al
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
retn 0x8
sub_44c245
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x1c ]
push ebp
call sub_4452d0
xor esi esi
xor bl bl
cmp [ edi ] esi
jbe r-xdata
mov [ edi ] esi
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0xc
lea ebx [ ebx ]
test bl bl
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
push ebp
mov bl 0x1
call sub_44c1d4
inc esi
cmp esi [ edi ]
jb r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0xc
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
call sub_4443d4
test al al
je r-xdata
sub_44c2ca
push esi
push edi
mov edi [ esp + 0xc ]
mov ecx [ edi + 0x9c0 ]
cmp ecx 0x206
jge r-xdata
mov esi 0x7
cmp esi ecx
jg r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x4
lea eax [ edi + 0x1c0 ]
xor eax eax
push eax
call sub_44c2b7
jmp r-xdata
cmp esi ecx
jg r-xdata
inc esi
add eax 0x4
cmp esi ecx
jle r-xdata
inc ecx
mov [ edi + 0x9c0 ] ecx
mov esi ecx
jmp r-xdata
mov [ edi + 0x9c0 ] 0x7
mov esi [ edi + 0x9c0 ]
jmp r-xdata
mov ecx [ edi + 0x9c0 ]
test ecx ecx
jne r-xdata
push 0x18
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov [ edi + esi * 4 + 0x1a4 ] eax
mov [ eax + 0x4 ] 0xff
mov [ eax + 0x5 ] 0x0
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
retn 0x4
xor eax eax
push eax
call sub_44c2b7
jmp r-xdata
sub_44c379
sub esp 0x124
push ebx
push ebp
mov ebp [ esp + 0x130 ]
cmp [ ebp + 0x20 ] 0x0
push esi
push edi
mov edi [ esp + 0x13c ]
mov bl [ edi ]
mov al [ edi + 0x7 ]
movzx esi [ edi + 0x8 ]
mov [ esp + 0x10 ] bl
mov [ esp + 0x14 ] al
je r-xdata
push edi
call sub_437a22
test al al
je r-xdata
cmp bl 0x14
je r-xdata
push 0x1c
lea ecx [ esp + 0x1c ]
xor eax eax
push ecx
push 0x1
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x28 ] ax
mov [ esp + 0x2a ] si
mov [ esp + 0x2c ] 0x6
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
call [ __import_lookup_table_10(USER32:SendInput) ]
push edi
call sub_444ef7
cmp al 0x1
jne r-xdata
cmp bl 0x90
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x2
push ecx
push edx
push ebp
call sub_4378b5
push ebp
call sub_437953
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn 0x8
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push 0x3
push edx
push eax
push ebp
call sub_4378b5
push ebp
call sub_437953
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn 0x8
cmp bl 0x91
je r-xdata
push edi
call sub_437a22
test al al
je r-xdata
push ebp
call sub_437953
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn 0x8
lea ecx [ esp + 0x34 ]
push ecx
call [ __import_lookup_table_10(USER32:GetKeyboardState) ]
movzx ebx bl
xor [ esp + ebx + 0x34 ] 0x80
lea edx [ esp + 0x34 ]
push edx
call [ __import_lookup_table_10(USER32:SetKeyboardState) ]
movzx esi [ esp + 0x14 ]
shl esi 0x10
push edi
or esi 0xc0000001
call sub_444ef7
cmp al 0x1
jne r-xdata
cmp [ ebp + 0x17 ] 0x0
jne r-xdata
or esi 0x1000000
cmp [ ebp + 0x16 ] 0x0
jne r-xdata
cmp [ ebp + 0x1d ] 0x0
jne r-xdata
mov ecx [ ebp + 0x20 ]
push esi
push ebx
push 0x101
push ecx
call [ PostMessageW@IAT ]
push ebp
call sub_437953
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn 0x8
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x12
jne r-xdata
mov eax [ ebp + 0x20 ]
or esi 0x20000000
push esi
push ebx
push 0x105
push eax
call [ PostMessageW@IAT ]
push ebp
call sub_437953
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn 0x8
sub_44c522
sub esp 0x128
push ebx
push ebp
mov ebp [ esp + 0x134 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ esp + 0x140 ]
movzx ecx [ edi + 0x8 ]
mov bl [ edi ]
mov al [ edi + 0x7 ]
mov [ esp + 0x14 ] bl
mov [ esp + 0x10 ] al
mov [ esp + 0x18 ] ecx
test esi esi
je r-xdata
push edi
call sub_437a22
test al al
je r-xdata
cmp bl 0x14
je r-xdata
mov ax [ esp + 0x18 ]
push 0x1c
lea ecx [ esp + 0x20 ]
mov [ esp + 0x26 ] ax
xor eax eax
push ecx
xor edx edx
push 0x1
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] dx
mov [ esp + 0x30 ] 0x4
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
call [ __import_lookup_table_10(USER32:SendInput) ]
push ebp
call sub_43792a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn 0x8
push edi
call sub_444ef7
cmp al 0x1
jne r-xdata
cmp bl 0x90
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push 0x0
push eax
push ecx
push ebp
call sub_4378b5
push ebp
call sub_43792a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn 0x8
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x1
push ecx
push edx
push ebp
call sub_4378b5
push ebp
call sub_43792a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn 0x8
cmp bl 0x91
je r-xdata
push edi
call sub_437a22
test al al
je r-xdata
movzx eax [ esp + 0x18 ]
push 0x1
push eax
push 0x102
push esi
call [ PostMessageW@IAT ]
push ebp
call sub_43792a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn 0x8
lea edx [ esp + 0x38 ]
push edx
call [ __import_lookup_table_10(USER32:GetKeyboardState) ]
movzx ebx bl
or [ esp + ebx + 0x38 ] 0x80
lea eax [ esp + 0x38 ]
push eax
call [ __import_lookup_table_10(USER32:SetKeyboardState) ]
movzx esi [ esp + 0x10 ]
shl esi 0x10
push edi
or esi 0x1
call sub_444ef7
cmp al 0x1
jne r-xdata
cmp [ ebp + 0x17 ] 0x0
jne r-xdata
or esi 0x1000000
cmp [ ebp + 0x16 ] 0x0
jne r-xdata
cmp [ ebp + 0x1d ] 0x0
jne r-xdata
mov edx [ ebp + 0x20 ]
push esi
push ebx
push 0x100
push edx
call [ PostMessageW@IAT ]
push ebp
call sub_43792a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn 0x8
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esp + 0x14 ] 0x12
jne r-xdata
mov ecx [ ebp + 0x20 ]
or esi 0x20000000
push esi
push ebx
push 0x104
push ecx
call [ PostMessageW@IAT ]
push ebp
call sub_43792a
pop edi
pop esi
pop ebp
pop ebx
add esp 0x128
retn 0x8
sub_44c6fb
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push esi
push edi
call sub_44c522
push esi
push edi
call sub_44c379
pop edi
pop esi
retn 0x8
sub_44c718
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x7 ] 0x0
mov [ esi ] 0xff
push edi
mov edi [ esp + 0x10 ]
mov [ esi + 0x1 ] 0x0
mov [ esi + 0x2 ] 0x0
mov [ esi + 0x3 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x5 ] 0x0
mov [ esi + 0x6 ] 0x0
push esi
mov [ esi + 0xa ] 0x0
mov [ esi + 0x8 ] di
call sub_437a12
test al al
je r-xdata
xor al al
push edi
call [ VkKeyScanW@IAT ]
movzx eax ax
cmp ax 0xffff
jne r-xdata
push ebx
mov ebx eax
mov [ esi ] al
movzx eax al
push 0x0
push eax
sar ebx 0x8
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
mov al 0x1
test al bl
je r-xdata
test bl 0x2
je r-xdata
mov [ esi + 0x1 ] al
test bl 0x4
pop ebx
je r-xdata
mov [ esi + 0x3 ] al
pop edi
pop esi
retn 0x8
pop edi
mov [ esi + 0x4 ] al
pop esi
retn 0x8
sub_44c7a0
mov cl [ esp + 0x8 ]
push ebx
xor ebx ebx
push esi
mov esi [ esp + 0xc ]
mov [ esi + 0x7 ] bl
xor eax eax
mov [ esi + 0x8 ] ax
mov [ esi + 0x1 ] bl
mov [ esi + 0x2 ] bl
mov [ esi + 0x3 ] bl
mov [ esi + 0x4 ] bl
mov [ esi + 0x5 ] bl
mov [ esi + 0x6 ] bl
push esi
mov [ esi + 0xa ] bl
mov [ esi ] cl
call sub_437a22
test al al
jne r-xdata
movzx edx [ esp + 0x10 ]
push ebx
push edx
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
pop esi
mov al 0x1
pop ebx
retn 0x8
pop esi
pop ebx
retn 0x8
sub_44c80c
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push 0xb
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
push 0xd
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
pop esi
mov [ ebx ] 0x1
mov eax 0x1
pop ebx
retn 0x8
push 0x16
push r--data
push esi
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x1 ] 0x1
pop esi
mov eax 0x1
pop ebx
retn 0x8
push edi
lea edi [ esi + 0x2c ]
call sub_40fff0
mov esi eax
push esi
call sub_4450b6
push esi
call sub_445111
push esi
call sub_4112d5
dec eax
add esp 0x4
cmp [ esi + eax * 2 ] 0x22
jne r-xdata
mov ebx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push esi
mov ecx ebx
call eax
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x8
xor ecx ecx
lea edi [ esi + 0x2 ]
push edi
mov [ esi + eax * 2 ] cx
call sub_4450b6
push edi
call sub_445111
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push edi
call eax
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x8
sub_44c8f6
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
retn 0x4
push esi
call sub_445408
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
sub ecx edi
inc ecx
push ecx
lea edx [ eax + edi ]
push edx
push eax
call sub_410f70
add esp 0xc
sub [ esi + 0x4 ] edi
sub_44c927
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push edi
push esi
call sub_437b95
test al al
jne r-xdata
pop edi
pop esi
retn 0x8
lea eax [ edi + 0x1 ]
push eax
call sub_44530d
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_41171a
mov [ esi ] eax
add esp 0x4
mov [ eax + edi ] 0x0
push eax
call sub_4112ef
add esp 0x4
sub_44c96e
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
call sub_445408
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
cmp edi ecx
jae r-xdata
pop edi
add eax ecx
pop esi
retn 0x8
add eax edi
pop edi
pop esi
retn 0x8
sub_44c995
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x20 ]
test edi edi
je r-xdata
push esi
call sub_44c8f6
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov eax [ ebp + 0x4 ]
cmp ebx eax
jae r-xdata
cmp edi 0xffffffff
je r-xdata
sub eax ebx
mov edi eax
lea ecx [ ebx + edi ]
cmp ecx eax
jbe r-xdata
push edi
push esi
call sub_44c927
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_437bb9
lea edx [ edi + 0x1 ]
push edx
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
push esi
call sub_437ba7
test al al
je r-xdata
mov ecx [ esi ]
mov [ esi + 0x4 ] edi
mov eax [ ebp ]
push edi
add eax ebx
push eax
push ecx
call sub_410f70
mov edx [ esi ]
add esp 0xc
mov [ edi + edx ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
sub_44ca28
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x28 ]
or ebp 0xffffffff
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
jg r-xdata
cmp [ edi ] ebp
je r-xdata
mov ebx [ esi + 0x30 ]
mov edx [ esi ]
push ebx
mov ebx [ esi + 0x2c ]
push ebx
mov ebx [ esi + 0x40 ]
or ebx [ esi + 0x38 ]
push ebx
push eax
push ecx
mov ecx [ esi + 0x24 ]
push edx
push ecx
call sub_446566
add esp 0x1c
mov [ esi + 0x34 ] eax
test eax eax
jg r-xdata
cmp eax ebp
jne r-xdata
cmp [ esp + 0x2c ] 0x0
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] ecx
mov [ esi + 0x38 ] 0x0
je r-xdata
cmp eax ebp
jne r-xdata
push edi
lea eax [ esp + 0x1c ]
push eax
push esi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
call sub_4454a5
lea eax [ esp + 0x10 ]
push eax
push edi
push esi
call sub_445450
lea ecx [ esp + 0x10 ]
push ecx
push edi
call sub_437c36
mov eax [ esi + 0x34 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov edx [ eax ]
cmp edx [ eax + 0x4 ]
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov ecx [ esi + 0x28 ]
cmp edx ecx
jne r-xdata
mov [ esi + 0x38 ] 0x0
mov edx [ edi + 0x4 ]
push edx
push esi
call sub_44c96e
mov al [ eax ]
mov [ esp + 0x28 ] al
mov ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x14 ] ebp
call sub_437c0c
add eax [ edi + 0x4 ]
lea edx [ esp + 0x10 ]
push edx
push edi
push esi
mov [ esp + 0x20 ] eax
call sub_445450
lea eax [ esp + 0x10 ]
push eax
push edi
call sub_437c36
jmp r-xdata
mov [ esi + 0x38 ] 0x10000010
inc ecx
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
sub_44cb6c
push ecx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
xor al al
pop esi
pop ecx
retn 0x4
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov edx [ esi + 0x30 ]
mov ecx [ esi ]
push edx
mov edx [ esi + 0x2c ]
push edx
mov edx [ esi + 0x40 ]
push edx
mov edx [ esi + 0x28 ]
push 0x0
push edx
push ecx
push eax
call sub_446566
add esp 0x1c
mov [ esi + 0x34 ] eax
test eax eax
jle r-xdata
mov [ esi + 0x34 ] 0x0
mov al 0x1
pop esi
pop ecx
retn 0x4
sub_44cbd3
push ebx
mov ebx [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
push 0x80004003
call sub_445675
push ebp
push esi
push 0x0
call [ GetDC@IAT ]
mov ebp [ GetDeviceCaps@IAT ]
mov esi eax
push 0x58
push esi
call ebp
push 0x5a
push esi
mov [ esp + 0x20 ] eax
call ebp
push esi
push 0x0
mov ebp eax
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ edi ]
mov esi [ __import_lookup_table_0(KERNEL32:MulDiv) ]
push eax
push ecx
push 0x9ec
call esi
mov edx [ edi + 0x4 ]
push ebp
push edx
push 0x9ec
mov [ ebx ] eax
call esi
pop esi
pop ebp
pop edi
mov [ ebx + 0x4 ] eax
pop ebx
retn 0x8
push 0x80004003
call sub_445675
sub_44cc94
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_445a43
xor eax eax
mov [ esi ] eax
mov al 0x1
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
mov [ esi ] eax
mov al 0x1
pop esi
retn 0x8
sub_44cccb
sub esp 0x8
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi ]
push esi
push eax
call [ GetWindowRect@IAT ]
test eax eax
je r-xdata
pop edi
xor al al
pop esi
add esp 0x8
retn 0xc
cmp [ esp + 0x1c ] 0x0
je r-xdata
pop edi
mov al 0x1
pop esi
add esp 0x8
retn 0xc
push edi
call sub_4458f9
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ esi + 0xc ]
mov [ esp + 0xc ] ecx
sub edi ecx
lea ecx [ esp + 0xc ]
push ecx
push eax
mov [ esp + 0x18 ] edx
sub ebx edx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
add edi eax
add ebx ecx
mov [ esi + 0xc ] ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edi
pop ebx
sub_44cd63
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
add eax [ ebx + 0x4 ]
mov ecx esi
call sub_401400
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov edx [ esi ]
add eax eax
push eax
push ecx
push edx
call sub_410f70
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
mov edx [ edi + 0x4 ]
mov ebp [ esi ]
inc eax
add eax eax
push eax
lea edx [ ebp + edx * 2 ]
push ecx
push edx
call sub_410f70
mov ecx [ edi + 0x4 ]
add ecx [ ebx + 0x4 ]
add esp 0x18
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
sub_44cddd
sub esp 0xe0
mov eax [ esp + 0xe4 ]
mov ecx [ eax ]
mov eax [ esp + 0xe8 ]
push ebx
mov ebx [ eax ]
mov eax [ esp + 0xf0 ]
push ebp
mov ebp [ esp + 0x108 ]
push esi
push edi
mov edi [ eax ]
mov eax ecx
shr eax 0xb
and eax 0x1
mov [ esp + 0x3c ] eax
mov esi ecx
shr esi 0x9
and esi 0x1
mov eax esi
xor eax 0x1
mov [ esp + 0xcc ] eax
mov eax 0xfffffffe
xor edx edx
mov [ esp + 0x4c ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x38 ] eax
movsx eax cl
and eax 0x1
shl eax 0x8
mov [ esp + 0x78 ] eax
mov [ esp + 0x50 ] edx
mov [ esp + 0x30 ] edx
mov [ esp + 0x40 ] ecx
mov [ esp + 0xb4 ] edx
mov [ esp + 0x6c ] edx
mov [ esp + 0x7c ] ebx
mov [ esp + 0xb8 ] ebx
mov [ esp + 0x5c ] edx
mov [ esp + 0xac ] edx
mov [ esp + 0x18 ] edx
mov [ esp + 0x60 ] edx
mov [ esp + 0x68 ] edx
mov [ esp + 0xa8 ] esi
mov eax ebx
mov eax [ ebp + 0x10 ]
add eax 0x1000
cmp [ ebp + 0x24 ] eax
ja r-xdata
mov ecx [ ebp + 0x10 ]
add ecx 0x1000
cmp ebx ecx
ja r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x34
xor eax eax
pop ebx
add esp 0xe0
retn
cmp [ esp + 0x5c ] 0x0
je r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x34
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
cmp ebx eax
jae r-xdata
cmp ecx 0x2a
je r-xdata
test ecx ecx
je r-xdata
mov edx [ esp + 0x114 ]
mov ecx [ edx ]
mov edx ebx
sub edx eax
mov eax 0x7fffffeb
sub eax ecx
cmp eax edx
jl r-xdata
mov ebx eax
mov [ esp + 0x20 ] 0x1
cmp ecx 0x2b
je r-xdata
cmp ecx 0x5c
jne r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x14
xor eax eax
pop ebx
add esp 0xe0
retn
sub ecx [ esp + 0x7c ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x114 ]
add ecx ebx
mov [ edx ] ecx
test eax eax
je r-xdata
test [ esp + 0x40 ] 0x4000
je r-xdata
mov eax [ ebp + 0xc ]
test [ ecx + eax ] 0x1
jne r-xdata
cmp ecx 0x3f
je r-xdata
test edx edx
je r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
mov ebx [ esp + 0xb8 ]
cmp eax [ esp + 0xb8 ]
jbe r-xdata
cmp ecx 0x7c
ja r-xdata
cmp [ esp + 0x20 ] edx
jne r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
inc edi
jmp r-xdata
cmp ecx 0x23
jne r-xdata
cmp ecx 0x7b
jne r-xdata
test [ esp + 0x40 ] 0x4000
je r-xdata
cmp [ esp + 0x114 ] 0x0
jne r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
inc edi
mov [ esp + 0x5c ] 0x0
inc edi
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x60 ]
mov [ esp + 0x7c ] ebx
jmp r-xdata
mov edi [ esp + 0xb8 ]
mov ecx ebx
sub ecx eax
push ecx
push eax
push edi
call sub_416320
mov ecx [ esp + 0x20 ]
mov edx edi
sub edx [ esp + 0x24 ]
add esp 0xc
add ebx edx
mov edx [ esp + 0x60 ]
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x7c ] ebx
jmp r-xdata
cmp [ esp + 0x3c ] 0x0
mov esi 0x1
mov [ esp + 0xbc ] cl
je r-xdata
movzx eax [ ecx + lookup_table_450395 ]
jmp [ eax * 4 + jump_table_450361 ]
mov [ ebx ] 0x53
mov [ ebx + 0x1 ] 0xff
mov [ esp + 0x60 ] ebx
mov eax edi
inc ebx
mov edx eax
sub edx [ ebp + 0x18 ]
inc ebx
sar edx 0x8
mov [ ebx ] dl
sub al [ ebp + 0x18 ]
mov [ ebx + 0x2 ] 0x0
mov [ ebx + 0x1 ] al
mov [ ebx + 0x3 ] 0x0
mov edi [ esp + 0x10 ]
add ebx 0x4
xor edx edx
cmp [ esp + 0x114 ] 0x0
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
mov [ esp + 0x14 ] ecx
je r-xdata
mov esi [ esp + 0xa8 ]
xor edx edx
inc edi
mov [ esp + 0x10 ] edi
mov al [ edi ]
test al al
je r-xdata
xor eax eax
mov [ esp + 0x20 ] eax
cmp [ esp + 0x60 ] eax
je r-xdata
lea eax [ edi + 0x1 ]
push eax
call sub_432c90
mov ecx [ esp + 0x18 ]
add esp 0x4
test eax eax
jne r-xdata
mov [ ebx ] 0x53
mov [ ebx + 0x1 ] 0xff
mov [ esp + 0x60 ] ebx
mov eax edi
inc ebx
mov edx eax
sub edx [ ebp + 0x18 ]
inc ebx
sar edx 0x8
mov [ ebx ] dl
sub al [ ebp + 0x18 ]
mov [ ebx + 0x2 ] 0x0
mov [ ebx + 0x1 ] al
mov [ ebx + 0x3 ] 0x0
mov edi [ esp + 0x10 ]
add ebx 0x4
jmp r-xdata
mov [ esp + 0x60 ] 0x0
movzx eax [ edx + 0x2 ]
movzx esi [ edx + 0x3 ]
shl eax 0x8
or eax esi
sub edi eax
sub edi [ ebp + 0x18 ]
mov eax edi
sar eax 0x8
mov [ esp + 0x58 ] edi
mov [ edx + 0x4 ] al
mov al [ esp + 0x58 ]
mov [ edx + 0x5 ] al
mov edi [ esp + 0x10 ]
movsx eax [ esp + 0x40 ]
and eax 0x1
or al 0x1c
mov [ esp + 0x18 ] ebx
mov [ ebx ] al
inc ebx
test esi esi
jle r-xdata
cmp ecx 0xc0
jl r-xdata
test [ esp + 0x40 ] 0x2
je r-xdata
mov esi [ esp + 0xa8 ]
mov eax [ esp + 0x7c ]
mov [ ebx ] 0x1b
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x60 ]
inc ebx
inc edi
jmp r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
test [ ebp + 0x44 ] 0x2000000
jne r-xdata
mov al [ edi + 0x1 ]
mov [ esp + 0x18 ] ebx
cmp al 0x3a
je r-xdata
cmp [ esp + 0x20 ] edx
je r-xdata
mov [ esp + 0x30 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x30 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x30 ] 0x1
mov eax [ ebp + 0x24 ]
mov esi [ esp + 0x40 ]
inc edi
mov [ esp + 0x68 ] eax
mov [ esp + 0x10 ] edi
mov al [ edi ]
mov [ esp + 0x58 ] esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x14 ] 0x5f
mov [ esp + 0x64 ] edx
cmp al 0x2a
jne r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ ebp + 0x34 ]
mov esi [ esp + 0x100 ]
push 0x0
push eax
push ecx
lea edx [ esp + 0x1c ]
push esi
push edx
mov [ esp + 0xb8 ] edi
call sub_432d18
add esp 0x14
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ esp + 0x104 ]
mov eax [ esp + 0x38 ]
mov [ ecx ] eax
mov ecx [ esp + 0x108 ]
mov eax [ esp + 0x54 ]
mov [ ecx ] eax
mov ecx [ esp + 0xf8 ]
mov eax [ esp + 0xfc ]
mov [ ecx ] ebx
mov [ eax ] edi
cmp [ esp + 0x114 ] edx
je r-xdata
xor ecx ecx
mov ecx [ ebp + 0x58 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x40 ]
xor edx edx
and eax 0x8
mov [ esp + 0x2c ] eax
je r-xdata
mov eax [ esp + 0xb4 ]
mov edx eax
dec eax
mov [ esp + 0xb4 ] eax
test edx edx
jg r-xdata
mov cl [ esp + 0xbc ]
cmp cl 0xd
je r-xdata
push esi
lea edx [ esp + 0xc0 ]
push edx
push ebx
call sub_410f70
add esp 0xc
add ebx esi
mov dl [ edi + 0x1 ]
inc edi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov esi [ esp + 0xa8 ]
mov eax [ esp + 0x7c ]
mov [ ebx ] 0x1a
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x60 ]
inc ebx
inc edi
jmp r-xdata
cmp [ esp + 0x38 ] 0xfffffffe
jne r-xdata
mov ecx [ esp + 0x54 ]
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov [ esp + 0x48 ] eax
movsx eax [ esp + 0x40 ]
and eax 0x4
or eax 0x30
shr eax 0x2
mov [ ebx ] al
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x18 ] ebx
inc ebx
mov [ esp + 0x4c ] ecx
inc edi
jmp r-xdata
or eax 0xffffffff
mov [ esp + 0x38 ] eax
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x40
xor eax eax
pop ebx
add esp 0xe0
retn
lea edx [ esp + 0xa4 ]
push edx
push edi
call sub_432266
add esp 0x8
test eax eax
jne r-xdata
cmp al 0x2e
je r-xdata
mov eax [ esp + 0x100 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x58 ]
push edx
inc edi
push edi
call sub_432bed
mov edi eax
mov eax [ esp + 0x110 ]
add esp 0x10
cmp [ eax ] 0x0
mov [ esp + 0x10 ] edi
jne r-xdata
mov [ esp + 0x50 ] edx
mov ecx [ esp + 0x18 ]
xor eax eax
cmp ecx eax
je r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x9
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
cmp [ esp + 0x50 ] eax
jne r-xdata
cmp al 0x3f
jne r-xdata
movzx edx [ edi + 0x1 ]
mov ecx [ ebp + 0xc ]
test [ edx + ecx ] 0x2
je r-xdata
mov edi [ esp + 0x10 ]
xor esi esi
cmp eax esi
jge r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xe0
retn
mov edx [ esp + 0x114 ]
mov eax [ edx ]
mov ecx [ esp + 0x7c ]
mov esi ebx
mov ebp 0x7fffffeb
sub esi ecx
sub ebp eax
cmp ebp esi
jge r-xdata
mov ecx [ ebp + 0x5c ]
mov edx [ ebp + 0x1c ]
sub edx ecx
cmp edi edx
ja r-xdata
mov eax [ ebp + 0x1c ]
cmp edi eax
jae r-xdata
cmp [ esp + 0x114 ] 0x0
jne r-xdata
or [ ebp + 0x48 ] 0x20
cmp cl 0xa
jne r-xdata
lea esp [ esp ]
mov [ esp + 0x38 ] 0xffffffff
mov ecx [ esp + 0x100 ]
xor eax eax
cmp [ edi + 0x1 ] 0x3a
setne al
dec eax
and eax 0xffffffee
add eax 0x1f
mov [ ecx ] eax
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
xor esi esi
nop
cmp al 0x3d
jne r-xdata
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
jmp r-xdata
mov edx [ esp + 0x50 ]
sub edx [ esp + 0x30 ]
mov [ esp + 0x44 ] ecx
neg edx
sbb edx edx
and edx 0x200
mov [ esp + 0x70 ] edx
mov dl [ edi + 0x1 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x34 ] eax
cmp dl 0x2b
jne r-xdata
mov edx [ esp + 0x48 ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x4c ]
mov [ esp + 0x54 ] edx
test esi 0x1000
je r-xdata
mov esi 0x1
add edi esi
mov [ esp + 0x10 ] edi
mov al [ edi ]
movzx ecx al
add ecx 0xffffffdf
cmp ecx 0x5b
ja r-xdata
xor edx edx
inc edi
mov edx edi
mov esi r--data
mov [ esp + 0x70 ] edx
mov [ esp + 0x18 ] 0x0
cmp [ esp + 0x3c ] esi
je r-xdata
mov ecx eax
neg ecx
cmp ecx 0x1a
jne r-xdata
sub eax ecx
add eax ebx
mov [ edx ] eax
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x14
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
inc edi
mov [ esp + 0x10 ] edi
mov al [ edi ]
test al al
jne r-xdata
cmp al [ ebp + 0x60 ]
jne r-xdata
mov edx [ esp + 0x3c ]
push edx
lea edx [ ebp + 0x5c ]
push edx
push eax
push ecx
push edi
call sub_43200a
add esp 0x14
test eax eax
je r-xdata
mov [ esp + 0x60 ] 0x0
jmp r-xdata
mov eax [ esp + 0x60 ]
movzx edx [ eax + 0x2 ]
movzx eax [ eax + 0x3 ]
shl edx 0x8
or edx eax
mov eax edi
mov edi [ esp + 0x60 ]
sub eax edx
sub eax [ ebp + 0x18 ]
mov edx eax
sar edx 0x8
mov [ edi + 0x4 ] dl
mov [ edi + 0x5 ] al
mov edi [ esp + 0x10 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x4c ] eax
cmp esi 0x1
je r-xdata
mov edx [ esp + 0x54 ]
or eax 0xffffffff
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] edx
cmp esi 0x1
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
mov [ esp + 0x10 ] edi
mov al [ edi ]
mov cl [ edi + 0x1 ]
inc edi
mov [ esp + esi + 0xbc ] al
and cl 0xc0
inc esi
cmp cl 0x80
je r-xdata
test esi esi
jne r-xdata
inc edi
cmp [ edi ] 0x45
je r-xdata
cmp dl 0x3f
jne r-xdata
inc edi
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x10 ] edi
jmp r-xdata
inc [ ebp + 0x34 ]
mov ecx [ ebp + 0x34 ]
sar ecx 0x8
mov [ ebx + 0x3 ] cl
mov dl [ ebp + 0x34 ]
mov [ ebx + 0x4 ] dl
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
mov [ esp + 0x14 ] 0x5e
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
xor esi esi
xor edx edx
mov [ esp + 0x24 ] esi
mov [ esp + 0x2c ] edx
lea ecx [ esp + 0x2c ]
cmp al 0x29
je r-xdata
movzx ecx [ ecx + lookup_table_4504c1 ]
jmp [ ecx * 4 + jump_table_450485 ]
inc edi
mov [ esp + 0x10 ] edi
movzx eax [ edi ]
test [ eax + ecx ] 0x2
jne r-xdata
mov al [ edi ]
cmp al 0x3a
je r-xdata
mov [ esp + 0xbc ] al
mov esi 0x1
jmp r-xdata
cmp eax 0x7f
jle r-xdata
cmp ecx 0x19
je r-xdata
mov edi [ esp + 0x10 ]
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
jmp r-xdata
cmp ecx 0x1
je r-xdata
mov ecx [ ebp + 0x5c ]
lea edi [ edi + ecx - 0x1 ]
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x0
jne r-xdata
movzx eax [ ebx - 0x1 ]
or eax [ ebp + 0x4c ]
or eax [ esp + 0x78 ]
cmp [ esp + 0x78 ] 0x0
jne r-xdata
movzx eax cl
or eax [ esp + 0x78 ]
mov [ esp + 0x38 ] eax
cmp esi 0x1
je r-xdata
cmp [ esp + 0x78 ] 0x0
je r-xdata
mov [ esp + 0x34 ] esi
cmp eax 0x5d
jne r-xdata
cmp eax 0x5e
jne r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx eax [ edi ]
mov [ esp + 0x14 ] eax
cmp eax 0x5c
jne r-xdata
push 0x3
push r--data
push edi
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
mov eax [ esp + 0xcc ]
inc edi
mov [ esp + 0x10 ] edi
jmp r-xdata
mov esi [ esp + 0x18 ]
mov dl [ esi ]
mov [ esp + 0x1c ] eax
cmp dl 0x1c
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ ebx ] cl
mov eax [ ebp + 0x4c ]
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x114 ]
neg eax
sbb eax eax
lea esi [ esp + 0x6c ]
and eax esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x6c ] edx
cmp ecx 0x5a
je r-xdata
mov ecx [ esp + 0x40 ]
or edx ecx
not esi
and edx esi
cmp [ edi ] 0x29
mov eax edx
mov [ esp + 0x58 ] eax
jne r-xdata
cmp al 0x3a
je r-xdata
add edi esi
mov [ esp + 0x10 ] edi
mov al [ edi ]
test al al
je r-xdata
mov [ esp + 0x64 ] esi
add edi esi
mov [ esp + 0x14 ] 0x5e
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
cmp [ edi + 0x1 ] 0x3f
mov [ esp + 0x14 ] 0x60
jne r-xdata
mov [ esp + 0x14 ] 0x58
add edi esi
jmp r-xdata
add edi esi
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x29
jne r-xdata
mov cl [ edi + 0x1 ]
cmp cl 0x21
je r-xdata
cmp al 0x3c
jne r-xdata
add edi esi
mov [ esp + 0x14 ] 0x5d
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
mov [ ebx ] 0x53
mov edi [ esp + 0x10 ]
add edi esi
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
mov [ esp + 0x60 ] ebx
add ebx esi
xor eax eax
test [ ecx + r--data ] 0x4
mov [ esp + 0xb4 ] esi
je r-xdata
add edi esi
mov [ esp + 0x10 ] edi
mov al [ edi ]
cmp al 0x3d
je r-xdata
mov edx 0x29
mov [ esp + 0x20 ] esi
jmp r-xdata
add edi esi
mov [ esp + 0x10 ] edi
mov edx 0x29
jmp r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x3b
xor eax eax
pop ebx
add esp 0xe0
retn
cmp al 0x29
jne r-xdata
lea ecx [ esp + 0xbc ]
push ecx
push eax
call sub_431e6f
add esp 0x8
mov esi eax
jmp r-xdata
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x38 ]
cmp edx 0xfffffffe
jne r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x5c ] 0x1
inc edi
jmp r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
mov al [ edi + 0x1 ]
cmp al [ ebp + 0x61 ]
je r-xdata
movzx eax [ ebx - 0x1 ]
or eax [ ebp + 0x4c ]
jmp r-xdata
mov [ esp + 0x38 ] eax
jmp r-xdata
xor edi edi
push 0x20
lea eax [ esp + 0x84 ]
push edi
push eax
mov [ esp + 0x30 ] edi
mov [ esp + 0x54 ] edi
mov [ esp + 0x2c ] 0xffffffff
call sub_4131f0
add esp 0xc
cmp [ esp + 0x14 ] edi
lea esi [ ebx + 0x4 ]
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x58 ] esi
je r-xdata
test [ ebp + 0x44 ] 0x2000000
je r-xdata
lea esi [ eax - 0x5d ]
jmp r-xdata
mov [ esp + 0x34 ] esi
mov edi [ esp + 0x10 ]
add edi 0x3
jmp r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp dl 0x1d
je r-xdata
mov ecx 0x1
cmp ecx 0x5b
je r-xdata
inc edi
mov [ esp + 0x14 ] 0x5e
mov [ esp + 0x10 ] edi
mov edx [ ebp + 0x14 ]
add edx 0x3
cmp ebx edx
jne r-xdata
mov edx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
movzx eax al
inc edi
sub eax 0x2d
mov [ esp + 0x10 ] edi
cmp eax 0x4b
ja r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x12
xor eax eax
pop ebx
add esp 0xe0
retn
cmp al 0x29
je r-xdata
mov [ ebx + 0x3 ] 0x64
mov edi [ esp + 0x10 ]
mov al [ edi + 0x1 ]
mov [ esp + 0x20 ] 0x3
mov [ esp + 0x24 ] 0xffffffff
cmp al 0x52
jne r-xdata
mov al [ edi + 0x2 ]
cmp al 0x3d
je r-xdata
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] 0x59
jmp r-xdata
mov eax [ esp + 0x7c ]
mov [ ebx ] 0x6f
mov edi [ esp + 0x10 ]
add ebx esi
mov esi [ esp + 0xa8 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x60 ]
inc edi
jmp r-xdata
mov [ esp + 0x14 ] 0x5b
cmp cl 0x3d
je r-xdata
mov [ esp + 0x34 ] 0x27
mov [ esp + 0x34 ] 0x3e
jmp r-xdata
cmp [ edi ] 0x29
jne r-xdata
add edi esi
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
test [ ecx + r--data ] 0x4
jne r-xdata
mov [ esp + 0x20 ] edx
mov edx 0x29
jmp r-xdata
cmp al 0x3e
je r-xdata
mov esi [ ebp + 0xc ]
inc edi
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
test [ ecx + esi ] 0x10
mov eax edi
mov [ esp + 0x28 ] eax
je r-xdata
mov al [ edi ]
movzx esi al
cmp esi 0x2b
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x3c
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
sub edi edx
mov eax edi
mov [ esp + 0x58 ] eax
xor edi edi
lea esp [ esp ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x48 ] edx
mov edx [ esp + 0x54 ]
mov [ esp + 0x4c ] edx
cmp ecx 0x1b
jne r-xdata
cmp ecx 0x5
jle r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
add edi 0x2
inc edi
jmp r-xdata
mov [ esp + 0x54 ] eax
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x6
xor eax eax
pop ebx
add esp 0xe0
retn
jmp r-xdata
neg esi
sbb esi esi
and esi 0xffffff9e
add esi 0x6f
mov eax esi
mov [ ebx ] al
mov eax [ esp + 0x38 ]
inc ebx
cmp eax 0xfffffffe
jne r-xdata
cmp [ esp + 0x50 ] 0x1
movzx ecx [ ebx - 0x1 ]
mov [ esp + 0x14 ] ecx
jle r-xdata
test [ ebx - 0x1 ] 0x80
lea ecx [ ebx - 0x1 ]
je r-xdata
cmp dl 0x1e
jne r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx 0x60
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx eax
xor edx ecx
test dl 0x7
je r-xdata
mov edx [ esp + 0x114 ]
test edx edx
je r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
dec edi
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0xc
xor eax eax
pop ebx
add esp 0xe0
retn
movzx edx [ eax + lookup_table_450541 ]
jmp [ edx * 4 + jump_table_45051d ]
cmp [ edi ] 0x0
je r-xdata
add edi esi
mov [ esp + 0x10 ] edi
mov al [ edi ]
test al al
jne r-xdata
cmp al 0x3c
jne r-xdata
cmp [ edi + 0x2 ] 0x26
lea ecx [ edi + 0x2 ]
jne r-xdata
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
cmp al 0x21
je r-xdata
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] 0x5a
jmp r-xdata
mov esi [ ebp + 0xc ]
movzx ecx cl
test [ ecx + esi ] 0x10
je r-xdata
mov eax edi
sub eax ecx
mov [ esp + 0x20 ] eax
cmp [ esp + 0x114 ] edx
je r-xdata
mov eax esi
add edi esi
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] edi
movzx eax [ edi ]
test [ eax + esi ] 0x10
mov ecx edi
mov [ esp + 0x28 ] ecx
je r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x27
xor eax eax
pop ebx
add esp 0xe0
retn
cmp eax 0xff
jg r-xdata
mov [ esp + 0x20 ] esi
mov edx 0x29
jmp r-xdata
cmp al 0x3c
je r-xdata
mov esi edi
xor ecx ecx
sub esi eax
cmp [ esp + 0x114 ] ecx
je r-xdata
mov ecx esi
cmp esi 0x2d
jne r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx eax [ edi ]
test [ eax + r--data ] 0x4
jne r-xdata
mov ecx [ edi * 8 + r--data ]
inc edi
cmp edi 0x7
lea esi [ esi + ecx + 0x1 ]
jl r-xdata
push eax
push esi
push edx
call sub_416685
add esp 0xc
test eax eax
je r-xdata
cmp ecx 0x1c
jne r-xdata
mov eax [ ebp + 0x24 ]
inc edi
xor edx edx
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x3c
mov cl [ edi + 0x1 ]
setne dl
mov [ esp + 0x68 ] eax
lea eax [ edi + 0x1 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x64 ] esi
dec edx
and edx 0x17
add edx 0x27
cmp cl 0x2b
je r-xdata
cmp ecx 0x17
jge r-xdata
cmp [ esp + 0x3c ] 0x0
mov edx [ esp + 0x14 ]
je r-xdata
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x7c ]
inc edi
jmp r-xdata
or eax 0xffffffff
mov [ esp + 0x38 ] eax
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp + 0x4c ]
or eax ecx
or eax [ esp + 0x78 ]
mov [ esp + 0x54 ] eax
mov dl [ ecx ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
cmp dl 0x17
jae r-xdata
cmp [ esp + 0x34 ] 0x0
movzx eax [ esi + 0x1 ]
mov [ esp + 0x24 ] 0xd
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0xb0 ]
mov edx [ esp + 0xa0 ]
cmp [ esp + 0x114 ] 0x0
jne r-xdata
mov edx [ esp + 0x10c ]
push eax
push ebp
push edx
lea eax [ esp + 0xac ]
push eax
mov eax [ esp + 0x30 ]
lea edx [ esp + 0xc0 ]
push edx
mov edx [ esp + 0x78 ]
push eax
mov eax [ esp + 0x118 ]
push edx
push ecx
push eax
mov eax [ esp + 0x64 ]
lea ecx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x80 ]
lea edx [ esp + 0x6c ]
push edx
and eax 0x7
push eax
push ecx
call sub_4548de
add esp 0x34
test eax eax
je r-xdata
mov edx [ esp + 0xf4 ]
mov ecx eax
shr ecx 0x9
and ecx 0x1
mov [ esp + 0xa8 ] ecx
mov esi [ esp + 0xa8 ]
xor ecx 0x1
mov [ esp + 0xcc ] ecx
movsx ecx al
and ecx 0x1
shl ecx 0x8
mov [ edx ] eax
mov edx [ esp + 0x60 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x7c ]
mov [ esp + 0x78 ] ecx
mov [ esp + 0x18 ] 0x0
inc edi
jmp r-xdata
mov [ ebx ] 0x19
mov cl al
inc ebx
and cl 0x7
mov [ ebx ] cl
mov edi [ esp + 0x10 ]
inc ebx
mov edx [ esp + 0xf4 ]
mov esi [ esp + 0xa8 ]
mov [ ebp + 0x44 ] eax
mov [ edx ] eax
mov edx [ esp + 0x60 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x7c ]
mov [ esp + 0x18 ] 0x0
inc edi
jmp r-xdata
cmp [ edx ] 0x6
jne r-xdata
lea ecx [ esp + 0x24 ]
jmp r-xdata
or [ ecx ] 0x80000
or [ ebp + 0x48 ] 0x10
jmp r-xdata
or [ ecx ] 0x1
jmp r-xdata
or [ ecx ] 0x2
jmp r-xdata
or [ ecx ] 0x4
jmp r-xdata
or [ ecx ] 0x8
jmp r-xdata
or [ ecx ] 0x200
jmp r-xdata
or [ ecx ] 0x40
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
inc edi
jmp r-xdata
cmp al 0x27
jne r-xdata
mov edx 0x3e
inc edi
mov [ esp + 0x34 ] edx
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ esp + 0x10 ] ecx
or edx 0xffffffff
mov [ ebx + 0x3 ] 0x66
mov edi [ esp + 0x10 ]
mov [ esp + 0x34 ] edx
jmp r-xdata
cmp al 0x3c
je r-xdata
add edi 0x2
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
inc edi
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x18
xor eax eax
pop ebx
add esp 0xe0
retn
mov esi 0x1
mov esi [ ebp + 0x28 ]
xor eax eax
cmp [ ebp + 0x2c ] eax
mov [ esp + 0x2c ] eax
jle r-xdata
movzx ecx [ edi ]
cmp ecx [ esp + 0x34 ]
jne r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx esi [ edi ]
test [ esi + eax ] 0x10
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x26
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
mov [ ebx ] al
mov ecx [ esp + 0x10 ]
sub ecx [ ebp + 0x18 ]
add ebx esi
add ecx esi
mov esi [ esp + 0xa8 ]
sar ecx 0x8
mov [ ebx ] cl
mov al [ esp + 0x10 ]
sub al [ ebp + 0x18 ]
mov [ ebx + 0x2 ] 0x0
inc al
mov [ ebx + 0x1 ] al
mov eax [ esp + 0x7c ]
mov [ ebx + 0x3 ] 0x0
mov edi [ esp + 0x10 ]
add ebx 0x4
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x60 ]
inc edi
jmp r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x29
xor eax eax
pop ebx
add esp 0xe0
retn
cmp [ ebp + 0x2c ] ecx
mov edi [ ebp + 0x28 ]
mov [ esp + 0x18 ] ecx
jle r-xdata
cmp esi ecx
je r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx esi [ edi ]
test [ esi + ecx ] 0x10
jne r-xdata
movzx ecx [ edi ]
xor eax eax
test [ ecx + r--data ] 0x4
mov [ esp + 0x1c ] eax
je r-xdata
movzx ecx [ edi + 0x1 ]
test [ ecx + r--data ] 0x4
jne r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x3f
xor eax eax
pop ebx
add esp 0xe0
retn
cmp eax [ edi * 8 + r--data ]
jne r-xdata
mov edx [ esp + 0x100 ]
mov [ edx ] 0x3c
cmp [ edi * 8 + r--data ] 0x70
jne r-xdata
mov edx [ esp + 0x70 ]
mov eax [ esp + 0x58 ]
cmp ecx 0x1d
jl r-xdata
mov dl [ edi + 0x1 ]
cmp dl 0x3c
je r-xdata
movzx esi [ edi + 0x2 ]
test [ esi + r--data ] 0x4
lea ecx [ edi + 0x2 ]
je r-xdata
cmp cl 0x2d
je r-xdata
or edx 0xffffffff
mov [ esp + 0x38 ] edx
mov eax [ esp + 0x114 ]
test eax eax
je r-xdata
cmp edx 0x7f
jle r-xdata
mov ecx [ esp + 0x18 ]
mov al [ ecx ]
cmp al 0x10
je r-xdata
cmp [ esp + 0x30 ] 0x0
jge r-xdata
mov eax ebx
sub eax ecx
push eax
push ecx
lea ecx [ esp + 0xcc ]
push ecx
mov [ esp + 0x20 ] eax
call sub_410f70
mov edi [ esp + 0x1c ]
add esp 0xc
or [ esp + 0x14 ] 0x80
jmp r-xdata
nop
cmp dl 0x4e
je r-xdata
cmp [ esp + 0x34 ] 0x0
movzx ecx dl
mov [ esp + 0x24 ] 0x1a
mov [ esp + 0x14 ] ecx
jne r-xdata
cmp [ esp + 0x30 ] 0x0
jge r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0xe
xor eax eax
pop ebx
add esp 0xe0
retn
mov esi [ esp + 0x114 ]
test esi esi
je r-xdata
mov eax ebx
xor edx edx
lea ebx [ ebx ]
mov al [ edi ]
cmp al 0x29
jne r-xdata
xor edx edx
mov [ esp + 0x34 ] edx
cmp al 0x2d
je r-xdata
mov edx 0x27
inc edi
mov [ esp + 0x34 ] edx
mov [ esp + 0x10 ] edi
jmp r-xdata
movzx ecx [ edi + 0x1 ]
mov esi [ ebp + 0xc ]
inc edi
test [ ecx + esi ] 0x10
je r-xdata
mov eax [ ebp + 0x28 ]
xor ecx ecx
cmp [ ebp + 0x2c ] ecx
mov [ esp + 0x18 ] ecx
jle r-xdata
mov edi eax
lea esp [ esp ]
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x2a
xor eax eax
pop ebx
add esp 0xe0
retn
cmp [ ebp + 0x2c ] 0x2710
jge r-xdata
mov edx [ esp + 0x18 ]
cmp edx [ ebp + 0x2c ]
jge r-xdata
jmp r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x3e
xor eax eax
pop ebx
add esp 0xe0
retn
movzx eax [ edi ]
cmp eax edx
jne r-xdata
movzx ecx [ edi ]
cmp ecx edx
jne r-xdata
inc edi
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
test [ ecx + r--data ] 0x4
jne r-xdata
inc edi
mov [ esp + 0x10 ] edi
mov dl [ edi * 8 + r--data ]
mov [ ebx ] dl
inc ebx
cmp edi 0x7
jge r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp + 0x50 ] 0x1
test eax eax
je r-xdata
cmp ecx 0x16
je r-xdata
mov ecx 0xffffffe3
sub ecx eax
mov [ esp + 0x1c ] ecx
inc edi
mov [ esp + 0x10 ] edi
mov al [ edi ]
mov [ esp + 0x20 ] esi
cmp al 0x3c
jne r-xdata
cmp dl 0x27
je r-xdata
movzx ecx [ ecx ]
cmp ecx edx
je r-xdata
movzx esi [ ecx + 0x1 ]
inc ecx
test [ esi + r--data ] 0x4
jne r-xdata
mov esi eax
mov cl [ esi ]
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x24 ] eax
test cl cl
je r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
mov ecx esi
mov esi [ esp + 0x58 ]
sub ecx esi
add [ eax ] ecx
movzx edx [ edi ]
cmp edx 0xc0
mov [ esp + 0x14 ] edx
jl r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax [ ecx + 0x2 ]
mov [ esp + 0x20 ] edx
cmp al 0xf
je r-xdata
mov edx [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
push ebp
push edx
mov edx [ esp + 0x1c ]
inc edi
push edi
lea eax [ esp + 0xd0 ]
push eax
mov eax [ esp + 0x28 ]
push ecx
movzx ecx [ eax ]
push edx
push ecx
call sub_43fc66
add esp 0x1c
test eax eax
je r-xdata
mov al [ ecx - 0x1 ]
dec ecx
and al 0xc0
cmp al 0x80
je r-xdata
mov ecx [ esp + 0x30 ]
test ecx ecx
jne r-xdata
cmp dl 0x4f
je r-xdata
cmp [ esp + 0x30 ] 0x0
jge r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
push ebp
push ecx
inc edi
push edi
push 0x0
push edx
push eax
push 0x1e
mov ebx [ esp + 0x44 ]
cmp ecx 0x68
je r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x6c ]
mov edx 0x7fffffeb
sub edx eax
lea esi [ ecx - 0x6 ]
cmp edx esi
jl r-xdata
movzx esi [ eax + 0x1 ]
movzx edi [ eax + 0x2 ]
shl esi 0x8
or esi edi
add eax esi
inc edx
cmp [ eax ] 0x55
jne r-xdata
cmp [ ebx + 0x3 ] 0x68
jne r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx eax [ edi ]
mov [ esp + 0x24 ] eax
cmp al 0x2b
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x1c
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
xor eax eax
test [ esi + ecx ] 0x10
mov [ esp + 0x1c ] eax
mov [ esp + 0x28 ] edi
je r-xdata
mov eax [ ebp + 0x34 ]
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
inc eax
sar eax 0x8
mov [ esi ] al
mov cl [ ebp + 0x34 ]
push edi
push edx
lea eax [ esi + 0x2 ]
inc cl
push eax
mov [ esi + 0x1 ] cl
call sub_410f70
mov [ esi + edi + 0x2 ] 0x0
mov edi [ esp + 0x1c ]
add esp 0xc
cmp eax esi
je r-xdata
jl r-xdata
mov edx [ esp + 0x20 ]
cmp [ esi + edx + 0x2 ] al
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x31
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
lea ecx [ eax + 0x3 ]
cmp ecx [ ebp + 0x30 ]
jle r-xdata
xor ecx ecx
cmp [ esp + 0x2c ] ecx
setne cl
push ecx
push esi
push eax
push ebp
call sub_4408c9
add esp 0x10
mov [ esp + 0x1c ] eax
test eax eax
jle r-xdata
movzx eax [ edi ]
movzx ecx [ edi + 0x1 ]
shl eax 0x8
or eax ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
push esi
lea ecx [ edi + 0x2 ]
push ecx
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x2a
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
cmp esi 0x20
jg r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x1d
xor eax eax
pop ebx
add esp 0xe0
retn
cmp esi 0x2d
jne r-xdata
mov [ esp + 0x1c ] eax
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
inc edi
jmp r-xdata
mov [ ebx ] 0x71
mov dl [ eax + 0x5 ]
inc ebx
mov [ ebx ] dl
mov cl [ eax + 0x4 ]
mov [ ebx + 0x1 ] cl
mov eax [ eax ]
add ebx 0x2
test eax eax
jne r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x2d
xor eax eax
pop ebx
add esp 0xe0
retn
cmp ecx 0xf
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ ebx ] 0x51
mov [ esp + 0x18 ] ebx
inc ebx
mov edx ecx
sar edx 0x8
mov [ ebx ] dl
mov [ ebx + 0x1 ] cl
add ebx 0x2
cmp ecx 0x20
mov eax 0x1
jge r-xdata
mov [ esp + 0x38 ] 0xffffffff
xor edx edx
cmp al 0x27
setne dl
dec edx
and edx 0xffffffaa
add edx 0x7d
mov edx 0x3e
jmp r-xdata
cmp dl 0x7b
jne r-xdata
mov edi eax
mov [ esp + 0x10 ] edi
mov edx [ esp + 0x100 ]
mov esi [ esp + 0xa8 ]
mov eax [ esp + 0x7c ]
mov [ edx ] 0x39
mov edx [ esp + 0x60 ]
inc edi
jmp r-xdata
movzx ecx [ esi ]
cmp ecx edx
je r-xdata
movzx ecx cl
mov [ esp + 0x70 ] ecx
cmp ecx edx
je r-xdata
cmp edx 0x5b
jne r-xdata
cmp edx 0x5c
jne r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
lea ecx [ eax + eax * 2 ]
mov [ esp + 0x2c ] eax
mov eax [ eax * 4 + r--data ]
and eax edx
add ecx ecx
shl eax cl
mov [ esp + 0x4c ] 0x1
mov edx eax
mov eax [ esp + 0x2c ]
cmp eax 0x1
mov [ esp + 0x14 ] edx
jl r-xdata
mov ecx [ esp + 0x70 ]
or [ ebp + 0x4c ] ecx
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x18 ] 0x0
inc edi
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x50 ]
add eax ecx
mov [ esp + 0x1c ] eax
test edx edx
jne r-xdata
mov eax 0xffffffff
mov [ esp + 0x20 ] eax
jmp r-xdata
mov edi [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x1c ] 0x0
cmp [ esp + 0x50 ] 0x0
jne r-xdata
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x70 ]
or [ ebp + 0x4c ] ecx
mov ebx esi
mov esi [ esp + 0xa8 ]
inc edi
jmp r-xdata
cmp dl 0x50
je r-xdata
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
push ebp
push edx
inc edi
push edi
push 0x0
push eax
push 0x0
push ecx
jmp r-xdata
jmp r-xdata
cmp ecx 0x5d
mov esi [ esp + 0x54 ]
mov [ esp + 0x4c ] esi
mov esi [ esp + 0x38 ]
mov [ esp + 0x48 ] esi
mov [ esp + 0xac ] 0x0
jl r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
lea eax [ eax + ecx - 0x6 ]
mov ecx [ esp + 0x114 ]
mov [ ecx ] eax
mov eax [ esp + 0x7c ]
mov [ ebx ] 0x5e
inc ebx
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] 0x3
add ebx 0x2
mov [ ebx ] 0x55
inc ebx
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] 0x3
mov edi [ esp + 0x10 ]
add ebx 0x2
inc edi
jmp r-xdata
cmp edx 0x2
jg r-xdata
cmp edx 0x1
jg r-xdata
mov esi edi
sub esi [ esp + 0x28 ]
test edx edx
jle r-xdata
jmp r-xdata
dec ecx
movzx edx [ eax ]
movzx ecx [ eax + 0x1 ]
shl edx 0x8
or ecx edx
mov edx [ ebp + 0x34 ]
inc edx
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x2c ]
mov eax [ ebp + 0x30 ]
sub ecx edi
imul ecx eax
push ecx
lea edx [ esi + eax ]
push esi
push edx
call sub_416320
add esp 0xc
mov eax 0x1
movzx ecx [ esi ]
movzx edx [ esi + 0x1 ]
shl ecx 0x8
or ecx edx
mov edx [ ebp + 0x34 ]
mov eax 0x1
add edx eax
cmp ecx edx
je r-xdata
inc [ ebp + 0x2c ]
inc edi
mov [ esp + 0x10 ] edi
cmp eax 0x20
mov [ ebp + 0x30 ] ecx
jle r-xdata
mov eax [ esp + 0x100 ]
mov [ eax ] 0xf
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
add edi [ ebp + 0x30 ]
inc eax
cmp eax [ ebp + 0x2c ]
mov [ esp + 0x18 ] eax
jl r-xdata
cmp [ edi + esi + 0x2 ] al
je r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x30
xor eax eax
pop ebx
add esp 0xe0
retn
mov [ esp + 0x1c ] ecx
jmp r-xdata
cmp esi 0x2b
jne r-xdata
test eax eax
je r-xdata
cmp ecx 0x10
je r-xdata
or [ ebp + 0x40 ] eax
cmp ecx [ ebp + 0x3c ]
jle r-xdata
shl eax cl
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov edx [ esp + 0x100 ]
mov esi [ esp + 0xa8 ]
mov eax [ esp + 0x7c ]
mov [ edx ] 0x39
mov edx [ esp + 0x60 ]
inc edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ esp + 0x70 ]
mov cl [ esi + ecx ]
test cl 0x4
jne r-xdata
cmp edx 0x5c
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x3a
je r-xdata
xor ecx ecx
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
add edi eax
mov [ esp + 0x10 ] edi
mov edi edi
cmp edx 0x1
jne r-xdata
mov ecx [ esp + 0x30 ]
mov ebx [ esp + 0x18 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ esp + 0x30 ] 0x0
mov esi ebx
mov [ esp + 0x28 ] eax
mov ebx ecx
je r-xdata
cmp [ esp + 0x50 ] 0x1
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp dl 0x51
je r-xdata
call sub_43fc66
add esp 0x1c
test eax eax
je r-xdata
cmp ecx 0x58
jne r-xdata
cmp esi 0xfffffffe
jne r-xdata
mov edx [ esp + 0x100 ]
mov [ edx ] 0x1b
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x36
jmp r-xdata
mov ecx 0x68
mov dl [ edi ]
inc edi
mov [ esp + 0x10 ] edi
cmp dl 0x29
jne r-xdata
movzx ecx [ edi ]
inc edi
mov [ esp + 0x10 ] edi
cmp ecx [ esp + 0x34 ]
jne r-xdata
test eax eax
jl r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0x41
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
mov ecx [ esp + 0x18 ]
jmp r-xdata
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
push edx
lea eax [ esi + 0x2 ]
push eax
push ecx
call sub_411b63
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ esp + 0x2c ] eax
jmp r-xdata
test [ esp + 0x40 ] 0x80000
je r-xdata
cmp [ esp + 0x38 ] 0xfffffffe
jne r-xdata
cmp [ esp + 0x114 ] 0x0
mov eax [ ebp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x24 ] eax
jne r-xdata
mov eax [ esp + 0x28 ]
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x3a
xor eax eax
pop ebx
add esp 0xe0
retn
mov edx [ ebp + 0x34 ]
sub edx eax
inc edx
mov [ esp + 0x1c ] edx
test edx edx
jg r-xdata
cmp ecx 0x5
jle r-xdata
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov [ ebp + 0x3c ] eax
mov eax [ esp + 0x7c ]
inc edi
jmp r-xdata
mov [ esp + 0x20 ] 0x1
jmp r-xdata
mov esi [ esp + 0x24 ]
test cl 0x10
je r-xdata
mov [ esp + 0x34 ] 0x0
mov eax [ esp + 0x40 ]
mov ecx [ ebp + 0x34 ]
mov edi [ esp + 0x100 ]
push 0x1
push eax
push ecx
lea edx [ esp + 0x1c ]
push edi
push edx
call sub_432d18
add esp 0x14
cmp [ edi ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
lea edx [ esp + 0xa4 ]
push edx
push edi
call sub_432266
add esp 0x8
test eax eax
je r-xdata
cmp al 0x2e
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x4c ] edi
cmp eax 0xd
je r-xdata
mov edi edi
mov [ esp + 0x5c ] 0x0
inc edi
jmp r-xdata
mov edx [ esp + 0x4c ]
movzx eax [ edx + edi ]
and eax 0x3f
sub ecx 0x6
shl eax cl
inc edx
mov [ esp + 0x4c ] edx
or [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
cmp edx eax
jle r-xdata
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
add cl 0x27
mov [ ebx ] cl
inc ebx
mov ecx edx
sar ecx 0x8
mov [ ebx ] cl
mov [ ebx + 0x1 ] dl
add ebx 0x2
cmp [ esp + 0x30 ] 0x0
jge r-xdata
mov ecx [ esp + 0x30 ]
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0x1
jne r-xdata
add al 0x1f
mov [ ebx ] al
inc ebx
jmp r-xdata
add al 0x4c
mov [ ebx ] al
mov eax [ esp + 0x50 ]
inc ebx
mov edx eax
sar edx 0x8
mov [ ebx ] dl
mov [ ebx + 0x1 ] al
add ebx 0x2
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp ecx 0x1
jne r-xdata
add al 0x46
mov [ ebx ] al
jmp r-xdata
cmp dl 0x5e
je r-xdata
test edx edx
jl r-xdata
test eax eax
jl r-xdata
test eax eax
jl r-xdata
or edx 0xffffffff
or eax edx
mov [ esp + 0xa0 ] edx
mov [ esp + 0xb0 ] eax
jmp r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
dec edi
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x1a
xor eax eax
pop ebx
add esp 0xe0
retn
cmp [ esp + 0x114 ] 0x0
jne r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx ecx [ edi ]
test [ ecx + esi ] 0x10
jne r-xdata
test [ ecx + r--data ] 0x4
je r-xdata
add eax [ ebp + 0x30 ]
inc ecx
cmp ecx [ ebp + 0x2c ]
mov [ esp + 0x18 ] ecx
jl r-xdata
cmp [ esp + 0x2c ] 0x0
jne r-xdata
add esi [ ebp + 0x30 ]
add edi eax
cmp edi [ ebp + 0x2c ]
jl r-xdata
mov eax [ esp + 0x100 ]
mov [ eax ] 0x2b
jmp r-xdata
mov [ ebx ] 0x5d
mov [ ebx + 0x1 ] 0x0
mov [ ebx + 0x2 ] 0x6
mov [ ebx + 0x3 ] 0x52
add ebx 0x3
mov ecx eax
sub ecx [ ebp + 0x14 ]
add ebx 0x3
sar ecx 0x8
mov [ ebx - 0x2 ] cl
sub al [ ebp + 0x14 ]
add ebx 0x3
cmp [ esp + 0x38 ] 0xfffffffe
mov [ ebx - 0x4 ] al
mov [ ebx - 0x3 ] 0x55
mov [ ebx - 0x2 ] 0x0
mov [ ebx - 0x1 ] 0x6
mov edi [ esp + 0x10 ]
mov [ esp + 0x6c ] 0x9
jne r-xdata
cmp [ esp + 0x1c ] 0x0
mov [ ebx ] 0x0
je r-xdata
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x3a
xor eax eax
pop ebx
add esp 0xe0
retn
add eax [ ebp + 0x34 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0xf
mov ecx [ esp + 0xfc ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe0
retn
mov [ esp + 0x18 ] esi
cmp ecx 0x17
mov [ esp + 0x18 ] ebx
jl r-xdata
mov cl [ esi + 0x1 ]
inc esi
mov [ esp + 0x24 ] esi
test cl cl
jne r-xdata
mov edx eax
mov ecx edx
neg ecx
cmp ecx 0x5
jne r-xdata
cmp [ edi + 0x1 ] 0x3a
mov eax [ ebp + 0x8 ]
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x4c ] eax
jne r-xdata
cmp al 0x3d
jne r-xdata
or [ ebp + 0x48 ] 0x20
cmp eax 0xa
jne r-xdata
add edi 0x2
mov [ esp + 0x10 ] edi
cmp [ edi + 0x1 ] 0x5c
mov [ esp + 0x5c ] ecx
je r-xdata
inc edi
mov [ esp + 0x10 ] edi
movzx eax [ edi ]
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x50 ]
cmp [ esp + 0x30 ] ecx
je r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov ebx esi
cmp ecx 0x1
je r-xdata
mov ebx [ esp + 0x18 ]
add al 0x21
mov [ ebx ] al
inc ebx
jmp r-xdata
add al 0x25
mov [ ebx ] al
inc ebx
mov edx ecx
sar edx 0x8
mov [ ebx ] dl
jmp r-xdata
add al 0x23
mov [ ebx ] al
inc ebx
jmp r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov eax ecx
sar eax 0x8
mov [ ebx ] al
mov [ ebx + 0x1 ] cl
add ebx 0x2
jmp r-xdata
xor ecx ecx
mov [ esp + 0x30 ] ecx
add al 0x48
mov [ ebx ] al
jmp r-xdata
add al 0x4a
mov [ ebx ] al
jmp r-xdata
inc ebx
mov eax ebx
sub eax [ esp + 0x18 ]
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x28 ] eax
mov [ esp + 0x20 ] 0x0
cmp dl 0x60
jne r-xdata
cmp dl 0x5f
je r-xdata
mov esi [ esp + 0xa8 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x54 ] edx
mov edx [ esp + 0x60 ]
inc edi
jmp r-xdata
test edx edx
jl r-xdata
test edx edx
jge r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov [ esp + 0x48 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x38 ] eax
mov [ esp + 0xac ] 0x1
mov [ esp + 0x48 ] 0xffffffff
jmp r-xdata
mov edi [ esp + 0x10 ]
cmp [ edi ] 0x29
jne r-xdata
mov ecx [ esp + 0x24 ]
xor edx edx
cmp ecx edx
jle r-xdata
mov [ esp + 0x1c ] eax
or eax 0xffffffff
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x38 ] 0xffffffff
inc edi
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x3c ]
mov ecx [ ebp + 0x14 ]
push edx
push eax
push ecx
call sub_43238e
add esp 0xc
mov [ esp + 0x24 ] eax
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
neg al
mov [ ebx ] al
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x7c ]
inc ebx
inc edi
jmp r-xdata
cmp ecx 0x16
jne r-xdata
mov [ esp + 0x14 ] 0x8
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x1f
xor eax eax
pop ebx
add esp 0xe0
retn
add edi 0x2
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x5e
jne r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp [ edi + 0x1 ] 0x2d
jne r-xdata
cmp [ esp + 0x5c ] ecx
jne r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
cmp eax 0x5d
jne r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov cl [ esp + 0x14 ]
mov [ ebx ] cl
mov ecx [ esp + 0x20 ]
inc ebx
test ecx ecx
jl r-xdata
cmp [ esp + 0x14 ] 0x80
jl r-xdata
mov al [ esp + 0x1c ]
add al 0x25
mov [ esi ] al
mov eax [ esp + 0x30 ]
lea ecx [ eax - 0x1 ]
sar ecx 0x8
lea ebx [ esi + 0x1 ]
dec al
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
jmp r-xdata
mov [ ebx + 0x1 ] cl
mov dl [ esp + 0x14 ]
mov [ ebx ] dl
cmp [ esp + 0x14 ] 0x80
jl r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov al [ ecx ]
cmp al 0x41
jne r-xdata
cmp [ esp + 0x30 ] 0xffffffff
jne r-xdata
mov edx [ esp + 0x18 ]
cmp [ edx + 0x3 ] 0x68
je r-xdata
cmp dl 0x5d
je r-xdata
mov esi [ esp + 0xa8 ]
mov eax [ esp + 0x7c ]
mov [ esp + 0x54 ] edx
mov edx [ esp + 0x60 ]
inc edi
jmp r-xdata
or eax [ esp + 0x70 ]
mov edx eax
mov [ esp + 0xa0 ] edx
cmp [ ebp + 0x2c ] edx
mov edi [ ebp + 0x28 ]
mov [ esp + 0x18 ] edx
jle r-xdata
cmp eax edx
jle r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
jne r-xdata
cmp [ esp + 0x2c ] eax
mov edx [ esp + 0x1c ]
setne al
push eax
push edx
push 0x0
push ebp
call sub_4408c9
add esp 0x10
test eax eax
jl r-xdata
cmp ecx 0x11
jne r-xdata
mov [ esp + 0x14 ] 0x58
jmp r-xdata
mov ecx [ esp + 0xa4 ]
sub ecx edi
push ecx
push edi
call sub_432216
add esp 0x8
test eax eax
jl r-xdata
mov eax 0x1
add edi eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x10 ] edi
mov ecx [ esp + 0x14 ]
mov eax ecx
cdq
and edx 0x7
add eax edx
and ecx 0x7
mov dl 0x1
shl dl cl
sar eax 0x3
lea eax [ esp + eax + 0x80 ]
or [ eax ] dl
test [ esp + 0x40 ] 0x1
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0xff
jg r-xdata
add edi 0x2
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x5c
jne r-xdata
cmp [ esp + 0x5c ] 0x0
jne r-xdata
mov cl [ esp + 0x14 ]
mov [ ebx ] cl
inc ebx
cmp [ esp + 0x14 ] 0x80
jl r-xdata
add al 0x1f
mov [ ebx ] al
inc ebx
jmp r-xdata
mov dl [ esp + 0x28 ]
mov [ ebx ] cl
inc ebx
mov [ ebx ] dl
inc ebx
mov esi [ esp + 0x14 ]
and esi 0x7
push esi
lea edx [ esp + 0xc8 ]
push edx
push ebx
call sub_410f70
mov eax [ esp + 0x28 ]
add ebx esi
add al 0x1f
add esp 0xc
mov [ ebx ] al
inc ebx
jmp r-xdata
add ebx 0x2
mov esi [ esp + 0x14 ]
and esi 0x7
push esi
lea ecx [ esp + 0xc8 ]
push ecx
push ebx
call sub_410f70
add esp 0xc
add ebx esi
jmp r-xdata
cmp al 0x27
je r-xdata
mov al [ ecx + 0x3 ]
cmp al 0x10
je r-xdata
mov eax [ esp + 0x50 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
jmp r-xdata
mov ecx [ esp + 0xfc ]
mov eax [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ eax ] 0x37
xor eax eax
pop ebx
add esp 0xe0
retn
cmp dl 0x60
je r-xdata
mov edx [ esp + 0x18 ]
cmp edx [ ebp + 0x2c ]
jge r-xdata
lea esp [ esp ]
cmp ecx 0x2d
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x10c ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push ebx
push edx
call sub_4470ce
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x100 ]
mov [ ecx ] 0xf
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esp + 0x1c ]
add ecx eax
mov edx ebx
sub edx eax
mov eax [ ebp + 0x24 ]
add edx 0x4
mov [ esp + 0x24 ] ecx
sar edx 0x8
mov [ eax ] dl
mov edx [ ebp + 0x24 ]
mov cl bl
sub cl [ ebp + 0x14 ]
add cl 0x4
mov [ edx + 0x1 ] cl
add [ ebp + 0x24 ] 0x2
jmp r-xdata
cmp ecx 0x1a
jne r-xdata
mov [ esp + 0x14 ] 0x52
jmp r-xdata
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x100 ]
mov [ eax ] 0x1e
jmp r-xdata
test [ esp + 0x40 ] 0x1
je r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x48 ]
mov [ esp + 0x20 ] eax
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ esp + 0x14 ]
movzx ecx [ eax + ecx ]
mov eax ecx
cdq
and edx 0x7
add eax edx
mov [ esp + 0x14 ] ecx
and ecx 0x7
mov dl 0x1
sar eax 0x3
shl dl cl
lea eax [ esp + eax + 0x80 ]
or [ eax ] dl
mov eax [ esp + 0x14 ]
mov [ esi ] 0x1
inc esi
push esi
push eax
mov [ esp + 0x30 ] 0x1
call sub_431e6f
add esp 0x8
jmp r-xdata
test [ esp + 0x40 ] 0x1
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ edi + 0x1 ] 0x45
jne r-xdata
mov edi [ esp + 0x48 ]
mov ecx [ esp + 0x34 ]
cmp edi 0x1
jne r-xdata
sub ecx [ esp + 0x50 ]
mov [ esp + 0x30 ] ecx
cmp ecx 0x1
jne r-xdata
movzx edx [ esp + 0x20 ]
mov [ ebx ] dl
movzx edx [ esp + 0x28 ]
inc ebx
mov [ ebx ] dl
inc ebx
mov esi [ esp + 0x14 ]
and esi 0x7
push esi
lea edx [ esp + 0xc8 ]
push edx
push ebx
call sub_410f70
mov eax [ esp + 0x28 ]
add esp 0xc
add ebx esi
jmp r-xdata
movzx eax al
movzx edx [ eax + r--data ]
add ecx edx
cmp [ esp + 0x3c ] 0x0
mov [ esp + 0x44 ] ecx
je r-xdata
cmp al 0x34
jne r-xdata
mov eax 0x2
lea ecx [ ecx + eax + 0x4 ]
jmp r-xdata
cmp al 0xf
je r-xdata
cmp eax 0x1
mov edx [ esp + 0x114 ]
jle r-xdata
mov edi 0x1
cmp [ esp + 0x30 ] edi
mov [ ebx ] al
jg r-xdata
movzx edx [ eax + 0x1 ]
movzx esi [ eax + 0x2 ]
shl edx 0x8
or edx esi
add eax edx
cmp [ eax ] 0x55
jne r-xdata
cmp dl 0x6f
je r-xdata
mov edi [ esp + 0x28 ]
xor eax eax
cmp [ esp + 0x2c ] eax
setne al
push eax
push esi
push edi
push ebp
call sub_4408c9
add esp 0x10
test eax eax
jle r-xdata
movzx eax [ edi ]
movzx ecx [ edi + 0x1 ]
inc [ ebx + 0x3 ]
shl eax 0x8
or eax ecx
mov edx eax
sar edx 0x8
mov [ ebx + 0x4 ] dl
mov [ ebx + 0x5 ] al
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
mov eax [ esp + 0x18 ]
add edi [ ebp + 0x30 ]
inc eax
cmp eax [ ebp + 0x2c ]
mov [ esp + 0x18 ] eax
jl r-xdata
add eax [ ebp + 0x34 ]
mov ecx [ ebp + 0x34 ]
sub ecx eax
inc ecx
mov eax ecx
jmp r-xdata
mov edx [ esp + 0x100 ]
mov [ edx ] 0x28
jmp r-xdata
mov eax [ esp + 0x24 ]
cmp ecx 0x19
je r-xdata
mov edi [ esp + 0x10 ]
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
lea edi [ eax + eax * 2 ]
mov edx [ edi * 4 + r--data ]
add edx [ esp + 0x4c ]
push 0x20
push edx
lea eax [ esp + 0xd8 ]
push eax
call sub_410f70
mov ecx [ edi * 4 + r--data ]
mov edi [ edi * 4 + r--data ]
add esp 0xc
test ecx ecx
jl r-xdata
cmp eax 0x2
jg r-xdata
add esi eax
cmp eax 0x7f
jle r-xdata
mov edi [ esp + 0x4c ]
mov [ esp + 0x10 ] edi
cmp [ esp + 0x5c ] 0x0
jne r-xdata
cmp [ edi ] 0x5c
jne r-xdata
add edi 0x2
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x5c
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
cmp [ esp + 0x28 ] 0x0
jne r-xdata
add al 0x25
mov [ ebx ] al
inc ebx
mov eax ecx
sar eax 0x8
mov [ ebx ] al
add al 0x23
mov [ ebx ] al
inc ebx
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x30 ]
jl r-xdata
mov eax ebx
sub eax ecx
mov [ esp + 0x2c ] eax
test eax eax
jle r-xdata
mov al [ ecx - 0x1 ]
cmp al 0xc0
jb r-xdata
mov [ esp + 0x44 ] ecx
xor eax eax
lea ecx [ ecx + eax + 0x4 ]
jmp r-xdata
mov esi [ esp + 0x30 ]
test esi esi
jle r-xdata
test edx edx
je r-xdata
mov edx [ esp + 0x68 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x18 ]
push edx
push ebp
push eax
push 0x4
push ecx
call sub_4405aa
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x2c ]
push edx
push eax
add eax 0x4
push eax
call sub_416320
mov cl [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x134 ]
add cl 0x69
mov [ eax ] cl
add eax edi
mov [ eax ] 0x5e
add eax edi
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
mov ecx [ esp + 0x64 ]
mov [ esp + 0x40 ] eax
add eax 0x2
add esp 0x20
add ebx 0x4
sub [ esp + 0x30 ] edi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x30 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x18 ]
push eax
push ebp
push ecx
push edi
push edx
call sub_4405aa
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x2c ]
push ecx
lea esi [ eax + 0x1 ]
push eax
push esi
call sub_416320
add esp 0x20
add ebx edi
cmp [ esp + 0x30 ] 0x0
jne r-xdata
mov edx ebx
sub edx eax
mov [ esp + 0x64 ] edx
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0xb
xor eax eax
pop ebx
add esp 0xe0
retn
cmp [ esp + 0x34 ] 0x0
jne r-xdata
inc [ ebx + 0x3 ]
mov ecx eax
sar ecx 0x8
mov [ ebx + 0x4 ] cl
mov [ ebx + 0x5 ] al
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x28 ]
push esi
lea eax [ edi + 0x2 ]
push eax
push ecx
call sub_416685
add esp 0xc
test eax eax
je r-xdata
cmp eax [ ebp + 0x38 ]
jg r-xdata
cmp eax edx
jle r-xdata
mov edi [ esp + 0x10 ]
test edx edx
jge r-xdata
mov [ esp + 0x5c ] 0x1
jmp r-xdata
cmp [ edi + 0x2 ] 0x45
jne r-xdata
test edi edi
jge r-xdata
mov edx [ esp + 0x4c ]
xor eax eax
add ecx edx
test edi edi
jl r-xdata
xor eax eax
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp al 0x5d
je r-xdata
cmp [ edi + 0x1 ] 0x51
jne r-xdata
jmp r-xdata
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x4c ] eax
je r-xdata
or eax 0xffffffff
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
movzx eax [ ecx ]
add eax 0xffffffe1
cmp eax 0x20
ja r-xdata
movzx eax al
and eax 0x3f
movzx edx [ eax + r--data ]
add ecx edx
jl r-xdata
sub esi [ esp + 0x50 ]
mov [ esp + 0x30 ] esi
cmp [ esp + 0xac ] 0x0
je r-xdata
mov eax [ esp + 0x50 ]
dec eax
mov [ esp + 0x58 ] eax
imul eax [ esp + 0x6c ]
fild [ esp + 0x58 ]
fimul [ esp + 0x6c ]
mov [ esp + 0x2c ] eax
fcomp [ r--data ]
fnstsw ax
test ah 0x41
je r-xdata
test esi esi
mov al [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x114 ]
add al 0x69
sub [ esp + 0x30 ] edi
mov [ ecx ] al
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x30 ]
jmp r-xdata
mov edx [ esp + 0x18 ]
mov [ edx ] 0x72
jmp r-xdata
mov edx [ esp + 0x100 ]
mov [ edx ] 0xf
jmp r-xdata
cmp [ edi ] 0x52
jne r-xdata
mov edx eax
sar edx 0x8
mov [ ebx + 0x4 ] dl
mov [ ebx + 0x5 ] al
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
add [ esp + 0x48 ] 0x2
cmp [ esp + 0x114 ] 0x0
mov eax [ ebp + 0x8 ]
jne r-xdata
add edi 0x2
jmp r-xdata
cmp edi 0x1
jne r-xdata
neg edi
mov dl [ ecx + eax ]
not dl
and [ esp + eax + 0xd0 ] dl
inc eax
cmp eax 0x20
jl r-xdata
lea ecx [ ecx ]
movzx eax al
mov [ esp + 0x1c ] eax
movzx edx al
cmp edx 0xc0
mov [ esp + 0x1c ] edx
jl r-xdata
add edi 0x2
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x5c
jne r-xdata
xor eax eax
cmp ecx [ esp + 0x24 ]
setne al
inc ebx
add eax 0x4e
mov [ ebx - 0x1 ] al
test ecx ecx
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov edx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x2c ]
push edx
push ecx
add ecx 0x3
push ecx
call sub_416320
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x38 ]
mov [ eax ] 0x5d
mov [ ebx + 0x3 ] 0x55
add ecx 0x3
add ebx 0x3
inc ebx
mov eax ecx
sar eax 0x8
mov [ ebx ] al
mov [ ebx + 0x1 ] cl
mov edx [ esp + 0x50 ]
mov [ edx + 0x1 ] al
mov eax [ esp + 0x50 ]
add esp 0xc
add ebx 0x2
mov [ eax + 0x2 ] cl
movzx eax [ eax + lookup_table_450461 ]
jmp [ eax * 4 + jump_table_45042d ]
mov edi ebx
sub edi [ esp + 0x64 ]
movzx eax [ edi + 0x1 ]
movzx ecx [ edi + 0x2 ]
shl eax 0x8
or eax ecx
mov esi edi
sub esi eax
mov al [ esp + 0x1c ]
add al 0x56
cmp [ esp + 0x114 ] 0x0
mov [ edi ] al
jne r-xdata
test edx edx
je r-xdata
cmp [ esp + 0x50 ] 0x1
jle r-xdata
cmp [ esp + 0x54 ] 0x0
jge r-xdata
mov eax [ edx ]
mov esi 0x7fffffeb
sub esi eax
mov eax esi
mov esi [ esp + 0x2c ]
cmp eax esi
jl r-xdata
mov edi [ esp + 0x10 ]
cmp esi 0x6
jne r-xdata
xor eax eax
lea ecx [ eax + 0x1 ]
cmp esi ecx
jle r-xdata
cmp edx 0xfffffff9
je r-xdata
lea edx [ ecx - 0x6 ]
cmp edx 0x5
ja r-xdata
cmp edi 0x2
jne r-xdata
and [ esp + 0xd1 ] 0xc3
jmp r-xdata
mov dl [ ecx + eax ]
or [ esp + eax + 0xd0 ] dl
inc eax
cmp eax 0x20
jl r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
cmp ecx eax
jl r-xdata
cmp [ esp + 0x1c ] 0x5c
jne r-xdata
cmp [ esp + 0x5c ] 0x0
jne r-xdata
mov ecx edx
and ecx 0x3f
movzx eax [ ecx + r--data ]
mov [ esp + 0x64 ] eax
lea ecx [ eax + eax * 2 ]
mov eax [ eax * 4 + r--data ]
and eax edx
mov edx [ esp + 0x64 ]
add ecx ecx
shl eax cl
mov [ esp + 0x1c ] eax
mov eax 0x1
cmp edx eax
mov [ esp + 0x2c ] eax
jl r-xdata
mov [ esp + 0x5c ] 0x1
cmp [ edi + 0x1 ] 0x45
jne r-xdata
push 0x20
lea edx [ esp + 0x84 ]
push edx
push ebx
call sub_410f70
add esp 0xc
cmp [ esp + 0x114 ] 0x0
jne r-xdata
mov [ esi ] 0x0
mov [ ebx ] 0x50
add ebx 0x3
xor eax eax
inc esi
test ecx ecx
setne al
mov [ ebx ] al
test edi edi
jle r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0xfffffffe
jne r-xdata
mov edx [ esp + 0x20 ]
cmp edx 0x80
jl r-xdata
mov [ ecx ] 0x28
jmp r-xdata
mov [ ecx ] 0x29
jmp r-xdata
mov [ ecx ] 0x2a
jmp r-xdata
mov [ ecx ] 0x2b
jmp r-xdata
mov [ ecx ] 0x42
jmp r-xdata
mov [ ecx ] 0x43
jmp r-xdata
mov [ ecx ] 0x44
jmp r-xdata
mov [ ecx ] 0x45
jmp r-xdata
mov [ ecx ] 0x35
jmp r-xdata
mov [ ecx ] 0x36
jmp r-xdata
mov [ ecx ] 0x37
jmp r-xdata
mov [ ecx ] 0x38
jmp r-xdata
cmp [ esi ] 0x5d
je r-xdata
add esi 0xffffffff
js r-xdata
test esi esi
jle r-xdata
mov ecx [ esp + 0x50 ]
mov edi [ esp + 0x68 ]
dec ecx
mov [ esp + 0x2c ] ecx
mov eax [ esp + 0x38 ]
mov [ esp + 0x54 ] eax
mov eax [ edx ]
add esi eax
mov [ edx ] esi
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jle r-xdata
push esi
push r--data
push edi
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
mov eax 0xffff
movzx edx [ ecx + edi ]
test [ edx + r--data ] 0x4
je r-xdata
cmp edx 0xfffffffa
je r-xdata
cmp ecx 0x13
jne r-xdata
jmp [ edx * 4 + jump_table_450415 ]
xor eax eax
cmp [ esp + 0x2c ] eax
je r-xdata
and [ esp + 0xdb ] 0x7f
mov ecx [ esp + 0xfc ]
mov edx [ esp + 0x100 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
mov [ edx ] 0x8
xor eax eax
pop ebx
add esp 0xe0
retn
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ ebp + 0x34 ]
mov edi [ esp + 0x100 ]
push 0x1
push ecx
push edx
lea eax [ esp + 0x1c ]
push edi
push eax
call sub_432d18
add esp 0x14
cmp [ edi ] 0x0
mov [ esp + 0x1c ] eax
jne r-xdata
add edi edx
mov [ esp + 0x10 ] edi
jmp r-xdata
lea ebx [ ebx ]
add edi 0x2
mov [ esp + 0x10 ] edi
cmp [ edi ] 0x5c
je r-xdata
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
add ebx 0x20
inc edi
jmp r-xdata
lea esi [ esp + 0x80 ]
mov eax ebx
sub esi ebx
mov edi 0x20
mov edi edi
mov ebx esi
or al 0x2
mov [ ebx ] al
inc ebx
mov ecx esi
sub ecx ebx
push ecx
lea edx [ ebx + 0x20 ]
push ebx
push edx
call sub_416320
push 0x20
lea eax [ esp + 0x90 ]
push eax
push ebx
call sub_410f70
add esp 0x18
lea ebx [ esi + 0x20 ]
jmp r-xdata
mov [ esp + 0xbc ] dl
mov esi 0x1
jmp r-xdata
cmp edx 0x7f
jle r-xdata
mov esi [ esp + 0xa8 ]
mov [ ebx ] 0x1e
inc ebx
mov [ ebx ] dl
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x60 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x7c ]
inc ebx
inc edi
jmp r-xdata
or eax 0xffffffff
mov [ esp + 0x38 ] eax
mov esi [ esp + 0x54 ]
mov [ esp + 0x4c ] esi
test ecx ecx
je r-xdata
mov [ esp + 0x20 ] esi
jmp r-xdata
mov edx [ esp + 0x20 ]
test edx edx
je r-xdata
mov al [ esp + 0x1c ]
add al 0x69
mov [ esp + 0x77 ] al
lea ecx [ ecx ]
mov eax [ esp + 0x6c ]
add eax 0x7
mov [ esp + 0x58 ] eax
imul eax esi
fild [ esp + 0x58 ]
fimul [ esp + 0x30 ]
sub eax 0x6
mov [ esp + 0x2c ] eax
fcomp [ r--data ]
fnstsw ax
test ah 0x41
je r-xdata
mov edi esi
add ebx eax
sub [ esp + 0x2c ] 0x1
mov [ esp + 0x68 ] edi
jne r-xdata
movzx ecx [ edi ]
movzx edx [ edi + 0x1 ]
shl ecx 0x8
or ecx edx
mov edx [ ebp + 0x24 ]
add ecx eax
sar ecx 0x8
mov [ edx ] cl
mov cl [ edi + 0x1 ]
mov edx [ ebp + 0x24 ]
add cl al
mov [ edx + 0x1 ] cl
add [ ebp + 0x24 ] 0x2
add edi 0x2
cmp edi esi
jb r-xdata
mov ecx [ esp + 0x100 ]
neg eax
sbb eax eax
and eax 0xffffffec
add eax 0x23
mov [ ecx ] eax
jmp r-xdata
cmp eax [ ebp + 0x38 ]
jg r-xdata
mov [ ebx + 0x3 ] 0x68
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
inc ecx
cmp ecx esi
lea eax [ eax + eax * 4 ]
lea eax [ edx + eax * 2 - 0x30 ]
jl r-xdata
cmp edx 0xfffffff5
je r-xdata
cmp ecx 0x12
jne r-xdata
or [ esp + 0x81 ] 0x2
or [ esp + 0x84 ] 0x1
or [ esp + 0x94 ] 0x1
cmp [ esp + 0x3c ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov [ esp + 0x24 ] 0x1
xor edi edi
xor edi edi
lea ebx [ ebx ]
mov [ esp + 0x24 ] 0x1
xor edi edi
jmp r-xdata
lea ecx [ esp + 0x80 ]
xor edi edi
sub eax ecx
jmp r-xdata
lea edx [ esp + 0x80 ]
xor ecx ecx
mov [ esp + 0x24 ] 0x1
sub eax edx
mov dl [ esp + eax + 0xd0 ]
or [ esp + eax + 0x80 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov edi edi
mov eax ecx
cmp eax 0xd
je r-xdata
test eax eax
jge r-xdata
movzx edx [ eax + edi ]
mov eax [ esp + 0x2c ]
and edx 0x3f
sub ecx 0x6
shl edx cl
inc eax
mov [ esp + 0x2c ] eax
or [ esp + 0x1c ] edx
mov edx [ esp + 0x64 ]
cmp eax edx
jle r-xdata
jmp r-xdata
mov cl [ esi + eax ]
not cl
mov [ eax ] cl
inc eax
sub edi 0x1
jne r-xdata
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xa8 ]
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x7c ]
add ebx 0x20
inc edi
jmp r-xdata
mov eax [ esp + 0x18 ]
mov esi [ esp + 0xa8 ]
mov ecx ebx
sub ecx eax
mov dl bl
sub dl al
sar ecx 0x8
mov [ eax + 0x2 ] dl
mov edx [ esp + 0x60 ]
mov [ eax + 0x1 ] cl
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x7c ]
inc edi
jmp r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0xbc ]
push ecx
push edx
call sub_431e6f
add esp 0x8
mov esi eax
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x20 ]
push edx
push edi
push eax
call sub_440649
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
lea ecx [ ecx ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push ebx
call sub_410f70
mov edi [ esp + 0x74 ]
mov edx [ esp + 0x30 ]
add esp 0xc
cmp edi edx
jae r-xdata
mov ecx [ esp + 0x20 ]
mov [ ebx ] 0x5e
inc ebx
test ecx ecx
jne r-xdata
mov eax [ edx ]
mov esi 0x7fffffeb
sub esi eax
mov eax esi
mov esi [ esp + 0x2c ]
cmp eax esi
jl r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov esi [ ebp + 0x24 ]
push edx
push eax
push ebx
call sub_410f70
mov eax [ esp + 0x34 ]
add esp 0xc
cmp edi esi
jae r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x114 ]
mov edx eax
sar edx 0x8
mov [ ebx + 0x4 ] dl
mov [ ebx + 0x5 ] al
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
test eax eax
jne r-xdata
cmp edx 0xfffffff6
je r-xdata
cmp ecx 0x15
jne r-xdata
xor eax eax
mov edi edi
mov [ esi ] 0x1
inc esi
push esi
push 0x1680
mov [ esp + 0x30 ] 0x1
call sub_431e6f
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x180e
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2000
call sub_431e6f
add esi eax
push esi
push 0x200a
call sub_431e6f
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x202f
call sub_431e6f
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x205f
call sub_431e6f
add esi eax
mov [ esi ] 0x1
inc esi
push esi
push 0x3000
call sub_431e6f
add esp 0x38
mov cl [ eax + edi + 0x40 ]
or [ esp + edi + 0x80 ] cl
inc edi
cmp edi 0x20
jl r-xdata
mov dl [ eax + edi + 0x40 ]
not dl
or [ esp + edi + 0x80 ] dl
inc edi
cmp edi 0x20
jl r-xdata
jmp r-xdata
mov cl [ eax + edi + 0xa0 ]
or [ esp + edi + 0x80 ] cl
inc edi
cmp edi 0x20
jl r-xdata
jmp r-xdata
mov dl [ eax + edi + 0xa0 ]
not dl
or [ esp + edi + 0x80 ] dl
inc edi
cmp edi 0x20
jl r-xdata
lea ecx [ esp + edi + 0x80 ]
mov dl [ eax + ecx ]
or [ ecx ] dl
inc edi
cmp edi 0x20
jl r-xdata
lea edi [ esp + ecx + 0x80 ]
mov dl [ eax + edi ]
not dl
or [ edi ] dl
inc ecx
cmp ecx 0x20
jl r-xdata
or [ esp + 0x81 ] 0x8
jmp r-xdata
mov edi [ esp + 0xa4 ]
inc edi
mov [ esp + 0x48 ] 0xa
jmp r-xdata
mov cl [ esp + eax + 0xd0 ]
not cl
or [ esp + eax + 0x80 ] cl
inc eax
cmp eax 0x20
jl r-xdata
mov edi [ esp + 0xa4 ]
inc edi
mov [ esp + 0x48 ] 0xa
jmp r-xdata
or [ ebp + 0x48 ] 0x20
cmp eax 0xa
jne r-xdata
mov edi [ esp + 0x10 ]
cmp eax 0xfffffffb
jne r-xdata
add [ esi ] 0x3
jmp r-xdata
mov eax [ esp + 0x20 ]
movzx ecx [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl ecx 0x8
or ecx edx
add eax ecx
cmp [ eax ] 0x54
mov [ esp + 0x20 ] eax
je r-xdata
sub edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x28 ]
movzx edx [ edi ]
movzx ecx [ edi + 0x1 ]
mov eax esi
neg eax
sbb eax eax
and eax 0x3
shl edx 0x8
inc eax
or edx ecx
mov ecx [ esp + 0x28 ]
add edx eax
mov eax [ ebp + 0x24 ]
add edx ecx
sar edx 0x8
mov [ eax ] dl
mov dl [ edi + 0x1 ]
mov eax esi
neg eax
sbb eax eax
and eax 0x3
inc eax
add dl al
mov eax [ ebp + 0x24 ]
add dl cl
mov [ eax + 0x1 ] dl
add [ ebp + 0x24 ] 0x2
add edi 0x2
cmp edi [ esp + 0x24 ]
jb r-xdata
mov eax ebx
sub eax ecx
xor eax eax
jmp r-xdata
mov eax [ edx ]
add esi eax
mov [ edx ] esi
jmp r-xdata
mov ecx eax
sar ecx 0x8
mov [ ebx + 0x3 ] 0x66
mov [ ebx + 0x4 ] cl
mov [ ebx + 0x5 ] al
mov [ esp + 0x18 ] ebx
xor edx edx
jmp r-xdata
cmp edx 0xfffffff7
je r-xdata
cmp ecx 0x14
jne r-xdata
or [ esp + 0x81 ] 0x3c
or [ esp + 0x90 ] 0x20
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov edx 0xfd
sub ecx 0x3
je r-xdata
jmp r-xdata
jmp r-xdata
and [ esp + 0x81 ] 0xf7
jmp r-xdata
mov ecx [ esp + 0x48 ]
mov edx eax
sub edx [ esp + 0x14 ]
cmp [ esp + 0x114 ] 0x0
lea edx [ ecx + edx + 0x1 ]
mov [ esp + 0x48 ] edx
mov [ esp + 0x20 ] eax
jne r-xdata
cmp eax 0xff
jg r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp eax 0xffffffea
jne r-xdata
mov [ esp + 0x1c ] 0x8
jmp r-xdata
jmp r-xdata
mov eax ebx
sub eax edx
inc eax
mov edi ebx
sub edi eax
movzx ecx [ edi + 0x1 ]
movzx esi [ edi + 0x2 ]
shl ecx 0x8
or ecx esi
jne r-xdata
jmp r-xdata
mov [ ebx ] 0x55
inc ebx
mov ecx eax
sar ecx 0x8
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
add ebx 0x2
mov [ edi + 0x1 ] cl
mov [ edi + 0x2 ] al
test edx edx
jne r-xdata
mov eax [ ebp + 0x24 ]
mov cl [ esp + 0x77 ]
mov [ ebx ] cl
inc ebx
mov [ esp + 0x24 ] eax
test esi esi
je r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
jmp r-xdata
mov edx eax
sar edx 0x8
mov [ esp + 0x20 ] ebx
mov [ ebx ] dl
mov [ ebx + 0x1 ] al
add ebx 0x2
cmp edx 0xfffffff8
je r-xdata
test [ esp + 0x40 ] 0x40
jne r-xdata
xor eax eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2028
mov [ esp + 0x30 ] 0x1
call sub_431e6f
add esi eax
push esi
push 0x2029
call sub_431e6f
add esp 0x10
jmp r-xdata
mov ecx eax
sub ecx 0x1
mov edx 0xff
je r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov edx 0xfe
jmp r-xdata
sub ecx 0x10
jne r-xdata
mov eax [ esp + 0x1c ]
cmp [ esp + 0x14 ] eax
jg r-xdata
mov edi [ esp + 0x14 ]
mov [ esi ] 0x2
inc esi
push esi
push edi
mov [ esp + 0x30 ] 0x1
call sub_431e6f
mov ecx [ esp + 0x24 ]
add esi eax
push esi
push ecx
call sub_431e6f
add esp 0x10
add esi eax
test [ esp + 0x40 ] 0x1
je r-xdata
test [ esp + 0x40 ] 0x1
je r-xdata
cmp eax 0xffffffef
jne r-xdata
mov [ esp + 0x1c ] 0x58
jmp r-xdata
mov edx [ esp + 0x24 ]
add ebx ecx
sub esi 0x1
mov [ esp + 0x68 ] edx
jns r-xdata
mov [ edi ] 0x7
jmp r-xdata
mov edi [ esp + 0x10 ]
movzx eax [ edi ]
sub [ esp + 0x48 ] 0x2
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edx 0xc3
sub ecx 0xf
jne r-xdata
mov [ esi ] 0x2
inc esi
push esi
push 0x100
mov [ esp + 0x30 ] 0x1
call sub_431e6f
add esi eax
push esi
push 0x167f
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x1681
call sub_431e6f
add esi eax
push esi
push 0x180d
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x180f
call sub_431e6f
add esi eax
push esi
push 0x1fff
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x200b
call sub_431e6f
add esi eax
push esi
push 0x202e
call sub_431e6f
add esi eax
mov [ esi ] 0x2
add esp 0x40
inc esi
push esi
push 0x2030
call sub_431e6f
add esi eax
push esi
push 0x205e
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2060
call sub_431e6f
add esi eax
push esi
push 0x2fff
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x3001
call sub_431e6f
add esi eax
push esi
push 0x7fffffff
call sub_431e6f
add esp 0x30
jmp r-xdata
or [ esp + eax + 0x80 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov eax [ esp + 0x40 ]
and eax 0x1
mov [ esp + 0x2c ] eax
lea esp [ esp ]
cmp edi 0x7f
jg r-xdata
cmp eax 0x7f
jle r-xdata
mov [ esp + 0x1c ] 0x52
mov ecx eax
sub ecx 0x1
mov edx 0xff
je r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
or [ esp + eax + 0x80 ] dl
inc eax
cmp eax 0x20
jl r-xdata
mov edx 0xdf
jmp r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jle r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ esp + 0x14 ]
movzx ecx [ eax + ecx ]
mov eax ecx
cdq
and edx 0x7
add eax edx
and ecx 0x7
mov dl 0x1
sar eax 0x3
shl dl cl
lea eax [ esp + eax + 0x80 ]
or [ eax ] dl
mov edi [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x7f
mov eax [ esp + 0x1c ]
mov [ esi ] 0x2
inc esi
push esi
push 0x100
mov [ esp + 0x30 ] 0x1
call sub_431e6f
add esi eax
push esi
push 0x2027
call sub_431e6f
add esi eax
mov [ esi ] 0x2
inc esi
push esi
push 0x2029
call sub_431e6f
add esi eax
push esi
push 0x7fffffff
call sub_431e6f
add esp 0x20
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax ecx
cdq
and edx 0x7
add eax edx
and ecx 0x7
mov dl 0x1
shl dl cl
sar eax 0x3
lea eax [ esp + eax + 0x80 ]
or [ eax ] dl
cmp [ esp + 0x2c ] 0x0
je r-xdata
jmp r-xdata
sub_45058d
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x18 ]
push edi
push ebx
push rw-data
call sub_4340b2
push esi
push rw-data
mov [ esp + 0x24 ] eax
mov edi esi
call sub_4421c1
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x20 ]
sub ecx 0x1
je r-xdata
push esi
call [ __import_lookup_table_10(USER32:GetParent) ]
mov edi eax
push edi
push rw-data
call sub_4421c1
cmp eax 0xffffffff
je r-xdata
sub ecx 0x1
je r-xdata
push esi
push ebp
push 0x133
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov al [ eax + 0x88 ]
cmp al 0x2
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub ecx 0x4
jne r-xdata
mov ecx [ esp + 0x1c ]
push edi
push ebp
push ecx
call sub_44a0ea
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
cmp al 0x3
je r-xdata
push esi
push ebp
push 0x134
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x1
je r-xdata
cmp eax 0xffffffff
je r-xdata
test al al
jne r-xdata
push esi
push ebp
push 0x138
push ebx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x12
jne r-xdata
cmp [ eax + 0x44 ] 0xffffffff
jne r-xdata
sub_450695
push ecx
mov edx [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ rw-data ]
push edi
mov edi [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x88 ] 0x13
je r-xdata
xor eax eax
pop ecx
retn 0xc
mov edx [ esp + 0x10 ]
push esi
push edx
lea esi [ eax + 0x20 ]
call sub_40df50
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov al [ esp + 0x18 ]
mov edx [ ecx ]
pop esi
mov [ edx + 0x90 ] al
mov eax 0x1
pop edi
pop ecx
retn 0xc
xor eax eax
pop edi
pop ecx
retn 0xc
sub_450705
sub esp 0x14
push ebx
mov ebx [ esp + 0x1c ]
push esi
mov esi [ rw-data ]
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x28 ] esi
jmp r-xdata
push ecx
lea eax [ esp + 0x2c ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
push edi
call sub_437bfd
test al al
je r-xdata
mov ecx [ esi ]
cmp [ ecx ] ebx
je r-xdata
lea edx [ esp + 0xc ]
push edx
call sub_447e59
push edi
lea esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
call sub_40df50
lea eax [ esp + 0xc ]
push eax
push rw-data
call sub_447dd5
mov ecx esi
call sub_402620
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x14
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x14
retn 0x8
push edi
call sub_437bfd
test al al
je r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_440eac
mov esi [ esp + 0x28 ]
jmp r-xdata
mov esi [ esi ]
push edi
add esi 0x4
call sub_40df50
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x14
retn 0x8
lea ecx [ esp + 0x28 ]
push ecx
push rw-data
call sub_447d93
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x14
retn 0x8
sub_4507e7
mov eax 0x202c
call sub_425210
mov eax [ esp + 0x2050 ]
push ebx
mov ebx [ esp + 0x2058 ]
push ebp
mov ebp [ esp + 0x2050 ]
push esi
mov esi [ esp + 0x2040 ]
push edi
or edi 0xffffffff
mov [ esp + 0x13 ] 0x0
cmp eax edi
jne r-xdata
or eax 0x10001
push eax
call sub_4491cb
cmp ebx 0xffffffff
jne r-xdata
mov eax 0xc
test bl 0x10
je r-xdata
mov ebx 0x220
cmp ebp 0xffffffff
jne r-xdata
mov [ esp + 0x13 ] 0x1
xor ebx 0x10
cmp [ esp + 0x205c ] 0xffffffff
jne r-xdata
mov ebp 0x96
mov ecx [ esp + 0x2048 ]
mov edx [ esp + 0x205c ]
push 0x0
push ecx
mov ecx [ esp + 0x205c ]
push edx
mov edx [ esp + 0x205c ]
push ebp
push ecx
push edx
push eax
mov eax [ esp + 0x205c ]
push r--data
push r--data
push ebx
push eax
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esp + 0x205c ] 0x96
cmp [ esp + 0x13 ] 0x0
mov ebp [ SendMessageW@IAT ]
je r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x202c
retn 0x28
mov ecx [ esi ]
push ebx
push 0x0
push 0x1036
push ecx
call ebp
mov edx [ esp + 0x2040 ]
cmp [ edx + 0x17c ] 0x0
je r-xdata
push 0x10
push 0x10
push 0x1036
push eax
call ebp
or ebx 0x10
mov edx [ esp + 0x204c ]
lea ecx [ esp + 0x38 ]
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x24 ] ecx
mov [ esp + 0x14 ] edx
mov edi edi
mov eax [ esi ]
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
or eax 0xffffffff
mov [ esi + 0x8c ] di
mov [ esi + 0x8e ] ax
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ esp + 0x38 ]
push edx
call sub_4112d5
mov ebx eax
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_411663
mov edx [ esi ]
add esp 0xc
lea ecx [ esp + 0x38 ]
push ecx
push 0x0
push 0x1057
push edx
call ebp
cmp eax 0x96
mov [ esp + 0x20 ] eax
jle r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x202c
retn 0x28
mov ecx 0x1
mov [ esi + 0x7e ] cx
mov edx [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
inc edi
push edi
push 0x1061
xor eax eax
push edx
mov [ esp + ebx * 2 + 0x48 ] ax
mov [ esp + 0x3c ] edi
call ebp
jmp r-xdata
mov [ esp + 0x20 ] 0x96
push rw-data
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x40 ]
push ecx
call sub_433a98
test al al
je r-xdata
sub_4509d1
mov eax [ esp + 0x20 ]
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ esp + 0x10 ]
xor bl bl
push edi
mov edi [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_4491cb
test eax 0x100
je r-xdata
mov eax 0x37
or ecx 0xffffffff
cmp [ esp + 0x34 ] ecx
jne r-xdata
xor eax 0x100
mov bl 0x1
cmp ebp ecx
jne r-xdata
mov [ esp + 0x34 ] 0x0
cmp [ esp + 0x2c ] ecx
jne r-xdata
mov ebp 0x96
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x2c ]
push 0x0
push ecx
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x2c ]
push ebp
push ecx
push edx
push eax
mov eax [ esp + 0x50 ]
push r--data
push r--data
push eax
push esi
call sub_43362d
mov [ edi ] eax
test eax eax
jne r-xdata
mov [ esp + 0x2c ] 0x96
cmp [ esi + 0x17c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x24
mov ecx [ edi ]
mov [ esi + 0x1a0 ] ecx
test bl bl
je r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx [ edi ]
push 0xfffffff0
push edx
mov [ edi + 0x88 ] 0x10
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
or eax 0x100
push eax
mov eax [ edi ]
push 0xfffffff0
push eax
call [ SetWindowLongW@IAT ]
or eax 0xffffffff
mov [ esi + 0x1a8 ] eax
mov [ esi + 0x1ac ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ esi + 0x1c ]
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x38 ]
push edx
push eax
push rw-data
call sub_44213b
mov ecx [ esp + 0x2c ]
mov ebp [ esp + 0x34 ]
push ecx
push ebp
call sub_441c1e
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x24
mov edx 0x1
mov [ edi + 0x7e ] dx
push ebx
push ebp
call sub_441c1e
sub_450b20
mov eax [ esp + 0x20 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
cmp [ esi + 0x17c ] 0x0
push edi
mov edi [ esp + 0x28 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x24
cmp eax 0xffffffff
jne r-xdata
or eax 0x4010000
push eax
call sub_4491cb
cmp [ esp + 0x34 ] 0xffffffff
jne r-xdata
xor eax eax
cmp edi 0xffffffff
jne r-xdata
mov [ esp + 0x34 ] 0x0
cmp ebx 0xffffffff
jne r-xdata
mov edi 0x96
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
push 0x1
push ecx
mov ecx [ esp + 0x28 ]
push ebx
push edi
push edx
mov edx [ esp + 0x48 ]
push ecx
push eax
push r--data
push r--data
push edx
push esi
call sub_43362d
mov [ ebp ] eax
test eax eax
jne r-xdata
mov ebx 0x96
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push 0x20
push ebx
push edi
push ecx
push edx
or edi 0xffffffff
push edi
push eax
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
mov eax [ ebp ]
mov [ esi + 0x17c ] eax
mov [ esi + 0x180 ] edi
mov [ esi + 0x184 ] edi
mov [ esi + 0x188 ] 0x0
mov [ esi + 0x18c ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x24
mov ecx 0x300
mov [ ebp + 0x7e ] cx
sub_450c09
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
test al 0xc
jne r-xdata
mov eax 0x4
or eax 0x2
push eax
call sub_4491cb
mov ecx [ esp + 0x18 ]
push 0x0
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push r--data
push 0x0
push ebx
call sub_43362d
mov esi eax
test esi esi
jne r-xdata
or eax 0x4
mov edx [ esp + 0x1c ]
push edx
call sub_413f97
add esp 0x4
call sub_4290f0
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
push eax
push rw-data
call sub_44213b
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x14
push esi
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
pop edi
pop esi
xor al al
pop ebx
retn 0x14
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ ebx ]
cmp ecx [ eax ]
jne r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0x3
jne r-xdata
mov [ edi ] esi
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov eax [ eax ]
push 0x0
push eax
push 0x469
mov [ edi + 0x30 ] eax
mov edi [ SendMessageW@IAT ]
push esi
call edi
push 0x80017fff
push 0x0
push 0x465
push esi
call edi
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x14
sub_450d00
mov eax [ esp + 0x20 ]
push ebx
push esi
mov esi [ esp + 0x2c ]
push edi
mov edi [ esp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_4491cb
mov ebx eax
cmp esi 0xffffffff
jne r-xdata
mov eax 0x1
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push 0x0
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push ebx
push 0x0
push r--data
push esi
push edx
call sub_43362d
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x405
push eax
call esi
test bl 0x1
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x24
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ edi ]
push 0x640000
push 0x0
push 0x406
push eax
call esi
mov ecx [ edi ]
push 0x0
push 0xa
push 0x414
push ecx
call esi
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x24
mov edx 0x1
mov [ edi + 0x7e ] dx
sub_450db4
mov eax [ esp + 0x20 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_4491cb
cmp edi 0xffffffff
jne r-xdata
xor eax eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
push 0x0
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x20 ]
push ecx
push eax
push 0x0
push r--data
push edi
push edx
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
xor edi edi
mov edi [ SendMessageW@IAT ]
push 0xff000000
push 0x0
push 0x2001
push eax
call edi
mov eax [ esi ]
push 0xff000000
push 0x0
push 0x409
push eax
call edi
mov ecx [ esi ]
push 0x0
push 0x0
push 0x402
push ecx
call edi
mov edx [ esi ]
push 0x640000
push 0x0
push 0x401
push edx
call edi
mov eax [ esi ]
push 0x0
push 0x1
push 0x404
push eax
call edi
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
retn 0x24
pop edi
mov al 0x1
pop esi
retn 0x24
mov ecx 0x1
mov [ esi + 0x7e ] cx
sub_450e7d
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ esp + 0x34 ]
push edi
mov edi [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xe
push eax
call sub_4491cb
cmp esi 0xffffffff
jne r-xdata
mov eax 0x100
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
push 0x0
push ecx
push 0x0
push 0x0
push ebp
push edx
push eax
push 0x0
push r--data
push esi
push ebx
call sub_43362d
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
or eax 0xffffffff
mov ecx 0x96
cmp [ esp + 0x2c ] eax
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
cmp [ esp + 0x30 ] eax
jne r-xdata
mov [ esp + 0x2c ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x30 ] ecx
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push eax
push edi
call sub_4334ca
test eax eax
je r-xdata
mov eax 0x300
mov [ edi + 0x7e ] ax
mov edx [ edi ]
push edx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x24 ]
push 0x0
push ecx
mov ecx [ edi ]
push edx
push ebp
push eax
push ecx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
push 0x0
call [ CreateCompatibleDC@IAT ]
mov edx [ edi ]
push 0x0
push 0x0
push 0x173
push edx
mov esi eax
call [ SendMessageW@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
push 0x0
push 0x0
push esi
call [ GetPixel@IAT ]
push esi
mov edi eax
call [ DeleteDC@IAT ]
mov eax [ ebx ]
push 0xffffffec
push eax
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x80000
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov ecx [ ebx ]
push 0x1
push 0x0
push edi
push ecx
call [ __import_lookup_table_10(USER32:SetLayeredWindowAttributes) ]
sub_450fb3
mov eax [ esp + 0x24 ]
sub esp 0x24
push ebx
mov ebx [ esp + 0x48 ]
push ebp
mov ebp [ esp + 0x54 ]
push esi
mov esi [ esp + 0x38 ]
push edi
mov edi [ esp + 0x50 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_4491cb
cmp ebp 0xffffffff
jne r-xdata
xor eax eax
cmp edi 0xffffffff
jne r-xdata
mov ebp 0x200
cmp ebx 0xffffffff
jne r-xdata
xor edi edi
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x4c ]
push 0x1
push ecx
mov ecx [ esp + 0x50 ]
push ebx
push edi
push edx
mov edx [ esp + 0x4c ]
push ecx
push eax
push 0x0
push r--data
push ebp
push edx
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
xor ebx ebx
test edi edi
mov edi [ SendMessageW@IAT ]
je r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x28
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x1009
push eax
call edi
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x4c ]
push 0x4
push edx
mov edx [ esp + 0x50 ]
push eax
mov eax [ esi ]
push ecx
push edx
push 0x0
push eax
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x24
retn 0x28
mov edx 0x300
mov [ esi + 0x7e ] dx
mov edx [ esp + 0x44 ]
push 0x1
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
push edx
call sub_435a35
mov ecx [ esi ]
add esp 0x10
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x1002
push ecx
call edi
cmp [ rw-data ] 0x0
jne r-xdata
sub_4510b3
mov eax [ esp + 0x24 ]
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x3c ]
push esi
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x4c ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_4491cb
mov ebx eax
cmp edi 0xffffffff
jne r-xdata
mov eax 0x4
cmp [ esp + 0x40 ] 0xffffffff
jne r-xdata
mov edi 0x200
cmp ebp 0xffffffff
jne r-xdata
mov [ esp + 0x40 ] 0xc8
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
push 0x1
push eax
mov eax [ esp + 0x40 ]
push ebp
push ecx
mov ecx [ esp + 0x38 ]
push edx
push eax
push ebx
push 0x0
push r--data
push edi
push ecx
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
mov ebp 0x14
and bl 0x8
cmp bl 0x8
setne al
push 0x1
lea edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x3c ]
push edx
push eax
call sub_435a35
mov edx [ esi ]
add esp 0x10
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x1002
push edx
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x28
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x14
retn 0x28
mov eax 0x200
mov [ esi + 0x7e ] ax
sub_451191
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x30 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10001
push eax
call sub_4491cb
cmp ebp 0xffffffff
jne r-xdata
mov eax 0xa00002
cmp ebx 0xffffffff
jne r-xdata
mov ebp 0x200
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push edi
push ebx
push edx
mov edx [ esp + 0x28 ]
push ecx
push eax
push 0x0
push r--data
push ebp
push edx
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi 0x96
mov ecx [ esp + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
cmp [ rw-data ] 0x0
jne r-xdata
mov ebp [ SendMessageW@IAT ]
push ecx
push 0x0
push 0x180
push eax
call ebp
mov eax [ esi ]
push 0x0
push 0x0
push 0x186
push eax
call ebp
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov ecx [ esi ]
push 0x0
push edi
push ebx
push edx
push eax
push ecx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov ecx 0x1
mov [ esi + 0x7e ] cx
sub_45126c
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x24 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x34 ]
push edi
mov edi [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_4491cb
cmp esi 0xffffffff
jne r-xdata
mov eax 0x200042
cmp ebp 0xffffffff
jne r-xdata
mov esi 0x200
cmp ebx 0xffffffff
jne r-xdata
mov ebp 0xc8
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push ebx
push ebp
push edx
mov edx [ esp + 0x28 ]
push ecx
push eax
push 0x0
push r--data
push esi
push edx
call sub_43362d
mov [ edi ] eax
test eax eax
jne r-xdata
mov ebx 0x96
mov ecx [ esp + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ SendMessageW@IAT ]
push ecx
push 0x0
push 0x143
push eax
call esi
mov eax [ edi ]
push 0x0
push 0x0
push 0x14e
push eax
call esi
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov ecx 0x200
mov [ edi + 0x7e ] cx
sub_451330
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x9
push eax
call sub_4491cb
cmp [ esi + 0x69 ] 0x0
jne r-xdata
xor eax eax
cmp edi 0xffffffff
jne r-xdata
or eax 0x10000
mov [ esi + 0x69 ] 0x1
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
push 0x1
push ecx
mov ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x30 ]
push ecx
push eax
push edx
push r--data
push edi
push esi
call sub_43362d
mov [ ebx ] eax
test eax eax
jne r-xdata
xor edi edi
push 0x12
call [ GetSysColor@IAT ]
mov [ ebx + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x28
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x28
mov eax 0x200
mov [ ebx + 0x7e ] ax
sub_4513c9
mov eax [ esp + 0x24 ]
push esi
mov esi [ esp + 0x2c ]
push edi
mov edi [ esp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
test al 0x7
jne r-xdata
mov eax 0x3
or eax 0x10000
push eax
call sub_4491cb
cmp esi 0xffffffff
jne r-xdata
or eax 0x3
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x2c ]
push ecx
push eax
mov eax [ esp + 0x28 ]
push edx
push r--data
push esi
push eax
call sub_43362d
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
push 0x12
call [ GetSysColor@IAT ]
mov [ edi + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
retn 0x28
pop edi
mov al 0x1
pop esi
retn 0x28
mov ecx 0x200
mov [ edi + 0x7e ] cx
sub_45145c
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x34 ]
push edi
mov edi [ esp + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x20007
push eax
call sub_4491cb
cmp esi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
xor esi esi
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push edi
push ebx
push edx
mov edx [ esp + 0x34 ]
push ecx
push eax
mov eax [ esp + 0x30 ]
push edx
push r--data
push esi
push eax
call sub_43362d
mov [ ebp ] eax
test eax eax
jne r-xdata
mov edi 0x96
push 0x12
call [ GetSysColor@IAT ]
mov [ ebp + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov ecx 0x1
mov [ ebp + 0x7e ] cx
sub_451500
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x34 ]
push edi
mov edi [ esp + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
test eax 0x800
je r-xdata
mov eax 0x80
or eax 0x10000
and eax 0xfffffffb
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov esi 0x200
push eax
call sub_4491cb
cmp esi 0xffffffff
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push edi
push ebx
push edx
mov edx [ esp + 0x34 ]
push ecx
push eax
mov eax [ esp + 0x30 ]
push edx
push r--data
push esi
push eax
call sub_43362d
mov [ ebp ] eax
test eax eax
jne r-xdata
mov edi 0x14
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov ecx 0x200
mov [ ebp + 0x7e ] cx
sub_4515ab
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x30 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
test eax 0x800
je r-xdata
mov eax 0x3010c0
or eax 0x10004
or eax 0x4
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov ebp 0x200
push eax
call sub_4491cb
cmp ebp 0xffffffff
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov ebx 0xc8
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push edi
push ebx
push edx
mov edx [ esp + 0x34 ]
push ecx
push eax
mov eax [ esp + 0x30 ]
push edx
push r--data
push ebp
push eax
call sub_43362d
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi 0x96
push eax
call [ GetWindowTextLengthW@IAT ]
mov ecx [ esi ]
push eax
push eax
push 0xb1
push ecx
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov edx 0x1
mov [ esi + 0x7e ] dx
sub_451670
mov eax [ esp + 0x24 ]
push esi
mov esi [ esp + 0x2c ]
push edi
mov edi [ esp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x100
push eax
call sub_4491cb
cmp esi 0xffffffff
jne r-xdata
xor eax eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x28 ]
push 0x1
push ecx
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x2c ]
push ecx
push eax
mov eax [ esp + 0x28 ]
push edx
push r--data
push esi
push eax
call sub_43362d
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
push 0x12
call [ GetSysColor@IAT ]
mov [ edi + 0x48 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
xor al al
pop esi
retn 0x28
pop edi
mov al 0x1
pop esi
retn 0x28
mov ecx 0x1
mov [ edi + 0x7e ] cx
sub_4516f9
mov eax [ esp + 0x24 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x34 ]
xor bl bl
push edi
mov edi [ esp + 0x1c ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_4491cb
test al 0x1
je r-xdata
xor eax eax
cmp esi 0xffffffff
jne r-xdata
mov bl 0x1
xor eax 0x1
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push 0x1
push edi
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x34 ]
push ecx
push edx
push eax
mov eax [ esp + 0x3c ]
push eax
push r--data
push esi
push ebp
call sub_43362d
mov esi [ esp + 0x18 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov esi 0x100
test bl bl
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x28
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp ]
push 0x0
push edi
push 0x401
push ecx
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x28
mov edx 0x300
mov [ esi + 0x7e ] dx
sub_4517a1
push ecx
mov edx [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
push esi
push eax
mov eax [ edx + ecx * 4 ]
mov esi [ eax ]
add esi 0x10
call sub_40df50
mov eax 0x1
pop esi
pop ecx
retn 0x8
xor eax eax
pop ecx
retn 0x8
sub_4517ec
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
pop esi
retn 0xc
lea ecx [ esi + 0xd ]
cmp ecx 0xd
ja r-xdata
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ rw-data ]
push edx
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
shl esi 0x4
lea esi [ eax + esi + 0x15c ]
call sub_40df50
mov eax 0x1
pop esi
retn 0xc
sub_45184b
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
push edi
mov edi [ esp + 0x2c ]
lea esi [ esp + 0x10 ]
call sub_401b70
mov edx [ esp + 0x24 ]
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ esp + 0x2c ]
mov ecx [ rw-data ]
mov edi [ edx ]
mov edx [ ecx + eax * 4 ]
mov ebx [ edx ]
test [ ebx + 0x89 ] 0x1
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x1c
fld [ r--data ]
fld [ esp + 0x38 ]
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fmul [ r--data ]
call sub_4290f0
mov eax [ edi + 0x7c ]
fstp st0
jmp r-xdata
cmp ebp 0xffffffff
jne r-xdata
mov ecx [ edi + 0x80 ]
mov [ esp + 0x28 ] ecx
cmp [ esp + 0x28 ] 0xffffffff
mov [ esp + 0x30 ] eax
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_437bfd
test al al
je r-xdata
mov ebp [ edi + 0x84 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
push 0x1
push ecx
push ebp
push edx
push eax
lea ecx [ esp + 0x24 ]
push ecx
push ebx
push edi
call sub_441561
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn 0x1c
lea eax [ edi + 0x6c ]
push eax
lea esi [ esp + 0x14 ]
call sub_40df50
sub_451954
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
fld [ r--data ]
mov ecx [ rw-data ]
fld [ esp + 0x20 ]
mov edx [ ecx + eax * 4 ]
fucom st1
push edi
mov edi [ edx ]
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
pop esi
xor eax eax
pop ebx
retn 0x1c
cmp eax 0xffffffff
jne r-xdata
fstp st0
fmul [ r--data ]
call sub_4290f0
mov [ edi + 0x7c ] eax
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
mov [ edi + 0x80 ] esi
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0x14 ]
push eax
lea esi [ edi + 0x6c ]
call sub_40df50
mov ecx [ esp + 0x1c ]
mov [ edi + 0x88 ] ecx
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x1c
mov [ edi + 0x84 ] ebx
sub_4519f4
push ebx
mov ebx [ esp + 0xc ]
mov eax [ ebx ]
push esi
push edi
mov edi [ esp + 0x10 ]
lea ecx [ ebx + 0x4 ]
push ecx
lea esi [ edi + 0x4 ]
mov [ edi ] eax
call sub_40df50
mov edx [ ebx + 0x14 ]
mov [ edi + 0x14 ] edx
mov eax [ ebx + 0x18 ]
mov [ edi + 0x18 ] eax
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_451a2f
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2c ] 0x0
push edi
lea edi [ eax + 0x2c ]
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0x30 ]
mov ecx [ esp + 0xc ]
push esi
mov esi [ eax ]
push esi
push ecx
call sub_4519f4
push edi
call sub_437294
test esi esi
je r-xdata
xor al al
pop edi
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
pop esi
mov [ rw-data ] 0x0
mov al 0x1
pop edi
retn 0x8
push esi
call sub_447ce0
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x64
jge r-xdata
inc [ rw-data ]
push 0x0
call [ Sleep@IAT ]
xor al al
pop edi
retn 0x8
sub_451aa9
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
push 0x24
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_447e59
mov edi eax
jmp r-xdata
mov eax ebp
shl eax 0x4
lea ecx [ eax + ebx + 0x15c ]
push ecx
lea esi [ edi + 0x4 ]
mov [ esp + 0x20 ] edi
call sub_40df50
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ edi ] ebp
mov edx [ ebx ]
mov [ edi + 0x14 ] edx
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x1c ] eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
push edx
add eax 0x2c
push eax
mov [ edi + 0x20 ] ecx
call sub_4333fe
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
sub_451b1d
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebp + 0x1b8 ]
push edi
xor edi edi
cmp eax edi
mov ebx ecx
jle r-xdata
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x1c ]
push eax
push ecx
push ebx
call sub_44213b
test al al
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ecx
push ebp
push eax
mov [ ebp + 0x1b8 ] edi
call sub_413762
add esp 0x4
push eax
mov ecx ebx
call sub_451b1d
pop edi
pop ebp
pop ebx
pop ecx
retn 0x14
push 0x24
call sub_41171a
add esp 0x4
cmp eax edi
je r-xdata
mov edx [ ebx + 0x74 ]
mov eax [ esp + 0xc ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
push esi
add edx 0x10
push edx
lea esi [ edi + 0x4 ]
mov [ esp + 0x20 ] edi
call sub_40df50
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov [ edi ] eax
mov ecx [ ebp ]
mov eax [ esp + 0x24 ]
mov [ edi + 0x14 ] ecx
mov ecx [ esp + 0x28 ]
mov [ edi + 0x18 ] edx
lea edx [ esp + 0x1c ]
push edx
add ebx 0x2c
mov [ edi + 0x1c ] eax
push ebx
mov [ edi + 0x20 ] ecx
call sub_4333fe
pop esi
push eax
call sub_447e59
mov edi eax
sub_451bdd
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ edi + 0x68 ]
call sub_4092c0
lea ecx [ edi + 0x50 ]
call sub_402620
lea ecx [ edi + 0x20 ]
call sub_402620
lea ecx [ edi + 0x10 ]
call sub_402620
pop edi
pop esi
retn 0x4
sub_451c22
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x74 ]
push edi
lea edi [ ebx * 4 ]
mov ecx [ edi + eax ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x74 ]
mov eax [ edi + edx ]
mov [ eax ] 0x0
dec [ esi + 0x80 ]
cmp ebx [ esi + 0x84 ]
jne r-xdata
push eax
call sub_451c08
cmp [ esi + 0x78 ] 0x3
jbe r-xdata
cmp ebx 0x3
mov ecx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
lea edi [ esi + 0x70 ]
nop
mov [ esi + 0x84 ] ecx
mov eax [ esi + 0x74 ]
add eax edi
lea ebx [ ebx ]
push edi
call sub_4333e4
cmp [ esi + 0x78 ] 0x3
ja r-xdata
dec ecx
sub eax 0x4
cmp ecx 0x3
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx ] 0x0
jne r-xdata
sub_451cb3
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
xor ebx ebx
or edi 0xffffffff
lea ecx [ esi + 0x10 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_40c060
lea ecx [ esi + 0x20 ]
call sub_40c060
lea ecx [ esi + 0x50 ]
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] ebx
call sub_40c060
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x70 ] 0x1
mov [ esi + 0x7c ] di
mov [ esi + 0x80 ] di
mov [ esi + 0x82 ] di
mov [ esi + 0x84 ] di
mov [ esi + 0x86 ] di
mov [ esi + 0x94 ] edi
pop edi
mov [ esi + 0x78 ] ebx
mov [ esi + 0x90 ] bl
mov [ esi + 0x8b ] 0xff
mov eax esi
pop esi
pop ebx
retn 0x4
sub_451d4b
sub esp 0x124
push esi
mov esi [ esp + 0x130 ]
push edi
mov edi [ esp + 0x138 ]
test edi edi
jne r-xdata
mov ecx [ esp + 0x130 ]
lea eax [ esp + 0x8 ]
push eax
push ecx
call sub_44a591
lea edx [ esp + 0x8 ]
push edx
push edi
lea eax [ esp + 0x34 ]
push 0x80
push eax
call sub_41608c
add esp 0x10
test eax eax
jne r-xdata
mov edi r--data
call sub_401b70
pop edi
mov eax esi
pop esi
add esp 0x124
retn 0xc
lea edi [ esp + 0x2c ]
call sub_401b70
pop edi
mov eax esi
pop esi
add esp 0x124
retn 0xc
xor ecx ecx
mov [ esp + 0x2c ] cx
sub_451dc7
mov ecx [ esp + 0x4 ]
sub esp 0x24
lea eax [ esp ]
push eax
push ecx
call sub_44a591
test eax eax
je r-xdata
xor eax eax
add esp 0x24
retn 0x4
mov eax [ eax + 0x18 ]
inc eax
add esp 0x24
retn 0x4
sub_451dee
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
test ebx ebx
jne r-xdata
push edi
push ebx
call sub_4137e0
add esp 0x4
mov edi eax
push esi
mov [ esi + 0x4 ] edi
call sub_437ba7
test al al
je r-xdata
push esi
call sub_44c8f6
pop esi
pop ebx
retn 0x8
push edi
push esi
call sub_44c927
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_437bb9
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
inc ecx
push ecx
push ebx
push edx
call sub_410f70
add esp 0xc
pop edi
pop esi
pop ebx
retn 0x8
sub_451e63
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_44ae3a
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
retn 0x8
mov [ esi + 0x4 ] ecx
sub_451ebf
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
inc [ eax ]
movzx edx [ edi + 0x30 ]
mov [ esi + 0x30 ] dl
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x40 ] eax
inc [ eax ]
lea eax [ edi + 0x44 ]
push eax
lea ecx [ esi + 0x44 ]
push ecx
call sub_442763
mov edx [ edi + 0x54 ]
lea eax [ edi + 0x58 ]
push eax
lea ecx [ esi + 0x58 ]
push ecx
mov [ esi + 0x54 ] edx
call sub_44acca
movzx edx [ edi + 0xd0 ]
mov [ esi + 0xd0 ] dl
mov eax [ edi + 0xd4 ]
mov [ esi + 0xd4 ] eax
mov ecx [ edi + 0xd8 ]
mov [ esi + 0xd8 ] ecx
movzx edx [ edi + 0xdc ]
pop edi
mov [ esi + 0xdc ] dl
mov eax esi
pop esi
retn 0x8
sub_451fa1
push esi
mov esi [ esp + 0x8 ]
push 0xe0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
push eax
call sub_451ebf
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
sub_451ffc
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_451fe2
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
retn 0x8
mov [ esi + 0x4 ] ecx
sub_45203e
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax + 0x8 ]
push eax
mov [ esi + 0x4 ] ecx
call sub_451fe2
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
dec [ esi + 0x8 ]
mov [ esi ] 0x0
mov [ eax + 0x4 ] 0x0
dec [ esi + 0x8 ]
pop esi
retn 0x4
sub_452078
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
push edi
mov edi [ esp + 0x10 ]
push 0xc
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_451fa1
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
inc [ esi + 0x8 ]
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
inc [ esi + 0x8 ]
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
push eax
call sub_451fa1
inc [ esi + 0x8 ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_4520fc
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0xd4 ]
push eax
call sub_442c34
test al al
je r-xdata
xor eax eax
pop esi
retn 0x4
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
sub_452126
sub esp 0x27c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x290 ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x20 ] ecx
call sub_401b70
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
inc [ eax ]
mov [ esp + 0x34 ] eax
mov edi r--data
mov eax esi
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] edx
call sub_40d330
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x38 ]
push eax
push ecx
mov bl 0x1
call [ FindFirstFileW@IAT ]
mov [ esp + 0x24 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x24 ]
push eax
call [ FindClose@IAT ]
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0x27c
retn 0x18
mov ebp [ esp + 0x29c ]
xor bl bl
cmp eax 0xb
jne r-xdata
lea eax [ esp + 0x64 ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x38 ]
push ecx
push edx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x64 ]
push r--data
push ecx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
push edx
call sub_443009
cmp eax 0x1
je r-xdata
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
lea esi [ esp + 0x14 ]
call sub_40df50
lea edi [ esp + 0x64 ]
mov eax esi
call sub_40d330
test [ esp + 0x38 ] 0x10
je r-xdata
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x54 ]
xor edx edx
xor esi esi
or edx eax
mov eax [ esp + 0x294 ]
or ecx esi
add [ eax ] edx
adc [ eax + 0x4 ] ecx
cmp [ esp + 0x2a0 ] 0x0
je r-xdata
cmp [ esp + 0x2a0 ] 0x0
je r-xdata
mov eax [ esp + 0x298 ]
add [ eax ] 0x1
adc [ eax + 0x4 ] esi
cmp [ esp + 0x2a4 ] 0x0
je r-xdata
add [ ebp ] 0x1
adc [ ebp + 0x4 ] 0x0
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov eax [ esp + 0x2a4 ]
mov ecx [ esp + 0x2a0 ]
mov edx [ esp + 0x298 ]
push eax
mov eax [ esp + 0x298 ]
push ecx
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
mov ecx [ esp + 0x38 ]
call sub_452126
mov bl al
test bl bl
je r-xdata
jmp r-xdata
sub_4523a4
push esi
mov esi [ esp + 0x8 ]
xor eax eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x1
mov [ esi + 0x14 ] eax
call sub_40c060
lea ecx [ esi + 0x38 ]
call sub_40c060
mov eax esi
pop esi
retn 0x4
sub_4523ce
sub esp 0x430
push ebx
push ebp
push esi
mov esi [ esp + 0x440 ]
push edi
xor ebp ebp
pop edi
pop esi
pop ebp
mov eax 0x6
pop ebx
add esp 0x430
retn 0xc
mov ecx [ esi ]
push ecx
push 0x1
lea edx [ esp + 0x18 ]
push 0x4
push edx
inc ebp
call sub_4151b0
mov edi [ esp + 0x20 ]
mov eax [ esi ]
push eax
xor edi 0x23daa985
lea ebx [ edi + edi ]
push ebx
lea ecx [ esp + 0x38 ]
push 0x1
push ecx
call sub_4151b0
add esp 0x20
add edi 0x60aa51b5
push edi
push ebx
lea edx [ esp + 0x28 ]
push edx
call sub_44afdc
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x234 ]
xor eax eax
push edx
mov [ esp + ebx + 0x28 ] ax
call sub_411691
mov eax [ esi ]
push eax
push 0x1
lea ecx [ esp + 0x20 ]
push 0x4
push ecx
call sub_4151b0
mov edi [ esp + 0x28 ]
mov edx [ esi ]
push edx
xor edi 0xd591d0b1
lea ebx [ edi + edi ]
push ebx
lea eax [ esp + 0x40 ]
push 0x1
push eax
call sub_4151b0
add esp 0x28
add edi 0xf2953f86
push edi
push ebx
lea ecx [ esp + 0x28 ]
push ecx
call sub_44afdc
mov ecx [ esp + 0x44c ]
lea eax [ esp + 0x20 ]
push eax
xor edx edx
push ecx
mov [ esp + ebx + 0x28 ] dx
call sub_411691
mov edi [ esp + 0x450 ]
lea edx [ esp + 0x238 ]
push edi
push edx
call sub_4133e4
add esp 0x10
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x430
retn 0xc
push r--data
push edi
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x1
push 0x1
push eax
call sub_41557c
mov ecx [ esi ]
add esp 0xc
push ecx
push 0x1
lea edx [ esp + 0x24 ]
push 0x4
push edx
call sub_4151b0
mov eax [ esp + 0x2c ]
xor eax 0x87bc
mov [ esp + 0x2c ] eax
add eax 0x18
push 0x1
push eax
mov eax [ esi ]
push eax
call sub_41557c
add esp 0x1c
jmp r-xdata
test ebp ebp
je r-xdata
mov eax [ esi ]
push eax
push 0x4
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call sub_4151b0
add esp 0x10
push 0xbe821f7e
push 0x4
lea edx [ esp + 0x1c ]
push edx
call sub_44afdc
lea eax [ esp + 0x14 ]
push r--data
push eax
mov [ esp + 0x20 ] 0x0
call sub_4151d0
add esp 0x8
test eax eax
jne r-xdata
sub_452574
sub esp 0x694
push ebx
xor ebx ebx
push ebp
mov ebp [ esp + 0x6ac ]
push esi
mov esi [ esp + 0x6a4 ]
mov edx [ esi + 0x4 ]
push edi
xor eax eax
push ebx
mov [ esp + 0x50 ] ax
mov eax [ esi ]
push edx
xor ecx ecx
push eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x262 ] cx
mov [ esp + 0x488 ] ebx
mov [ esp + 0x2c ] 0x1
call sub_41557c
mov edx [ esp + 0x6b8 ]
add esp 0xc
lea ecx [ esp + 0x490 ]
push ecx
push edx
push esi
call sub_4523ce
test eax eax
je r-xdata
mov eax [ esi ]
push eax
push 0x1
lea ecx [ esp + 0x1f ]
push 0x1
push ecx
call sub_4151b0
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x30 ]
push 0x4
push eax
call sub_4151b0
mov ecx [ esi ]
mov edi [ esp + 0x38 ]
push ecx
push 0x1
lea edx [ esp + 0x40 ]
push 0x4
push edx
xor edi 0x87bc
call sub_4151b0
mov ecx [ esi ]
mov eax [ esp + 0x48 ]
push ecx
push 0x1
lea edx [ esp + 0x50 ]
xor eax 0x87bc
push 0x4
push edx
mov [ ebp ] eax
call sub_4151b0
mov eax [ esp + 0x58 ]
add esp 0x40
xor eax 0xa685
push 0x1
mov [ esp + 0x28 ] eax
mov eax [ esi ]
push 0x10
push eax
call sub_41557c
mov ecx [ ebp ]
add esp 0xc
push ecx
call sub_4138ba
add esp 0x4
push edi
mov [ esp + 0x20 ] eax
call sub_4138ba
mov edx [ esi ]
add esp 0x4
push edx
push 0x1
mov ebp eax
push edi
push ebp
call sub_4151b0
mov eax [ esi + 0x8 ]
add esp 0x10
add eax 0x987bf21a
push eax
push edi
push ebp
call sub_44afdc
push edi
push ebp
lea ecx [ esp + 0x28 ]
push ecx
call sub_43535d
mov edx [ esp + 0x24 ]
cmp edx [ esp + 0x20 ]
je r-xdata
lea eax [ ebx + 0x6 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x694
retn 0x10
cmp [ esp + 0x17 ] 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_413a88
add esp 0x4
push ebp
call sub_413a88
add esp 0x4
mov eax 0xa
pop edi
pop esi
pop ebp
pop ebx
add esp 0x694
retn 0x10
mov edx [ esp + 0x1c ]
push edx
call sub_413a88
mov [ esp + 0x20 ] ebp
xor ecx ecx
mov eax 0x1
mov [ esp + 0x4c ] cx
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x28 ]
xor edx edx
push ecx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x25a ] dx
mov [ esp + 0x480 ] ebx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] eax
call sub_44b195
push ebp
call sub_413a88
jmp r-xdata
mov eax [ esp + 0x6b4 ]
mov ecx [ esp + 0x20 ]
add esp 0x4
pop edi
pop esi
pop ebp
mov [ eax ] ecx
xor eax eax
pop ebx
add esp 0x694
retn 0x10
sub_452788
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x111bc
call sub_425210
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea edx [ esp + 0x6b8 ]
xor eax eax
xor ecx ecx
push edx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ax
mov [ esp + 0x272 ] cx
mov [ esp + 0x498 ] ebx
call sub_4431e0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push ebx
push eax
push ecx
mov [ esp + 0x2c ] 0x1
call sub_41557c
add esp 0xc
push r--data
push edi
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0xba8 ]
push ecx
push edi
push esi
call sub_4523ce
test eax eax
jne r-xdata
lea edx [ esp + 0xba8 ]
push edx
push edi
push esi
call sub_4523ce
test eax eax
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x17 ]
push 0x1
push eax
call sub_4151b0
mov ecx [ esi ]
push ecx
push 0x1
lea edx [ esp + 0x28 ]
push 0x4
push edx
call sub_4151b0
mov eax [ esi ]
mov edi [ esp + 0x30 ]
push eax
push 0x1
lea ecx [ esp + 0x38 ]
push 0x4
xor edi 0x87bc
push ecx
mov [ esp + 0x44 ] edi
call sub_4151b0
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x48 ]
push 0x4
push eax
call sub_4151b0
mov ecx [ esi ]
mov eax [ esp + 0x50 ]
add esp 0x40
push ecx
push 0x1
lea edx [ esp + 0x3c ]
xor eax 0xa685
push 0x4
push edx
mov [ esp + 0x38 ] eax
call sub_4151b0
mov eax [ esi ]
push eax
push 0x1
lea ecx [ esp + 0x48 ]
push 0x4
push ecx
call sub_4151b0
mov edx [ esi ]
push edx
push 0x1
lea eax [ esp + 0x64 ]
push 0x4
push eax
call sub_4151b0
mov ecx [ esi ]
push ecx
push 0x1
lea edx [ esp + 0x70 ]
push 0x4
push edx
call sub_4151b0
add esp 0x40
lea eax [ esp + 0x4a8 ]
push eax
call sub_434fa9
lea ecx [ esp + 0x4a8 ]
push r--data
push ecx
call sub_414e06
add esp 0x8
mov [ esp + 0x18 ] eax
cmp eax ebx
jne r-xdata
lea eax [ esp + 0x9a0 ]
push eax
lea ecx [ esp + 0xdbc ]
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esp + 0xfc8 ]
push edx
lea eax [ esp + 0x34 ]
push eax
push ecx
call sub_413db0
add esp 0x14
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x794 ]
push eax
call sub_411691
lea ecx [ esp + 0xfc8 ]
push ecx
lea edx [ esp + 0x79c ]
push edx
call sub_411663
lea eax [ esp + 0x9b0 ]
push eax
lea ecx [ esp + 0xdcc ]
push ecx
lea edx [ esp + 0xfd8 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0xbc8 ]
push ecx
call sub_413db0
add esp 0x24
lea edx [ esp + 0xdb8 ]
push edx
lea eax [ esp + 0x794 ]
push eax
call sub_411663
lea ecx [ esp + 0x9a8 ]
push ecx
lea edx [ esp + 0x79c ]
push edx
call sub_411663
lea eax [ esp + 0x7a0 ]
add esp 0x10
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
add edx 0x987bf21a
push edx
lea eax [ esp + 0x6bc ]
push eax
call sub_44313a
xor eax eax
cmp edi ebx
jle r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esp + 0x18 ]
push ecx
call sub_414e94
mov edx [ esp + 0x24 ]
add esp 0x4
cmp [ esp + 0x28 ] edx
je r-xdata
jmp r-xdata
cmp [ esp + 0xf ] 0x1
jne r-xdata
lea eax [ esp + 0x4a8 ]
push eax
call [ DeleteFileW@IAT ]
mov eax 0xa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ eax + 0x10000 ]
cmp ecx edi
jle r-xdata
mov eax [ ebp + 0x10 ]
push ebx
push eax
lea ecx [ esp + 0x4b0 ]
push ecx
call [ __import_lookup_table_0(KERNEL32:CopyFileW) ]
test eax eax
jne r-xdata
xor ecx ecx
lea eax [ esp + 0x4a8 ]
mov [ esp + 0x64 ] cx
push eax
lea ecx [ esp + 0x68 ]
xor edx edx
push ecx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x276 ] dx
mov [ esp + 0x49c ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
call sub_411691
mov edx [ ebp + 0x10 ]
push edx
lea eax [ esp + 0x27a ]
push eax
call sub_411691
add esp 0x10
lea ecx [ esp + 0x40 ]
push ecx
call sub_44b195
test eax eax
je r-xdata
mov edi 0x10000
sub edi eax
jmp r-xdata
lea eax [ esp + 0x4a8 ]
push eax
call [ DeleteFileW@IAT ]
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push eax
call sub_434f66
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x4a8 ]
push edx
call [ DeleteFileW@IAT ]
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x4a8 ]
push edx
call [ DeleteFileW@IAT ]
mov eax 0xb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
lea edx [ esp + 0x11cc ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_43535d
mov ecx [ esp + 0x18 ]
push ecx
push edi
lea edx [ esp + 0x11d0 ]
push 0x1
push edx
call sub_4146ce
mov eax [ esp + 0x24 ]
add esp 0x10
cmp [ esp + 0x24 ] eax
jl r-xdata
lea ecx [ esp + 0x6b8 ]
push ecx
call sub_4431b2
mov ecx [ esp + 0x1c ]
xor [ esp + ecx + 0x11c8 ] al
inc ecx
cmp ecx edi
mov [ esp + 0x1c ] ecx
jl r-xdata
mov edx [ esi ]
push edx
add eax edi
push edi
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x11d0 ]
push 0x1
push eax
call sub_4151b0
add esp 0x10
cmp edi ebx
mov [ esp + 0x1c ] ebx
jle r-xdata
mov edi eax
mov eax [ esp + 0x24 ]
sub_452bcc
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
cmp [ esi + 0x8 ] 0x3
je r-xdata
pop esi
add esp 0x8
retn 0x4
mov ecx esi
call sub_40be90
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
sub_452bfe
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
dec eax
push edi
mov edi [ esp + 0x1c ]
cmp eax 0xa
ja r-xdata
call sub_4041d0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
movzx eax [ eax + lookup_table_452d4a ]
jmp [ eax * 4 + jump_table_452d32 ]
mov eax [ edi + 0x8 ]
cmp eax 0x1
jne r-xdata
push esi
call sub_452bcc
mov ecx edi
call sub_40be90
fsubr [ esi ]
fstp [ esi ]
call sub_4041d0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x8 ] 0x1
mov ebx [ esi ]
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ esi ]
mov eax [ edi ]
mov edi ecx
sub edi eax
cdq
mov ebp eax
mov eax edx
mov [ esp + 0x1c ] eax
mov eax ecx
cdq
mov ecx eax
sub ecx ebp
mov ebp [ esp + 0x1c ]
mov ebx edx
mov eax edi
cdq
sbb ebx ebp
cmp eax ecx
jne r-xdata
push edi
call sub_443576
sub [ esi ] eax
sbb [ esi + 0x4 ] edx
call sub_4041d0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
cmp eax 0x2
jne r-xdata
push edi
call sub_443576
sub ebx eax
mov [ esi ] ebx
mov ecx edi
call sub_40c760
sub ebx eax
mov [ esi ] ebx
call sub_4041d0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov eax [ esi ]
cdq
sub eax [ edi ]
sbb edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] 0x2
call sub_4041d0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov [ esi + 0x8 ] 0x2
mov [ esi ] ecx
mov [ esi + 0x4 ] ebx
call sub_4041d0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
cmp edx ebx
je r-xdata
mov [ esi ] edi
call sub_4041d0
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_452d55
push esi
mov esi [ esp + 0x8 ]
call sub_4092c0
push 0x18
mov [ esi + 0x8 ] 0xa
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
push eax
call sub_44b8a7
mov [ esi ] eax
mov eax esi
pop esi
retn 0x8
sub_452dae
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
call sub_4092c0
push 0x8
call sub_41171a
add esp 0x4
mov [ esi ] eax
mov [ eax ] edi
test edi edi
je r-xdata
push 0x1
call sub_41171a
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0x4
mov [ eax ] 0x0
mov ecx [ esi ]
mov [ esi + 0x8 ] 0xb
mov eax [ ecx + 0x4 ]
pop edi
pop esi
retn 0x8
mov eax [ esi ]
mov ecx [ eax ]
push ecx
call sub_41171a
mov edx [ esi ]
mov [ edx + 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push ecx
push 0x0
push edx
call sub_4131f0
mov ecx [ esi ]
add esp 0x10
mov [ esi + 0x8 ] 0xb
mov eax [ ecx + 0x4 ]
pop edi
pop esi
retn 0x8
sub_452e2a
sub esp 0x94
push ebp
mov ebp [ esp + 0x9c ]
mov eax [ ebp + 0x8 ]
cmp eax 0x4
je r-xdata
pop ebp
add esp 0x94
retn 0x4
dec eax
push esi
push edi
cmp eax 0xa
ja r-xdata
xor ecx ecx
mov [ esp + 0x1c ] cx
jmp [ eax * 4 + jump_table_453002 ]
xor eax eax
pop edi
mov [ ebp + 0xc ] eax
pop esi
lea edi [ esp + 0x1c ]
mov esi eax
call sub_401b70
pop edi
pop esi
mov [ ebp + 0xc ] eax
pop ebp
add esp 0x94
retn 0x4
mov ecx [ ebp ]
push 0xa
lea eax [ esp + 0x20 ]
push eax
push ecx
call sub_413308
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ ebp ]
push 0xa
lea edx [ esp + 0x20 ]
push edx
push eax
push ecx
call sub_4133b1
add esp 0x10
jmp r-xdata
fld [ ebp ]
sub esp 0x8
fstp [ esp ]
lea edx [ esp + 0x24 ]
push r--data
push edx
call sub_41353a
add esp 0x10
jmp r-xdata
mov eax [ ebp ]
push eax
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_41353a
add esp 0xc
jmp r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov edx [ ebp ]
lea ecx [ esp + 0xc ]
push ecx
push edx
call sub_44b3d2
mov eax [ eax ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_411691
add esp 0x8
lea ecx [ esp + 0xc ]
call sub_402620
jmp r-xdata
mov edx [ ebp ]
mov eax [ edx ]
xor ecx ecx
lea eax [ eax * 4 + 0x6 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ ebp ]
add esp 0x4
cmp [ eax ] 0x0
je r-xdata
mov esi ebp
call sub_4041d0
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x1c ]
push r--data
push eax
call sub_411691
add esp 0x8
jmp r-xdata
lea edx [ esp + 0x1c ]
push r--data
push edx
call sub_411691
add esp 0x8
jmp r-xdata
xor eax eax
mov [ edi ] ax
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push ecx
push edi
push edx
call sub_435e4d
add esp 0xc
jmp r-xdata
xor eax eax
push edi
mov [ ebp + 0xc ] eax
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
add esp 0x94
retn 0x4
mov esi eax
call sub_401b70
push edi
mov [ ebp + 0xc ] eax
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
add esp 0x94
retn 0x4
mov esi ebp
call sub_4041d0
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
sub_45302e
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx + 0x4 ]
pop esi
retn 0x4
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx + 0x4 ]
pop esi
retn 0x4
push esi
call sub_452e2a
mov eax [ esi + 0xc ]
mov eax [ eax + 0x4 ]
pop esi
retn 0x4
sub_453081
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
pop esi
retn 0x4
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ edx ]
pop esi
retn 0x4
push esi
call sub_452e2a
mov eax [ esi + 0xc ]
mov eax [ eax ]
pop esi
retn 0x4
sub_4530b3
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
mov [ edi ] 0x0
pop edi
pop esi
pop ebx
pop ecx
retn 0x8
push 0x20
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
push eax
call sub_44b3f6
jmp r-xdata
test ebx ebx
je r-xdata
push ebx
mov esi eax
mov [ edi ] eax
call sub_40df50
mov eax [ edi ]
mov ecx [ ebx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov edx [ edi ]
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov ecx [ edi ]
mov [ ecx + 0x18 ] 0x0
mov edx [ edi ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebx + 0x18 ]
mov ecx [ edi ]
add ecx 0x18
push eax
push ecx
mov ecx [ esp + 0x14 ]
call sub_4530b3
mov edi [ edi ]
mov ebx [ ebx + 0x1c ]
add edi 0x1c
jmp r-xdata
sub_453135
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push esi
push eax
call sub_4042f0
test al al
je r-xdata
xor eax eax
pop esi
retn 0x8
mov eax [ esi ]
pop esi
retn 0x8
sub_453155
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_453135
test eax eax
je r-xdata
xor eax eax
retn 0xc
mov edx [ eax + 0x10 ]
mov ecx [ esp + 0xc ]
mov eax [ eax + 0x14 ]
and edx 0xff00
mov [ ecx ] edx
retn 0xc
sub_453182
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] 0x0
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
mov eax [ ecx ]
push eax
push esi
mov ecx esi
call sub_4530b3
mov eax esi
pop esi
retn 0x8
mov [ esi + 0x4 ] 0x0
sub_4531b3
push esi
mov esi ecx
push edi
push esi
mov [ esi ] r--data
call sub_44b64f
mov eax [ esi + 0x2c ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
mov ecx [ esi + 0x30 ]
push ecx
call edi
mov edx [ esi + 0x8 ]
push edx
call sub_4112ef
add esp 0x4
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
pop edi
mov [ esi ] r--data
pop esi
retn
sub_4531f4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x30 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x1
test eax eax
je r-xdata
push esi
call sub_4357ad
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_4112ef
add esp 0x4
mov [ esi + 0x30 ] 0x0
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
add esi 0x18
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_4092c0
pop esi
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x28 ] 0x0
sub_453279
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x10 ]
push ebx
call sub_443e34
test al al
je r-xdata
mov ecx ebx
call sub_40c760
mov [ esi ] eax
cmp [ edi ] 0x0
mov [ esi ] 0x0
jle r-xdata
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ ecx ] 0x2
xor eax eax
pop ebx
retn 0x10
test esi esi
jl r-xdata
mov esi [ esi ]
cmp esi [ edi ]
jge r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
shl eax 0x5
mov eax [ eax + ecx + 0xc ]
push eax
push ebx
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
shl esi 0x5
mov eax [ esi + eax ]
add eax [ edi + 0x8 ]
pop edi
pop esi
pop ebx
retn 0x10
inc [ esi ]
mov edx [ esi ]
cmp edx [ edi ]
jl r-xdata
jmp r-xdata
sub_4532fe
push ebx
mov ebx [ esp + 0xc ]
mov eax [ ebx ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x8 ]
lea eax [ ebx + 0xc ]
push eax
lea esi [ edi + 0xc ]
mov [ edi + 0x8 ] edx
call sub_40df50
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_453333
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44b960
test al al
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
push esi
call sub_443e43
test al al
jne r-xdata
xor eax eax
pop esi
retn 0x4
sub_453378
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x9 ] 0x0
push edi
mov edi [ esp + 0x10 ]
je r-xdata
push ebx
push 0xc
call sub_41171a
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx [ edi ]
mov eax [ esi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
inc [ esi ]
pop edi
mov [ esi + 0x9 ] 0x0
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
xor ebx ebx
mov [ ebx + 0x8 ] eax
inc [ esi ]
mov [ esi + 0x4 ] ebx
pop ebx
pop edi
pop esi
retn 0x8
push edi
push ebx
call sub_453182
mov eax [ esi + 0x4 ]
mov [ ebx + 0x8 ] eax
inc [ esi ]
mov [ esi + 0x4 ] ebx
pop ebx
pop edi
pop esi
retn 0x8
sub_4533dc
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0x10
ja r-xdata
pop edi
xor eax eax
pop esi
retn 0xc
movzx eax [ eax + lookup_table_453484 ]
jmp [ eax * 4 + jump_table_453470 ]
push rw-data
call sub_43423f
test al al
jne r-xdata
push esi
push edi
push rw-data
jmp r-xdata
push rw-data
call sub_43423f
push esi
push edi
test al al
je r-xdata
push esi
push edi
push rw-data
push esi
push edi
push rw-data
call sub_435959
push eax
call sub_453155
test eax eax
jne r-xdata
call sub_453155
test eax eax
je r-xdata
push rw-data
call sub_435959
push eax
jmp r-xdata
push rw-data
jmp r-xdata
pop edi
mov eax 0x1
pop esi
retn 0xc
sub_453495
push esi
mov esi [ esp + 0x8 ]
push rw-data
mov [ esp + 0xc ] 0x0
call sub_43423f
test al al
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push esi
push rw-data
call sub_453155
neg eax
sbb eax eax
neg eax
pop esi
retn 0x4
lea eax [ esp + 0x8 ]
push eax
push esi
push rw-data
call sub_435959
push eax
call sub_453155
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
retn 0x4
sub_4534eb
mov ecx [ esp + 0x4 ]
sub esp 0xa54
lea eax [ esp + 0x234 ]
call sub_40ffb0
mov ecx [ esp + 0xa5c ]
lea eax [ esp + 0x28 ]
call sub_40ffb0
lea eax [ esp + 0x234 ]
push eax
call sub_436ac4
add esp 0x4
test al al
jne r-xdata
lea ecx [ esp + 0x28 ]
push ebx
push ecx
call sub_436ac4
add esp 0x4
xor ebx ebx
test al al
je r-xdata
add esp 0xa54
retn
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x23c ]
push ecx
call sub_436a1d
add esp 0x8
test al al
lea edx [ esp + 0x2c ]
lea eax [ esp + 0x238 ]
je r-xdata
cmp [ esp + 0xa64 ] bl
je r-xdata
push edx
push eax
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
push 0x1
push edx
push eax
call sub_44bbc9
add esp 0xc
test al al
je r-xdata
xor al al
pop ebx
add esp 0xa54
retn
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x23c ]
push eax
call [ __import_lookup_table_0(KERNEL32:lstrcmpiW) ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x238 ]
push ecx
call sub_4112d5
xor edx edx
mov [ esp + eax * 2 + 0x23e ] dx
lea eax [ esp + 0x30 ]
push eax
call sub_4112d5
xor ecx ecx
lea edx [ esp + 0x240 ]
mov [ esp + eax * 2 + 0x36 ] cx
mov [ esp + 0x14 ] edx
add esp 0x8
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2c ]
mov ecx 0x614
push edx
mov [ esp + 0x14 ] eax
mov [ esp + 0x1e ] ebx
mov [ esp + 0x22 ] ebx
mov [ esp + 0x1a ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0x1
mov [ esp + 0x18 ] cx
call [ __import_lookup_table_9(SHELL32:SHFileOperationW) ]
test eax eax
sete al
pop ebx
add esp 0xa54
retn
lea ecx [ esp + 0x238 ]
push 0x1
push ecx
call sub_44bb20
add esp 0x8
test al al
setne al
pop ebx
add esp 0xa54
retn
lea edx [ esp + 0x444 ]
push edx
lea eax [ esp + 0x64c ]
push eax
lea ecx [ esp + 0x854 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x248 ]
push eax
call sub_413db0
lea ecx [ esp + 0x40 ]
push r--data
push ecx
call sub_411663
lea edx [ esp + 0x664 ]
push edx
lea eax [ esp + 0x4c ]
push eax
call sub_411663
add esp 0x24
cmp [ esp + 0x444 ] bx
je r-xdata
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x23c ]
push edx
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x444 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
call sub_411663
add esp 0x8
mov al 0x1
pop ebx
add esp 0xa54
retn
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x23c ]
push ecx
call [ __import_lookup_table_0(KERNEL32:MoveFileW) ]
test eax eax
setne al
pop ebx
add esp 0xa54
retn
sub_4536fb
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0xe ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
shl esi 0x4
push ecx
add esi rw-data
call sub_40df50
mov eax 0x1
pop esi
retn 0x8
sub_45372a
push ecx
mov ecx [ esp + 0x8 ]
lea eax [ esp ]
push eax
push ecx
push rw-data
mov [ esp + 0xc ] 0xffffffff
call sub_437314
test al al
jne r-xdata
mov eax [ esp ]
cmp eax 0x7
jl r-xdata
xor eax eax
pop ecx
retn 0x8
cmp eax [ rw-data ]
jg r-xdata
mov edx [ esp + 0xc ]
push esi
mov esi [ eax * 4 + rw-data ]
push edx
add esi 0x8
call sub_40df50
mov eax 0x1
pop esi
pop ecx
retn 0x8
sub_45377f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
call sub_40fff0
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_4372e1
or eax 0xffffffff
mov [ esp + 0x10 ] eax
cmp ebx 0x5
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call sub_4372ba
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp ebx 0x6
je r-xdata
cmp ebx 0x3
je r-xdata
mov [ ebp + 0x10 ] eax
mov eax ebx
sub eax 0x3
mov edi ebx
je r-xdata
cmp ebx 0x4
je r-xdata
mov ecx [ esp + 0x18 ]
cmp [ ecx ] 0x0
jne r-xdata
sub eax 0x1
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push rw-data
call sub_437314
test al al
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_444563
movzx ax al
movzx ecx ax
push ecx
push rw-data
push rw-data
mov esi rw-data
call sub_40df50
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push edx
call sub_4372ba
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ esp + 0x18 ]
push eax
call sub_4372ba
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esp + 0x18 ]
cmp [ edx ] 0x0
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call sub_444563
movzx dx al
movzx eax dx
push eax
push rw-data
jmp r-xdata
push rw-data
mov esi rw-data
call sub_40df50
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call sub_4372ba
lea edx [ esp + 0x18 ]
push edx
call sub_4372ba
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ esp + 0x28 ] 0x800
jne r-xdata
jmp r-xdata
call sub_444508
mov edx [ esp + 0x2c ]
test edx 0x1000
je r-xdata
mov esi [ edi * 4 + rw-data ]
push 0x208
call sub_41171a
add esp 0x4
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4372e1
push 0x2c
lea ecx [ esp + 0x28 ]
push 0x0
push ecx
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x2c ] 0x30
call sub_4131f0
mov edx [ esp + 0x1c ]
add esp 0xc
lea eax [ esp + 0x20 ]
push eax
push 0x0
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] 0x104
mov ecx [ esi ]
push edi
push ecx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
jge r-xdata
mov [ esp + 0xf ] 0x1
mov eax edx
test bl 0x40
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
test bl bl
jns r-xdata
and eax 0xfffffffc
push eax
mov [ ebp + 0x10 ] 0x0
mov [ esp + 0x28 ] 0x10
mov [ esp + 0x48 ] eax
call sub_4112d5
mov ebx [ ebp + 0x10 ]
add esp 0x4
mov [ esp + 0x48 ] eax
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_4372ba
test bl 0x1
je r-xdata
or eax 0x3
mov edx [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x0
push edi
push edx
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx ebx
and ecx 0x4
je r-xdata
or eax 0x8
lea eax [ esp + 0x10 ]
push eax
call sub_4372ba
test ebx ebx
jle r-xdata
test ebx 0x100
je r-xdata
and eax 0xfffffff7
lea edx [ esp + 0x10 ]
push edx
call sub_4372ba
lea eax [ esp + 0x18 ]
push eax
call sub_4372ba
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ebx 0x200
je r-xdata
test dl 0x8
je r-xdata
or eax 0x80
cmp [ esp + 0xf ] 0x0
je r-xdata
push 0x0
push edi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x2c ] eax
test ecx ecx
jne r-xdata
push 0x0
push 0xffffffff
jmp r-xdata
or eax 0x8
mov edx [ esi ]
push edx
call [ SetMenuDefaultItem@IAT ]
test eax eax
jne r-xdata
sub_453a57
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_447e59
mov edi eax
jmp r-xdata
mov eax ebx
shl eax 0x4
lea ecx [ eax + ebp + 0x184 ]
push ecx
lea esi [ edi + 0x4 ]
mov [ esp + 0x1c ] edi
call sub_40df50
lea edx [ esp + 0x18 ]
push edx
add ebp 0x8c
push ebp
mov [ edi ] ebx
call sub_4333fe
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_453ab0
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push 0x14
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_447e59
mov edi eax
jmp r-xdata
mov eax [ ebp + ebx * 4 + 0x1a4 ]
add eax 0x8
push eax
lea esi [ edi + 0x4 ]
mov [ esp + 0x1c ] edi
call sub_40df50
lea ecx [ esp + 0x18 ]
push ecx
add ebp 0x8c
push ebp
mov [ edi ] ebx
call sub_4333fe
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_453b07
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8c ] 0x0
mov ecx [ esp + 0x8 ]
push ebx
lea ebx [ eax + 0x8c ]
je r-xdata
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ eax + 0x90 ]
push esi
push edi
mov edi [ eax ]
mov edx [ edi ]
lea eax [ edi + 0x4 ]
push eax
lea esi [ ecx + 0x4 ]
mov [ ecx ] edx
call sub_40df50
push ebx
call sub_437294
push edi
call sub_447ce0
pop edi
pop esi
mov [ rw-data ] 0x0
mov al 0x1
pop ebx
retn 0x8
xor al al
pop ebx
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x64
jge r-xdata
inc [ rw-data ]
push 0x0
call [ Sleep@IAT ]
xor al al
pop ebx
retn 0x8
sub_453b94
mov eax [ esp + 0x8 ]
sub esp 0x10c
push ebx
xor ebx ebx
push esi
mov esi [ esp + 0x118 ]
mov cl 0x1
cmp [ eax ] bl
je r-xdata
cmp [ eax + 0x2 ] bl
je r-xdata
mov [ esi + 0x14 ] cl
cmp [ eax + 0x3 ] bl
je r-xdata
mov [ esi + 0x16 ] cl
cmp [ esi + 0x14 ] bl
je r-xdata
mov [ esi + 0x17 ] cl
cmp [ esi + 0x15 ] bl
je r-xdata
cmp [ esi + 0x1a ] bl
je r-xdata
cmp [ esi + 0x16 ] bl
je r-xdata
cmp [ esi + 0x1b ] bl
je r-xdata
mov [ esi + 0x14 ] bl
cmp [ esi + 0x17 ] bl
je r-xdata
cmp [ esi + 0x1c ] bl
je r-xdata
mov [ esi + 0x15 ] bl
cmp [ esi + 0x18 ] bl
je r-xdata
cmp [ esi + 0x1d ] bl
je r-xdata
mov [ esi + 0x16 ] bl
cmp [ esi + 0x20 ] ebx
je r-xdata
cmp [ esi + 0x1e ] bl
je r-xdata
mov [ esi + 0x17 ] bl
push ebp
push edi
lea edx [ esp + 0x10 ]
push edx
call sub_444fc0
mov edi [ __import_lookup_table_10(USER32:GetAsyncKeyState) ]
push 0xa0
call edi
mov ebp [ __import_lookup_table_10(USER32:GetKeyState) ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
call [ __import_lookup_table_10(USER32:GetKeyboardState) ]
mov cl [ esi + 0x1a ]
cmp cl bl
jne r-xdata
mov [ esi + 0x18 ] bl
cmp [ esi + 0x1a ] bl
jne r-xdata
push 0xa0
call ebp
mov edx 0x8000
test dx ax
je r-xdata
mov al [ esi + 0x1b ]
cmp al bl
jne r-xdata
mov [ esp + 0xb4 ] bl
push 0xa1
call edi
mov edx 0x8000
test dx ax
jne r-xdata
push 0xa0
lea eax [ esp + 0x14 ]
push eax
call sub_44c7a0
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_44c379
cmp cl bl
jne r-xdata
mov [ esp + 0xb5 ] bl
cmp [ esi + 0x1b ] bl
jne r-xdata
push 0xa1
call ebp
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ esi + 0x1c ] bl
jne r-xdata
cmp al bl
jne r-xdata
push 0x11
call edi
mov ecx 0x8000
test cx ax
jne r-xdata
push 0xa1
lea edx [ esp + 0x14 ]
push edx
call sub_44c7a0
lea eax [ esp + 0x10 ]
push eax
push esi
call sub_44c379
cmp [ esi + 0x1d ] bl
jne r-xdata
mov [ esp + 0x25 ] bl
mov [ esp + 0x24 ] bl
cmp [ esi + 0x1c ] bl
jne r-xdata
push 0x11
call ebp
mov edx 0x8000
test dx ax
je r-xdata
cmp cl bl
jne r-xdata
mov [ esp + 0x26 ] bl
push 0x12
call edi
mov edx 0x8000
test dx ax
jne r-xdata
push 0x11
lea eax [ esp + 0x14 ]
push eax
call sub_44c7a0
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_44c379
lea ecx [ esp + 0x14 ]
push ecx
call [ __import_lookup_table_10(USER32:SetKeyboardState) ]
pop esi
pop ebx
add esp 0x10c
retn 0x8
mov [ esp + 0x6f ] bl
cmp [ esi + 0x1d ] bl
jne r-xdata
push 0x12
call ebp
mov ecx 0x8000
test cx ax
je r-xdata
push 0x5b
call edi
mov ecx 0x8000
test cx ax
jne r-xdata
push 0x12
lea edx [ esp + 0x14 ]
push edx
call sub_44c7a0
lea eax [ esp + 0x10 ]
push eax
push esi
call sub_44c379
cmp [ esi + 0x1e ] bl
jne r-xdata
push 0x5b
call ebp
mov edx 0x8000
test dx ax
je r-xdata
pop edi
pop ebp
pop esi
pop ebx
add esp 0x10c
retn 0x8
push 0x5b
lea eax [ esp + 0x14 ]
push eax
call sub_44c7a0
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_44c379
sub_453dba
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi [ esp + 0x24 ]
push edi
lea eax [ esp + 0x18 ]
push eax
call sub_444fc0
mov ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call sub_44c7a0
xor ebx ebx
lea eax [ esp + 0x10 ]
push eax
push esi
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] bl
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
call sub_453b94
lea edi [ esi + 0x14 ]
push edi
push esi
call sub_444b65
cmp ebp ebx
je r-xdata
push edi
push esi
call sub_44496c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0xc
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push esi
call sub_44c6fb
sub ebp 0x1
jne r-xdata
sub_453e3b
sub esp 0xc
push ebx
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x24 ]
lea eax [ esp + 0xc ]
push eax
call sub_444fc0
mov ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
call sub_44c718
lea eax [ esp + 0xc ]
push eax
call sub_437a22
mov bl al
test bl bl
je r-xdata
test edi edi
je r-xdata
lea ecx [ esp + 0xd ]
push ecx
push esi
call sub_453b94
lea edx [ esi + 0x14 ]
push edx
push esi
call sub_444b65
test bl bl
je r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call sub_44c6fb
sub edi 0x1
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn 0xc
lea ecx [ esi + 0x14 ]
push ecx
push esi
call sub_44496c
sub_453eb2
sub esp 0x10
mov eax [ esp + 0x1c ]
push ebx
push esi
mov esi [ esp + 0x1c ]
push 0x1
push eax
push esi
mov [ esi + 0x20 ] eax
call sub_4377b4
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x24 ] bl
mov [ esp + 0x8 ] bl
mov [ esp + 0x9 ] bl
mov [ esp + 0xa ] bl
mov [ esp + 0xb ] bl
mov [ esp + 0xc ] bl
mov [ esp + 0xd ] bl
jne r-xdata
push ebp
push edi
xor ebp ebp
push ebx
push 0x14
push esi
call sub_43797b
mov [ esp + 0x24 ] al
lea eax [ esp + 0x12 ]
push eax
push esi
call sub_444d52
push eax
lea ecx [ esp + 0xc ]
push ecx
call sub_4379dc
cmp [ esi + 0x8 ] 0x1
pop edi
pop ebp
jne r-xdata
push esi
inc ebp
call sub_44487c
push 0x1
push edi
push esi
call sub_453e3b
mov [ esi + 0x14 ] bl
mov [ esi + 0x15 ] bl
mov [ esi + 0x16 ] bl
mov [ esi + 0x17 ] bl
mov [ esi + 0x18 ] bl
mov [ esi + 0x19 ] bl
jmp r-xdata
mov edx [ esi + 0x20 ]
push ebx
push edx
push esi
call sub_4377b4
pop esi
pop ebx
add esp 0x10
retn 0xc
lea eax [ esp + 0x8 ]
push eax
push esi
call sub_444b65
mov ecx [ esp + 0x24 ]
push ecx
push 0x14
push esi
call sub_43797b
mov edx [ esp + 0x28 ]
push ebp
push edx
call sub_438a19
movzx edi [ eax ]
cmp di bx
je r-xdata
sub_453f80
mov eax 0x2020
call sub_425210
push ebx
mov ebx [ esp + 0x2028 ]
mov ecx [ ebx + 0x48 ]
push ebp
mov ebp [ esp + 0x2030 ]
push esi
push edi
push 0xfff
lea eax [ esp + 0x34 ]
push eax
push ecx
push 0x0
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
push eax
call [ __import_lookup_table_10(USER32:LoadStringW) ]
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x20 ]
call sub_401b70
cmp [ ebx + 0x3 ] 0x0
je r-xdata
test ebp ebp
jne r-xdata
mov edx [ esp + 0x2044 ]
mov eax [ esp + 0x2040 ]
mov ecx [ esp + 0x203c ]
push r--data
push edx
push eax
push ecx
push ebp
push r--data
call sub_413e5c
add esp 0x18
jmp r-xdata
mov ecx [ esp + 0x203c ]
push ebp
push ecx
lea edx [ esp + 0x38 ]
push r--data
push edx
call sub_41353a
add esp 0x10
mov edx [ esp + 0x203c ]
push edx
lea eax [ esp + 0x34 ]
push r--data
push eax
call sub_41353a
add esp 0xc
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2020
retn 0x14
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x10 ]
call sub_401b70
mov edi [ esp + 0x2044 ]
mov eax esi
call sub_40d330
mov edi r--data
mov eax esi
call sub_40d330
mov edi [ esp + 0x2040 ]
mov eax esi
call sub_40d330
mov edi r--data
mov eax esi
call sub_40d330
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
push 0x11010
push eax
push ecx
push 0x0
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
mov ecx esi
call sub_402620
sub_4540ac
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
push esi
call sub_44c8f6
pop edi
pop esi
pop ebx
retn 0xc
cmp edi 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
push esi
call sub_437ba7
test al al
je r-xdata
push edi
push esi
call sub_44c927
mov eax [ esi + 0xc ]
dec [ eax ]
push esi
call sub_437bb9
lea eax [ edi + 0x1 ]
push eax
call sub_44530d
push eax
mov [ esi + 0x8 ] eax
call sub_41171a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov ecx [ esi ]
push edi
push ebx
push ecx
mov [ esi + 0x4 ] edi
call sub_410f70
mov edx [ esi ]
add esp 0xc
mov [ edi + edx ] 0x0
pop edi
pop esi
pop ebx
retn 0xc
sub_454125
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp ]
push esi
mov esi [ ebp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
inc esi
push esi
push eax
push 0x0
push 0xfde9
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov ebx eax
test ebx ebx
jne r-xdata
push edi
push ebx
call sub_41171a
mov ebp [ ebp ]
add esp 0x4
push 0x0
push 0x0
push ebx
mov edi eax
push edi
push esi
push ebp
push 0x0
push 0xfde9
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov ecx [ esp + 0x18 ]
dec eax
push eax
push edi
push ecx
call sub_4540ac
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esp + 0x14 ]
push eax
call sub_4452d0
pop esi
pop ebp
pop ebx
retn 0x8
sub_4541a1
sub esp 0x1c
push ebx
push ebp
push esi
mov esi [ esp + 0x2c ]
xor ebx ebx
push edi
cmp [ esi + 0x24 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn 0x10
cmp [ esi + 0x10 ] bl
je r-xdata
mov eax [ esp + 0x34 ]
push eax
call sub_4341e9
push 0x1
lea ecx [ esp + 0x3c ]
push ecx
push esi
call sub_44ca28
test eax eax
jle r-xdata
or eax 0xffffffff
cmp [ esi + 0x34 ] ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] ebx
jle r-xdata
mov eax [ esi + 0x34 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
xor ebp ebp
mov edx [ esi + 0x2c ]
mov eax [ edx + ebp ]
lea edi [ edx + ebp ]
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
push esi
mov [ esp + 0x30 ] eax
call sub_445450
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
push esi
mov [ esp + 0x24 ] 0xffffffff
mov [ esp + 0x28 ] eax
call sub_445450
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x20 ]
mov edx [ esp + 0x34 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
mov [ esp + 0x30 ] eax
call sub_445329
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_437c36
inc ebx
add ebp 0x8
cmp ebx [ esi + 0x34 ]
jl r-xdata
sub_45427d
sub esp 0x10
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x30 ]
push edi
xor edi edi
mov [ eax ] edi
mov [ ecx ] edi
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
mov eax [ ebp + 0x8 ]
cmp eax edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] eax
jle r-xdata
mov eax 0x6
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x1c
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov ebx [ esp + 0x2c ]
mov eax ebx
shl eax 0x4
push eax
call sub_4138ba
add esp 0x4
xor ebp ebp
mov [ esp + 0x24 ] eax
test ebx ebx
jle r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push edx
push ecx
lea edx [ esp + 0x18 ]
push edx
push eax
push ebx
mov [ esp + 0x24 ] 0x0
call [ esp + 0x48 ]
mov eax [ esp + 0x24 ]
add esp 0x14
test eax eax
je r-xdata
mov edi eax
lea esp [ esp ]
inc edi
cmp edi [ esp + 0x18 ]
jl r-xdata
mov ecx [ eax ]
xor ebx ebx
cmp [ ecx + 0x4 ] ebx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x1c
mov ecx [ eax ]
add ecx 0xfffffffe
cmp ecx 0x3
ja r-xdata
mov [ edi ] 0x1
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebp * 4 ]
call sub_40c760
jmp [ ecx * 4 + jump_table_4545a1 ]
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov [ esp + 0x24 ] ebx
mov edi [ eax + 0x8 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
jmp [ ecx * 4 + jump_table_4545b9 ]
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + ebp * 4 ]
mov ecx [ edx + 0x8 ]
add ecx 0xfffffffe
cmp ecx 0x5
ja r-xdata
mov eax [ esp + 0x24 ]
mov [ edi ] 0x4
mov eax [ eax + 0x4 ]
mov eax [ eax + ebp * 4 ]
push eax
call sub_453081
mov ebx eax
call sub_40f580
mov ebx eax
push ebx
call sub_4137e0
inc eax
add esp 0x4
push eax
call sub_4138ba
add esp 0x4
push ebx
push eax
mov [ edi + 0x8 ] eax
call sub_413990
push ebx
call sub_4112ef
mov ebx [ esp + 0x38 ]
add esp 0xc
jmp r-xdata
mov [ edi ] 0x3
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebp * 4 ]
call sub_40be90
fstp [ edi + 0x8 ]
jmp r-xdata
mov [ edi ] 0x2
mov edx [ eax + 0x4 ]
mov eax [ edx + ebp * 4 ]
push eax
call sub_443576
mov [ edi + 0xc ] edx
jmp r-xdata
mov [ edi ] 0x5
mov eax [ eax + 0x4 ]
mov eax [ eax + ebp * 4 ]
push eax
call sub_44b390
jmp r-xdata
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
mov edx [ ecx + 0x8 ]
lea eax [ ebx + ebx * 2 ]
add eax eax
add eax eax
lea ecx [ edx + eax ]
mov edx [ esp + 0x2c ]
cmp edx [ ecx + 0x4 ]
jl r-xdata
mov eax [ ecx + edi * 4 ]
mov edx [ eax ]
add [ esp + 0x24 ] 0xc
inc ebx
cmp ebx [ edx + 0x4 ]
jl r-xdata
mov edx [ esp + 0x24 ]
push edx
call sub_413a88
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
mov esi [ esp + 0x24 ]
jmp r-xdata
mov edi [ eax + 0x8 ]
mov ebp [ eax + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x2
mov [ esi + 0x4 ] ebp
jmp r-xdata
fld [ eax + 0x8 ]
fstp [ esp + 0x18 ]
call sub_4092c0
fld [ esp + 0x18 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
jmp r-xdata
mov edi [ eax + 0x8 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x7
jmp r-xdata
mov eax [ eax + 0x8 ]
push 0xffffffff
push eax
call sub_4359c4
add esp 0x8
mov edi eax
mov ebx esi
call sub_40e6d0
push edi
call sub_4112ef
mov ebx [ esp + 0x30 ]
add esp 0x4
jmp r-xdata
inc ebp
add edi 0x10
cmp ebp ebx
jl r-xdata
mov [ edi + 0x8 ] eax
mov eax 0x7
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x1c
cmp edx [ ecx + 0x8 ]
jg r-xdata
mov edx [ eax ]
mov eax [ edx + 0x8 ]
mov ecx [ esp + 0x24 ]
mov edx [ eax + ecx ]
mov eax [ esp + 0x28 ]
push edx
push eax
call sub_4261f1
mov ecx [ ebp + 0x4 ]
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call eax
add esp 0x4
cmp [ esi ] 0x4
jne r-xdata
mov [ esi ] edi
test ebx ebx
jle r-xdata
mov ecx [ ebp + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
mov eax [ edx + eax ]
mov ecx [ ecx ]
mov edx [ ecx ]
mov ebx [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push eax
push edx
call ebx
mov [ esp + 0x34 ] eax
mov eax [ ebp + 0x4 ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
push r--data
push edx
call ebx
mov [ esp + 0x14 ] eax
add esi 0x10
sub ebx 0x1
jne r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_413a88
add esp 0x4
sub_4545c9
mov eax [ rw-data ]
sub esp 0x18
push esi
mov esi [ esp + 0x20 ]
push edi
push 0x63
push eax
call [ LoadIconW@IAT ]
mov ecx [ esi + 0x54 ]
push eax
push 0x0
push 0x80
push ecx
call [ SendMessageW@IAT ]
cmp [ esi + 0x28 ] 0x0
mov edi [ SetWindowTextW@IAT ]
jbe r-xdata
cmp [ esi + 0x48 ] 0x0
push ebx
mov ebx [ __import_lookup_table_10(USER32:GetDlgItem) ]
push ebp
jbe r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x54 ]
push edx
push eax
call edi
cmp [ esi + 0x38 ] 0x0
jbe r-xdata
mov ecx [ esi + 0x54 ]
push 0x3ea
push ecx
call ebx
mov edx [ esi + 0x44 ]
push edx
push eax
call edi
movzx eax [ esi + 0x20 ]
mov edi [ __import_lookup_table_10(USER32:SendDlgItemMessageW) ]
test ax ax
je r-xdata
mov eax [ esi + 0x54 ]
push 0x3e9
push eax
call ebx
mov ecx [ esi + 0x34 ]
push ecx
push eax
call edi
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
push 0x0
movzx edx ax
mov eax [ esi + 0x54 ]
push edx
push 0xcc
push 0x3e9
push eax
call edi
mov eax [ esi + 0x54 ]
lea edx [ esp + 0x18 ]
push edx
push eax
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
call sub_437f88
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x28 ]
sub ebx eax
mov [ esp + 0x30 ] eax
mov eax [ esi + 0x8 ]
add esp 0x4
sub edi ecx
mov ebp ecx
cmp eax 0x80000000
je r-xdata
mov ecx [ esi + 0x54 ]
push 0x0
push eax
push 0xc5
push 0x3e9
push ecx
call edi
mov eax [ esi + 0xc ]
cmp eax 0x80000000
je r-xdata
mov [ esp + 0x2c ] eax
mov eax [ esi ]
test eax eax
jle r-xdata
mov ebp eax
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov ebx eax
lea eax [ esi + 0x24 ]
push r--data
push eax
call sub_44cd47
add esp 0x8
test al al
je r-xdata
mov edi eax
lea ecx [ esp + 0x18 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea edx [ esp + 0x18 ]
push edx
call sub_437f88
add esp 0x4
test [ esi + 0x10 ] 0x40
je r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x54 ]
push edx
push eax
call [ SetWindowTextW@IAT ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x20 ]
sub eax ebx
sub eax [ esp + 0x18 ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
jmp r-xdata
mov eax [ esi + 0x54 ]
push 0x0
push edi
push ebx
push ebp
push ecx
push eax
call [ __import_lookup_table_10(USER32:MoveWindow) ]
mov edx [ esi + 0x54 ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ __import_lookup_table_10(USER32:GetClientRect) ]
lea eax [ esp + 0x18 ]
push eax
call sub_437f88
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x20 ]
mov edx [ esi + 0x54 ]
shl ecx 0x10
sub ecx [ esp + 0x1c ]
add esp 0x4
add ecx [ esp + 0x20 ]
push ecx
push 0x0
push 0x5
push edx
call [ PostMessageW@IAT ]
fldz
fcomp [ esi + 0x18 ]
pop ebp
pop ebx
fnstsw ax
test ah 0x5
jpe r-xdata
mov eax [ esp + 0x24 ]
sub eax edi
sub eax [ esp + 0x1c ]
cdq
sub eax edx
mov ebp eax
sar ebp 0x1
test [ esi + 0x10 ] 0x80
je r-xdata
pop edi
mov eax 0x1
pop esi
add esp 0x18
retn 0x4
fld [ esi + 0x18 ]
mov ecx [ esi + 0x54 ]
fmul [ r--data ]
push 0x0
fnstcw [ esp + 0x28 ]
movzx eax [ esp + 0x28 ]
or eax 0xc00
mov [ esp + 0xc ] eax
fldcw [ esp + 0xc ]
fistp [ esp + 0xc ]
mov eax [ esp + 0xc ]
push eax
push 0x40a
fldcw [ esp + 0x30 ]
push ecx
call [ SetTimer@IAT ]
mov [ esi + 0x58 ] eax
sub_454820
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push 0xc
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] esi
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi ] eax
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x4 ] eax
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
jmp r-xdata
push 0xc
mov [ esi + 0x8 ] eax
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0xc ] eax
pop edi
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
pop esi
retn 0x8
sub_4548de
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
xor eax eax
push ebx
mov ebx [ edx ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ esp + 0x38 ] eax
push esi
mov eax 0xfffffffe
mov [ esp + 0x40 ] ebx
cmp [ ebx ] 0x5f
lea edx [ ecx + 0x6 ]
push edi
mov edi [ ebp + 0x34 ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x10 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0xc ] edx
jne r-xdata
mov [ ebx + 0x1 ] 0x0
mov [ ebx + 0x2 ] 0x0
mov eax [ edi + 0x34 ]
lea ebx [ ebx + ecx + 0x3 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x38 ] eax
movzx eax [ ebx + 0x3 ]
movzx edx [ ebx + 0x4 ]
shl eax 0x8
or eax edx
mov [ esp + 0x34 ] eax
mov [ esp + 0x4c ] ax
mov eax [ edi + 0x20 ]
lea edx [ esp + 0x48 ]
mov [ esp + 0x48 ] eax
mov [ edi + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x7
cmp ecx [ ebp + 0xc ]
je r-xdata
mov eax [ esp + 0x38 ]
mov [ edi + 0x34 ] eax
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov [ ebx ] 0x19
inc ebx
and al 0x7
mov [ ebx ] al
inc ebx
add [ esp + 0xc ] 0x2
mov [ esp + 0x14 ] ebx
mov esi [ ebp + 0x38 ]
mov eax esi
neg eax
sbb eax eax
lea edx [ esp + 0xc ]
and eax edx
push eax
push edi
lea eax [ esp + 0x48 ]
push eax
mov eax [ ebp + 0x18 ]
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push eax
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_44cddd
add esp 0x24
test eax eax
je r-xdata
mov [ ebx ] 0x5c
inc ebx
mov [ ebx ] 0x0
mov [ esp + 0x30 ] ebx
mov [ ebx + 0x1 ] 0x0
add ebx 0x2
add [ esp + 0xc ] 0x3
mov [ esp + 0x14 ] ebx
mov eax [ ebp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ eax ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x34 ]
cmp eax [ esp + 0x28 ]
jle r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
test esi esi
jne r-xdata
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x18 ]
cmp [ edx ] 0x7c
jne r-xdata
cmp [ eax ] 0x54
je r-xdata
test esi esi
jne r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x2c ]
test ecx ecx
jl r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp [ esp + 0x34 ] 0x0
jle r-xdata
mov ecx ebx
sub ecx eax
lea esp [ esp ]
mov ecx ebx
sub ecx eax
sar ecx 0x8
mov [ ebx ] 0x54
mov [ ebx + 0x1 ] cl
mov cl bl
sub cl al
mov [ ebx + 0x2 ] cl
mov [ esp + 0x1c ] ebx
mov [ esp + 0x44 ] ebx
add ebx 0x3
inc edx
mov [ esp + 0x18 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add [ esp + 0xc ] 0x3
mov eax [ ebp + 0x24 ]
inc edx
lea ebx [ ecx + eax + 0x3 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
test edx edx
jl r-xdata
cmp ecx edx
je r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx ebx
sub ecx eax
sar ecx 0x8
mov [ ebx ] 0x55
mov [ ebx + 0x1 ] cl
mov cl bl
sub cl al
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x2 ] cl
mov ecx [ ebp + 0xc ]
and eax 0x7
add ebx 0x3
cmp eax ecx
je r-xdata
mov eax [ edi + 0x20 ]
mov ecx [ eax ]
mov [ edi + 0x20 ] ecx
movzx esi [ eax + 0x1 ]
movzx edx [ eax + 0x2 ]
shl esi 0x8
or esi edx
mov edx ecx
sar edx 0x8
mov [ eax + 0x2 ] cl
mov [ eax + 0x1 ] dl
sub eax esi
mov ecx esi
test esi esi
jg r-xdata
mov esi [ ebp + 0x38 ]
mov edx [ esp + 0x18 ]
cmp [ ebp + 0x20 ] 0x0
mov [ esp + 0x14 ] ebx
je r-xdata
mov ecx [ esp + 0x20 ]
mov ecx [ esp + 0x20 ]
test ecx ecx
jge r-xdata
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push 0x0
push ecx
push eax
mov [ ebx ] 0x0
call sub_43249e
add esp 0x10
cmp eax 0xfffffffd
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ edx ] 0x29
jne r-xdata
or [ esp + 0x10 ] ecx
mov [ esp + 0x10 ] 0xffffffff
jmp r-xdata
mov edx ecx
xor edx [ esp + 0x10 ]
test edx 0xfffffdff
je r-xdata
mov ecx edx
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov [ esp + 0x24 ] 0xffffffff
mov [ esp + 0x10 ] ecx
test eax eax
jl r-xdata
mov [ edi + 0x54 ] 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx 0x7fffffeb
sub edx ecx
cmp edx eax
jge r-xdata
mov eax [ esp + 0xc ]
mov [ ebx ] 0x19
inc ebx
mov [ ebx ] cl
inc ebx
add eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x18 ]
sub eax 0xfffffffe
neg eax
sbb eax eax
and eax 0xfffffff5
add eax 0x24
mov [ ecx ] eax
mov ecx [ esp + 0x30 ]
mov edx eax
sar edx 0x8
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
mov eax [ esp + 0x1c ]
add ecx eax
mov [ esi ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x14
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x28 ]
mov [ edi + 0x34 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ebx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edx
mov edx [ ebp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov [ edx ] ecx
mov edx [ ebp + 0x2c ]
mov ecx [ esp + 0x10 ]
mov [ edx ] ecx
test esi esi
je r-xdata
sub_454c1b
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
mov edx [ eax + ecx * 4 ]
push esi
mov esi [ edx ]
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push 0x232
push edx
mov [ esi + 0x178 ] 0x0
call [ DefDlgProcW@IAT ]
pop esi
retn 0x10
push 0x0
push 0x0
push esi
push 0xfffffff4
push rw-data
call sub_451aa9
sub_454c69
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push edi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov eax esi
and eax 0xfff0
cmp eax 0xf030
ja r-xdata
cmp eax 0xf060
je r-xdata
je r-xdata
push 0x0
push 0x0
push ecx
push 0xfffffffd
push rw-data
call sub_451aa9
pop edi
pop esi
retn 0x10
cmp eax 0xf120
jne r-xdata
push 0x0
push 0x0
push ecx
push 0xfffffffa
push rw-data
call sub_451aa9
test [ rw-data ] 0x1
jne r-xdata
sub eax 0xf000
je r-xdata
movzx eax [ esp + 0x18 ]
movzx ecx [ esp + 0x14 ]
shl eax 0x10
or eax ecx
push eax
push esi
push 0x112
push edi
call [ DefDlgProcW@IAT ]
push 0x0
push 0x0
push ecx
push 0xfffffffb
push rw-data
call sub_451aa9
test [ rw-data ] 0x1
jne r-xdata
pop edi
pop esi
retn 0x10
jmp r-xdata
mov [ ecx + 0x178 ] 0x1
jmp r-xdata
sub eax 0x20
jne r-xdata
push eax
push eax
push ecx
push 0xfffffffc
push rw-data
call sub_451aa9
call sub_44a37a
test [ rw-data ] 0x1
jne r-xdata
jmp r-xdata
sub_454d51
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp [ esi + 0x1c0 ] 0x0
push edi
mov edi [ esp + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
push ebx
call sub_4547ff
mov eax [ edi + 0x84 ]
push eax
add edi 0x70
push edi
push esi
call sub_43812c
test eax eax
jne r-xdata
mov [ ebx ] 0x0
mov eax [ esi + 0x1c0 ]
test eax eax
je r-xdata
mov [ esi + 0x1c0 ] 0x0
push eax
call sub_440ec6
sub_454daa
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
call sub_40c760
push edi
mov ebp eax
mov [ esp + 0x1c ] 0x0
call sub_4112d5
add esp 0x4
cmp eax 0x4
jbe r-xdata
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x2010
push eax
push ecx
push 0x1
push edi
push 0x0
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov [ esp + 0x14 ] eax
jmp r-xdata
push r--data
push edi
call sub_4112d5
lea eax [ edi + eax * 2 - 0x8 ]
add esp 0x4
push eax
call sub_4115d0
add esp 0x8
test eax eax
push r--data
push edi
sete [ esp + 0x20 ]
call sub_4112d5
lea ecx [ edi + eax * 2 - 0x8 ]
add esp 0x4
push ecx
call sub_4115d0
add esp 0x8
test eax eax
push r--data
push edi
sete bl
call sub_4112d5
lea edx [ edi + eax * 2 - 0x8 ]
add esp 0x4
push edx
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
push 0x32
push 0x0
push edi
call [ LoadLibraryExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
test bl bl
jne r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_453333
test al al
je r-xdata
lea edx [ esp + 0x1c ]
push edx
call sub_443e34
test al al
je r-xdata
cmp [ esp + 0x18 ] bl
jne r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esi ]
mov ebx [ SendMessageW@IAT ]
push 0x0
push eax
push 0x170
push edi
mov [ esi + 0x64 ] eax
call ebx
push 0x1
push 0x172
push 0x64
push edi
call ebx
movsx ecx [ esi + 0x86 ]
movsx edx [ esi + 0x84 ]
movsx eax [ esi + 0x82 ]
push 0x1
push ecx
movsx ecx [ esi + 0x80 ]
push edx
push eax
push ecx
push edi
call [ __import_lookup_table_10(USER32:MoveWindow) ]
cmp [ esp + 0x14 ] 0x0
lea esi [ esp + 0x1c ]
jne r-xdata
push eax
call [ DestroyIcon@IAT ]
test ebp ebp
jle r-xdata
test ebp ebp
jl r-xdata
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x0
push eax
push ecx
push 0x1
lea edx [ esp + 0x2c ]
push edx
call sub_453081
push eax
push ebx
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
call sub_4092c0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x18
call sub_4092c0
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x18
jge r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x0
push eax
push ecx
movzx edx bp
push 0x1
push edx
push ebx
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov [ esp + 0x14 ] eax
push ebx
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
movsx ecx [ esi + 0x84 ]
push eax
movsx eax [ esi + 0x86 ]
push eax
push ecx
movzx edx bp
push 0x1
push edx
jmp r-xdata
cmp [ esi + 0x84 ] 0x10
push 0x1
jle r-xdata
or ecx 0xffffffff
sub ecx ebp
mov ebp ecx
test ebp ebp
movsx eax [ esi + 0x86 ]
movsx ecx [ esi + 0x84 ]
push 0x0
push eax
push ecx
push 0x1
lea edx [ esp + 0x2c ]
push edx
call sub_453081
push eax
push ebx
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x0
lea edx [ esp + 0x1c ]
push edx
jmp r-xdata
push ebp
push edi
call [ ExtractIconExW@IAT ]
sub_455014
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x8 ]
sub esp 0x54
push ebx
push esi
push edi
mov esi ecx
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push edx
push esi
call sub_44213b
test al al
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx [ esp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov ecx [ esp + 0x14 ]
mov edi [ edx ]
mov eax [ esi + 0x74 ]
mov edx [ eax + ecx * 4 ]
mov ebx [ edx ]
mov dl [ ebx + 0x88 ]
movzx ecx dl
add ecx 0xfffffffe
cmp ecx 0x1b
ja r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push ecx
movzx ecx [ ecx + lookup_table_4556dc ]
jmp [ ecx * 4 + jump_table_4556a8 ]
mov eax [ ebx + 0x60 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov ecx 0x3
cmp [ esi + 0x84 ] ecx
mov [ esp + 0xc ] ecx
jl r-xdata
cmp dl 0xe
jne r-xdata
mov eax [ esi + 0x84 ]
cmp eax 0x3
mov [ esp + 0xc ] eax
jl r-xdata
movzx edx [ ebx + 0x8b ]
mov eax [ edi + 0x17c ]
mov ecx [ edi + 0x184 ]
push 0x0
push edx
push 0x1308
push eax
mov [ esp + 0x20 ] ecx
call [ SendMessageW@IAT ]
mov ecx [ edi + 0x17c ]
push ecx
push esi
call sub_4421c1
mov edx [ esi + 0x74 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ ebp + 0x8 ]
lea edx [ esp + 0x18 ]
push edx
push 0xffffffff
push 0x1053
push eax
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x30 ] ecx
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x30 ]
push ecx
push 0x0
push 0x1101
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
push ebx
push edi
call sub_43343d
mov eax [ ebx ]
push eax
jmp r-xdata
mov ecx 0x3
cmp [ esi + 0x84 ] ecx
jl r-xdata
mov eax [ edi + 0x1b8 ]
test eax eax
jle r-xdata
push edi
push ebx
push esi
call sub_454d51
jmp r-xdata
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov ecx [ ebx + 0x8 ]
mov eax [ edi + 0x194 ]
cmp ecx eax
jne r-xdata
lea ecx [ ecx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x8 ]
push 0x0
push ecx
push edx
call [ __import_lookup_table_10(USER32:DeleteMenu) ]
test eax eax
jne r-xdata
push 0x2c
lea ecx [ esp + 0x38 ]
push 0x0
push ecx
mov [ esp + 0x3c ] 0x30
call sub_4131f0
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
add esp 0xc
lea edx [ esp + 0x30 ]
push edx
push 0x0
push eax
push ecx
mov [ esp + 0x44 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
xor eax eax
or ecx 0xffffffff
mov [ edi + 0x17c ] eax
mov [ edi + 0x180 ] ecx
mov [ edi + 0x184 ] ecx
mov [ edi + 0x188 ] eax
mov [ edi + 0x18c ] al
mov eax [ ebx ]
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov eax 0x3
cmp [ esi + 0x84 ] eax
mov [ esp + 0xc ] eax
jl r-xdata
movzx ecx [ ebx + 0x80 ]
cmp cx 0xffff
je r-xdata
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
push 0x0
push eax
mov eax [ ebx + 0x30 ]
push 0x1008
push eax
call [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
add eax 0xc
mov [ esp + 0x10 ] eax
mov edx [ ebx ]
push edx
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov eax 0x3
cmp [ esi + 0x84 ] eax
mov [ esp + 0xc ] eax
jl r-xdata
push eax
call [ ImageList_Destroy@IAT ]
mov ebx [ ebx + 0x4c ]
test ebx ebx
je r-xdata
push eax
call [ DestroyIcon@IAT ]
push ecx
call [ DestroyMenu@IAT ]
jmp r-xdata
push eax
call [ DestroyMenu@IAT ]
mov [ edi + 0x194 ] 0x0
jmp r-xdata
inc ecx
cmp ecx [ esi + 0x84 ]
mov [ esp + 0xc ] ecx
jle r-xdata
mov eax [ eax ]
mov edx [ eax + 0x8 ]
cmp edx [ ebx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x190 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x190 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:DeleteMenu) ]
mov eax [ esp + 0x44 ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
jmp r-xdata
dec eax
cmp eax 0x3
mov [ esp + 0xc ] eax
jge r-xdata
mov ecx [ ecx ]
cmp [ ecx + 0x88 ] 0xb
jne r-xdata
movzx ecx [ ebx + 0x8b ]
mov eax [ esp + 0x10 ]
cmp ecx eax
jne r-xdata
mov ecx [ esi + 0x74 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax ] 0x0
je r-xdata
movsx edx cx
push edx
push eax
call [ __import_lookup_table_2(COMCTL32:ImageList_Remove) ]
mov eax 0x3
cmp [ esi + 0x84 ] eax
mov [ esp + 0xc ] eax
jl r-xdata
push eax
call [ ImageList_Destroy@IAT ]
mov eax [ esp + 0x10 ]
inc ecx
add eax 0x4
cmp ecx [ esi + 0x84 ]
mov [ esp + 0x10 ] eax
jle r-xdata
mov eax [ eax ]
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x1b8 ] 0x0
jmp r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ edi + 0x1c ]
jne r-xdata
push ebx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov edx [ esi + 0x74 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ eax + 0x88 ]
cmp dl 0xf
je r-xdata
mov ecx [ edi ]
push ecx
call [ __import_lookup_table_10(USER32:DrawMenuBar) ]
jmp r-xdata
push eax
call [ GetMenuItemCount@IAT ]
test eax eax
jne r-xdata
mov eax 0x3
cmp [ esi + 0x84 ] eax
mov [ esp + 0xc ] eax
jl r-xdata
mov edx [ esi + 0x74 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_455014
mov eax [ esp + 0xc ]
mov [ edi + 0x184 ] 0xffffffff
movzx edx [ ebx + 0x8b ]
cmp eax edx
jle r-xdata
cmp eax [ edi + 0x180 ]
jne r-xdata
mov eax [ esp + 0xc ]
inc eax
cmp eax [ esi + 0x84 ]
mov [ esp + 0xc ] eax
jle r-xdata
mov eax [ eax ]
mov cl [ eax + 0x8b ]
cmp cl 0xff
je r-xdata
mov eax [ ebx ]
push eax
jmp r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
cmp [ eax + 0x88 ] 0x3
jne r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_451c22
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ edi + 0x1c ] 0xffffffff
mov eax [ esp + 0xc ]
push eax
push esi
call sub_451c22
mov ecx [ esp + 0xc ]
cmp dl 0xe
je r-xdata
mov edx [ edi ]
push eax
push edx
call [ SetMenu@IAT ]
mov eax [ edi + 0x190 ]
push eax
call [ DestroyMenu@IAT ]
mov [ edi + 0x190 ] 0x0
mov edx [ esi + 0x74 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
push eax
push edi
push esi
mov [ ebx + 0x8b ] 0xff
call sub_441077
dec [ edi + 0x180 ]
mov [ edi + 0x188 ] 0x0
jmp r-xdata
dec eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov dl [ ebx + 0x8b ]
cmp cl dl
jne r-xdata
inc eax
cmp eax [ esi + 0x84 ]
mov [ esp + 0xc ] eax
jle r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov eax [ eax ]
cmp eax [ ebx + 0x30 ]
je r-xdata
inc eax
cmp eax [ esi + 0x84 ]
mov [ esp + 0xc ] eax
jle r-xdata
mov ecx [ ecx ]
mov edx [ ecx + 0x30 ]
cmp edx [ ebx ]
jne r-xdata
mov [ eax + 0x8 ] 0x0
jmp r-xdata
inc eax
cmp eax [ esi + 0x84 ]
mov [ esp + 0xc ] eax
jle r-xdata
mov ecx [ ecx ]
mov edx [ esp + 0x10 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
jbe r-xdata
cmp [ eax + 0x88 ] 0xb
je r-xdata
cmp [ ecx + 0x88 ] 0x14
jne r-xdata
mov edx [ esi + 0x74 ]
mov eax [ edx + ecx * 4 ]
mov eax [ eax ]
movsx ecx [ eax + 0x86 ]
movsx edx [ eax + 0x84 ]
push 0x0
push ecx
movsx ecx [ eax + 0x82 ]
push edx
movsx edx [ eax + 0x80 ]
mov eax [ eax ]
push ecx
push edx
push eax
call [ __import_lookup_table_10(USER32:MoveWindow) ]
jmp r-xdata
cmp [ ecx + 0x88 ] 0x11
jne r-xdata
cmp [ ecx + 0x88 ] 0xf
jne r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0xb
jne r-xdata
dec [ eax + 0x8b ]
cmp cl dl
mov edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_455014
jmp r-xdata
mov ecx [ ecx + 0x30 ]
cmp ecx [ ebx ]
jne r-xdata
mov eax [ esp + 0xc ]
push eax
push esi
call sub_451c22
mov eax [ esp + 0xc ]
mov eax [ esp + 0xc ]
push eax
push esi
call sub_451c22
mov eax [ esp + 0xc ]
movzx ecx [ ebx + 0x80 ]
test cx cx
jl r-xdata
mov edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_455014
mov eax [ esp + 0xc ]
movzx eax [ eax + 0x80 ]
test ax ax
jl r-xdata
cmp ax cx
jle r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
dec [ eax + 0x80 ]
mov eax [ esi + 0x74 ]
mov [ esp + 0x30 ] 0x2
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov edx [ ecx ]
movsx ecx [ edx + 0x80 ]
mov [ esp + 0x44 ] ecx
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ edi + 0x17c ]
lea edx [ esp + 0x30 ]
push edx
movzx edx [ ecx + 0x8b ]
push edx
push 0x133d
push eax
call [ SendMessageW@IAT ]
sub_4556f8
mov edx [ esp + 0x4 ]
sub esp 0x40
lea eax [ esp ]
push eax
lea ecx [ esp + 0x48 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ esp ]
push ebp
mov ebp [ edx ]
push esi
push edi
mov edi [ rw-data ]
mov ecx [ edi + eax * 4 ]
mov esi [ ecx ]
mov al [ esi + 0x88 ]
cmp al 0xe
je r-xdata
xor eax eax
add esp 0x40
retn 0x18
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x40
retn 0x18
cmp al 0xf
je r-xdata
cmp al 0xc
je r-xdata
cmp al 0x9
je r-xdata
cmp al 0x14
je r-xdata
cmp al 0x11
je r-xdata
cmp al 0x1d
je r-xdata
cmp al 0x1b
je r-xdata
cmp al 0x15
je r-xdata
movzx eax [ esp + 0x64 ]
neg eax
sbb eax eax
and eax 0x2
or eax 0x11
mov [ esp + 0x24 ] eax
mov eax [ rw-data ]
mov [ esp + 0x20 ] 0x2c
mov edx [ esi ]
mov [ esp + 0x28 ] edx
mov [ esp + 0x40 ] eax
mov ecx [ esi ]
push ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x48 ] ebx
cmp [ esi + 0x88 ] 0xb
mov eax [ esi + 0x4c ]
jne r-xdata
test eax eax
je r-xdata
mov edx [ ebp + 0x17c ]
push edx
push rw-data
call sub_4421c1
mov ebx eax
mov eax [ edi + ebx * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4c ]
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov edx [ esi ]
movzx eax [ esp + 0x64 ]
push 0x0
push ecx
push 0x0
push edx
push 0x80000000
push 0x80000000
neg eax
push 0x80000000
sbb eax eax
push 0x80000000
and eax 0x40
or eax 0x80000003
push eax
push 0x0
push r--data
push 0x8
call [ __import_lookup_table_10(USER32:CreateWindowExW) ]
mov edi eax
test edi edi
je r-xdata
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x17c ]
movzx eax [ esp + 0x64 ]
push 0x0
push ecx
push 0x0
push edx
push 0x80000000
push 0x80000000
neg eax
push 0x80000000
sbb eax eax
push 0x80000000
and eax 0x40
or eax 0x80000003
push eax
push 0x0
push r--data
push 0x8
call [ __import_lookup_table_10(USER32:CreateWindowExW) ]
mov edi eax
test edi edi
jne r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x40
retn 0x18
mov ebp [ SendMessageW@IAT ]
lea eax [ esp + 0x24 ]
push eax
push 0x0
push 0x432
push edi
call ebp
push ebx
lea eax [ esi + 0x50 ]
mov [ esi + 0x4c ] edi
call sub_4021e0
lea ecx [ esp + 0x14 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x1c ]
push edx
push 0x0
push 0x418
push edi
call ebp
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
mov [ edx + 0x4c ] edi
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov eax [ ecx ]
push r--data
add eax 0x50
call sub_4021e0
mov edx [ ebp + 0x17c ]
lea ecx [ esp + 0x24 ]
push ecx
push 0x0
mov [ esp + 0x34 ] edx
mov eax [ ebp + 0x17c ]
push 0x432
push edi
mov [ esp + 0x40 ] eax
call [ SendMessageW@IAT ]
mov edx [ ebp + 0x17c ]
push 0x0
push edi
push 0x132e
push edx
call [ SendMessageW@IAT ]
mov eax [ esp + 0x58 ]
push eax
lea eax [ esi + 0x50 ]
mov [ esi + 0x4c ] edi
call sub_4021e0
pop ebx
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x40
retn 0x18
push edi
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
pop ebx
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x40
retn 0x18
push eax
mov eax [ esp + 0x64 ]
push eax
push 0x421
push edi
call ebp
sub_4559a8
mov edx [ esp + 0x4 ]
sub esp 0xd0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xe8 ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x7c ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ebp [ edx ]
movzx eax [ ebp + 0x88 ]
mov esi [ ebp ]
mov ebx [ SendMessageW@IAT ]
mov [ edi ] 0xffffffff
cmp eax 0x1c
ja r-xdata
mov [ edi ] 0x0
push 0x0
push 0x0
push 0xe
push esi
call ebx
mov edi eax
inc edi
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push edi
mov ebx eax
push ebx
push esi
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
movzx eax [ eax + lookup_table_456180 ]
jmp [ eax * 4 + jump_table_456144 ]
push 0x0
push 0x0
push 0x188
push esi
call ebx
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x147
push esi
call ebx
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ esp + 0xec ] 0x0
push 0x0
push 0x0
je r-xdata
push 0x0
push 0x0
push 0x408
push esi
call [ SendMessageW@IAT ]
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push 0x0
push 0x0
push 0x400
push esi
call [ SendMessageW@IAT ]
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov ebx [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x130b
push esi
call ebx
cmp [ esp + 0xec ] 0x0
mov [ edi ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov ebx [ SendMessageW@IAT ]
push 0x0
push 0x9
push 0x110a
push esi
mov [ edi ] 0x0
call ebx
test eax eax
je r-xdata
mov ecx [ ebp + 0x30 ]
mov eax [ ebp + 0xc ]
push 0xfffffff0
push ecx
mov [ esp + 0x4c ] eax
mov [ edi ] 0x0
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
cmp [ esp + 0xec ] 0x0
mov esi eax
mov [ esp + 0x40 ] 0x8
mov [ esp + 0x4c ] 0xf000
je r-xdata
mov ebx [ SendMessageW@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push esi
call ebx
push 0x28
lea edx [ esp + 0x1c ]
push 0x0
push edx
mov [ edi ] eax
call sub_4131f0
mov eax [ edi ]
add esp 0xc
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x104b
push esi
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x2c ] eax
call ebx
neg eax
sbb eax eax
and eax [ esp + 0x38 ]
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov esi [ ebp + 0x30 ]
push 0xffffffec
push esi
mov [ edi ] 0xffffffff
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
push 0x28
lea edx [ esp + 0x1c ]
push 0x0
push edx
mov ebx eax
call sub_4131f0
mov eax [ esp + 0xf0 ]
add esp 0xc
lea ecx [ esp + 0xac ]
push ecx
push 0xffffffff
push 0x1053
push esi
mov [ esp + 0xbc ] 0x1
mov [ esp + 0xc4 ] eax
call [ SendMessageW@IAT ]
mov [ esp + 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
lea esi [ ebp + 0x68 ]
push esi
call sub_443e34
test al al
je r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x1001
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x0
push edi
push 0x18a
push esi
call ebx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov ebp eax
push ebp
push edi
push 0x189
push esi
call ebx
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push 0x0
push edi
push 0x149
push esi
call ebx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov ebp eax
push ebp
push edi
push 0x148
push esi
call ebx
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push 0xf0
push esi
call [ SendMessageW@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
push 0xe
push esi
call [ SendMessageW@IAT ]
mov ebp eax
inc ebp
xor ecx ecx
mov eax ebp
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push ebp
mov ebx eax
push ebx
push esi
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
lea ecx [ esp + 0xc4 ]
push ecx
push eax
push 0x133c
push esi
mov [ esp + 0xd4 ] 0x8
call ebx
mov edx [ esp + 0xdc ]
mov [ edi ] edx
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push 0x208
call sub_41171a
mov edx [ esp + 0xe8 ]
add esp 0x4
cmp [ esp + 0xec ] 0x0
lea ecx [ esp + 0x7c ]
push ecx
push 0x0
mov esi eax
mov eax [ ebp + 0x8 ]
push edx
mov [ esp + 0x88 ] 0x30
push eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
cmp [ esp + 0xec ] 0x0
mov [ esp + 0x44 ] eax
mov [ esp + 0x40 ] 0x4
je r-xdata
mov edx [ ebp + 0x30 ]
lea ecx [ esp + 0x40 ]
push ecx
push 0x0
push 0x113e
push edx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x2000
call sub_41171a
add esp 0x4
lea edx [ esp + 0x40 ]
push edx
push 0x0
mov esi eax
mov eax [ ebp + 0x30 ]
push 0x113e
push eax
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] 0xfff
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
call sub_40c760
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push esi
call sub_453081
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push 0x16
call sub_41171a
movzx ecx [ esp + 0x72 ]
movzx edx [ esp + 0x6e ]
push ecx
mov esi eax
movzx eax [ esp + 0x70 ]
push edx
push eax
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x18
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov [ edi ] 0x4
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0xd0
retn 0xc
mov [ edi ] eax
push ebx
mov [ esp + 0x90 ] 0x1
call [ GetMenuItemInfoW@IAT ]
push esi
test eax eax
je r-xdata
mov [ esp + 0x90 ] 0x10
mov [ esp + 0xb0 ] esi
mov [ esp + 0xb4 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push 0x0
push 0x113e
push esi
call ebx
test eax eax
je r-xdata
push 0x2000
call sub_41171a
add esp 0x4
mov edi eax
lea eax [ esp + 0x40 ]
push eax
push 0x0
push 0x113e
push esi
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] 0xfff
call ebx
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov eax [ esp + 0x48 ]
test esi 0x100
je r-xdata
push esi
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
push 0x2000
call sub_41171a
xor ecx ecx
add esp 0x4
mov ebx eax
xor edi edi
cmp cx [ ebp + 0x8c ]
mov esi ebx
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x30 ] 0xfff
jge r-xdata
cmp [ esp + 0xec ] 0x0
je r-xdata
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
call sub_4112ef
mov ecx [ esp + 0x8c ]
mov dl cl
and dl 0x3
movsx eax dl
add esp 0x4
neg eax
sbb eax eax
and eax 0x40
add eax 0x40
mov [ edi ] ecx
test ecx 0x8080
je r-xdata
mov [ edi ] eax
mov edx [ esp + 0x64 ]
mov [ edi ] edx
push edi
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
test al 0x2
je r-xdata
mov ecx eax
shr ecx 0xc
dec ecx
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x4
mov [ edi ] ecx
mov edx [ ebp + 0x30 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x104b
push edx
mov [ esp + 0x30 ] edi
mov [ esp + 0x3c ] esi
call [ SendMessageW@IAT ]
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov eax [ ebp + 0x30 ]
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x104b
push eax
mov [ esp + 0x30 ] edi
mov [ esp + 0x3c ] esi
call [ SendMessageW@IAT ]
push esi
call sub_4112d5
mov ecx 0xffe
sub ecx eax
add esp 0x4
mov [ esp + 0x30 ] ecx
test ecx ecx
jle r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x104b
push esi
mov [ esp + 0x28 ] 0x8
mov [ esp + 0x38 ] 0xf000
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test cl 0x8
je r-xdata
or eax 0x100
test al 0x20
je r-xdata
or [ edi ] 0x100
push ebx
call sub_4112d5
mov cx [ rw-data ]
lea eax [ ebx + eax * 2 ]
add esp 0x4
xor edx edx
push eax
mov [ eax ] cx
mov [ eax + 0x2 ] dx
call [ CharNextW@IAT ]
mov esi eax
movsx eax [ ebp + 0x8c ]
inc edi
cmp edi eax
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
mov eax [ esp + 0x24 ]
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
mov [ edi ] eax
or eax 0x4
or eax 0x1
jmp r-xdata
test al 0x10
je r-xdata
or [ edi ] 0x400
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn 0xc
or eax 0x200
test ecx 0x1000
je r-xdata
or [ edi ] 0x200
sub_45619d
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_4340b2
mov [ rw-data ] eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x1c
cmp eax 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov esi [ edx ]
push ebp
mov ebp [ esi ]
mov [ esp + 0x1c ] 0x1
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push esi
add eax 0x28
call sub_4021e0
mov eax [ rw-data ]
cmp [ esp + 0x18 ] 0xffffffff
je r-xdata
push 0x10
push 0x10
push 0x10
push 0x1
push edi
push 0x0
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov [ esp + 0x20 ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call sub_435bc8
mov eax [ esi + 0x4c ]
add esp 0x4
test eax eax
jl r-xdata
push 0x50
push 0x0
push 0x0
push 0x1
push edi
push 0x0
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov [ esp + 0x24 ] eax
test eax eax
jne r-xdata
push ebx
call sub_436134
add esp 0x4
push 0x1
mov ebx eax
lea eax [ esp + 0x24 ]
push eax
push 0x0
push ebx
push edi
call [ ExtractIconExW@IAT ]
mov eax [ esp + 0x2c ]
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x50 ] eax
mov eax [ esp + 0x18 ]
push 0x1
push eax
mov [ esi + 0x4c ] eax
call sub_441a7a
push eax
call sub_4419ed
mov ecx [ esp + 0x20 ]
mov edi [ SendMessageW@IAT ]
mov ebx [ DestroyIcon@IAT ]
test ecx ecx
je r-xdata
push 0x1
push eax
lea ecx [ esp + 0x2c ]
push ecx
push ebx
call sub_436134
add esp 0x4
push eax
push edi
call [ ExtractIconExW@IAT ]
mov eax [ esp + 0x24 ]
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ esi + 0x54 ] eax
test eax eax
je r-xdata
push ecx
push 0x0
push 0x80
push ebp
call edi
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
pop ebp
pop edi
pop esi
pop ebx
retn 0x1c
push 0x1
push 0x0
push ebp
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
cmp [ esp + 0x20 ] 0x0
jne r-xdata
push eax
push 0x1
push 0x80
push ebp
call edi
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ esp + 0x24 ]
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x24 ]
push eax
call ebx
mov [ esp + 0x1c ] eax
sub_456354
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esi ]
lea eax [ esp + 0x10 ]
push eax
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
push edi
mov [ esi + 0x160 ] ecx
mov [ esi + 0x164 ] edx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
cmp eax [ esi + 0x168 ]
jne r-xdata
cmp [ esp + 0x24 ] 0x1
mov [ esi + 0x168 ] eax
mov [ esi + 0x16c ] ecx
jl r-xdata
cmp ecx [ esi + 0x16c ]
je r-xdata
mov ecx [ ebx + 0x18 ]
mov ebp [ __import_lookup_table_10(USER32:GetAsyncKeyState) ]
push ecx
call ebp
mov edx [ ebx + 0x1c ]
movzx edi ax
push edx
shr edi 0xf
call ebp
movzx ebp ax
shr ebp 0xf
cmp edi [ esi + 0x170 ]
je r-xdata
push ecx
push eax
push esi
push 0xfffffff5
push ebx
call sub_451aa9
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
cmp [ esp + 0x24 ] 0x1
jl r-xdata
cmp ebp [ esi + 0x174 ]
je r-xdata
mov [ esi + 0x170 ] edi
cmp [ esi + 0x19c ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp eax 0x1
jl r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov [ esi + 0x174 ] ebp
test ebp ebp
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push esi
push 0xfffffff8
push ebx
call sub_451aa9
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
push esi
push 0xfffffff9
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push esi
push 0xfffffff6
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
push esi
push 0xfffffff7
jmp r-xdata
mov [ esi + 0x178 ] 0x0
mov ecx [ esi ]
push 0xfffffff0
push ecx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x1000000
je r-xdata
push ebx
call sub_451aa9
push ebx
call sub_451aa9
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
push esi
push 0xfffffff4
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push esi
push 0xfffffffa
jmp r-xdata
sub_4564be
push ecx
mov eax [ rw-data ]
push esi
push edi
cmp [ rw-data ] eax
jne r-xdata
mov esi 0x3
cmp eax esi
jle r-xdata
cmp [ rw-data ] 0xffff
jne r-xdata
push 0x98
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x98
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
pop ecx
retn 0x4
xor edi edi
push eax
call sub_451cb3
mov edi eax
jmp r-xdata
inc esi
cmp esi eax
jl r-xdata
xor edi edi
push eax
call sub_451cb3
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ esp + 0x10 ]
mov [ ecx ] edi
mov eax [ edx + 0x4 ]
mov [ edi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ecx
retn 0x4
mov edx [ ecx + esi * 4 ]
cmp [ edx ] 0x0
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov esi rw-data
mov [ esp + 0xc ] edi
call sub_40dd50
mov esi [ rw-data ]
inc esi
mov [ rw-data ] esi
jmp r-xdata
sub_45657d
sub esp 0x8c
push ebx
push ebp
push esi
mov esi [ esp + 0x9c ]
mov ebp [ esi + 0x8 ]
xor eax eax
xor bl bl
push edi
mov edi ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x12 ] al
mov [ esp + 0x13 ] al
cmp ebp 0x4
jb r-xdata
cmp ebp 0x5
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
jne r-xdata
cmp ebp 0x6
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_453081
mov [ esp + 0x20 ] eax
mov [ esp + 0x38 ] 0x2c
mov [ esp + 0x3c ] 0x1a0
test bl bl
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c760
mov [ esp + 0x24 ] eax
xor eax eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x44 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
xor ebx ebx
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x60 ] eax
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x4c ] ebx
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov eax 0x10
add [ esp + 0x14 ] eax
add [ esp + 0x18 ] eax
lea edx [ esp + 0x28 ]
push edx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
cmp ebp 0x2
jb r-xdata
mov [ esp + 0x3c ] 0x1a2
mov ecx [ esp + 0x1c ]
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
and al 0x1
mov [ esp + 0x12 ] al
call sub_40c760
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
mov ebx eax
shr bl 0x1
and bl 0x1
call sub_40c760
shr al 0x2
and al 0x1
mov [ esp + 0x13 ] al
cmp ebp 0x3
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
jne r-xdata
cmp [ esp + 0x12 ] 0x0
push 0xfffffff0
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0x8 ]
push esi
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c760
mov [ esp + 0x14 ] eax
mov eax [ edi + 0xe8 ]
push eax
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test al 0x40
je r-xdata
mov edx [ edi + 0xe8 ]
push edx
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test al 0x40
je r-xdata
mov ecx esi
call sub_40c760
mov [ esp + 0x18 ] eax
mov eax [ edi + 0xe8 ]
cmp eax ebx
jne r-xdata
mov ecx [ edi + 0xe8 ]
push ecx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov [ edi + 0xe8 ] ebx
jmp r-xdata
mov ebp [ SendMessageW@IAT ]
lea edx [ esp + 0x38 ]
push edx
push ebx
push 0x439
push eax
cmp [ esp + 0x12 ] 0x0
mov eax 0x3
je r-xdata
mov esi [ esp + 0xa4 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi + 0xe8 ]
push 0x0
push 0x0
push 0x41d
push eax
call ebp
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push eax
push ebx
push r--data
push 0x8
call [ __import_lookup_table_10(USER32:CreateWindowExW) ]
mov ebp [ SendMessageW@IAT ]
lea edx [ esp + 0x38 ]
push edx
push ebx
push 0x432
push eax
mov [ edi + 0xe8 ] eax
call ebp
mov eax [ esp + 0x30 ]
mov ecx [ edi + 0xe8 ]
push eax
push 0x0
push 0x418
push ecx
jmp r-xdata
mov eax 0x43
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov edx [ edi + 0xe8 ]
push 0xd8f0d8f0
push eax
push 0x412
push edx
call ebp
mov ecx [ edi + 0xe8 ]
lea eax [ esp + 0x38 ]
push eax
push 0x1
push 0x411
push ecx
call ebp
mov ecx [ edi + 0xe8 ]
push ecx
call [ __import_lookup_table_10(USER32:IsWindowVisible) ]
test eax eax
jne r-xdata
call ebp
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov edx [ edi + 0xe8 ]
push eax
push ecx
push 0x421
push edx
call ebp
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov eax [ edi + 0xe8 ]
lea edx [ esp + 0x64 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov esi [ esp + 0x6c ]
mov ebx [ esp + 0x70 ]
mov ecx [ esp + 0x18 ]
sub esi [ esp + 0x64 ]
sub ebx [ esp + 0x68 ]
mov edx [ esp + 0x14 ]
push 0x2
push ecx
push edx
inc esi
inc ebx
call [ __import_lookup_table_10(USER32:MonitorFromPoint) ]
lea ecx [ esp + 0x74 ]
push ecx
push eax
mov [ esp + 0x7c ] 0x28
call [ __import_lookup_table_10(USER32:GetMonitorInfoW) ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x28 ]
cmp ecx eax
jl r-xdata
lea edx [ esp + 0x78 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call [ CopyRect@IAT ]
mov ecx eax
mov [ esp + 0x14 ] ecx
mov eax [ esp + 0x30 ]
sub eax esi
cmp ecx eax
jle r-xdata
mov eax edx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov edx [ esp + 0x34 ]
sub edx ebx
cmp eax edx
jle r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
cmp eax edx
jl r-xdata
movzx edx ax
movzx eax cx
mov ecx [ edi + 0xe8 ]
shl edx 0x10
or edx eax
push edx
push 0x0
push 0x412
push ecx
call ebp
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8c
retn 0x8
sub_45691b
push ebx
push edi
mov edi [ esp + 0xc ]
mov ebx [ edi + 0x8 ]
push r--data
mov eax rw-data
mov [ rw-data ] 0x0
call sub_4021e0
test ebx ebx
jbe r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push esi
push eax
call sub_453063
push eax
mov esi rw-data
call sub_40df50
pop esi
push rw-data
call sub_444812
pop edi
xor eax eax
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
push eax
call sub_436134
add esp 0x4
mov [ rw-data ] eax
sub_456988
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
push 0xffffffff
push ecx
call sub_453081
push eax
mov ecx esi
call sub_40c760
push eax
call sub_45377f
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_4569c7
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
call sub_40c760
push eax
push r--data
mov ecx esi
call sub_40c760
push eax
call sub_45377f
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_456a08
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_40c760
push eax
call sub_444652
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov ebx [ esp + 0x18 ]
mov edi r--data
call sub_40e6d0
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x8
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x8
sub_456a76
push ecx
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x4 ]
push eax
call sub_40c760
push eax
call sub_444652
test eax eax
je r-xdata
xor eax eax
pop ecx
retn 0x8
push esi
mov esi [ esp + 0x10 ]
call sub_4092c0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
call sub_4112ef
add esp 0x4
pop esi
sub_456ac4
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov eax [ esp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
lea edx [ esp + 0xc ]
push edx
call sub_40c760
push eax
call sub_444571
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x8
call sub_4092c0
mov eax [ esp + 0xc ]
mov [ esi + 0x8 ] 0x7
mov [ esi ] eax
sub_456b10
sub esp 0x14
push esi
lea eax [ esp + 0x4 ]
push eax
mov esi ecx
call sub_447e59
cmp [ rw-data ] 0x1
je r-xdata
push r--data
lea eax [ esp + 0xc ]
mov [ esp + 0x8 ] 0x0
call sub_4021e0
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
call sub_453b07
test al al
jne r-xdata
mov esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
call sub_402620
xor eax eax
pop esi
add esp 0x14
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
cmp [ rw-data ] 0x1
jne r-xdata
sub_456b93
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call sub_4134ef
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456bf6
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call sub_437b6b
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456c59
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call [ IsCharUpperW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456cba
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call [ IsCharLowerW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456d1b
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call sub_4134b0
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456d7e
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call sub_41349d
add esp 0x4
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456de1
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call [ __import_lookup_table_10(USER32:IsCharAlphaNumericW) ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456e42
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call [ IsCharAlphaW@IAT ]
test eax eax
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_456ea3
mov eax [ esp + 0x4 ]
push esi
push edi
push eax
call sub_453081
mov esi eax
mov edi 0x1
test esi esi
je r-xdata
pop edi
xor al al
pop esi
retn 0x4
cmp [ esi ] 0x0
je r-xdata
push r--data
push esi
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
mov al 0x1
pop esi
retn 0x4
mov eax edi
sub eax 0x1
je r-xdata
movzx eax [ esi ]
add eax 0xffffffd5
cmp eax 0xe
ja r-xdata
sub eax 0x1
jne r-xdata
movzx edx [ eax + lookup_table_456f4f ]
jmp [ edx * 4 + jump_table_456f43 ]
cmp [ esi ] 0x0
jne r-xdata
movzx ecx [ esi ]
push ecx
call sub_413b67
add esp 0x4
test eax eax
je r-xdata
add esi 0x2
mov edi 0x2
add esi 0x2
jmp r-xdata
sub_456f52
add al [ edx ]
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_456ea3
mov esi [ esp + 0x10 ]
movzx edi al
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_456f8b
mov eax [ esp + 0x4 ]
push esi
push edi
push eax
call sub_453081
mov esi eax
mov edi 0x1
test esi esi
je r-xdata
pop edi
xor al al
pop esi
retn 0x4
cmp [ esi ] 0x0
je r-xdata
push r--data
push esi
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
lea eax [ edi - 0x1 ]
cmp eax 0x3
ja r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_45708b ]
cmp edi 0x4
jne r-xdata
movzx eax [ esi ]
add eax 0xffffffd5
cmp eax 0xe
ja r-xdata
movzx edx [ esi ]
push edx
call sub_413b67
add esp 0x4
test eax eax
jne r-xdata
mov edi 0x4
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_413b67
add esp 0x4
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x4
movzx ecx [ eax + lookup_table_4570ab ]
jmp [ ecx * 4 + jump_table_45709b ]
add esi 0x2
cmp [ esi ] 0x2e
jne r-xdata
add esi 0x2
mov edi 0x2
jmp r-xdata
mov edi 0x3
jmp r-xdata
sub_4570af
add eax [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add cl [ ebx - 0x74fbdbbc ]
dec eax
add al 0x8b
add [ esi + 0x57 ] edx
push eax
call sub_456f8b
mov esi [ esp + 0x10 ]
movzx edi al
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_4570e7
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_453081
push eax
call sub_436d9f
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
add esp 0x8
push edi
push eax
call sub_453081
push eax
call sub_436dc8
mov ebx [ esp + 0x1c ]
add esp 0x8
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_457149
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push ebx
push edi
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov edi eax
push edi
call sub_436e04
mov ebx [ esp + 0x14 ]
add esp 0x4
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
pop edi
xor eax eax
pop ebx
retn 0x8
sub_457185
sub esp 0x10
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
call sub_410a40
mov edi esi
mov esi [ esp + 0x20 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_4571db
sub esp 0x10
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] edx
call sub_45335b
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_457234
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
or ebp 0xffffffff
push eax
mov edi ecx
xor ebx ebx
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] ebp
call sub_453063
mov ecx [ esi + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_453063
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x8 ]
add eax 0xfffffffe
cmp eax 0x4
ja r-xdata
mov edi ebx
jmp [ eax * 4 + jump_table_4573b0 ]
call sub_4092c0
inc edi
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
call sub_4092c0
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
mov ebp eax
sub ebp 0x1
jns r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov ebx eax
test ebx ebx
jl r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
push edx
push ebp
push eax
mov eax [ esp + 0x20 ]
push eax
push ebx
push ecx
mov ecx [ esp + 0x3c ]
push ecx
call sub_442c52
mov edi eax
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c760
mov [ esp + 0x10 ] eax
test eax eax
jg r-xdata
mov esi [ esp + 0x28 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov esi [ esp + 0x28 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor ebx ebx
cmp ebx 0x3
jle r-xdata
mov edx [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
cmp edi [ edx + 0x4 ]
jne r-xdata
mov esi [ esp + 0x28 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
sub_4573c4
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ecx [ edi + 0x4 ]
mov esi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_453063
mov ebx eax
xor eax eax
cmp [ edi + 0x8 ] 0x3
jb r-xdata
push eax
push ebx
push esi
call sub_445a57
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
test eax eax
jl r-xdata
xor eax eax
cmp eax 0x3
jle r-xdata
cmp eax 0x1
jne r-xdata
mov ecx ebx
call sub_40c0b0
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
retn 0x8
sub_457436
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453063
mov esi [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_457463
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
mov [ ecx + 0x4 ] edx
cmp eax [ esi ]
jne r-xdata
mov [ edx + 0x8 ] ecx
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi ] edx
push eax
call sub_45231a
mov [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
retn 0x8
mov [ esi + 0x4 ] ecx
sub_4574a5
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx ]
push esi
lea esi [ eax + 0x468 ]
call sub_40be90
sub esp 0x8
fstp [ esp ]
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_44a43b
push ecx
lea eax [ esp + 0xc ]
mov [ esp ] 0x0
call sub_40f090
test al al
je r-xdata
xor eax eax
pop esi
retn 0x8
lea ecx [ esp + 0x8 ]
push ecx
push esi
call sub_457463
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_457509
sub esp 0x8
mov eax [ esp + 0x10 ]
fld [ eax ]
push esi
push edi
fstp [ esp + 0x8 ]
mov edi [ esp + 0x14 ]
add edi 0x4
mov eax edi
call sub_404110
mov esi eax
call sub_4092c0
fld [ esp + 0x8 ]
mov eax edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_404110
pop edi
mov [ eax + 0x10 ] 0x0
pop esi
add esp 0x8
retn 0x8
sub_45754d
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax ]
push ecx
call sub_453333
mov esi [ esp + 0x14 ]
test al al
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx ]
call sub_40c760
push eax
add edi 0x15c
push edi
call sub_437c4f
test eax eax
sete al
mov [ esp + 0x10 ] al
mov ecx [ esp + 0x10 ]
push ecx
push esi
call sub_452d91
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_4575ae
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov esi [ ecx ]
push esi
call sub_4423f9
test al al
jne r-xdata
push esi
call sub_435611
mov esi [ esp + 0x10 ]
mov edi [ eax + 0xc ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
xor eax eax
pop esi
retn 0x8
sub_457614
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_4423f9
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_457644
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
test eax eax
jle r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
cmp eax [ esi + 0x1a0 ]
jg r-xdata
mov edx [ esi + 0x19c ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ecx [ eax ]
mov esi [ esp + 0xc ]
push edi
mov edi [ ecx + 0x10 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
sub_4576a6
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
mov esi eax
sub esi 0x1
js r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
cmp esi [ edi + 0x1a0 ]
jge r-xdata
mov edx [ edi + 0x19c ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x10 ]
push 0x8000
push 0x0
push ecx
call [ VirtualFree@IAT ]
mov edx [ edi + 0x19c ]
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ edi + 0x19c ]
mov edx [ ecx + esi * 4 ]
pop edi
mov [ edx ] 0x0
xor eax eax
pop esi
retn 0x8
push eax
call sub_44afc1
sub_457730
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
mov esi eax
sub esi 0x1
js r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
cmp esi [ edi + 0x190 ]
jge r-xdata
mov edx [ edi + 0x18c ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
push eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
mov ecx [ edi + 0x18c ]
mov edx [ ecx + esi * 4 ]
pop edi
mov [ edx ] 0x0
xor eax eax
pop esi
retn 0x8
sub_45779b
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call [ LoadLibraryW@IAT ]
mov [ esp + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx [ esi + 0x190 ]
push edi
xor edi edi
test ecx ecx
jbe r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
cmp edi ecx
jne r-xdata
mov edx [ esi + 0x18c ]
push ebx
mov ecx [ esi + 0x18c ]
mov edx [ ecx + edi * 4 ]
mov [ edx ] eax
lea edx [ esp + 0xc ]
push edx
add esi 0x188
push esi
call sub_434343
jmp r-xdata
pop ebx
inc edi
add edx 0x4
cmp edi ecx
jb r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
inc edi
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov ebx [ edx ]
cmp [ ebx ] 0x0
je r-xdata
sub_457838
sub esp 0xc
push ebx
mov ebx [ esp + 0x14 ]
xor eax eax
cmp [ ebx + 0xc ] eax
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
mov [ ebx + 0x2c ] eax
mov [ esp + 0x24 ] eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
lea edi [ eax + 0x10 ]
lea esi [ ebx + 0x30 ]
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x8 ]
cmp eax 0xf
ja r-xdata
mov eax [ esp + 0x24 ]
inc eax
add edi 0x8
add esi 0x18
cmp eax [ ebx + 0xc ]
mov [ esp + 0x24 ] eax
jl r-xdata
jmp [ eax * 4 + jump_table_457a58 ]
xor eax eax
mov eax [ ebp + 0x4 ]
mov eax [ edi + eax ]
push eax
call sub_453081
push eax
call sub_4112d5
add esp 0x4
cmp eax 0x10000
jae r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ edi + eax ]
push eax
call sub_453081
push eax
call sub_4112d5
add esp 0x4
cmp eax 0x10000
jae r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ edi + eax ]
call sub_40c760
mov [ esi ] eax
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov eax [ edi + ecx ]
push eax
call sub_443576
mov [ esi ] eax
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov ecx [ edi + edx ]
call sub_40c760
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ edi + eax ]
call sub_40c760
mov [ esi ] ax
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov ecx [ edi + ecx ]
call sub_40c760
mov [ esi ] al
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov ecx [ edi + edx ]
call sub_40c760
mov [ esi ] al
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ edi + eax ]
call sub_40be90
fstp [ esi ]
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov ecx [ edi + ecx ]
call sub_40be90
fstp [ esi ]
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edi + edx ]
push eax
call sub_44b390
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ edi + eax ]
push eax
call sub_443576
mov [ esi ] eax
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edi + edx ]
push eax
call sub_443576
mov [ esi ] eax
mov [ esi + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ edi + eax ]
push eax
call sub_443576
mov [ esi ] eax
mov [ esi + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov edx [ edi + ecx ]
push edx
call sub_43550e
test al al
je r-xdata
inc eax
push eax
call sub_4138ba
mov ecx [ ebp + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax [ edi + ecx ]
add esp 0x4
push eax
call sub_453081
mov ebx eax
call sub_40f580
mov ebx [ esp + 0x14 ]
push eax
push ebx
mov [ esp + 0x20 ] eax
call sub_413990
mov edx [ esp + 0x20 ]
push edx
call sub_4112ef
mov [ esi ] ebx
mov [ esi + 0x14 ] ebx
mov ebx [ esp + 0x2c ]
add esp 0xc
jmp r-xdata
mov eax 0x10000
lea ecx [ eax + eax + 0x2 ]
push ecx
call sub_4138ba
mov edx [ ebp + 0x4 ]
mov ebx eax
mov eax [ edi + edx ]
add esp 0x4
push eax
call sub_453081
push eax
push ebx
call sub_411691
mov [ esi ] ebx
mov [ esi + 0x14 ] ebx
mov ebx [ esp + 0x28 ]
add esp 0x8
jmp r-xdata
mov eax 0x10000
mov [ esi ] 0x0
mov edx [ edx ]
mov eax [ edx + 0x8 ]
mov [ esi ] eax
jmp r-xdata
sub_457a98
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
mov ebx [ esp + 0x10 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x14 ]
push ecx
push eax
call sub_453081
push eax
call sub_444233
add esp 0xc
cmp [ esp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov edx [ esp + 0x10 ]
push ebp
push edx
push 0x0
push 0x200
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov ebp eax
test ebp ebp
je r-xdata
pop ebp
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
cmp eax 0x5
ja r-xdata
push ebp
call [ CloseHandle@IAT ]
jmp [ eax * 4 + jump_table_457b84 ]
mov eax 0x40
jmp r-xdata
mov eax 0x4000
jmp r-xdata
mov eax 0x20
jmp r-xdata
mov eax 0x8000
jmp r-xdata
mov eax 0x80
jmp r-xdata
mov eax 0x100
push eax
push ebp
call [ SetPriorityClass@IAT ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x0
add eax edi
call sub_4040e0
sub_457b9c
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x8 ] 0x1
mov esi ecx
mov eax 0x80000000
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
push eax
call sub_40c760
push eax
call sub_4364aa
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
or eax 0x40000000
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_457c08
sub esp 0x50
push ebx
push ebp
mov ebp [ esp + 0x64 ]
push esi
push edi
lea ecx [ esp + 0x14 ]
call sub_40c060
xor esi esi
push 0x3c
lea eax [ esp + 0x28 ]
push esi
push eax
xor ebx ebx
mov [ esp + 0x78 ] esi
mov [ esp + 0x1c ] 0x1
call sub_4131f0
add esp 0xc
cmp [ esp + 0x70 ] 0x2
jb r-xdata
cmp [ esp + 0x70 ] 0x3
jb r-xdata
mov ecx [ ebp + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
cmp [ eax ] bx
je r-xdata
cmp [ esp + 0x70 ] 0x4
jb r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov [ esp + 0x6c ] eax
mov esi eax
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov ebx eax
cmp [ esp + 0x70 ] 0x5
jb r-xdata
mov ecx [ ebp + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_453081
cmp [ eax ] 0x0
je r-xdata
push 0x3c
lea edx [ esp + 0x28 ]
push 0x0
push edx
call sub_4131f0
mov eax [ esp + 0x20 ]
mov ecx [ ebp + 0x4 ]
mov [ esp + 0x30 ] 0x3c
mov [ esp + 0x34 ] 0x40
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] eax
mov eax [ ecx ]
add esp 0xc
push eax
call sub_453081
mov edx [ esp + 0x10 ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] edx
call [ ShellExecuteExW@IAT ]
mov edi eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
movzx ecx ax
mov [ esp + 0x10 ] ecx
mov edx [ ebp + 0x4 ]
mov edi [ edx + 0xc ]
push edi
call sub_44adff
test al al
jne r-xdata
test esi esi
je r-xdata
push ebx
call sub_4112ef
add esp 0x4
push edi
call sub_453063
push eax
lea esi [ esp + 0x18 ]
call sub_40df50
mov esi [ esp + 0x6c ]
test edi edi
jne r-xdata
push esi
call sub_4112ef
add esp 0x4
cmp [ esp + 0x68 ] 0x0
je r-xdata
mov ecx [ esp + 0x64 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
push 0x1
add eax ecx
call sub_4040e0
mov esi [ esp + 0x74 ]
call sub_4092c0
lea ecx [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x50
retn 0x14
mov esi [ esp + 0x74 ]
call sub_4092c0
mov eax [ esp + 0x5c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x64 ]
mov [ ecx + 0x450 ] eax
lea ecx [ esp + 0x14 ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x50
retn 0x14
lea ecx [ esp + 0x14 ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x50
retn 0x14
push eax
call [ CloseHandle@IAT ]
sub_457e13
push ecx
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0xb ]
push edx
lea ecx [ esp + 0x14 ]
push ecx
push eax
mov [ esp + 0x17 ] 0x0
call sub_453081
push eax
call sub_444233
mov esi [ esp + 0x20 ]
add esp 0xc
test al al
jne r-xdata
call sub_4092c0
cmp [ esp + 0xb ] 0x0
je r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ecx
retn 0x8
mov eax [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x3
test eax eax
jge r-xdata
pop edi
fstp [ esi ]
xor eax eax
pop esi
pop ecx
retn 0x8
fadd [ r--data ]
sub_457eb5
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
push esi
call sub_453333
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push eax
lea esi [ ebx + 0x438 ]
call sub_40df50
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov ecx esi
call sub_40c760
test eax eax
jne r-xdata
mov [ ebx + 0x448 ] 0x0
call [ timeGetTime@IAT ]
pop edi
mov [ ebx + 0x44c ] eax
pop esi
mov al 0x1
pop ebx
retn 0xc
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
imul eax eax 0x3e8
mov [ ebx + 0x448 ] eax
call [ timeGetTime@IAT ]
pop edi
mov [ ebx + 0x44c ] eax
pop esi
mov al 0x1
pop ebx
retn 0xc
pop edi
pop esi
xor al al
pop ebx
retn 0xc
sub_457f49
mov eax 0x2020
call sub_425210
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x10 ]
call sub_40c060
lea ecx [ esp + 0x20 ]
call sub_40c060
mov eax [ esp + 0x2034 ]
push eax
xor ebp ebp
call sub_453081
mov esi eax
movzx eax [ esi ]
xor bl bl
test ax ax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2020
retn 0x4
nop
push eax
lea eax [ esp + 0x14 ]
call sub_403470
cmp [ esi + ebp * 2 ] ax
jne r-xdata
inc ebp
cmp ax 0x25
jne r-xdata
test bl bl
je r-xdata
push r--data
lea eax [ esp + 0x24 ]
call sub_4021e0
movzx eax [ esi + ebp * 2 ]
cmp ax 0x25
je r-xdata
push 0x25
lea eax [ esp + 0x14 ]
mov bl 0x1
call sub_403470
inc ebp
jmp r-xdata
mov esi [ esp + 0x2034 ]
lea edi [ esp + 0x10 ]
call sub_40e640
cmp [ esi + ebp * 2 ] 0x0
je r-xdata
lea esp [ esp ]
movzx eax [ esi + ebp * 2 ]
test ax ax
jne r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x14 ]
call sub_40c140
jmp r-xdata
mov eax [ esp + 0x20 ]
push 0xfff
lea edx [ esp + 0x34 ]
push edx
xor ecx ecx
push eax
inc ebp
mov [ esp + 0x3c ] cx
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
test eax eax
lea eax [ esp + 0x10 ]
je r-xdata
movzx eax ax
push eax
lea eax [ esp + 0x24 ]
call sub_403470
movzx eax [ esi + ebp * 2 + 0x2 ]
inc ebp
cmp ax 0x25
jne r-xdata
mov edi r--data
mov bl 0x1
call sub_40d330
lea ecx [ esp + 0x20 ]
push ecx
lea eax [ esp + 0x14 ]
call sub_40c140
lea eax [ esp + 0x10 ]
call sub_40d330
jmp r-xdata
lea edi [ esp + 0x30 ]
call sub_40d330
mov bl 0x1
jmp r-xdata
test ax ax
je r-xdata
sub_4580b1
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_43550e
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_4580e1
sub esp 0x264
push ebp
mov ebp [ esp + 0x278 ]
push esi
mov esi [ esp + 0x274 ]
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0xc ] 0x0
call sub_40c060
lea ecx [ esp + 0x18 ]
call sub_40c060
lea ecx [ esp + 0x38 ]
call sub_40c060
push r--data
lea eax [ esp + 0x2c ]
call sub_4021e0
mov edi [ esp + 0x274 ]
lea eax [ esp + 0x28 ]
call sub_40d330
mov edi r--data
lea eax [ esp + 0x28 ]
call sub_40d330
push r--data
lea eax [ esp + 0x1c ]
call sub_4021e0
test esi esi
je r-xdata
test ebp ebp
je r-xdata
cmp [ esi ] 0x5c
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
push edx
push 0x80000002
push eax
call [ RegConnectRegistryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x20
lea eax [ esp + 0x4c ]
push 0x0
push eax
call sub_4131f0
add esp 0xc
lea ecx [ esp + 0x18 ]
push ecx
lea esi [ esp + 0x3c ]
mov [ esp + 0x50 ] 0x0
call sub_40df50
mov edi r--data
mov eax esi
call sub_40d330
mov eax [ esp + 0x284 ]
mov edx [ esp + 0x38 ]
push 0x0
push ebp
push eax
lea ecx [ esp + 0x54 ]
push ecx
mov [ esp + 0x6c ] edx
call WNetAddConnection2W
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x2 ] 0x5c
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_402620
lea ecx [ esp + 0x28 ]
call sub_402620
pop edi
mov eax esi
pop esi
pop ebp
add esp 0x264
retn
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0xc ]
push ecx
push 0x20019
push eax
mov eax [ esp + 0x20 ]
push edx
push eax
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
mov ebp [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea eax [ esp + 0x1c ]
call sub_4021e0
mov edi esi
lea eax [ esp + 0x18 ]
call sub_40d330
mov ecx [ esp + 0x14 ]
push ecx
call ebp
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x6c ]
push edx
push 0x0
push 0x0
push 0x0
push eax
mov [ esp + 0x28 ] 0x1fe
call [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0xc ]
push eax
call ebp
mov eax [ esp + 0x10 ]
shr eax 0x1
xor ecx ecx
lea edi [ esp + 0x68 ]
mov [ esp + 0x10 ] eax
mov [ esp + eax * 2 + 0x68 ] cx
call sub_40fff0
mov edx [ esp + 0x27c ]
mov edi eax
push edx
push edi
call [ __import_lookup_table_6(ole32:CLSIDFromString) ]
push edi
mov esi eax
call sub_4137d3
add esp 0x4
sub_4582bf
sub esp 0x24c
push ebx
push ebp
mov ebp [ esp + 0x258 ]
push esi
push edi
lea ecx [ esp + 0x30 ]
call sub_40c060
fld1
lea eax [ esp + 0x24 ]
fstp [ esp + 0x28 ]
push eax
push ebp
call [ StringFromIID@IAT ]
mov esi eax
test esi esi
jl r-xdata
lea ecx [ esp + 0x30 ]
call sub_402620
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x24c
retn
mov edi [ esp + 0x24 ]
call sub_40fff0
mov esi eax
push r--data
lea eax [ esp + 0x34 ]
call sub_4021e0
mov edi esi
lea eax [ esp + 0x30 ]
call sub_40d330
mov edi r--data
lea eax [ esp + 0x30 ]
call sub_40d330
push esi
call sub_4137d3
mov ecx [ esp + 0x28 ]
add esp 0x4
push ecx
call [ CoTaskMemFree@IAT ]
mov eax [ esp + 0x30 ]
lea edx [ esp + 0x1c ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000000
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
mov esi eax
test esi esi
jne r-xdata
mov ebx [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x54 ]
push edx
push eax
push eax
push eax
mov eax [ esp + 0x30 ]
push eax
mov [ esp + 0x2c ] 0x1fe
call ebx
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
mov eax [ esp + 0x14 ]
shr eax 0x1
xor ecx ecx
lea edi [ esp + 0x50 ]
mov [ esp + 0x14 ] eax
mov [ esp + eax * 2 + 0x50 ] cx
call sub_40fff0
lea edx [ esp + 0x40 ]
mov edi eax
push edx
push edi
call [ __import_lookup_table_6(ole32:CLSIDFromString) ]
push edi
mov esi eax
call sub_4137d3
add esp 0x4
test esi esi
jl r-xdata
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x54 ]
push ecx
push 0x0
push 0x0
push r--data
push edx
mov [ esp + 0x2c ] 0x1fe
call ebx
test eax eax
jne r-xdata
fld1
lea eax [ esp + 0x20 ]
push eax
push 0x0
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ esp + 0x40 ]
fstp [ esp ]
call sub_415a50
fnstcw [ esp + 0x2a ]
add esp 0x10
movzx eax [ esp + 0x1a ]
or eax 0xc00
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
fistp [ esp + 0x20 ]
mov cx [ esp + 0x20 ]
movzx edx cx
push edx
fldcw [ esp + 0x1e ]
lea edx [ esp + 0x4c ]
fld [ esp + 0x34 ]
fnstcw [ esp + 0x1e ]
movzx eax [ esp + 0x1e ]
or eax 0xc00
mov [ esp + 0x24 ] eax
fldcw [ esp + 0x24 ]
fistp [ esp + 0x24 ]
mov ax [ esp + 0x24 ]
movzx ecx ax
push ecx
fldcw [ esp + 0x22 ]
push edx
call [ LoadRegTypeLib@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ esp + 0x14 ]
shr eax 0x1
lea edx [ esp + 0x50 ]
xor ecx ecx
push edx
mov [ esp + 0x18 ] eax
mov [ esp + eax * 2 + 0x54 ] cx
call sub_413f97
fstp [ esp + 0x2c ]
add esp 0x4
mov edx [ esp + 0x264 ]
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push ebp
push eax
mov eax [ ecx + 0x18 ]
call eax
mov esi eax
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4584d6
sub esp 0x284
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x20 ]
mov esi 0x80004002
xor ebx ebx
mov [ esp + 0x14 ] 0x28
call sub_40c060
mov ebp [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
lea eax [ esp + 0x1c ]
push eax
push 0x20019
push ebx
push r--data
push 0x80000000
call ebp
test eax eax
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x284
retn
lea ecx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x20 ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x4c ]
push eax
push ebx
push ecx
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
mov eax [ esp + 0x14 ]
xor edx edx
mov [ esp + eax * 2 + 0x38 ] dx
push r--data
lea eax [ esp + 0x24 ]
mov [ esp + 0x18 ] 0x1fe
call sub_4021e0
lea edi [ esp + 0x38 ]
lea eax [ esp + 0x20 ]
call sub_40d330
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000000
call ebp
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x8c ]
push ecx
push 0x0
push 0x0
push 0x0
push edx
call [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
test eax eax
jne r-xdata
inc ebx
mov [ esp + 0x14 ] 0x28
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x29c ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0x14 ] eax
mov [ esp + eax * 2 + 0x88 ] cx
push edx
lea eax [ esp + 0x8c ]
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x298 ]
push ecx
push edi
call [ IIDFromString@IAT ]
mov esi eax
sub_458631
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
dec eax
push ebx
push edi
cmp eax 0xb
ja r-xdata
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
jmp [ eax * 4 + jump_table_458761 ]
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
sub_458791
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_442754
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_4587c1
push ecx
push esi
push edi
mov esi ecx
call Ordinal_WSOCK32_116
mov edi eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push edi
add eax esi
call sub_4040e0
mov eax [ esp + 0x14 ]
test edi edi
sete cl
mov [ esp + 0x8 ] cl
mov edx [ esp + 0x8 ]
push edx
push eax
call sub_452d91
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
sub_4587fc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x198
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
push 0x202
mov esi ecx
call Ordinal_WSOCK32_115
mov ecx [ esi ]
mov edi eax
mov eax [ ecx + 0x4 ]
push 0x0
push edi
add eax esi
call sub_4040e0
mov ecx [ ebp + 0xc ]
test edi edi
sete dl
mov [ esp + 0xc ] dl
mov eax [ esp + 0xc ]
push eax
push ecx
call sub_452d91
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_45884d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
push eax
call Ordinal_WSOCK32_3
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov [ esp + 0x8 ] 0x1
mov eax [ esp + 0x8 ]
push eax
push ecx
call sub_452d91
xor eax eax
pop esi
retn 0x8
push 0x0
call Ordinal_WSOCK32_111
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
mov ecx [ esp + 0xc ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
push ecx
call sub_452d91
xor eax eax
pop esi
retn 0x8
sub_4588b0
sub esp 0x10c
mov eax [ esp + 0x110 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push edi
call sub_40c760
mov ecx [ esi + 0x478 ]
mov edi eax
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ esp + 0x8 ]
push edx
push 0x0
sub ecx eax
mov [ esp + 0x10 ] eax
push 0x0
lea eax [ esp + 0x1c ]
push eax
push 0x0
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] 0x1
call Ordinal_WSOCK32_18
test eax eax
jle r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
mov esi [ esp + 0x11c ]
call sub_4092c0
pop edi
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x10c
retn 0x8
lea ecx [ esp + 0x10 ]
push ecx
push edi
call Ordinal_WSOCK32_151
test eax eax
je r-xdata
push 0x0
push 0x0
push edi
call Ordinal_WSOCK32_1
mov esi [ esp + 0x11c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x10c
retn 0x8
sub_45898a
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_442fb2
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_4589ba
sub esp 0x10
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
call sub_410a40
push esi
call sub_453495
mov esi [ esp + 0x20 ]
mov edi eax
call sub_4092c0
lea ecx [ esp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_458a21
sub esp 0x2c
push ebx
mov ebx [ esp + 0x34 ]
mov eax [ ebx + 0x8 ]
push ebp
push esi
mov esi ecx
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
push edi
push eax
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x2c ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] edx
call sub_453063
mov ecx [ eax + 0x4 ]
mov edi [ eax ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] edx
xor ebp ebp
call sub_40c760
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x10 ] ebp
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
mov [ esp + 0x44 ] eax
call sub_44adff
test al al
jne r-xdata
cmp [ esp + 0x20 ] 0x4000
jbe r-xdata
add esi 0xb8
push esi
lea esi [ esp + 0x30 ]
call sub_40df50
mov ecx [ esp + 0x40 ]
call sub_40c760
or eax 0x10000
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x5
jb r-xdata
or eax 0xffffffff
mov edi 0x4000
lea esi [ esp + 0x1c ]
call sub_40c740
mov edi [ esp + 0x1c ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_44adff
test al al
je r-xdata
cmp [ ebx + 0x8 ] 0x4
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_44b390
mov ebp eax
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
push eax
push ecx
push edi
push ebp
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
mov edx [ ebx + 0x4 ]
mov esi [ edx + 0xc ]
push esi
call sub_44adff
test al al
jne r-xdata
mov ecx esi
call sub_40be90
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fmul [ r--data ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x2c ]
fnstcw [ esp + 0x40 ]
movzx eax [ esp + 0x40 ]
or eax 0xc00
mov [ esp + 0x14 ] eax
fldcw [ esp + 0x14 ]
fistp [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push eax
push ecx
fldcw [ esp + 0x48 ]
push edx
push edi
push ebp
call sub_44419b
add esp 0x14
jmp r-xdata
fstp st0
fldz
mov esi [ esp + 0x44 ]
mov edi eax
call sub_4092c0
lea ecx [ esp + 0x1c ]
mov [ esi ] edi
mov [ esi + 0x8 ] 0x1
call sub_402620
lea ecx [ esp + 0x2c ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2c
retn 0x8
sub_458bca
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3a8
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] 0x3a8
mov [ esp + 0x14 ] 0x10
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x1
mov eax [ ecx ]
push 0x3f
push eax
call sub_453081
push eax
lea edx [ esp + 0x334 ]
push edx
call sub_41326a
mov ecx [ esi + 0x4 ]
xor eax eax
add esp 0xc
mov [ esp + 0x3aa ] ax
mov eax [ ecx + 0x4 ]
push 0xff
push eax
call sub_453081
push eax
lea edx [ esp + 0x130 ]
push edx
call sub_41326a
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ esp + 0x332 ] ax
mov ecx [ ecx + 0x8 ]
add esp 0xc
call sub_40c760
imul eax eax 0x3e8
mov [ esp + 0x328 ] eax
cmp edi 0x3
jbe r-xdata
mov [ esp + 0x3ac ] 0x0
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov [ esp + 0x3ac ] eax
jmp r-xdata
lea eax [ esp + 0x8 ]
push eax
push 0x1
call [ Shell_NotifyIconW@IAT ]
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_458ca6
mov eax [ esp + 0x4 ]
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
cmp eax 0x64
ja r-xdata
push esi
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop esi
xor eax eax
pop edi
retn 0x8
imul eax eax 0xffff
mov ecx eax
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
movzx eax ax
mov ecx eax
shl ecx 0x10
or ecx eax
push ecx
push 0x0
call [ waveOutSetVolume@IAT ]
xor eax eax
pop edi
retn 0x8
sub_458d1c
sub esp 0x54
push esi
mov esi [ LoadCursorW@IAT ]
push 0x7f8a
push 0x0
call esi
push 0x7f00
push 0x0
mov [ esp + 0x20 ] eax
call esi
push 0x7f03
push 0x0
mov [ esp + 0x24 ] eax
call esi
push 0x7f8b
push 0x0
mov [ esp + 0x28 ] eax
call esi
push 0x7f01
push 0x0
mov [ esp + 0x2c ] eax
call esi
push 0x7f81
push 0x0
mov [ esp + 0x30 ] eax
call esi
push 0x7f88
push 0x0
mov [ esp + 0x34 ] eax
call esi
push 0x7f80
push 0x0
mov [ esp + 0x38 ] eax
call esi
push 0x7f86
push 0x0
mov [ esp + 0x3c ] eax
call esi
push 0x7f83
push 0x0
mov [ esp + 0x40 ] eax
call esi
push 0x7f85
push 0x0
mov [ esp + 0x44 ] eax
call esi
push 0x7f82
push 0x0
mov [ esp + 0x48 ] eax
call esi
push 0x7f84
push 0x0
mov [ esp + 0x4c ] eax
call esi
push 0x7f04
push 0x0
mov [ esp + 0x50 ] eax
call esi
push 0x7f02
push 0x0
mov [ esp + 0x54 ] eax
call esi
push 0x7f89
push 0x0
mov [ esp + 0x58 ] eax
call esi
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] 0x14
call [ GetCursorInfo@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
push edi
xor edi edi
mov esi [ esp + 0x60 ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x54
retn 0x8
inc edi
cmp edi 0xf
jle r-xdata
cmp eax [ esp + edi * 4 + 0x1c ]
je r-xdata
test eax eax
je r-xdata
mov esi [ esp + 0x64 ]
call sub_4092c0
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x54
retn 0x8
cmp edi 0xf
jg r-xdata
mov esi [ esp + 0x64 ]
call sub_4092c0
inc edi
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x54
retn 0x8
sub_458e85
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push edi
mov ebx ecx
call sub_442fa3
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_40c760
push eax
push esi
call sub_4354dd
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov ecx esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_40c760
test eax eax
jne r-xdata
push 0x1
push edi
call sub_4354dd
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov edx [ ebx ]
push eax
mov eax [ edx + 0x4 ]
push 0x2
add eax ebx
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_458f3f
sub esp 0xac
push ebx
mov ebx [ esp + 0xb4 ]
push ebp
or eax 0xffffffff
push edi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] eax
mov edi 0x88c00000
lea ebp [ eax + 0x9 ]
call sub_40c060
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + 0xc4 ] 0x1
jne r-xdata
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov [ rw-data ] 0x0
push esi
mov esi [ esp + 0xc4 ]
cmp esi 0x3
jb r-xdata
lea ecx [ esp + 0x24 ]
call sub_402620
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0xac
retn 0xc
cmp esi 0x4
jb r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_453063
push eax
lea esi [ esp + 0x2c ]
call sub_40df50
mov esi [ esp + 0xc4 ]
cmp esi 0x5
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
mov [ esp + 0x14 ] eax
cmp esi 0x6
jb r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c760
mov [ esp + 0x10 ] eax
push 0x0
lea eax [ esp + 0x1c ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
or ecx 0xffffffff
cmp [ esp + 0x14 ] ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c760
test al 0x1
je r-xdata
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
add eax 0xfffffed4
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x14 ] eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c760
test al 0x2
je r-xdata
mov edi 0x88000000
push 0x64
push 0x12c
push 0x0
push 0x0
lea ecx [ esp + 0x28 ]
push ecx
call [ __import_lookup_table_10(USER32:SetRect) ]
push ebp
push 0x0
push edi
lea edx [ esp + 0x24 ]
push edx
call [ __import_lookup_table_10(USER32:AdjustWindowRectEx) ]
mov ecx [ rw-data ]
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x30 ]
sub ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x2c ]
push edx
push ecx
push edi
push eax
call sub_453081
mov edi [ __import_lookup_table_10(USER32:CreateWindowExW) ]
push eax
push r--data
push ebp
call edi
lea edx [ esp + 0x18 ]
push edx
push eax
mov [ rw-data ] eax
call [ __import_lookup_table_10(USER32:GetClientRect) ]
mov ecx [ rw-data ]
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push 0x0
push ecx
push 0x18
push 0x500
push 0x4
sub edx 0x119
push edx
push 0x50000000
push eax
call sub_453081
push eax
push r--data
push 0x0
call edi
push 0x0
push 0x0
push 0x0
push r--data
mov [ rw-data ] eax
call [ __import_lookup_table_4(GDI32:CreateDCW) ]
mov ebp [ GetStockObject@IAT ]
push 0x11
mov esi eax
call ebp
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ esp + 0x38 ]
push eax
push 0x40
push esi
call [ GetTextFaceW@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov ebx eax
call [ DeleteDC@IAT ]
lea ecx [ esp + 0x38 ]
push ecx
push 0x0
push 0x2
mov ecx ebx
neg ecx
push 0x0
add ecx ecx
push 0x4
add ecx ecx
push 0x1
sub ecx ebx
add ecx ecx
push 0x0
mov eax 0x38e38e39
imul ecx
push 0x0
push 0x0
push 0x258
sar edx 0x4
push 0x0
mov eax edx
push 0x0
shr eax 0x1f
push 0x0
add eax edx
push eax
call [ __import_lookup_table_4(GDI32:CreateFontW) ]
mov ecx [ rw-data ]
mov esi [ SendMessageW@IAT ]
push 0x1
push eax
push 0x30
push ecx
call esi
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x18 ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
push 0x14
sub eax 0x104
push 0x104
cdq
push 0x1e
sub eax edx
sar eax 0x1
push eax
push 0x50000001
push 0x0
push r--data
push 0x200
call edi
push 0x640000
push 0x0
push 0x401
push eax
mov [ rw-data ] eax
call esi
mov eax [ rw-data ]
push 0x0
push 0x1
push 0x404
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
push 0x32
push 0x500
mov edx [ esp + 0x38 ]
sub edx [ esp + 0x30 ]
mov eax [ esp + 0x40 ]
push 0x37
sub edx 0x118
push edx
push 0x50000000
push eax
push r--data
push 0x0
call edi
push 0x1
push 0x11
mov [ rw-data ] eax
call ebp
mov ecx [ rw-data ]
push eax
push 0x30
push ecx
call esi
mov edx [ rw-data ]
push 0x4
push edx
call [ ShowWindow@IAT ]
lea ecx [ esp + 0x28 ]
call sub_402620
pop esi
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0xac
retn 0xc
mov eax [ esp + 0x24 ]
add eax 0xffffff9c
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x10 ] eax
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c760
test al 0x10
je r-xdata
xor ebp ebp
xor edi 0x8000000
sub_4592ac
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ esi + 0x8 ]
je r-xdata
pop esi
xor eax eax
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
call sub_40c760
mov edi [ SendMessageW@IAT ]
test eax eax
jl r-xdata
cmp ebx 0x2
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
cmp eax 0x65
jge r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx ]
push 0x0
call sub_40c760
push eax
mov eax [ rw-data ]
push 0x402
push eax
call edi
cmp ebx 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453081
push eax
mov eax [ rw-data ]
push 0x0
push 0xc
push eax
call edi
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_453081
mov edx [ rw-data ]
push eax
push 0x0
push 0xc
push edx
call edi
sub_459384
sub esp 0xac
push ebx
mov ebx [ esp + 0xb4 ]
push ebp
push esi
or ebp 0xffffffff
cmp [ rw-data ] 0x0
push edi
mov [ esp + 0x14 ] 0x1f4
mov [ esp + 0x18 ] 0x190
mov [ esp + 0x10 ] ebp
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x30 ] 0x50000001
mov esi 0x88c00000
lea edi [ ebp + 0x9 ]
je r-xdata
cmp [ esp + 0xc8 ] 0x2
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xac
retn 0xc
lea ecx [ esp + 0x20 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
cmp [ esp + 0xc4 ] 0x3
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
cmp [ esp + 0xc4 ] 0x4
jb r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
mov [ rw-data ] 0x0
push eax
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
cmp [ esp + 0xc4 ] 0x5
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov [ esp + 0x14 ] eax
cmp [ esp + 0xc4 ] 0x6
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
mov [ esp + 0x10 ] eax
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov [ esp + 0x18 ] eax
cmp [ esp + 0xc4 ] 0x7
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c760
mov ebp eax
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c760
cmp eax 0xffffffff
je r-xdata
cmp ebp 0xffffffff
jne r-xdata
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x14 ]
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c760
cmp [ esp + 0xc8 ] 0x1
mov [ esp + 0x1c ] eax
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push ecx
call [ __import_lookup_table_10(USER32:SetRect) ]
push edi
push 0x0
push esi
lea edx [ esp + 0x2c ]
push edx
call [ __import_lookup_table_10(USER32:AdjustWindowRectEx) ]
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
sub edx [ esp + 0x24 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x38 ]
sub ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x24 ]
push ecx
push ebp
push edx
push esi
push eax
call sub_453081
mov ebp [ __import_lookup_table_10(USER32:CreateWindowExW) ]
push eax
push r--data
push edi
call ebp
lea ecx [ esp + 0x20 ]
push ecx
push eax
mov [ rw-data ] eax
call [ __import_lookup_table_10(USER32:GetClientRect) ]
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x2c ]
sub esi [ esp + 0x20 ]
sub edi [ esp + 0x24 ]
cmp [ esp + 0xc8 ] 0x0
push 0x0
push 0x0
push 0x0
jne r-xdata
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x18 ]
cdq
sub eax edx
mov ebp eax
sar ebp 0x1
test al 0x2
je r-xdata
test al 0x8
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
mov edx [ esp + 0x3c ]
push ecx
sub edi 0x16
push edi
sub esi 0x16
push esi
push 0xb
push 0xb
push edx
push eax
mov [ esp + 0x3c ] 0xc
mov [ esp + 0x38 ] 0x190
call sub_453081
push eax
push r--data
push 0x0
call ebp
push 0x0
push 0x0
push 0x0
push r--data
mov [ esp + 0x28 ] eax
call [ __import_lookup_table_4(GDI32:CreateDCW) ]
push 0x11
mov ebp eax
call [ GetStockObject@IAT ]
push eax
push ebp
call [ SelectObject@IAT ]
lea eax [ esp + 0x38 ]
push eax
push 0x40
push ebp
call [ GetTextFaceW@IAT ]
push 0x5a
push ebp
call [ GetDeviceCaps@IAT ]
push ebp
mov [ esp + 0x34 ] eax
call [ DeleteDC@IAT ]
mov ebp [ esp + 0xc4 ]
cmp ebp 0x8
jb r-xdata
mov edx [ rw-data ]
push edx
push edi
push esi
push 0x0
push 0x0
push 0x5000000e
push 0x0
push r--data
push 0x0
mov [ esp + 0x44 ] 0x0
call ebp
push 0x0
push 0x0
push 0x3
push 0x0
mov ebp eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x80000000
push eax
call sub_453081
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileW) ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
test al 0x1
je r-xdata
xor edi edi
test al 0x4
je r-xdata
mov [ esp + 0x30 ] 0x50000002
cmp ebp 0x9
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x1c ]
push eax
call sub_453081
push eax
call sub_4112d5
add esp 0x4
cmp eax 0x1
jb r-xdata
push 0x0
push esi
call [ __import_lookup_table_0(KERNEL32:GetFileSize) ]
mov ebx eax
push ebx
push 0x2
call [ __import_lookup_table_0(KERNEL32:GlobalAlloc) ]
mov edi eax
push edi
call [ __import_lookup_table_0(KERNEL32:GlobalLock) ]
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
push ebx
push eax
push esi
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
push edi
call [ __import_lookup_table_0(KERNEL32:GlobalUnlock) ]
push esi
call [ CloseHandle@IAT ]
lea edx [ esp + 0x18 ]
push edx
push 0x1
push edi
call [ CreateStreamOnHGlobal@IAT ]
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x0
push 0x0
push ecx
call [ OleLoadPicture@IAT ]
mov eax [ esp + 0x18 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
push edi
call [ __import_lookup_table_0(KERNEL32:GlobalFree) ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
test al 0x10
je r-xdata
mov esi 0x88800000
movsx ecx [ esp + 0x30 ]
and ecx 0x2
or ecx 0xa0000001
shr ecx 0x1
mov [ esp + 0x30 ] ecx
cmp ebp 0xa
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x20 ]
call sub_40c760
cmp eax 0x6
jl r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_411691
add esp 0x8
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ esp + 0x10 ]
push 0x2000
push 0x0
push 0x0
push 0x0
push ecx
call [ __import_lookup_table_10(USER32:CopyImage) ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x172
push ebp
call [ SendMessageW@IAT ]
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x20 ]
mov edx [ esp + 0x10 ]
push 0x20
push eax
push ecx
push 0x0
push 0x0
push 0x0
push ebp
mov [ rw-data ] edx
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
mov eax [ rw-data ]
push 0x4
push eax
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xac
retn 0xc
xor esi 0x8000000
mov eax [ esp + 0x10 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_40c760
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x20 ]
call sub_40c760
mov [ esp + 0x14 ] eax
mov eax [ rw-data ]
push 0x4
push eax
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xac
retn 0xc
push ebp
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov ebp eax
push ecx
push ebp
call [ SelectObject@IAT ]
mov edx [ ebx + 0x4 ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x1c ] eax
mov eax [ edx + 0x4 ]
push ecx
push eax
call sub_453081
push eax
push ebp
call sub_43609c
mov edx [ esp + 0x28 ]
add esp 0xc
push edx
push ebp
call [ SelectObject@IAT ]
mov ebx [ esp + 0x18 ]
push ebp
push ebx
call [ ReleaseDC@IAT ]
mov ecx [ esp + 0x34 ]
mov eax edi
sub eax ecx
cdq
push 0x1
push ecx
sub eax edx
push esi
sar eax 0x1
add eax 0xb
push eax
push 0xb
push ebx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x24 ]
call sub_40c760
cmp eax 0x3e8
jg r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x24 ]
call sub_40c760
jmp r-xdata
lea ecx [ esp + 0x38 ]
push ecx
push 0x0
push 0x2
push 0x0
push 0x4
push 0x1
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esp + 0x58 ]
imul eax [ esp + 0x3c ]
mov ecx eax
mov eax 0xc71c71c7
imul ecx
sar edx 0x4
push 0x0
mov eax edx
push 0x0
shr eax 0x1f
push 0x0
add eax edx
push eax
call [ __import_lookup_table_4(GDI32:CreateFontW) ]
mov ebp [ esp + 0x18 ]
push 0x1
push eax
push 0x30
push ebp
mov [ rw-data ] eax
call [ SendMessageW@IAT ]
test [ esp + 0x1c ] 0x20
je r-xdata
sub_45998c
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push esi
push edi
push 0x1
push ecx
push eax
call sub_459384
mov esi [ esp + 0x10 ]
mov edi [ rw-data ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
sub_4599e3
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_44ba58
add esp 0x4
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_459a1c
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_44babc
add esp 0x4
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_459a55
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x8 ] 0x2
push ebp
push esi
mov ebp ecx
mov esi 0x1
jb r-xdata
push edi
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov esi eax
test esi esi
jle r-xdata
pop edi
lea esp [ esp ]
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov esi [ esp + 0x18 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ebp + 0x10c ]
push edx
call sub_436272
inc edi
add esp 0x4
cmp edi esi
jl r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_436431
add esp 0x4
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
sub_459ad9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov edi ecx
or ebx 0xffffffff
call sub_453081
push eax
call sub_44b988
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ esp + 0x14 ] eax
call sub_40c760
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
mov [ esp + 0x1c ] eax
call sub_40c760
cmp [ esi + 0x8 ] 0x6
mov [ esp + 0x18 ] eax
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push 0x1
push ebx
push eax
push ecx
push edi
call sub_442582
cmp ebx 0x2
jge r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c760
mov ebx eax
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
push eax
call sub_44babc
mov eax [ edi + 0x114 ]
add esp 0x4
push eax
call sub_436272
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
add esp 0x4
push 0x1
push ebx
push ecx
push edx
push edi
call sub_442582
mov eax [ edi + 0x114 ]
push eax
call sub_436272
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
add esp 0x4
push eax
call sub_453081
push eax
call sub_44ba58
mov edx [ edi + 0x10c ]
add esp 0x4
push edx
call sub_436272
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0xffffffff
je r-xdata
mov ebx 0x2
sub_459c09
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
mov edi ecx
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] 0xffffffff
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov eax [ esp + 0x2c ]
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx ]
push eax
mov ebx 0x1
mov [ esp + 0x20 ] edx
mov [ esp + 0x18 ] 0x0
call sub_453081
push eax
call sub_44b988
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x5
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x10 ] 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ esp + 0x24 ] eax
call sub_44adff
test al al
jne r-xdata
cmp [ esp + 0x10 ] 0x5
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
mov ebx eax
test ebx ebx
jle r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
mov [ esp + 0x24 ] eax
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x20 ]
call sub_40c760
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x24 ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c760
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x4 ]
push edx
call sub_44adff
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
call sub_40c760
mov [ esp + 0x18 ] eax
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x1c ]
push 0x1
push eax
mov eax [ esp + 0x20 ]
push eax
push ecx
push edi
call sub_442582
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov [ esp + 0x14 ] ebx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44adff
test al al
jne r-xdata
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
push eax
call sub_44babc
mov eax [ edi + 0x110 ]
add esp 0x4
push eax
call sub_436272
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
add esp 0x4
push eax
call sub_453081
push eax
call sub_44ba58
mov edx [ edi + 0x10c ]
add esp 0x4
push edx
call sub_436272
add esp 0x4
sub ebx 0x1
jne r-xdata
sub_459dcf
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
cmp [ edi + 0x8 ] 0x3
mov ebp ecx
jb r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b390
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_44b390
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
mov ebx eax
call sub_40c760
mov esi eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov edx [ ebp + 0x104 ]
push ebx
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov edi eax
call sub_4344b7
add esi [ esp + 0x10 ]
add edi [ esp + 0x14 ]
push 0x0
call [ GetDC@IAT ]
push edi
mov ebx eax
push esi
push ebx
call [ GetPixel@IAT ]
mov esi [ esp + 0x20 ]
mov edi eax
call sub_4092c0
mov eax edi
sar eax 0x10
mov ecx edi
and ecx 0xff
and eax 0xff
shl ecx 0x10
or eax ecx
and edi 0xff00
push ebx
or eax edi
push 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x8
sub_459e9d
sub esp 0x1c
push ebx
push esi
mov esi [ esp + 0x2c ]
push edi
mov [ esp + 0x10 ] ecx
call sub_4092c0
mov edi [ esp + 0x2c ]
mov ebx 0x1
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
cmp [ edi + 0x8 ] 0x7
mov [ esp + 0xc ] 0x0
jb r-xdata
cmp [ edi + 0x8 ] 0x5
mov [ esp + 0x30 ] ebx
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c760
mov [ esp + 0xc ] eax
cmp [ edi + 0x8 ] 0x6
jb r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
cmp eax ebx
jle r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x14 ]
push eax
call sub_44b390
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c760
mov [ esp + 0x30 ] eax
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x14 ]
push eax
call sub_44b390
jmp r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push eax
push edi
push ecx
push ebx
call sub_43477e
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push ecx
push edi
push edx
push ebx
call sub_4346d0
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
push ebp
mov [ esp + 0x30 ] eax
call sub_40c760
mov ebp eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x1c ] ebp
call sub_40c760
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
call sub_40c760
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
mov ebx eax
mov [ esp + 0x24 ] ebx
call sub_40c760
sub ebx ebp
push ebx
mov [ esp + 0x2c ] eax
call sub_413762
mov edx [ esp + 0x34 ]
add esp 0x4
mov edi eax
lea eax [ esp + 0x30 ]
push eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
push eax
inc edi
call sub_434506
mov ebx eax
pop ebp
test ebx ebx
je r-xdata
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
push ebx
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_4112ef
add esp 0x4
sub_459fff
sub esp 0x10
mov eax [ esp + 0x14 ]
push ebx
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
test ecx ecx
jne r-xdata
push esi
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push 0x2
call [ __import_lookup_table_0(KERNEL32:GlobalAlloc) ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
call [ __import_lookup_table_10(USER32:EmptyClipboard) ]
call [ CloseClipboard@IAT ]
lea ecx [ esp + 0x8 ]
call sub_402620
pop edi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push esi
call [ __import_lookup_table_0(KERNEL32:GlobalLock) ]
test eax eax
jne r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax edi
call sub_4040e0
lea ecx [ esp + 0xc ]
call sub_402620
pop esi
pop edi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push ebx
push eax
call sub_411691
add esp 0x8
push esi
call [ __import_lookup_table_0(KERNEL32:GlobalUnlock) ]
mov ecx [ rw-data ]
push ecx
call [ OpenClipboard@IAT ]
call [ __import_lookup_table_10(USER32:EmptyClipboard) ]
push esi
push 0xd
call [ __import_lookup_table_10(USER32:SetClipboardData) ]
test eax eax
jne r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
lea ecx [ esp + 0xc ]
call sub_402620
pop esi
pop edi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
call [ CloseClipboard@IAT ]
lea ecx [ esp + 0xc ]
call sub_402620
pop esi
pop edi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
sub_45a165
push ecx
push edi
lea eax [ esp + 0x4 ]
push eax
push 0x3a98
push 0x1
push r--data
push 0x0
push 0x1a
push 0xffff
mov edi ecx
call [ __import_lookup_table_10(USER32:SendMessageTimeoutW) ]
test eax eax
jne r-xdata
xor eax eax
pop edi
pop ecx
retn 0x8
push esi
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop esi
sub_45a1bc
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x2
mov eax [ eax + 0x4 ]
push esi
push edi
jb r-xdata
mov eax [ eax ]
push 0x0
push eax
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_453081
push eax
push esi
jmp r-xdata
call sub_453081
push eax
call [ __import_lookup_table_0(KERNEL32:SetEnvironmentVariableW) ]
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45a206
mov eax 0x10000
call sub_425210
mov ecx [ esp + 0x10004 ]
mov edx [ ecx + 0x4 ]
push ebx
push edi
xor eax eax
push 0x7fff
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] ax
mov eax [ edx ]
push ecx
push eax
call sub_453081
push eax
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
mov ebx [ esp + 0x10010 ]
lea edi [ esp + 0x8 ]
call sub_40e6d0
pop edi
xor eax eax
pop ebx
add esp 0x10000
retn 0x8
sub_45a259
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c760
test eax eax
jne r-xdata
push 0x1
push eax
jmp r-xdata
call [ __import_lookup_table_10(USER32:BlockInput) ]
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45a293
mov eax 0x10000
call sub_425210
mov ecx [ rw-data ]
push ebx
push edi
push 0x7fff
lea eax [ esp + 0xc ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
mov ebx [ esp + 0x10010 ]
lea edi [ esp + 0x8 ]
call sub_40e6d0
pop edi
xor eax eax
pop ebx
add esp 0x10000
retn 0x8
sub_45a2f5
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x460 ] ebx
je r-xdata
mov esi [ esp + 0x2c ]
call sub_4092c0
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov eax [ esp + 0x28 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov edx [ eax + 0x4 ]
mov eax [ edx ]
push eax
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
call sub_410a40
mov ebp [ edi + 0x458 ]
mov [ esp + 0x28 ] ebp
lea esp [ esp ]
mov eax [ edi + 0x45c ]
mov ecx [ eax ]
mov [ ecx + 0x11 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x14 ]
call sub_402620
mov esi [ ebp ]
lea eax [ esp + 0x14 ]
call sub_40dd00
test al al
jne r-xdata
mov eax [ edi + 0x458 ]
mov [ esp + 0x28 ] eax
mov edi edi
mov edx [ esp + 0x28 ]
mov eax [ edx ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
mov [ esi + 0x11 ] 0x1
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_440eac
mov ebp [ esp + 0x28 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_440eac
jmp r-xdata
inc ebx
push ecx
lea edx [ esp + 0x2c ]
mov [ esp ] ebx
push edx
call sub_442fdf
test al al
je r-xdata
push ecx
lea ecx [ esp + 0x2c ]
mov [ esp ] 0x0
push ecx
call sub_442fdf
test al al
je r-xdata
sub_45a422
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push ebx
push esi
push edi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_4290a6
mov esi [ esp + 0x1c ]
fstp [ esp + 0xc ]
call sub_4092c0
fld [ esp + 0xc ]
push esi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_443576
mov edi eax
mov ebx edx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
sub_45a481
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push ebx
push esi
push edi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_42907e
mov esi [ esp + 0x1c ]
fstp [ esp + 0xc ]
call sub_4092c0
fld [ esp + 0xc ]
push esi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
call sub_443576
mov edi eax
mov ebx edx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
sub_45a4e0
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_429052
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a520
sub esp 0x8
push ebx
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esi + 0x4 ]
mov ebx [ edi ]
push ebx
call sub_443e61
test al al
je r-xdata
push ebx
call sub_44b960
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_443e61
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ edi ]
call sub_40be90
sub esp 0x8
mov ecx edi
fstp [ esp ]
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_429041
mov esi [ esp + 0x1c ]
fstp [ esp + 0xc ]
call sub_4092c0
fld [ esp + 0xc ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov ecx [ edi + 0x4 ]
push ecx
call sub_44b960
test al al
je r-xdata
mov esi edi
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
call sub_40c760
mov ecx edi
mov esi eax
call sub_40c760
cdq
idiv esi
mov esi [ esp + 0x1c ]
mov edi edx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov esi [ edi ]
mov edi [ edi + 0x4 ]
push edi
call sub_443576
push esi
mov edi eax
mov ebx edx
call sub_443576
push ebx
push edi
push edx
push eax
call sub_420ec0
mov esi [ esp + 0x1c ]
mov edi eax
mov ebx edx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
sub_45a621
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_429038
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a661
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_42902f
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a6a1
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_429026
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a6e1
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_42901b
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a721
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_428fe6
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a761
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_428fb7
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a7a1
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_428fac
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a7e1
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_428f9f
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a821
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
call sub_40be90
sub esp 0x8
fstp [ esp ]
call sub_428f84
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
sub_45a861
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov ebx 0x3
mov ebp ecx
mov [ esp + 0x13 ] 0x0
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov esi [ esp + 0x2c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi + 0x8 ]
cmp eax ebx
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
jmp [ eax * 4 + jump_table_45aa0d ]
mov [ esp + 0x13 ] al
call sub_44b2e9
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40be90
fst [ esp + 0x14 ]
fldz
fcompp
fnstsw ax
test ah 0x1
je r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ ebx ]
push eax
call sub_442fa3
test al al
jne r-xdata
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
call sub_44b2e9
fmul [ esp + 0x14 ]
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push ebx
call sub_442fa3
test al al
jne r-xdata
fstp [ esp + 0x1c ]
call sub_4092c0
fld [ esp + 0x1c ]
pop edi
mov [ esi + 0x8 ] ebx
fstp [ esi ]
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov ecx ebx
cmp [ esp + 0x13 ] al
je r-xdata
call sub_40be90
fstp [ esp + 0x1c ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40be90
fst [ esp + 0x14 ]
fcomp [ esp + 0x1c ]
fnstsw ax
test ah 0x1
jne r-xdata
call sub_40c760
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
mov [ esp + 0x28 ] eax
call sub_40c760
mov ebx eax
mov eax [ esp + 0x28 ]
mov edi eax
sub edi ebx
cmp ebx eax
jge r-xdata
call sub_44b2e9
fld [ esp + 0x1c ]
fld [ esp + 0x14 ]
fsub st1
fxch st2
fmulp st1
faddp st1
fstp [ esp + 0x1c ]
call sub_4092c0
fld [ esp + 0x1c ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov ecx [ ebp ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
test edi edi
jle r-xdata
push 0x0
push 0x1
add eax ebp
call sub_4040e0
cmp edi 0x7ffffff
jge r-xdata
call sub_44b349
cdq
idiv edi
mov edi edx
add edi ebx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
inc edi
sub_45aa1d
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_40c760
test eax eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
jl r-xdata
mov edi [ eax ]
call sub_40c760
mov esi eax
mov ecx edi
neg esi
call sub_40c760
mov edi eax
mov ecx esi
shl edi cl
mov esi [ eax ]
call sub_40c760
push eax
mov ecx esi
call sub_40c760
mov edi eax
pop ecx
sar edi cl
jmp r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45aa7f
push ebx
push ebp
mov ebp [ esp + 0xc ]
cmp [ ebp + 0x8 ] 0x3
push esi
mov esi 0x10
push edi
mov ebx ecx
lea edi [ esi - 0xf ]
jb r-xdata
cmp [ ebp + 0x8 ] 0x2
jb r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x8 ] 0xa
jne r-xdata
mov ecx [ ebp + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
cmp esi 0x20
mov ebp eax
jge r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov edi eax
push ecx
call sub_453081
test eax eax
je r-xdata
push ecx
call sub_443560
cmp eax 0x29
je r-xdata
xor eax eax
or eax 0xffffffff
mov ecx esi
shl eax cl
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_453081
movzx eax [ eax ]
add eax 0xffffffbe
cmp eax 0x35
ja r-xdata
cmp edi esi
jl r-xdata
lea esp [ esp ]
and eax ebp
mov [ esp + 0x14 ] eax
test edi edi
jge r-xdata
mov esi [ esp + 0x18 ]
call sub_4092c0
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
movzx edx [ eax + lookup_table_45ac13 ]
jmp [ edx * 4 + jump_table_45ac03 ]
test edi edi
jne r-xdata
sub edi esi
cmp edi esi
jge r-xdata
add edi esi
js r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x20
mov ebx esi
sub ebx edi
mov ecx ebx
mov eax 0x1
shl eax cl
mov ecx edi
dec eax
mov edx eax
and edx ebp
shl edx cl
cmp esi 0x20
jge r-xdata
mov esi [ esp + 0x18 ]
call sub_4092c0
pop edi
mov [ esi ] ebp
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
or [ esp + 0x14 ] edx
cmp esi 0x20
jge r-xdata
mov edi 0x1
mov ecx esi
shl edi cl
dec edi
and edx edi
not eax
mov edi eax
mov edi 0x1
mov ecx esi
shl edi cl
sub edi eax
dec edi
jmp r-xdata
mov esi [ esp + 0x18 ]
call sub_4092c0
lea ecx [ ebx - 0x1 ]
mov eax 0x7fffffff
sar eax cl
and edi ebp
mov ecx ebx
sar edi cl
mov [ esi + 0x8 ] 0x1
and eax edi
or eax [ esp + 0x14 ]
pop edi
mov [ esi ] eax
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
sub_45ac17
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] al
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ edi + 0x8 ]
call sub_40c760
mov esi 0x1
mov ebp eax
cmp ebx esi
jbe r-xdata
mov esi [ esp + 0x18 ]
call sub_4092c0
pop edi
mov [ esi ] ebp
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40c760
inc esi
xor ebp eax
cmp esi ebx
jb r-xdata
sub_45ac96
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c760
mov esi [ esp + 0x10 ]
mov edi eax
not edi
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45acc3
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ edi + 0x8 ]
call sub_40c760
mov esi 0x1
mov ebp eax
cmp ebx esi
jbe r-xdata
mov esi [ esp + 0x18 ]
call sub_4092c0
pop edi
mov [ esi ] ebp
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40c760
inc esi
or ebp eax
cmp esi ebx
jb r-xdata
sub_45ad10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov ebx [ edi + 0x8 ]
call sub_40c760
mov esi 0x1
mov ebp eax
cmp ebx esi
jbe r-xdata
mov esi [ esp + 0x18 ]
call sub_4092c0
pop edi
mov [ esi ] ebp
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_40c760
inc esi
and ebp eax
cmp esi ebx
jb r-xdata
sub_45ad5d
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_442c43
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45ad8d
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_44b390
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
sub_45adb9
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ ecx ]
push esi
call sub_442c43
test al al
je r-xdata
mov [ esp + 0x8 ] 0x0
push esi
call sub_44b390
push eax
call [ IsWindow@IAT ]
mov [ esp + 0x8 ] 0x1
test eax eax
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
push edx
push eax
call sub_452d91
xor eax eax
pop esi
retn 0x8
sub_45adfd
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
mov edi ecx
call sub_44b390
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x7
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_44b390
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
sub_45ae6e
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push ebx
push edi
push eax
call sub_453081
mov ebx [ esp + 0x10 ]
mov edi eax
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x8
sub_45ae91
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_453333
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45aec1
sub esp 0x8
push ebx
push esi
mov esi [ esp + 0x18 ]
push edi
call sub_4092c0
mov ebx [ esp + 0x18 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
push edi
call sub_453333
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
cmp [ edi + 0x8 ] 0x3
jne r-xdata
mov ecx edi
call sub_40be90
call sub_429126
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp + 0xc ]
call sub_40be90
fld [ esp + 0xc ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
sub_45af46
sub esp 0x8
push ebx
push esi
mov esi [ esp + 0x18 ]
push edi
call sub_4092c0
mov ebx [ esp + 0x18 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
push edi
call sub_453333
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov eax [ edi + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_4092c0
mov [ esi ] 0x1
mov [ esi + 0x8 ] 0x1
cmp eax 0x2
je r-xdata
mov ecx edi
call sub_40be90
call sub_429126
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp + 0xc ]
call sub_40be90
fld [ esp + 0xc ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
sub_45afd2
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_444279
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b002
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_443e34
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b032
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push edx
call sub_442fa3
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45b062
mov eax [ esp + 0x4 ]
sub esp 0x8
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x8
lea edx [ esp + 0x8 ]
push edx
push eax
call sub_453081
push eax
call sub_435d02
add esp 0xc
test al al
jne r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov ecx [ esp + 0x4 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
xor eax eax
pop esi
add esp 0x8
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
sub_45b0ba
mov eax [ esp + 0x4 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push edi
call sub_40c760
test eax eax
jne r-xdata
cmp eax 0xffff
push ebx
mov ebx [ esp + 0x24 ]
jle r-xdata
lea ecx [ esp + 0x8 ]
call sub_40c060
push 0x0
lea edx [ esp + 0xc ]
push edx
call sub_444508
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
xor ecx ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x20 ] ax
mov [ esp + 0x22 ] cx
call sub_40e6d0
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
mov edi r--data
call sub_40e6d0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_45b157
mov eax [ esp + 0x4 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push edi
call sub_40c760
test eax eax
jne r-xdata
cmp eax 0xff
push ebx
jle r-xdata
lea ecx [ esp + 0x8 ]
call sub_40c060
push 0x0
lea edx [ esp + 0xc ]
push edx
call sub_444508
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
cmp eax 0x80
jge r-xdata
mov ebx [ esp + 0x24 ]
mov edi r--data
call sub_40e6d0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
lea edx [ esp + 0x20 ]
push 0xffffffff
push edx
mov [ esp + 0x28 ] al
mov [ esp + 0x29 ] 0x0
call sub_4359c4
mov ebx [ esp + 0x2c ]
add esp 0x8
mov edi eax
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
mov ebx [ esp + 0x24 ]
xor ecx ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x20 ] ax
mov [ esp + 0x22 ] cx
call sub_40e6d0
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_45b236
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_453081
mov esi [ esp + 0x10 ]
movzx edi [ eax ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45b263
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push ebx
push esi
push edi
push eax
call sub_453081
mov dx [ eax ]
xor eax eax
lea ebx [ esp + 0x10 ]
mov [ esp + 0x10 ] dx
mov [ esp + 0x12 ] ax
call sub_40f580
mov esi [ esp + 0x14 ]
mov edi eax
movzx ebx [ edi ]
call sub_4092c0
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_45b2b5
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40c760
sub eax 0x1
je r-xdata
mov eax 0x1
mov [ ebx ] ax
sub eax 0x1
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_453063
push eax
lea esi [ ebx + 0x24 ]
call sub_40df50
sub eax 0x1
je r-xdata
mov edx 0x2
mov [ ebx ] dx
jmp r-xdata
xor ecx ecx
mov [ ebx ] cx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_453063
push eax
lea esi [ ebx + 0x4 ]
call sub_40df50
sub eax 0x1
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_453063
push eax
lea esi [ ebx + 0x14 ]
call sub_40df50
sub_45b342
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
push edi
push esi
mov edi ecx
call sub_44adff
test al al
jne r-xdata
push r--data
lea eax [ edi + 0x78 ]
call sub_4021e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
push esi
call sub_453063
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push eax
lea esi [ edi + 0x78 ]
call sub_40df50
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_45b3c3
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push edi
call sub_40c760
mov edx [ esi + 0x4 ]
mov ebx [ esp + 0x18 ]
add esi 0x4
mov edi eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x14 ] 0x0
mov ecx [ esp + 0x14 ]
push ecx
push ebx
call sub_452d91
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x8
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
cmp [ edx + 0xd8 ] edi
jne r-xdata
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_440eac
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_451ffc
mov [ esp + 0x18 ] 0x1
mov ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_452d91
push ecx
lea eax [ esp + 0x18 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
sub_45b490
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x8 ]
xor eax eax
push edi
test ecx ecx
jbe r-xdata
push eax
mov eax [ esp + 0x1c ]
push eax
call sub_452dae
xor ebx ebx
xor edi edi
mov ebp eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov edx [ esi + 0x4 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + edi * 4 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
lea ecx [ ebx + ebp ]
push ecx
call sub_410f70
mov edx [ esi + 0x4 ]
mov eax [ edx + edi * 4 ]
add ebx [ eax + 0x4 ]
inc edi
add esp 0xc
cmp edi [ esi + 0x8 ]
jb r-xdata
mov edi [ edx ]
add eax [ edi + 0x4 ]
add edx 0x4
sub ecx 0x1
jne r-xdata
sub_45b4f6
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jbe r-xdata
push esi
push edi
push eax
call sub_4419a8
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b390
sub_45b52f
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
push ebp
push esi
push edi
mov edi [ ecx + 0x8 ]
xor edx edx
mov esi 0x4
lea ebp [ edx + 0x1 ]
cmp [ edi + 0x8 ] esi
jne r-xdata
mov ecx [ ecx + 0xc ]
cmp [ ecx + 0x8 ] esi
jne r-xdata
mov edx ebp
cmp edx 0x3
ja r-xdata
add edx 0x2
pop edi
pop esi
xor eax eax
pop ebp
retn 0x8
push ebx
jmp [ edx * 4 + jump_table_45b64f ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
mov ecx edi
call sub_40c760
push eax
mov ecx ebx
call sub_40c760
push eax
call sub_44a003
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40c760
push eax
push esi
call sub_453081
push eax
mov ecx edi
call sub_40c760
push eax
mov ecx ebx
call sub_40c760
push eax
call sub_44a003
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
push ecx
call sub_453081
push eax
mov ecx esi
call sub_40c760
push eax
mov ecx edi
call sub_40c760
push eax
mov ecx ebx
call sub_40c760
push eax
call sub_44a003
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
mov ecx edi
call sub_40c760
push eax
mov ecx ebx
call sub_40c760
push eax
call sub_44a003
mov esi [ esp + 0x18 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
mov [ esi + 0x8 ] ebp
pop ebx
sub_45b65f
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
or ebp 0xffffffff
push edi
or ebx ebp
xor edi edi
mov [ esp + 0x14 ] eax
cmp eax 0x2
jbe r-xdata
cmp eax 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov ebp eax
mov eax [ esp + 0x14 ]
cmp eax 0x4
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
mov ebx eax
mov eax [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edi
push ebx
push ebp
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_44138a
mov esi [ esp + 0x18 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_44b390
mov edi eax
sub_45b6ef
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x8 ]
or esi 0xffffffff
test ebx ebx
jbe r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40c760
mov esi eax
push 0x0
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edi edi
je r-xdata
push eax
lea edx [ esp + 0x10 ]
push edx
jmp r-xdata
mov ebx [ ebp + 0xc ]
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_4559a8
mov ebx [ esp + 0xc ]
mov edi eax
test ebx ebx
jg r-xdata
sub_45b782
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov ebp [ esi + 0x8 ]
xor ebx ebx
push edi
xor edi edi
mov [ esp + 0x10 ] bl
mov [ esp + 0x1c ] bl
cmp ebp 0x3
jb r-xdata
cmp ebp 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov [ esp + 0x18 ] eax
call sub_44adff
test al al
jne r-xdata
cmp ebp 0x5
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov [ esp + 0x18 ] eax
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_453081
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x1c ]
mov esi [ eax ]
mov eax [ esp + 0x10 ]
push edx
push eax
push edi
push ebx
push ecx
call sub_453081
push eax
mov ecx esi
call sub_40c760
push eax
call sub_4556f8
mov esi [ esp + 0x20 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x10 ]
push ebp
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
call sub_40c760
mov edi eax
mov ecx ebp
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
and al 0x1
mov [ esp + 0x10 ] al
call sub_40c760
shr al 0x1
and al 0x1
mov [ esp + 0x1c ] al
sub_45b862
push esi
mov esi [ esp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x2
push edi
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push eax
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_4498fd
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
sub_45b8b3
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c760
push eax
call sub_449dde
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45b8e4
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
lea edx [ esp + 0x8 ]
push edx
call sub_40c760
push eax
call sub_449e31
mov esi [ esp + 0xc ]
test al al
je r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
call sub_4092c0
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
sub_45b936
push esi
mov esi [ esp + 0x8 ]
or eax 0xffffffff
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
push eax
call sub_40c760
push eax
call sub_449c1e
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
sub_45b97c
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
or ebx 0xffffffff
or ebp ebx
cmp [ esi + 0x8 ] 0x4
push edi
jbe r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
mov ebp eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov edi [ eax ]
push ebp
push ebx
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
mov ecx edi
call sub_40c760
push eax
call sub_449aa6
mov esi [ esp + 0x18 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
mov ebx eax
sub_45b9f4
sub esp 0xc
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
or edi 0xffffffff
mov ebx edi
mov ebp edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
call sub_40c760
test eax eax
jle r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x8
cmp [ esi + 0x8 ] 0x7
jbe r-xdata
cmp [ esi + 0x8 ] 0x6
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x1c ]
call sub_40c760
mov [ esp + 0x10 ] eax
cmp [ esi + 0x8 ] 0x5
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c760
mov [ esp + 0x14 ] eax
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c760
mov [ esp + 0x18 ] eax
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
mov ebp eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov ebx eax
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov esi [ esi ]
push edx
mov edx [ esp + 0x1c ]
push eax
push edx
push ebp
push ebx
push edi
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_447e6c
mov esi [ esp + 0x24 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov edi eax
sub_45bb0c
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x2
push edi
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push eax
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_449ca8
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
sub_45bb5c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push esi
push edi
lea ecx [ esp + 0x8 ]
call sub_40c060
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_453081
push eax
mov ecx esi
call sub_40c760
push eax
call sub_44920c
mov esi [ ebp + 0xc ]
mov edi eax
call sub_4092c0
lea ecx [ esp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_402620
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_453063
push eax
lea esi [ esp + 0xc ]
call sub_40df50
sub_45bbd6
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b390
push eax
push rw-data
call sub_441533
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
retn 0x8
sub_45bc22
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_448759
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45bc5e
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
push edi
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_448ffb
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45bc9a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push esi
or esi 0xffffffff
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] esi
call sub_40c060
mov edi [ ebp + 0xc ]
mov [ esp + 0x18 ] esi
mov esi edi
mov [ esp + 0x14 ] 0x2
call sub_4092c0
mov esi [ esp + 0x10 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
cmp esi 0x5
jbe r-xdata
cmp esi 0x4
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c760
mov [ esp + 0x14 ] eax
cmp esi 0x3
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov esi [ edx + 0x10 ]
push esi
call sub_443e34
test al al
je r-xdata
cmp esi 0x2
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_453063
push eax
lea esi [ esp + 0x24 ]
call sub_40df50
mov esi [ esp + 0x10 ]
mov esi [ esp + 0x1c ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
mov esi eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
call sub_40be90
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
sub esp 0x8
fstp [ esp ]
push edx
push eax
push ecx
push esi
mov ecx ebx
call sub_40c760
push eax
call sub_45184b
mov esi edi
mov ebx eax
call sub_4092c0
mov [ edi + 0x8 ] 0x1
mov [ edi ] ebx
sub_45bdaa
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c760
push eax
mov ecx rw-data
call sub_455014
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_45bde0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
or edi 0xffffffff
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b390
mov ebx eax
mov edx [ esi + 0x4 ]
mov ecx [ edx ]
push ebx
push edi
call sub_40c760
push eax
call sub_4416d1
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov edi eax
sub_45be41
sub esp 0x1c
push ebx
mov ebx [ esp + 0x24 ]
push ebp
mov ebp [ ebx + 0x8 ]
push esi
or esi 0xffffffff
push edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] esi
call sub_40c060
mov edi [ esp + 0x34 ]
mov [ esp + 0x14 ] esi
mov esi edi
mov [ esp + 0x10 ] 0x2
mov [ esp + 0x30 ] 0x0
call sub_4092c0
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
cmp ebp 0x5
jbe r-xdata
cmp ebp 0x4
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c760
mov [ esp + 0x10 ] eax
cmp ebp 0x3
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x10 ]
push esi
call sub_442c43
test al al
je r-xdata
cmp ebp 0x2
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov esi [ edx + 0xc ]
push esi
call sub_443e34
test al al
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
push esi
call sub_44b390
mov [ esp + 0x30 ] eax
mov esi [ esp + 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov esi eax
jmp r-xdata
push esi
call sub_453063
push eax
lea esi [ esp + 0x20 ]
call sub_40df50
mov ebp [ esp + 0x18 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov ebp eax
jmp r-xdata
cmp ebp 0x1
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx ]
call sub_40be90
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x10 ]
sub esp 0x8
fstp [ esp ]
push eax
push ecx
push esi
lea edx [ esp + 0x30 ]
push edx
push ebp
call sub_451954
mov esi edi
mov ebx eax
call sub_4092c0
mov [ edi + 0x8 ] 0x1
mov [ edi ] ebx
sub_45bf64
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi [ edi + 0x8 ]
xor ebp ebp
xor ebx ebx
mov [ esp + 0x14 ] 0x2
test esi esi
jbe r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40c760
mov [ esp + 0x14 ] eax
cmp esi 0x2
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov ebp eax
mov eax [ esp + 0x14 ]
push ebx
push ebp
push eax
call sub_441b43
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_44b390
mov ebx eax
sub_45bfc7
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
push 0xffffffff
push 0xffffffff
push eax
push 0xffffffff
push 0x0
push 0xffffffff
push ecx
call sub_453081
push eax
call sub_45619d
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
sub_45c018
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
or edi 0xffffffff
xor ebx ebx
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b390
mov ebx eax
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0xffffffff
push 0xffffffff
push ebx
push edi
push eax
call sub_453081
push eax
push 0xffffffff
push 0x0
call sub_45619d
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov edi eax
sub_45c082
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
push eax
push 0xffffffff
push esi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_45619d
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
mov esi eax
sub_45c0d4
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
push 0xffffffff
call sub_40c760
push eax
push esi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_45619d
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
mov esi eax
sub_45c126
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
push edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
push 0xffffffff
push 0xffffffff
push eax
push 0xffffffff
push 0x0
call sub_40c760
push eax
push 0x0
call sub_45619d
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
sub_45c176
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov edi 0x5
jbe r-xdata
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
mov ebx eax
push ebx
push edi
call sub_4417bc
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
mov edi eax
sub_45c1cd
push esi
push edi
mov edi [ esp + 0xc ]
or esi 0xffffffff
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_44b390
push esi
push eax
call sub_44a045
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov esi eax
sub_45c216
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ esp + 0x1c ]
mov ecx edi
call sub_40c760
lea esi [ eax - 0x1 ]
mov eax [ esp + 0x18 ]
mov [ eax ] esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x10
push edi
call sub_453333
test al al
je r-xdata
cmp esi [ ebx + 0x180 ]
jge r-xdata
mov ecx [ ebx + 0x17c ]
mov esi [ ecx + esi * 4 ]
cmp [ esi ] 0x0
je r-xdata
cmp ebp 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x10
mov edx [ esi ]
cmp [ edx ] ebp
je r-xdata
sub_45c277
mov eax 0x10214
call sub_425210
push ebx
push ebp
push esi
mov esi [ esp + 0x10228 ]
push edi
mov ebp ecx
call sub_4092c0
mov edi [ esp + 0x10228 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor bl bl
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x18 ]
call sub_40ffb0
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x7fff
lea edx [ esp + 0x22c ]
push edx
push eax
call sub_453081
push eax
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
test eax eax
setg bl
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10214
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x3
lea edx [ esp + 0x18 ]
push edx
push eax
call sub_453081
push eax
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x228 ]
push ecx
push eax
call sub_453081
push eax
call [ WritePrivateProfileSectionW@IAT ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x0
push eax
call sub_453081
mov edi [ WritePrivateProfileStringW@IAT ]
push eax
call edi
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x0
push 0x0
call edi
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
test bl bl
jne r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10214
retn 0x8
sub_45c3b5
push ecx
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0x4 ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
call sub_4534eb
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test eax eax
je r-xdata
xor eax eax
pop esi
pop ecx
retn 0x8
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov [ esp + 0x4 ] 0x1
sub_45c41e
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call [ SetCurrentDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45c455
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
push edi
mov [ esp + 0x10 ] 0x0
jb r-xdata
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi edi
call sub_4092c0
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
test al 0x8
je r-xdata
mov [ esp + 0x10 ] 0x1
lea ecx [ esp + 0x18 ]
call sub_40c060
push 0x8
call sub_41171a
add esp 0x4
push 0x202
mov ebx eax
call sub_41171a
mov edx [ ebp + 0x8 ]
add esp 0x4
push 0x0
mov esi eax
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x0
push esi
push ebx
push eax
mov [ esp + 0x28 ] esi
call sub_453081
push eax
call sub_413db0
add esp 0x14
mov edi ebx
lea eax [ esp + 0x18 ]
call sub_40d330
mov edi esi
lea eax [ esp + 0x18 ]
call sub_40d330
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
push ecx
call sub_436b22
add esp 0x4
test al al
jne r-xdata
call sub_402620
mov esi [ ebp + 0x8 ]
jmp r-xdata
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x18 ]
push edx
call sub_4366be
add esp 0x4
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
mov eax [ esp + 0x10 ]
push 0x1
push eax
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
call sub_44bd29
add esp 0x10
test al al
jne r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
call sub_4092c0
mov esi [ esp + 0x14 ]
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
jmp r-xdata
push ebx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
mov ecx edi
call sub_40c760
lea ecx [ esp + 0x18 ]
test eax eax
jne r-xdata
sub_45c5c5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x224
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x3
push edi
mov [ esp + 0xc ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push 0x0
push edx
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
call sub_44bd29
add esp 0x10
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
test al 0x8
je r-xdata
mov [ esp + 0xc ] 0x1
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
call sub_453081
push eax
call sub_413db0
add esp 0x14
lea edi [ esp + 0x20 ]
lea esi [ esp + 0x10 ]
call sub_401b70
lea edi [ esp + 0x28 ]
mov eax esi
call sub_40d330
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx ebx
call sub_40c760
lea ecx [ esp + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_436b22
add esp 0x4
test al al
jne r-xdata
call sub_402620
mov esi [ ebp + 0x8 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x10 ]
push ecx
call sub_4366be
add esp 0x4
test al al
jne r-xdata
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
sub_45c6f7
push ecx
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x8 ] 0x2
mov [ esp + 0x4 ] 0x0
jb r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
push eax
call sub_453081
push eax
call sub_44bb20
add esp 0x8
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
test eax eax
je r-xdata
xor eax eax
pop esi
pop ecx
retn 0x8
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov [ esp + 0x4 ] 0x1
sub_45c756
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_4366be
add esp 0x4
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45c78f
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_436b22
add esp 0x4
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45c7c8
push ecx
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0x4 ] 0x0
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
call sub_44bbc9
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test eax eax
je r-xdata
xor eax eax
pop esi
pop ecx
retn 0x8
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov [ esp + 0x4 ] 0x1
sub_45c831
sub esp 0x20c
push ebx
push esi
mov esi [ esp + 0x218 ]
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_411691
add esp 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov edi eax
jmp r-xdata
lea edi [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0xc ]
call sub_40ffb0
jmp r-xdata
mov ebx [ esp + 0x220 ]
call sub_40e6d0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x20c
retn 0x8
push 0x104
lea edx [ esp + 0x10 ]
push edx
push edx
call [ GetShortPathNameW@IAT ]
test eax eax
je r-xdata
sub_45c8dc
sub esp 0x20c
push ebx
push ebp
push esi
mov esi [ esp + 0x21c ]
cmp [ esi + 0x8 ] 0x1
push edi
mov ebp ecx
jbe r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_411691
add esp 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov ebx [ esp + 0x224 ]
mov edi eax
call sub_40e6d0
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20c
retn 0x8
mov ebx [ esp + 0x224 ]
call sub_40e6d0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20c
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x10 ]
call sub_40ffb0
jmp r-xdata
lea ebx [ esp + 0x10 ]
mov edi ebx
call sub_410130
cmp al 0x1
jne r-xdata
sub_45c999
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
push ebx
push esi
push edi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_453081
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ esp + 0x10 ]
push edx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
push 0x1
add eax esi
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
call [ FindClose@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x180 ]
xor ebx ebx
test eax eax
jbe r-xdata
push 0x14
cmp ebx eax
jne r-xdata
mov ecx [ esi + 0x17c ]
call sub_41171a
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebx * 4 ]
add esp 0x4
mov [ ecx ] eax
call sub_41171a
add esp 0x4
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
lea ecx [ esi + 0x178 ]
push ecx
call sub_434343
jmp r-xdata
inc ebx
add ecx 0x4
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x17c ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov [ ecx ] 0x1
mov edx [ esi + 0x17c ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov [ ecx + 0x8 ] edi
lea edi [ esp + 0x3c ]
call sub_40fff0
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebx * 4 ]
mov edx [ ecx ]
mov [ edx + 0xc ] eax
mov eax [ esi + 0x17c ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
call sub_4092c0
inc ebx
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
sub_45cb19
sub esp 0x404
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x418 ]
cmp [ edi + 0x8 ] 0x1
mov ebp ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_453081
mov esi eax
mov esi r--data
jmp r-xdata
push r--data
push esi
call sub_4133e4
mov ebx [ esp + 0x424 ]
add esp 0x8
mov edi r--data
test eax eax
je r-xdata
mov ebx [ esp + 0x41c ]
lea edi [ esp + 0x10 ]
call sub_40e6d0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x404
retn 0x8
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push esi
lea edx [ esp + 0x14 ]
push edx
push eax
call sub_453081
push eax
call sub_436b3a
add esp 0xc
cmp al 0x1
jne r-xdata
call sub_40e6d0
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x404
retn 0x8
mov edi r--data
sub_45cbcc
sub esp 0xc3c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xc50 ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
xor ebx ebx
push eax
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] ebx
call sub_453081
cmp [ edi + 0x8 ] 0x3
mov esi eax
lea ebp [ ebx + 0x1 ]
jb r-xdata
mov [ esp + 0x14 ] bl
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
mov [ esp + 0x14 ] 0x1
cmp eax ebp
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx ]
push 0x104
push eax
call sub_453081
push eax
lea eax [ esp + 0x228 ]
push eax
call sub_41326a
xor ecx ecx
lea esi [ esp + 0x22c ]
mov [ esp + 0x434 ] cx
call sub_410110
mov eax esi
mov ecx esi
call sub_40ffb0
lea edx [ esp + 0xa54 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x858 ]
push ecx
lea edx [ esp + 0x650 ]
push edx
push esi
call sub_413db0
lea ecx [ esp + 0x864 ]
push ecx
lea edx [ esp + 0x65c ]
push edx
call sub_411663
lea eax [ esp + 0xa70 ]
push eax
lea ecx [ esp + 0x48 ]
push ecx
call sub_411663
add esp 0x30
lea edx [ esp + 0x42c ]
push edx
push 0x104
call [ __import_lookup_table_0(KERNEL32:GetCurrentDirectoryW) ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x638 ]
push eax
call edi
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp ax 0x2b
jne r-xdata
cmp [ esi ] bx
je r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_436ac4
add esp 0x4
test al al
je r-xdata
mov esi [ esp + 0xc54 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc3c
retn 0x8
cmp ax 0x2d
jne r-xdata
add esi 0x2
mov ebp 0x1
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x1c ]
push ebx
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_434bee
test al al
jne r-xdata
lea edx [ esp + 0x1c ]
push edx
call [ GetFileAttributesW@IAT ]
or eax [ esp + 0x10 ]
mov ecx ebx
not ecx
and eax ecx
push eax
lea edx [ esp + 0x20 ]
push edx
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesW) ]
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp ax 0x52
je r-xdata
add esi 0x2
xor ebp ebp
lea ecx [ esp + 0x42c ]
push ecx
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc3c
retn 0x8
mov esi [ esp + 0xc54 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ esp + 0x14 ] 0x0
je r-xdata
lea eax [ esp + 0x42c ]
push eax
call edi
jmp r-xdata
mov eax 0x1
cmp ax 0x72
je r-xdata
lea edx [ esp + 0x1c ]
push edx
call edi
lea eax [ esp + 0x1c ]
push r--data
push eax
call sub_411691
add esp 0x8
or ebx eax
or [ esp + 0x10 ] eax
jmp r-xdata
cmp ax 0x41
je r-xdata
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
mov eax 0x20
jmp r-xdata
cmp ax 0x61
je r-xdata
cmp ebp 0x1
jne r-xdata
cmp ax 0x53
je r-xdata
mov eax 0x4
jmp r-xdata
cmp ax 0x73
je r-xdata
cmp ax 0x48
je r-xdata
mov eax 0x2
jmp r-xdata
cmp ax 0x68
je r-xdata
cmp ax 0x4e
je r-xdata
mov eax 0x80
jmp r-xdata
cmp ax 0x6e
je r-xdata
cmp ax 0x4f
je r-xdata
mov eax 0x1000
jmp r-xdata
cmp ax 0x6f
je r-xdata
cmp ax 0x54
je r-xdata
mov eax 0x100
jmp r-xdata
cmp ax 0x74
jne r-xdata
sub_45ce6b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x10 ]
call sub_40c060
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_436ade
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
je r-xdata
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test bl 0x4
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test bl 0x2
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test bl bl
jns r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test bl 0x10
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test ebx 0x1000
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test ebx 0x800
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
test ebx 0x100
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x10 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
jmp r-xdata
sub_45cf94
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
je r-xdata
push 0x7
push eax
push 0x0
call [ __import_lookup_table_9(SHELL32:SHEmptyRecycleBinW) ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45cfd6
sub esp 0x22c
mov eax [ esp + 0x230 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push edi
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x24 ]
call sub_40ffb0
lea edx [ esp + 0x24 ]
push edx
call sub_4112d5
xor ecx ecx
mov [ esp + eax * 2 + 0x2a ] cx
xor edi edi
add esp 0x4
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x24 ]
mov eax 0x54
push ecx
mov [ esp + 0x1e ] edi
mov [ esp + 0x22 ] edi
mov [ esp + 0x1a ] edi
mov [ esp + 0x8 ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edx
mov [ esp + 0xc ] 0x3
mov [ esp + 0x18 ] ax
call [ __import_lookup_table_9(SHELL32:SHFileOperationW) ]
test eax eax
je r-xdata
xor eax eax
pop edi
add esp 0x22c
retn 0x8
push esi
mov esi [ esp + 0x23c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop esi
sub_45d070
push ecx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x8 ] 0x2
mov [ esp + 0x8 ] 0x0
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_436ac4
add esp 0x4
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
push ebx
push ebp
push 0x0
push ecx
call sub_453081
push eax
push esi
call sub_453081
mov ebp [ CreateHardLinkW@IAT ]
push eax
call ebp
mov esi [ esp + 0x1c ]
mov ebx eax
call sub_4092c0
mov ecx esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40c760
test eax eax
jne r-xdata
mov edi [ edi + 0x4 ]
mov edx [ esp + 0x8 ]
mov eax [ edi + 0x4 ]
mov edi [ edi ]
push edx
push eax
call sub_453081
push eax
push edi
call sub_453081
push eax
call sub_434d50
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
pop ecx
retn 0x8
mov [ esp + 0x8 ] al
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
cmp eax 0xb7
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_453081
push eax
call [ DeleteFileW@IAT ]
mov edi [ edi + 0x4 ]
mov eax [ edi ]
mov edi [ edi + 0x4 ]
push 0x0
push eax
call sub_453081
push eax
push edi
call sub_453081
push eax
call ebp
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
sub_45d186
sub esp 0x14
push ebx
push ebp
mov ebp [ SetErrorMode@IAT ]
push esi
push edi
push 0x1
call ebp
mov ebx [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ecx [ eax ]
mov [ esp + 0x14 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x18 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x1c ] ecx
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
inc [ eax ]
mov edi [ esp + 0x18 ]
dec edi
lea esi [ esp + 0x14 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
mov esi [ esp + 0x14 ]
push eax
call sub_453081
push eax
push esi
call [ SetVolumeLabelW@IAT ]
test eax eax
jne r-xdata
mov edi r--data
mov eax esi
call sub_40d330
lea ecx [ esp + 0x14 ]
call sub_402620
mov eax [ esp + 0x10 ]
push eax
call ebp
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov esi [ esp + 0x2c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_45d235
sub esp 0x420
push ebx
push ebp
push esi
push edi
push 0x1
mov ebp ecx
call [ SetErrorMode@IAT ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x434 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x1c ] eax
inc [ eax ]
mov edi [ esp + 0x14 ]
dec edi
lea esi [ esp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
push 0xff
lea eax [ esp + 0x234 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x34 ]
push eax
push 0xff
lea ecx [ esp + 0x48 ]
push ecx
push edx
call [ __import_lookup_table_0(KERNEL32:GetVolumeInformationW) ]
mov ebx [ esp + 0x438 ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
mov edi r--data
call sub_40e6d0
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
lea edi [ esp + 0x30 ]
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
mov ecx [ esp + 0x20 ]
push ecx
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x420
retn 0x8
sub_45d321
sub esp 0x420
push ebx
push ebp
push esi
push edi
push 0x1
mov ebp ecx
call [ SetErrorMode@IAT ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x434 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x1c ] eax
inc [ eax ]
mov edi [ esp + 0x14 ]
dec edi
lea esi [ esp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
push 0xff
lea eax [ esp + 0x234 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x34 ]
push eax
push 0xff
lea ecx [ esp + 0x48 ]
push ecx
push edx
call [ __import_lookup_table_0(KERNEL32:GetVolumeInformationW) ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
mov ebx [ esp + 0x438 ]
mov edi r--data
call sub_40e6d0
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x34 ]
push r--data
push ecx
call sub_41353a
mov ebx [ esp + 0x444 ]
add esp 0xc
lea edi [ esp + 0x30 ]
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
mov eax [ esp + 0x20 ]
push eax
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x420
retn 0x8
sub_45d42b
sub esp 0x420
push ebx
mov ebx [ esp + 0x42c ]
push ebp
push esi
push edi
mov edi r--data
mov ebp ecx
call sub_40e6d0
push 0x1
call [ SetErrorMode@IAT ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x434 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x1c ] eax
inc [ eax ]
mov edi [ esp + 0x14 ]
dec edi
lea esi [ esp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
push 0xff
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x34 ]
push eax
push 0xff
lea ecx [ esp + 0x248 ]
push ecx
push edx
call [ __import_lookup_table_0(KERNEL32:GetVolumeInformationW) ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
lea edi [ esp + 0x30 ]
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
mov ecx [ esp + 0x20 ]
push ecx
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x420
retn 0x8
sub_45d517
sub esp 0x24
push ebx
push ebp
push esi
push edi
push 0x1
mov ebp ecx
call [ SetErrorMode@IAT ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x38 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x28 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x2c ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x30 ] eax
inc [ eax ]
mov edi [ esp + 0x28 ]
dec edi
lea esi [ esp + 0x24 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x2c ]
push eax
push ecx
xor esi esi
call [ GetDiskFreeSpaceW@IAT ]
test eax eax
jne r-xdata
mov edi r--data
mov eax esi
call sub_40d330
movzx edx [ esi + sub_45d64f ]
jmp [ edx * 4 + jump_table_45d63b ]
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov esi eax
cmp esi 0x15
ja r-xdata
mov ebx [ esp + 0x3c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x3c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x3c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x3c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x3c ]
mov edi r--data
call sub_40e6d0
test esi esi
jle r-xdata
lea ecx [ esp + 0x24 ]
call sub_402620
mov ecx [ esp + 0x10 ]
push ecx
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn 0x8
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
sub_45d64f
add [ esp + eax ] al
add [ esp + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x3
sub esp 0x34
push ebx
push ebp
push esi
push edi
push 0x1
mov ebp ecx
call [ SetErrorMode@IAT ]
mov ebx [ esp + 0x4c ]
mov esi ebx
mov [ esp + 0x10 ] eax
call sub_4092c0
mov eax [ esp + 0x48 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x38 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x3c ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x40 ] eax
inc [ eax ]
mov edi [ esp + 0x38 ]
dec edi
lea esi [ esp + 0x34 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push eax
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
mov ecx [ ebp ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
fild [ esp + 0x14 ]
mov esi ebx
fmul [ r--data ]
fstp [ esp + 0x1c ]
call sub_4092c0
fld [ esp + 0x1c ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
jmp r-xdata
lea ecx [ esp + 0x34 ]
call sub_402620
mov edx [ esp + 0x10 ]
push edx
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x34
retn 0x8
sub_45d751
sub esp 0x34
push ebx
push ebp
push esi
push edi
push 0x1
mov ebp ecx
call [ SetErrorMode@IAT ]
mov ebx [ esp + 0x4c ]
mov esi ebx
mov [ esp + 0x10 ] eax
call sub_4092c0
mov eax [ esp + 0x48 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x38 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x3c ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x40 ] eax
inc [ eax ]
mov edi [ esp + 0x38 ]
dec edi
lea esi [ esp + 0x34 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push eax
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
mov ecx [ ebp ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
fild [ esp + 0x14 ]
mov esi ebx
fmul [ r--data ]
fstp [ esp + 0x1c ]
call sub_4092c0
fld [ esp + 0x1c ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
jmp r-xdata
lea ecx [ esp + 0x34 ]
call sub_402620
mov edx [ esp + 0x10 ]
push edx
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x34
retn 0x8
sub_45d83d
sub esp 0x14
push ebx
push ebp
push esi
push edi
push 0x1
mov ebp ecx
call [ SetErrorMode@IAT ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x14 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x1c ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
inc [ eax ]
mov edi [ esp + 0x18 ]
dec edi
lea esi [ esp + 0x14 ]
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetDriveTypeW) ]
cmp eax 0x1
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
mov ecx [ ebp ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
add eax 0xfffffffe
cmp eax 0x4
ja r-xdata
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
jmp [ eax * 4 + jump_table_45d95d ]
lea ecx [ esp + 0x14 ]
call sub_402620
mov edx [ esp + 0x10 ]
push edx
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov edi r--data
call sub_40e6d0
jmp r-xdata
sub_45d971
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_453063
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x3c ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] eax
call sub_45335b
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
jne r-xdata
push r--data
lea eax [ esp + 0x24 ]
call sub_4021e0
push edi
call [ __import_lookup_table_0(KERNEL32:GetDriveTypeW) ]
cmp eax 0x5
jne r-xdata
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
lea eax [ esp + 0x30 ]
push eax
mov eax esi
call sub_40c140
mov edi r--data
mov eax esi
call sub_40d330
mov ecx [ esp + 0x10 ]
mov ebx [ mciSendStringW@IAT ]
push 0x0
push 0x0
push 0x0
push ecx
call ebx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
lea ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402620
jmp r-xdata
push r--data
mov eax esi
call sub_4021e0
lea edx [ esp + 0x20 ]
push edx
mov eax esi
call sub_40c140
mov edi r--data
mov eax esi
call sub_40d330
mov eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
call ebx
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
mov ecx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push ecx
call ebx
lea ecx [ esp + 0x10 ]
call sub_402620
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_45db3e
mov eax 0x1658
call sub_425210
push ebx
push ebp
push esi
mov esi [ esp + 0x1668 ]
push edi
mov edi [ esi + 0x8 ]
xor eax eax
push 0x208
mov [ esp + 0x20 ] ecx
push eax
lea ecx [ esp + 0x56 ]
push ecx
mov [ esp + 0x58 ] ax
call sub_4131f0
xor edx edx
push 0x206
push edx
lea eax [ esp + 0x26e ]
push eax
mov [ esp + 0x270 ] dx
call sub_4131f0
add esp 0x18
xor ebp ebp
push ebp
mov ebx 0x200
call [ __import_lookup_table_6(ole32:CoInitialize) ]
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x24 ] eax
call [ SHGetMalloc@IAT ]
cmp edi 0x5
jb r-xdata
cmp edi 0x4
jb r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_44b390
mov ebp eax
cmp edi 0x3
jb r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_453081
push eax
lea ecx [ esp + 0x25c ]
push ecx
call sub_411691
add esp 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453081
xor edi edi
cmp [ eax ] di
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
test al 0x1
je r-xdata
mov [ esp + 0x28 ] edi
lea eax [ esp + 0x14 ]
push eax
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test al 0x2
je r-xdata
mov ebx 0x40
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
push 0x1
add eax ecx
call sub_4040e0
mov ebx [ esp + 0x1670 ]
mov edi r--data
mov ebx [ esp + 0x1670 ]
lea edi [ esp + 0x4c ]
call sub_40e6d0
push edi
push esi
call [ __import_lookup_table_9(SHELL32:SHGetPathFromIDListW) ]
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x14 ]
call eax
cmp [ esp + 0x4c ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x2c ] ecx
mov eax [ edx ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x66c ]
push eax
call sub_411691
add esp 0x8
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x668 ]
lea edx [ esp + 0x258 ]
push eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x3c ] sub_434ee4
mov [ esp + 0x40 ] edx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x44 ] edi
call [ __import_lookup_table_9(SHELL32:SHBrowseForFolderW) ]
mov esi eax
cmp esi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ esp + 0x18 ] edi
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
push eax
lea edx [ esp + 0x464 ]
push edx
call sub_411691
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
add esp 0x8
lea edx [ esp + 0x44 ]
push edx
lea edx [ esp + 0x1c ]
push edx
lea edx [ esp + 0x50 ]
push edx
lea edx [ esp + 0x46c ]
push edx
push edi
push edi
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
test al 0x4
je r-xdata
or ebx 0x40
xor eax eax
add esp 0x1658
retn 0x8
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esp + 0x20 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
jne r-xdata
jmp r-xdata
or ebx 0x10
call sub_40e6d0
sub_45dd7c
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_453081
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov ebx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov esi [ ebp + 0xc ]
xor edx edx
xor edi edi
or edi ecx
or ebx edx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45de12
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc6c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
push eax
mov [ esp + 0x20 ] ecx
call sub_453081
mov ebx eax
mov [ esp + 0xc ] 0x0
cmp edi 0x3
jb r-xdata
cmp edi 0x4
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
test eax eax
jl r-xdata
mov [ esp + 0x10 ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
mov [ esp + 0x10 ] 0x1
cmp eax 0x1
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
cmp eax 0x2
jg r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ GetLocalTime@IAT ]
push 0x0
push 0x1
lea edx [ esp + 0x28 ]
push edx
push ebx
call sub_435a35
add esp 0x10
test al al
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov [ esp + 0xc ] eax
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x30 ]
push ecx
call sub_436ac4
add esp 0x4
test al al
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
call [ __import_lookup_table_0(KERNEL32:SystemTimeToFileTime) ]
lea ecx [ esp + 0x14 ]
push ecx
push ecx
call [ __import_lookup_table_0(KERNEL32:LocalFileTimeToFileTime) ]
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0x104
push eax
call sub_453081
push eax
lea eax [ esp + 0x240 ]
push eax
call sub_41326a
xor ecx ecx
add esp 0xc
lea esi [ esp + 0x238 ]
mov [ esp + 0x440 ] cx
call sub_410110
mov eax esi
mov ecx esi
call sub_40ffb0
lea edx [ esp + 0xa70 ]
push edx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x870 ]
push ecx
lea edx [ esp + 0x664 ]
push edx
push esi
call sub_413db0
add esp 0x14
lea ecx [ esp + 0x868 ]
push ecx
lea edx [ esp + 0x65c ]
push edx
call sub_411663
lea eax [ esp + 0xa78 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_411663
add esp 0x10
lea edx [ esp + 0x448 ]
push edx
push 0x104
call [ __import_lookup_table_0(KERNEL32:GetCurrentDirectoryW) ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x658 ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x3c ]
push eax
call sub_442e1f
test al al
jne r-xdata
mov edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
call sub_436d2d
add esp 0xc
test al al
jne r-xdata
lea ecx [ esp + 0x448 ]
push ecx
call edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea edx [ esp + 0x448 ]
push edx
call edi
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call edi
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_411691
add esp 0x8
lea eax [ esp + 0x448 ]
push eax
call edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45e06c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0xffffffff
push eax
lea edx [ esp + 0x10 ]
push edx
push esi
call sub_45c216
test al al
jne r-xdata
mov eax [ esi + 0x17c ]
push edi
mov edi [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov edx [ eax + 0x8 ]
push edx
call [ FindClose@IAT ]
mov eax [ esi + 0x17c ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push eax
call sub_4112ef
add esp 0x4
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x17c ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
push eax
call sub_4112ef
mov ecx [ esi + 0x17c ]
mov edx [ ecx + edi * 4 ]
add esp 0x4
pop edi
mov [ edx ] 0x0
xor eax eax
pop esi
retn 0x8
push eax
call sub_44ade5
jmp r-xdata
sub_45e115
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
push edi
push esi
mov edi ecx
call sub_443e34
test al al
je r-xdata
push 0x0
push esi
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_45c216
test al al
je r-xdata
push 0x38
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
mov ecx [ edi + 0x17c ]
mov edx [ esp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov edi [ ecx + 0x4 ]
xor edi edi
call sub_40d940
mov edi eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov esi edi
call sub_40d900
xor eax eax
push edi
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
call sub_44ade5
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push eax
or esi 0x2000
call sub_453063
push eax
mov eax esi
mov ecx edi
call sub_40dfa0
test al al
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
cmp eax 0x2
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
mov esi 0x4000
jb r-xdata
push ebp
push edi
call sub_437257
mov esi [ esp + 0x18 ]
mov ebp eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebp
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push eax
call sub_443e34
pop ebp
test al al
je r-xdata
test edi edi
je r-xdata
xor esi esi
push edi
call sub_44ade5
sub_45e21e
sub esp 0x20c
push esi
mov esi [ esp + 0x214 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x4 ]
call sub_40ffb0
lea ecx [ esp + 0x4 ]
push ecx
call sub_436b22
add esp 0x4
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x2
je r-xdata
mov esi [ esp + 0x218 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
add esp 0x20c
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x4 ]
push edx
push 0x0
push 0x0
push eax
call sub_453081
mov esi [ WritePrivateProfileStringW@IAT ]
push eax
call esi
test eax eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x0
push 0x0
call esi
xor eax eax
pop esi
add esp 0x20c
retn 0x8
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
lea edx [ esp + 0x4 ]
push edx
push 0x0
push ecx
call sub_453081
push eax
push esi
call sub_453081
mov esi [ WritePrivateProfileStringW@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
call sub_44adff
test al al
jne r-xdata
sub_45e300
sub esp 0x20c
push esi
mov esi [ esp + 0x214 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x8 ]
call sub_40ffb0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
lea edx [ esp + 0x8 ]
push edx
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
push edi
call sub_453081
mov esi [ WritePrivateProfileStringW@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov esi [ esp + 0x21c ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
add esp 0x20c
retn 0x8
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
call esi
pop edi
xor eax eax
pop esi
add esp 0x20c
retn 0x8
sub_45e397
mov eax 0x2020c
call sub_425210
push ebx
push esi
mov esi [ esp + 0x20218 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0xc ]
call sub_40ffb0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
lea edx [ esp + 0xc ]
push edx
push 0xffff
lea eax [ esp + 0x220 ]
push eax
push ecx
call sub_453081
push eax
push esi
call sub_453081
push eax
push edi
call sub_453081
push eax
call [ GetPrivateProfileStringW@IAT ]
mov ebx [ esp + 0x20220 ]
lea edi [ esp + 0x218 ]
call sub_40e6d0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2020c
retn 0x8
sub_45e41b
mov eax 0x204c
call sub_425210
cmp [ rw-data ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x2058 ]
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x204c
retn 0x8
cmp [ ebp + 0xf8 ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ebx [ __import_lookup_table_10(USER32:LoadStringW) ]
push 0xfff
lea eax [ esp + 0x5c ]
push eax
push 0x66
push ecx
call ebx
lea edi [ esp + 0x58 ]
lea esi [ esp + 0x48 ]
call sub_401b70
mov eax [ rw-data ]
push 0xfff
push edi
push 0x72
push eax
call ebx
lea esi [ esp + 0x38 ]
call sub_401b70
mov esi [ ebp + 0xf4 ]
push esi
call sub_437a81
push esi
mov [ esp + 0x28 ] eax
call sub_437a4d
mov edi eax
push esi
mov [ esp + 0x24 ] edi
call sub_437aca
push eax
call sub_437aa7
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp + 0xc8 ]
push edx
push esi
push r--data
lea eax [ esp + 0x64 ]
push eax
push ebx
push edi
push r--data
lea ecx [ esp + 0x64 ]
push ecx
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c060
mov edi [ esp + 0x2064 ]
test edi edi
je r-xdata
mov edi esi
lea eax [ esp + 0x10 ]
call sub_40d330
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
call sub_41353a
add esp 0x10
lea edi [ esp + 0x58 ]
lea esi [ esp + 0x10 ]
call sub_401b70
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x14 ]
call sub_40c140
cmp [ rw-data ] 0x0
je r-xdata
push r--data
lea eax [ esp + 0x2c ]
call sub_4021e0
lea eax [ esp + 0x28 ]
call sub_40d330
lea ecx [ esp + 0x28 ]
push ecx
lea eax [ esp + 0x14 ]
call sub_40c140
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
push 0x11010
push eax
push ecx
push edx
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ ebp + 0xf4 ]
mov edx [ ebp + 0xc8 ]
push eax
push ecx
push edx
push r--data
call sub_413e5c
add esp 0x10
jmp r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x20 ]
push eax
push esi
push ecx
push edx
push ebx
push r--data
call sub_413e5c
add esp 0x18
jmp r-xdata
movzx eax [ ebp + 0x118 ]
neg eax
sbb eax eax
and eax 0x7ffff071
inc eax
lea ecx [ esp + 0x28 ]
mov [ ebp + 0xf8 ] 0x1
mov [ rw-data ] eax
call sub_402620
lea ecx [ esp + 0x10 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
sub_45e62e
mov eax 0x2048
call sub_425210
cmp [ rw-data ] 0x0
push ebx
push ebp
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2048
retn 0xc
mov ebp [ esp + 0x205c ]
cmp [ ebp + 0xf8 ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ebx [ __import_lookup_table_10(USER32:LoadStringW) ]
push 0xfff
lea eax [ esp + 0x5c ]
push eax
push 0x66
push ecx
call ebx
lea edi [ esp + 0x58 ]
lea esi [ esp + 0x48 ]
call sub_401b70
mov eax [ esp + 0x2060 ]
mov ecx [ rw-data ]
push 0xfff
push edi
push eax
push ecx
call ebx
lea esi [ esp + 0x38 ]
call sub_401b70
mov esi [ ebp + 0xf4 ]
push esi
call sub_437a81
push esi
mov ebp eax
call sub_437a4d
mov edi eax
push esi
mov [ esp + 0x28 ] edi
call sub_437aca
push eax
call sub_437aa7
mov ebx eax
lea edx [ esp + 0x58 ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x205c ]
mov ecx [ eax + 0xc8 ]
push ecx
push esi
push ebx
push edi
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_40c060
mov edi [ esp + 0x2064 ]
test edi edi
jl r-xdata
mov edi ebp
mov eax esi
call sub_40d330
mov edi r--data
mov eax esi
call sub_40d330
push r--data
push edx
call sub_41353a
add esp 0x10
lea edi [ esp + 0x58 ]
lea esi [ esp + 0x14 ]
call sub_401b70
test ebp ebp
je r-xdata
mov edi r--data
lea eax [ esp + 0x14 ]
call sub_40d330
lea ecx [ esp + 0x38 ]
push ecx
lea eax [ esp + 0x18 ]
call sub_40c140
cmp [ rw-data ] 0x0
je r-xdata
push ebp
lea eax [ esp + 0x2c ]
call sub_4021e0
or eax 0xffffffff
lea esi [ esp + 0x28 ]
call sub_40c740
mov edi r--data
mov eax esi
call sub_40d330
push esi
lea eax [ esp + 0x18 ]
call sub_40c140
mov edi r--data
lea eax [ esp + 0x14 ]
call sub_40d330
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
push 0x11010
push edx
push eax
push ecx
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
test ebx ebx
je r-xdata
mov [ rw-data ] eax
mov edx [ esp + 0x2060 ]
add edx 0x7ffff000
mov [ rw-data ] edx
jmp r-xdata
mov edx [ esp + 0x38 ]
mov esi [ esp + 0x205c ]
mov eax [ esi + 0xf4 ]
mov ecx [ esi + 0xc8 ]
push edx
push eax
push ecx
push r--data
call sub_413e5c
add esp 0x10
jmp r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push edx
push ebp
push eax
push ecx
push ebx
push r--data
call sub_413e5c
add esp 0x18
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x14 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
cmp [ esi + 0x118 ] 0x0
mov eax 0x1
mov [ esi + 0xf8 ] eax
je r-xdata
mov esi [ esp + 0x205c ]
sub_45e85e
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x5
je r-xdata
mov ecx [ esi ]
mov [ ecx + 0x210 ] 0x0
pop esi
retn 0x4
mov eax esi
call sub_40e8f0
mov eax [ esi ]
mov [ eax + 0x210 ] 0x0
pop esi
retn 0x4
sub_45e890
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x4
je r-xdata
pop esi
retn 0x4
push esi
call sub_452e2a
cmp [ esi + 0x8 ] 0x5
jne r-xdata
cmp [ esi + 0x8 ] 0xb
jne r-xdata
mov eax esi
call sub_40e380
mov [ esi + 0x8 ] 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_4112ef
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x8
mov [ esi ] 0x0
sub_45e8db
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov ecx 0x8
cmp [ esi + 0x8 ] ecx
je r-xdata
xor al al
pop esi
retn 0x8
cmp [ eax + 0x8 ] ecx
je r-xdata
push eax
call sub_453063
push eax
push esi
call sub_453063
mov esi eax
pop eax
call sub_40dd00
pop esi
retn 0x8
sub_45e912
sub esp 0x54
push ebx
mov ebx [ esp + 0x5c ]
push ebp
push esi
push edi
mov edi [ esp + 0x6c ]
movzx eax [ edi ]
cmp eax 0x4002
jg r-xdata
sub eax 0x4003
cmp eax 0x12
ja r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x54
retn 0x8
jmp [ eax * 4 + jump_table_45ed76 ]
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
cmp eax 0x15
ja r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
movsx edi [ edi ]
jmp r-xdata
jmp [ eax * 4 + jump_table_45ed1e ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
push 0x10
mov [ ebx + 0x8 ] 0x8
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov ecx [ ebx ]
mov edx 0x9
mov [ ecx ] dx
mov eax [ edi + 0x8 ]
mov edx [ eax ]
mov ecx [ ebx ]
mov [ ecx + 0x8 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
movsx edi [ edi ]
jmp r-xdata
movzx edi [ edi ]
jmp r-xdata
movzx edi [ edi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
mov ebp [ edi ]
mov edi [ edi + 0x4 ]
jmp r-xdata
fld [ edi ]
mov esi ebx
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
fld [ edi ]
mov esi ebx
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
cmp [ edi ] 0x0
jmp r-xdata
push edi
mov ecx ebx
call sub_467626
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] edi
push 0x10
mov [ ebx + 0x8 ] 0x8
call sub_41171a
add esp 0x4
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ ebx ]
push edi
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
movsx edi [ edi + 0x8 ]
movzx edi [ edi + 0x8 ]
jmp r-xdata
movsx edi [ edi + 0x8 ]
jmp r-xdata
movzx edi [ edi + 0x8 ]
jmp r-xdata
mov edi [ edi + 0x8 ]
jmp r-xdata
mov ebp [ edi + 0x8 ]
mov edi [ edi + 0xc ]
fld [ edi + 0x8 ]
mov esi ebx
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
fld [ edi + 0x8 ]
mov esi ebx
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ ebx + 0x8 ] 0x3
fstp [ ebx ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
fild [ edi + 0x8 ]
mov esi ebx
fdiv [ r--data ]
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
cmp [ edi + 0x8 ] 0x0
fld [ edi + 0x8 ]
lea edx [ esp + 0x20 ]
push edx
sub esp 0x8
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
movzx eax [ esp + 0x2c ]
movzx ecx [ esp + 0x2a ]
movzx edx [ esp + 0x28 ]
push eax
movzx eax [ esp + 0x2a ]
push ecx
movzx ecx [ esp + 0x2a ]
push edx
movzx edx [ esp + 0x2c ]
push eax
push ecx
push edx
lea eax [ esp + 0x58 ]
push r--data
push eax
call sub_41353a
add esp 0x20
lea edi [ esp + 0x40 ]
call sub_40e6d0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov ecx [ edi ]
mov [ esp + 0x34 ] edx
lea edx [ esp + 0x18 ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x30 ] ecx
mov ecx [ edi + 0xc ]
push edx
lea eax [ esp + 0x34 ]
push eax
mov [ esp + 0x44 ] ecx
call [ VarR8FromDec@IAT ]
fld [ esp + 0x18 ]
mov esi ebx
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov edi r--data
call sub_40e6d0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] 0x4
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov edi [ edi + 0x8 ]
mov esi eax
call sub_401b70
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] 0x4
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x2
mov [ ebx ] ebp
mov [ ebx + 0x4 ] edi
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
setne al
mov [ esp + 0x6c ] al
mov ecx [ esp + 0x6c ]
push ecx
push ebx
call sub_452d91
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov ecx [ ebx ]
push ecx
call [ VariantClear@IAT ]
mov edx [ ebx ]
push edx
call sub_4112ef
add esp 0x4
mov [ ebx ] 0x0
sub_45edc2
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push edi
mov edi [ esp + 0x1c ]
push ebp
push ebx
call sub_453135
test eax eax
je r-xdata
push esi
push 0x20
and edi 0xff00
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop ebp
mov [ eax + 0x14 ] ecx
pop ebx
retn 0x10
xor esi esi
push eax
call sub_44b3f6
mov esi eax
jmp r-xdata
push ebp
call sub_40df50
mov edx [ esp + 0x1c ]
xor eax eax
or edi 0x1
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edx
mov eax [ ebx ]
push eax
mov eax esi
call sub_4041f0
pop esi
pop edi
pop ebp
mov [ ebx ] eax
pop ebx
retn 0x10
sub_45ee70
push edi
mov edi [ esp + 0x8 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
push esi
lea esi [ edi + 0x4 ]
push esi
call [ InterlockedDecrement@IAT ]
cmp [ esi ] 0x0
pop esi
jne r-xdata
pop edi
retn 0x4
push edi
call sub_45ee56
sub_45ee98
mov eax [ esp + 0x10 ]
sub eax 0x1
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
je r-xdata
push rw-data
call sub_43423f
test al al
jne r-xdata
sub eax 0x1
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x10
test esi esi
je r-xdata
push edi
push esi
push ebx
push rw-data
call sub_45edc2
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x10
push edi
push esi
push ebx
push rw-data
call sub_435959
push eax
call sub_45edc2
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x10
sub_45eeff
sub esp 0x220
push ebx
mov ebx [ esp + 0x228 ]
push esi
push edi
lea ecx [ esp + 0x10 ]
call sub_40c060
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
push 0x22
lea eax [ esp + 0x14 ]
call sub_403470
mov edi ebx
lea eax [ esp + 0x10 ]
call sub_40d330
push 0x22
lea eax [ esp + 0x14 ]
call sub_403470
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov esi [ mciSendStringW@IAT ]
push 0x0
push 0x100
lea eax [ esp + 0x28 ]
push eax
push r--data
call esi
cmp [ esp + 0x20 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push r--data
call esi
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebx
add esp 0x220
retn
mov ecx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push ecx
call esi
test eax eax
jne r-xdata
push eax
push eax
push eax
cmp [ esp + 0x240 ] al
je r-xdata
push r--data
call esi
push r--data
call esi
push 0x0
push 0x0
push 0x0
push r--data
call esi
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebx
add esp 0x220
retn
sub_45efe7
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp ]
push esi
mov esi [ ebp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
inc esi
push esi
push eax
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov ebx eax
test ebx ebx
jne r-xdata
push edi
push ebx
call sub_41171a
mov ebp [ ebp ]
add esp 0x4
push 0x0
push 0x0
push ebx
mov edi eax
push edi
push esi
push ebp
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:WideCharToMultiByte) ]
mov ecx [ esp + 0x18 ]
dec eax
push eax
push edi
push ecx
call sub_4540ac
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esp + 0x14 ]
push eax
call sub_4452d0
pop esi
pop ebp
pop ebx
retn 0x8
sub_45f05d
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
call sub_403770
xor bl bl
test bl bl
jne r-xdata
mov eax [ esp + 0x14 ]
mov bl 0x1
cmp ax 0xd
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
pop edi
pop esi
xor al al
pop ebx
retn 0x8
lea ecx [ esp + 0x14 ]
push ecx
push edi
call sub_444377
test al al
je r-xdata
cmp ax 0xa
je r-xdata
cmp [ esp + 0x14 ] 0xa
je r-xdata
push eax
mov eax esi
call sub_403470
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
mov esi edi
call sub_40e0d0
lea eax [ esp + 0x14 ]
push eax
push edi
call sub_444377
test al al
je r-xdata
sub_45f0d2
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
call sub_403770
xor edi edi
xor bl bl
cmp [ ebp ] edi
jbe r-xdata
mov [ ebp ] edi
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0xc
lea ebx [ ebx ]
test bl bl
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
mov eax esi
mov bl 0x1
call sub_403470
inc edi
cmp edi [ ebp ]
jb r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0xc
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
call sub_444377
test al al
je r-xdata
sub_45f132
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
push ecx
push edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] 0xffffffff
call sub_437314
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ esp + 0x10 ]
cmp esi 0x7
jl r-xdata
cmp esi [ edi + 0x9c0 ]
jg r-xdata
mov ebx [ edi + esi * 4 + 0x1a4 ]
cmp [ ebx + 0x4 ] 0x1
mov edi [ ebx ]
jne r-xdata
mov ecx [ ebx ]
push 0x0
push esi
push ecx
call [ __import_lookup_table_10(USER32:DeleteMenu) ]
test eax eax
je r-xdata
push 0x2c
lea edx [ esp + 0x28 ]
push 0x0
push edx
mov [ esp + 0x2c ] 0x30
call sub_4131f0
add esp 0xc
lea eax [ esp + 0x20 ]
push eax
push 0x0
push esi
push edi
mov [ esp + 0x34 ] 0x4
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
lea esi [ ebx + 0x8 ]
or eax 0xffffffff
xor edi edi
mov [ ebx + 0x4 ] 0xff
mov [ ebx ] 0x0
mov [ ebx + 0x5 ] 0x0
call sub_40c740
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
call sub_4447ab
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x34 ]
mov edi 0x7
cmp [ eax + 0x9c0 ] edi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] edi
jl r-xdata
lea esi [ eax + 0x1c0 ]
mov [ esp + 0x18 ] esi
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
inc edi
add esi 0x4
cmp edi [ eax + 0x9c0 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] esi
jle r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
push 0x0
push edi
push ecx
call [ __import_lookup_table_10(USER32:DeleteMenu) ]
mov ecx [ esi ]
mov [ ecx + 0x4 ] 0xff
mov edx [ esi ]
mov [ edx ] 0x0
mov eax [ esi ]
mov [ eax + 0x5 ] 0x0
mov esi [ esi ]
add esi 0x8
or eax 0xffffffff
xor edi edi
call sub_40c740
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0xc ]
push ecx
push edx
call sub_4447ab
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
mov ecx [ esp + 0xc ]
push edi
call sub_45f132
jmp r-xdata
sub_45f2c5
sub esp 0x34
push ebx
mov ebx [ esp + 0x48 ]
push ebp
mov ebp [ esp + 0x40 ]
push esi
push edi
cmp ebx 0xffffffff
je r-xdata
push ebp
call sub_44c2ca
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp ebx 0x7
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x34
retn 0x18
mov esi [ ebp + edi * 4 + 0x1a4 ]
push 0x2c
lea eax [ esp + 0x18 ]
push 0x0
push eax
mov [ esp + 0x1c ] 0x30
call sub_4131f0
add esp 0xc
cmp ebx 0xffffffff
jne r-xdata
cmp ebx 0x207
jge r-xdata
lea edx [ esp + 0x54 ]
push edx
push ebx
push ebp
mov [ esp + 0x60 ] 0xffffffff
call sub_437314
test al al
je r-xdata
mov ecx [ ebp ]
mov [ esi ] ecx
jmp r-xdata
push edi
push ebp
call sub_4447ab
mov ecx [ esp + 0x54 ]
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x18 ] 0x4
mov eax [ ebp + ecx * 4 + 0x1a4 ]
mov eax [ eax ]
push 0x0
push ecx
push eax
mov [ esi ] eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
movsx eax [ esp + 0x4c ]
sub eax 0x0
mov ecx [ esp + 0x50 ]
mov [ esi + 0x5 ] 0x0
mov [ esp + 0x14 ] 0x32
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x34 ] ecx
mov [ esp + 0x30 ] edi
mov [ esp + 0x20 ] edi
mov ebx 0x1
je r-xdata
mov eax [ esp + 0x24 ]
mov [ esi ] eax
mov ecx [ esp + 0x24 ]
push ecx
call [ IsMenu@IAT ]
test eax eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
sub eax ebx
jne r-xdata
cmp [ esp + 0x5c ] ebx
jne r-xdata
mov [ esp + 0x18 ] 0x800
jmp r-xdata
cmp [ ebp + 0x4 ] 0x0
je r-xdata
call [ CreatePopupMenu@IAT ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esp + 0x18 ] 0x200
mov [ esi + 0x5 ] bl
mov ecx [ esp + 0x58 ]
mov edx [ esi ]
lea eax [ esp + 0x10 ]
push eax
push ebx
push ecx
push edx
call [ __import_lookup_table_10(USER32:InsertMenuItemW) ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
or [ esp + 0x14 ] 0x4
mov [ esp + 0x24 ] eax
mov [ esi + 0x4 ] bl
jmp r-xdata
push edi
mov ecx ebp
call sub_45f132
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn 0x18
mov [ ebp + 0x9c4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn 0x18
cmp edi 0x7
jl r-xdata
mov eax [ ebp ]
cmp [ esi ] eax
jne r-xdata
push eax
call [ GetMenuItemCount@IAT ]
mov ecx [ esp + 0x58 ]
cmp ecx 0xffffffff
je r-xdata
add eax 0xfffffffc
mov [ esp + 0x58 ] eax
lea edx [ eax - 0x4 ]
inc ecx
cmp ecx edx
jle r-xdata
sub_45f48e
sub esp 0x38
push ebx
push ebp
mov ebp [ esp + 0x48 ]
push esi
mov esi [ esp + 0x48 ]
push edi
push 0x2c
lea eax [ esp + 0x20 ]
push 0x0
push eax
mov [ esp + 0x24 ] 0x30
call sub_4131f0
add esp 0xc
lea ecx [ esp + 0x50 ]
movzx edx bp
push ecx
push edx
or ebx 0xffffffff
push esi
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x5c ] ebx
call sub_437314
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x38
retn 0xc
mov edi [ esp + 0x50 ]
mov eax [ esi + edi * 4 + 0x1a4 ]
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0xc
shr ebp 0x10
test ebp ebp
jne r-xdata
mov ecx [ esi ]
lea eax [ esp + 0x18 ]
push eax
push 0x0
push edi
push ecx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x54 ] ebp
jne r-xdata
mov eax 0x8
test [ esp + 0x24 ] al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
or [ esp + 0x24 ] eax
mov [ rw-data ] 0x1
xor [ esp + 0x24 ] eax
mov [ rw-data ] 0x0
jmp r-xdata
cmp [ esi + 0x7 ] 0x0
mov ebp [ eax ]
je r-xdata
mov eax [ esi ]
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x4
push eax
call [ SetMenuItemInfoW@IAT ]
mov eax esi
call sub_401e70
push 0x1f4
call [ Sleep@IAT ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0xc
cmp [ esi + 0x5 ] 0x0
je r-xdata
cmp [ eax + 0x5 ] 0x0
je r-xdata
push edi
push esi
call sub_453ab0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0xc
lea eax [ esp + 0x18 ]
push eax
push 0x0
push edi
push ebp
call [ GetMenuItemInfoW@IAT ]
mov eax 0x8
test [ esp + 0x24 ] al
je r-xdata
push ebp
mov [ esp + 0x50 ] ebx
call [ GetMenuItemCount@IAT ]
cmp [ esi + 0x4 ] 0x0
mov ebx eax
je r-xdata
or [ esp + 0x24 ] eax
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push edi
push ebp
call [ SetMenuItemInfoW@IAT ]
push edi
push esi
call sub_453ab0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0xc
xor [ esp + 0x24 ] eax
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push edi
push ebp
call [ SetMenuItemInfoW@IAT ]
push edi
push esi
call sub_453ab0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0xc
xor edi edi
test ebx ebx
jle r-xdata
sub ebx 0x4
mov eax [ esp + 0x4c ]
push edi
push ebp
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x50 ]
je r-xdata
mov edi [ esp + 0x50 ]
mov [ esp + 0x54 ] edi
sub edi 0x1
js r-xdata
inc edi
cmp edi ebx
jl r-xdata
inc edi
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x54 ]
inc edi
cmp edi ebx
jge r-xdata
lea esp [ esp ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x14 ]
push 0x400
push ecx
dec edi
push edi
push edx
push ebp
call [ __import_lookup_table_10(USER32:CheckMenuRadioItem) ]
push edi
push ebp
call [ GetMenuItemID@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push eax
push esi
mov [ esp + 0x58 ] eax
call sub_437314
test al al
je r-xdata
sub edi 0x1
jns r-xdata
mov edx [ esp + 0x4c ]
mov eax [ esi + edx * 4 + 0x1a4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
cmp eax [ esp + 0x50 ]
jne r-xdata
inc edi
cmp edi ebx
jl r-xdata
mov edx [ esp + 0x4c ]
mov eax [ esi + edx * 4 + 0x1a4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
push edi
push ebp
call [ GetMenuItemID@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push eax
push esi
mov [ esp + 0x58 ] eax
call sub_437314
test al al
je r-xdata
sub_45f717
push ebx
push ebp
mov bp [ esp + 0xc ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x20 ]
call sub_403770
xor bl bl
test bp bp
jne r-xdata
test bl bl
jne r-xdata
pop edi
pop esi
pop ebp
mov al bl
pop ebx
retn 0x10
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x10
cmp ax bp
jne r-xdata
push eax
mov eax esi
call sub_403470
inc [ edi ]
jmp r-xdata
inc [ edi ]
mov bl 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
call sub_438a19
movzx eax [ eax ]
test ax ax
je r-xdata
sub_45f776
sub esp 0x5c
push ebx
push ebp
mov ebp [ esp + 0x68 ]
push esi
mov esi [ esp + 0x70 ]
xor ebx ebx
push edi
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x74 ] bl
mov [ esp + 0x78 ] bl
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
call sub_444fc0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x14 ] 0x1
call sub_40c060
lea ecx [ esp + 0x28 ]
call sub_40c060
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push esi
push 0x20
call sub_45f717
test al al
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ ebx * 4 + rw-data ]
push ecx
push edx
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
cmp ebx 0x62
jne r-xdata
inc ebx
cmp ebx 0x62
jl r-xdata
inc edi
jmp r-xdata
push edi
push esi
call sub_438a19
cmp [ eax ] 0x9
jne r-xdata
cmp [ ebx + rw-data ] 0x0
movzx eax [ ebx + rw-data ]
jne r-xdata
xor edi edi
lea esi [ esp + 0x38 ]
call sub_401be0
movzx eax [ eax ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c718
cmp [ esp + 0x74 ] 0x0
jne r-xdata
push edi
push esi
call sub_438a19
cmp [ eax ] 0x20
je r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push esi
push 0x0
mov [ esp + 0x28 ] edi
call sub_45f717
mov esi [ esp + 0x28 ]
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
cmp eax 0xe
ja r-xdata
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c7a0
cmp [ esp + 0x74 ] 0x0
jne r-xdata
lea edx [ esp + 0x1c ]
push edx
push ebp
call sub_44c522
jmp r-xdata
cmp [ esp + 0x70 ] 0x0
jne r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x70 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn 0x8
jmp [ eax * 4 + jump_table_45fd86 ]
cmp [ esp + 0x70 ] 0x0
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
jmp r-xdata
call sub_401be0
mov ecx [ esp + 0x14 ]
movzx edx [ eax ]
push ecx
push edx
push ebp
call sub_453e3b
jmp r-xdata
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x74 ] 0x1
jmp r-xdata
push 0x12
lea edx [ esp + 0x20 ]
push edx
call sub_44c7a0
cmp [ esp + 0x74 ] 0x0
je r-xdata
push 0xd
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
cmp [ esp + 0x74 ] 0x0
mov [ esp + 0x26 ] 0x1
jne r-xdata
cmp [ ebp + 0x1d ] 0x0
jne r-xdata
cmp [ ebp + 0x1d ] 0x0
je r-xdata
push 0xa0
lea edx [ esp + 0x20 ]
push edx
call sub_44c7a0
cmp [ esp + 0x74 ] 0x0
je r-xdata
push 0xa1
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
cmp [ esp + 0x74 ] 0x0
je r-xdata
cmp [ ebp + 0x1a ] 0x0
jne r-xdata
cmp [ ebp + 0x1a ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp + 0x1e ] 0x0
jne r-xdata
cmp [ ebp + 0x1e ] 0x0
je r-xdata
cmp [ ebp + 0x1f ] 0x0
jne r-xdata
cmp [ ebp + 0x1f ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
push ebp
call sub_44c379
push r--data
push esi
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x12 ] 0x1
jmp r-xdata
cmp [ esp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x1d ] 0x0
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push ebp
call sub_44c522
jmp r-xdata
cmp [ esp + 0x70 ] 0x0
jne r-xdata
push 0x12
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c7a0
lea edx [ esp + 0x1c ]
push edx
push ebp
mov [ ebp + 0x1d ] 0x1
call sub_44c522
jmp r-xdata
push 0x12
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
mov [ ebp + 0x1d ] 0x0
jmp r-xdata
cmp [ esp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x1a ] 0x0
jne r-xdata
cmp [ esp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x1b ] 0x0
jne r-xdata
push 0x10
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c7a0
lea edx [ esp + 0x1c ]
push edx
push ebp
mov [ ebp + 0x1a ] 0x1
call sub_44c522
jmp r-xdata
push 0x10
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
mov [ ebp + 0x1a ] 0x0
jmp r-xdata
push 0x11
lea edx [ esp + 0x20 ]
push edx
call sub_44c7a0
lea eax [ esp + 0x1c ]
push eax
push ebp
mov [ ebp + 0x1c ] 0x1
call sub_44c522
jmp r-xdata
push 0x11
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c7a0
lea edx [ esp + 0x1c ]
mov [ ebp + 0x1c ] 0x0
push edx
jmp r-xdata
push 0x5b
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
mov [ ebp + 0x1e ] 0x1
push 0x5b
lea edx [ esp + 0x20 ]
push edx
call sub_44c7a0
mov [ ebp + 0x1e ] 0x0
push 0x5c
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c7a0
mov [ ebp + 0x1f ] 0x1
push 0x5c
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
mov [ ebp + 0x1f ] 0x0
jmp r-xdata
cmp [ ebp + 0x1d ] 0x0
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x1
push edx
push ebp
call sub_453e3b
jmp r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
movzx ecx [ ebx + rw-data ]
push 0x1
push ecx
push ebp
call sub_43797b
jmp r-xdata
xor edi edi
lea esi [ esp + 0x28 ]
call sub_401be0
cmp [ eax ] 0x30
jne r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
lea edx [ esp + 0x1c ]
push edx
push ebp
call sub_44c6fb
jmp r-xdata
cmp [ ebp + 0x1d ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebp
mov [ ebp + 0x1d ] 0x1
call sub_44c522
jmp r-xdata
lea edx [ esp + 0x1c ]
push edx
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebp
call sub_44c6fb
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
cmp [ ebp + 0x1a ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebp
mov [ ebp + 0x1a ] 0x1
call sub_44c522
jmp r-xdata
cmp [ ebp + 0x1b ] 0x0
je r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push ebp
mov [ ebp + 0x1b ] 0x1
call sub_44c522
jmp r-xdata
xor edi edi
push 0x12
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
lea ecx [ esp + 0x1c ]
push ecx
push ebp
call sub_44c522
mov eax [ esp + 0x14 ]
movzx ecx [ ebx + rw-data ]
push eax
push ecx
push ebp
call sub_453dba
jmp r-xdata
movzx edx [ ebx + rw-data ]
push 0x0
push edx
push ebp
call sub_43797b
jmp r-xdata
mov eax [ esp + 0x28 ]
push eax
call sub_413431
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
jg r-xdata
mov edi 0x1
call sub_401be0
cmp [ eax ] 0x78
je r-xdata
mov [ ebp + 0x1d ] 0x0
jmp r-xdata
mov [ ebp + 0x1a ] 0x0
jmp r-xdata
mov [ ebp + 0x1b ] 0x0
cmp [ ebp + 0x1d ] 0x0
jne r-xdata
call sub_401be0
mov dl [ eax ]
add dl 0x30
movzx eax dl
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_44c7a0
lea edx [ esp + 0x1c ]
push edx
push ebp
call sub_44c6fb
inc edi
jmp r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov eax 0x2
xor edi edi
lea esi [ esp + 0x28 ]
call sub_40c740
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_4448ca
call sub_401be0
cmp [ eax ] 0x30
jne r-xdata
call sub_401be0
cmp [ eax ] 0x58
jne r-xdata
push 0x12
lea eax [ esp + 0x20 ]
push eax
call sub_44c7a0
lea esi [ esp + 0x28 ]
call sub_401be0
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push r--data
lea ecx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push r--data
lea edx [ esp + 0x50 ]
push edx
jmp r-xdata
call sub_4376f2
add esp 0xc
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x2c ]
call sub_4021e0
jmp r-xdata
sub_45fdc2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
push eax
push esi
mov [ esi + 0x20 ] eax
call sub_4377b4
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x20 ] bl
mov [ esp + 0x21 ] bl
mov [ esp + 0x22 ] bl
mov [ esp + 0x23 ] bl
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
jne r-xdata
xor edi edi
lea eax [ edi + 0x40 ]
lea ecx [ esp + 0x28 ]
call sub_401400
push ebx
push 0x14
push esi
call sub_43797b
mov [ esp + 0x14 ] al
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_444d52
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_4379dc
cmp [ esi + 0x8 ] 0x1
jne r-xdata
inc edi
push esi
mov [ esp + 0x14 ] edi
call sub_44487c
mov ecx [ esp + 0x18 ]
movzx eax cx
add eax 0xffffffdf
cmp eax 0x5a
ja r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push ecx
push esi
call sub_4377b4
lea ecx [ esp + 0x28 ]
call sub_402620
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x20 ]
push edx
push esi
call sub_444b65
mov eax [ esp + 0x14 ]
push eax
push 0x14
push esi
call sub_43797b
push 0x1
push ecx
movzx eax [ eax + lookup_table_45ff4e ]
jmp [ eax * 4 + jump_table_45ff36 ]
mov edx [ ebp + 0xc ]
push edi
push edx
call sub_438a19
movzx eax [ eax ]
mov [ esp + 0x18 ] eax
cmp ax bx
je r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
mov [ esi + 0x16 ] 0x1
jmp r-xdata
mov [ esi + 0x17 ] 0x1
jmp r-xdata
mov [ esi + 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
push 0x7d
call sub_45f717
test al al
jne r-xdata
cmp [ esp + 0x2c ] ebx
je r-xdata
push 0x1
push 0x7b
jmp r-xdata
mov edi [ esp + 0x10 ]
mov [ esi + 0x14 ] bl
mov [ esi + 0x15 ] bl
mov [ esi + 0x16 ] bl
mov [ esi + 0x17 ] bl
mov [ esi + 0x18 ] bl
mov [ esi + 0x19 ] bl
jmp r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push esi
call sub_45f776
push esi
call sub_453e3b
mov [ esi + 0x14 ] bl
mov [ esi + 0x15 ] bl
mov [ esi + 0x16 ] bl
mov [ esi + 0x17 ] bl
mov [ esi + 0x18 ] bl
mov [ esi + 0x19 ] bl
jmp r-xdata
sub_45ffa9
mov eax 0x2048
call sub_425210
push ebx
mov ebx [ esp + 0x2050 ]
push ebp
push esi
push edi
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2048
retn 0xc
mov ecx [ rw-data ]
mov ebp [ __import_lookup_table_0(KERNEL32:GetModuleHandleW) ]
push 0xfff
lea eax [ esp + 0x5c ]
push eax
push ecx
push 0x0
call ebp
push eax
call [ __import_lookup_table_10(USER32:LoadStringW) ]
lea edi [ esp + 0x58 ]
lea esi [ esp + 0x48 ]
call sub_401b70
mov eax [ esp + 0x2060 ]
push 0xfff
push edi
push eax
push 0x0
call ebp
push eax
call [ __import_lookup_table_10(USER32:LoadStringW) ]
lea esi [ esp + 0x38 ]
call sub_401b70
push ebx
call sub_437a81
push ebx
mov ebp eax
call sub_437a4d
mov esi eax
push ebx
mov [ esp + 0x28 ] esi
call sub_437aca
push eax
call sub_437aa7
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
push esi
lea edx [ esp + 0x60 ]
push r--data
push edx
call sub_41353a
add esp 0x10
push esi
push r--data
push edi
call sub_41353a
add esp 0xc
jmp r-xdata
mov edi r--data
lea eax [ esp + 0x14 ]
call sub_40d330
lea ecx [ esp + 0x38 ]
push ecx
lea eax [ esp + 0x18 ]
call sub_40c140
cmp [ rw-data ] 0x0
je r-xdata
push ebp
lea eax [ esp + 0x2c ]
call sub_4021e0
or eax 0xffffffff
lea esi [ esp + 0x28 ]
call sub_40c740
mov edi r--data
mov eax esi
call sub_40d330
push esi
lea eax [ esp + 0x18 ]
call sub_40c140
mov edi r--data
lea eax [ esp + 0x14 ]
call sub_40d330
lea edi [ esp + 0x58 ]
lea esi [ esp + 0x14 ]
call sub_401b70
mov edi ebp
mov eax esi
call sub_40d330
mov edi r--data
mov eax esi
call sub_40d330
lea ecx [ esp + 0x28 ]
call sub_40c060
mov edi [ esp + 0x2064 ]
test edi edi
jl r-xdata
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x14 ]
push 0x11010
push edx
push eax
push 0x0
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
push edx
push ebp
push eax
push ecx
push ebx
push r--data
call sub_413e5c
add esp 0x18
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x14 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
sub_46015f
push ebp
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
push 0x0
push 0x0
inc edi
push edi
push eax
push 0x0
push 0xfde9
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov ebp eax
test ebp ebp
jne r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi [ esi ]
add esp 0x4
push ebp
mov ebx eax
push ebx
push edi
push esi
push 0x0
push 0xfde9
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov ecx [ esp + 0x18 ]
push 0x0
dec eax
push ebx
call sub_403fb0
push ebx
call sub_4112ef
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
mov esi [ esp + 0x14 ]
call sub_403770
pop edi
pop esi
pop ebp
retn 0x8
sub_4601e0
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
call sub_40c060
mov eax [ esi ]
lea ebp [ eax + 0x1 ]
cmp ebp [ edi + 0x4 ]
mov ecx eax
mov [ esp + 0x28 ] ecx
mov [ esi ] ebp
jge r-xdata
mov [ esi ] ecx
cmp [ esp + 0x2c ] 0x0
je r-xdata
mov [ esp + 0x2c ] 0x0
push ebp
push edi
call sub_438a19
cmp [ eax ] 0x7b
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_413431
add esp 0x4
mov ebp eax
test bl bl
je r-xdata
mov ecx [ esi ]
push ecx
push edi
call sub_438a19
movzx edx [ eax ]
push edx
call sub_413b67
add esp 0x4
test eax eax
je r-xdata
inc ebp
mov [ esp + 0x2c ] 0x1
mov [ esi ] ebp
jmp r-xdata
mov edx [ esp + 0x28 ]
mov [ esi ] edx
jmp r-xdata
cmp [ esp + 0x2c ] 0x0
je r-xdata
mov eax [ esi ]
push eax
lea ecx [ eax + 0x1 ]
push edi
mov bl 0x1
mov [ esi ] ecx
call sub_438a19
movzx edx [ eax ]
push edx
lea eax [ esp + 0x14 ]
call sub_403470
mov eax [ esi ]
cmp eax [ edi + 0x4 ]
jl r-xdata
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
mov eax [ esi ]
xor bl bl
cmp eax [ edi + 0x4 ]
jge r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn 0xc
lea ecx [ esp + 0x10 ]
call sub_402620
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ebx [ esi ]
cmp ebx [ edi + 0x4 ]
je r-xdata
push ebx
push edi
call sub_438a19
cmp [ eax ] 0x7d
jne r-xdata
inc ebx
mov [ esi ] ebx
sub_46032b
sub esp 0x200
push esi
mov esi [ esp + 0x208 ]
mov eax [ esi + 0x54 ]
push 0x3e9
push eax
call [ __import_lookup_table_10(USER32:GetDlgItem) ]
test eax eax
je r-xdata
pop esi
add esp 0x200
retn 0x4
push 0x100
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
test [ esi + 0x10 ] 0x1
je r-xdata
fldz
fcomp [ esi + 0x18 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esi + 0x34 ]
call sub_4021e0
mov ecx [ esi + 0x54 ]
push 0x1
push ecx
call [ __import_lookup_table_10(USER32:EndDialog) ]
mov edx [ esi + 0x54 ]
push 0x40a
push edx
call [ KillTimer@IAT ]
push 0x0
call [ __import_lookup_table_10(USER32:MessageBeep) ]
pop esi
add esp 0x200
retn 0x4
sub_4603bb
cmp [ esp + 0x8 ] 0x40a
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
pop esi
retn 0x8
push r--data
lea eax [ esi + 0x34 ]
call sub_4021e0
mov eax [ esi + 0x54 ]
push 0x3
push eax
call [ __import_lookup_table_10(USER32:EndDialog) ]
sub_4603e7
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
lea edi [ esi + 0x24 ]
mov ecx edi
call sub_40c060
lea ebx [ esi + 0x34 ]
mov ecx ebx
call sub_40c060
lea ebp [ esi + 0x44 ]
mov ecx ebp
call sub_40c060
xor eax eax
mov [ esi + 0x20 ] ax
push r--data
mov eax edi
mov [ esi + 0x54 ] 0x0
call sub_4021e0
fld [ r--data ]
mov eax 0x80000000
fstp [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
push r--data
mov eax ebx
mov [ esi ] 0xffffffff
mov [ esi + 0x4 ] 0xffffffff
call sub_4021e0
push r--data
mov eax ebp
call sub_4021e0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_460473
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x824
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push esi
xor esi esi
push edi
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] esi
test al 0x40
je r-xdata
mov edi [ ebp + 0xc ]
test al 0x8
je r-xdata
mov esi 0x1
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] esi
test [ ebx + 0x8 ] 0x1
je r-xdata
push 0x400
lea eax [ esp + 0x2c ]
push eax
push edi
call [ GetClassNameW@IAT ]
mov eax [ ebx + 0xbc ]
lea ecx [ esp + 0x28 ]
push ecx
push eax
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
test [ ebx + 0x8 ] 0x2
je r-xdata
push 0x400
lea edx [ esp + 0x2c ]
push edx
push edi
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
inc [ esp + 0xc ]
inc esi
mov [ esp + 0x10 ] esi
test [ ebx + 0x8 ] 0x10
je r-xdata
push 0x400
lea eax [ esp + 0x2c ]
push eax
push edi
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
call sub_401b70
lea ecx [ esp + 0x14 ]
push ecx
lea esi [ ebx + 0x34 ]
push esi
call sub_4602eb
lea ecx [ esp + 0x14 ]
call sub_402620
push esi
call sub_44cb6c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
sub eax 0x1
mov [ esp + 0x24 ] esi
je r-xdata
lea eax [ esp + 0x28 ]
push eax
call sub_4112d5
add esp 0x4
push eax
lea ecx [ esp + 0x2c ]
push ecx
call [ CharUpperBuffW@IAT ]
test [ ebx + 0x8 ] 0x4
je r-xdata
push 0x400
lea edx [ esp + 0x2c ]
push edx
push edi
call [ GetClassNameW@IAT ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x14 ]
call sub_401b70
lea eax [ esp + 0x14 ]
push eax
lea esi [ ebx + 0x78 ]
push esi
call sub_4602eb
lea ecx [ esp + 0x14 ]
call sub_402620
push esi
call sub_44cb6c
test al al
je r-xdata
inc [ esp + 0xc ]
mov esi [ esp + 0x10 ]
mov edi [ ebp + 0xc ]
test [ ebx + 0x8 ] 0x18
jne r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x14 ]
push eax
lea edx [ esp + 0x2c ]
push edx
push ecx
call sub_413503
add esp 0xc
test eax eax
jne r-xdata
sub eax 0x1
je r-xdata
mov eax [ ebx + 0x8 ]
test eax 0x780
je r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
inc [ esp + 0xc ]
mov esi [ esp + 0x10 ]
mov edi [ ebp + 0xc ]
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
mov eax [ ebp + 0xc ]
push 0x400
push edi
push eax
call [ GetClassNameW@IAT ]
push edi
push r--data
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
test [ ebx + 0x8 ] 0x18
jne r-xdata
inc esi
mov [ esp + 0x10 ] esi
mov eax [ ebx + 0x14 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_413772
add esp 0x8
test eax eax
je r-xdata
sub eax 0x1
jne r-xdata
mov ecx [ esp + 0xc ]
test al 0x20
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push edi
call [ GetWindowRect@IAT ]
mov eax [ ebx + 0x8 ]
mov edx [ esp + 0x14 ]
test al al
jns r-xdata
inc [ esp + 0xc ]
push edi
push ebx
call sub_4457ee
test al al
je r-xdata
inc [ esp + 0xc ]
push 0x400
lea eax [ esp + 0x2c ]
push eax
push edi
call [ GetClassNameW@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
push r--data
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x14 ]
push eax
lea edx [ esp + 0x2c ]
push edx
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
cmp esi ecx
jne r-xdata
cmp esi ecx
jne r-xdata
mov ecx [ esp + 0x18 ]
test eax 0x100
je r-xdata
cmp [ ebx + 0xd4 ] edx
jne r-xdata
inc esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] esi
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebx + 0xec ]
push ecx
call sub_434343
inc [ ebx + 0xe4 ]
xor eax eax
cmp [ ebx + 0x4 ] al
sete al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc ecx
inc [ ebx + 0xd0 ]
mov eax [ ebx + 0xd0 ]
cmp eax [ ebx + 0xcc ]
jne r-xdata
test eax 0x200
je r-xdata
cmp [ ebx + 0xd8 ] ecx
jne r-xdata
inc [ esp + 0xc ]
inc esi
inc esi
test eax 0x400
je r-xdata
mov edi [ esp + 0x1c ]
sub edi edx
cmp [ ebx + 0xdc ] edi
jne r-xdata
inc [ esp + 0xc ]
inc esi
mov edx [ esp + 0x20 ]
sub edx ecx
cmp [ ebx + 0xe0 ] edx
jne r-xdata
inc [ esp + 0xc ]
inc esi
inc [ esp + 0xc ]
inc esi
sub_460784
sub esp 0x10
push esi
mov esi [ esp + 0x18 ]
push edi
lea ecx [ esp + 0x8 ]
call sub_40c060
xor edi edi
lea eax [ esp + 0x8 ]
push eax
call sub_40df50
lea ecx [ esp + 0x8 ]
call sub_402620
pop edi
pop esi
add esp 0x10
retn 0x4
call sub_401be0
cmp [ eax ] 0x3b
jne r-xdata
call sub_401be0
movzx eax [ eax ]
push eax
lea eax [ esp + 0xc ]
call sub_403470
inc edi
jmp r-xdata
push 0x3b
lea eax [ esp + 0xc ]
call sub_403470
call sub_401be0
cmp [ eax ] 0x0
je r-xdata
sub_4607e9
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
push r--data
call sub_4021e0
push ebx
call sub_438992
test al al
je r-xdata
mov eax [ ebx ]
push ebp
push esi
push edi
push 0x0
push 0x0
push 0xe
push eax
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor al al
pop ebx
retn 0x8
xor ecx ecx
lea ebp [ edi + 0x1 ]
mov eax ebp
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov esi eax
mov eax [ ebx ]
push esi
push ebp
push 0xd
push eax
call [ SendMessageW@IAT ]
xor ecx ecx
test eax eax
mov eax [ esp + 0x18 ]
mov [ esi + edi * 2 ] cx
jne r-xdata
mov edi 0x7fff
push esi
call sub_4021e0
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x8
push r--data
call sub_4021e0
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x8
sub_460898
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
sub esp 0x200
push 0xff
lea eax [ esp + 0x4 ]
push eax
push edx
call [ GetClassNameW@IAT ]
lea eax [ esp ]
push eax
mov eax [ esp + 0x20c ]
call sub_4021e0
add esp 0x200
retn 0x8
sub_4608ce
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x20 ]
test edi edi
je r-xdata
or eax 0xffffffff
xor edi edi
call sub_40c740
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov eax [ ebx + 0x4 ]
cmp ebp eax
jae r-xdata
cmp edi 0xffffffff
je r-xdata
sub eax ebp
mov edi eax
lea ecx [ edi + ebp ]
cmp ecx eax
jbe r-xdata
call sub_404020
mov eax [ esi + 0xc ]
dec [ eax ]
call sub_4013e0
lea edx [ edi + 0x1 ]
push edx
call sub_446547
xor ecx ecx
mov [ esi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov [ esi ] eax
jmp r-xdata
push esi
call sub_437ba7
test al al
je r-xdata
mov edx [ esi ]
mov [ esi + 0x4 ] edi
mov eax [ ebx ]
add edi edi
push edi
lea ecx [ eax + ebp * 2 ]
push ecx
push edx
call sub_410f70
mov eax [ esi ]
add esp 0xc
xor ecx ecx
mov [ edi + eax ] cx
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
sub_460976
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
mov ecx edi
call sub_40c060
mov eax [ ebp + 0x4 ]
cmp esi eax
jbe r-xdata
cmp ebx 0xffffffff
je r-xdata
mov esi eax
sub eax esi
mov ebx eax
mov ecx eax
sub ecx esi
cmp ebx ecx
jbe r-xdata
push ebx
push esi
push ebp
push edi
call sub_4608ce
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
sub_4609bd
sub esp 0x204
push ebp
mov ebp [ esp + 0x214 ]
push esi
mov esi [ esp + 0x210 ]
push edi
mov edi [ esp + 0x218 ]
push r--data
mov eax ebp
call sub_4021e0
push 0x1
push edi
call sub_4389a1
call [ __import_lookup_table_10(USER32:GetFocus) ]
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
push 0x0
push edi
call sub_4389a1
pop edi
pop esi
xor al al
pop ebp
add esp 0x204
retn 0xc
push edi
push eax
call sub_4389eb
test eax eax
je r-xdata
mov eax [ esi + 0xd8 ]
push ebx
push eax
push esi
call sub_44cc94
mov edx [ esi + 0xd8 ]
push 0x100
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov [ esi + 0xd4 ] edi
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x10 ]
lea ebx [ esi + 0x8c ]
push eax
mov eax ebx
call sub_4021e0
push esi
push sub_445a31
push edi
mov [ esi + 0x130 ] 0x0
call [ EnumChildWindows@IAT ]
mov ecx [ esi + 0x130 ]
mov edx [ ebx ]
push ecx
push edx
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_41353a
add esp 0x10
lea ecx [ esp + 0x10 ]
push ecx
mov eax ebp
call sub_4021e0
push 0x0
push edi
call sub_4389a1
pop ebx
pop edi
pop esi
mov al 0x1
pop ebp
add esp 0x204
retn 0xc
sub_460abb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa2c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x88 ]
push esi
push edi
xor edi edi
xor esi esi
mov [ esp + 0x10 ] edi
mov [ esp + 0xc ] esi
test al 0x8
je r-xdata
test eax 0x400
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x100
lea eax [ esp + 0x2c ]
push eax
push ecx
call [ GetClassNameW@IAT ]
lea edx [ esp + 0x28 ]
push edx
call sub_4112d5
mov esi eax
xor edx edx
add esp 0x4
mov [ esp + 0x10 ] edx
test esi esi
je r-xdata
test [ ebx + 0x88 ] 0x10
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0x202
lea edi [ ebx + 0x8 ]
push edi
call sub_437543
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x134 ]
cmp eax esi
jle r-xdata
lea edi [ esi - 0x1 ]
test edi edi
jl r-xdata
mov eax [ ebx + 0x88 ]
test al 0x20
je r-xdata
mov edx [ ebp + 0xc ]
push 0x400
lea ecx [ esp + 0x234 ]
push ecx
push edx
call [ GetClassNameW@IAT ]
lea edi [ esp + 0x230 ]
lea esi [ esp + 0x18 ]
call sub_401b70
lea eax [ esp + 0x18 ]
push eax
lea esi [ ebx + 0xec ]
push esi
call sub_4602eb
lea ecx [ esp + 0x18 ]
call sub_402620
push esi
call sub_44cb6c
test al al
je r-xdata
mov edi [ esp + 0x10 ]
mov [ esp + 0xc ] 0x1
mov esi [ esp + 0xc ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0xc ]
push ecx
push 0x1388
push 0x2
push esi
push 0x101
push edx
push eax
call [ __import_lookup_table_10(USER32:SendMessageTimeoutW) ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x138 ]
cmp ecx edx
jle r-xdata
movzx eax [ esp + edi * 2 + 0x28 ]
push eax
call sub_41349d
add esp 0x4
dec edi
test eax eax
je r-xdata
test al 0xc0
jne r-xdata
mov esi [ ebp + 0xc ]
push esi
call [ __import_lookup_table_10(USER32:GetDlgCtrlID) ]
cmp [ ebx + 0xcc ] eax
jne r-xdata
inc [ esp + 0xc ]
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
inc [ esp + 0x10 ]
push esi
push edi
call sub_4374ec
cmp [ esp + 0xc ] 0x0
jbe r-xdata
sub eax ecx
add eax edx
cmp esi eax
jne r-xdata
mov edx [ esp + 0x10 ]
inc [ esp + 0x10 ]
test edi edi
jge r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
push edx
push eax
mov [ esp + 0x1c ] ecx
call [ __import_lookup_table_10(USER32:GetParent) ]
push eax
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov eax [ ebx + 0x88 ]
test al 0x40
je r-xdata
test eax 0x300
je r-xdata
mov [ ebx + 0xd8 ] esi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x202
lea ecx [ esp + 0x2c ]
push ecx
push esi
push edi
call sub_437472
mov eax [ ebx + 0xac ]
push eax
lea eax [ esp + 0x2c ]
xor edx edx
push eax
mov [ esp + 0x230 ] dx
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx + 0x9c ]
push esi
lea ecx [ esp + 0x2c ]
push ecx
push eax
call sub_413503
add esp 0xc
test eax eax
jne r-xdata
test al al
jns r-xdata
mov ecx [ ebx + 0xdc ]
cmp ecx [ esp + 0x10 ]
jne r-xdata
test al 0x1
je r-xdata
mov [ esp + 0x10 ] 0x1
inc [ ebx + 0x130 ]
mov eax [ ebx + 0x130 ]
push eax
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x238 ]
push r--data
push eax
call sub_41353a
mov eax [ ebx + 0x9c ]
push eax
lea ecx [ esp + 0x244 ]
push ecx
call sub_4133e4
add esp 0x18
test eax eax
jne r-xdata
test eax 0x100
je r-xdata
mov edx [ ebx + 0xe0 ]
cmp edx [ esp + 0x14 ]
jne r-xdata
inc esi
inc edi
test [ ebx + 0x88 ] 0x4
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x100
lea eax [ esp + 0x234 ]
push eax
push ecx
call [ GetClassNameW@IAT ]
mov eax [ ebx + 0x8c ]
lea edx [ esp + 0x230 ]
push edx
push eax
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebx + 0xd8 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test eax 0x200
je r-xdata
mov ecx [ esp + 0x20 ]
sub ecx [ esp + 0x18 ]
cmp [ ebx + 0xe4 ] ecx
jne r-xdata
inc esi
inc edi
test [ ebx + 0x88 ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x400
lea eax [ esp + 0x234 ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
mov eax [ ebx + 0xbc ]
lea edx [ esp + 0x230 ]
push edx
push eax
call sub_4133e4
add esp 0x8
test eax eax
jne r-xdata
inc esi
inc edi
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
cmp [ ebx + 0xe8 ] edx
jne r-xdata
inc esi
inc edi
cmp edi esi
jne r-xdata
cmp edi esi
jne r-xdata
inc esi
inc edi
inc esi
inc edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0xd8 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc esi
inc [ ebx + 0x130 ]
mov eax [ ebx + 0x130 ]
cmp eax [ ebx + 0xd0 ]
jne r-xdata
inc edi
sub_460e79
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push esi
push sub_460e67
push ecx
mov [ esi + 0x88 ] 0x20
mov [ esi + 0xd8 ] 0x0
mov [ esi + 0xcc ] eax
mov [ esi + 0x130 ] 0x0
call [ EnumChildWindows@IAT ]
mov eax [ esi + 0xd8 ]
test eax eax
je r-xdata
xor al al
pop esi
retn 0xc
push eax
push esi
call sub_44cc94
mov al 0x1
pop esi
retn 0xc
sub_460ed4
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push edi
mov edi [ esp + 0x1c ]
cmp [ edi ] eax
ja r-xdata
pop edi
pop ebp
xor al al
pop ebx
retn 0x14
push r--data
mov eax ebp
call sub_4021e0
push esi
push r--data
push ebp
call sub_445975
add esp 0x8
test al al
jne r-xdata
cmp ax 0x3b
je r-xdata
pop esi
pop edi
pop ebp
xor al al
pop ebx
retn 0x14
mov esi ebp
call sub_410a40
mov esi [ edi ]
push esi
push ebx
call sub_438a19
movzx eax [ eax ]
cmp ax 0x3a
je r-xdata
cmp ax 0x5d
je r-xdata
inc esi
mov [ edi ] esi
cmp ax 0x3b
je r-xdata
cmp esi [ esp + 0x24 ]
ja r-xdata
mov esi [ edi ]
push esi
push ebx
call sub_438a19
movzx eax [ eax ]
cmp ax 0x20
je r-xdata
mov esi [ edi ]
push esi
push ebx
call sub_438a19
movzx ebp [ eax ]
lea eax [ esi + 0x1 ]
push eax
push ebx
mov [ esp + 0x28 ] eax
call sub_438a19
movzx eax [ eax ]
cmp bp 0x3b
jne r-xdata
cmp ax 0x3a
jne r-xdata
cmp ax 0x5d
je r-xdata
push esi
lea ecx [ esi + 0x1 ]
push ebx
mov [ edi ] ecx
call sub_438a19
movzx edx [ eax ]
push edx
mov eax ebp
call sub_403470
jmp r-xdata
inc esi
mov [ edi ] esi
jmp r-xdata
cmp ax 0x9
jne r-xdata
mov ecx [ esp + 0x20 ]
mov [ edi ] ecx
cmp ax bp
jne r-xdata
mov eax [ esp + 0x1c ]
push r--data
call sub_4021e0
mov eax [ esp + 0x24 ]
cmp [ edi ] eax
ja r-xdata
mov esi [ edi ]
push esi
push ebx
call sub_438a19
movzx eax [ eax ]
cmp ax 0x3a
je r-xdata
pop esi
pop edi
pop ebp
mov al 0x1
pop ebx
retn 0x14
jmp r-xdata
inc [ edi ]
nop
add esi 0x2
mov [ edi ] esi
jmp r-xdata
mov eax [ esp + 0x1c ]
push ebp
call sub_403470
mov edx [ esp + 0x24 ]
cmp [ edi ] edx
jbe r-xdata
sub_461012
sub esp 0x880
push ebx
mov ebx [ esp + 0x88c ]
push ebp
push esi
push edi
mov edi [ esp + 0x894 ]
lea eax [ esp + 0x10 ]
call sub_410480
mov eax [ edi ]
mov ebp [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x406
push eax
call ebp
test ebx ebx
jl r-xdata
lea edi [ esp + 0x10 ]
call sub_4104a0
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x880
retn 0xc
cmp ebx eax
jge r-xdata
mov ecx [ edi ]
push ecx
push 0x800
lea edx [ esp + 0x18 ]
push edx
call sub_437543
mov esi eax
mov eax [ edi ]
push esi
push ebx
push 0x40d
push eax
call ebp
push 0x800
lea ecx [ esp + 0x94 ]
push ecx
push esi
lea edx [ esp + 0x1c ]
push edx
call sub_437472
lea eax [ esp + 0x90 ]
push eax
mov eax [ esp + 0x8a0 ]
call sub_4021e0
lea edi [ esp + 0x10 ]
call sub_4104a0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x880
retn 0xc
sub_4610cb
sub esp 0x8a8
push ebx
push ebp
mov ebp [ esp + 0x8bc ]
push esi
mov esi [ esp + 0x8b8 ]
push edi
lea eax [ esp + 0x38 ]
call sub_410480
mov eax [ esi ]
push eax
push 0x28
lea ecx [ esp + 0x40 ]
push ecx
call sub_437543
mov edx [ esi ]
push edx
mov edi eax
push 0x800
lea eax [ esp + 0x40 ]
push eax
call sub_437543
mov ecx [ esp + 0x8c0 ]
push 0x28
push edi
mov ebx eax
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x20 ] 0x11
mov [ esp + 0x24 ] ecx
mov [ esp + 0x34 ] 0x400
mov [ esp + 0x30 ] ebx
call sub_4374af
mov ecx [ esi ]
push edi
push 0x0
push 0x113e
push ecx
call [ SendMessageW@IAT ]
push 0x800
lea edx [ esp + 0xbc ]
push edx
mov esi eax
push ebx
lea eax [ esp + 0x44 ]
push eax
call sub_437472
mov eax ebp
test esi esi
je r-xdata
push r--data
call sub_4021e0
lea edi [ esp + 0x38 ]
call sub_4104a0
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8a8
retn 0xc
lea ecx [ esp + 0xb8 ]
push ecx
call sub_4021e0
lea edi [ esp + 0x38 ]
call sub_4104a0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8a8
retn 0xc
sub_4611ba
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ esp + 0x28 ]
push edi
lea ecx [ esp + 0x10 ]
xor bl bl
call sub_40c060
xor edi edi
call sub_401be0
cmp [ eax ] 0x23
jne r-xdata
xor edi edi
call sub_401be0
cmp [ eax ] 0x23
jne r-xdata
mov edi 0x1
call sub_401be0
cmp [ eax ] 0x23
je r-xdata
mov eax [ esi ]
push eax
call sub_413431
add esp 0x4
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] 0x0
lea eax [ edi + 0x1 ]
call sub_40c740
mov eax edi
xor edi edi
call sub_40c740
mov bl 0x1
jmp r-xdata
mov edi [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push edi
call sub_4610cb
push 0x0
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_445a57
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
cmp [ esp + 0x28 ] eax
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov eax [ edi ]
push ebp
push 0x1
push 0x110a
push eax
call [ SendMessageW@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
inc [ esp + 0x2c ]
jmp r-xdata
test bl bl
je r-xdata
sub_46128b
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
push 0x0
push 0x0
push 0x110a
push ecx
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov ebx [ ebp + 0x4 ]
lea ecx [ esp + 0x10 ]
call sub_40c060
xor esi esi
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
lea ecx [ esp + 0x10 ]
call sub_402620
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
test esi esi
je r-xdata
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
cmp esi ebx
jae r-xdata
mov edx [ esp + 0x28 ]
mov eax [ edx ]
push edi
push 0x4
push 0x110a
push eax
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x10 ]
push edx
push edi
push eax
call sub_4611ba
mov edi eax
test edi edi
je r-xdata
push esi
push ebp
call sub_438a19
cmp [ eax ] 0x7c
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
push esi
push ebp
call sub_438a19
movzx eax [ eax ]
push eax
lea eax [ esp + 0x14 ]
call sub_403470
inc esi
cmp esi ebx
jb r-xdata
lea ecx [ esi + 0x1 ]
push ecx
push ebp
call sub_438a19
cmp [ eax ] 0x7c
jne r-xdata
push 0x7c
lea eax [ esp + 0x14 ]
call sub_403470
add esi 0x2
sub_46137b
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov edi [ esp + 0x18 ]
push ebp
push edi
call sub_46128b
mov esi eax
test esi esi
jne r-xdata
push ebp
xor ebx ebx
call sub_437bfd
mov ebp [ SendMessageW@IAT ]
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
test esi esi
je r-xdata
mov eax [ edi ]
push esi
push 0x4
push 0x110a
push eax
call ebp
mov esi eax
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn 0x8
mov ecx [ edi ]
push esi
push 0x1
push 0x110a
push ecx
inc ebx
call ebp
mov esi eax
test esi esi
jne r-xdata
sub_4613e0
sub esp 0x24
push ebx
push ebp
mov ebp [ esp + 0x30 ]
push esi
push edi
push ebp
call sub_438c85
mov edi [ esp + 0x40 ]
mov ebx eax
push r--data
mov eax edi
call sub_4021e0
xor esi esi
cmp [ esp + 0x3c ] 0x0
jne r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x24
retn 0xc
mov eax [ ebp ]
push 0x2
push esi
push 0x102c
push eax
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp ]
push 0x2
push esi
push 0x102c
push eax
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
inc esi
cmp esi ebx
jl r-xdata
push 0xa
lea ecx [ esp + 0x14 ]
push ecx
push esi
call sub_413308
add esp 0xc
push edi
call sub_437bfd
test al al
jne r-xdata
push 0xa
lea ecx [ esp + 0x14 ]
push ecx
push esi
call sub_413308
add esp 0xc
lea edx [ esp + 0x10 ]
push edx
mov eax edi
call sub_4021e0
inc esi
cmp esi ebx
jl r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x24
retn 0xc
mov eax [ esp + 0x40 ]
lea edi [ esp + 0x10 ]
call sub_40d330
mov edi [ esp + 0x40 ]
mov eax [ esp + 0x40 ]
mov edi r--data
call sub_40d330
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x24
retn 0xc
sub_4614cb
sub esp 0x8b0
push ebx
push esi
mov esi [ esp + 0x8bc ]
push edi
lea eax [ esp + 0x38 ]
call sub_410480
mov eax [ esi ]
push eax
push 0x28
lea ecx [ esp + 0x40 ]
push ecx
call sub_437543
mov edx [ esi ]
push edx
mov edi eax
push 0x800
lea eax [ esp + 0x40 ]
push eax
call sub_437543
mov ecx [ esp + 0x8c8 ]
push 0x28
push edi
mov ebx eax
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x38 ] 0x400
mov [ esp + 0x28 ] ecx
mov [ esp + 0x34 ] ebx
call sub_4374af
mov ecx [ esp + 0x8c4 ]
mov edx [ esi ]
push edi
push ecx
push 0x1073
push edx
call [ SendMessageW@IAT ]
push 0x800
lea eax [ esp + 0xbc ]
push eax
push ebx
lea ecx [ esp + 0x44 ]
push ecx
call sub_437472
mov eax [ esp + 0x8cc ]
lea edx [ esp + 0xb8 ]
push edx
call sub_4021e0
lea edi [ esp + 0x38 ]
call sub_4104a0
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0x8b0
retn 0x10
sub_46158c
mov eax 0x10000
call sub_425210
mov ecx [ esp + 0x10008 ]
mov edx [ esp + 0x10004 ]
push esi
mov esi [ esp + 0x10010 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ edx ]
dec ecx
push ecx
push 0xc4
push eax
mov [ esp + 0x14 ] 0x7fff
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push r--data
mov eax esi
call sub_4021e0
xor al al
pop esi
add esp 0x10000
retn 0xc
xor ecx ecx
lea edx [ esp + 0x4 ]
mov [ esp + eax * 2 + 0x4 ] cx
push edx
mov eax esi
call sub_4021e0
mov al 0x1
pop esi
add esp 0x10000
retn 0xc
sub_461604
push ecx
push ebx
mov ebx [ esp + 0xc ]
mov edx [ ebx ]
push esi
mov esi [ SendMessageW@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push 0xb0
push edx
call esi
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
jb r-xdata
mov ecx [ ebx ]
push edi
push 0x0
push 0x0
push 0xe
push ecx
call esi
mov edi eax
test edi edi
je r-xdata
pop esi
xor al al
pop ebx
pop ecx
retn 0x8
pop edi
pop esi
xor al al
pop ebx
pop ecx
retn 0x8
cmp edi [ esp + 0xc ]
jb r-xdata
cmp edi [ esp + 0x14 ]
jb r-xdata
push ebp
xor ecx ecx
lea ebp [ edi + 0x1 ]
mov eax ebp
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov esi eax
mov eax [ ebx ]
push esi
push ebp
push 0xd
push eax
call [ SendMessageW@IAT ]
pop ebp
test eax eax
je r-xdata
push esi
call sub_4112ef
add esp 0x4
mov eax [ esp + 0x14 ]
cmp eax edi
je r-xdata
mov edx [ esp + 0xc ]
lea eax [ esi + edx * 2 ]
push eax
mov eax [ esp + 0x1c ]
call sub_4021e0
push esi
call sub_4112ef
add esp 0x4
pop edi
pop esi
mov al 0x1
pop ebx
pop ecx
retn 0x8
xor ecx ecx
mov [ esi + eax * 2 ] cx
sub_4616cb
mov eax 0x108c
call sub_425210
mov ecx [ esp + 0x1098 ]
mov edx [ esp + 0x109c ]
push ebx
mov ebx [ esp + 0x1094 ]
push ebp
push esi
push edi
mov edi [ esp + 0x10a4 ]
mov eax edi
shr eax 0xb
xor ebp ebp
and eax 0x1
xor esi esi
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x10 ] ebp
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] ebx
cmp ecx ebp
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x108c
retn
mov [ ecx ] ebp
cmp edx ebp
jne r-xdata
mov [ edx ] ebp
mov [ esp + 0x30 ] r--data
mov [ esp + 0x34 ] r--data
mov [ esp + 0x38 ] r--data
mov [ esp + 0x3c ] r--data
test edi 0xfc038580
je r-xdata
mov [ esp + 0x10 ] 0x10
jmp r-xdata
cmp [ ebx ] 0x28
jne r-xdata
mov [ esp + 0x10 ] 0x11
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
call sub_433141
mov ecx [ esp + 0x10ac ]
add esp 0x4
mov [ ecx ] eax
cmp eax ebp
je r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10ac ]
sub eax ebx
mov [ ecx ] eax
mov eax edi
and eax 0x1800000
je r-xdata
test edi 0x2000
jne r-xdata
cmp [ ebx + esi + 0x1 ] 0x2a
jne r-xdata
mov eax edi
and eax 0x700000
cmp eax 0x300000
mov ecx 0x2
jg r-xdata
cmp eax 0x800000
je r-xdata
push 0xffffffff
push ebx
call sub_431d82
mov ecx [ esp + 0x10b4 ]
add esp 0x8
cmp eax ebp
mov [ ecx ] eax
jl r-xdata
push 0x5
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
cmp eax __dos_header
je r-xdata
je r-xdata
cmp eax 0x1000000
je r-xdata
mov [ esp + 0x10 ] 0x2c
jmp r-xdata
push 0x3
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0x7
or edi 0x800
jmp r-xdata
mov [ esp + 0x88 ] 0x1
jmp r-xdata
cmp eax 0x500000
jne r-xdata
mov eax 0xd0a
jmp r-xdata
cmp eax ebp
je r-xdata
mov [ esp + 0x10 ] 0x38
jmp r-xdata
push 0x3
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
mov eax 0x100000
and edi 0xff8fffff
jmp r-xdata
cmp [ esi + ebx ] 0x28
je r-xdata
lea edx [ esp + 0x98 ]
mov ecx edx
push ebx
mov [ esp + 0x70 ] ebp
mov [ esp + 0x74 ] ebp
mov [ esp + 0x6c ] ebp
mov [ esp + 0x68 ] ebp
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] ebp
mov [ esp + 0x5c ] ebp
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x58 ] edx
mov [ esp + 0x4c ] ebx
call sub_4137e0
add eax ebx
mov [ esp + 0x50 ] eax
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
push ebp
lea eax [ esp + 0xa8 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x40 ]
push ecx
push ebp
push ebp
push ebp
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x4c ]
push ecx
mov edx edi
and edx 0x7
push edx
add esi ebx
push edi
mov [ esp + 0xb4 ] ebp
mov [ esp + 0xac ] edi
mov [ esp + 0xb0 ] ebp
mov [ esp + 0x88 ] ebp
mov [ esp + 0x60 ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0xd0 ] 0x5e
call sub_4548de
add esp 0x38
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov [ esp + 0x88 ] ecx
jmp r-xdata
cmp eax 0xff
mov [ esp + 0x88 ] ebp
jle r-xdata
mov eax 0xa
cmp eax 0x100000
je r-xdata
push 0x5
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
mov eax 0x200000
and edi 0xff8fffff
jmp r-xdata
or edi eax
mov eax [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
cmp eax 0x10000
jle r-xdata
mov [ esp + 0x8c ] 0x1
mov [ esp + 0x90 ] al
mov edx eax
sar edx 0x8
mov [ esp + 0x8c ] ecx
mov [ esp + 0x90 ] dl
mov [ esp + 0x91 ] al
jmp r-xdata
mov eax 0xd
jmp r-xdata
cmp eax 0x200000
jne r-xdata
push 0x4
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0x7
mov eax 0x300000
and edi 0xff8fffff
jmp r-xdata
mov ecx [ esp + 0x60 ]
add ecx 0x3
imul ecx [ esp + 0x5c ]
lea edi [ ecx + eax + 0x28 ]
push edi
call [ rw-data ]
mov esi eax
add esp 0x4
cmp esi ebp
jne r-xdata
mov [ esp + 0x10 ] 0x14
jmp r-xdata
push 0x8
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0x6
mov eax __dos_header
and edi 0xff8fffff
jmp r-xdata
mov [ esi ] 0x50435245
mov [ esi + 0x4 ] edi
mov edx [ esp + 0x74 ]
mov [ esi + 0x8 ] edx
movzx eax [ esp + 0x78 ]
mov [ esi + 0xc ] ax
xor ecx ecx
mov [ esi + 0xe ] cx
xor edx edx
mov [ esi + 0x14 ] dx
xor eax eax
mov [ esi + 0x16 ] ax
mov ecx 0x28
mov [ esi + 0x18 ] cx
movzx edx [ esp + 0x60 ]
mov [ esi + 0x1a ] dx
movzx eax [ esp + 0x5c ]
mov [ esi + 0x1c ] ax
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
xor ecx ecx
mov [ esi + 0x1e ] cx
mov edx [ esp + 0x64 ]
mov [ esp + 0x68 ] edx
mov [ esp + 0x64 ] ebp
mov [ esp + 0x5c ] ebp
movzx eax [ esi + 0x18 ]
add eax esi
mov [ esp + 0x58 ] eax
movzx ecx [ esi + 0x1a ]
movzx ebx [ esi + 0x1c ]
push ebp
imul ebx ecx
lea ecx [ esp + 0x34 ]
push ecx
push ebp
lea edx [ esp + 0xa4 ]
mov [ esp + 0x60 ] edx
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x3c ]
push ecx
push ebp
push ebp
add ebx eax
mov eax [ esp + 0x44 ]
push ebp
mov [ esp + 0x64 ] ebx
mov [ esp + 0x9c ] ebp
mov [ esp + 0xa0 ] ebp
mov [ esp + 0xa4 ] ebp
mov [ esp + 0x70 ] ebp
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x3c ] eax
mov [ ebx ] 0x5e
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x48 ]
mov ecx eax
push edx
and ecx 0x7
push ecx
push eax
mov [ esp + 0x54 ] ebx
call sub_4548de
movzx edx [ esp + 0x98 ]
mov [ esi + 0x10 ] dx
movzx eax [ esp + 0xa0 ]
mov [ esi + 0x12 ] ax
mov cx [ esp + 0xac ]
add esp 0x34
mov [ esi + 0xc ] cx
cmp [ esp + 0x80 ] ebp
je r-xdata
mov [ esp + 0x10 ] 0x15
jmp r-xdata
push 0xc
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
mov eax 0x500000
and edi 0xff8fffff
jmp r-xdata
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov [ esp + 0x24 ] 0xffffffff
push 0xc
lea eax [ esi + ebx + 0x2 ]
push r--data
push eax
call sub_416685
add esp 0xc
test eax eax
jne r-xdata
add esi 0xe
mov eax 0x800000
mov eax [ esp + 0x20 ]
mov [ eax ] 0x0
inc eax
sub eax ebx
cmp eax [ esp + 0x14 ]
jle r-xdata
mov edx [ esp + 0x18 ]
cmp [ edx ] 0x0
je r-xdata
add esi 0xe
mov eax 0x1000000
jmp r-xdata
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov [ esp + 0x10 ] 0x17
jmp r-xdata
mov [ esp + 0x10 ] 0x16
and edi 0xfe7fffff
cmp [ esp + 0x84 ] ebp
je r-xdata
lea ecx [ ecx ]
cmp [ esp + 0x10 ] ebp
je r-xdata
mov eax [ esp + 0x1c ]
push 0xffffffff
push eax
push ebx
call sub_43238e
mov edi eax
add esp 0xc
cmp edi ebp
je r-xdata
mov dx [ esi + 0x12 ]
cmp dx [ esi + 0x10 ]
jbe r-xdata
sub eax 0x2
mov [ esp + 0x54 ] eax
movzx edx [ eax ]
movzx edi [ eax + 0x1 ]
shl edx 0x8
or edi edx
movzx eax [ edi + ebx ]
movzx ecx [ edi + ebx + 0x1 ]
mov edx [ esp + 0x1c ]
shl eax 0x8
or eax ecx
push eax
push edx
push ebx
call sub_43238e
add esp 0xc
cmp eax ebp
je r-xdata
mov eax [ esi + 0x8 ]
test al 0x10
jne r-xdata
push esi
call [ rw-data ]
mov ebx [ esp + 0x10a4 ]
add esp 0x4
mov edi edi
mov [ esp + 0x10 ] 0xf
mov [ esp + 0x10 ] 0x35
jmp r-xdata
mov ecx eax
sub ecx ebx
sar ecx 0x8
sub al bl
mov [ edi + ebx ] cl
mov [ edi + ebx + 0x1 ] al
cmp [ esp + 0x10 ] ebp
je r-xdata
mov eax [ esp + 0x24 ]
cmp eax ebp
jl r-xdata
mov edx [ esp + 0x70 ]
push edx
mov [ esp + 0x18 ] eax
push ebp
lea eax [ esp + 0x1c ]
push eax
push ebx
call sub_43fb83
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
push 0xffffffff
push eax
add edi 0x3
push edi
call sub_43238e
mov edi eax
add esp 0xc
cmp edi ebp
jne r-xdata
movzx eax [ edi - 0x2 ]
movzx ecx [ edi - 0x1 ]
shl eax 0x8
or eax ecx
movzx edx [ eax + edi - 0x3 ]
lea eax [ eax + edi - 0x3 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x8 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x30 ]
push eax
push 0x1
push ecx
push edi
mov [ esp + 0x38 ] edx
call sub_43249e
mov dl [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
add esp 0x10
cmp eax ebp
mov [ ecx ] dl
jl r-xdata
mov eax [ esp + 0x54 ]
lea ecx [ esp + 0x98 ]
cmp eax ecx
jbe r-xdata
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x108c
retn
test [ esi + 0x8 ] 0x10
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ebp
jge r-xdata
or [ esi + 0x8 ] 0x10
jmp r-xdata
movzx ecx [ edi + 0x1 ]
movzx edx [ edi + 0x2 ]
shl ecx 0x8
or ecx edx
jne r-xdata
sub eax 0xfffffffe
neg eax
sbb eax eax
and eax 0xfffffff5
add eax 0x24
mov [ esp + 0x10 ] eax
jmp r-xdata
mov edx eax
sar edx 0x8
mov [ edi + 0x1 ] dl
mov [ edi + 0x2 ] al
mov ecx eax
and ecx 0xff
test eax 0x100
je r-xdata
test eax 0x200
je r-xdata
mov ecx eax
and ecx 0xff
test eax 0x100
je r-xdata
push ebp
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_43f95b
add esp 0xc
cmp eax ebp
jl r-xdata
or [ esi + 0xc ] 0x4
mov [ esi + 0x16 ] ax
mov edx [ esp + 0x34 ]
movzx edx [ edx + ecx ]
cmp edx ecx
jne r-xdata
or [ esi + 0xc ] 0x2
mov [ esi + 0x14 ] ax
jmp r-xdata
mov edx [ esp + 0x34 ]
movzx edx [ edx + ecx ]
cmp edx ecx
jne r-xdata
mov eax [ esp + 0x70 ]
push eax
push ebp
push ebx
call sub_43fa5c
add esp 0xc
test eax eax
je r-xdata
and eax 0xfffffeff
mov eax ecx
or [ esi + 0xc ] 0x8
sub_461e60
push ecx
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_4616cb
add esp 0x10
pop ecx
retn
sub_461e7f
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
push eax
push rw-data
call sub_4340b2
cmp eax 0xffffffff
je r-xdata
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push 0x2
push eax
push rw-data
call sub_456354
sub_461eb0
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x20 ]
push esi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
push 0x1
push eax
push rw-data
call sub_456354
cmp [ esp + 0x24 ] 0x0
je r-xdata
movzx eax bx
movzx ecx bp
shl eax 0x10
or eax ecx
push eax
push edi
push 0x204
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
movzx ecx bx
movzx edx bp
shl ecx 0x10
or ecx edx
push ecx
push edi
push 0x201
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
sub_461f2e
mov edx [ esp + 0x4 ]
sub esp 0xc
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
mov ecx [ eax + ebx * 4 ]
push esi
mov esi [ edx ]
push edi
mov edi [ ecx ]
mov ecx [ esp + 0x20 ]
mov al [ edi + 0x88 ]
mov [ esp + 0xf ] al
cmp ecx 0x6
jne r-xdata
add esp 0xc
retn 0x8
cmp ecx 0x4
jne r-xdata
cmp al 0x18
je r-xdata
cmp ecx 0x3
jne r-xdata
cmp al 0x1
je r-xdata
mov eax [ esi + 0x1c0 ]
mov [ esi + 0x1c ] ebx
test eax eax
je r-xdata
jmp r-xdata
cmp ecx 0x100
jne r-xdata
test al al
je r-xdata
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push edi
push eax
call sub_437fc7
cmp al 0x2
je r-xdata
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
add esp 0xc
retn 0x8
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x8b ]
cmp al 0xff
je r-xdata
cmp al 0x3
jne r-xdata
push ebp
push 0x0
push esi
push rw-data
call sub_456354
movzx eax [ esp + 0x13 ]
mov ebp [ esi + 0x168 ]
mov ebx [ esi + 0x16c ]
mov [ esp + 0x12 ] 0x0
cmp eax 0x1c
ja r-xdata
movzx edx al
cmp edx [ esi + 0x184 ]
je r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x4c ]
pop ebp
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_4621e2 ]
jmp [ eax * 4 + jump_table_4621be ]
mov al [ esp + 0xe ]
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x8
push 0x0
push 0x0
push 0x41c
push eax
call [ SendMessageW@IAT ]
cmp [ esp + 0x24 ] 0x1
cmp [ esp + 0x24 ] 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esi ]
push edx
push eax
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jmp r-xdata
mov eax [ edi ]
push 0xffffffec
push eax
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x100000
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov ecx [ esp + 0x24 ]
push ecx
push esi
push rw-data
call sub_441077
mov edx [ edi ]
mov eax [ esp + 0x20 ]
push ebx
push ebp
push edx
push esi
push eax
mov ecx [ edi ]
mov edx [ esp + 0x20 ]
push ebx
push ebp
push ecx
push esi
push edx
jmp r-xdata
mov eax [ edi ]
mov ecx [ esp + 0x20 ]
push ebx
push ebp
push eax
push esi
push ecx
jmp r-xdata
cmp eax 0x300
jne r-xdata
jne r-xdata
mov ecx [ esi ]
push 0x0
push 0x2
push 0xa1
push ecx
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_451b1d
mov [ esp + 0x12 ] 0x1
cmp eax 0x200
jne r-xdata
mov eax [ esi + 0x1b8 ]
test eax eax
jle r-xdata
cmp [ edi + 0x88 ] 0x2
jne r-xdata
mov edx [ esp + 0x20 ]
mov [ esi + 0x1b8 ] edx
jmp r-xdata
cmp eax [ esp + 0x20 ]
je r-xdata
mov eax [ esi + 0x1b8 ]
test eax eax
jle r-xdata
mov edx [ edi ]
lea eax [ esi + 0x1b4 ]
push eax
lea ecx [ esi + 0x1b0 ]
push ecx
push 0xb0
push edx
call [ SendMessageW@IAT ]
push ebx
push ebp
mov [ esi + 0x1b8 ] 0x0
mov ecx [ edi ]
push ecx
push esi
push eax
mov ecx rw-data
call sub_451b1d
cmp eax [ esp + 0x20 ]
jne r-xdata
push ebx
push ebp
mov [ esi + 0x1b8 ] 0x0
mov ecx [ edi ]
push ecx
push esi
push eax
mov ecx rw-data
call sub_451b1d
jmp r-xdata
sub_4621ff
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x1c ]
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
push edi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push esi
mov esi [ edx ]
test edi edi
jne r-xdata
pop edi
xor al al
pop ebx
retn 0x18
push 0xffffffff
push esi
push rw-data
call sub_456354
mov eax [ esi + 0x168 ]
mov edx [ esi + 0x16c ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x170 ]
mov eax [ esp + 0x18 ]
mov [ eax ] edx
mov eax [ esi + 0x174 ]
mov edx [ esp + 0x1c ]
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x7fffffff
mov edx [ esi + 0x160 ]
mov [ ecx ] eax
mov [ rw-data ] edx
mov eax [ esi + 0x164 ]
push 0x0
mov [ rw-data ] eax
mov ecx [ esi ]
push sub_433b9f
push ecx
call [ EnumChildWindows@IAT ]
mov eax [ rw-data ]
mov [ ebx ] 0xffffffff
test eax eax
je r-xdata
call [ GetActiveWindow@IAT ]
cmp [ esi ] eax
je r-xdata
mov [ ebx ] 0x0
cmp eax [ esi ]
je r-xdata
pop esi
pop edi
xor al al
pop ebx
retn 0x18
push eax
push rw-data
call sub_4421c1
mov [ ebx ] eax
cmp eax 0xffffffff
jne r-xdata
pop esi
pop edi
mov al 0x1
pop ebx
retn 0x18
sub_4622f6
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
push 0x0
push 0x1
add eax ecx
call sub_4040e0
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
push r--data
mov eax rw-data
call sub_4021e0
mov eax rw-data
call sub_401e70
xor eax eax
retn 0x8
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push 0x80
push 0x0
push eax
call sub_453063
push eax
push rw-data
call sub_4608ce
mov eax rw-data
call sub_401e70
xor eax eax
retn 0x8
sub_462389
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x8 ]
push r--data
mov eax rw-data
mov [ rw-data ] 0x0
call sub_4021e0
test ebx ebx
jbe r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
push eax
mov esi rw-data
call sub_40df50
mov esi rw-data
call sub_40e1e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
push eax
call sub_436134
add esp 0x4
mov [ rw-data ] eax
sub_4623f6
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push esi
push edi
call sub_40c760
push eax
mov ecx rw-data
call sub_45f132
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_46242c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
or ebx 0xffffffff
push edi
xor edi edi
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
test ecx ecx
jbe r-xdata
cmp ecx 0x1
jbe r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov ecx [ esp + 0xc ]
mov edi eax
mov eax [ ebp + 0x10 ]
cmp ecx 0x2
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
mov ecx [ esp + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
cmp ecx 0x3
jbe r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov ecx [ esp + 0xc ]
mov ebx eax
mov eax [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push ebx
push eax
push edi
push 0x0
sub eax 0x1
jne r-xdata
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
push 0x1
add eax ecx
call sub_4040e0
mov ecx esi
call sub_40c760
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push eax
push ebx
push ecx
push edi
push 0x1
jmp r-xdata
push rw-data
call sub_45f2c5
mov ebx eax
call sub_4092c0
mov [ esi ] ebx
mov [ esi + 0x8 ] 0x1
sub_46252b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_40c760
mov ecx [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx ]
push eax
call sub_453063
mov ecx [ eax + 0x8 ]
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
mov eax ebx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ebx
call sub_401400
mov eax [ esp + 0x14 ]
cmp eax 0x8
jne r-xdata
test al 0x1
je r-xdata
xor edi edi
test ebx ebx
jbe r-xdata
test al 0x2
je r-xdata
test ebx ebx
je r-xdata
lea edi [ esp + 0x28 ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_401be0
movzx edx [ eax ]
push edx
call sub_437b6b
add esp 0x4
test eax eax
jne r-xdata
test al 0x4
je r-xdata
test ebx ebx
je r-xdata
xor edi edi
test ebx ebx
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_40e640
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
cmp edi ebx
jb r-xdata
call sub_401be0
movzx eax [ eax ]
push eax
lea eax [ esp + 0x2c ]
call sub_403470
lea edi [ esp + 0x18 ]
test ebx ebx
je r-xdata
lea edi [ ebx - 0x1 ]
cmp edi 0xffffffff
je r-xdata
sub ebx edi
push ebx
push edi
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x34 ]
push eax
call sub_4608ce
lea ecx [ esp + 0x28 ]
push ecx
lea esi [ esp + 0x1c ]
call sub_40df50
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
lea esi [ esp + 0x18 ]
call sub_401be0
movzx ecx [ eax ]
push ecx
call sub_437b6b
add esp 0x4
test eax eax
je r-xdata
or eax 0xffffffff
xor edi edi
lea esi [ esp + 0x28 ]
call sub_40c740
mov [ esp + 0x13 ] 0x0
test ebx ebx
jbe r-xdata
inc edi
push edi
push 0x0
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_4608ce
lea edx [ esp + 0x28 ]
push edx
lea esi [ esp + 0x1c ]
call sub_40df50
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov edi edi
inc edi
cmp edi ebx
jb r-xdata
lea edx [ esp + 0x28 ]
push edx
lea esi [ esp + 0x1c ]
call sub_40df50
lea esi [ esp + 0x18 ]
call sub_401be0
movzx eax [ eax ]
push eax
call sub_437b6b
add esp 0x4
test eax eax
je r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ esp + 0x13 ] 0x0
cmp [ esp + 0x13 ] 0x0
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_401be0
movzx edx [ eax ]
push edx
call sub_437b6b
add esp 0x4
test eax eax
je r-xdata
inc edi
cmp edi ebx
jb r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_401be0
movzx ecx [ eax ]
push ecx
lea eax [ esp + 0x2c ]
call sub_403470
sub_462710
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov [ esp + 0x18 ] ecx
push edi
lea ecx [ esp + 0x40 ]
call sub_40c060
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ebx eax
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x30 ]
call sub_401400
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_453063
mov edx [ edi + 0x4 ]
mov esi [ edx + 0x4 ]
push esi
mov [ esp + 0x28 ] eax
call sub_453333
test al al
je r-xdata
push esi
call sub_453081
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_45302e
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov ecx esi
call sub_40c760
mov edi eax
sub edi 0x1
js r-xdata
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_4040e0
jmp r-xdata
xor esi esi
cmp [ edi + 0x8 ] 0x4
jb r-xdata
mov esi [ esp + 0x24 ]
mov eax [ esi + 0x4 ]
add eax edi
cmp eax [ ebx + 0x4 ]
ja r-xdata
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x40 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x5
mov [ esp + 0x13 ] 0x0
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov esi eax
push edi
push 0x0
push ebx
lea ecx [ esp + 0x3c ]
push ecx
call sub_4608ce
push esi
lea eax [ esp + 0x34 ]
call sub_40c140
mov eax [ esi + 0x4 ]
mov edx [ ebx + 0x4 ]
sub edx eax
sub edx edi
push edx
add eax edi
push eax
push ebx
lea eax [ esp + 0x4c ]
push eax
call sub_4608ce
lea ecx [ esp + 0x40 ]
push ecx
lea eax [ esp + 0x34 ]
call sub_40c140
jmp r-xdata
test esi esi
jge r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x30 ]
call sub_40e640
xor edi edi
mov edx [ esp + 0x18 ]
movzx eax [ esp + 0x13 ]
mov ecx [ esp + 0x20 ]
push 0x7fffffff
push 0xffffffff
push edx
push esi
push eax
push ecx
push ebx
call sub_442c52
mov edi eax
test edi edi
jge r-xdata
mov [ esp + 0x13 ] 0x1
sub edi eax
push edi
push eax
jmp r-xdata
mov ecx edi
sub ecx eax
push ecx
push eax
push ebx
push edx
call sub_4608ce
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x34 ]
call sub_40c140
mov ecx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x34 ]
call sub_40c140
inc [ esp + 0x14 ]
add edi [ esp + 0x18 ]
test esi esi
je r-xdata
push edi
push 0x0
push ebx
lea edx [ esp + 0x3c ]
push edx
call sub_4608ce
neg esi
jmp r-xdata
mov esi edi
neg esi
xor edi edi
neg esi
jmp r-xdata
push ebx
push edx
call sub_4608ce
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x34 ]
call sub_40c140
mov ecx [ esp + 0x14 ]
push 0x0
push ecx
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
call sub_404120
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x20 ]
push 0xffffffff
push edi
push ecx
push 0x1
push edx
push eax
push ebx
mov [ esp + 0x44 ] edi
call sub_442c52
mov edi eax
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x40 ]
cmp edi [ ebx + 0x4 ]
je r-xdata
cmp [ esp + 0x14 ] esi
jne r-xdata
movzx eax [ esp + 0x13 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x2c ] eax
mov ecx [ ebx + 0x4 ]
sub ecx edi
push ecx
push edi
lea edx [ esp + 0x48 ]
sub_46296a
sub esp 0x10
push esi
push edi
mov edi [ esp + 0x1c ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45302e
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov esi eax
call sub_40c760
test eax eax
jge r-xdata
cmp eax esi
jle r-xdata
xor eax eax
sub esi eax
mov eax esi
lea ecx [ esp + 0x8 ]
call sub_401400
mov edx [ edi + 0x4 ]
mov eax [ edx ]
push esi
push 0x0
push eax
call sub_453063
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4608ce
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
mov eax esi
sub_4629db
sub esp 0x10
push ebx
mov ebx [ esp + 0x18 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
call sub_45302e
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edi eax
call sub_40c760
mov esi eax
test esi esi
jge r-xdata
cmp esi edi
jle r-xdata
xor esi esi
sub edi esi
mov eax edi
lea ecx [ esp + 0xc ]
call sub_401400
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push edi
push esi
push eax
call sub_453063
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_4608ce
mov esi [ esp + 0x24 ]
lea edi [ esp + 0xc ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov esi edi
sub_462a4f
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45302e
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov ebx eax
or ebp 0xffffffff
call sub_40c760
mov esi eax
dec esi
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c060
cmp esi ebx
jg r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov ebp eax
mov esi ebx
test esi esi
jge r-xdata
sub ebx esi
mov ebp ebx
mov eax ebx
sub eax esi
cmp ebp eax
jle r-xdata
test ebp ebp
jl r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push ebp
push esi
push eax
call sub_453063
push eax
lea edx [ esp + 0x1c ]
push edx
call sub_4608ce
mov esi [ esp + 0x28 ]
lea edi [ esp + 0x10 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
sub_462ae6
sub esp 0x10
push esi
push edi
mov edi [ esp + 0x1c ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45302e
lea ecx [ esp + 0x8 ]
mov esi eax
call sub_40c060
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
test eax eax
jl r-xdata
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
cmp eax esi
jle r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
push eax
sub esi eax
push esi
push ecx
call sub_453063
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4608ce
mov eax esi
sub_462b52
sub esp 0x10
push esi
push edi
lea ecx [ esp + 0x8 ]
call sub_40c060
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_45302e
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edi eax
call sub_40c760
test eax eax
jl r-xdata
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
cmp eax edi
jle r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx ]
push eax
push 0x0
push ecx
call sub_453063
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4608ce
mov eax edi
sub_462bbd
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
mov esi 0x2
cmp eax esi
jae r-xdata
mov ecx ebx
call sub_40c060
mov eax [ edi + 0x4 ]
push esi
sub eax esi
push eax
push edi
push ebx
call sub_4608ce
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x8
mov esi eax
sub_462bf3
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi [ esp + 0x2c ]
lea esi [ esp + 0x30 ]
call sub_410a40
push r--data
lea eax [ esp + 0x14 ]
push eax
push esi
mov [ edi ] 0x0
call sub_462bbd
push eax
call sub_445975
add esp 0x8
lea ecx [ esp + 0x10 ]
mov bl al
call sub_402620
test bl bl
je r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
jne r-xdata
mov eax r--data
mov ecx esi
call sub_40e620
mov edx [ rw-data ]
cmp [ edx + 0x2a ] 0x0
je r-xdata
lea ecx [ esp + 0x30 ]
mov [ ebp ] 0x80000002
call sub_402620
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x14
retn 0x18
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
jne r-xdata
mov [ edi ] 0x100
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x30 ]
mov [ ebp ] 0x80000000
call sub_402620
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x30 ]
mov [ ebp ] 0x80000005
call sub_402620
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x30 ]
mov [ ebp ] 0x80000001
call sub_402620
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x30 ]
mov [ ebp ] 0x80000003
call sub_402620
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x30 ]
call sub_402620
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
sub_462dec
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push r--data
mov eax ebp
call sub_4021e0
mov eax [ esp + 0x18 ]
push r--data
call sub_4021e0
push r--data
mov eax ebx
call sub_4021e0
cmp [ esp + 0x24 ] 0x2
jb r-xdata
push r--data
mov eax ebp
call sub_4021e0
xor edi edi
lea esi [ esp + 0x20 ]
call sub_401be0
cmp [ eax ] 0x5c
jne r-xdata
mov ecx [ esp + 0x18 ]
push esi
push 0x0
lea eax [ esp + 0x28 ]
push eax
push ecx
call sub_4608ce
mov edx [ esp + 0x24 ]
sub edx esi
dec edx
push edx
inc esi
push esi
lea eax [ esp + 0x28 ]
push eax
push ebx
call sub_4608ce
mov eax r--data
mov ecx ebx
call sub_40e620
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
retn 0x1c
mov esi [ esp + 0x24 ]
mov edi 0x1
call sub_401be0
cmp [ eax ] 0x5c
jne r-xdata
lea eax [ edi + 0x1 ]
xor edi edi
call sub_40c740
push r--data
push esi
call sub_434b96
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push esi
push 0x0
lea ecx [ esp + 0x28 ]
push ecx
push ebp
call sub_4608ce
lea eax [ esi + 0x1 ]
xor edi edi
lea esi [ esp + 0x20 ]
call sub_40c740
jmp r-xdata
mov esi [ esp + 0x24 ]
push r--data
lea edx [ esp + 0x24 ]
push edx
call sub_434b96
mov esi eax
cmp esi 0xffffffff
jne r-xdata
sub_462eed
sub esp 0x14
push esi
push edi
lea esi [ esp + 0xc ]
mov edi ecx
mov [ esp + 0x8 ] 0xffffffff
call sub_40d500
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push esi
push eax
call sub_45efe7
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
push ecx
add edi 0x15c
push edi
call sub_437ca6
mov esi [ esp + 0x24 ]
call sub_4092c0
mov edx [ esp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
lea esi [ esp + 0xc ]
call sub_401330
pop edi
xor eax eax
pop esi
add esp 0x14
retn 0x8
sub_462f5a
sub esp 0x4ec
push ebx
push ebp
push esi
push edi
mov ebx [ esp + 0x504 ]
mov eax [ r--data ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ esp + 0x20 ] eax
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov eax [ r--data ]
mov [ esp + 0x4c ] eax
xor eax eax
mov [ esp + 0x52 ] eax
mov [ esp + 0x56 ] eax
mov [ esp + 0x5a ] eax
mov [ esp + 0x5e ] eax
mov [ esp + 0x62 ] eax
mov [ esp + 0x66 ] ax
mov eax [ r--data ]
mov [ esp + 0x74 ] eax
xor eax eax
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] eax
mov [ esp + 0x80 ] eax
mov [ esp + 0x84 ] eax
mov [ esp + 0x88 ] eax
mov [ esp + 0x8c ] eax
movzx eax [ r--data ]
mov [ esp + 0x24 ] ecx
movzx ecx [ r--data ]
mov [ esp + 0x48 ] edx
mov edx [ r--data ]
mov [ esp + 0xa0 ] ax
xor eax eax
mov [ esp + 0x50 ] cx
mov ecx [ r--data ]
mov [ esp + 0x70 ] edx
mov edx [ r--data ]
mov [ esp + 0xa2 ] eax
mov [ esp + 0xa6 ] eax
mov [ esp + 0xaa ] eax
mov [ esp + 0xae ] eax
mov [ esp + 0xb2 ] eax
mov [ esp + 0xb6 ] ax
movzx eax [ r--data ]
mov ebp 0x4
mov [ esp + 0x98 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x9c ] edx
mov edx [ r--data ]
xor edi edi
mov [ esp + 0xc0 ] ecx
mov [ esp + 0xc4 ] edx
mov edx [ r--data ]
mov [ esp + 0xc8 ] ax
xor eax eax
mov ecx 0x5
mov [ esp + 0x40 ] 0x6
mov [ esp + 0x44 ] ebp
mov [ esp + 0x68 ] 0x7
mov [ esp + 0x6c ] ebp
mov [ esp + 0x90 ] ebp
mov [ esp + 0x94 ] ebp
mov [ esp + 0xb8 ] ebp
mov [ esp + 0xbc ] ebp
mov [ esp + 0xca ] eax
mov [ esp + 0xce ] eax
mov [ esp + 0xd2 ] eax
mov [ esp + 0xd6 ] eax
mov [ esp + 0xda ] eax
mov [ esp + 0xde ] ax
mov [ esp + 0xe0 ] ecx
mov [ esp + 0xe4 ] ebp
mov [ esp + 0xe8 ] edx
mov eax [ r--data ]
movzx edx [ r--data ]
mov [ esp + 0xec ] eax
xor eax eax
mov [ esp + 0xf2 ] eax
mov [ esp + 0xf6 ] eax
mov [ esp + 0xfa ] eax
mov [ esp + 0xfe ] eax
mov [ esp + 0x102 ] eax
mov [ esp + 0x106 ] ax
mov eax [ r--data ]
mov [ esp + 0x110 ] eax
mov eax [ r--data ]
mov [ esp + 0x118 ] eax
xor eax eax
mov [ esp + 0x11c ] eax
mov [ esp + 0x120 ] eax
mov [ esp + 0x124 ] eax
mov [ esp + 0x128 ] eax
mov [ esp + 0x12c ] eax
mov eax [ r--data ]
mov [ esp + 0x13c ] eax
xor eax eax
mov [ esp + 0xf0 ] dx
mov edx [ r--data ]
mov [ esp + 0x144 ] eax
mov [ esp + 0x148 ] eax
mov [ esp + 0x14c ] eax
mov [ esp + 0x150 ] eax
mov [ esp + 0x154 ] eax
mov eax [ r--data ]
mov [ esp + 0x114 ] edx
mov edx [ r--data ]
mov [ esp + 0x160 ] eax
xor eax eax
mov [ esp + 0x138 ] edx
mov edx [ r--data ]
mov [ esp + 0x16c ] eax
mov [ esp + 0x170 ] eax
mov [ esp + 0x174 ] eax
mov [ esp + 0x178 ] eax
mov [ esp + 0x17c ] eax
mov eax [ r--data ]
mov [ esp + 0x140 ] edx
mov edx [ r--data ]
mov [ esp + 0x188 ] eax
movzx eax [ r--data ]
mov [ esp + 0x168 ] edx
mov edx [ r--data ]
mov [ esp + 0x130 ] ecx
mov [ esp + 0x158 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x194 ] ax
xor eax eax
mov [ esp + 0x190 ] edx
mov edx [ r--data ]
mov [ esp + 0x164 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x196 ] eax
mov [ esp + 0x19a ] eax
mov [ esp + 0x19e ] eax
mov [ esp + 0x1a2 ] eax
mov [ esp + 0x1a6 ] ax
mov eax [ r--data ]
mov [ esp + 0x1b0 ] edx
movzx edx [ r--data ]
mov [ esp + 0x18c ] ecx
mov [ esp + 0x1b4 ] eax
xor eax eax
mov ecx 0x3
mov [ esp + 0x108 ] ebp
mov [ esp + 0x10c ] ebp
mov [ esp + 0x134 ] ebp
mov [ esp + 0x15c ] ebp
mov [ esp + 0x180 ] 0x2
mov [ esp + 0x184 ] ebp
mov [ esp + 0x1a8 ] ecx
mov [ esp + 0x1ac ] ebp
mov [ esp + 0x1b8 ] dx
mov [ esp + 0x1ba ] eax
mov [ esp + 0x1be ] eax
movzx edx [ r--data ]
mov [ esp + 0x1c2 ] eax
mov [ esp + 0x1c6 ] eax
mov [ esp + 0x1ca ] eax
mov [ esp + 0x1ce ] ax
mov eax [ r--data ]
mov [ esp + 0x1d8 ] eax
xor eax eax
mov [ esp + 0x1e2 ] eax
mov [ esp + 0x1e6 ] eax
mov [ esp + 0x1ea ] eax
mov [ esp + 0x1ee ] eax
mov [ esp + 0x1f2 ] eax
mov [ esp + 0x1f6 ] ax
mov eax [ r--data ]
mov [ esp + 0x200 ] eax
mov eax [ r--data ]
mov [ esp + 0x208 ] eax
xor eax eax
mov [ esp + 0x20c ] eax
mov [ esp + 0x210 ] eax
mov [ esp + 0x214 ] eax
mov [ esp + 0x218 ] eax
mov [ esp + 0x21c ] eax
mov eax [ r--data ]
mov [ esp + 0x1d0 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x22c ] eax
mov eax [ r--data ]
mov [ esp + 0x1dc ] ecx
mov [ esp + 0x1e0 ] dx
mov edx [ r--data ]
mov [ esp + 0x234 ] eax
xor eax eax
mov ecx 0x1
mov [ esp + 0x1f8 ] ecx
mov [ esp + 0x204 ] edx
mov edx [ r--data ]
mov [ esp + 0x220 ] ecx
mov [ esp + 0x238 ] eax
mov [ esp + 0x23c ] eax
mov [ esp + 0x240 ] eax
mov [ esp + 0x244 ] eax
mov eax [ r--data ]
mov [ esp + 0x248 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x228 ] edx
mov edx [ r--data ]
mov [ esp + 0x250 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x258 ] eax
xor eax eax
mov [ esp + 0x230 ] edx
mov edx [ r--data ]
mov [ esp + 0x25c ] eax
mov [ esp + 0x260 ] eax
mov [ esp + 0x264 ] eax
mov [ esp + 0x268 ] eax
mov [ esp + 0x26c ] eax
mov eax [ r--data ]
mov [ esp + 0x278 ] ecx
movzx ecx [ r--data ]
mov [ esp + 0x254 ] edx
mov edx [ r--data ]
mov [ esp + 0x280 ] eax
xor eax eax
mov [ esp + 0x284 ] cx
mov [ esp + 0x1d4 ] ebp
mov [ esp + 0x1fc ] ebp
mov [ esp + 0x224 ] ebp
mov [ esp + 0x24c ] ebp
mov [ esp + 0x270 ] 0x9
mov [ esp + 0x274 ] ebp
mov [ esp + 0x27c ] edx
mov [ esp + 0x286 ] eax
mov [ esp + 0x28a ] eax
mov [ esp + 0x28e ] eax
mov [ esp + 0x292 ] eax
mov [ esp + 0x296 ] ax
mov [ esp + 0x298 ] 0xa
mov ecx 0x8
mov eax [ r--data ]
mov edx [ r--data ]
mov [ esp + 0x2a4 ] eax
xor eax eax
mov [ esp + 0x2a8 ] eax
mov [ esp + 0x2ac ] eax
mov [ esp + 0x2b0 ] eax
mov [ esp + 0x2b4 ] eax
mov [ esp + 0x2b8 ] eax
mov [ esp + 0x2bc ] eax
mov eax [ r--data ]
mov [ esp + 0x2cc ] eax
xor eax eax
mov [ esp + 0x2a0 ] edx
mov edx [ r--data ]
mov [ esp + 0x2d2 ] eax
mov [ esp + 0x2d6 ] eax
mov [ esp + 0x2da ] eax
mov [ esp + 0x2de ] eax
mov [ esp + 0x2e2 ] eax
mov [ esp + 0x2e6 ] ax
mov eax [ r--data ]
mov [ esp + 0x2c8 ] edx
movzx edx [ r--data ]
mov [ esp + 0x2f0 ] eax
mov eax [ r--data ]
mov [ esp + 0x2d0 ] dx
mov edx [ r--data ]
mov [ esp + 0x2f8 ] eax
xor eax eax
mov [ esp + 0x2f4 ] edx
movzx edx [ r--data ]
mov [ esp + 0x2fe ] eax
mov [ esp + 0x302 ] eax
mov [ esp + 0x306 ] eax
mov [ esp + 0x30a ] eax
mov [ esp + 0x30e ] ax
mov eax [ r--data ]
mov [ esp + 0x318 ] eax
mov eax [ r--data ]
mov [ esp + 0x2fc ] dx
mov edx [ r--data ]
mov [ esp + 0x320 ] eax
xor eax eax
mov [ esp + 0x31c ] edx
mov edx [ r--data ]
mov [ esp + 0x328 ] eax
mov [ esp + 0x32c ] eax
mov [ esp + 0x330 ] eax
mov [ esp + 0x334 ] eax
mov eax [ r--data ]
mov [ esp + 0x324 ] edx
mov edx [ r--data ]
mov [ esp + 0x340 ] eax
mov eax [ r--data ]
mov [ esp + 0x344 ] edx
movzx edx [ r--data ]
mov [ esp + 0x348 ] eax
xor eax eax
mov esi 0xb
mov [ esp + 0x34c ] dx
mov edx [ r--data ]
mov [ esp + 0x34e ] eax
mov [ esp + 0x352 ] eax
mov [ esp + 0x356 ] eax
mov [ esp + 0x35a ] eax
mov [ esp + 0x35e ] ax
mov eax [ r--data ]
mov [ esp + 0x29c ] ecx
mov [ esp + 0x2c0 ] ecx
mov [ esp + 0x2c4 ] ebp
mov [ esp + 0x2e8 ] ecx
mov [ esp + 0x2ec ] ebp
mov [ esp + 0x310 ] ecx
mov [ esp + 0x314 ] ebp
mov [ esp + 0x338 ] esi
mov [ esp + 0x33c ] ebp
mov [ esp + 0x360 ] esi
mov [ esp + 0x364 ] ebp
mov [ esp + 0x368 ] eax
mov [ esp + 0x36c ] edx
mov eax [ r--data ]
mov [ esp + 0x370 ] eax
xor eax eax
mov [ esp + 0x376 ] eax
mov [ esp + 0x37a ] eax
mov [ esp + 0x37e ] eax
mov [ esp + 0x382 ] eax
mov [ esp + 0x386 ] ax
mov eax [ r--data ]
mov [ esp + 0x390 ] eax
mov eax [ r--data ]
mov [ esp + 0x394 ] eax
mov eax [ r--data ]
mov [ esp + 0x398 ] eax
xor eax eax
mov [ esp + 0x39c ] eax
mov [ esp + 0x3a0 ] eax
mov [ esp + 0x3a4 ] eax
mov [ esp + 0x3a8 ] eax
mov [ esp + 0x3ac ] eax
mov eax [ r--data ]
mov [ esp + 0x3b8 ] eax
mov eax [ r--data ]
mov [ esp + 0x3bc ] eax
mov eax [ r--data ]
mov [ esp + 0x3c0 ] eax
movzx eax [ r--data ]
movzx edx [ r--data ]
mov [ esp + 0x3c4 ] ax
xor eax eax
mov [ esp + 0x3c6 ] eax
mov [ esp + 0x3ca ] eax
mov [ esp + 0x3ce ] eax
mov [ esp + 0x3d2 ] eax
mov [ esp + 0x3d6 ] ax
mov eax [ r--data ]
mov [ esp + 0x3e4 ] eax
mov eax [ r--data ]
mov [ esp + 0x3b4 ] ecx
mov [ esp + 0x3dc ] ecx
mov ecx [ r--data ]
mov [ esp + 0x3ec ] eax
xor eax eax
mov [ esp + 0x3e0 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x3f0 ] eax
mov [ esp + 0x3f4 ] eax
mov [ esp + 0x3f8 ] eax
mov [ esp + 0x3fc ] eax
mov eax [ r--data ]
mov [ esp + 0x3e8 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x40c ] eax
mov eax [ r--data ]
mov [ esp + 0x408 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x414 ] eax
xor eax eax
mov [ esp + 0x410 ] ecx
movzx ecx [ r--data ]
mov [ esp + 0x41a ] eax
mov [ esp + 0x41e ] eax
mov [ esp + 0x422 ] eax
mov [ esp + 0x426 ] ax
mov eax [ r--data ]
mov [ esp + 0x374 ] dx
mov edx 0xc
mov [ esp + 0x418 ] cx
mov ecx [ r--data ]
mov [ esp + 0x430 ] eax
mov eax [ r--data ]
mov [ esp + 0x388 ] edx
mov [ esp + 0x38c ] ebp
mov [ esp + 0x3b0 ] 0xd
mov [ esp + 0x3d8 ] 0xe
mov [ esp + 0x400 ] esi
mov [ esp + 0x404 ] ebp
mov [ esp + 0x428 ] edx
mov [ esp + 0x42c ] ebp
mov [ esp + 0x434 ] ecx
mov [ esp + 0x438 ] eax
movzx eax [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x440 ] ax
xor eax eax
mov [ esp + 0x442 ] eax
mov [ esp + 0x446 ] eax
mov [ esp + 0x44a ] eax
mov [ esp + 0x44e ] ax
mov eax [ r--data ]
mov [ esp + 0x45c ] eax
mov eax [ r--data ]
mov [ esp + 0x43c ] ecx
mov ecx [ r--data ]
mov [ esp + 0x464 ] eax
xor eax eax
mov [ esp + 0x458 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x46c ] eax
mov [ esp + 0x470 ] eax
mov [ esp + 0x474 ] eax
mov eax [ r--data ]
mov [ esp + 0x460 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x480 ] eax
mov eax [ r--data ]
mov [ esp + 0x468 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x488 ] eax
mov eax [ r--data ]
mov [ esp + 0x484 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x490 ] eax
xor eax eax
mov [ esp + 0x48c ] ecx
mov ecx [ r--data ]
mov [ esp + 0x478 ] edx
mov [ esp + 0x494 ] eax
mov [ esp + 0x498 ] eax
mov [ esp + 0x49c ] eax
mov eax [ r--data ]
mov [ esp + 0x4a0 ] edx
mov edx [ r--data ]
mov [ esp + 0x4a8 ] ecx
mov ecx [ r--data ]
mov [ esp + 0x4ac ] edx
mov edx [ r--data ]
mov [ esp + 0x4b0 ] eax
xor eax eax
mov [ esp + 0x4b4 ] ecx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x450 ] esi
mov [ esp + 0x454 ] ebp
mov [ esp + 0x47c ] ebp
mov [ esp + 0x4a4 ] ebp
mov [ esp + 0x4b8 ] edx
mov [ esp + 0x4bc ] eax
mov [ esp + 0x4c0 ] eax
mov [ esp + 0x4c4 ] eax
mov [ esp + 0x4c8 ] 0xf
mov [ esp + 0x4cc ] ebp
mov [ esp + 0x4d0 ] ax
mov [ esp + 0x4d2 ] eax
mov [ esp + 0x4d6 ] eax
mov [ esp + 0x4da ] eax
mov [ esp + 0x4de ] eax
mov [ esp + 0x4e2 ] eax
mov [ esp + 0x4e6 ] eax
mov [ esp + 0x4ea ] eax
mov [ esp + 0x4ee ] ax
mov [ esp + 0x4f0 ] edi
mov [ esp + 0x4f4 ] edi
call sub_40c060
mov [ ebx + 0xc ] edi
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x8 ] ebp
jmp r-xdata
mov esi [ esp + 0x500 ]
call sub_401be0
cmp [ eax ] 0x0
je r-xdata
lea ecx [ esp + 0x10 ]
test edi edi
je r-xdata
call sub_401be0
cmp [ eax ] 0x3b
je r-xdata
call sub_402620
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4ec
retn 0x8
mov esi [ esp + 0x500 ]
push edi
push 0x0
push esi
push ecx
call sub_4608ce
call sub_401be0
cmp [ eax ] 0x3b
lea eax [ edi + 0x1 ]
je r-xdata
inc edi
jmp r-xdata
xor edi edi
call sub_40c740
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax edi
mov [ ebx + 0xc ] 0x0
lea edi [ eax - 0x1 ]
lea esi [ esp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x2a
jne r-xdata
lea ecx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
push edx
push edi
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
call sub_40c740
jmp r-xdata
lea eax [ esi + esi * 4 ]
add eax eax
add eax eax
add eax eax
cmp [ ebx + 0xc ] 0x1
mov ecx [ esp + eax + 0x40 ]
mov [ ebx + 0x8 ] ecx
jne r-xdata
inc esi
add edi 0x28
test esi esi
jge r-xdata
xor esi esi
lea edi [ esp + 0x20 ]
mov edx [ esp + eax + 0x44 ]
mov [ ebx + 0x10 ] edx
mov [ ebx + 0x10 ] ebp
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4ec
retn 0x8
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x4ec
retn 0x8
test esi esi
jge r-xdata
sub_463c42
sub esp 0x18
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x24 ]
push edi
push esi
mov [ ebp + 0x4 ] 0x0
call sub_45335b
push 0xffffffff
push 0xffffffff
push 0xffffffff
push 0x1
push 0x1
push r--data
push esi
call sub_442c52
mov edi eax
test edi edi
jbe r-xdata
mov [ ebp + 0x10 ] 0x1
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0xc ]
inc [ eax ]
mov [ esp + 0x1c ] eax
lea eax [ ebp + 0x18 ]
mov [ esp + 0x14 ] ecx
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x20 ] edx
call sub_462f5a
test al al
jne r-xdata
cmp edi [ esi + 0x4 ]
jae r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
mov al 0x1
pop ebp
add esp 0x18
retn 0x8
push r--data
push esi
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c060
mov eax [ esi + 0x4 ]
sub eax edi
dec eax
push eax
lea ecx [ edi + 0x1 ]
push ecx
push esi
lea edx [ esp + 0x1c ]
push edx
call sub_4608ce
or eax 0xffffffff
call sub_40c740
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
xor al al
pop edi
pop esi
pop ebp
add esp 0x18
retn 0x8
mov [ ebp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
jne r-xdata
mov [ ebp + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x4 ] 0x0
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
sub_463d7e
sub esp 0x20
push ebx
mov ebx [ esp + 0x28 ]
push ebp
push esi
push edi
mov edi [ esp + 0x3c ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x10 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x14 ] edx
mov edx [ edi + 0x4 ]
mov esi [ edx ]
push esi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x40 ] 0x0
call sub_443e34
test al al
je r-xdata
mov ecx esi
call sub_40c760
test eax eax
jle r-xdata
push esi
call sub_453081
push eax
call [ LoadLibraryW@IAT ]
mov ebp eax
mov [ esp + 0x3c ] 0x1
jmp r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov esi [ ebx + 0x190 ]
call sub_40c760
cmp eax esi
jg r-xdata
test ebp ebp
jne r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
mov edx [ ebx + 0x18c ]
dec eax
mov eax [ edx + eax * 4 ]
mov ebp [ eax ]
mov edx [ edi + 0x4 ]
mov esi [ edx + 0x8 ]
push esi
call sub_443e34
test al al
je r-xdata
mov ecx esi
call sub_40c760
push eax
push ebp
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov edx [ esp + 0x38 ]
mov [ edx ] eax
lea esi [ esp + 0x20 ]
call sub_40d500
push esi
lea ecx [ esp + 0x14 ]
push ecx
call sub_45efe7
mov edx [ esp + 0x20 ]
push edx
push ebp
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov ecx [ esp + 0x38 ]
mov [ ecx ] eax
call sub_401330
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x20
retn 0xc
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_443e34
test al al
je r-xdata
mov eax [ esp + 0x38 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ esp + 0x38 ]
cmp [ edx ] 0x0
jne r-xdata
push 0x41
lea eax [ esp + 0x14 ]
call sub_403470
lea esi [ esp + 0x20 ]
call sub_40d500
push esi
lea ecx [ esp + 0x14 ]
push ecx
call sub_45efe7
mov edx [ esp + 0x20 ]
push edx
push ebp
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov ecx [ esp + 0x38 ]
mov [ ecx ] eax
call sub_401330
cmp [ esp + 0x3c ] 0x0
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x3
jmp r-xdata
push ebp
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
add eax ebx
call sub_4040e0
lea ecx [ esp + 0x10 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn 0xc
sub_463f19
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xac
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
push 0x44
xor edi edi
lea eax [ esp + 0x74 ]
push edi
push eax
call sub_4131f0
xor eax eax
add esp 0xc
mov ecx 0x1
xor ebx ebx
mov [ esp + 0x70 ] 0x44
mov [ esp + 0x9c ] 0x1
mov [ esp + 0xa0 ] cx
mov [ esp + 0x2c ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
cmp [ ebp + 0x10 ] al
je r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
cmp [ esi + 0x8 ] 0x7
mov [ esp + 0x28 ] eax
jbe r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov edi eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
and edi 0xffff0000
call sub_40c760
and eax 0xffff
mov [ esp + 0x24 ] eax
cmp [ esi + 0x8 ] 0x6
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x1c ]
mov edi eax
and edi 0xffff0000
call sub_40c760
and eax 0xffff
mov [ esp + 0x24 ] eax
test edi 0x10000
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x18 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
cmp [ ebp + 0x10 ] bl
je r-xdata
mov [ esp + 0x20 ] 0x10
call sub_40c760
mov [ esp + 0xa0 ] ax
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x1c ] eax
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov edx [ esi + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ edx + 0x8 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
cmp [ esi + 0x8 ] 0x5
mov [ esp + 0x1c ] eax
jbe r-xdata
mov edi [ __import_lookup_table_0(KERNEL32:GetCurrentDirectoryW) ]
push 0x0
push 0x0
call edi
mov esi eax
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push eax
push esi
mov [ esp + 0x20 ] eax
call edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov esi eax
test esi esi
je r-xdata
mov ebx [ GetSystemDirectoryW@IAT ]
push 0x0
push 0x0
call ebx
mov edi eax
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
push edi
push eax
mov [ esp + 0x20 ] eax
call ebx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x14 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov esi [ esp + 0x18 ]
push esi
call sub_4112d5
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + 0x12 ] 0x0
jmp r-xdata
lea ecx [ esp + 0x48 ]
push ecx
mov [ esp + 0x16 ] 0x1
call sub_443b47
mov [ esp + 0xac ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_4112d5
add esp 0x4
test eax eax
jne r-xdata
mov edi [ esp + 0x24 ]
push edi
lea eax [ esp + 0x4c ]
push eax
call sub_43574b
test edi edi
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea edx [ esp + 0x48 ]
push edx
call sub_443b14
mov [ esp + 0xb0 ] eax
cmp eax 0xffffffff
jne r-xdata
mov [ esp + 0x12 ] 0x0
mov eax [ esi + 0x4 ]
mov ebx [ eax ]
mov edi r--data
call sub_40e6d0
mov ecx [ esi + 0x4 ]
mov ebx [ ecx + 0x4 ]
call sub_40e6d0
mov edx [ esi + 0x4 ]
mov ebx [ edx + 0x8 ]
call sub_40e6d0
mov ebx [ esp + 0x30 ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x38 ]
push eax
movzx eax [ esp + 0x16 ]
lea ecx [ esp + 0x74 ]
push ecx
mov ecx [ esp + 0x24 ]
push esi
push 0x0
push edx
push eax
push 0x0
push 0x0
push ecx
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
setne bl
mov eax [ esp + 0x20 ]
mov edi [ esp + 0x2c ]
lea ecx [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x30 ]
push esi
push eax
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
push edi
push ebx
call sub_4464dc
push ebx
mov [ esp + 0x17 ] al
call sub_4112d5
add esp 0x4
mov ecx ebx
test eax eax
je r-xdata
lea eax [ esp + 0x48 ]
push eax
call sub_443aff
mov [ esp + 0xa8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov [ esp + 0x12 ] 0x0
mov eax [ esp + 0x3c ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
cmp [ esp + 0x12 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
push 0x0
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
mov esi [ ebp + 0x18 ]
call sub_4092c0
lea edx [ esp + 0x48 ]
push edx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_44b87e
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push edi
call sub_4112d5
add esp 0x4
mov ecx edi
test eax eax
je r-xdata
mov [ ecx ] 0x0
inc ecx
sub eax 0x1
jne r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea ecx [ esp + 0x48 ]
push ecx
call sub_443a7f
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x48 ]
push eax
mov [ esp + 0x50 ] edx
call sub_44b7ca
mov edx [ ebp + 0x8 ]
lea ecx [ esp + 0x48 ]
push ecx
add edx 0x468
push edx
call sub_44a4e6
mov ecx [ esp + 0x14 ]
push ecx
call sub_4112d5
mov ecx [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
lea esp [ esp ]
or [ esp + 0x9c ] 0x100
mov edx [ esp + 0x40 ]
fild [ esp + 0x40 ]
test edx edx
jge r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x450 ] eax
lea ecx [ esp + 0x48 ]
push ecx
call sub_44b87e
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push ebx
call sub_4112ef
add esp 0x4
push edi
call sub_4112ef
mov edx [ esp + 0x18 ]
add esp 0x4
push edx
call sub_4112ef
mov bl [ esp + 0x17 ]
add esp 0x4
jmp r-xdata
mov edi edi
mov [ ecx ] 0x0
inc ecx
sub eax 0x1
jne r-xdata
mov esi [ ebp + 0x18 ]
fstp [ esp + 0x30 ]
call sub_4092c0
fld [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
fstp [ esi ]
push eax
mov [ esi + 0x8 ] 0x3
call edi
lea ecx [ esp + 0x48 ]
push ecx
call sub_44b87e
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
fadd [ r--data ]
mov edx [ esp + 0x1c ]
push edx
call sub_4112ef
add esp 0x4
push esi
call sub_4112ef
add esp 0x4
test bl bl
jne r-xdata
mov [ ecx ] 0x0
inc ecx
sub eax 0x1
jne r-xdata
sub_464422
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x13 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
mov [ esp + 0x1f ] 0x0
call sub_453081
push eax
call sub_444233
add esp 0xc
test al al
jne r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push ebx
call [ __import_lookup_table_0(KERNEL32:TerminateProcess) ]
test eax eax
jne r-xdata
mov ebx [ __import_lookup_table_0(KERNEL32:GetLastError) ]
call ebx
cmp eax 0x5
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_404120
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x3
add eax edi
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
push 0x0
push eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
call sub_404120
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push 0x28
call [ __import_lookup_table_0(KERNEL32:GetCurrentThread) ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
add eax edi
call sub_4040e0
lea eax [ esp + 0x24 ]
push eax
push r--data
push 0x0
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x38 ] 0x2
call [ LookupPrivilegeValueW@IAT ]
mov esi [ __import_lookup_table_1(ADVAPI32:AdjustTokenPrivileges) ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x34 ]
push edx
push 0x10
lea eax [ esp + 0x2c ]
push eax
push 0x0
push ecx
mov [ esp + 0x34 ] 0x10
call esi
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
push edx
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ __import_lookup_table_1(ADVAPI32:OpenProcessToken) ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call ebx
test eax eax
jne r-xdata
push 0xffffffff
push 0x89
push edi
call sub_45e62e
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_404120
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
mov edx [ esp + 0x18 ]
push edx
push eax
push 0x1
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
mov ebx eax
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push 0x0
push edx
call esi
mov eax [ esp + 0x14 ]
push eax
call [ CloseHandle@IAT ]
test ebx ebx
je r-xdata
sub_464653
mov eax [ esp + 0xc ]
inc [ eax ]
mov edx [ esp + 0x8 ]
mov eax [ eax ]
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
mov ecx [ esp + 0x4 ]
push ebx
push edi
je r-xdata
lea ebx [ ecx + 0x488 ]
mov edi r--data
call sub_40e6d0
pop edi
pop ebx
retn 0xc
movsx eax [ eax + 0xa ]
pop edi
pop ebx
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] ecx
jmp sub_45e62e
sub_4646a2
push esi
push edi
mov edi [ esp + 0x10 ]
sub esp 0x10
mov esi esp
call sub_401b70
mov eax [ esp + 0x1c ]
add eax 0x134
call sub_40f1a0
test eax eax
jne r-xdata
mov ecx [ eax + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ edx ] ecx
mov ecx [ eax + 0x18 ]
mov edx [ esp + 0x1c ]
mov [ edx ] ecx
mov ecx [ eax + 0x10 ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x1c ]
mov [ edx ] ecx
mov ecx [ esp + 0x20 ]
pop edi
mov [ ecx ] eax
mov al 0x1
pop esi
retn 0x18
xor al al
pop edi
pop esi
retn 0x18
sub_4646f6
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
cmp esi eax
jbe r-xdata
mov ecx edi
call sub_40c060
push esi
push 0x0
push ebx
push edi
call sub_4608ce
mov eax edi
pop edi
pop esi
pop ebx
retn 0xc
mov esi eax
sub_464727
push ebp
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
push 0x0
push 0x0
inc edi
push edi
push eax
push 0x1
push 0x0
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov ebp eax
test ebp ebp
jne r-xdata
xor ecx ecx
mov edx 0x2
mul edx
seto cl
push ebx
neg ecx
or ecx eax
push ecx
call sub_41171a
mov esi [ esi ]
add esp 0x4
push ebp
mov ebx eax
push ebx
push edi
push esi
push 0x1
push 0x0
call [ __import_lookup_table_0(KERNEL32:MultiByteToWideChar) ]
mov ecx [ esp + 0x18 ]
push 0x0
dec eax
push ebx
call sub_403fb0
push ebx
call sub_4112ef
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
mov esi [ esp + 0x14 ]
call sub_403770
pop edi
pop esi
pop ebp
retn 0x8
sub_4647a2
sub esp 0x10
push ebx
mov ebx [ esp + 0x1c ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
lea ecx [ esp + 0x10 ]
push ecx
mov eax 0x2
push ebp
mov [ ebx ] ax
call sub_45a407
mov eax [ eax ]
push eax
call Ordinal_WSOCK32_10
lea esi [ esp + 0x10 ]
mov edi eax
call sub_401330
cmp edi 0xffffffff
jne r-xdata
mov eax [ esp + 0x30 ]
lea ecx [ eax - 0x1 ]
mov [ ebx + 0x4 ] edi
cmp ecx 0xfffe
ja r-xdata
push r--data
push ebp
call sub_44cd47
add esp 0x8
test al al
je r-xdata
push 0x0
push 0x2
jmp r-xdata
push eax
call Ordinal_WSOCK32_9
pop edi
pop esi
mov [ ebx + 0x2 ] ax
pop ebp
mov al 0x1
pop ebx
add esp 0x10
retn 0x10
push 0x0
push 0x1
mov ecx [ esp + 0x2c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
call sub_4040e0
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x10
retn 0x10
sub_46483c
sub esp 0x10
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
cmp [ edi + 0x8 ] 0x2
mov esi ecx
mov ebx 0x5
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edi [ eax ]
call sub_40c760
push eax
push edi
call sub_453063
push eax
lea ecx [ esp + 0x14 ]
push ecx
push esi
call sub_4647a2
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov ebx eax
push ebp
push 0x6
mov ebp 0x1
push ebp
push 0x2
call Ordinal_WSOCK32_23
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push 0x10
lea eax [ esp + 0x14 ]
push eax
push edi
call Ordinal_WSOCK32_2
cmp eax 0xffffffff
jne r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
jmp r-xdata
push ebx
push edi
call Ordinal_WSOCK32_13
test eax eax
jne r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov esi [ esp + 0x28 ]
call sub_4092c0
mov [ esi + 0x8 ] ebp
pop ebp
pop edi
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push 0x0
call Ordinal_WSOCK32_111
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
mov esi [ esp + 0x28 ]
call sub_4092c0
mov [ esi + 0x8 ] ebp
pop ebp
mov [ esi ] edi
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
add eax esi
call sub_4040e0
push edi
call Ordinal_WSOCK32_3
sub_464950
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c760
push eax
push edi
call sub_453063
push eax
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_4647a2
test al al
je r-xdata
mov esi [ esp + 0x20 ]
call sub_4092c0
pop edi
mov [ esi ] 0xffffffff
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x10
retn 0x8
push 0x6
push 0x1
push 0x2
call Ordinal_WSOCK32_23
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ esp + 0xc ]
push eax
push edi
call Ordinal_WSOCK32_4
test eax eax
jne r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
push 0x0
call Ordinal_WSOCK32_111
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
push edi
call Ordinal_WSOCK32_3
jmp r-xdata
mov esi [ esp + 0x20 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_464a0e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x21c
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x3c ] 0xfa0
call sub_4092c0
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x0
cmp [ esp + 0x14 ] eax
jbe r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call sub_434489
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
test eax eax
jle r-xdata
lea eax [ esp + 0x98 ]
push eax
push 0x101
call Ordinal_WSOCK32_115
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov [ esp + 0x3c ] eax
lea esi [ esp + 0x44 ]
call sub_40d500
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
push esi
push eax
call sub_45efe7
mov esi [ esp + 0x44 ]
push esi
call Ordinal_WSOCK32_10
push esi
mov [ esp + 0x44 ] eax
call Ordinal_WSOCK32_52
mov [ esp + 0x54 ] eax
test eax eax
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
lea esi [ esp + 0x44 ]
call sub_401330
jmp r-xdata
lea eax [ esp + 0x24 ]
push eax
call sub_434489
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_4344a0
lea eax [ esp + 0x30 ]
push eax
call sub_4344a0
lea ecx [ esp + 0x24 ]
push ecx
call sub_4344a0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x18 ]
push eax
call sub_4344a0
lea ecx [ esp + 0x30 ]
push ecx
call sub_4344a0
lea edx [ esp + 0x24 ]
push edx
call sub_4344a0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
lea esi [ esp + 0x44 ]
call sub_401330
lea ecx [ esp + 0x30 ]
push ecx
call sub_434472
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_43445b
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
call sub_442542
call eax
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x24
lea edx [ esp + 0x5c ]
push 0xffffffaa
push edx
call sub_4131f0
add esp 0xc
push 0x40
push 0x40
call [ __import_lookup_table_0(KERNEL32:GlobalAlloc) ]
mov esi eax
mov [ esp + 0x14 ] esi
test esi esi
jne r-xdata
lea eax [ esp + 0x58 ]
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x40 ]
mov ecx 0x24
mov [ esi + 0xc ] cx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_442523
call eax
mov ecx [ esp + 0x3c ]
push ecx
push 0x40
push esi
push 0x0
push 0x24
lea edx [ esp + 0x6c ]
push edx
push eax
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
mov edx [ esp + 0x3c ]
push edx
push 0x40
push esi
push 0x0
push ecx
mov ecx [ esp + 0x68 ]
mov edx [ ecx + 0xc ]
lea eax [ esp + 0x6c ]
push eax
mov eax [ edx ]
mov ecx [ eax ]
mov edx [ esp + 0x28 ]
push ecx
push edx
lea eax [ esp + 0x38 ]
push eax
jmp r-xdata
add eax 0xffffd506
cmp eax 0x10
ja r-xdata
mov edi [ esp + 0x84 ]
mov esi ebx
call sub_4092c0
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] 0x1
test edi edi
jne r-xdata
call sub_442504
call eax
push 0x1c
lea edx [ esp + 0x80 ]
push esi
push edx
call sub_410f70
mov eax [ esp + 0x8c ]
add esp 0xc
test eax eax
jne r-xdata
push 0x0
push 0x4
movzx eax [ eax + lookup_table_464d6e ]
jmp [ eax * 4 + jump_table_464d5e ]
mov [ ebx ] edi
jmp r-xdata
mov [ ebx ] 0x1
jmp r-xdata
push 0x0
push 0x2
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x3
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x34 ]
push eax
call sub_442523
call eax
push esi
call [ __import_lookup_table_0(KERNEL32:GlobalFree) ]
call Ordinal_WSOCK32_116
lea esi [ esp + 0x44 ]
call sub_401330
lea ecx [ esp + 0x18 ]
push ecx
call sub_4344a0
lea edx [ esp + 0x30 ]
push edx
call sub_4344a0
lea eax [ esp + 0x24 ]
push eax
call sub_4344a0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
add eax edi
call sub_4040e0
sub_464d72
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add dl [ ebp - 0x75 ]
in al dx
and esp 0xfffffff8
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
jmp r-xdata
push eax
call sub_453081
push eax
call sub_45eeff
add esp 0x8
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_464dc8
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
mov eax [ esi + 0x4 ]
push edi
mov edi ecx
jne r-xdata
mov eax [ eax ]
push 0x0
mov ecx [ eax + 0x4 ]
call sub_40c760
push 0x0
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_453063
push eax
add edi 0x88
push edi
call sub_453eb2
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
jmp r-xdata
push eax
call sub_453063
push eax
add edi 0x88
push edi
call sub_45fdc2
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_464e36
sub esp 0xc
push ebx
mov ebx [ esp + 0x14 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
mov esi ecx
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_453081
push eax
push esi
call sub_4646a2
test al al
jne r-xdata
mov eax [ esi + 0x128 ]
lea edi [ esi + 0x128 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov esi [ esp + 0x20 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x8
push ecx
lea ecx [ esp + 0x20 ]
mov [ esp ] 0x0
push ecx
call sub_442fdf
test al al
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
mov ecx [ esp + 0x1c ]
mov esi [ ecx ]
push eax
call sub_453063
call sub_40dd00
test al al
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push edi
call sub_451e63
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn 0x8
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x20 ]
push eax
call sub_440eac
jmp r-xdata
sub_464efd
sub esp 0x1c
push ebx
push esi
mov esi [ esp + 0x28 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
mov edi ecx
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea ebx [ edi + 0x128 ]
mov [ esp + 0x1c ] edx
mov edx [ ebx ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] edx
jmp r-xdata
mov esi [ esp + 0x30 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x1c
retn 0x8
push ecx
lea eax [ esp + 0x30 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push ebx
call sub_44aea6
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x1c
retn 0x8
mov ecx [ esp + 0x2c ]
mov esi [ ecx ]
lea eax [ esp + 0x18 ]
call sub_40dd00
test al al
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_404120
lea ecx [ esp + 0x18 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x30 ]
push eax
call sub_440eac
jmp r-xdata
sub_46500a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1bc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ edx ]
push edi
push eax
mov [ esp + 0x20 ] ecx
call sub_453081
mov edi r--data
lea ebx [ esp + 0x30 ]
mov [ esp + 0x20 ] eax
call sub_40d420
mov ebx [ ebp + 0xc ]
mov esi ebx
call sub_4092c0
mov edi [ esp + 0x2c ]
lea esi [ edi + 0x10c ]
mov [ esp + 0xb0 ] esi
lea esi [ edi + 0x110 ]
mov [ esp + 0xbc ] esi
lea esi [ edi + 0x114 ]
mov [ esp + 0xc8 ] esi
mov ecx r--data
lea edx [ edi + 0xfd ]
lea esi [ edi + 0x100 ]
mov [ esp + 0x50 ] edx
mov [ esp + 0xd4 ] esi
lea eax [ edi + 0x108 ]
lea edx [ edi + 0xfe ]
lea esi [ edi + 0xff ]
mov [ esp + 0x44 ] eax
mov eax r--data
mov [ esp + 0x48 ] ecx
mov [ esp + 0x5c ] edx
mov [ esp + 0x78 ] ecx
mov [ esp + 0xd8 ] ecx
mov [ esp + 0xe0 ] esi
mov [ esp + 0xf0 ] ecx
mov edx r--data
lea esi [ edi + 0x104 ]
lea ecx [ edi + 0x91 ]
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov [ esp + 0x40 ] r--data
mov [ esp + 0x4c ] r--data
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] r--data
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] rw-data
mov [ esp + 0x6c ] edx
mov [ esp + 0x70 ] r--data
mov [ esp + 0x74 ] rw-data
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] rw-data
mov [ esp + 0x84 ] r--data
mov [ esp + 0x88 ] r--data
mov [ esp + 0x8c ] rw-data
mov [ esp + 0x90 ] r--data
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] rw-data
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] r--data
mov [ esp + 0xa4 ] rw-data
mov [ esp + 0xa8 ] r--data
mov [ esp + 0xac ] r--data
mov [ esp + 0xb4 ] r--data
mov [ esp + 0xb8 ] r--data
mov [ esp + 0xc0 ] r--data
mov [ esp + 0xc4 ] r--data
mov [ esp + 0xcc ] r--data
mov [ esp + 0xd0 ] r--data
mov [ esp + 0xdc ] r--data
mov [ esp + 0xe4 ] eax
mov [ esp + 0xe8 ] r--data
mov [ esp + 0xec ] esi
mov [ esp + 0xf4 ] r--data
mov [ esp + 0xf8 ] ecx
lea ecx [ edi + 0x90 ]
mov [ esp + 0x104 ] ecx
lea ecx [ edi + 0x88 ]
mov [ esp + 0x110 ] ecx
mov [ esp + 0x108 ] edx
mov [ esp + 0x144 ] edx
mov ecx r--data
mov [ esp + 0x114 ] ecx
mov [ esp + 0x120 ] ecx
lea edx [ edi + 0x2dc ]
mov [ esp + 0x17c ] edx
lea ecx [ edi + 0x118 ]
mov [ esp + 0x128 ] ecx
lea edx [ edi + 0x2dd ]
mov [ esp + 0xfc ] eax
lea esi [ edi + 0x8c ]
mov [ esp + 0x12c ] eax
lea ecx [ edi + 0x478 ]
mov [ esp + 0x150 ] eax
mov [ esp + 0x174 ] eax
mov [ esp + 0x180 ] eax
mov [ esp + 0x188 ] edx
mov edx [ ebp + 0x8 ]
mov [ esp + 0x18c ] eax
mov [ esp + 0x134 ] ecx
xor ecx ecx
lea eax [ edi + 0x2d8 ]
mov [ esp + 0x11c ] esi
mov esi [ edx + 0x4 ]
mov [ esp + 0x194 ] eax
mov eax [ esi ]
mov [ esp + 0x158 ] ecx
mov [ esp + 0x164 ] ecx
mov [ esp + 0x1a0 ] ecx
lea ecx [ edi + 0x2f4 ]
push eax
mov [ esp + 0x104 ] r--data
mov [ esp + 0x110 ] r--data
mov [ esp + 0x11c ] r--data
mov [ esp + 0x128 ] r--data
mov [ esp + 0x134 ] r--data
mov [ esp + 0x13c ] r--data
mov [ esp + 0x140 ] r--data
mov [ esp + 0x144 ] rw-data
mov [ esp + 0x14c ] r--data
mov [ esp + 0x150 ] rw-data
mov [ esp + 0x158 ] r--data
mov [ esp + 0x160 ] r--data
mov [ esp + 0x164 ] r--data
mov [ esp + 0x16c ] r--data
mov [ esp + 0x170 ] r--data
mov [ esp + 0x174 ] rw-data
mov [ esp + 0x17c ] r--data
mov [ esp + 0x188 ] r--data
mov [ esp + 0x194 ] r--data
mov [ esp + 0x19c ] r--data
mov [ esp + 0x1a0 ] r--data
mov [ esp + 0x1a8 ] r--data
mov [ esp + 0x1ac ] r--data
mov [ esp + 0x1b0 ] ecx
mov [ esp + 0x1b4 ] r--data
call sub_443e34
test al al
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov edx [ esp + 0x20 ]
cmp [ edx ] 0x2a
jne r-xdata
cmp [ esp + 0x1c ] 0x1
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov esi [ esi + 0x4 ]
push esi
call sub_44adff
test al al
je r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
push 0x0
push 0x1
add eax edi
call sub_4040e0
mov ecx esi
call sub_40c760
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x24 ] 0x1e
xor ecx ecx
cmp eax ecx
jle r-xdata
dec esi
mov [ esp + 0x24 ] esi
jmp r-xdata
mov edx [ esp + 0x24 ]
cmp [ esp + 0x18 ] edx
jg r-xdata
inc esi
mov [ esp + 0x18 ] esi
mov eax [ esp + 0x24 ]
cmp [ esp + 0x18 ] eax
jle r-xdata
lea esi [ esi + esi * 2 ]
add esi esi
add esi esi
mov [ esp + 0x14 ] ecx
mov ecx [ esp + esi + 0x48 ]
movzx eax [ ecx ]
mov [ esp + 0xc ] esi
mov [ esp + 0x20 ] ecx
cmp ax 0x64
jne r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x18 ]
lea esi [ ecx + edx ]
mov edx [ esp + 0x20 ]
sar esi 0x1
lea eax [ esi + esi * 2 ]
mov ecx [ esp + eax * 4 + 0x40 ]
push ecx
push edx
call sub_4115d0
add esp 0x8
test eax eax
jge r-xdata
cmp ax 0x44
jne r-xdata
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push edx
mov [ esp + 0x20 ] 0x1
call sub_435f45
add esp 0xc
lea esi [ esp + 0x30 ]
call sub_4092c0
mov eax [ esp + 0x18 ]
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x30 ] eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
movzx eax [ edx + ecx * 2 ]
inc ecx
sub eax 0x23
mov [ esp + 0x14 ] ecx
cmp eax 0x53
ja r-xdata
push ecx
call sub_4112d5
add esp 0x4
lea ecx [ esp + 0x1b8 ]
call sub_401400
mov edi [ esp + 0x20 ]
movzx eax [ edi + 0x4 ]
mov esi 0x2
test ax ax
je r-xdata
mov esi [ esp + 0xc ]
movzx ecx [ eax + lookup_table_465b0a ]
jmp [ ecx * 4 + jump_table_465ae6 ]
mov edi [ esp + 0x1b8 ]
inc esi
lea ebx [ esp + 0x30 ]
mov [ esp + 0x14 ] esi
call sub_40e6d0
lea ecx [ esp + 0x1b8 ]
call sub_402620
mov edi [ esp + 0x2c ]
mov ebx [ ebp + 0xc ]
movzx eax ax
lea ebx [ ebx ]
mov edx [ esp + 0xc ]
mov eax [ esp + edx + 0x44 ]
mov [ esp + 0xc ] eax
mov eax [ eax ]
mov esi ebx
mov [ esp + 0x24 ] eax
call sub_4092c0
mov ecx [ esp + 0x24 ]
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] ecx
cmp [ esp + 0x1c ] eax
jbe r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + edx + 0x44 ]
mov [ esp + 0xc ] eax
mov eax [ eax ]
mov esi ebx
mov [ esp + 0x24 ] eax
call sub_4092c0
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
mov [ ebx ] ecx
mov ecx [ esp + 0x24 ]
push eax
mov esi 0x1
push ecx
mov [ ebx + 0x8 ] esi
call sub_435f45
add esp 0xc
cmp [ esp + 0x1c ] esi
jbe r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + edx + 0x44 ]
mov [ esp + 0xc ] eax
mov eax [ eax ]
mov esi ebx
mov [ esp + 0x28 ] eax
call sub_4092c0
mov ecx [ esp + 0x28 ]
mov esi [ esp + 0x20 ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push esi
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] ecx
call sub_435f45
inc [ esp + 0x20 ]
add esp 0xc
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push esi
call sub_435f45
add esp 0xc
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + edx + 0x44 ]
mov [ esp + 0xc ] eax
movzx eax [ eax ]
mov esi ebx
mov [ esp + 0x28 ] eax
call sub_4092c0
mov ecx [ esp + 0x28 ]
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] ecx
cmp [ esp + 0x1c ] eax
jbe r-xdata
mov esi [ esp + esi + 0x44 ]
mov edi esi
call sub_40e6d0
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov esi [ esp + esi + 0x44 ]
mov edi [ esi ]
call sub_40e6d0
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
lea ecx [ edx + eax * 2 ]
movzx eax [ ecx ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push edx
call sub_435f45
mov eax [ esp + 0x24 ]
add esp 0xc
sub eax 0x1
je r-xdata
push eax
lea eax [ esp + 0x1bc ]
call sub_403470
movzx eax [ edi + esi * 2 + 0x2 ]
inc esi
test ax ax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44adff
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44adff
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_44adff
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44adff
test al al
je r-xdata
mov edi [ esp + 0x2c ]
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov edi [ eax + 0x4 ]
push edi
call sub_44adff
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov edi [ eax + 0x4 ]
push edi
call sub_44adff
test al al
je r-xdata
lea esi [ esp + 0x30 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x2a
jne r-xdata
xor edx edx
cmp [ rw-data ] dl
mov esi ebx
sete dl
mov [ esp + 0x28 ] edx
call sub_4092c0
mov ecx [ esp + 0x28 ]
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] ecx
cmp [ esp + 0x1c ] eax
jbe r-xdata
sub eax 0x1
je r-xdata
cmp ax 0x27
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov edx [ esp + 0xc ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x18 ]
jl r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov edx [ esp + 0xc ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x18 ]
jl r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov ecx [ esp + 0xc ]
setne al
mov [ ecx ] al
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov edx [ esp + 0xc ]
test eax eax
setne al
mov [ edx ] al
jmp r-xdata
push edi
call sub_453081
mov cx [ eax ]
mov [ esi ] cx
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov [ esi ] ax
jmp r-xdata
push edi
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44adff
test al al
je r-xdata
mov ecx [ rw-data ]
mov esi ebx
mov [ esp + 0x28 ] ecx
call sub_4092c0
mov edx [ esp + 0x28 ]
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] edx
cmp [ esp + 0x1c ] eax
jbe r-xdata
sub eax 0x1
jne r-xdata
lea edx [ esp + 0x30 ]
push edx
call sub_453333
test al al
je r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ esp + 0x30 ]
push eax
call sub_453333
test al al
je r-xdata
cmp eax [ esp + 0x24 ]
jg r-xdata
call sub_453081
push eax
mov eax esi
call sub_4021e0
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
push esi
call sub_44adff
test al al
jne r-xdata
mov edx [ edi + 0x2d4 ]
mov esi ebx
mov [ esp + 0x28 ] edx
call sub_4092c0
mov ecx [ esp + 0x28 ]
mov eax 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx ] ecx
cmp [ esp + 0x1c ] eax
jbe r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ esp + 0xc ]
mov [ edx ] eax
jmp r-xdata
mov ecx rw-data
call sub_401000
jmp r-xdata
mov esi rw-data
call sub_40e1e0
jmp r-xdata
push esi
call sub_44adff
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_44adff
test al al
je r-xdata
mov al [ esp + 0x10 ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
test al 0x1
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x10 ]
push edx
call sub_413762
dec eax
add esp 0x4
cmp eax 0x3
ja r-xdata
lea ecx [ esp + 0x30 ]
call sub_40c760
mov [ esp + 0x10 ] eax
mov ecx 0x2
test cl al
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov eax [ esp + 0x10 ]
mov [ edi + 0x2d4 ] eax
jmp r-xdata
mov ecx 0x4
test cl al
je r-xdata
or [ rw-data ] ecx
mov [ rw-data ] 0x0
mov ecx 0x8
test cl al
je r-xdata
or [ rw-data ] ecx
mov [ rw-data ] 0x0
or [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
sub_465b13
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ ecx ] al
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add al [ ebx ]
or [ eax ] cl
or [ eax ] cl
or [ eax + ecx ] al
or [ eax ] cl
add eax 0x8080808
push es
or [ eax ] cl
or [ edi ] al
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
mov edi ecx
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
call sub_410a40
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
lea ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x10 ] 0xfa
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
test eax eax
jle r-xdata
push ecx
lea eax [ esp + 0x10 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
mov [ esp + 0x10 ] eax
jmp r-xdata
lea ecx [ esp + 0x2c ]
push ecx
call sub_44b3f6
lea edx [ esp + 0x1c ]
push edx
lea esi [ esp + 0x30 ]
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x41 ] 0x0
call sub_40df50
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] eax
call [ timeGetTime@IAT ]
push esi
push ebx
mov [ esp + 0x48 ] eax
call sub_44a65b
mov ecx esi
call sub_402620
lea ecx [ esp + 0x1c ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0xc ]
mov esi [ ebx ]
lea eax [ esp + 0x1c ]
call sub_40dd00
test al al
jne r-xdata
mov eax [ edi + 0x458 ]
lea ecx [ esp + 0x14 ]
lea ebx [ edi + 0x458 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] eax
call sub_434330
jmp r-xdata
mov edx [ esp + 0x10 ]
mov [ esi + 0x11 ] 0x0
mov ecx [ ebx ]
mov [ ecx + 0x18 ] edx
mov ebx [ ebx ]
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
call sub_440eac
mov ebx [ esp + 0x18 ]
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_404120
lea ecx [ esp + 0x1c ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ timeGetTime@IAT ]
mov [ ebx + 0x14 ] eax
sub_465d41
sub esp 0x54
push ebx
push ebp
push esi
mov esi [ esp + 0x64 ]
push edi
mov edi [ esp + 0x6c ]
push 0x38
lea eax [ esp + 0x2c ]
push 0x0
push eax
call sub_4131f0
add esp 0xc
lea ecx [ esp + 0x24 ]
mov ebx 0x1
push ecx
push 0x0
push esi
mov [ esp + 0x30 ] 0x7c
mov [ esp + 0x50 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x58 ] ebx
call sub_4112d5
add esp 0x4
push eax
push esi
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
push 0x0
push edx
mov ecx edi
call sub_403fb0
mov eax [ esp + 0x34 ]
push 0x0
push eax
mov eax [ esp + 0x40 ]
lea ecx [ edi + 0x10 ]
call sub_403fb0
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x44 ]
push 0x0
push ecx
lea ecx [ edi + 0x20 ]
call sub_403fb0
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x4c ]
push 0x0
push edx
lea ecx [ edi + 0x30 ]
call sub_403fb0
mov eax [ esp + 0x50 ]
push 0x0
lea esi [ edi + 0x40 ]
push eax
mov eax [ esp + 0x5c ]
mov ecx esi
call sub_403fb0
mov ecx [ esp + 0x58 ]
mov eax [ esp + 0x5c ]
push 0x0
lea ebp [ edi + 0x50 ]
push ecx
mov ecx ebp
call sub_403fb0
push ebp
lea edx [ esp + 0x18 ]
push edx
push esi
call sub_44cd63
push eax
lea esi [ edi + 0x60 ]
call sub_40df50
lea ecx [ esp + 0x14 ]
call sub_402620
mov ax [ esp + 0x3c ]
mov [ edi + 0x78 ] ax
mov eax [ esp + 0x30 ]
mov [ edi + 0x74 ] eax
sub eax ebx
je r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov [ edi + 0x70 ] ebx
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0x54
retn 0x8
sub eax ebx
je r-xdata
mov [ edi + 0x70 ] 0x2
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
mov [ edi + 0x70 ] 0x3
mov al bl
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
sub_465e8e
sub esp 0x80
push ebx
mov ebx [ esp + 0x8c ]
push esi
mov esi [ esp + 0x8c ]
push edi
lea eax [ esp + 0xc ]
push eax
call sub_44abeb
mov eax [ esi + 0x20 ]
lea ecx [ esp + 0xc ]
push ecx
push eax
call sub_465d41
test al al
jne r-xdata
mov edi [ esp + 0x7c ]
cmp edi 0x3
je r-xdata
push 0x0
push 0xdeadbeef
push 0x1
push esi
call sub_44286a
lea edx [ esp + 0xc ]
push edx
jmp r-xdata
push edi
push esi
call sub_442afe
test al al
jne r-xdata
cmp edi 0x1
je r-xdata
mov bl al
call sub_442ba2
pop edi
pop esi
mov al bl
pop ebx
add esp 0x80
retn 0x8
sub edi 0x1
je r-xdata
push 0x0
push 0xdeadbeef
push 0x3
push esi
call sub_44286a
jmp r-xdata
push 0x0
push 0xdeadbeef
push 0x2
push esi
call sub_44286a
mov bl al
lea eax [ esp + 0xc ]
push eax
call sub_442ba2
mov al bl
pop edi
pop esi
pop ebx
add esp 0x80
retn 0x8
push ebx
lea ecx [ esi + 0x8c ]
push ecx
call sub_4349dd
movzx edx al
push edx
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_44a919
sub edi 0x2
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push ebx
lea eax [ esi + 0x58 ]
push eax
call sub_4349dd
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_44aa1f
mov bl al
lea eax [ esp + 0xc ]
push eax
call sub_442ba2
mov al bl
pop edi
pop esi
pop ebx
add esp 0x80
retn 0x8
push 0x0
push 0xdeadbeef
push 0x4
push esi
call sub_44286a
lea edx [ esp + 0xc ]
push edx
jmp r-xdata
sub_465fc3
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0xd0 ] 0x0
je r-xdata
push eax
push esi
call sub_465e8e
pop esi
retn 0x8
test al al
je r-xdata
lea eax [ esi + 0xd4 ]
push eax
call sub_434b61
push esi
push 0x0
push sub_465fb6
call sub_415702
xor eax eax
add esp 0xc
cmp [ esi + 0x18 ] eax
sete al
pop esi
retn 0x8
sub_46600c
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov edx [ esp + 0x18 ]
cmp edx 0x4
jle r-xdata
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax edi
call sub_4040e0
pop edi
mov eax 0x1
pop esi
add esp 0xc
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push edx
push ecx
call sub_453063
push eax
mov ecx esi
call sub_40c760
push eax
call sub_450695
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
mov esi [ esp + 0x1c ]
call sub_4092c0
pop edi
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
sub_4660e9
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_45302e
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_453063
push eax
mov ecx esi
call sub_40c760
push eax
call sub_450705
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
mov eax 0x1
pop esi
add esp 0xc
retn 0x8
sub_46619c
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c760
push eax
mov ecx edi
call sub_40c760
push eax
call sub_448daf
mov edi eax
test edi edi
jge r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
neg edi
push edi
add eax esi
call sub_404120
mov edi 0x1
sub_4661f4
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c760
push eax
mov ecx edi
call sub_40c760
push eax
call sub_449063
mov edi eax
test edi edi
jge r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
neg edi
push edi
add eax esi
call sub_404120
mov edi 0x1
sub_46624c
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_45302e
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_453063
push eax
mov ecx esi
call sub_40c760
push eax
call sub_4517a1
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
mov eax 0x1
pop esi
add esp 0xc
retn 0x8
sub_4662ff
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_45302e
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov esi [ ecx ]
push eax
push edx
call sub_453063
push eax
mov ecx esi
call sub_40c760
push eax
call sub_4517ec
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_44b390
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
mov eax 0x1
pop esi
add esp 0xc
retn 0x8
sub_4663c7
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push 0x0
mov edi ecx
push eax
lea ecx [ esp + 0x14 ]
push ecx
push edi
call sub_45c216
test al al
je r-xdata
mov edx [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
mov ecx [ esp + 0xc ]
push ecx
push edx
call sub_452d91
pop edi
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov edx [ edi + 0x17c ]
mov eax [ esp + 0xc ]
mov edi [ edx + eax * 4 ]
push ebx
call sub_40c760
push esi
mov ebx eax
call sub_443576
mov ecx [ edi ]
mov esi [ ecx + 0x4 ]
push ebx
push edx
push eax
call sub_40e0d0
mov [ esp + 0x10 ] al
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_452d91
pop ebx
pop edi
xor eax eax
pop esi
retn 0x8
sub_46644d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x0
push eax
lea edx [ esp + 0x10 ]
push edx
push esi
call sub_45c216
test al al
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x17c ]
mov ecx [ esp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
mov esi [ esp + 0xc ]
push ebx
mov ebx [ eax + 0x14 ]
push edi
mov edi [ eax + 0x10 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
pop ebx
mov [ esi + 0x8 ] 0x2
xor eax eax
pop esi
retn 0x8
sub_4664ce
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x0
push eax
lea edx [ esp + 0x10 ]
push edx
push esi
call sub_45c216
test al al
je r-xdata
mov ecx [ esp + 0xc ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
push ecx
call sub_452d91
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x17c ]
mov ecx [ esp + 0x8 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
push eax
call sub_437228
mov edx [ esp + 0xc ]
mov [ esp + 0x8 ] al
mov ecx [ esp + 0x8 ]
push ecx
push edx
call sub_452d91
xor eax eax
pop esi
retn 0x8
sub_466537
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
push eax
call sub_44bf8d
add esp 0x4
test al al
jne r-xdata
xor eax eax
pop esi
retn 0x8
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_404120
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
sub_466587
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
push ebx
push esi
push edi
mov esi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x1
push eax
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_45c216
test al al
jne r-xdata
mov ecx [ esi + 0x17c ]
mov edx [ esp + 0xc ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov edi [ ecx + 0xc ]
test edi edi
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
mov eax [ edx + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
call sub_40e6d0
mov edx [ esi + 0x17c ]
mov edi [ esp + 0xc ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
test [ ecx + 0x10 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
lea edi [ esp + 0x3c ]
call sub_40e6d0
test [ esp + 0x10 ] 0x10
je r-xdata
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
push 0x1
add eax esi
call sub_4040e0
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x17c ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push eax
call sub_4112ef
mov ecx [ esi + 0x17c ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
add esp 0x4
mov [ eax + 0xc ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_404120
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_404120
sub_4666bb
sub esp 0x804
mov eax [ esp + 0x808 ]
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov [ esp + 0x10 ] 0x400
mov eax [ ecx ]
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push ecx
push eax
call sub_453081
push eax
call WNetGetConnectionW
mov ebx [ esp + 0x81c ]
mov ebp eax
test ebp ebp
je r-xdata
lea edi [ esp + 0x14 ]
call sub_40e6d0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x804
retn 0x8
mov edi r--data
call sub_40e6d0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push ebp
add eax esi
call sub_404120
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x804
retn 0x8
sub_46674e
mov eax [ esp + 0x4 ]
push ebx
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push 0x1
push 0x1
push eax
call sub_453081
push eax
call WNetCancelConnection2W
mov ebx eax
test ebx ebx
je r-xdata
push 0xa
call [ Sleep@IAT ]
pop edi
xor eax eax
pop ebx
retn 0x8
push esi
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax edi
call sub_404120
pop esi
sub_4667a7
sub esp 0x234
push ebx
push ebp
push esi
mov esi [ esp + 0x244 ]
mov eax [ esi + 0x8 ]
mov ebx ecx
mov ecx [ esi + 0x4 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] 0x100
mov eax [ ecx ]
push edi
push eax
xor ebp ebp
call sub_453081
mov edi eax
call sub_40fff0
mov edx [ esi + 0x4 ]
mov [ esp + 0x10 ] eax
mov eax [ edx + 0x4 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
cmp [ esp + 0x1c ] 0x2
mov edi eax
mov [ esp + 0x20 ] edi
jbe r-xdata
mov ecx [ esp + 0x10 ]
push 0x3
push r--data
push ecx
call sub_4136bc
mov ecx [ esp + 0x1c ]
add esp 0xc
neg eax
sbb eax eax
add eax 0x2
mov [ esp + 0x38 ] edi
xor edi edi
mov [ esp + 0x28 ] eax
mov [ esp + 0x40 ] edi
movzx eax [ ecx ]
cmp ax di
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov ebp eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x34 ] ecx
cmp ax 0x2a
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x4
jae r-xdata
or ebp 0x80
cmp [ ecx ] 0x2a
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x4c ]
push ecx
push ebp
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x4c ]
push ecx
push ebp
push edi
push edi
jmp r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov esi [ esi + 0x10 ]
push eax
call sub_453081
push eax
push esi
call sub_453081
push eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_453081
push eax
push edi
jmp r-xdata
lea edx [ esp + 0x3c ]
push edx
push edi
call WNetUseConnectionW
mov esi [ esp + 0x24c ]
mov edi eax
test edi edi
je r-xdata
mov ebp [ esp + 0x10 ]
cmp [ ebp ] 0x2a
jne r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp edi 0x5
jne r-xdata
push ebp
call sub_4112ef
mov ecx [ esp + 0x24 ]
push ecx
call sub_4112ef
add esp 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x234
retn 0x8
test [ esp + 0x18 ] 0x100
mov ebx esi
lea edi [ esp + 0x44 ]
jne r-xdata
cmp edi 0x55
je r-xdata
push 0x0
push 0x2
jmp r-xdata
call sub_40e6d0
mov edi r--data
push 0x0
push 0x3
cmp edi 0x4b2
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
cmp edi 0x4b0
jne r-xdata
cmp edi 0x43
jne r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x4
jmp r-xdata
cmp edi 0x56
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x5
jmp r-xdata
add eax ebx
call sub_4040e0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x1
add eax ebx
call sub_4040e0
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push edi
add eax ebx
call sub_404120
jmp r-xdata
push 0x6
jmp r-xdata
sub_466999
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x302bc
call sub_425210
push ebx
push esi
push edi
xor eax eax
push 0x1fffe
push eax
lea ecx [ esp + 0x102d2 ]
push ecx
mov [ esp + 0x102d4 ] ax
call sub_4131f0
add esp 0xc
lea ecx [ esp + 0x10 ]
call sub_40c060
lea ecx [ esp + 0x50 ]
call sub_40c060
lea ecx [ esp + 0x40 ]
call sub_40c060
lea ecx [ esp + 0x24 ]
call sub_40c060
mov ebx [ ebp + 0x10 ]
mov edi r--data
mov [ esp + 0x20 ] 0x0
call sub_40e6d0
mov ebx [ ebp + 0xc ]
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push 0x7fff
push eax
call sub_453081
push eax
lea eax [ esp + 0x2d0 ]
push eax
call sub_41326a
mov edx [ ebx + 0x4 ]
add esp 0xc
xor ecx ecx
mov [ esp + 0x102c6 ] cx
mov eax [ edx + 0x4 ]
push 0x104
push eax
call sub_453081
push eax
lea eax [ esp + 0xc0 ]
push eax
call sub_41326a
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ esp + 0x2cc ] cx
mov eax [ edx + 0x8 ]
add esp 0xc
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov esi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov [ esp + 0x40 ] esi
call sub_45302e
xor ecx ecx
push r--data
push esi
mov [ esi + eax * 2 ] cx
call sub_4142a3
add esp 0x8
test eax eax
je r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov edi 0x1
cmp [ esp + 0x14 ] edi
jbe r-xdata
push eax
lea eax [ esp + 0x28 ]
call sub_4021e0
push r--data
lea edx [ esp + 0x28 ]
push edx
call sub_434b96
mov edi eax
push r--data
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x40 ] edi
call sub_434b96
mov [ esp + 0x34 ] eax
cmp edi 0xffffffff
je r-xdata
push esi
call sub_4112ef
mov edi [ ebp + 0x14 ]
add esp 0x4
cmp edi 0x6
jb r-xdata
nop
push 0x0
push 0x2
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edi 0x5
jb r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x14 ]
push eax
call sub_44b390
mov [ esp + 0x20 ] eax
inc edi
cmp edi [ esp + 0x14 ]
jb r-xdata
call sub_401be0
xor ecx ecx
mov [ eax ] cx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
cmp eax edi
jb r-xdata
xor edx edx
mov [ esp + 0x102c8 ] dx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_453081
push eax
lea ecx [ esp + 0x102cc ]
push ecx
call sub_411691
add esp 0x8
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x7c
jne r-xdata
mov esi [ esp + 0x3c ]
lea ecx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x14 ]
call sub_40c140
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x34 ]
sub eax ecx
dec eax
push eax
inc ecx
push ecx
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x5c ]
push eax
call sub_4608ce
lea ecx [ esp + 0x50 ]
push ecx
lea eax [ esp + 0x14 ]
call sub_40c140
lea eax [ esp + 0x10 ]
call sub_40d330
push edi
push 0x0
call sub_4142a3
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x94 ] 0x80004
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
cmp eax 0x1f
jg r-xdata
push 0x58
lea eax [ esp + 0x64 ]
push 0x0
push eax
call sub_4131f0
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x70 ] ecx
mov [ esp + 0x78 ] edx
add esp 0xc
lea eax [ esp + 0x2c8 ]
lea ecx [ esp + 0x102c8 ]
lea edx [ esp + 0xb8 ]
xor esi esi
mov [ esp + 0x60 ] 0x58
mov [ esp + 0x90 ] eax
mov [ esp + 0x80 ] 0xffff
mov [ esp + 0x7c ] ecx
mov [ esp + 0x8c ] edx
cmp edi 0x4
jb r-xdata
call [ GetSaveFileNameW@IAT ]
test eax eax
je r-xdata
call [ GetOpenFileNameW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
test eax eax
jl r-xdata
push 0x0
push 0x1
mov edi [ esp + 0x7c ]
mov ebx [ ebp + 0x10 ]
call sub_40e6d0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
jmp r-xdata
test esi 0x200
je r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
mov esi 0x80004
call sub_40c760
test al 0x10
je r-xdata
lea ecx [ esp + 0x24 ]
call sub_402620
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x50 ]
call sub_402620
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
add eax ecx
call sub_4040e0
mov edx [ esp + 0x7c ]
push edx
call sub_4112d5
mov esi eax
mov eax [ esp + 0x80 ]
add esp 0x4
push eax
lea eax [ esp + 0x44 ]
call sub_4021e0
mov ecx [ esp + 0x7c ]
lea eax [ ecx + esi * 2 + 0x2 ]
mov [ esp + 0x7c ] eax
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
test al 0x8
je r-xdata
mov esi 0x80006
mov edi [ esp + 0x40 ]
mov ebx [ ebp + 0x10 ]
call sub_40e6d0
jmp r-xdata
push eax
call sub_4112d5
mov esi eax
add esp 0x4
mov edi r--data
lea eax [ esp + 0x40 ]
call sub_40d330
mov edi [ esp + 0x7c ]
lea eax [ esp + 0x40 ]
call sub_40d330
mov edx [ esp + 0x7c ]
lea eax [ edx + esi * 2 + 0x2 ]
mov [ esp + 0x7c ] eax
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
test al 0x4
je r-xdata
or esi 0x2000
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
test al 0x2
je r-xdata
or esi 0x200
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
test al 0x1
je r-xdata
or esi 0x800
mov [ esp + 0x94 ] esi
jmp r-xdata
or esi 0x1000
cmp [ ebp + 0x18 ] 0x0
lea ecx [ esp + 0x60 ]
push ecx
je r-xdata
sub_466e2a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x22c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
cmp [ edi + 0x8 ] 0x2
mov esi ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
jb r-xdata
mov ebx [ ebp + 0xc ]
test al 0x8
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov [ esp + 0x10 ] eax
push 0x38
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test al 0x3
je r-xdata
mov [ esp + 0x14 ] 0x0
call sub_40d940
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push 0x0
push 0x0
lea edx [ esp + 0x38 ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
push eax
call sub_453081
push eax
call sub_413db0
add esp 0x14
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x18 ]
call sub_401b70
lea edi [ esp + 0x30 ]
mov eax esi
call sub_40d330
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x180 ]
xor edi edi
test eax eax
jbe r-xdata
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_404120
mov esi ebx
call sub_4092c0
mov [ ebx ] 0xffffffff
mov [ ebx + 0x8 ] 0x1
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
call sub_40dfa0
test al al
jne r-xdata
mov ecx ebx
call sub_40c760
lea ecx [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call sub_436b22
add esp 0x4
test al al
jne r-xdata
push 0x14
cmp edi eax
jne r-xdata
mov ecx [ esi + 0x17c ]
xor [ esp + 0x10 ] 0x8
call sub_402620
mov edi [ ebp + 0x8 ]
mov esi [ esp + 0x14 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x18 ]
push eax
call sub_4366be
add esp 0x4
test al al
jne r-xdata
call sub_41171a
mov edx [ esi + 0x17c ]
mov ecx [ edx + edi * 4 ]
add esp 0x4
mov [ ecx ] eax
call sub_41171a
add esp 0x4
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esi + 0x178 ]
push ecx
call sub_434343
jmp r-xdata
inc edi
add ecx 0x4
cmp edi eax
jb r-xdata
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0xffffffff
mov edx [ esi + 0x17c ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov [ ecx ] 0x0
mov edx [ esi + 0x17c ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov edx [ esp + 0x14 ]
mov esi ebx
mov [ ecx + 0x4 ] edx
call sub_4092c0
inc edi
mov [ ebx ] edi
pop edi
pop esi
mov [ ebx + 0x8 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
sub_467046
sub esp 0x18
push ebx
mov ebx [ esp + 0x20 ]
mov eax [ ebx + 0x8 ]
push ebp
push esi
push edi
cmp eax 0xb
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x18
retn 0x4
dec eax
cmp eax 0x9
ja r-xdata
xor edi edi
jmp [ eax * 4 + jump_table_4671ba ]
push 0x8
call sub_41171a
mov [ ebx ] eax
mov [ eax ] edi
mov edx [ ebx ]
add esp 0x4
mov esi ebx
mov [ edx + 0x4 ] ebp
call sub_4041d0
mov [ ebx + 0x8 ] 0xb
mov esi [ ebx + 0xc ]
push 0x0
push esi
call sub_438a19
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebx ]
mov edi 0x4
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov edi 0x8
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] edx
jmp r-xdata
fld [ ebx ]
mov edi 0x8
fstp [ esp + 0x10 ]
jmp r-xdata
mov cl [ ebx ]
mov edi 0x1
mov [ esp + 0x10 ] cl
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov edi 0x4
jmp r-xdata
mov eax ebx
call sub_40e380
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
push 0x1
push esi
call sub_438a19
cmp [ eax ] 0x78
je r-xdata
push edi
call sub_41171a
push edi
lea ecx [ esp + 0x18 ]
mov ebp eax
push ecx
push ebp
call sub_410f70
add esp 0x10
mov [ esp + 0x10 ] eax
push 0x1
call sub_41171a
mov ebp eax
add esp 0x4
mov [ ebp ] 0x0
jmp r-xdata
push edi
call sub_41171a
add esp 0x4
mov ebp eax
push edi
lea eax [ esp + 0x1c ]
push eax
call sub_443466
lea ecx [ esp + 0x18 ]
push ecx
push esi
call sub_45efe7
mov edx [ esp + 0x18 ]
push edi
push edx
push ebp
call sub_410f70
add esp 0xc
lea esi [ esp + 0x18 ]
call sub_401330
jmp r-xdata
mov edi [ esi + 0x4 ]
sub edi 0x2
sar edi 0x1
push edi
call sub_41171a
mov ebp eax
mov eax [ esi ]
add eax 0x4
push ebp
push eax
call sub_435dc0
add esp 0xc
test al al
jne r-xdata
push 0x1
push esi
call sub_438a19
cmp [ eax ] 0x58
jne r-xdata
push ebp
call sub_4112ef
add esp 0x4
sub_467214
mov ecx [ esp + 0x8 ]
movzx eax [ ecx ]
sub esp 0x24
push ebx
push ebp
push esi
mov esi [ esp + 0x34 ]
push edi
test eax 0x2000
je r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
test eax 0x4000
je r-xdata
mov ecx [ ecx + 0x8 ]
mov [ esp + 0x3c ] ecx
mov ebx ecx
mov eax [ ecx + 0x8 ]
mov ebx [ eax ]
mov [ esp + 0x3c ] ebx
jmp r-xdata
mov eax esi
call sub_40e8f0
movsx edx [ ebx ]
mov eax [ esi ]
mov [ eax + 0x210 ] edx
mov eax [ esi ]
xor ecx ecx
cmp [ eax + 0x210 ] ecx
jle r-xdata
test ebx ebx
je r-xdata
push 0x0
mov eax esi
call sub_40e7e0
mov ecx [ esi ]
mov ebp [ ecx + 0x8 ]
movzx ecx [ ebx + 0x2 ]
mov eax ecx
and eax 0xf00
add esp 0x4
cmp eax 0x400
jg r-xdata
mov edi 0x10c
lea edx [ ebx + 0x10 ]
cmp eax 0x800
je r-xdata
je r-xdata
mov ebp [ edx ]
mov [ edi + eax ] ebp
mov eax [ esi ]
inc ecx
add edx 0x8
add edi 0x4
cmp ecx [ eax + 0x210 ]
jl r-xdata
lea edx [ esp + 0x1c ]
push edx
push ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
jl r-xdata
test cl cl
jns r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
jl r-xdata
cmp eax 0x100
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x24
retn 0x8
xor edi edi
test ebp ebp
jle r-xdata
call sub_4092c0
lea eax [ esp + 0x10 ]
push eax
push ebx
call [ SafeArrayGetVartype@IAT ]
mov ecx [ esp + 0x10 ]
movzx eax cx
add eax 0xfffffffe
cmp eax 0x15
ja r-xdata
xor edi edi
test ebp ebp
jle r-xdata
lea edx [ esp + 0x14 ]
push edx
push ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
jl r-xdata
cmp eax 0x200
jne r-xdata
push ebx
call [ SafeArrayUnaccessData@IAT ]
xor ebx ebx
nop
test ecx 0x4000
je r-xdata
movzx edx [ eax + lookup_table_467610 ]
jmp [ edx * 4 + jump_table_4675f8 ]
lea esp [ esp ]
xor edi edi
test ebp ebp
jle r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
mov [ esp + 0x3c ] 0x4
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
push ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
jl r-xdata
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x3c ] 0x2
jmp r-xdata
mov [ esp + 0x3c ] 0x8
jmp r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
lea ebx [ ebx ]
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esp + 0x3c ]
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov ecx [ esp + 0x1c ]
lea edx [ ebx + ecx ]
mov ecx [ esi ]
mov eax 0x400c
mov [ esp + 0x20 ] ax
mov [ esp + 0x28 ] edx
mov edx [ ecx ]
mov ecx [ edx + edi * 4 ]
lea eax [ esp + 0x20 ]
push eax
call sub_467626
inc edi
add ebx 0x10
cmp edi ebp
jl r-xdata
lea edx [ esp + 0x38 ]
push edx
push ebx
call [ SafeArrayAccessData@IAT ]
test eax eax
jl r-xdata
mov ecx [ esp + 0x38 ]
push ebp
push ecx
push ebp
push esi
call sub_452dae
push eax
call sub_410f70
add esp 0xc
push ebx
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
xor edi edi
test ebp ebp
jle r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push ebx
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov ecx [ esp + 0x18 ]
lea edx [ ecx + edi * 4 ]
mov ecx [ esi ]
mov eax 0x9
mov [ esp + 0x20 ] ax
mov [ esp + 0x28 ] edx
mov edx [ ecx ]
mov ecx [ edx + edi * 4 ]
lea eax [ esp + 0x20 ]
push eax
call sub_467626
inc edi
cmp edi ebp
jl r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
mov edi edi
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push ebx
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov ecx [ esp + 0x14 ]
mov eax 0x8
mov [ esp + 0x20 ] ax
mov edx [ ecx + edi * 4 ]
mov ecx [ esi ]
mov [ esp + 0x28 ] edx
mov edx [ ecx ]
mov ecx [ edx + edi * 4 ]
lea eax [ esp + 0x20 ]
push eax
call sub_467626
inc edi
cmp edi ebp
jl r-xdata
xor eax eax
mov [ eax ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x0
jmp r-xdata
or eax 0x4000
mov [ esp + 0x20 ] ax
mov eax [ esp + 0x38 ]
mov [ esp + 0x28 ] eax
mov ecx [ esp + 0x38 ]
mov [ esp + 0x20 ] ax
mov eax [ esp + 0x3c ]
push eax
push ecx
lea edx [ esp + 0x30 ]
push edx
call sub_410f70
add esp 0xc
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov [ edx + edi * 4 ] eax
mov eax [ esp + 0x10 ]
test eax 0x4000
je r-xdata
push 0x10
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push ebx
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ eax + edi * 4 ]
call sub_467626
mov ecx [ esp + 0x3c ]
add [ esp + 0x38 ] ecx
inc edi
cmp edi ebp
jl r-xdata
sub_467626
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov esi ecx
call sub_4092c0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_45e912
cmp al 0x1
je r-xdata
push edi
push esi
call sub_467214
cmp al 0x1
je r-xdata
push 0x10
mov [ esi + 0x8 ] 0x8
call sub_41171a
add esp 0x4
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
mov eax [ esi ]
push edi
push eax
call [ VariantCopy@IAT ]
test eax eax
jge r-xdata
mov ecx [ esi ]
push ecx
call [ VariantClear@IAT ]
mov edx [ esi ]
push edx
call sub_4112ef
add esp 0x4
mov [ esi ] 0x0
call sub_4092c0
sub_4676a3
push ecx
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x8 ] 0xb
je r-xdata
call sub_4041d0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
pop esi
pop ecx
retn 0x4
push esi
call sub_467046
sub_4676c4
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x1c ] 0x0
mov ebx [ esi + 0xc ]
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn 0xc
mov eax [ esi + 0xc ]
push eax
push ebp
call sub_452dae
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push ebp
call sub_4676a3
push eax
call sub_410f70
add esp 0xc
sub_467715
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0xc ]
mov eax [ esi + 0xc ]
push eax
push ebx
call sub_452dae
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push ebx
call sub_4676a3
push eax
call sub_410f70
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
push eax
push 0x0
push ecx
call sub_4131f0
add esp 0x18
push edi
mov [ esi + 0xc ] 0x0
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn 0x8
sub_467775
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ecx
push edx
push eax
call sub_4676c4
retn 0x8
xor eax eax
retn 0x8
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi r--data
call sub_40e6d0
pop edi
pop ebx
sub_4677ad
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x4
mov ecx [ esp + 0x4 ]
push ecx
push eax
call sub_467715
retn 0x4
sub_4677d9
sub esp 0x14
push ebx
mov bl [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi [ esp + 0x34 ]
test bl 0x4
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c060
cmp [ esp + 0x40 ] 0x0
je r-xdata
cmp [ esp + 0x3c ] 0xffffffff
jne r-xdata
test bl 0x1
je r-xdata
push esi
call sub_453333
test al al
je r-xdata
sub edi [ esp + 0x38 ]
cmp [ esp + 0x40 ] 0x0
je r-xdata
push 0x2
lea eax [ esp + 0x44 ]
push ebp
push eax
call sub_410f70
mov ecx [ esp + 0x4c ]
push 0x1
lea edx [ esp + 0x44 ]
push ebp
push edx
call sub_410f70
movsx ax [ esp + 0x4c ]
movzx ecx ax
jmp r-xdata
push esi
call sub_453081
movzx edx [ eax ]
push edx
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
call sub_40c760
push eax
lea ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c060
push esi
test bl 0x1
je r-xdata
add esp 0xc
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_444508
mov esi [ esp + 0x44 ]
lea edi [ esp + 0x10 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x20
movzx eax [ eax ]
push 0x2
lea ecx [ esp + 0x44 ]
push ecx
push ebp
mov [ esp + 0x4c ] eax
call sub_410f70
add esp 0xc
lea ecx [ esp + 0x10 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x20
mov cl [ eax ]
push 0x1
lea edx [ esp + 0x44 ]
push edx
push ebp
mov [ esp + 0x4c ] cl
call sub_410f70
add esp 0xc
mov ecx esi
call sub_402620
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x20
call sub_444508
mov esi [ esp + 0x44 ]
lea edi [ esp + 0x10 ]
call sub_40e640
xor edi edi
lea esi [ esp + 0x10 ]
call sub_401be0
test bl 0x1
je r-xdata
shr edi 0x1
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add edi edi
push edi
mov esi eax
push ebp
push esi
call sub_410f70
mov ebx [ esp + 0x54 ]
xor eax eax
mov [ edi + esi ] ax
add esp 0x10
mov edi esi
call sub_40e6d0
push esi
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x20
lea eax [ edi + 0x1 ]
push eax
call sub_41171a
push edi
mov esi eax
push ebp
push esi
call sub_410f70
push 0xffffffff
push esi
mov [ esi + edi ] 0x0
call sub_4359c4
mov ebx [ esp + 0x5c ]
add esp 0x18
mov edi eax
call sub_40e6d0
push edi
call sub_4112ef
push esi
call sub_4112ef
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x20
shr edi 0x1
mov ebx edi
call sub_45302e
cmp eax ebx
jge r-xdata
mov [ esp + 0x44 ] edi
call sub_45302e
cmp eax edi
jge r-xdata
push ebx
push 0x0
push esi
call sub_453063
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_4608ce
mov esi [ esp + 0x44 ]
lea edi [ esp + 0x10 ]
call sub_40e640
mov edx [ esp + 0x10 ]
lea ecx [ ebx + ebx ]
push ecx
push edx
push ebp
call sub_410f70
add esp 0xc
lea ecx [ esp + 0x10 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x20
push esi
call sub_45302e
mov ebx eax
inc ebx
mov eax [ esp + 0x40 ]
push eax
push 0x0
push esi
call sub_453063
push eax
lea ecx [ esp + 0x1c ]
push ecx
call sub_4608ce
mov esi [ esp + 0x44 ]
lea edi [ esp + 0x10 ]
call sub_40e640
mov ebx [ esp + 0x10 ]
call sub_40f580
mov edx [ esp + 0x40 ]
push edx
mov esi eax
push esi
push ebp
call sub_410f70
push esi
call sub_4112ef
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x20
push esi
call sub_45302e
inc eax
mov [ esp + 0x40 ] eax
sub_467a9e
sub esp 0xc
mov edx [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x2c ]
push esi
mov esi [ esp + 0x28 ]
push edi
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edx
push ebx
mov [ esp + 0x44 ] 0x0
call sub_453279
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x2c ]
shl eax 0x5
mov ebx [ eax + ecx + 0x4 ]
mov edx [ eax + ecx ]
add eax ecx
mov ecx [ eax + 0x1c ]
mov [ esp + 0x34 ] ebx
mov ebx [ eax + 0x8 ]
cmp ebp 0xffffffff
je r-xdata
call sub_4092c0
mov eax [ esp + 0x34 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
cmp edx ecx
jl r-xdata
mov eax [ esp + 0x34 ]
imul ebp eax
add edx ebp
add edi ebp
test bl 0x21
je r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax 0x3
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
test bl 0x4
je r-xdata
mov eax [ esp + 0x30 ]
push esi
push eax
push ebp
push edx
push ecx
mov ecx [ esp + 0x3c ]
push edi
push ebx
push ecx
call sub_4677d9
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov al [ esp + 0x30 ]
cmp ebp 0xffffffff
jne r-xdata
mov ecx [ esp + 0x34 ]
test bl 0x8
je r-xdata
test al al
je r-xdata
mov al [ esp + 0x30 ]
sub ecx edx
mov ebp ecx
test al al
je r-xdata
dec ecx
cmp ecx 0x7
ja r-xdata
cmp ecx 0x4
je r-xdata
mov edi [ edi ]
call sub_4092c0
mov [ esi + 0x8 ] 0x7
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov edx [ esp + 0x28 ]
push edx
call sub_44b390
mov [ edi ] eax
test bl 0x10
je r-xdata
test bl 0x10
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x18
jmp [ ecx * 4 + jump_table_467dfa ]
test al al
je r-xdata
cmp ecx 0x8
jne r-xdata
test bl 0x40
je r-xdata
push ebp
push edi
push ebp
push esi
call sub_452dae
push eax
call sub_410f70
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov ebx [ esp + 0x28 ]
push ebx
call sub_4676a3
push ebx
call sub_443676
mov ebx eax
cmp ebx ebp
jle r-xdata
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
fld [ edi ]
fstp [ esp + 0x14 ]
call sub_4092c0
fld [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov ecx [ esp + 0x28 ]
call sub_40be90
fstp [ edi ]
test al al
je r-xdata
mov ebp [ esp + 0x28 ]
push ebx
push ecx
push ebp
call sub_4676a3
add esp 0x4
push eax
push edi
call sub_410f70
add esp 0xc
push ebx
push ecx
push ebp
call sub_4676a3
add esp 0x4
push eax
push ebx
push esi
call sub_452dae
push eax
call sub_410f70
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov ebx ebp
test bl 0x2
je r-xdata
mov eax [ esp + 0x28 ]
push eax
call sub_443576
mov [ edi ] al
test bl 0x2
je r-xdata
mov ecx [ esp + 0x28 ]
push ecx
call sub_443576
mov [ edi ] ax
test bl 0x2
je r-xdata
mov edx [ esp + 0x28 ]
push edx
call sub_443576
mov [ edi ] eax
mov ebx [ edi ]
mov edi [ edi + 0x4 ]
call sub_4092c0
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x2
mov eax [ esp + 0x28 ]
push eax
call sub_443576
mov [ edi ] eax
mov [ edi + 0x4 ] edx
fld [ edi ]
fstp [ esp + 0x14 ]
call sub_4092c0
fld [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov ecx [ esp + 0x28 ]
call sub_40be90
fstp [ edi ]
movsx edi [ edi ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
movzx edi [ edi ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
movsx edi [ edi ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
movzx edi [ edi ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov eax [ edi ]
cdq
mov edi eax
mov ebx edx
call sub_4092c0
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
mov edi [ edi ]
xor ebx ebx
call sub_4092c0
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x18
sub_467e1a
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push 0x1
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_467a9e
retn 0x14
sub_467e3d
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
push 0x0
push edx
push eax
push eax
mov eax [ esp + 0x1c ]
push eax
call sub_467a9e
pop ecx
retn 0x10
sub_467e5e
sub esp 0x18
mov al [ rw-data ]
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
push edi
mov edi [ esp + 0x2c ]
push 0x8000
push edi
mov [ esp + 0x18 ] al
call sub_41453a
add esp 0x4
push eax
call sub_414443
add esp 0x8
mov esi eax
push ebp
mov [ esp + 0x18 ] esi
call sub_444279
test al al
je r-xdata
lea esi [ esp + 0x18 ]
call sub_40d500
push ebp
call sub_453063
push esi
push eax
call sub_45efe7
mov edx [ esp + 0x18 ]
push edx
push r--data
push edi
call sub_414750
add esp 0xc
cmp [ esp + 0x10 ] 0x0
mov ebx eax
je r-xdata
push edi
push ebp
call sub_443676
push eax
push 0x1
push ebp
call sub_4676a3
push eax
call sub_4146ce
add esp 0x10
mov ebx eax
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_401330
mov esi [ esp + 0x14 ]
push ebp
call sub_453081
push eax
call [ OutputDebugStringW@IAT ]
push edi
call sub_4149f6
add esp 0x4
cmp esi 0xffffffff
jne r-xdata
push esi
jmp r-xdata
push 0x4000
push edi
call sub_41453a
add esp 0x4
push eax
call sub_414443
add esp 0x8
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0x18
retn
sub_467f38
sub esp 0x14
push esi
push edi
lea esi [ esp + 0x8 ]
call sub_40d500
mov eax [ esp + 0x20 ]
mov edi esi
call sub_403bd0
test al al
je r-xdata
lea esi [ esp + 0x8 ]
call sub_401330
pop edi
xor al al
pop esi
add esp 0x14
retn 0x8
mov eax [ esp + 0x24 ]
push eax
push esi
call sub_46015f
call sub_401330
mov al 0x1
pop edi
pop esi
add esp 0x14
retn 0x8
sub_467f82
sub esp 0x14
push esi
lea esi [ esp + 0x8 ]
call sub_40d500
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
push eax
push esi
push edx
call sub_44c245
test al al
je r-xdata
lea esi [ esp + 0x8 ]
call sub_401330
xor al al
pop esi
add esp 0x14
retn 0xc
mov eax [ esp + 0x20 ]
push eax
push esi
call sub_46015f
call sub_401330
mov al 0x1
pop esi
add esp 0x14
retn 0xc
sub_467fce
sub esp 0x18
push ebx
mov ebx [ esp + 0x24 ]
push esi
push edi
mov edi [ esp + 0x28 ]
mov eax [ edi + 0x2c ]
test al 0x1
je r-xdata
test al 0x2
je r-xdata
push ebx
push edi
call sub_44447a
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x8
lea esi [ esp + 0x10 ]
test al 0x4
je r-xdata
push ebx
push edi
call sub_444417
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x8
call sub_40d500
lea edx [ esp + 0x10 ]
push edx
push ebx
call sub_45efe7
lea eax [ esp + 0x10 ]
push eax
call sub_40d500
push esi
push ebx
call sub_454125
push esi
jmp r-xdata
push edi
call sub_44449f
lea esi [ esp + 0x10 ]
mov bl al
call sub_401330
pop edi
pop esi
mov al bl
pop ebx
add esp 0x18
retn 0x8
sub_46804f
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
mov bl [ ebp + 0x8 ]
push esi
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov esi rw-data
call sub_40e1e0
push 0xfffffffd
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx rw-data
call sub_401000
push 0xfffffffc
push rw-data
call sub_453a57
test bl 0x8
je r-xdata
mov [ rw-data ] 0x1
push 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
cmp [ rw-data ] 0x1
mov [ rw-data ] 0x0
jne r-xdata
push rw-data
call sub_453a57
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
mov eax rw-data
mov [ rw-data ] 0x0
call sub_4021e0
push 0xfffffffa
mov esi rw-data
call sub_40e1e0
sub_4680eb
sub esp 0x38
push ebx
push ebp
push esi
mov esi [ esp + 0x48 ]
push edi
push 0x2c
lea eax [ esp + 0x20 ]
push 0x0
push eax
mov [ esp + 0x24 ] 0x30
call sub_4131f0
mov eax [ esp + 0x60 ]
mov ebx [ esi + 0x9c0 ]
add eax 0xfffffe00
add esp 0xc
xor edi edi
cmp eax 0x6
ja r-xdata
test [ esi + 0xc ] edi
je r-xdata
jmp [ eax * 4 + jump_table_46836b ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edi 0x1
push 0xfffffff9
jmp r-xdata
mov edi 0x2
push 0xfffffff8
jmp r-xdata
cmp [ esi + 0xa ] 0x0
mov edi 0x4
je r-xdata
mov edi 0x8
push 0xfffffff7
jmp r-xdata
mov edi 0x10
push 0xfffffff6
jmp r-xdata
mov edi 0x20
push 0xfffffff2
jmp r-xdata
mov edi 0x40
push 0xfffffff5
cmp [ esi + 0x4 ] 0x0
mov ebp [ GetMenuItemCount@IAT ]
je r-xdata
push esi
call sub_453a57
push 0xfffffff3
jmp r-xdata
mov ebp 0x7
cmp ebx ebp
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x24 ] 0x8
jl r-xdata
mov eax [ esi ]
mov edi [ __import_lookup_table_10(USER32:DeleteMenu) ]
push 0x0
push 0x5
push eax
call edi
mov ecx [ esi ]
push 0x0
push 0x4
push ecx
call edi
mov edx [ esi ]
push 0x0
push 0x6
push edx
call edi
mov eax [ esi ]
push 0x0
push 0x3
push eax
call edi
mov [ esi + 0x8 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ecx [ esi + 0x1c0 ]
mov [ esp + 0x4c ] ecx
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ esi ]
push ecx
call ebp
test eax eax
jle r-xdata
mov eax [ esi ]
push eax
call ebp
test eax eax
jle r-xdata
mov edx [ esp + 0x4c ]
mov eax [ edx ]
test eax eax
je r-xdata
cmp [ esi + 0x6 ] 0x0
je r-xdata
mov [ esi + 0x6 ] 0x0
jmp r-xdata
mov ecx [ esi + 0x7c ]
push 0x0
push 0xffffffff
push 0xffffffff
push ecx
push 0x0
push esi
mov [ esi + 0x9c0 ] 0x3
call sub_45f2c5
push 0x0
push 0xffffffff
push 0xffffffff
push r--data
push 0x0
push esi
mov [ esi + 0x9c0 ] 0x5
call sub_45f2c5
mov edx [ esi + 0x6c ]
push 0x0
push 0xffffffff
push 0xffffffff
push edx
push 0x0
push esi
mov [ esi + 0x9c0 ] 0x2
call sub_45f2c5
mov [ esi + 0x9c0 ] ebx
mov [ esi + 0x8 ] 0x1
jmp r-xdata
push 0x0
push 0xffffffff
push 0xffffffff
push r--data
push 0x0
push esi
mov [ esi + 0x9c0 ] 0x4
call sub_45f2c5
add [ esp + 0x4c ] edi
inc ebp
cmp ebp [ esi + 0x9c0 ]
jle r-xdata
mov edx [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebp
push edx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov edi [ esp + 0x50 ]
push edi
call [ SetForegroundWindow@IAT ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esi ]
push 0x0
push edi
push edx
push eax
push 0x0
push ecx
call [ TrackPopupMenuEx@IAT ]
push 0x0
push 0x0
push 0x0
push edi
call [ PostMessageW@IAT ]
mov eax esi
call sub_401e70
mov eax [ esi ]
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x4
push eax
mov [ rw-data ] 0x1
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x34 ] 0x8
call [ SetMenuItemInfoW@IAT ]
push 0xfffffff3
jmp r-xdata
test [ esp + 0x24 ] 0x1000
je r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ eax ]
mov edx [ ecx ]
cmp edx [ esi ]
je r-xdata
push ebp
push esi
call sub_453ab0
sub_468387
sub esp 0x14
push ebx
mov ebx [ esp + 0x30 ]
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ esp + 0x3c ] 0x1
cmp [ ebp + 0x4 ] esi
jne r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
mov [ ebx ] 0x0
mov [ eax ] 0x0
mov [ ecx ] 0x0
mov [ edx ] 0x0
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
mov eax [ esp + 0x30 ]
mov [ eax ] 0x1
inc esi
jmp r-xdata
cmp ax 0x5e
je r-xdata
push esi
push ebp
call sub_438a19
movzx eax [ eax ]
cmp ax 0x2b
je r-xdata
cmp ax 0x2b
jne r-xdata
cmp ax 0x21
je r-xdata
cmp ax 0x5e
jne r-xdata
cmp ax 0x23
jne r-xdata
cmp ax 0x21
jne r-xdata
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x1
inc esi
jmp r-xdata
mov eax esi
push eax
inc esi
push ebp
mov [ esp + 0x30 ] esi
call sub_438a19
movzx eax [ eax ]
cmp ax 0x7b
jne r-xdata
cmp ax 0x23
jne r-xdata
mov edx [ esp + 0x38 ]
mov [ edx ] 0x1
inc esi
jmp r-xdata
push eax
call [ VkKeyScanW@IAT ]
mov ecx [ esp + 0x2c ]
cwde
mov [ ecx ] eax
test eax 0x200
je r-xdata
mov eax 0x40
lea ecx [ esp + 0x10 ]
call sub_401400
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push ebp
push 0x7d
call sub_45f717
test al al
je r-xdata
inc esi
jmp r-xdata
mov [ ebx ] 0x1
test eax 0x400
je r-xdata
mov edx [ esp + 0x34 ]
mov [ edx ] 0x1
lea ecx [ esp + 0x10 ]
mov [ esp + 0x3c ] 0x0
call sub_402620
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edi * 4 + rw-data ]
push edx
push eax
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
test eax 0x100
je r-xdata
mov ecx [ esp + 0x38 ]
mov [ ecx ] 0x1
mov eax [ esp + 0x2c ]
and [ eax ] 0xff
mov al [ esp + 0x3c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
cmp edi 0x62
jne r-xdata
inc edi
cmp edi 0x62
jl r-xdata
mov edx [ esp + 0x30 ]
mov [ edx ] 0x1
cmp [ edi + rw-data ] 0x0
je r-xdata
xor edi edi
lea esi [ esp + 0x10 ]
call sub_401be0
movzx ecx [ eax ]
push ecx
call [ VkKeyScanW@IAT ]
mov edx [ esp + 0x2c ]
cwde
mov [ edx ] eax
test eax 0x200
je r-xdata
movzx ecx [ edi + rw-data ]
mov edx [ esp + 0x2c ]
mov [ edx ] ecx
test eax 0x400
je r-xdata
mov ecx [ esp + 0x34 ]
mov [ ecx ] 0x1
test eax 0x100
je r-xdata
mov edx [ esp + 0x38 ]
mov [ edx ] 0x1
lea ecx [ esp + 0x10 ]
call sub_402620
jmp r-xdata
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x10 ]
mov [ eax ] 0x1
call sub_402620
jmp r-xdata
sub_46855f
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0x34 ]
sub esp 0x10
cmp edx ecx
push esi
mov esi [ esp + 0x20 ]
push edi
jl r-xdata
lea edi [ esp + 0x24 ]
push edi
push edx
mov edx [ eax ]
push ecx
mov ecx [ eax + 0x2c ]
push ecx
push edx
call sub_43212f
mov edi [ esp + 0x38 ]
add esp 0x14
push edi
lea eax [ esp + 0xc ]
push eax
call sub_4453c4
push esi
lea ecx [ esp + 0xc ]
push ecx
call sub_46015f
lea esi [ esp + 0x8 ]
call sub_401330
push edi
call [ rw-data ]
add esp 0x4
pop edi
pop esi
add esp 0x10
retn 0xc
or eax 0xffffffff
xor edi edi
call sub_40c740
pop edi
pop esi
add esp 0x10
retn 0xc
sub_4685d4
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
cmp [ esi + 0x24 ] 0x0
push edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov edi [ esp + 0x2c ]
call sub_401a30
mov eax [ esp + 0x28 ]
push 0x1
push eax
push esi
call sub_44ca28
mov ebx eax
test ebx ebx
jle r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c060
xor ebp ebp
test ebx ebx
jle r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push esi
call sub_46855f
mov esi [ esp + 0x2c ]
lea edi [ esp + 0x10 ]
call sub_40d970
inc ebp
cmp ebp ebx
jl r-xdata
mov esi [ esp + 0x24 ]
sub_46865b
sub esp 0x24
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
mov edi [ esp + 0x38 ]
mov [ esp + 0x10 ] 0xffffffff
call sub_401060
mov eax [ esp + 0x3c ]
lea ebx [ esi + 0x14 ]
push ebx
push eax
call sub_454125
mov eax [ ebx ]
lea ecx [ esp + 0x38 ]
push ecx
mov ecx [ esi + 0x3c ]
lea edx [ esp + 0x38 ]
push edx
push ecx
push eax
call sub_461e60
add esp 0x10
mov [ esi + 0x24 ] eax
test eax eax
jne r-xdata
lea ebx [ esi + 0x30 ]
push ebx
push eax
call sub_43f905
mov eax [ ebx ]
inc eax
lea eax [ eax + eax * 2 ]
xor ecx ecx
mov [ ebx ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0xc
mov [ esi + 0x2c ] eax
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x24
retn 0xc
mov eax [ ebx ]
mov edx [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x1c ] edx
call sub_4453c4
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x24 ] 0xffffffff
mov [ esp + 0x28 ] 0xffffffff
call sub_445450
lea esi [ esp + 0x20 ]
call sub_401330
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
mov [ edi ] edx
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x24
retn 0xc
sub_468744
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x10 ]
cmp ecx 0x110
ja r-xdata
sub ecx 0x111
je r-xdata
je r-xdata
movzx ecx si
sub ecx 0x1
je r-xdata
sub ecx 0x2
jne r-xdata
cmp [ eax + 0x54 ] 0x0
jne r-xdata
cmp ecx 0x5
je r-xdata
push eax
call sub_46032b
mov eax 0x1
pop esi
retn 0x10
sub ecx 0x1
je r-xdata
xor eax eax
pop esi
retn 0x10
push esi
push eax
call sub_4603bb
mov eax 0x1
pop esi
retn 0x10
push eax
call sub_4545c9
pop esi
retn 0x10
mov ecx [ esp + 0x8 ]
mov [ eax + 0x54 ] ecx
mov ecx edx
shr ecx 0x10
push ecx
movzx edx dx
push edx
push esi
push eax
call sub_437db1
mov eax 0x1
pop esi
retn 0x10
cmp ecx 0x24
jne r-xdata
push eax
call sub_460309
mov eax 0x1
pop esi
retn 0x10
mov [ edx + 0x18 ] 0xbe
mov [ edx + 0x1c ] 0x72
mov eax 0x1
pop esi
retn 0x10
sub_46884b
sub esp 0x34
push ebx
mov ebx [ esp + 0x3c ]
push esi
push edi
lea ecx [ esp + 0x10 ]
call sub_40c060
lea ecx [ esp + 0x20 ]
call sub_40c060
push ebx
call sub_437bfd
test al al
jne r-xdata
push r--data
mov eax [ ebx ]
push r--data
push eax
call sub_4115d0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx ]
push r--data
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx ]
push 0x7
push r--data
push eax
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
push r--data
jmp r-xdata
mov eax [ ebx ]
push 0x7
push r--data
push eax
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
push 0xffffffff
push 0x7
jmp r-xdata
lea eax [ esp + 0x14 ]
call sub_4021e0
mov eax [ ebx ]
push 0xa
push r--data
push eax
call sub_4136bc
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
push 0xffffffff
push 0x7
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
push ebx
call sub_460976
push eax
lea esi [ esp + 0x24 ]
call sub_40df50
lea ecx [ esp + 0x30 ]
call sub_402620
push esi
call sub_460784
push esi
lea eax [ esp + 0x14 ]
call sub_40c140
jmp r-xdata
mov eax [ ebx ]
push r--data
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x14 ]
call sub_4021e0
push 0xffffffff
push 0xa
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
lea eax [ esp + 0x10 ]
push eax
mov esi ebx
call sub_40df50
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
pop ebx
add esp 0x34
retn 0x4
push r--data
jmp r-xdata
sub_4689b5
sub esp 0x14
lea ecx [ esp ]
call sub_40c060
mov ecx [ esp + 0x18 ]
lea eax [ esp ]
push eax
push ecx
call sub_460898
mov edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x4 ]
push eax
call sub_44589c
lea ecx [ esp ]
cmp eax 0xffffffff
je r-xdata
call sub_402620
xor al al
add esp 0x14
retn 0x8
call sub_402620
mov al 0x1
add esp 0x14
retn 0x8
sub_4689ff
sub esp 0x28
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
xor ebx ebx
push edi
mov edi [ esp + 0x44 ]
lea ecx [ esp + 0x18 ]
mov [ ebp + 0x88 ] ebx
mov [ ebp + 0xd8 ] ebx
call sub_40c060
lea ecx [ esp + 0x28 ]
call sub_40c060
push edi
call sub_437bfd
test al al
je r-xdata
push ebx
push edi
call sub_438a19
cmp [ eax ] 0x5b
jne r-xdata
mov eax [ esp + 0x40 ]
cmp [ ebp + 0x88 ] ebx
jne r-xdata
mov esi [ edi + 0x4 ]
lea ecx [ esi - 0x1 ]
push ecx
push edi
call sub_438a19
cmp [ eax ] 0x5d
jne r-xdata
test [ ebp + 0x88 ] 0x8
je r-xdata
push edi
lea esi [ ebp + 0x9c ]
mov [ ebp + 0x88 ] 0x8
call sub_40df50
add esi 0xfffffffe
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x44 ] esi
lea esp [ esp ]
mov eax [ esp + 0x40 ]
mov edi [ EnumChildWindows@IAT ]
push ebp
push sub_460e67
push eax
mov [ ebp + 0x130 ] ebx
call edi
cmp [ ebp + 0xd8 ] ebx
jne r-xdata
mov eax [ ebp + 0xa0 ]
mov [ ebp + 0x134 ] eax
lea edi [ eax - 0x1 ]
mov [ ebp + 0x138 ] ebx
cmp eax ebx
je r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0xd8 ]
cmp eax ebx
je r-xdata
test [ ebp + 0x88 ] 0x8
je r-xdata
cmp edi ebx
jl r-xdata
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
or [ ebp + 0x88 ] 0x1
lea ecx [ esp + 0x28 ]
push ecx
lea esi [ ebp + 0x8c ]
call sub_40df50
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_402620
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x28
retn 0xc
jmp r-xdata
lea ecx [ ebp + 0x9c ]
push ecx
lea esi [ ebp + 0xbc ]
mov [ ebp + 0x130 ] ebx
mov [ ebp + 0x88 ] 0x4
call sub_40df50
mov edx [ esp + 0x40 ]
push ebp
push sub_460e67
push edx
call edi
lea esi [ ebp + 0x9c ]
nop
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
or [ ebp + 0x88 ] 0x8
lea eax [ esp + 0x28 ]
push eax
lea esi [ ebp + 0x9c ]
call sub_40df50
jmp r-xdata
mov edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
push edi
call sub_460ed4
test al al
je r-xdata
push eax
push ebp
call sub_44cc94
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_402620
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0xc
inc [ ebp + 0x138 ]
cmp edi ebx
jge r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
or [ ebp + 0x88 ] 0x10
lea esi [ ebp + 0xec ]
call sub_401060
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_46865b
cmp [ eax ] ebx
call sub_401be0
movzx eax [ eax ]
push eax
call sub_41349d
add esp 0x4
dec edi
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x28 ]
or [ ebp + 0x88 ] 0x20
push edx
call sub_413431
add esp 0x4
mov [ ebp + 0xcc ] eax
jmp r-xdata
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
or [ ebp + 0x88 ] 0x400
lea ecx [ esp + 0x28 ]
push ecx
lea esi [ ebp + 0xac ]
call sub_40df50
jmp r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x28 ]
or [ ebp + 0x88 ] 0x40
push eax
call sub_413431
add esp 0x4
mov [ ebp + 0xdc ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x28 ]
or [ ebp + 0x88 ] 0x80
push edx
call sub_413431
add esp 0x4
mov [ ebp + 0xe0 ] eax
jmp r-xdata
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esp + 0x28 ]
or [ ebp + 0x88 ] 0x100
push ecx
call sub_413431
add esp 0x4
mov [ ebp + 0xe4 ] eax
jmp r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x28 ]
or [ ebp + 0x88 ] 0x200
push eax
call sub_413431
add esp 0x4
mov [ ebp + 0xe8 ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x28 ]
or [ ebp + 0x88 ] 0x2
push edx
call sub_413431
add esp 0x4
mov [ ebp + 0xd0 ] eax
jmp r-xdata
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_44cd47
add esp 0x8
test al al
jmp r-xdata
or [ ebp + 0x88 ] 0x4
lea ecx [ esp + 0x28 ]
push ecx
lea esi [ ebp + 0xbc ]
call sub_40df50
jmp r-xdata
je r-xdata
sub_468e1b
mov eax [ esp + 0x8 ]
sub esp 0xc
push ebx
mov bl [ esp + 0x1c ]
push esi
push edi
mov edi [ esp + 0x1c ]
push eax
push edi
call sub_46128b
mov esi eax
test esi esi
je r-xdata
xor al al
pop edi
pop esi
pop ebx
add esp 0xc
retn 0xc
mov ecx [ edi ]
push 0xf000
push esi
push 0x1127
push ecx
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
cmp eax 0xffffffff
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x1
jne r-xdata
test eax eax
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
push edi
call sub_438a5d
test al al
je r-xdata
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
push 0x1
push 0x0
push edi
call sub_438ead
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0xc
retn 0xc
sub_468ea3
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push esi
call sub_46128b
test eax eax
jne r-xdata
mov ecx [ esi ]
push 0xf000
push eax
push 0x1127
push ecx
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
pop esi
retn 0x8
pop esi
retn 0x8
sub_468ed7
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
push esi
call sub_46128b
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] 0x0
mov ecx 0x2
jne r-xdata
xor al al
pop esi
pop ecx
retn 0xc
push eax
push ecx
mov ecx [ esi ]
push 0x1102
push ecx
call [ SendMessageW@IAT ]
test eax eax
setne al
pop esi
pop ecx
retn 0xc
mov ecx 0x1
sub_468f1e
sub esp 0xb0
push ebx
push ebp
mov ebp [ esp + 0xbc ]
push esi
mov esi [ esp + 0xc8 ]
mov eax [ esi ]
mov edx [ esi + 0x8 ]
mov ebx ecx
mov ecx [ esi + 0x4 ]
mov [ esp + 0x20 ] eax
mov eax [ esi + 0xc ]
inc [ eax ]
mov [ esp + 0x24 ] ecx
push edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd4 ] 0x0
mov [ esp + 0x2c ] edx
mov [ esp + 0x30 ] eax
call sub_40c060
test ebp ebp
je r-xdata
lea ecx [ esp + 0x14 ]
call sub_402620
lea ecx [ esp + 0x24 ]
call sub_402620
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0xb0
retn 0x14
mov eax [ ebx ]
push ebp
push 0x4
push 0x110a
push eax
call [ SendMessageW@IAT ]
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
cmp ebp [ esp + 0xc8 ]
je r-xdata
push esi
call sub_437bfd
test al al
jne r-xdata
push esi
call sub_437bfd
test al al
jne r-xdata
mov eax [ ebx ]
push ebp
push 0x1
push 0x110a
push eax
call [ SendMessageW@IAT ]
inc [ esp + 0xd4 ]
mov ebp eax
test ebp ebp
jne r-xdata
cmp [ esp + 0xd0 ] 0x0
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
cmp [ esp + 0xd0 ] 0x0
je r-xdata
mov edi r--data
mov eax esi
call sub_40d330
lea eax [ esp + 0x14 ]
push eax
push ebp
push ebx
call sub_4610cb
lea ecx [ esp + 0x14 ]
push ecx
mov eax esi
call sub_40c140
mov edx [ esp + 0xd4 ]
push 0xa
lea ecx [ esp + 0x3c ]
push ecx
push edx
call sub_413308
add esp 0xc
push 0x23
mov eax esi
call sub_403470
lea edi [ esp + 0x38 ]
mov eax esi
call sub_40d330
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push ebp
push ebx
call sub_4610cb
lea ecx [ esp + 0x14 ]
push ecx
mov eax esi
call sub_40c140
mov edx [ esp + 0xd4 ]
push 0xa
lea ecx [ esp + 0x3c ]
push ecx
push edx
call sub_413308
add esp 0xc
push 0x23
mov eax esi
call sub_403470
lea edi [ esp + 0x38 ]
mov eax esi
call sub_40d330
jmp r-xdata
lea ecx [ esp + 0x14 ]
call sub_402620
lea ecx [ esp + 0x24 ]
call sub_402620
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0xb0
retn 0x14
lea edx [ esp + 0x24 ]
push edx
call sub_40df50
mov edx [ esp + 0xd0 ]
mov eax [ esp + 0xc8 ]
mov ecx [ esp + 0x34 ]
push 0x0
push edx
push esi
push eax
push ecx
mov ecx ebx
call sub_468f1e
test al al
jne r-xdata
sub_4690f6
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ SendMessageW@IAT ]
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi ]
push edi
push 0x0
push 0x9
push 0x110a
push eax
call ebp
mov edi eax
test edi edi
jne r-xdata
push r--data
mov eax ebx
call sub_4021e0
mov ecx [ esp + 0x1c ]
mov edx [ esi ]
push 0x0
push ecx
push ebx
push edi
push 0x0
push 0x0
push 0x110a
push edx
call ebp
push eax
mov ecx esi
call sub_468f1e
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
xor al al
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_469170
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push eax
push edi
call sub_46128b
mov esi eax
test esi esi
jne r-xdata
mov ecx [ edi ]
mov ebx [ SendMessageW@IAT ]
push esi
push 0x5
push 0x110b
push ecx
call ebx
mov edx [ edi ]
push esi
push 0x9
push 0x110b
push edx
call ebx
pop edi
test eax eax
pop esi
setne al
pop ebx
retn 0x8
xor al al
pop edi
pop esi
pop ebx
retn 0x8
sub_4691bb
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
push r--data
mov eax esi
call sub_4021e0
mov eax [ esp + 0x10 ]
push eax
push edi
call sub_46128b
test eax eax
jne r-xdata
push esi
push eax
push edi
call sub_4610cb
pop edi
pop esi
retn 0xc
xor al al
pop edi
pop esi
retn 0xc
sub_4691f4
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov ecx 0x14d
mov [ esp + 0x28 ] 0x9
jmp r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x14
retn 0x8
mov ecx 0x18c
mov [ esp + 0x28 ] 0x2
mov edx [ esp + 0x2c ]
mov eax [ edx ]
mov esi [ SendMessageW@IAT ]
push eax
mov eax [ ebp ]
push 0xffffffff
push ecx
push eax
call esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp ]
mov edi [ __import_lookup_table_10(USER32:GetDlgCtrlID) ]
push eax
push eax
call edi
mov edx [ ebp ]
mov ebx [ __import_lookup_table_10(USER32:GetParent) ]
movzx ecx ax
or ecx 0x10000
push ecx
push 0x111
push edx
call ebx
push eax
call esi
mov eax [ ebp ]
push eax
push eax
call edi
movzx ecx [ esp + 0x2c ]
mov edx [ ebp ]
movzx eax ax
shl ecx 0x10
or eax ecx
push eax
push 0x111
push edx
call ebx
push eax
call esi
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
sub_4692e4
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov eax 0x147
lea edi [ eax + 0x2 ]
mov [ esp + 0x28 ] 0x148
jmp r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
mov eax 0x188
lea edi [ eax + 0x2 ]
mov [ esp + 0x28 ] 0x189
mov edx [ ebp ]
mov ebx [ SendMessageW@IAT ]
push 0x0
push 0x0
push eax
push edx
call ebx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp ]
push 0x0
push esi
push edi
push eax
call ebx
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
add eax 0x101
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ ebp ]
add esp 0x4
mov edi eax
mov eax [ esp + 0x28 ]
push edi
push esi
push eax
push ecx
call ebx
cmp eax 0xffffffff
mov eax [ esp + 0x2c ]
jne r-xdata
push edi
call sub_4021e0
push edi
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x14
retn 0x8
push r--data
call sub_4021e0
push edi
call sub_4112ef
add esp 0x4
sub_4693f0
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov eax 0x14e
mov [ esp + 0x28 ] 0x9
jmp r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x14
retn 0x8
mov eax 0x186
mov [ esp + 0x28 ] 0x2
mov edx [ esp + 0x2c ]
mov esi [ SendMessageW@IAT ]
push 0x0
push edx
push eax
mov eax [ ebp ]
push eax
call esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp ]
mov edi [ __import_lookup_table_10(USER32:GetDlgCtrlID) ]
push eax
push eax
call edi
mov edx [ ebp ]
mov ebx [ __import_lookup_table_10(USER32:GetParent) ]
movzx ecx ax
or ecx 0x10000
push ecx
push 0x111
push edx
call ebx
push eax
call esi
mov eax [ ebp ]
push eax
push eax
call edi
movzx ecx [ esp + 0x2c ]
mov edx [ ebp ]
movzx eax ax
shl ecx 0x10
or eax ecx
push eax
push 0x111
push edx
call ebx
push eax
call esi
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
sub_4694de
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov ecx 0x158
jmp r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x10
retn 0xc
mov ecx 0x1a2
mov edx [ esp + 0x28 ]
mov eax [ edx ]
push eax
mov eax [ ebp ]
push 0xffffffff
push ecx
push eax
call [ SendMessageW@IAT ]
mov ecx [ esp + 0x2c ]
cmp eax 0xffffffff
mov [ ecx ] eax
setne al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
sub_46956f
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov eax 0x144
jmp r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x14
retn 0x8
mov eax 0x182
mov edx [ esp + 0x2c ]
push 0x0
push edx
push eax
mov eax [ ebp ]
push eax
call [ SendMessageW@IAT ]
test eax eax
setne al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
sub_4695f7
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov edi r--data
lea esi [ esp + 0x10 ]
call sub_401b70
push esi
push ebp
call sub_4689b5
mov ecx esi
mov bl al
call sub_402620
test bl bl
je r-xdata
mov ecx 0x143
jmp r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x14
retn 0x8
mov ecx 0x180
mov edx [ esp + 0x2c ]
mov eax [ edx ]
push eax
mov eax [ ebp ]
push 0x0
push ecx
push eax
call [ SendMessageW@IAT ]
test eax eax
setne al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
sub_469681
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov ebx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov edi [ edx ]
mov [ esp + 0x18 ] eax
cmp ebx 0x2
jne r-xdata
cmp ebx 0x1
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
call [ __import_lookup_table_10(USER32:GetFocus) ]
push eax
mov [ esp + 0x1c ] eax
call [ __import_lookup_table_10(USER32:GetDlgCtrlID) ]
mov ebx eax
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_449e31
mov ecx [ edi + 0x1b8 ]
push ecx
call sub_413762
add esp 0x4
cmp ebx eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0xf060
push 0x112
push esi
call [ PostMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp esi 0x1
jne r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
mov [ edi + 0x1b8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
push rw-data
call sub_4421c1
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
movzx edx si
movzx eax bx
push ecx
mov ecx [ ebp + 0x8 ]
shl edx 0x10
or edx eax
push edx
push 0x111
push ecx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0x14 ]
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push ecx
push rw-data
call sub_44213b
test al al
jne r-xdata
push 0x0
movzx edx bx
push edx
push 0x111
push esi
call [ PostMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edi [ esp + 0x14 ]
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0xf
jne r-xdata
mov eax [ edi + 0x1b8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push esi
push ecx
call sub_461f2e
test al al
jne r-xdata
push 0x208
call sub_41171a
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov edi [ edx + 0x8 ]
add esp 0x4
push 0x2c
lea eax [ esp + 0x28 ]
push 0x0
push eax
mov [ esp + 0x2c ] 0x30
call sub_4131f0
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add esp 0xc
lea edx [ esp + 0x20 ]
push edx
push 0x0
push eax
push edi
mov [ esp + 0x34 ] 0x10
mov [ esp + 0x54 ] ecx
mov [ esp + 0x58 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
movzx eax si
movzx ecx bx
push edx
mov edx [ ebp + 0x8 ]
shl eax 0x10
or eax ecx
push eax
push 0x111
push edx
call [ DefDlgProcW@IAT ]
push 0x0
push eax
mov [ edi + 0x1b8 ] 0x0
call sub_461f2e
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_4112ef
add esp 0x4
test [ esp + 0x28 ] 0x200
je r-xdata
push edi
mov [ esp + 0x1c ] 0xffffffff
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
mov eax [ esp + 0x18 ]
lea esp [ esp ]
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ esp + 0x18 ] esi
sub esi 0x1
js r-xdata
inc esi
cmp esi ebx
jl r-xdata
mov edx [ esp + 0x14 ]
inc esi
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x18 ]
inc esi
cmp esi ebx
mov [ esp + 0x44 ] edx
jge r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push esi
push edi
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x10 ]
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push 0x400
push ecx
dec esi
push esi
push edx
push edi
call [ __import_lookup_table_10(USER32:CheckMenuRadioItem) ]
lea eax [ esp + 0x20 ]
push eax
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
sub esi 0x1
jns r-xdata
test [ esp + 0x28 ] 0x200
je r-xdata
cmp eax [ esp + 0x10 ]
jne r-xdata
inc esi
cmp esi ebx
jl r-xdata
test [ esp + 0x28 ] 0x200
je r-xdata
sub_469995
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
push esi
push rw-data
call sub_4421c1
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x24 ] 0x0
push esi
je r-xdata
cmp edi 0x8
jne r-xdata
movzx edx bx
movzx eax di
shl edx 0x10
or edx eax
push edx
push 0x115
push ebp
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
movzx eax bx
movzx ecx di
shl eax 0x10
or eax ecx
push eax
push 0x114
push ebp
call [ DefDlgProcW@IAT ]
cmp edi 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
cmp [ ecx + 0x88 ] 0x12
je r-xdata
mov edx [ rw-data ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x88 ] 0x16
jne r-xdata
push edi
push eax
call sub_461f2e
test al al
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
sub_469a3e
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_45302e
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_453063
push eax
mov ecx esi
call sub_40c760
push eax
call sub_4536fb
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
xor eax eax
pop esi
add esp 0xc
retn 0x8
sub_469b10
sub esp 0xc
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
push eax
mov edi ecx
call sub_45302e
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
push ecx
call sub_453063
push eax
mov ecx esi
call sub_40c760
push eax
call sub_45372a
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
add esp 0xc
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_453081
push eax
push edi
call sub_4646a2
test al al
jne r-xdata
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
mov eax 0x1
pop esi
add esp 0xc
retn 0x8
sub_469bed
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x4008c
call sub_425210
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
push edi
mov eax 0x400
lea ecx [ esp + 0x14 ]
call sub_401400
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
lea ecx [ esp + 0x3c ]
mov ebx eax
call sub_40c060
lea edi [ esp + 0x50 ]
call sub_40d4c0
mov edi r--data
lea esi [ esp + 0x24 ]
call sub_401b70
push esi
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
call sub_46865b
mov ecx esi
call sub_402620
push ebx
lea edx [ esp + 0x54 ]
push edx
call sub_4602eb
mov eax [ esp + 0x10 ]
xor esi esi
dec eax
xor edi edi
cmp [ ebx + 0x4 ] esi
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0xc ] esi
mov [ esp + 0x4c ] eax
jle r-xdata
cmp edi [ ebx + 0x4 ]
jge r-xdata
jmp r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ ebp + 0xc ]
call sub_40e6d0
lea ecx [ esp + 0x24 ]
call sub_434222
lea edi [ esp + 0x50 ]
call sub_401360
lea ecx [ esp + 0x3c ]
call sub_402620
lea ecx [ esp + 0x14 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
or eax 0xffffffff
lea ecx [ esp + 0x18 ]
call sub_40c170
sub esp 0x8
mov [ esp ] edi
mov [ esp + 0x4 ] 0xffffffff
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x5c ]
push edx
call sub_4541a1
cmp eax esi
jle r-xdata
mov eax [ esp + 0x28 ]
mov eax [ eax ]
mov ecx [ eax + 0x8 ]
mov esi [ eax ]
mov [ esp + 0x10 ] ecx
mov eax esi
sub eax edi
push edi
lea ecx [ esp + 0x18 ]
call sub_40c170
mov edi [ esp + 0x10 ]
push esi
lea edx [ edi + esi ]
push ebx
mov [ esp + 0x3c ] edx
call sub_438a19
cmp [ eax ] 0x25
jne r-xdata
push esi
push ebx
call sub_438a19
cmp [ eax ] 0x5c
jne r-xdata
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_438a19
cmp [ eax ] 0x25
jne r-xdata
mov edx [ esp + 0xc ]
cmp edx [ esp + 0x4c ]
je r-xdata
inc esi
push esi
push ebx
call sub_438a19
movzx eax [ eax ]
add eax 0xffffffa4
cmp eax 0x18
ja r-xdata
push 0x25
lea eax [ esp + 0x18 ]
call sub_403470
jmp r-xdata
mov edx [ esp + 0x34 ]
cmp edx [ ebx + 0x4 ]
mov edi edx
jl r-xdata
inc [ esp + 0xc ]
push edi
push esi
push ebx
lea eax [ esp + 0x48 ]
push eax
call sub_4608ce
mov edi [ esp + 0x40 ]
dec edi
lea esi [ esp + 0x3c ]
call sub_401be0
movzx eax [ eax ]
add eax 0xffffffbb
cmp eax 0x33
ja r-xdata
movzx ecx [ eax + lookup_table_469ef9 ]
jmp [ ecx * 4 + jump_table_469ee5 ]
xor esi esi
lea edi [ esp + 0x98 ]
lea eax [ esp + 0x14 ]
call sub_40d330
movzx ecx [ eax + lookup_table_469f25 ]
jmp [ ecx * 4 + jump_table_469f15 ]
push 0xa
lea eax [ esp + 0x18 ]
call sub_403470
jmp r-xdata
push 0xd
lea eax [ esp + 0x18 ]
call sub_403470
jmp r-xdata
push 0x9
lea eax [ esp + 0x18 ]
call sub_403470
jmp r-xdata
push 0x5c
lea eax [ esp + 0x18 ]
call sub_403470
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0xc ]
mov ecx [ eax + ecx * 4 ]
call sub_40c760
mov edx [ esp + 0x3c ]
push eax
push edx
lea eax [ esp + 0xa0 ]
push eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0xc ]
mov ecx [ edx + eax * 4 ]
call sub_40be90
mov ecx [ esp + 0x3c ]
sub esp 0x8
fstp [ esp ]
push ecx
lea edx [ esp + 0xa4 ]
push edx
call sub_41353a
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + edx * 4 ]
push 0xffff
push eax
call sub_453081
push eax
lea eax [ esp + 0x200a0 ]
push eax
call sub_41326a
mov eax [ esp + 0x48 ]
add esp 0xc
xor ecx ecx
lea edx [ esp + 0x20098 ]
push edx
mov [ esp + 0x4009a ] cx
push eax
lea ecx [ esp + 0xa0 ]
push ecx
call sub_41353a
add esp 0xc
sub_469f29
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add al [ ebx ]
add [ ebx ] eax
add eax [ ecx ]
sub esp 0x10
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jb r-xdata
mov ecx [ esp + 0x24 ]
push esi
push ecx
call sub_452dae
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov edi 0x1
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
mov edi eax
cmp edi 0x1
jl r-xdata
lea edx [ esp + 0xc ]
push edx
push ebx
call sub_454125
push esi
push ebx
call sub_45efe7
jmp r-xdata
cmp edi 0x4
jle r-xdata
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
push esi
push eax
call sub_452dae
mov ecx [ esp + 0xc ]
push esi
push ecx
push eax
call sub_410f70
add esp 0xc
lea esi [ esp + 0xc ]
call sub_401330
cmp edi 0x1
je r-xdata
lea esi [ esp + 0xc ]
call sub_40d500
cmp edi 0x1
jne r-xdata
cmp edi 0x4
je r-xdata
add esi esi
push esi
cmp edi 0x2
jne r-xdata
mov edx [ esp + 0x28 ]
push edx
call sub_452dae
mov ecx [ ebx ]
xor edx edx
mov edi eax
test esi esi
jbe r-xdata
mov eax [ esp + 0x28 ]
push eax
call sub_452dae
mov ecx [ ebx ]
push esi
push ecx
push eax
call sub_410f70
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push ebp
mov ebp edi
sub ebp ecx
movzx eax [ ecx + 0x1 ]
mov [ ecx + ebp ] al
movzx eax [ ecx ]
mov [ edi + edx + 0x1 ] al
add edx 0x2
add ecx 0x2
cmp edx esi
jb r-xdata
pop ebp
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
sub_46a07b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
mov [ esp + 0x10 ] ecx
call sub_4676a3
mov ebx [ edi + 0x4 ]
mov ecx [ ebx ]
push ecx
mov esi eax
call sub_443676
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jb r-xdata
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx 0x1
mov ecx [ ebx + 0x4 ]
call sub_40c760
mov ebx eax
cmp ebx 0x1
jl r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_46015f
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x24 ]
call sub_403f40
jmp r-xdata
cmp ebx 0x4
jle r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x10 ]
call sub_40e640
mov ecx edi
call sub_402620
lea esi [ esp + 0x20 ]
call sub_401330
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x2
je r-xdata
mov ecx edi
and ecx 0x80000001
jns r-xdata
cmp ebx 0x3
jne r-xdata
je r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
cmp ebx 0x1
je r-xdata
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea eax [ esp + 0x24 ]
push eax
call sub_443466
push edi
push esi
lea ecx [ esp + 0x28 ]
push ecx
call sub_4540ac
mov eax edi
lea ecx [ esp + 0x10 ]
call sub_401400
cmp ebx 0x1
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp ebx 0x2
jne r-xdata
push edi
call sub_41171a
add esp 0x4
xor ecx ecx
mov ebx eax
test edi edi
jle r-xdata
mov eax edi
cdq
sub eax edx
mov edi eax
sar edi 0x1
mov eax edi
lea ecx [ esp + 0x20 ]
call sub_401400
push 0x0
push esi
mov eax edi
lea ecx [ esp + 0x28 ]
call sub_403fb0
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e640
mov ecx edi
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax edi
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov eax esi
lea ecx [ esp + 0x20 ]
call sub_401400
push 0x0
push ebx
mov eax esi
lea ecx [ esp + 0x28 ]
call sub_403fb0
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e640
push ebx
call sub_4112ef
add esp 0x4
mov ecx edi
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx ebx
sub edx esi
mov eax esi
mov [ esp + 0xc ] edx
jmp r-xdata
movzx edx [ eax + 0x1 ]
mov esi [ esp + 0xc ]
mov [ esi + eax ] dl
movzx edx [ eax ]
mov [ ebx + ecx + 0x1 ] dl
add ecx 0x2
add eax 0x2
cmp ecx edi
jl r-xdata
sub_46a296
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_4676a3
mov esi [ edi + 0x4 ]
mov ecx [ esi ]
push ecx
mov [ esp + 0x18 ] eax
call sub_443676
mov ecx [ esi + 0x4 ]
mov ebp eax
or ebx 0xffffffff
call sub_40c760
mov esi eax
dec esi
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
cmp esi ebp
jg r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov ebx eax
mov esi ebp
test esi esi
jge r-xdata
sub ebp esi
mov ebx ebp
mov eax ebp
sub eax esi
cmp ebx eax
jle r-xdata
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x18 ]
push ebx
push ecx
call sub_452dae
mov edx [ esp + 0x14 ]
push ebx
add esi edx
push esi
push eax
call sub_410f70
add esp 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
sub_46a31a
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
push ecx
call sub_4676a3
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_443676
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_46a351
push ecx
push ebx
mov ebx [ esp + 0xc ]
mov eax [ ebx + 0x4 ]
push ebp
push esi
mov esi ecx
mov ecx [ eax ]
push edi
call sub_40c760
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
lea ebp [ esi + 0x468 ]
test eax eax
jge r-xdata
sub esp 0x8
fstp [ esp ]
push ebp
lea ecx [ esp + 0x1c ]
push ecx
call sub_44a43b
push ecx
lea eax [ esp + 0x14 ]
mov [ esp ] 0x0
call sub_40f090
test al al
je r-xdata
fadd [ r--data ]
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x2
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
add ecx 0x18
push ecx
call sub_4356cd
mov edx [ esp + 0x10 ]
mov eax [ edx ]
push eax
call sub_4356e7
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
lea eax [ esp + 0x10 ]
push eax
push ebp
call sub_457463
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x4 ]
push esi
mov [ esp + 0x1c ] 0x0
call sub_444279
push esi
test al al
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx ]
push eax
call sub_44b791
test al al
jne r-xdata
call sub_453081
mov ebx eax
call sub_40f580
mov edi eax
push edi
mov [ esp + 0x1c ] 0x1
call sub_4137e0
add esp 0x4
call sub_4676a3
mov edx [ ebx + 0x4 ]
mov edi eax
mov eax [ edx + 0x4 ]
push eax
call sub_443676
jmp r-xdata
push edi
call sub_4112ef
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov ecx [ ecx ]
push eax
push edi
push ecx
call sub_443aa6
mov esi [ esp + 0x1c ]
mov ebx eax
call sub_4092c0
cmp [ esp + 0x18 ] 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
je r-xdata
add esp 0x4
sub_46a49d
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi r--data
mov ebx esi
mov ebp ecx
call sub_40e6d0
mov ebx [ esp + 0x24 ]
mov edi [ ebx + 0x8 ]
test edi edi
jbe r-xdata
mov [ esp + 0x28 ] 0x0
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_4434cc
mov [ esp + 0x28 ] al
jmp r-xdata
mov [ esp + 0x24 ] 0x0
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_4434cc
mov [ esp + 0x24 ] al
jmp r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push eax
call sub_44b600
test al al
je r-xdata
mov eax [ ebp + 0x474 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x474 ]
push ecx
call sub_435792
mov edx [ ebp ]
mov [ ebp + 0x474 ] 0x0
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
cmp [ esp + 0x28 ] 0x0
je r-xdata
mov edx [ ebp + 0x474 ]
push esi
push edx
call sub_467715
mov ecx [ ebp + 0x474 ]
push 0x1
push esi
push ecx
call sub_4676c4
jmp r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push ebx
add eax ebp
call sub_404120
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x8
lea ecx [ esp + 0x10 ]
call sub_40c060
push ebx
push esi
call sub_4676a3
push eax
call sub_4359c4
add esp 0x8
mov edi eax
push 0x0
push edi
mov eax ebx
lea ecx [ esp + 0x18 ]
call sub_403fb0
push edi
call sub_4112ef
add esp 0x4
lea edi [ esp + 0x10 ]
call sub_40e640
mov ecx edi
call sub_402620
cmp [ esp + 0x24 ] 0x0
mov ebx eax
jne r-xdata
sub_46a5e3
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x2c ]
push edi
mov edi r--data
mov ebx esi
call sub_40e6d0
mov eax [ ebp + 0x4 ]
mov ecx [ eax ]
call sub_40be90
fstp [ esp + 0x14 ]
mov edi [ ebp + 0x8 ]
cmp edi 0x1
jbe r-xdata
mov [ esp + 0x30 ] 0x0
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_4434cc
mov [ esp + 0x30 ] al
jmp r-xdata
mov [ esp + 0x2c ] 0x0
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_4434cc
mov [ esp + 0x2c ] al
jmp r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x18
mov edi [ esp + 0x28 ]
mov ecx [ edi ]
call [ esp + 0x3c ]
test al al
je r-xdata
mov ebx [ esp + 0x28 ]
fld [ esp + 0x14 ]
sub esp 0x8
fstp [ esp ]
lea ebp [ ebx + 0x468 ]
push ebp
lea edx [ esp + 0x34 ]
push edx
mov [ esp + 0x20 ] ebp
call sub_44a43b
push ecx
lea eax [ esp + 0x2c ]
mov [ esp ] 0x0
call sub_40f090
test al al
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
cmp [ esp + 0x30 ] 0x0
mov ecx [ edi ]
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x18
lea edx [ esp + 0x28 ]
push edx
push ebp
call sub_457463
push esi
call [ esp + 0x3c ]
push 0x1
push esi
call [ esp + 0x3c ]
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push ebp
add eax ebx
call sub_404120
mov ebp [ esp + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x14 ]
call sub_40c060
push ebp
push esi
call sub_4676a3
push eax
call sub_4359c4
add esp 0x8
mov edi eax
push 0x0
push edi
mov eax ebp
lea ecx [ esp + 0x1c ]
call sub_403fb0
push edi
call sub_4112ef
add esp 0x4
lea edi [ esp + 0x14 ]
call sub_40e640
mov ecx edi
call sub_402620
mov edi [ esp + 0x28 ]
cmp [ esp + 0x2c ] 0x0
mov ebp eax
jne r-xdata
mov edi [ edi ]
push edi
call sub_44b791
test al al
jne r-xdata
sub_46a75f
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x805c
call sub_425210
push ebx
push esi
mov [ esp + 0x10 ] ecx
push edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x5c ] 0x3fff
call sub_40c060
lea ecx [ esp + 0x24 ]
call sub_40c060
lea ecx [ esp + 0x4c ]
call sub_40c060
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b70
lea edx [ esp + 0x5c ]
push edx
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x4c ]
push ecx
call sub_462dec
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
sub esp 0x10
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x40 ]
mov [ esp ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
inc [ ecx ]
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_462bf3
test al al
jne r-xdata
lea eax [ esp + 0x34 ]
push eax
call sub_437bfd
mov [ esp + 0x13 ] al
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x34 ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x4c ]
call sub_402620
lea ecx [ esp + 0x24 ]
call sub_402620
lea ecx [ esp + 0x34 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
push 0x0
lea eax [ esp + 0x50 ]
push eax
push 0x0
lea edx [ esp + 0x6c ]
push edx
lea eax [ esp + 0x74 ]
push eax
call sub_40c760
mov ecx [ esp + 0x34 ]
dec eax
push eax
push ecx
call [ __import_lookup_table_1(ADVAPI32:RegEnumValueW) ]
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x1
add eax ecx
call sub_4040e0
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax ecx
call sub_4040e0
jmp r-xdata
lea edi [ esp + 0x60 ]
call sub_40e6d0
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
mov edx [ esp + 0x48 ]
mov eax [ eax + 0x4 ]
push 0x0
push edx
add eax ecx
call sub_404120
mov ecx [ esp + 0x1c ]
mov esi [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
push ecx
call esi
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax ecx
call sub_4040e0
mov eax [ esp + 0x1c ]
mov esi [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
push eax
call esi
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
jmp r-xdata
mov edx [ esp + 0x44 ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x50 ]
or edx 0x20019
push edx
push 0x0
push ecx
push eax
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
push 0x0
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push edx
mov ecx [ esp + 0x18 ]
push ecx
jmp r-xdata
call esi
sub_46a98d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
push ebx
push esi
mov [ esp + 0xc ] ecx
push edi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x34 ] 0xff
call sub_40c060
lea ecx [ esp + 0x20 ]
call sub_40c060
lea ecx [ esp + 0x48 ]
call sub_40c060
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b70
lea ecx [ esp + 0x58 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x50 ]
push eax
call sub_462dec
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x38 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x3c ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
inc [ ecx ]
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x30 ]
push eax
call sub_462bf3
test al al
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
call sub_437bfd
mov [ esp + 0xf ] al
test al al
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
lea edx [ esp + 0x58 ]
push edx
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x44 ]
push eax
lea edx [ esp + 0x74 ]
push edx
call sub_40c760
dec eax
push eax
mov eax [ esp + 0x34 ]
push eax
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax ecx
call sub_4040e0
jmp r-xdata
mov ebx [ ebp + 0xc ]
lea edi [ esp + 0x60 ]
call sub_40e6d0
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax ecx
call sub_4040e0
jmp r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov edx [ esp + 0x30 ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x4c ]
or edx 0x20019
push edx
push 0x0
push ecx
push eax
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
mov esi [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call esi
mov eax [ esp + 0x18 ]
push eax
call esi
sub_46ab70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ebx ecx
push edi
lea ecx [ esp + 0x50 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] 0x0
call sub_40c060
lea ecx [ esp + 0x30 ]
call sub_40c060
lea ecx [ esp + 0x40 ]
call sub_40c060
lea ecx [ esp + 0x60 ]
call sub_40c060
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b70
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_462dec
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
sub esp 0x10
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp ] edx
mov edx [ esp + 0x48 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edi 0x1
add [ ecx ] edi
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_462bf3
test al al
jne r-xdata
lea eax [ esp + 0x50 ]
push eax
call sub_437bfd
mov [ esp + 0xe ] al
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jmp r-xdata
mov edi [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x50 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x60 ]
call sub_402620
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x50 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x20 ]
sub eax 0x1
je r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
call sub_404120
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
cmp [ esp + 0xe ] 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jne r-xdata
mov edi [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebx ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_404120
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax ebx
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jmp r-xdata
mov eax [ esp + 0x10 ]
push esi
push eax
call sub_4422b9
mov ecx [ esp + 0x18 ]
add esp 0x8
push ecx
mov [ esp + 0x13 ] al
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
cmp [ esp + 0xf ] 0x0
jne r-xdata
sub eax 0x1
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
jmp r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
or ecx 0x2001f
push ecx
push 0x0
push edx
push edi
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x24 ]
push eax
call sub_434153
test al al
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2
jmp r-xdata
cmp [ esp + 0xe ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
mov edx [ esp + 0x10 ]
push eax
push edx
call [ RegDeleteValueW@IAT ]
test eax eax
je r-xdata
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
mov eax [ esp + 0x40 ]
push eax
push edi
call [ __import_lookup_table_1(ADVAPI32:RegDeleteKeyW) ]
mov ecx [ esp + 0x40 ]
push 0x0
push esi
push ecx
push edi
lea edx [ esp + 0x34 ]
push edx
call sub_44229a
call eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov edx [ esp + 0x10 ]
push edx
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
call sub_4344a0
mov ecx [ ebx ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_404120
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2
test eax eax
je r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
call sub_404120
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xfffffffe
add eax ebx
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi ] 0x2
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi ] 0x0
jmp r-xdata
mov [ esi + 0x8 ] 0x1
sub_46aeaf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
mov [ esp + 0x10 ] ecx
push edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x1c ] 0x0
call sub_40c060
lea ecx [ esp + 0x38 ]
call sub_40c060
lea ecx [ esp + 0x58 ]
call sub_40c060
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x28 ] eax
cmp eax 0x1
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b70
lea ecx [ esp + 0x68 ]
push ecx
lea edx [ esp + 0x4c ]
push edx
lea eax [ esp + 0x60 ]
push eax
call sub_462dec
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x50 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x54 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x34 ]
mov edi 0x1
add [ ecx ] edi
push eax
call sub_462bf3
test al al
jne r-xdata
cmp eax 0x4
je r-xdata
lea eax [ esp + 0x48 ]
push eax
call sub_437bfd
mov [ esp + 0x13 ] al
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x48 ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x58 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x28 ] edi
jbe r-xdata
mov esi [ esp + 0x14 ]
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_404120
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push edi
add eax esi
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
cmp [ esp + 0x13 ] 0x0
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax esi
jmp r-xdata
mov eax [ esp + 0x18 ]
mov esi [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
push eax
call esi
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
mov ecx [ ebx + 0x4 ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
jmp r-xdata
lea ecx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x60 ]
push 0x0
or ecx 0x20006
push ecx
push 0x0
push r--data
push 0x0
push edx
push eax
call [ __import_lookup_table_1(ADVAPI32:RegCreateKeyExW) ]
test eax eax
je r-xdata
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] edi
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call esi
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
push eax
call sub_453081
push eax
call sub_4112d5
mov ebx [ ebx + 0x4 ]
mov ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x4 ]
add esp 0x4
lea eax [ eax + eax + 0x2 ]
push eax
push ecx
call sub_453081
push eax
push 0x2
push 0x0
push ebx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
mov ecx [ ebx + 0x4 ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_453081
push eax
call sub_4112d5
mov ebx [ ebx + 0x4 ]
mov ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x4 ]
add esp 0x4
lea eax [ eax + eax + 0x2 ]
push eax
push ecx
call sub_453081
push eax
push edi
push 0x0
push ebx
call sub_453081
push eax
mov eax [ esp + 0x2c ]
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
push eax
call sub_45302e
mov esi eax
xor ecx ecx
lea eax [ esi + 0x2 ]
mov [ esp + 0x28 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0xc ]
add esp 0x4
lea ecx [ esi + 0x1 ]
push ecx
push eax
call sub_453081
push eax
push edi
call sub_436328
xor edx edx
xor eax eax
add esp 0xc
mov [ edi + esi * 2 ] dx
mov [ edi + esi * 2 + 0x2 ] ax
test esi esi
jbe r-xdata
jmp r-xdata
add eax ecx
call sub_404120
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
push 0x4
lea ecx [ esp + 0x2c ]
push ecx
mov [ esp + 0x30 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x4
push 0x0
push eax
jmp r-xdata
je r-xdata
lea ebx [ ebx ]
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_443576
push 0x8
lea ecx [ esp + 0x2c ]
push ecx
mov [ esp + 0x30 ] eax
mov eax [ ebx + 0x4 ]
push 0xb
mov [ esp + 0x38 ] edx
mov eax [ eax + 0x4 ]
push 0x0
push eax
jmp r-xdata
call sub_453081
mov edx [ esp + 0x28 ]
push eax
push edx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
lea ecx [ esi + esi ]
push ecx
push edi
push 0x7
push 0x0
push eax
call sub_453081
mov edx [ esp + 0x28 ]
push eax
push edx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov esi [ esp + 0x28 ]
inc eax
cmp eax esi
jb r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] edi
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_4676a3
mov ebx [ ebx + 0x4 ]
mov esi eax
mov eax [ ebx + 0xc ]
mov ebx [ ebx + 0x4 ]
push eax
call sub_443676
push eax
push esi
push 0x3
push 0x0
push ebx
call sub_453081
push eax
mov eax [ esp + 0x2c ]
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
push edi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
call sub_404120
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ edi + eax * 2 ] 0xa
jne r-xdata
test esi esi
sub_46b39a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
mov [ esp + 0x18 ] ecx
push edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x20 ] 0x0
call sub_40c060
lea ecx [ esp + 0x38 ]
call sub_40c060
lea ecx [ esp + 0x58 ]
call sub_40c060
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
sub esp 0x10
mov edi eax
mov esi esp
call sub_401b70
lea edx [ esp + 0x68 ]
push edx
lea eax [ esp + 0x4c ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
call sub_462dec
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
sub esp 0x10
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x54 ]
mov [ esp ] edx
mov edx [ esp + 0x50 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
inc [ ecx ]
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
call sub_462bf3
test al al
jne r-xdata
lea eax [ esp + 0x48 ]
push eax
call sub_437bfd
mov [ esp + 0x13 ] al
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x48 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
push eax
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x58 ]
call sub_402620
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
lea edx [ esp + 0x30 ]
push edx
push 0x0
push eax
call sub_453081
mov edi [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
push eax
mov eax [ esp + 0x2c ]
push eax
call edi
mov esi [ esp + 0x1c ]
push 0x0
test eax eax
je r-xdata
mov esi [ esp + 0x1c ]
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_404120
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov eax [ esp + 0x20 ]
jmp r-xdata
mov esi [ esp + 0x1c ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax esi
call sub_4040e0
jmp r-xdata
mov eax [ esi ]
mov edx [ esp + 0x2c ]
mov eax [ eax + 0x4 ]
push edx
add eax esi
call sub_404120
mov eax [ esp + 0x28 ]
dec eax
cmp eax 0x6
ja r-xdata
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_4040e0
mov eax [ esp + 0x18 ]
mov esi [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
push eax
call esi
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x20 ]
push eax
call [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x5c ]
or edx 0x20019
push edx
push 0x0
push ecx
push eax
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExW) ]
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_4040e0
jmp [ eax * 4 + jump_table_46b842 ]
mov ecx [ esp + 0x20 ]
push ecx
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
mov eax [ esp + 0x14 ]
shr eax 0x1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
add esp 0x4
lea edx [ esp + 0x14 ]
push edx
push eax
push 0x0
push 0x0
push ecx
mov [ esp + 0x38 ] eax
call sub_453081
push eax
mov eax [ esp + 0x2c ]
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
shr eax 0x1
xor ecx ecx
add eax 0x2
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x14 ]
push edx
push edi
push 0x0
push 0x0
push eax
call sub_453081
push eax
mov eax [ esp + 0x2c ]
push eax
call [ __import_lookup_table_1(ADVAPI32:RegQueryValueExW) ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x14 ] 0x4
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
push 0x0
push 0x0
push eax
call sub_453081
push eax
mov eax [ esp + 0x2c ]
push eax
call edi
fild [ esp + 0x34 ]
mov ecx [ esp + 0x34 ]
test ecx ecx
jge r-xdata
mov edx [ esp + 0x14 ]
push edx
push ebx
call sub_452dae
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
lea edx [ esp + 0x14 ]
push edx
push eax
push 0x0
push 0x0
push ecx
call sub_453081
push eax
mov eax [ esp + 0x2c ]
push eax
call edi
test eax eax
je r-xdata
call esi
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_404120
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_4040e0
mov edi [ esp + 0x24 ]
push edi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x24 ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0x14 ] eax
mov [ edi + eax * 2 ] cx
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_404120
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_4040e0
push edi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0x14 ] eax
mov [ edi + eax * 2 ] cx
mov ecx [ esp + 0x14 ]
cmp ecx 0x1
jbe r-xdata
mov esi ebx
fstp [ esp + 0x2c ]
call sub_4092c0
fld [ esp + 0x2c ]
fstp [ ebx ]
mov [ ebx + 0x8 ] 0x3
jmp r-xdata
fadd [ r--data ]
mov ecx [ esp + 0x18 ]
mov esi [ __import_lookup_table_1(ADVAPI32:RegCloseKey) ]
push ecx
call esi
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax esi
call sub_4040e0
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
jmp r-xdata
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
jmp r-xdata
cmp [ edi + ecx * 2 - 0x2 ] 0x0
jne r-xdata
xor eax eax
test ecx ecx
jbe r-xdata
dec ecx
mov [ esp + 0x14 ] ecx
cmp [ edi + eax * 2 - 0x2 ] 0xa
jne r-xdata
jmp r-xdata
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ edi + eax * 2 ] 0x0
jne r-xdata
inc eax
cmp eax ecx
jb r-xdata
mov edx 0xa
mov [ edi + eax * 2 ] dx
mov ecx [ esp + 0x14 ]
sub_46b85e
sub esp 0x18
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
mov eax [ edi ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push eax
mov eax [ esp + 0x40 ]
push eax
call sub_4646a2
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x18
retn 0xc
mov ebp [ esp + 0x30 ]
cmp ebp [ esp + 0x2c ]
jne r-xdata
mov esi [ esp + 0x34 ]
call sub_40d970
mov eax [ esp + 0x10 ]
call sub_40f2a0
mov esi eax
xor ebx ebx
mov [ esp + 0x2c ] esi
test ebp ebp
jle r-xdata
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
lea ebp [ ebx + 0xc ]
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_40c060
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebp ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + ebp ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
mov ecx [ eax ]
push ecx
lea esi [ esp + 0x1c ]
call sub_40df50
mov edi esi
mov esi [ esp + 0x34 ]
call sub_40d970
mov ecx edi
add ebp 0x4
call sub_402620
inc ebx
cmp ebx [ esp + 0x30 ]
jl r-xdata
add ebp 0x4
mov esi [ esp + 0x2c ]
sub_46b945
sub esp 0x1c
push ebx
push ebp
mov ebp [ esp + 0x28 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ esp + 0x30 ]
push edi
cmp eax 0xf
ja r-xdata
mov ebp [ ebp + 0x14 ]
test ebp ebp
je r-xdata
jmp [ eax * 4 + jump_table_46ba99 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x8
push ebp
call sub_413a88
add esp 0x4
mov eax [ ebp ]
push 0xffffffff
push eax
call sub_4359c4
add esp 0x8
mov edi eax
mov ebx esi
call sub_40e6d0
push edi
call sub_4112ef
add esp 0x4
jmp r-xdata
mov edi [ ebp ]
mov ebx esi
call sub_40e6d0
jmp r-xdata
mov edi [ ebp ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
xor ebx ebx
movsx edi [ ebp ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
movzx edi [ ebp ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
movzx edi [ ebp ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
fld [ ebp ]
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
jmp r-xdata
fld [ ebp ]
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x3
fstp [ esi ]
jmp r-xdata
mov edi [ ebp ]
call sub_4092c0
mov [ esi + 0x8 ] 0x7
mov [ esi ] edi
jmp r-xdata
mov ebx [ ebp + 0x4 ]
jmp r-xdata
mov edx [ ebp ]
mov ecx 0x9
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] cx
push eax
mov ecx esi
mov [ esp + 0x24 ] edx
call sub_467626
mov edi [ ebp ]
call sub_4092c0
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_46bad9
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ebp ecx
mov ecx [ eax ]
push edi
call sub_40c760
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_4676a3
mov edx [ esi + 0x4 ]
mov ebx eax
mov eax [ edx + 0x4 ]
push eax
call sub_443676
push 0x0
push eax
push ebx
push edi
call Ordinal_WSOCK32_19
mov esi [ esp + 0x18 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov [ esi ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
push 0x0
mov [ esi ] 0x0
call Ordinal_WSOCK32_111
mov ecx [ ebp ]
push eax
mov eax [ ecx + 0x4 ]
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
sub_46bb59
sub esp 0x130
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x144 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
call sub_40c760
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov ebp eax
call sub_40c760
mov ebx [ esp + 0x148 ]
mov edi r--data
mov [ esp + 0x10 ] eax
call sub_40e6d0
cmp ebp 0xffffffff
jne r-xdata
mov ecx [ esi + 0x478 ]
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
sub ecx eax
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
mov [ esp + 0x20 ] ecx
push 0x0
lea ecx [ esp + 0x48 ]
push ecx
push 0x0
mov [ esp + 0x54 ] ebp
mov [ esp + 0x50 ] 0x1
call Ordinal_WSOCK32_18
cmp eax 0xffffffff
jne r-xdata
push 0x0
push ebp
jmp r-xdata
mov edi [ esp + 0x10 ]
lea eax [ edi + 0x1 ]
push eax
call sub_41171a
add esp 0x4
lea ecx [ esp + 0x3c ]
push ecx
push ebp
mov ebx eax
call Ordinal_WSOCK32_151
test eax eax
je r-xdata
push 0x0
call Ordinal_WSOCK32_111
push eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x130
retn 0x8
push ebx
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x130
retn 0x8
push 0x0
push edi
push ebx
push ebp
call Ordinal_WSOCK32_16
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x0
call Ordinal_WSOCK32_111
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test edi edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
jmp r-xdata
mov eax [ esp + 0x144 ]
cmp [ eax + 0x8 ] 0x3
jb r-xdata
add eax esi
call sub_4040e0
push ebx
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x130
retn 0x8
push ebx
mov [ ebx + edi ] 0x0
call sub_4137e0
add esp 0x4
cmp eax edi
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
test eax eax
je r-xdata
mov ecx [ esp + 0x148 ]
push edi
push ebx
push edi
push ecx
push ebx
lea ecx [ esp + 0x20 ]
push ecx
call sub_4453c4
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x20 ]
push eax
call sub_465d24
mov esi [ esp + 0x148 ]
mov edi eax
call sub_40e640
lea ecx [ esp + 0x2c ]
call sub_402620
lea esi [ esp + 0x1c ]
call sub_401330
push ebx
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x130
retn 0x8
mov eax [ esp + 0x148 ]
push edi
push ebx
push edi
push eax
jmp r-xdata
call sub_452dae
push eax
call sub_410f70
add esp 0xc
sub_46bd4d
sub esp 0x24
push esi
push edi
lea esi [ esp + 0xc ]
mov edi ecx
call sub_40d500
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push esi
push eax
call sub_45efe7
mov eax [ esp + 0xc ]
push eax
call Ordinal_WSOCK32_52
test eax eax
jne r-xdata
mov edx [ eax + 0xc ]
mov eax [ edx ]
push 0x4
push eax
lea ecx [ esp + 0x10 ]
push ecx
call sub_410f70
mov edx [ esp + 0x14 ]
add esp 0xc
push edx
call Ordinal_WSOCK32_11
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_451dee
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x10 ]
push edx
call sub_465d24
mov esi [ esp + 0x34 ]
mov edi eax
call sub_40e640
lea ecx [ esp + 0x1c ]
call sub_402620
lea esi [ esp + 0xc ]
call sub_401330
pop edi
xor eax eax
pop esi
add esp 0x24
retn 0x8
push ebx
push eax
call Ordinal_WSOCK32_111
mov ecx [ edi ]
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_4040e0
mov ebx [ esp + 0x38 ]
mov edi r--data
call sub_40e6d0
call sub_401330
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x24
retn 0x8
sub_46be13
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_41588e
add eax 0x40
push eax
call sub_467e5e
mov esi [ esp + 0x18 ]
add esp 0x8
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_46be4b
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
push edi
push eax
call sub_41588e
add eax 0x20
push eax
call sub_467e5e
mov esi [ esp + 0x18 ]
add esp 0x8
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
sub_46be83
sub esp 0x2c
push ebp
push esi
mov esi [ esp + 0x38 ]
mov eax [ esi + 0x8 ]
mov ebp ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] 0x0
cmp eax 0x2
jb r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push ebx
push edi
push eax
call sub_453081
mov edi eax
lea esi [ esp + 0x2c ]
call sub_401b70
lea edx [ esp + 0x13 ]
push edx
lea eax [ esp + 0x16 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x1d ]
push edx
lea eax [ esp + 0x28 ]
push eax
push esi
call sub_468387
test al al
mov ecx esi
sete bl
call sub_402620
test bl bl
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
call sub_453081
push eax
push ebp
call sub_4646a2
test al al
jne r-xdata
mov esi [ esp + 0x44 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ esp + 0x18 ] 0x13
mov al [ esp + 0x10 ]
jne r-xdata
mov esi [ esp + 0x3c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
pop esi
xor eax eax
pop ebp
add esp 0x2c
retn 0x8
cmp [ esp + 0x11 ] 0x0
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov [ esp + 0x14 ] 0x4
mov [ esp + 0x18 ] 0x3
cmp [ esp + 0x12 ] 0x0
je r-xdata
or [ esp + 0x14 ] 0x2
cmp [ esp + 0x13 ] 0x0
je r-xdata
or [ esp + 0x14 ] 0x1
mov ebx [ esp + 0x18 ]
mov eax [ ebp + 0x1b0 ]
shl ebx 0x10
or ebx [ esp + 0x14 ]
xor esi esi
test eax eax
jbe r-xdata
or [ esp + 0x14 ] 0x8
mov edi 0x1
cmp [ esp + 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x1ac ]
mov edx ecx
lea esp [ esp ]
xor edi edi
test eax eax
jbe r-xdata
mov esi [ esp + 0x44 ]
call sub_4092c0
mov [ esi + 0x8 ] edi
pop edi
pop ebx
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebp
add esp 0x2c
retn 0x8
inc esi
add edx 0x4
cmp esi eax
jb r-xdata
mov edi [ edi ]
cmp [ edi + 0x4 ] ebx
je r-xdata
push 0x28
cmp edi eax
jne r-xdata
mov ecx [ ebp + 0x1ac ]
mov edi [ edx ]
cmp [ edi ] 0x0
je r-xdata
cmp [ esp + 0x1c ] 0x1
jne r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
inc edi
add ecx 0x4
cmp edi eax
jb r-xdata
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x4 ]
mov esi [ ecx + esi * 4 ]
push eax
call sub_453063
mov esi [ esi ]
push eax
add esi 0x8
call sub_40df50
pop edi
pop ebx
pop esi
xor eax eax
pop ebp
add esp 0x2c
retn 0x8
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov ecx [ eax ]
mov edx [ rw-data ]
push ecx
push edx
call [ UnregisterHotKey@IAT ]
mov eax [ ebp + 0x1ac ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
xor eax eax
push eax
call sub_44a745
jmp r-xdata
mov [ esp + 0x1c ] 0x0
push eax
call sub_44a745
mov [ esp + 0x1c ] eax
jmp r-xdata
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ebp + 0x1ac ]
mov eax [ edx + esi * 4 ]
pop edi
pop ebx
pop esi
mov [ eax ] 0x0
xor eax eax
pop ebp
add esp 0x2c
retn 0x8
push eax
call sub_443120
pop edi
pop ebx
pop esi
xor eax eax
pop ebp
add esp 0x2c
retn 0x8
mov eax [ ebp + 0x1ac ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ ebp + 0x1ac ]
mov ecx [ edx + edi * 4 ]
mov [ ecx ] eax
mov edx [ ebp + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov [ ecx ] edi
mov edx [ ebp + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] ebx
mov ebx [ esp + 0x40 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x1ac ]
mov esi [ ecx + edi * 4 ]
push eax
call sub_453063
mov esi [ esi ]
push eax
add esi 0x8
call sub_40df50
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
mov ecx [ ebp + 0x1ac ]
mov esi [ ecx + edi * 4 ]
push eax
call sub_453063
mov esi [ esi ]
push eax
add esi 0x18
call sub_40df50
mov edx [ ebp + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ eax ]
push ecx
mov ecx [ eax ]
push edx
mov edx [ rw-data ]
push ecx
push edx
call [ RegisterHotKey@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
lea ecx [ ebp + 0x1a8 ]
push ecx
call sub_434343
jmp r-xdata
mov edx [ ebp + 0x1ac ]
mov eax [ edx + edi * 4 ]
mov [ eax ] 0x0
push eax
call sub_443120
sub_46c1ae
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
lea eax [ esp + 0x18 ]
push eax
mov ebx ecx
mov [ esp + 0x18 ] esi
call sub_4603e7
lea eax [ esi - 0x2 ]
mov [ esp + 0x10 ] 0x0
cmp eax 0x8
ja r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x5
add eax ebx
call sub_4040e0
lea edx [ esp + 0x18 ]
push edx
call sub_442561
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_46c596 ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x24 ]
push eax
call sub_44b390
mov [ esp + 0x10 ] eax
mov edx [ edi + 0x4 ]
mov esi [ edx + 0x20 ]
push esi
call sub_44adff
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x1c ]
push esi
call sub_44adff
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x18 ]
push esi
call sub_44adff
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c760
test eax eax
jl r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
test eax eax
jl r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
push esi
call sub_44adff
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
push esi
call sub_44adff
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x4 ]
push esi
call sub_44adff
test al al
je r-xdata
fld [ r--data ]
mov ecx esi
call sub_40c760
mov [ esp + 0xc ] eax
fild [ esp + 0xc ]
fldz
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
mov ecx esi
call sub_40c760
mov [ esp + 0x24 ] eax
or [ esp + 0x28 ] 0x80
jmp r-xdata
mov ecx esi
call sub_40c760
mov [ esp + 0x20 ] eax
or [ esp + 0x28 ] 0x40
jmp r-xdata
or [ esp + 0x28 ] 0x20
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x14 ]
push esi
call sub_44adff
test al al
jne r-xdata
or [ esp + 0x28 ] 0x10
mov edx [ edi + 0x4 ]
mov esi [ edx + 0x10 ]
push esi
call sub_44adff
test al al
jne r-xdata
push esi
call sub_453081
movzx esi [ eax ]
test si si
je r-xdata
xor ecx ecx
mov [ esp + 0x38 ] cx
push esi
call sub_453063
push eax
lea esi [ esp + 0x50 ]
call sub_40df50
push r--data
lea eax [ esp + 0x50 ]
call sub_4021e0
jmp r-xdata
push esi
call sub_453063
push eax
lea esi [ esp + 0x60 ]
call sub_40df50
push r--data
lea eax [ esp + 0x60 ]
call sub_4021e0
jmp r-xdata
fstp [ esp + 0x30 ]
fstp st0
mov ecx esi
call sub_40c760
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx esi
call sub_40c760
mov [ esp + 0x18 ] eax
jmp r-xdata
push esi
call sub_437b6b
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_453063
lea eax [ ebx + 0xb8 ]
jmp r-xdata
mov edx [ edi + 0x4 ]
mov esi [ edx ]
push esi
call sub_44adff
test al al
je r-xdata
mov esi 0x1
mov [ esp + 0x38 ] si
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
push edx
push eax
push ecx
call sub_436001
add esp 0x10
test eax eax
jne r-xdata
or [ esp + 0x28 ] 0xc0
push eax
lea esi [ esp + 0x40 ]
call sub_40df50
cmp [ esp + 0x14 ] 0x6
ja r-xdata
movzx eax ax
add eax 0xffffffd0
cmp eax 0x3d
ja r-xdata
mov ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call sub_468817
cmp eax 0x1
jne r-xdata
mov edx [ ebx ]
push eax
mov eax [ edx + 0x4 ]
push 0x4
add eax ebx
call sub_4040e0
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
lea eax [ esp + 0x18 ]
push eax
call sub_442561
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x3
add eax ebx
call sub_4040e0
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
lea edx [ esp + 0x18 ]
push edx
call sub_442561
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ eax + lookup_table_46c5c6 ]
jmp [ eax * 4 + jump_table_46c5ba ]
push 0x0
cmp eax 0x2
jne r-xdata
mov edi [ esp + 0x4c ]
mov ebx [ ebp + 0xc ]
call sub_40e6d0
lea eax [ esp + 0x18 ]
push eax
call sub_442561
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or [ esp + 0x28 ] 0x1
inc esi
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_453081
movzx esi [ eax + esi * 2 ]
sub esi 0x30
lea esp [ esp ]
cmp eax 0x3
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x1
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov [ esp + 0x10 ] esi
call sub_453081
movzx eax [ eax + esi * 2 ]
test ax ax
je r-xdata
mov [ esp + 0x2c ] esi
mov esi [ esp + 0xc ]
inc esi
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0xc ]
inc [ esp + 0xc ]
push eax
call sub_453081
mov ecx [ esp + 0xc ]
movzx edx [ eax + ecx * 2 ]
lea eax [ esi + esi * 4 ]
lea esi [ edx + eax * 2 - 0x30 ]
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x3
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x2
jmp r-xdata
add eax ebx
call sub_4040e0
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
lea eax [ esp + 0x18 ]
push eax
call sub_442561
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_453081
mov ecx [ esp + 0xc ]
movzx edx [ eax + ecx * 2 + 0x2 ]
push edx
call sub_413b67
add esp 0x4
test eax eax
je r-xdata
sub_46c5c9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ ebp - 0x75 ] edx
in al dx
and esp 0xfffffff8
sub esp 0x24c
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x24 ] esi
call sub_40c060
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
mov edi [ IsClipboardFormatAvailable@IAT ]
push 0xd
call edi
test eax eax
je r-xdata
push 0x1
call edi
test eax eax
je r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push 0xf
call edi
test eax eax
je r-xdata
push 0x1
call [ GetClipboardData@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push eax
call [ __import_lookup_table_0(KERNEL32:GlobalLock) ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x3
add eax esi
call sub_4040e0
lea ecx [ esp + 0x14 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ __import_lookup_table_10(USER32:CountClipboardFormats) ]
push 0x0
test eax eax
je r-xdata
push 0xf
call [ GetClipboardData@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
call [ __import_lookup_table_0(KERNEL32:GlobalLock) ]
test eax eax
je r-xdata
mov edi eax
call sub_40e6d0
mov eax [ esp + 0x10 ]
push eax
call [ __import_lookup_table_0(KERNEL32:GlobalUnlock) ]
jmp r-xdata
call [ CloseClipboard@IAT ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
add eax esi
call sub_4040e0
lea ecx [ esp + 0x14 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x2
jmp r-xdata
push ebx
call [ __import_lookup_table_0(KERNEL32:GlobalLock) ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push ebx
push 0x3
add eax esi
call sub_4040e0
lea ecx [ esp + 0x14 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_4453c4
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_465d24
mov esi [ ebp + 0xc ]
mov edi eax
call sub_40e640
lea ecx [ esp + 0x38 ]
call sub_402620
push ebx
call [ __import_lookup_table_0(KERNEL32:GlobalUnlock) ]
lea esi [ esp + 0x28 ]
call sub_401330
jmp r-xdata
call [ CloseClipboard@IAT ]
lea ecx [ esp + 0x14 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
add eax esi
call sub_4040e0
push 0x0
push 0x0
push 0xffffffff
push ebx
call [ __import_lookup_table_9(SHELL32:DragQueryFileW) ]
dec eax
xor esi esi
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
call [ CloseClipboard@IAT ]
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x4
add eax esi
call sub_4040e0
lea ecx [ esp + 0x14 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x104
lea eax [ esp + 0x4c ]
push eax
push esi
push ebx
call [ __import_lookup_table_9(SHELL32:DragQueryFileW) ]
lea edi [ esp + 0x48 ]
lea eax [ esp + 0x14 ]
call sub_40d330
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x14 ]
call sub_40e640
push ebx
call [ __import_lookup_table_0(KERNEL32:GlobalUnlock) ]
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_404120
jmp r-xdata
push 0x104
lea edx [ esp + 0x4c ]
push edx
push esi
push ebx
call [ __import_lookup_table_9(SHELL32:DragQueryFileW) ]
lea edi [ esp + 0x48 ]
lea eax [ esp + 0x14 ]
call sub_40d330
push 0xa
lea eax [ esp + 0x18 ]
call sub_403470
inc esi
cmp esi [ esp + 0x10 ]
jl r-xdata
sub_46c880
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
xor ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov ebx eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
sub esp 0x78
lea edx [ edi + 0x10 ]
mov eax esp
push edx
push eax
call sub_44acca
push 0x0
push ebx
push r--data
push esi
call sub_453081
push eax
lea ecx [ esp + 0xa0 ]
push ecx
call sub_44ad09
push 0x0
lea edx [ esp + 0x1c ]
push edx
call sub_465fc3
mov eax [ esp + 0x2c ]
mov esi [ ebp + 0xc ]
mov ebx [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
call sub_4092c0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x30 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] ecx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push edx
add eax edi
call sub_4040e0
mov edx [ edi ]
mov ecx [ esp + 0x34 ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax edi
call sub_404120
lea eax [ esp + 0x18 ]
push eax
call sub_44ac2d
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46c946
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov esi ecx
cmp eax 0x2
jae r-xdata
jbe r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x10 ] 0x0
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0xc ] 0x0
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
push eax
call sub_4434cc
mov [ esp + 0xc ] al
jmp r-xdata
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
mov eax [ edi ]
mov edi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x14 ] eax
mov edx [ edi ]
mov edi [ edx + 0xd8 ]
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
sub esp 0x78
lea ecx [ esi + 0x10 ]
mov edx esp
push ecx
push edx
call sub_44acca
mov eax [ esp + 0x84 ]
mov ecx [ esp + 0x88 ]
push eax
push ecx
push edi
call sub_453081
push eax
push ebx
call sub_453081
push eax
lea edx [ esp + 0xa0 ]
push edx
call sub_44ad09
push eax
lea ebx [ esi + 0x4 ]
push ebx
call sub_452078
lea eax [ esp + 0x18 ]
push eax
call sub_44ac2d
mov edi [ esi + 0x8 ]
mov ecx [ edi ]
push 0x1
push ecx
call sub_465fc3
mov edx [ edi ]
mov eax [ edx + 0x18 ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
mov edx [ edi ]
mov eax [ edx + 0x1c ]
mov ecx [ esi ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
cmp [ esp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_45203e
mov esi [ ebp + 0xc ]
call sub_4092c0
cmp [ esp + 0xc ] 0x0
mov ecx [ esp + 0x14 ]
mov [ esi + 0x8 ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ecx
jne r-xdata
sub_46caaa
sub esp 0xa3c
push ebx
push ebp
push esi
mov esi [ esp + 0xa4c ]
cmp [ esi + 0x8 ] 0x3
mov ebp ecx
jne r-xdata
xor bl bl
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test eax eax
je r-xdata
cmp [ ebp + 0xb4 ] 0x2
jne r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa3c
retn 0x8
mov bl 0x1
jmp r-xdata
mov eax [ ebp + 0xc8 ]
push edi
push eax
lea edi [ esp + 0x20 ]
call sub_40f5e0
pop edi
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_411691
lea ecx [ esp + 0x2c ]
push 0x5c
push ecx
call sub_41420e
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push r--data
push eax
mov [ esp + 0x14 ] bl
call sub_453063
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x434 ]
push edx
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x84c ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_453081
push eax
call sub_413db0
add esp 0x14
cmp [ esp + 0x24 ] 0x0
jne r-xdata
push 0x0
push eax
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
add eax ebp
call sub_404120
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
push eax
lea edx [ esp + 0x22c ]
push edx
call sub_411691
lea eax [ esp + 0x230 ]
push eax
call sub_436ac4
add esp 0xc
test al al
je r-xdata
mov edx [ ebp + 0xd8 ]
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_411691
lea ecx [ esp + 0x2c ]
push r--data
push ecx
call sub_411663
mov edx [ esi + 0x4 ]
mov eax [ edx ]
add esp 0x10
push eax
call sub_453081
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_411663
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x22c ]
push edx
call sub_411691
lea eax [ esp + 0x84c ]
push eax
lea ecx [ esp + 0x234 ]
push ecx
call sub_411663
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x23c ]
push eax
call sub_411663
lea ecx [ esp + 0x44c ]
push ecx
lea edx [ esp + 0x244 ]
push edx
call sub_411663
mov eax [ esi + 0x4 ]
mov eax [ eax ]
add esp 0x20
lea ecx [ esp + 0x638 ]
push ecx
lea edx [ esp + 0x22c ]
push edx
push r--data
push r--data
push eax
call sub_453081
push eax
call sub_436879
lea eax [ esp + 0x64c ]
push eax
call sub_436b22
add esp 0x18
cmp al 0x1
jne r-xdata
lea edx [ esp + 0x24 ]
push r--data
push edx
call sub_411691
lea eax [ esp + 0x43c ]
push r--data
push eax
call sub_411691
add esp 0x10
mov esi [ esp + 0xa50 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa3c
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ esp + 0xc ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
push eax
call sub_453081
push eax
lea edx [ esp + 0x30 ]
push edx
call sub_44bd29
add esp 0x10
test al al
jne r-xdata
lea ecx [ esp + 0x228 ]
push ecx
call sub_4112d5
add esp 0x4
cmp [ esp + eax * 2 + 0x226 ] 0x5c
jne r-xdata
test al al
jne r-xdata
cmp bl al
je r-xdata
mov esi [ esp + 0xa50 ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
lea edx [ esp + 0x638 ]
push edx
push eax
call sub_453081
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_452788
test eax eax
je r-xdata
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_434fe1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa3c
retn 0x8
mov ecx [ ebp ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebp
call sub_404120
sub_46cda0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push esi
mov esi [ ebx + 0x8 ]
push edi
push eax
mov [ esp + 0x1c ] esi
mov [ esp + 0x24 ] 0x0
call sub_453063
mov ecx [ eax ]
push 0xffffffff
push 0xffffffff
mov [ esp + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x8 ]
push 0xffffffff
push 0x1
mov [ esp + 0x40 ] ecx
mov eax [ eax + 0xc ]
push 0x2
push r--data
lea edx [ esp + 0x40 ]
mov [ esp + 0x4c ] eax
inc [ eax ]
mov edi [ esp + 0x44 ]
push edx
call sub_442c52
cmp eax edi
jne r-xdata
push 0x0
call [ __import_lookup_table_6(ole32:CoInitialize) ]
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jge r-xdata
mov edi r--data
lea eax [ esp + 0x28 ]
call sub_40d330
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
push eax
call sub_453081
mov ecx [ edi + 0x50 ]
push eax
mov eax [ esp + 0x18 ]
push eax
call ecx
cmp esi 0x2
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call [ CoUninitialize@IAT ]
lea ecx [ esp + 0x28 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi 0x3
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
push eax
call sub_453081
mov edx [ esp + 0x14 ]
push eax
mov eax [ edi + 0x24 ]
push edx
call eax
cmp esi 0x4
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0xc ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
push eax
call sub_453081
mov ecx [ edi + 0x2c ]
push eax
mov eax [ esp + 0x18 ]
push eax
call ecx
cmp esi 0x5
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
push eax
call sub_453081
mov edx [ esp + 0x14 ]
push eax
mov eax [ edi + 0x1c ]
push edx
call eax
cmp esi 0x6
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
push 0x0
push eax
call sub_453081
mov ecx [ edi + 0x44 ]
push eax
mov eax [ esp + 0x1c ]
push eax
call ecx
cmp esi 0x7
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x18 ]
mov ecx edi
call sub_40cfb0
test al al
je r-xdata
cmp esi 0x8
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax + 0x1c ]
mov edi [ eax + 0x14 ]
mov eax [ edx ]
mov [ esp + 0x24 ] eax
call sub_40c760
push eax
push edi
call sub_453081
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x28 ]
push eax
mov eax [ edx + 0x44 ]
push ecx
call eax
push edi
call sub_453081
mov edi eax
lea esi [ esp + 0x38 ]
call sub_401b70
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x15 ]
push ecx
lea edx [ esp + 0x1a ]
push edx
lea eax [ esp + 0x1f ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push esi
call sub_468387
cmp al 0x1
mov ecx esi
sete [ esp + 0x10 ]
call sub_402620
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x1c ]
push ecx
push r--data
push eax
call edx
test eax eax
jl r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x14 ]
mov ecx [ ecx + 0x20 ]
mov esi [ edx ]
call sub_40c760
mov ecx [ esi + 0x3c ]
push eax
mov eax [ esp + 0x18 ]
push eax
call ecx
mov esi [ esp + 0x18 ]
mov dl [ esp + 0x11 ]
mov eax 0x4
test dl dl
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
mov ecx [ eax ]
push 0x1
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jge r-xdata
mov cl [ esp + 0x12 ]
test cl cl
je r-xdata
mov eax [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
cmp [ esp + 0x13 ] 0x0
je r-xdata
or eax 0x2
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x28 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test cl cl
jne r-xdata
or eax 0x1
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
shl eax 0x8
or eax [ esp + 0x24 ]
push eax
mov eax [ edx + 0x34 ]
push ecx
call eax
test dl dl
jne r-xdata
or eax 0x6
sub_46d098
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
push ebx
call sub_443e34
test al al
je r-xdata
push 0x0
push ebx
mov ebx [ ebp + 0x8 ]
lea edx [ esp + 0x14 ]
push edx
push ebx
call sub_45c216
test al al
je r-xdata
push 0x38
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebx + 0x17c ]
mov ecx [ esp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
mov ebx [ eax + 0x4 ]
test [ ebx + 0x28 ] 0x3
je r-xdata
xor ebx ebx
call sub_40d940
mov ebx eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ ecx + 0x4 ]
push edi
call sub_444279
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push eax
mov eax 0x1
mov ecx ebx
call sub_40dfa0
test al al
jne r-xdata
push edi
call sub_4676a3
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_443676
push eax
push edi
push ebx
call sub_4444c2
test al al
jne r-xdata
test [ ebx + 0x28 ] 0x10
jne r-xdata
push ebx
call sub_44ade5
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_443e34
test al al
je r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
push edi
call sub_453063
cmp [ ebp + 0x14 ] 0x0
mov esi eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi ebx
call sub_40d900
xor eax eax
push ebx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] eax
call sub_44ade5
push esi
push ebx
call sub_467fce
jmp r-xdata
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
lea eax [ edi + 0x2 ]
lea ecx [ esp + 0x10 ]
call sub_401400
push esi
lea esi [ esp + 0x14 ]
call sub_40df50
mov edi r--data
mov eax esi
call sub_40d330
push esi
push ebx
call sub_467fce
mov ecx esi
call sub_402620
jmp r-xdata
lea eax [ edi - 0x1 ]
push eax
push esi
call sub_438a19
cmp [ eax ] 0xd
je r-xdata
lea eax [ edi - 0x1 ]
push eax
push esi
call sub_438a19
cmp [ eax ] 0xa
jne r-xdata
sub_46d259
push ecx
call sub_435703
test al al
je r-xdata
mov eax [ ecx + 0x24 ]
test eax eax
je r-xdata
jmp sub_467775
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ecx
push edx
push eax
call sub_4676c4
retn 0x8
xor eax eax
retn 0x8
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi r--data
call sub_40e6d0
pop edi
pop ebx
sub_46d2a0
push ecx
call sub_435703
test al al
je r-xdata
mov eax [ ecx + 0x24 ]
test eax eax
je r-xdata
jmp sub_4677ad
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi r--data
call sub_40e6d0
pop edi
xor eax eax
pop ebx
retn 0x4
mov ecx [ esp + 0x4 ]
push ecx
push eax
call sub_467715
retn 0x4
sub_46d2db
sub esp 0x14
push esi
push edi
lea esi [ esp + 0x8 ]
call sub_40d500
mov eax [ esp + 0x20 ]
mov edi esi
call sub_403bd0
test al al
je r-xdata
lea esi [ esp + 0x8 ]
call sub_401330
pop edi
xor al al
pop esi
add esp 0x14
retn 0x8
mov eax [ esp + 0x24 ]
push eax
mov eax esi
call sub_403f40
call sub_401330
mov al 0x1
pop edi
pop esi
add esp 0x14
retn 0x8
sub_46d326
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ eax + 0x2c ]
push edx
push eax
test cl 0x3
jne r-xdata
call sub_45f05d
pop ecx
retn 0x8
test cl 0x4
je r-xdata
call sub_46d2db
pop ecx
retn 0x8
call sub_467f38
pop ecx
retn 0x8
sub_46d359
sub esp 0x14
push esi
lea esi [ esp + 0x8 ]
call sub_40d500
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
push eax
push esi
push edx
call sub_44c245
test al al
je r-xdata
lea esi [ esp + 0x8 ]
call sub_401330
xor al al
pop esi
add esp 0x14
retn 0xc
mov eax [ esp + 0x20 ]
push eax
mov eax esi
call sub_403f40
call sub_401330
mov al 0x1
pop esi
add esp 0x14
retn 0xc
sub_46d3a6
push ecx
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x2c ]
push esi
mov esi [ esp + 0x10 ]
push edx
push esi
push eax
test cl 0x3
jne r-xdata
call sub_45f0d2
pop esi
pop ecx
retn 0xc
test cl 0x4
je r-xdata
call sub_46d359
pop esi
pop ecx
retn 0xc
call sub_467f82
pop esi
pop ecx
retn 0xc
sub_46d3e2
sub esp 0x20
push ebx
mov ebx [ esp + 0x30 ]
push ebp
push esi
push edi
mov edi [ esp + 0x38 ]
lea ecx [ esp + 0x10 ]
call sub_40c060
xor esi esi
push r--data
mov eax ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] esi
call sub_4021e0
mov ebp [ edi + 0x4 ]
test ebp ebp
jle r-xdata
push 0xffffffff
push esi
lea eax [ esp + 0x28 ]
push eax
push edi
call sub_460976
push eax
mov eax ebx
call sub_40c140
lea ecx [ esp + 0x20 ]
call sub_402620
cmp [ esp + 0x38 ] 0x0
jne r-xdata
lea esp [ esp ]
lea ecx [ esp + 0x10 ]
call sub_402620
mov eax [ esp + 0x38 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn 0xc
mov [ esp + 0x38 ] 0x1
push esi
push edi
call sub_438a19
cmp [ eax ] 0x24
jne r-xdata
inc esi
mov [ esp + 0x3c ] esi
cmp esi ebp
je r-xdata
mov eax esi
push eax
inc esi
push edi
mov [ esp + 0x44 ] esi
call sub_438a19
movzx edx [ eax ]
push edx
mov ebp 0x1
push ebp
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_4601e0
test eax eax
jl r-xdata
mov ebp [ edi + 0x4 ]
cmp esi ebp
jl r-xdata
push esi
push edi
call sub_438a19
cmp [ eax ] 0x5c
je r-xdata
push esi
push edi
call sub_438a19
cmp [ eax ] 0x5c
jne r-xdata
mov esi [ esp + 0x3c ]
mov eax esi
push eax
add esi ebp
push edi
mov [ esp + 0x44 ] esi
call sub_438a19
movzx ecx [ eax ]
push ecx
jmp r-xdata
mov edx [ esp + 0x34 ]
lea ecx [ esp + 0x10 ]
push ecx
push eax
push edx
call sub_46855f
lea eax [ esp + 0x10 ]
push eax
mov eax ebx
call sub_40c140
add [ esp + 0x38 ] ebp
mov esi [ esp + 0x3c ]
jmp r-xdata
push esi
push edi
call sub_438a19
cmp [ eax ] 0x24
je r-xdata
mov eax ebx
call sub_403470
push esi
push edi
call sub_438a19
movzx eax [ eax ]
push eax
call sub_413b67
add esp 0x4
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0x40 ]
mov ebp 0x1
push ecx
sub esi ebp
push edi
mov [ esp + 0x48 ] esi
call sub_4601e0
lea edx [ esp + 0x10 ]
push edx
push eax
mov eax [ esp + 0x3c ]
push eax
call sub_46855f
lea ecx [ esp + 0x10 ]
push ecx
mov eax ebx
call sub_40c140
add [ esp + 0x38 ] ebp
mov esi [ esp + 0x3c ]
jmp r-xdata
sub_46d585
sub esp 0x44
push ebx
mov ebx [ esp + 0x58 ]
push ebp
mov ebp [ esp + 0x50 ]
cmp [ ebp + 0x24 ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn 0x10
push ebp
call sub_437bfd
test al al
jne r-xdata
mov [ esp + 0x64 ] al
or eax 0xffffffff
xor edi edi
mov esi ebx
mov [ esp + 0x58 ] 0x0
call sub_40c740
mov edi [ esp + 0x60 ]
test edi edi
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_40c060
lea ecx [ esp + 0x30 ]
call sub_40c060
lea esi [ esp + 0x20 ]
call sub_40d500
xor esi esi
mov [ esp + 0x10 ] 0xffffffff
mov [ esp + 0x14 ] esi
mov [ esp + 0x1c ] esi
lea esp [ esp ]
mov [ esp + 0x64 ] 0x1
push 0x1
lea eax [ esp + 0x14 ]
push eax
push ebp
call sub_44ca28
test eax eax
je r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x28 ]
sub eax esi
push eax
push esi
push ebp
lea ecx [ esp + 0x2c ]
push ecx
call sub_44c995
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_46015f
lea ecx [ esp + 0x30 ]
push ecx
mov eax ebx
call sub_40c140
lea esi [ esp + 0x20 ]
call sub_401330
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x40 ]
call sub_402620
mov eax [ esp + 0x58 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x10
mov ecx [ ebp + 0x2c ]
mov edx [ ecx ]
sub edx esi
push edx
push esi
push ebp
lea eax [ esp + 0x2c ]
push eax
call sub_44c995
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
call sub_46015f
lea eax [ esp + 0x30 ]
push eax
mov eax ebx
call sub_40c140
mov edx [ esp + 0x5c ]
lea ecx [ esp + 0x40 ]
push ecx
push edx
push ebp
call sub_46d3e2
add [ esp + 0x58 ] eax
lea eax [ esp + 0x40 ]
push eax
mov eax ebx
call sub_40c140
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
dec edi
call sub_437c36
mov esi [ esp + 0x1c ]
jmp r-xdata
cmp [ esp + 0x64 ] 0x0
jne r-xdata
sub_46d6eb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
call sub_410810
lea esi [ ebx + 0xec ]
call sub_410810
mov edx [ ebp + 0xc ]
mov al [ ebp + 0x24 ]
mov cl [ ebp + 0x20 ]
lea edi [ ebx + 0x14 ]
push edx
mov esi edi
mov [ ebx + 0x4 ] al
mov [ ebx + 0x5 ] cl
call sub_40df50
mov eax [ ebp + 0x10 ]
lea esi [ ebx + 0x24 ]
push eax
call sub_40df50
lea eax [ ebx + 0xbc ]
push r--data
call sub_4021e0
mov ecx [ ebp + 0x18 ]
xor eax eax
mov [ ebx + 0x10 ] ecx
lea ecx [ esp + 0x20 ]
mov [ ebx + 0xcc ] 0x1
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xd0 ] eax
mov [ ebx + 0xe4 ] eax
call sub_40c060
lea ecx [ esp + 0x30 ]
call sub_40c060
lea ecx [ esp + 0x40 ]
call sub_40c060
mov eax [ ebx + 0x10 ]
test eax eax
jge r-xdata
cmp [ ebx + 0x10 ] 0x4
jne r-xdata
push eax
call sub_413762
add esp 0x4
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] 0x0
push edi
call sub_437bfd
test al al
je r-xdata
push edi
call sub_46884b
mov [ ebx + 0x10 ] 0x1
xor edi edi
lea esi [ ebx + 0x14 ]
call sub_401be0
cmp [ eax ] 0x5b
jne r-xdata
push esi
call sub_437bfd
test al al
je r-xdata
lea edx [ esp + 0x40 ]
push edx
call sub_437bfd
test al al
jne r-xdata
mov eax [ ebx + 0x18 ]
lea edi [ eax - 0x1 ]
lea esi [ ebx + 0x14 ]
call sub_401be0
cmp [ eax ] 0x5d
jne r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
push eax
push ebx
call sub_44cc94
mov edx [ ebx ]
mov eax [ edx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
lea esi [ ebx + 0x14 ]
call sub_40df50
mov edi [ ebx + 0x18 ]
mov [ esp + 0xc ] 0x1
sub edi 0x2
lea esp [ esp ]
or [ ebx + 0x8 ] 0x4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov [ ebx + 0x8 ] 0x1
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
jne r-xdata
test [ ebx + 0x8 ] 0x1
je r-xdata
lea esi [ ebx + 0x24 ]
call sub_410a40
lea edx [ esp + 0x30 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
push ebx
push sub_460772
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ ebx ]
test ebx ebx
je r-xdata
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
jne r-xdata
call [ EnumWindows@IAT ]
call [ GetDesktopWindow@IAT ]
push eax
call [ EnumChildWindows@IAT ]
jmp r-xdata
lea esi [ ebx + 0x14 ]
call sub_410a40
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebx ]
jmp r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
push eax
push ebx
call sub_44cc94
mov ecx [ ebx ]
mov edx [ ecx ]
mov ecx [ ebp + 0x14 ]
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] edx
push ecx
jmp r-xdata
mov eax [ esp + 0x30 ]
lea edx [ esp + 0xc ]
push edx
push eax
call sub_435c62
mov esi [ esp + 0x14 ]
add esp 0x8
push esi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx [ ebx + 0xe4 ]
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
push ebx
call sub_44cc94
mov edi [ ebp + 0x14 ]
lea esi [ ebx + 0xec ]
push esi
push edi
call sub_445691
call sub_410810
cmp [ ebx + 0xe4 ] 0x1
jl r-xdata
mov edx [ ebp + 0x14 ]
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] eax
push edx
call sub_434343
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push esi
push ebx
call sub_44cc94
mov ecx [ ebx ]
mov edx [ ecx ]
mov ecx [ ebp + 0x14 ]
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] edx
push ecx
jmp r-xdata
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
test al 0x1
jne r-xdata
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x8 ] 0x8
lea ecx [ esp + 0x30 ]
push ecx
lea esi [ ebx + 0xbc ]
call sub_40df50
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
mov eax 0xfffffffd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
or eax 0x2
lea esi [ ebx + 0x34 ]
mov [ ebx + 0x8 ] eax
call sub_401060
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
or [ ebx + 0x8 ] 0x10
lea esi [ ebx + 0x78 ]
call sub_401060
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
jmp r-xdata
push edi
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
lea eax [ ebx + 0x14 ]
push eax
call sub_460ed4
test al al
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x30 ]
or [ ebx + 0x8 ] 0x80
push eax
call sub_413431
add esp 0x4
mov [ ebx + 0xd4 ] eax
jmp r-xdata
push esi
call sub_46865b
cmp [ eax ] 0x0
je r-xdata
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x30 ]
or [ ebx + 0x8 ] 0x100
push edx
call sub_413431
add esp 0x4
mov [ ebx + 0xd8 ] eax
jmp r-xdata
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esp + 0x30 ]
or [ ebx + 0x8 ] 0x200
push ecx
call sub_413431
add esp 0x4
mov [ ebx + 0xdc ] eax
jmp r-xdata
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esp + 0x30 ]
or [ ebx + 0x8 ] 0x400
push eax
call sub_413431
add esp 0x4
mov [ ebx + 0xe0 ] eax
jmp r-xdata
lea eax [ esp + 0x20 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esp + 0x30 ]
or [ ebx + 0x8 ] 0x20
push edx
call sub_413431
add esp 0x4
mov [ ebx + 0xcc ] eax
jmp r-xdata
lea edx [ esp + 0x20 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_44cd47
add esp 0x8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
test al 0x2
jne r-xdata
or [ ebx + 0x8 ] 0x40
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
mov eax 0xfffffffc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
or eax 0x1
mov [ ebx + 0x8 ] eax
lea eax [ esp + 0x30 ]
push eax
lea esi [ esp + 0x44 ]
call sub_40df50
jmp r-xdata
sub_46dd22
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
lea esi [ edi + 0x2e0 ]
call sub_410810
lea ebx [ edi + 0x1b8 ]
push ebx
call sub_442c43
push ebx
test al al
je r-xdata
call sub_443e34
test al al
je r-xdata
call sub_44b390
mov ebx eax
push ebx
mov [ esp + 0x14 ] ebx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
movzx edx [ edi + 0x2dc ]
mov ecx [ esp + 0x14 ]
movzx eax [ edi + 0x2dd ]
push ecx
mov ecx [ edi + 0x2d4 ]
push edx
push eax
push ecx
push esi
lea edx [ edi + 0x1c8 ]
push edx
push ebx
call sub_453063
push eax
add edi 0x1d8
push edi
call sub_46d6eb
pop edi
pop esi
pop ebx
retn 0x8
push ebx
add edi 0x1d8
push edi
call sub_44cc94
lea eax [ esp + 0x10 ]
push eax
push esi
call sub_434343
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
sub_46ddcc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
push ebx
push esi
push edi
lea edi [ esp + 0x30 ]
mov ebx ecx
call sub_40d4c0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ecx [ esi + 0x4 ]
mov edi eax
mov eax [ ecx + 0x4 ]
push eax
call sub_453063
mov edx [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ edx + 0x8 ]
push eax
call sub_453063
cmp [ esi + 0x8 ] 0x4
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] 0x0
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x38 ]
push eax
call sub_46865b
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov [ esp + 0x10 ] eax
push edi
lea ecx [ esp + 0x34 ]
push ecx
call sub_4602eb
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x20 ]
call sub_401400
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
push edx
push eax
push ecx
lea edx [ esp + 0x3c ]
push edx
call sub_46d585
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
call sub_40e640
mov eax [ esp + 0x10 ]
mov ecx [ ebx ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_404120
mov ecx edi
call sub_402620
lea edi [ esp + 0x30 ]
call sub_401360
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_40e640
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_4040e0
mov eax [ ebx ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
inc edx
push edx
add eax ebx
call sub_404120
lea edi [ esp + 0x30 ]
call sub_401360
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46df3d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi ecx
push 0x340
mov [ esp + 0x20 ] edi
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x0
push eax
call sub_44a56a
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp ecx eax
jne r-xdata
mov edx [ edi + 0x19c ]
mov [ esp + 0x18 ] edx
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ esp + 0x14 ]
push eax
add ebx 0x10
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x34 ] edx
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] eax
call sub_45335b
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] eax
call sub_45335b
mov eax [ edi + 0x1a0 ]
xor ecx ecx
mov [ esp + 0x18 ] ecx
test eax eax
jbe r-xdata
mov edx [ edi + 0x19c ]
mov eax [ edx + ecx * 4 ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x198 ]
push ecx
call sub_434343
jmp r-xdata
mov [ esp + 0x18 ] ecx
add [ esp + 0x18 ] 0x4
inc ecx
cmp ecx eax
jb r-xdata
push ebx
lea eax [ esp + 0x34 ]
push eax
call sub_463c42
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x3
add eax edi
call sub_4040e0
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esp + 0x14 ]
mov eax [ edx ]
push ecx
push eax
call sub_453063
push eax
push edi
call sub_46b85e
test al al
jne r-xdata
mov edx [ esp + 0x18 ]
mov edx [ edx ]
cmp [ edx ] 0x0
je r-xdata
xor edi edi
mov [ esp + 0x10 ] edi
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x24 ] 0x1
jbe r-xdata
call sub_401be0
inc edi
cmp [ eax ] 0x3b
jne r-xdata
mov eax [ esp + 0x10 ]
xor esi esi
cmp eax esi
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] esi
jle r-xdata
dec edi
lea esi [ esp + 0x20 ]
call sub_401be0
cmp [ eax ] 0x3b
je r-xdata
lea esi [ esp + 0x20 ]
call sub_401be0
cmp [ eax ] 0x0
je r-xdata
inc [ esp + 0x10 ]
jmp r-xdata
push 0x40
mov esi Ordinal_WSOCK32_115
push 0x3000
sub esi sub_410e26
push esi
push 0x0
call [ VirtualAlloc@IAT ]
push esi
mov edi eax
push sub_410e26
push edi
call sub_410f70
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x19c ]
mov edx [ esp + 0x24 ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
mov [ ecx + 0x10 ] edi
mov eax edi
sub eax sub_410e26
mov edx eax
add edx r-xdata
mov [ edx + 0x1 ] j_sub_47d511
mov edx [ esp + 0x20 ]
mov ecx eax
add ecx r-xdata
mov [ ecx + 0x1 ] edx
mov ecx eax
add ecx r-xdata
add esp 0xc
mov [ ecx + 0x1 ] ebx
add eax r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edi [ ebx + 0x40 ]
inc [ esp + 0x10 ]
mov [ eax ] 0xc3
cmp [ ebx + 0x4 ] 0x1
je r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
add eax ecx
call sub_4040e0
jmp r-xdata
mov ecx [ edi ]
add [ ebx + 0x8 ] ecx
inc esi
add edi 0x18
cmp esi [ esp + 0x10 ]
jl r-xdata
mov [ eax ] 0xc2
mov dx [ ebx + 0x8 ]
mov [ eax + 0x1 ] dx
jmp r-xdata
lea edx [ edi - 0x10 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_462f5a
test al al
je r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov eax [ esp + 0x18 ]
inc eax
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
sub_46e226
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov edi r--data
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] 0x0
call sub_40e6d0
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
push ebx
call sub_443e34
test al al
je r-xdata
push 0x0
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_45c216
test al al
jne r-xdata
push 0x38
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi + 0x17c ]
mov eax [ esp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
call sub_40d940
mov ebx eax
jmp r-xdata
push ebx
call sub_44c2a2
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
jmp r-xdata
cmp [ edi + 0x8 ] 0x2
jb r-xdata
test ebx ebx
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push eax
mov eax 0x2000
mov ecx ebx
call sub_40dfa0
test al al
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_40c060
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push ebx
call sub_46d3a6
test al al
jne r-xdata
push eax
call sub_41171a
add esp 0x4
lea ecx [ esp + 0x10 ]
mov edi eax
push ecx
push edi
push ebx
mov [ esp + 0x20 ] edi
call sub_4443f3
test al al
jne r-xdata
test [ ebx + 0x28 ] 0x10
mov [ esp + 0x10 ] eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_44ade5
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
call sub_40e640
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov edx [ ecx ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_404120
mov edi [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_4040e0
jmp r-xdata
mov edi [ esp + 0x10 ]
mov eax [ ebp + 0xc ]
push edi
push eax
call sub_452dae
mov ecx [ esp + 0x14 ]
push edi
push ecx
push eax
call sub_410f70
mov edx [ esi ]
mov eax [ edx + 0x4 ]
add esp 0xc
push 0x0
push edi
add eax esi
call sub_404120
mov edi [ esp + 0x14 ]
push edi
call sub_4112ef
mov edi [ ebp + 0x8 ]
add esp 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_4040e0
push edi
call sub_4112ef
mov edi [ ebp + 0x8 ]
add esp 0x4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_40d900
xor eax eax
push ebx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] eax
call sub_44ade5
lea ecx [ esp + 0x18 ]
call sub_402620
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_443e34
test al al
je r-xdata
sub_46e426
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi r--data
mov esi ecx
mov [ esp + 0x14 ] 0x0
call sub_40e6d0
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x2
jne r-xdata
mov edi [ esp + 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x0
push ebx
lea eax [ esp + 0x1c ]
push eax
push esi
call sub_45c216
test al al
je r-xdata
push 0x38
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
test edi edi
jg r-xdata
mov [ esp + 0x14 ] 0x7fffffff
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x17c ]
mov eax [ esp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
xor ebx ebx
call sub_40d940
mov ebx eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov ebx [ edx ]
push ebx
call sub_443e34
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push ebx
call sub_46d326
test al al
jne r-xdata
mov eax ebx
call sub_40e1c0
mov [ esp + 0x14 ] 0x0
test edi edi
jle r-xdata
mov eax 0x400
lea ecx [ esp + 0x18 ]
call sub_401400
mov [ esp + 0x13 ] 0x0
test edi edi
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
push eax
mov eax 0x2000
mov ecx ebx
call sub_40dfa0
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
call sub_40e640
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_4040e0
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_46d326
test al al
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_44ade5
lea ecx [ esp + 0x18 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_40d900
xor eax eax
push ebx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] eax
call sub_44ade5
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_443e34
test al al
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax edi
mov [ esp + 0x14 ] eax
jl r-xdata
cmp edi 0x7fffffff
je r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax esi
call sub_4040e0
mov [ esp + 0x13 ] 0x1
sub_46e5f5
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
xor eax eax
lea esi [ edi + 0x18 ]
mov [ ebx ] ax
call sub_403770
push esi
push edi
call sub_46d326
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
or eax 0xffffffff
mov edi 0xffe
call sub_40c740
mov ecx [ esi ]
push ecx
push ebx
call sub_411691
add esp 0x8
mov al 0x1
pop edi
pop esi
pop ebx
retn 0x8
sub_46e641
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x0
push esi
call sub_46dd22
mov edi eax
test edi edi
jg r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov edx [ esi + 0x2e8 ]
mov ecx 0x1
cmp edx ecx
jl r-xdata
jge r-xdata
xor eax eax
pop edi
pop esi
retn 0x4
mov esi [ esi + 0x2e4 ]
lea esp [ esp ]
mov eax edi
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
pop edi
mov eax 0x1
pop esi
retn 0x4
inc ecx
add esi 0x4
cmp ecx edx
jle r-xdata
mov edi [ esi ]
cmp [ edi ] eax
je r-xdata
sub_46e6b0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
lea ecx [ ecx ]
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push 0x1
call sub_40e2e0
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
retn 0x4
sub_46e727
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x9 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x8 ]
test eax eax
je r-xdata
dec [ esi ]
pop edi
mov [ esi + 0x9 ] 0x1
pop esi
retn 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push eax
call sub_46e709
dec [ esi ]
mov [ esi + 0x4 ] edi
pop edi
mov [ esi + 0x9 ] 0x0
pop esi
retn 0x4
push eax
call sub_46e709
sub_46e779
mov eax [ esp + 0x4 ]
sub esp 0x8
push eax
lea ecx [ esp + 0x4 ]
push ecx
call sub_435625
lea edx [ esp ]
push edx
push rw-data
call sub_453378
mov eax [ esp ]
push eax
lea ecx [ esp + 0x4 ]
call sub_40b800
add esp 0x8
retn 0x4
sub_46e7ba
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xf4 ]
mov ecx [ esi + 0x16c ]
push edi
lea edi [ esi + 0x16c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
test bl bl
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_409560
test bl bl
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_46e779
mov ebx [ esp + 0x14 ]
cmp ebx [ edi ]
jae r-xdata
push rw-data
call sub_46e727
mov edx [ esp + 0x10 ]
pop edi
mov [ esi + 0xf4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ebx [ ebx ]
call sub_40c8a0
cmp ebx [ edi ]
jb r-xdata
mov ecx [ esp + 0x10 ]
mov [ esi + 0xf4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46e849
push esi
mov esi [ esp + 0x8 ]
push sub_402620
push 0xd
push 0x10
lea eax [ esi + 0x8c ]
push eax
call sub_410aa0
lea ecx [ esi + 0x6c ]
call sub_402620
lea ecx [ esi + 0x28 ]
call sub_402620
pop esi
retn 0x4
sub_46e891
push ebx
xor ebx ebx
push esi
mov esi [ esp + 0xc ]
push edi
or edi 0xffffffff
lea ecx [ esi + 0x28 ]
mov [ esi ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x2
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_40c060
lea ecx [ esi + 0x6c ]
mov [ esi + 0x38 ] bl
mov [ esi + 0x39 ] bl
mov [ esi + 0x3a ] 0x1
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
call sub_40c060
mov [ esi + 0x84 ] ebx
push 0x10
lea ecx [ esi + 0x8c ]
mov ebx sub_40c060
lea eax [ edi + 0xe ]
mov [ esi + 0x7c ] 0x55
mov [ esi + 0x80 ] 0x190
mov [ esi + 0x88 ] 0x2
call sub_410b20
xor eax eax
mov [ esi + 0x180 ] edi
mov [ esi + 0x184 ] edi
mov [ esi + 0x1b0 ] edi
mov [ esi + 0x1b4 ] edi
mov [ esi + 0x15c ] al
mov [ esi + 0x160 ] eax
mov [ esi + 0x164 ] eax
mov [ esi + 0x168 ] eax
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x178 ] al
mov [ esi + 0x17c ] eax
mov [ esi + 0x188 ] eax
mov [ esi + 0x18c ] al
mov [ esi + 0x18d ] al
mov [ esi + 0x18e ] al
mov [ esi + 0x190 ] eax
mov [ esi + 0x194 ] eax
mov [ esi + 0x198 ] eax
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1b8 ] eax
mov [ esi + 0x1bc ] eax
mov [ esi + 0x1c0 ] eax
pop edi
mov [ esi + 0x19c ] 0x1
mov eax esi
pop esi
pop ebx
retn 0x4
sub_46e9cd
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax [ ebp + 0x10 ]
push edi
mov [ esi + 0x10 ] eax
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov [ esi + 0xc ] ecx
mov edi [ ebp ]
mov [ esi ] edi
cmp edi ebx
je r-xdata
inc [ eax ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
xor ecx ecx
mov eax edi
mov edx 0x20
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
lea ecx [ eax + 0x4 ]
mov [ eax ] edi
push 0x20
mov ebx sub_44b951
mov eax edi
mov [ esp + 0x1c ] ecx
call sub_410b20
mov eax [ esp + 0x18 ]
jmp r-xdata
xor edi edi
lea ebx [ ebx ]
xor ebx ebx
cmp [ esi ] ebx
mov [ esi + 0x4 ] eax
jle r-xdata
mov ecx [ ebp + 0x4 ]
mov edx [ esi + 0x4 ]
add ecx edi
push ecx
add edx edi
push edx
call sub_4532fe
inc ebx
add edi 0x20
cmp ebx [ esi ]
jl r-xdata
sub_46ea7f
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
mov ecx [ eax + ebx * 4 ]
push edi
mov edi [ ecx ]
push 0x0
push edi
call sub_43343d
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push esi
mov esi 0x3
cmp [ rw-data ] esi
jl r-xdata
push eax
call [ DestroyAcceleratorTable@IAT ]
mov eax [ edi + 0x20 ]
pop esi
test eax eax
je r-xdata
push ebp
mov ebp [ ImageList_Destroy@IAT ]
nop
mov edi [ edi + 0x24 ]
test edi edi
je r-xdata
push eax
call [ DestroyIcon@IAT ]
inc esi
cmp esi [ rw-data ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ebx * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
push edi
call [ DestroyIcon@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
pop ebp
movzx ecx [ eax + 0x88 ]
add ecx 0xfffffff6
cmp ecx 0x13
ja r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebx * 4 ]
mov [ eax ] 0x0
mov eax [ rw-data ]
dec eax
cmp ebx [ rw-data ]
pop edi
mov [ rw-data ] eax
pop ebx
jne r-xdata
push eax
call sub_46e877
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x60 ]
test eax eax
je r-xdata
movzx edx [ ecx + lookup_table_46ecab ]
jmp [ edx * 4 + jump_table_46ec97 ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
push eax
push edi
call sub_43343d
jmp r-xdata
push edi
push eax
push rw-data
call sub_454d51
test eax eax
jne r-xdata
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
jle r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x40 ]
test eax eax
je r-xdata
push eax
call [ DestroyIcon@IAT ]
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x38 ]
test eax eax
je r-xdata
push eax
call ebp
push eax
call ebp
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push eax
push 0x0
call [ KillTimer@IAT ]
mov [ rw-data ] 0x0
mov [ rw-data ] eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4c ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
push eax
call ebp
jmp r-xdata
retn 0x4
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
jne r-xdata
push esi
push rw-data
call sub_451c22
push eax
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
push rw-data
call sub_4333e4
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
inc eax
cmp eax ecx
jl r-xdata
sub_46ecbf
push ebx
push ebp
mov ebp [ esp + 0x1c ]
xor ebx ebx
push esi
push edi
mov edi [ esp + 0x14 ]
lea esi [ edi + 0x18 ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ esi + 0xc ] ebx
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ edi + 0x8 ] bl
mov [ edi + 0x2c ] bl
mov [ edi + 0x2d ] bl
mov [ edi + 0x30 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x28 ] ebx
mov [ edi + 0x4 ] eax
cmp ebp ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
push ebp
call sub_4112d5
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
push ebp
push eax
mov [ edi + 0x30 ] eax
call sub_411691
mov eax [ esp + 0x28 ]
add esp 0x10
cmp eax ebx
je r-xdata
mov [ edi + 0x2c ] 0x1
call sub_4092c0
lea eax [ edi + 0x38 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov esi [ VariantInit@IAT ]
push eax
call esi
lea ecx [ edi + 0x58 ]
push ecx
call esi
lea edx [ edi + 0x68 ]
push edx
call esi
lea eax [ edi + 0x78 ]
push eax
call esi
lea ecx [ edi + 0x88 ]
push ecx
call esi
lea edx [ edi + 0x48 ]
push edx
call esi
lea eax [ edi + 0x98 ]
push eax
call esi
lea ecx [ edi + 0xa8 ]
push ecx
call esi
cmp [ esp + 0x1c ] ebx
je r-xdata
mov ebp [ esp + 0x20 ]
cmp ebp ebx
je r-xdata
mov [ edi + 0x10 ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov [ edi + 0x28 ] ebp
mov eax [ ebp ]
mov ecx [ eax + 0x4 ]
push ebp
call ecx
mov edx [ esp + 0x1c ]
push edx
mov ebx esi
call sub_409210
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x14
sub_46edc6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
push edi
lea eax [ ebp + 0x10 ]
push eax
call sub_45335b
mov ebx [ ebp + 0x8 ]
push ebx
call sub_443dea
xor edi edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] 0x8
mov [ esp + 0x18 ] edi
mov [ esp + 0x20 ] edi
cmp [ ebp + 0x14 ] edi
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_402620
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ ebx ] edi
cmp [ ebp + 0x14 ] 0x1
jbe r-xdata
call sub_401be0
inc edi
cmp [ eax ] 0x3b
jne r-xdata
mov esi [ ebx ]
xor ecx ecx
mov eax esi
mov edx 0x20
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
dec edi
lea esi [ ebp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x3b
je r-xdata
lea esi [ ebp + 0x10 ]
call sub_401be0
cmp [ eax ] 0x0
je r-xdata
inc [ ebx ]
jmp r-xdata
xor edi edi
lea edi [ eax + 0x4 ]
mov [ eax ] esi
push 0x20
mov ebx sub_44b951
mov eax esi
mov ecx edi
call sub_410b20
mov ebx [ ebp + 0x8 ]
jmp r-xdata
inc [ ebx ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
cmp eax ecx
jge r-xdata
mov [ esp + 0x24 ] edi
mov [ ebx + 0x4 ] edi
lea ecx [ esp + 0x58 ]
xor edi edi
call sub_40c060
lea ecx [ esp + 0x48 ]
call sub_40c060
lea ecx [ esp + 0x38 ]
call sub_40c060
mov esi [ ebp + 0x10 ]
mov [ esp + 0x34 ] esi
cmp [ esi ] di
je r-xdata
mov esi [ esp + 0x10 ]
mov eax esi
cdq
idiv ecx
imul eax ecx
cmp eax esi
je r-xdata
mov ecx eax
inc edi
jmp r-xdata
cmp ax 0x9
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] esi
test eax eax
jne r-xdata
lea eax [ ecx + esi ]
cdq
idiv ecx
imul eax ecx
mov [ esp + 0x10 ] eax
mov esi eax
movzx eax [ esi + edi * 2 ]
cmp ax 0x20
je r-xdata
cmp [ esi + edi * 2 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x8 ] eax
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x5c ]
call sub_4021e0
xor eax eax
mov [ eax ] 0x1
jmp r-xdata
movzx eax [ esi + edi * 2 ]
push eax
lea eax [ esp + 0x5c ]
call sub_403470
inc edi
jmp r-xdata
cmp [ esi + edi * 2 ] 0x5f
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
lea ecx [ esp + 0x58 ]
call sub_402620
lea ecx [ ebp + 0x10 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ esp + 0x10 ]
push edx
mov [ ebx + 0x10 ] eax
call sub_41171a
mov ecx [ ebx + 0xc ]
push ecx
push 0x0
push eax
mov [ ebx + 0x8 ] eax
call sub_4131f0
add esp 0x10
jmp r-xdata
movzx ecx [ esi + edi * 2 ]
push ecx
call sub_4134d9
add esp 0x4
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x3c ]
mov [ esp + 0x18 ] 0x0
call sub_4021e0
inc edi
jmp r-xdata
cmp ax 0x9
jne r-xdata
movzx eax [ esi + edi * 2 ]
cmp ax 0x20
je r-xdata
cmp [ esi + edi * 2 ] 0x5b
je r-xdata
movzx eax [ esi + edi * 2 ]
cmp ax 0x20
je r-xdata
lea ebx [ ebx ]
inc edi
jmp r-xdata
cmp ax 0x9
jne r-xdata
movzx eax [ esi + edi * 2 ]
push eax
lea eax [ esp + 0x3c ]
call sub_403470
inc edi
jmp r-xdata
cmp [ esi + edi * 2 ] 0x5f
jne r-xdata
cmp [ esi + edi * 2 ] 0x5b
jne r-xdata
movzx edx [ esi + edi * 2 ]
push edx
call sub_4134d9
add esp 0x4
test eax eax
jne r-xdata
cmp [ esi + edi * 2 ] 0x3b
jne r-xdata
push r--data
lea eax [ esp + 0x4c ]
inc edi
call sub_4021e0
movzx eax [ esi + edi * 2 ]
push eax
call sub_41349d
add esp 0x4
test eax eax
je r-xdata
cmp edi [ ebp + 0x14 ]
jb r-xdata
inc edi
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
call sub_413431
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
jle r-xdata
lea ebx [ ebx ]
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
lea ecx [ esp + 0x58 ]
call sub_402620
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x1c ] rw-data
lea esp [ esp ]
push ebx
call sub_443dea
cmp [ esi + edi * 2 ] 0x5d
jne r-xdata
movzx eax [ esi + edi * 2 ]
push eax
lea eax [ esp + 0x4c ]
call sub_403470
movzx ecx [ esi + edi * 2 + 0x2 ]
inc edi
push ecx
call sub_41349d
add esp 0x4
test eax eax
jne r-xdata
cmp [ esp + 0x20 ] 0x80
jne r-xdata
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x1c ]
push eax
add ecx 0xffffffe8
push ecx
call sub_4133e4
mov ecx [ esp + 0x24 ]
add esp 0x8
test eax eax
jne r-xdata
inc edi
cmp [ esp + 0x14 ] 0x0
jg r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_413431
add esp 0x4
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
add ecx 0x1c
cmp ecx rw-data
mov [ esp + 0x1c ] ecx
jl r-xdata
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
test al 0x31
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
cmp eax ecx
jge r-xdata
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x28 ] 0x8
cmp eax 0x1
je r-xdata
cmp [ esp + 0x30 ] 0x0
jne r-xdata
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov edx [ ecx - 0x4 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x30 ] 0x1
cmp [ esp + 0x14 ] 0x0
jle r-xdata
mov esi [ esp + 0x10 ]
mov eax esi
cdq
idiv ecx
imul eax ecx
cmp eax esi
je r-xdata
mov ecx eax
cmp [ esi + edi * 2 ] 0x0
jne r-xdata
dec [ ebx ]
mov [ esp + 0x2c ] 0x0
jmp r-xdata
cmp eax 0x2
je r-xdata
or eax 0x4
mov [ esp + 0x20 ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
mov [ eax + ecx ] edx
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x18 ]
mov [ eax + ecx + 0x4 ] edx
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x20 ]
mov [ eax + ecx + 0x8 ] edx
mov edx [ ebx + 0x4 ]
lea ecx [ esp + 0x38 ]
push ecx
lea esi [ eax + edx + 0xc ]
call sub_40df50
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
imul eax edx
mov esi [ esp + 0x24 ]
add ecx eax
cmp edx [ esp + 0x2c ]
mov eax [ ebx + 0x4 ]
mov [ esp + 0x10 ] ecx
mov [ esi + eax + 0x1c ] ecx
jle r-xdata
lea eax [ ecx + esi ]
cdq
idiv ecx
imul eax ecx
mov [ esp + 0x10 ] eax
cmp eax 0x4
je r-xdata
add [ esp + 0x24 ] 0x20
mov esi [ esp + 0x34 ]
mov ecx edx
mov [ esp + 0x2c ] ecx
cmp eax 0x8
je r-xdata
cmp eax 0x10
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea ecx [ esp + 0x48 ]
call sub_402620
lea ecx [ esp + 0x58 ]
call sub_402620
lea ecx [ ebp + 0x10 ]
call sub_402620
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
dec [ ebx ]
mov [ esp + 0x2c ] 0x0
jmp r-xdata
sub_46f2b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_4340b2
mov ebx [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x48 ]
push eax
push ebx
call [ __import_lookup_table_9(SHELL32:DragQueryPoint) ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
push ecx
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_441cb4
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x44 ] edx
cmp eax 0xffffffff
je r-xdata
push 0x0
push ebx
push 0x233
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
test [ eax + 0x8a ] 0x8
je r-xdata
mov esi [ eax ]
mov edi [ SendMessageW@IAT ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push 0xb0
push esi
mov [ esp + 0x24 ] 0x0
call edi
push 0x0
push 0x0
push 0xffffffff
push ebx
call [ __import_lookup_table_9(SHELL32:DragQueryFileW) ]
xor ebx ebx
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x40 ]
push edx
push eax
push 0xb1
push esi
call edi
mov ecx [ ebp + 0xc ]
push ecx
call [ __import_lookup_table_9(SHELL32:DragFinish) ]
xor eax eax
mov ebx 0x1
lea esi [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] eax
call sub_4092c0
mov edx [ esp + 0x2c ]
mov edi r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] edx
call sub_401b70
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x18 ]
call sub_4019e0
mov ecx esi
call sub_402620
lea esi [ esp + 0x18 ]
call sub_4092c0
mov edi r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] 0xffffffff
call sub_401b70
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x18 ]
call sub_4019e0
mov ecx esi
call sub_402620
lea edi [ esp + 0x58 ]
lea ebx [ esp + 0x18 ]
call sub_40e6d0
mov edi r--data
lea esi [ esp + 0x30 ]
call sub_401b70
mov eax 0x2
lea ecx [ eax - 0x1 ]
mov edx ebx
call sub_4019e0
mov ecx esi
call sub_402620
mov eax [ esp + 0x44 ]
push 0x0
push 0x0
push eax
push 0xfffffff3
push rw-data
call sub_451aa9
mov esi ebx
call sub_4092c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea esp [ esp ]
mov eax [ esp + 0x10 ]
dec eax
cmp ebx eax
jge r-xdata
push r--data
lea edx [ esp + 0x5c ]
push edx
jmp r-xdata
lea edx [ esp + 0x58 ]
push edx
push 0x1
push 0xc2
push esi
call edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
push 0xb0
push esi
call edi
mov eax [ esp + 0x14 ]
push eax
push eax
push 0xb1
push esi
call edi
inc ebx
cmp ebx [ esp + 0x10 ]
jl r-xdata
push r--data
lea ecx [ esp + 0x5c ]
push ecx
call sub_411663
add esp 0x8
mov eax [ ebp + 0xc ]
push 0x104
lea edx [ esp + 0x5c ]
push edx
push ebx
push eax
call [ __import_lookup_table_9(SHELL32:DragQueryFileW) ]
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
mov eax [ ecx + edx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x88 ] 0x2
jne r-xdata
sub_46f50b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov [ esp + 0x10 ] eax
mov eax [ edx ]
push 0x1
push eax
push rw-data
call sub_456354
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
movzx ecx [ ebp + 0x10 ]
movzx edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
shl ecx 0x10
or ecx edx
push ecx
push eax
push 0x205
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
movzx ecx [ ebp + 0x10 ]
push 0x0
call [ ImageList_DragLeave@IAT ]
call [ ImageList_EndDrag@IAT ]
call [ ReleaseCapture@IAT ]
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_441cb4
mov edi eax
cmp edi 0xffffffff
je r-xdata
movzx ecx bx
jmp r-xdata
mov ecx [ rw-data ]
cmp edi ecx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
shl ecx 0x10
or ecx edx
push ecx
push eax
push 0x202
push esi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ rw-data ]
mov eax [ esp + 0x10 ]
mov eax [ edx + eax * 4 ]
mov edx [ eax ]
mov eax [ rw-data ]
mov [ esp + 0x14 ] edx
mov edx [ eax + edi * 4 ]
mov eax [ edx ]
test [ eax + 0x8a ] 0x8
je r-xdata
mov [ rw-data ] 0x0
mov ebx [ eax ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call sub_4559a8
mov edx [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push edx
call sub_4559a8
mov esi eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov al [ edx + 0x88 ]
cmp al 0x2
je r-xdata
push esi
push ebx
call [ SetWindowTextW@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push ebx
call [ SendMessageW@IAT ]
cmp al 0x3
jne r-xdata
push esi
call sub_4112ef
xor eax eax
mov ebx 0x1
add esp 0x4
lea esi [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] eax
call sub_4092c0
mov [ esp + 0x18 ] edi
mov edi r--data
lea esi [ esp + 0x28 ]
mov [ esp + 0x20 ] ebx
call sub_401b70
lea eax [ ebx + 0x1 ]
mov ecx ebx
lea edx [ esp + 0x18 ]
call sub_4019e0
mov ecx esi
call sub_402620
mov edi r--data
lea ebx [ esp + 0x18 ]
call sub_40e6d0
mov edi r--data
lea esi [ esp + 0x28 ]
call sub_401b70
mov eax 0x2
lea ecx [ eax - 0x1 ]
mov edx ebx
call sub_4019e0
mov ecx esi
call sub_402620
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
push eax
push 0xfffffff3
push rw-data
call sub_451aa9
mov esi ebx
call sub_4092c0
mov esi [ ebp + 0x8 ]
sub_46f749
push esi
mov esi [ esp + 0x8 ]
push esi
push rw-data
call sub_4340b2
push eax
call sub_46ea7f
push 0x0
push 0x0
push 0x2
push esi
call [ DefDlgProcW@IAT ]
pop esi
retn 0x4
sub_46f770
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x1c ]
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x38 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0x10003
push eax
call sub_4491cb
or ecx 0xffffffff
cmp edi ecx
jne r-xdata
mov eax 0x100
mov edx 0x20
cmp [ esp + 0x2c ] ecx
jne r-xdata
xor edi edi
cmp [ esp + 0x30 ] ecx
jne r-xdata
mov [ esp + 0x2c ] edx
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
push 0x0
push ecx
push 0x0
push 0x0
push ebx
push ebp
push eax
push 0x0
push r--data
push edi
push edx
call sub_43362d
mov [ esi ] eax
test eax eax
je r-xdata
mov [ esp + 0x30 ] edx
lea esi [ esp + 0x3c ]
call sub_4092c0
xor al al
pop edi
pop esi
pop ebp
pop ebx
retn 0x38
mov ax [ esp + 0x2c ]
mov cx [ esp + 0x30 ]
mov edi [ esp + 0x20 ]
mov [ esi + 0x84 ] ax
mov [ esi + 0x86 ] cx
cmp [ edi ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub esp 0x10
mov [ esi + 0x82 ] bx
lea eax [ esp + 0x4c ]
mov ebx esp
mov [ esi + 0x80 ] bp
call sub_40bd50
push edi
push esi
call sub_454daa
test al al
jne r-xdata
lea esi [ esp + 0x3c ]
call sub_4092c0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x38
mov eax 0x300
mov [ esi + 0x7e ] ax
mov edx [ esi ]
push edx
call [ __import_lookup_table_10(USER32:DestroyWindow) ]
sub_46f86d
sub esp 0x98
push ebx
push ebp
mov ebp [ esp + 0xa8 ]
push esi
push edi
lea ecx [ esp + 0xb8 ]
call sub_40c760
mov edx [ esp + 0xac ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
je r-xdata
lea esi [ esp + 0xb8 ]
call sub_4092c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x98
retn 0x1c
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov ecx [ rw-data ]
mov ebx [ esp + 0x1c ]
mov edx [ ecx + ebx * 4 ]
mov esi [ edx ]
mov dl [ esi + 0x88 ]
mov edi [ esi ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
push eax
mov [ esp + 0x1b ] dl
call sub_436134
movzx ecx dl
add ecx 0xfffffffa
add esp 0x4
mov [ esp + 0x1c ] eax
cmp ecx 0x14
ja r-xdata
movzx ecx [ ecx + lookup_table_470029 ]
jmp [ ecx * 4 + jump_table_47000d ]
push 0xfffffff0
push edi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test al al
jns r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push edi
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x34 ]
sub edx [ esp + 0x2c ]
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x20 ] edx
lea edx [ esp + 0x20 ]
push edx
push ebp
push esi
mov [ esp + 0x34 ] eax
call sub_4334ca
test eax eax
je r-xdata
sub esp 0x10
lea eax [ esp + 0xc8 ]
mov ebx esp
call sub_40bd50
push ebp
push esi
call sub_454daa
test al al
je r-xdata
push 0x1
lea edx [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x30 ]
push ecx
push eax
push ebp
call [ ExtractIconExW@IAT ]
test eax eax
jg r-xdata
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
push 0x0
push eax
push ebp
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
push 0x0
push eax
push ebp
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
cmp [ esp + 0x24 ] 0xffffffff
jne r-xdata
push 0x2010
push 0x0
push 0x0
push 0x0
push ebp
push 0x0
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push esi
push eax
call sub_43401c
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
mov ecx [ esp + 0x18 ]
push 0x0
push esi
push ecx
call sub_43401c
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
cmp [ esp + 0x17 ] 0x13
jne r-xdata
push 0x1
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x30 ]
push eax
push 0xffffffff
push ebp
call [ ExtractIconExW@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0x17 ] 0x10
jne r-xdata
mov edx [ esp + 0x18 ]
mov ebx [ edx + 0x17c ]
push ebx
push rw-data
call sub_4421c1
mov ebp eax
mov eax [ rw-data ]
mov ecx [ eax + ebp * 4 ]
mov edx [ ecx ]
mov edi [ edx + 0x3c ]
test edi edi
jne r-xdata
mov ecx [ esp + 0x1c ]
push 0x1
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x30 ]
push eax
push ecx
push ebp
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
cmp [ esp + 0x17 ] 0x18
jne r-xdata
push ebx
push 0x0
push 0xf7
push edi
call [ SendMessageW@IAT ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov edi [ esi + 0x30 ]
push edi
push rw-data
call sub_4421c1
lea ecx [ esp + 0x3c ]
push ecx
push 0xffffffff
push 0x1053
push edi
mov [ esp + 0x28 ] eax
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x54 ] ebx
call [ SendMessageW@IAT ]
mov [ esp + 0x24 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x1004
push edi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x34 ] 0x0
call [ SendMessageW@IAT ]
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov esi [ esi + 0x30 ]
push esi
push rw-data
call sub_4421c1
mov edi eax
mov [ esp + 0x24 ] ebx
mov [ esp + 0x1c ] ebx
mov edx [ rw-data ]
mov esi edi
mov edi ebx
mov [ esp + 0x24 ] 0x3
mov [ esp + 0x1c ] edx
jmp r-xdata
mov eax [ esp + 0x20 ]
movsx ecx [ esi + 0x80 ]
push eax
push ecx
push edi
call [ ImageList_ReplaceIcon@IAT ]
mov edi eax
movzx eax [ esi + 0x8b ]
lea edx [ esp + 0x3c ]
push edx
push eax
push 0x133d
push ebx
mov [ esp + 0x4c ] 0x2
mov [ esp + 0x60 ] edi
call [ SendMessageW@IAT ]
mov [ esi + 0x80 ] di
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov edi eax
mov eax [ rw-data ]
mov ecx [ eax + ebp * 4 ]
mov edx [ ecx ]
push edi
push 0x0
push 0x1303
push ebx
mov [ edx + 0x3c ] edi
call [ SendMessageW@IAT ]
test edi edi
je r-xdata
cmp [ esp + 0xb4 ] 0x0
mov ebp [ DestroyIcon@IAT ]
je r-xdata
push 0x2010
push 0x0
push 0x0
push 0x1
push ebp
push 0x0
call [ __import_lookup_table_10(USER32:LoadImageW) ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov edx [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x18 ]
mov ecx [ edx + eax * 4 ]
mov eax [ ecx ]
mov ebp [ eax + 0x34 ]
mov ebx [ eax + 0x38 ]
test ebp ebp
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
push 0xffffffff
push ebx
call [ ImageList_ReplaceIcon@IAT ]
cmp [ esp + 0x17 ] 0x10
mov ebx eax
jne r-xdata
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ebx eax
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
push ebx
push 0x0
push 0x1109
push esi
mov [ edx + 0x3c ] ebx
call ebp
test ebx ebx
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov ebx [ edx + 0x3c ]
mov ebp [ SendMessageW@IAT ]
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x20 ]
push ecx
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x20 ]
push eax
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x28 ]
push edx
jmp r-xdata
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
push ebx
push 0x1
push 0xf7
push edi
call [ SendMessageW@IAT ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] 0x0
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
push eax
call [ DestroyIcon@IAT ]
test ebx ebx
jne r-xdata
push 0x1
push ebp
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov edx [ rw-data ]
mov ebp eax
mov eax [ esp + 0x18 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ecx ]
push ebp
push 0x1
push 0x1003
push edi
mov [ edx + 0x34 ] ebp
call [ SendMessageW@IAT ]
mov edi [ esp + 0x24 ]
cmp edi [ esp + 0x1c ]
jg r-xdata
mov al [ esp + 0xb4 ]
test al 0x2
je r-xdata
lea eax [ esp + 0x3c ]
push eax
push esi
call [ __import_lookup_table_10(USER32:GetClientRect) ]
push 0x0
push 0x0
lea ecx [ esp + 0x44 ]
push ecx
push esi
call [ RedrawWindow@IAT ]
mov edx [ esp + 0x20 ]
push edx
jmp r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
call ebp
push ebx
push 0x1
push 0xf7
push edi
call [ SendMessageW@IAT ]
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
test ebp ebp
je r-xdata
push 0x1
push ebx
push 0x21
push 0x20
push 0x20
call [ ImageList_Create@IAT ]
mov ecx [ esp + 0x18 ]
mov ebx eax
mov eax [ rw-data ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push ebx
push 0x0
push 0x1003
push edi
mov [ eax + 0x38 ] ebx
call [ SendMessageW@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
test al 0x4
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx + 0x1a8 ] ebx
call [ DestroyIcon@IAT ]
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x64 ] ebx
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
push eax
call ebp
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x64 ] ebx
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
push eax
call [ DestroyIcon@IAT ]
mov edx [ esp + 0x20 ]
mov esi [ DestroyIcon@IAT ]
push edx
call esi
mov eax [ esp + 0x28 ]
push eax
call esi
lea esi [ esp + 0xb8 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x98
retn 0x1c
test ebx ebx
je r-xdata
inc edi
cmp edi [ esp + 0x1c ]
jle r-xdata
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov edx [ esp + 0x18 ]
mov [ edx + 0x1ac ] ebx
mov ecx [ esp + 0x20 ]
push ecx
push 0xffffffff
push ebp
mov ebp [ ImageList_ReplaceIcon@IAT ]
call ebp
mov edx [ esp + 0x28 ]
push edx
push 0xffffffff
push ebx
mov [ esp + 0x24 ] eax
call ebp
cmp [ esp + 0x17 ] 0x13
jne r-xdata
cmp [ eax + 0x88 ] 0x11
jne r-xdata
mov ebx [ esp + 0x24 ]
cmp ebx [ esp + 0x1c ]
mov esi ebx
jg r-xdata
mov eax [ esp + 0x18 ]
mov [ esi + 0x94 ] eax
cmp [ eax + 0x30 ] esi
jne r-xdata
mov ebp [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ eax + 0xc ]
lea ecx [ esp + 0x58 ]
push ecx
push 0x0
push 0x113e
push esi
mov [ esp + 0x6c ] eax
mov [ esp + 0x68 ] 0x32
call ebp
mov dl [ esp + 0xb4 ]
mov ecx [ esp + 0x74 ]
mov eax [ esp + 0x70 ]
test dl 0x2
je r-xdata
mov ebp [ SendMessageW@IAT ]
lea ecx [ esp + 0x80 ]
push ecx
push 0x0
push 0x104b
push edi
mov [ esp + 0x90 ] 0x2
mov [ esp + 0x94 ] esi
mov [ esp + 0x98 ] 0x0
call ebp
cmp [ esp + 0x9c ] 0xfffffffe
je r-xdata
test dl 0x4
je r-xdata
mov ecx ebx
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x80 ]
push eax
push 0x0
push 0x104c
push edi
mov [ esp + 0xac ] edx
call ebp
cmp [ esp + 0x17 ] 0x14
jne r-xdata
lea edx [ esp + 0x58 ]
push edx
push 0x0
push 0x113f
push esi
mov [ esp + 0x80 ] eax
mov [ esp + 0x84 ] ecx
call ebp
mov eax ebx
jmp r-xdata
inc esi
cmp esi [ esp + 0x1c ]
jle r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push 0x1015
push edi
call ebp
sub_47003e
push ecx
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
push esi
push rw-data
call sub_44213b
test al al
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
xor eax eax
pop esi
pop ecx
retn 0x14
mov eax [ rw-data ]
mov edx [ esp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x88 ] 0x15
je r-xdata
push ebx
push edi
lea edx [ esp + 0x18 ]
push edx
lea ebx [ eax + 0x68 ]
call sub_409210
push 0x0
push esi
call sub_461f2e
lea esi [ esp + 0x18 ]
movzx edi al
call sub_4092c0
mov eax edi
pop edi
pop ebx
pop esi
pop ecx
retn 0x14
sub_4700b0
sub esp 0x20
push ebx
mov ebx [ esp + 0x2c ]
push ebp
mov ebp [ esp + 0x40 ]
push esi
push edi
mov edi [ esp + 0x3c ]
push 0x1c4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor esi esi
push eax
call sub_46e891
mov esi eax
jmp r-xdata
xor eax eax
mov [ esp + 0x48 ] eax
test ecx ecx
jle r-xdata
lea eax [ esp + 0x3c ]
push eax
push rw-data
mov [ esp + 0x50 ] ecx
call sub_434343
mov esi [ esp + 0x3c ]
mov eax [ esp + 0x48 ]
jmp r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x3c ] esi
cmp [ rw-data ] ecx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov [ edx ] esi
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ edx ]
mov [ ecx + 0x4 ] eax
cmp ebp 0xffffffff
jne r-xdata
lea esp [ esp ]
or ebp 0x4000000
test ebp 0x10000
je r-xdata
mov ebp 0x80ca0000
mov [ esp + 0x48 ] eax
inc eax
cmp eax ecx
jl r-xdata
test ebp 0x40000
je r-xdata
or ebp 0x80000
mov edx [ rw-data ]
mov edx [ edx + eax * 4 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ esp + 0x4c ] 0xffffffff
jne r-xdata
or ebp 0x80000
mov ecx 0x40
test [ esp + 0x4c ] cl
je r-xdata
mov [ esp + 0x4c ] 0x0
or ecx 0xffffffff
mov eax 0x190
cmp [ esp + 0x40 ] ecx
jne r-xdata
mov eax [ esp + 0x50 ]
test eax eax
jne r-xdata
cmp [ esp + 0x44 ] ecx
jne r-xdata
mov [ esp + 0x40 ] eax
xor [ esp + 0x4c ] ecx
push eax
push rw-data
mov [ esi + 0xc ] ecx
call sub_4340b2
test eax eax
jl r-xdata
push rw-data
call sub_4333e4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x20
cmp ebx ecx
jne r-xdata
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x50 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x50 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call [ __import_lookup_table_10(USER32:GetClientRect) ]
push 0x7
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x28 ]
push 0x8
sub ecx eax
add ebx ecx
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
mov edx [ esp + 0x1c ]
sub edx [ esp + 0x2c ]
sub edx eax
mov eax ebp
and eax 0xc00000
add edi edx
cmp eax 0xc00000
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] 0x80000000
cmp edi 0xffffffff
jne r-xdata
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x7
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
mov edx [ esp + 0x10 ]
sub edx [ esp + 0x40 ]
add edx [ esp + 0x18 ]
sub edx eax
mov eax edx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
push 0x4
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
add edi eax
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
push edx
push eax
push 0x0
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
call [ __import_lookup_table_10(USER32:SetRect) ]
mov edx [ esp + 0x4c ]
push edx
push 0x0
push ebp
lea eax [ esp + 0x1c ]
push eax
call [ __import_lookup_table_10(USER32:AdjustWindowRectEx) ]
mov ecx [ rw-data ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x50 ]
sub eax [ esp + 0x14 ]
push 0x0
push ecx
mov ecx [ esp + 0x20 ]
sub ecx [ esp + 0x18 ]
push 0x0
push edx
mov edx [ esp + 0x44 ]
push eax
mov eax [ esp + 0x60 ]
push ecx
push edi
push ebx
push ebp
push edx
push r--data
push eax
call [ __import_lookup_table_10(USER32:CreateWindowExW) ]
mov [ esi ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x8
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
mov ecx [ esp + 0x14 ]
sub ecx [ esp + 0x44 ]
add ecx [ esp + 0x1c ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
mov edi eax
sar edi 0x1
test ebp __dos_header
je r-xdata
mov ecx [ esp + 0x48 ]
push ecx
push 0xffffffeb
push eax
call [ SetWindowLongW@IAT ]
mov edx [ esp + 0x50 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x3c ] ebx
lea eax [ esp + 0x10 ]
mov [ esi + 0x40 ] edi
mov ecx [ esi ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:GetClientRect) ]
mov edx [ esp + 0x18 ]
sub edx [ esp + 0x10 ]
push 0x0
mov [ esi + 0x44 ] edx
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x18 ]
push 0x11
mov [ esi + 0x48 ] eax
call [ GetStockObject@IAT ]
mov ecx [ esi ]
push eax
push 0x30
push ecx
call [ SendMessageW@IAT ]
push 0xffffffff
push esi
push rw-data
call sub_456354
cmp [ rw-data ] 0x0
jne r-xdata
push 0x4
call [ __import_lookup_table_10(USER32:GetSystemMetrics) ]
cdq
sub eax edx
sar eax 0x1
neg eax
add edi eax
mov edx [ esp + 0x48 ]
inc [ rw-data ]
push 0x0
push rw-data
mov [ rw-data ] edx
call sub_441533
test ebp 0x10000000
je r-xdata
push sub_461e7f
push 0x28
push 0x0
push 0x0
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov eax [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn 0x20
cmp [ esp + 0x40 ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call sub_4419a8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x20
cmp [ esp + 0x44 ] 0x0
je r-xdata
push 0x0
push 0x4
call sub_4417bc
sub_47042a
push ebx
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
mov edi [ esp + 0x10 ]
push ecx
lea ebx [ edi + 0x1b8 ]
call sub_409210
cmp [ esi + 0x8 ] 0x2
jb r-xdata
push r--data
lea eax [ edi + 0x1c8 ]
call sub_4021e0
pop edi
pop esi
pop ebx
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453063
push eax
lea esi [ edi + 0x1c8 ]
call sub_40df50
pop edi
pop esi
pop ebx
retn 0x8
sub_470480
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ ebp + 0x4 ]
mov ebx [ esi ]
push edi
push ebx
mov edi ecx
call sub_4423f9
test al al
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jb r-xdata
mov esi [ esp + 0x2c ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
push ebx
call sub_435611
mov esi [ esp + 0x2c ]
mov edi [ eax + 0x8 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x4 ]
lea ebx [ esp + 0x14 ]
call sub_40bd50
push ebx
call sub_443e34
test al al
jne r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edx ]
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_435611
push eax
call sub_453279
mov esi [ esp + 0x2c ]
mov ebx eax
call sub_4092c0
test ebx ebx
jne r-xdata
mov ecx ebx
call sub_40c760
mov ebx eax
lea esi [ esp + 0x14 ]
dec ebx
call sub_4092c0
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x14 ] ebx
mov [ esi + 0x8 ] 0x7
mov [ esi ] ebx
lea esi [ esp + 0x14 ]
call sub_4092c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov edx [ esp + 0x28 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push ebx
push edx
add eax edi
call sub_4040e0
lea esi [ esp + 0x14 ]
call sub_4092c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
sub_4705bb
sub esp 0x53c
push ebx
push ebp
mov ebp [ esp + 0x54c ]
push esi
mov esi [ esp + 0x54c ]
push edi
xor eax eax
push 0x208
push eax
lea ecx [ esp + 0x72 ]
push ecx
mov [ esp + 0x74 ] ax
call sub_4131f0
add esp 0xc
xor edx edx
push 0x208
push edx
lea eax [ esp + 0x342 ]
push eax
mov [ esp + 0x344 ] dx
call sub_4131f0
mov ecx [ esp + 0x564 ]
add esp 0xc
xor edi edi
mov [ esp + 0x10 ] ecx
lea ebx [ edi + 0x1 ]
cmp edi 0x60
jne r-xdata
add edi ebx
cmp edi 0x60
jl r-xdata
cmp edi 0x5f
ja r-xdata
mov edi r--data
lea esi [ esp + 0x28 ]
call sub_401b70
lea ecx [ esp + 0x558 ]
push ecx
mov eax esi
mov [ esp + 0x14 ] 0x0
call sub_40c140
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x1c ]
push eax
xor ecx ecx
call sub_40c3e0
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edi * 4 + rw-data ]
push edx
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x558 ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x53c
retn 0x18
jmp [ edi * 4 + jump_table_47139f ]
push eax
mov ebx ebp
call sub_409210
lea ecx [ esp + 0x28 ]
call sub_402620
jmp r-xdata
mov ecx esi
call sub_402620
lea ecx [ esp + 0x558 ]
call sub_402620
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x53c
retn 0x18
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_404110
mov edi [ eax + 0x14 ]
mov esi ebp
call sub_4092c0
mov [ ebp ] edi
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
call sub_404110
add eax 0x20
push eax
mov ebx ebp
call sub_409210
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
call [ GetLocalTime@IAT ]
movzx eax [ esp + 0x26 ]
push eax
push r--data
lea ecx [ esp + 0x70 ]
push ecx
push r--data
lea edx [ esp + 0x2d0 ]
push edx
lea eax [ esp + 0x2bc ]
push eax
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x2cc ]
call sub_402620
jmp r-xdata
push r--data
lea ecx [ esp + 0x280 ]
push ecx
lea edx [ esp + 0x314 ]
push edx
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x27c ]
call sub_402620
jmp r-xdata
push r--data
lea eax [ esp + 0x2f0 ]
push eax
lea ecx [ esp + 0x31c ]
push ecx
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x2ec ]
call sub_402620
jmp r-xdata
push r--data
lea edx [ esp + 0x290 ]
push edx
lea eax [ esp + 0x324 ]
push eax
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x28c ]
call sub_402620
jmp r-xdata
push r--data
lea ecx [ esp + 0x2a8 ]
push ecx
lea edx [ esp + 0x30c ]
push edx
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x2a4 ]
call sub_402620
jmp r-xdata
push r--data
lea eax [ esp + 0x2c0 ]
push eax
lea ecx [ esp + 0x2a4 ]
push ecx
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x2bc ]
call sub_402620
jmp r-xdata
lea edx [ esp + 0x2fc ]
push edx
call sub_442478
push eax
call sub_451dc7
push eax
push r--data
lea eax [ esp + 0x70 ]
push eax
jmp r-xdata
push r--data
lea ecx [ esp + 0x2e0 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
call sub_442478
push eax
call sub_451d4b
mov edi eax
mov esi ebp
call sub_40e640
lea ecx [ esp + 0x2dc ]
call sub_402620
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x0
push 0x26
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0x0
push 0x2b
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0x0
push 0x5
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x0
push 0x23
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0x0
push 0x19
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0x0
push 0x2e
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x0
push 0x1f
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0x0
push 0x17
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0x0
push 0x16
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x0
push 0x18
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0x0
push 0x1a
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0x0
push 0x10
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x0
push 0x6
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0x0
push 0x2
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0x0
push 0xb
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x0
push 0x7
push 0x0
call [ __import_lookup_table_9(SHELL32:SHGetFolderPathW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x6c ]
push edx
mov [ esp + 0x1c ] 0x104
call [ __import_lookup_table_0(KERNEL32:GetComputerNameW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea eax [ esp + 0x6c ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetWindowsDirectoryW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0x2a ] 0x0
push 0x104
lea edx [ esp + 0x6c ]
push edx
je r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x6
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x3
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x9
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x5
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0xa
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x2
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x7
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x8
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x4
jmp r-xdata
mov esi ebp
cmp [ rw-data ] bl
jne r-xdata
mov esi ebp
cmp [ rw-data ] bl
jne r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x40
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x41
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x42
jmp r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] 0x43
jmp r-xdata
mov edi [ esi + 0xc8 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edi [ esi + 0xb8 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edi [ esi + 0xd8 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov eax [ esi + 0xf4 ]
push eax
call sub_437a4d
mov esi ebp
mov edi eax
call sub_4092c0
mov [ ebp ] edi
jmp r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push 0x104
call [ __import_lookup_table_0(KERNEL32:GetCurrentDirectoryW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edx [ rw-data ]
movzx eax [ edx + 0x2c ]
test eax eax
je r-xdata
call sub_410d10
mov edi r--data
test al al
jne r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x28 ] bl
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x8 ]
mov esi ebp
call sub_4092c0
mov [ ebp ] edi
jmp r-xdata
mov edi [ rw-data ]
add edi 0xc
mov esi ebp
call sub_40e640
jmp r-xdata
push 0x104
push r--data
push r--data
push 0x80000002
lea esi [ esp + 0x78 ]
call sub_40f110
add esp 0x10
mov edi esi
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
push r--data
push r--data
push 0x80000001
lea esi [ esp + 0x78 ]
call sub_40f110
movzx eax [ esp + 0x78 ]
push 0x4
push esi
push eax
mov [ esp + 0x30 ] eax
call sub_435eed
add esp 0x1c
mov edi esi
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x324 ]
push edx
call [ GetKeyboardLayoutNameW@IAT ]
lea edi [ esp + 0x324 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x338 ]
push r--data
push eax
call sub_411691
lea ecx [ esp + 0x340 ]
push ecx
xor esi esi
xor edi edi
call sub_4112d5
add esp 0xc
test eax eax
jle r-xdata
push 0x104
lea edx [ esp + 0x6c ]
push edx
push 0x0
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x48 ]
push eax
push ebx
call sub_436582
add esp 0x8
lea edi [ esp + 0x48 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x48 ]
push ecx
push 0x2
call sub_436582
add esp 0x8
lea edi [ esp + 0x48 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x48 ]
push edx
push 0x3
call sub_436582
add esp 0x8
lea edi [ esp + 0x48 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x48 ]
push eax
push 0x4
call sub_436582
add esp 0x8
lea edi [ esp + 0x48 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea ecx [ esp + 0x38 ]
push ecx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ esp + 0x40 ]
mov esi ebp
call sub_4092c0
mov [ ebp ] edi
jmp r-xdata
lea edx [ esp + 0x38 ]
push edx
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ esp + 0x44 ]
mov esi ebp
call sub_4092c0
mov [ ebp ] edi
jmp r-xdata
call [ GetDesktopWindow@IAT ]
mov edi eax
push edi
call [ GetDC@IAT ]
push 0xc
push eax
mov [ esp + 0x18 ] eax
call [ GetDeviceCaps@IAT ]
mov esi ebp
mov [ esp + 0x18 ] eax
call sub_4092c0
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
push ecx
push edi
mov [ ebp + 0x8 ] ebx
mov [ ebp ] eax
call [ ReleaseDC@IAT ]
jmp r-xdata
call [ GetDesktopWindow@IAT ]
mov edi eax
push edi
call [ GetDC@IAT ]
push 0x74
push eax
mov [ esp + 0x18 ] eax
call [ GetDeviceCaps@IAT ]
mov esi ebp
mov [ esp + 0x18 ] eax
call sub_4092c0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
push eax
push edi
mov [ ebp + 0x8 ] ebx
mov [ ebp ] edx
call [ ReleaseDC@IAT ]
jmp r-xdata
push 0x104
lea ecx [ esp + 0x6c ]
push ecx
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x104
call [ GetTempPathW@IAT ]
lea esi [ esp + 0x68 ]
call sub_410110
mov edi esi
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x6c ]
push ecx
mov [ esp + 0x1c ] 0x104
call [ __import_lookup_table_1(ADVAPI32:GetUserNameW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
mov esi ebp
call sub_4092c0
mov [ ebp ] ebx
jmp r-xdata
push 0x104
lea edx [ esp + 0x6c ]
push edx
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea eax [ esp + 0x6c ]
push eax
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea ecx [ esp + 0x6c ]
push ecx
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea edx [ esp + 0x6c ]
push edx
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea eax [ esp + 0x6c ]
push eax
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea ecx [ esp + 0x6c ]
push ecx
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
push 0x104
lea edx [ esp + 0x6c ]
push edx
push r--data
call [ __import_lookup_table_0(KERNEL32:GetEnvironmentVariableW) ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov edi [ esi + 0x148 ]
mov esi ebp
call sub_4092c0
mov [ ebp ] edi
jmp r-xdata
mov edi [ esi + 0x14c ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
call [ __import_lookup_table_0(KERNEL32:GetCurrentProcessId) ]
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
test eax eax
jge r-xdata
mov esi ebp
mov [ ebp + 0x8 ] ebx
call sub_41353a
add esp 0xc
lea edi [ esp + 0x68 ]
call [ GetSystemDirectoryW@IAT ]
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
xor eax eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x20 ]
push eax
call sub_4341b0
call eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_4344a0
lea edi [ esp + 0x68 ]
mov ebx ebp
call sub_40e6d0
jmp r-xdata
call sub_4092c0
mov [ ebp ] 0x0
call sub_4092c0
mov [ ebp ] ebx
jmp r-xdata
call sub_4092c0
mov [ ebp ] ebx
jmp r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
cmp eax 0x6
je r-xdata
mov ebx ebp
call sub_40e6d0
jmp r-xdata
cmp [ eax + 0x26 ] bl
jne r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
xor ecx ecx
lea edi [ esp + 0x338 ]
mov ebx ebp
mov [ esp + esi * 2 + 0x338 ] cx
call sub_40e6d0
jmp r-xdata
movzx eax [ esp + edi * 2 + 0x338 ]
cmp ax 0x20
je r-xdata
cmp eax 0x4
jne r-xdata
mov esi ebp
fstp [ esp + 0x18 ]
call sub_4092c0
fld [ esp + 0x18 ]
fstp [ ebp ]
mov [ ebp + 0x8 ] 0x3
jmp r-xdata
fadd [ r--data ]
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov ebx ebp
cmp eax 0x9
jne r-xdata
cmp [ eax + 0x24 ] bl
jne r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
lea eax [ esp + 0x338 ]
push eax
add edi ebx
call sub_4112d5
add esp 0x4
cmp edi eax
jl r-xdata
cmp ax 0x2c
jne r-xdata
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov edi r--data
call sub_40e6d0
jmp r-xdata
cmp [ eax + 0x22 ] bl
jne r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
mov [ esp + esi * 2 + 0x338 ] ax
mov edx 0x2e
mov [ esp + esi * 2 + 0x338 ] dx
jmp r-xdata
cmp [ eax + 0x20 ] bl
jne r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
add esi ebx
cmp [ eax + 0x1e ] bl
jne r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
cmp [ eax + 0x1c ] bl
mov ebx ebp
jne r-xdata
cmp [ eax + 0x2e ] 0x0
mov edi r--data
jne r-xdata
mov edi r--data
call sub_40e6d0
jmp r-xdata
mov edi r--data
mov ebx ebp
call sub_40e6d0
jmp r-xdata
sub_47151f
sub esp 0x54
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x20 ]
call sub_40c060
lea ecx [ esp + 0x30 ]
call sub_40c060
lea ecx [ esp + 0x40 ]
call sub_40c060
mov eax [ esp + 0x6c ]
push eax
xor edi edi
xor ebp ebp
call sub_453081
mov ebx eax
movzx eax [ ebx ]
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x18 ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x5c ] edi
cmp ax di
je r-xdata
lea esi [ esp + 0x50 ]
call sub_4092c0
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x8
inc ebp
cmp ax 0x24
jne r-xdata
cmp ax 0x40
jne r-xdata
cmp [ ebx + ebp * 2 ] ax
jne r-xdata
push eax
lea eax [ esp + 0x24 ]
call sub_403470
cmp [ ebx + ebp * 2 ] ax
jne r-xdata
push r--data
lea eax [ esp + 0x34 ]
call sub_4021e0
movzx eax [ ebx + ebp * 2 ]
cmp ax 0x24
je r-xdata
push 0x24
lea eax [ esp + 0x24 ]
mov [ esp + 0x1b ] 0x1
call sub_403470
inc ebp
jmp r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
push r--data
lea eax [ esp + 0x34 ]
call sub_4021e0
movzx eax [ ebx + ebp * 2 ]
cmp ax 0x40
je r-xdata
push 0x40
lea eax [ esp + 0x24 ]
mov [ esp + 0x1b ] 0x1
call sub_403470
inc ebp
jmp r-xdata
cmp [ ebx + ebp * 2 ] di
je r-xdata
cmp ax di
je r-xdata
movzx eax [ ebx + ebp * 2 ]
xor edi edi
cmp ax di
jne r-xdata
mov esi [ esp + 0x6c ]
lea edi [ esp + 0x20 ]
call sub_40e640
cmp [ ebx + ebp * 2 ] di
je r-xdata
cmp ax di
je r-xdata
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_40d330
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x24 ]
call sub_40c140
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
lea esi [ esp + 0x44 ]
inc ebp
call sub_40df50
call sub_410a40
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x20 ]
push eax
xor ecx ecx
call sub_40c3e0
mov eax [ esp + 0x1c ]
cmp eax edi
je r-xdata
movzx eax ax
push eax
lea eax [ esp + 0x34 ]
call sub_403470
movzx eax [ ebx + ebp * 2 + 0x2 ]
inc ebp
cmp ax 0x24
jne r-xdata
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_40d330
lea ecx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x24 ]
call sub_40c140
jmp r-xdata
lea edx [ esp + 0x30 ]
push edx
lea esi [ esp + 0x44 ]
inc ebp
call sub_40df50
call sub_410a40
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x68 ]
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x58 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x5c ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
inc [ ecx ]
lea edx [ esp + 0x60 ]
push edx
push eax
call sub_4705bb
cmp eax edi
jne r-xdata
movzx eax ax
push eax
lea eax [ esp + 0x34 ]
call sub_403470
movzx eax [ ebx + ebp * 2 + 0x2 ]
inc ebp
cmp ax 0x40
jne r-xdata
mov edi r--data
lea eax [ esp + 0x20 ]
mov [ esp + 0x17 ] 0x1
call sub_40d330
lea ecx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x24 ]
call sub_40c140
lea eax [ esp + 0x20 ]
call sub_40d330
jmp r-xdata
push eax
call sub_453081
mov edi eax
lea eax [ esp + 0x20 ]
call sub_40d330
mov [ esp + 0x17 ] 0x1
jmp r-xdata
mov edi r--data
lea eax [ esp + 0x20 ]
mov [ esp + 0x17 ] 0x1
call sub_40d330
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x24 ]
call sub_40c140
lea eax [ esp + 0x20 ]
call sub_40d330
jmp r-xdata
lea ecx [ esp + 0x50 ]
push ecx
call sub_453063
push eax
lea eax [ esp + 0x24 ]
call sub_40c140
mov [ esp + 0x17 ] 0x1
jmp r-xdata
sub_4717e3
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0xc ]
add esi 0x4
push eax
mov eax esi
call sub_404110
mov ebx eax
call sub_409210
mov eax esi
call sub_404110
mov cl [ esp + 0x14 ]
pop esi
mov [ eax + 0x10 ] cl
pop ebx
retn 0xc
sub_471812
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
lea ecx [ edi + 0x10 ]
push ecx
lea ebx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_409210
add edi 0x20
push edi
lea ebx [ esi + 0x20 ]
call sub_409210
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
sub_471853
sub esp 0x44
push ebx
push ebp
push esi
mov esi [ esp + 0x5c ]
push edi
lea eax [ esp + 0x20 ]
xor ebx ebx
xor ebp ebp
call sub_40dce0
inc [ esi ]
mov ecx [ esp + 0x5c ]
mov eax [ esi ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
je r-xdata
mov edi [ esp + 0x58 ]
add edi 0x16c
movsx eax [ eax + 0xa ]
mov ecx [ esp + 0x58 ]
push eax
push 0x72
push ecx
call sub_45e62e
lea eax [ esp + 0x14 ]
call sub_4108c0
lea edx [ esp + 0x20 ]
push edx
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x10
push edi
call sub_43423f
test al al
je r-xdata
mov eax edi
call sub_40f360
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_471812
mov eax [ esp + 0x20 ]
cmp eax 0x4
je r-xdata
mov ecx [ esp + 0x64 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
call sub_40f2a0
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x5c ]
mov edx [ ecx + 0x4 ]
mov eax [ esi ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x58 ]
push ecx
push 0xb5
push edx
call sub_45e62e
lea eax [ esp + 0x14 ]
call sub_4108c0
lea eax [ esp + 0x20 ]
push eax
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x10
cmp eax 0x5
je r-xdata
lea eax [ esp + 0x14 ]
call sub_4108c0
lea ecx [ esp + 0x20 ]
push ecx
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x10
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x64 ]
inc ecx
mov [ edx ] ecx
call sub_40c8a0
jmp r-xdata
mov eax [ eax ]
add eax 0xffffffec
cmp eax 0x4
ja r-xdata
push edi
call sub_43423f
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_4719af ]
inc ebp
jmp r-xdata
cmp ebp ebx
je r-xdata
cmp ebp ebx
jne r-xdata
dec ebp
jmp r-xdata
sub_4719c3
sub esp 0x1c
push ebx
mov ebx [ esp + 0x24 ]
xor eax eax
push ebp
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push esi
push edi
push eax
mov ebp ecx
mov [ esp + 0x17 ] 0x1
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
call sub_410a40
xor edi edi
call sub_401be0
cmp [ eax ] 0x40
je r-xdata
mov esi [ esp + 0x34 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
lea ecx [ esp + 0x1c ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
push r--data
push esi
call sub_445840
cmp eax 0xffffffff
jne r-xdata
cmp [ ebx + 0x8 ] 0x3
jne r-xdata
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
mov ecx edi
lea esi [ esp + 0x24 ]
call sub_40c3e0
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
test al 0x1
je r-xdata
test [ esp + 0x18 ] 0x100
je r-xdata
cmp [ esp + 0x13 ] al
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
test al 0x2
je r-xdata
mov [ esp + 0x14 ] 0x1
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
push ecx
mov ebx eax
call sub_409210
lea ecx [ esp + 0x1c ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
mov ecx [ ebp ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x4 ]
mov eax edi
xor ecx ecx
call sub_4019e0
mov ecx esi
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
test al 0x4
je r-xdata
mov [ esp + 0x14 ] 0x2
add eax ebp
call sub_4040e0
mov esi [ esp + 0x34 ]
call sub_4092c0
lea ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn 0x8
mov [ esp + 0x13 ] 0x0
sub_471b73
sub esp 0x14
mov eax [ esp + 0x18 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
mov [ esp + 0x10 ] 0x0
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_410a40
push esi
call sub_453495
test eax eax
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
mov ebx [ esp + 0x28 ]
mov edi r--data
call sub_40e6d0
lea ecx [ esp + 0x10 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn 0x8
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x28 ]
push edx
xor ecx ecx
call sub_40c3e0
mov eax [ esp + 0x24 ]
mov ebx [ esp + 0x28 ]
push eax
call sub_409210
mov ecx esi
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn 0x8
sub_471c25
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
push 0x1
call sub_40c760
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_404120
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
push ebx
mov ebx [ esp + 0x14 ]
push eax
call sub_409210
pop ebx
sub_471c65
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax ]
push 0x1
call sub_40c760
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
push 0x1
call sub_40c760
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_404120
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
push edx
call sub_409210
pop ebx
sub_471cc5
sub esp 0x38
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x4c ]
mov esi [ edi + 0x4 ]
mov ebx [ esi ]
push ebx
mov ebp ecx
call sub_444279
test al al
je r-xdata
cmp [ edi + 0x8 ] 0x1
mov eax 0x8
jbe r-xdata
mov eax ebx
lea ebx [ esp + 0x10 ]
call sub_40bd50
push ebx
call sub_453081
push ebx
mov edi eax
call sub_443676
mov ebx [ esp + 0x50 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
push eax
lea edx [ esp + 0x24 ]
push edx
call sub_40c760
push eax
call sub_435eed
add esp 0xc
test al al
jne r-xdata
mov ecx [ esi + 0x4 ]
call sub_40c760
cmp eax 0x8
jle r-xdata
call sub_40e6d0
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn 0x8
add edi 0x4
mov ebx [ esp + 0x50 ]
lea edi [ esp + 0x20 ]
call sub_40e6d0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn 0x8
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
mov ebx [ esp + 0x50 ]
mov edi r--data
call sub_40e6d0
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn 0x8
sub_471dad
sub esp 0x8
push ebx
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push edi
call sub_453333
test al al
je r-xdata
push r--data
push edi
call sub_453081
push eax
call sub_413772
add esp 0x8
test eax eax
je r-xdata
mov ebx [ esp + 0x1c ]
push edi
call sub_409210
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push eax
call sub_443576
mov edi eax
mov ecx edi
add ecx 0x80000000
mov ebx edx
adc edx 0x0
test edx edx
ja r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_40be90
fstp [ esp + 0xc ]
mov esi [ esp + 0x1c ]
call sub_4092c0
fld [ esp + 0xc ]
pop edi
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov esi [ esp + 0x1c ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_40c760
mov esi [ esp + 0x1c ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0x8
cmp ecx 0xffffffff
ja r-xdata
sub_471e98
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi [ edx ]
mov eax [ esi + 0x8 ]
mov ebx 0x1
cmp eax ebx
je r-xdata
mov ebx [ esp + 0x10 ]
push esi
call sub_409210
pop esi
xor eax eax
pop ebx
retn 0x8
cmp eax 0x2
je r-xdata
push edi
cmp eax 0x3
je r-xdata
push esi
call sub_443576
mov esi [ esp + 0x14 ]
mov edi eax
mov ebx edx
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x2
pop esi
xor eax eax
pop ebx
retn 0x8
cmp eax 0x4
je r-xdata
cmp eax 0xb
jne r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push ebx
add eax ecx
call sub_4040e0
mov esi [ esp + 0x14 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebx
retn 0x8
push esi
call sub_443676
cmp eax 0x4
jg r-xdata
mov ecx esi
call sub_40c760
mov esi [ esp + 0x14 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] ebx
pop esi
xor eax eax
pop ebx
retn 0x8
sub_471f57
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0xc ]
add esi 0x4
push eax
mov eax esi
call sub_404110
mov ebx eax
add ebx 0x20
call sub_409210
mov eax esi
call sub_404110
pop esi
mov [ eax + 0x30 ] 0x0
pop ebx
retn 0x8
sub_471f86
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
xor eax eax
cmp [ esi + 0x8 ] 0x1
push edi
mov [ esp + 0xc ] eax
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x18 ] eax
jbe r-xdata
mov edx [ esi + 0x4 ]
mov esi [ edx ]
sub esp 0x10
lea eax [ esp + 0x1c ]
mov ebx esp
call sub_40bd50
mov ecx esi
call sub_40c760
push eax
call sub_47003e
mov esi [ esp + 0x24 ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
lea esi [ esp + 0xc ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
lea ebx [ esp + 0x10 ]
call sub_409210
sub_472000
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
or eax 0xffffffff
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] eax
cmp edi 0x3
jbe r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov [ esp + 0xc ] eax
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov edi [ eax ]
sub esp 0x10
lea eax [ esp + 0x20 ]
mov ebx esp
call sub_40bd50
mov eax [ esp + 0x1c ]
push eax
push esi
call sub_453081
push eax
mov ecx edi
call sub_40c760
push eax
call sub_46f86d
mov esi [ ebp + 0xc ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
lea ebx [ esp + 0x14 ]
call sub_409210
sub_4720ac
sub esp 0x14
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
or ebx 0xffffffff
push edi
mov edi [ esi + 0x8 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] ebx
mov ebp ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x28 ] 0x0
cmp edi 0x7
jbe r-xdata
cmp edi 0x6
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x1c ]
push eax
call sub_44b390
mov [ esp + 0x28 ] eax
cmp edi 0x5
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_40c760
mov [ esp + 0x10 ] eax
cmp edi 0x4
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
call sub_40c760
mov [ esp + 0x14 ] eax
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
mov [ esp + 0x18 ] eax
cmp edi 0x2
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_40c760
mov [ esp + 0x1c ] eax
cmp edi 0x1
jbe r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov ebp eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x28 ]
push ebp
push ebx
push ecx
push edx
push eax
call sub_453081
push eax
call sub_4700b0
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov ebx eax
mov esi [ esp + 0x2c ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
mov ecx [ esp + 0x20 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x1
add eax ecx
call sub_4040e0
mov esi [ esp + 0x2c ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
sub_4721e5
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
push edi
mov ebx esi
call sub_409210
mov al [ edi + 0x10 ]
mov [ esi + 0x10 ] al
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov dl [ edi + 0x18 ]
lea eax [ edi + 0x20 ]
push eax
lea ebx [ esi + 0x20 ]
mov [ esi + 0x18 ] dl
call sub_409210
mov cl [ edi + 0x30 ]
pop edi
mov [ esi + 0x30 ] cl
mov eax esi
pop esi
pop ebx
retn 0x8
sub_472224
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp ]
mov ecx [ eax + 0x4 ]
push esi
push edi
lea edi [ ecx + ebp + 0x4 ]
call sub_40dc00
mov edi [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
push edx
lea ebx [ ebp + 0x1b8 ]
call sub_409210
lea eax [ edi + 0x18 ]
push eax
lea esi [ ebp + 0x1c8 ]
call sub_40df50
mov ecx [ edi + 0x28 ]
mov [ ebp + 0x98 ] ecx
mov edx [ edi + 0x2c ]
mov [ ebp + 0x2f0 ] edx
mov eax [ edi + 0x30 ]
push eax
lea ecx [ ebp + 0x1d8 ]
push ecx
call sub_44cc94
mov edx [ edi + 0x34 ]
lea eax [ edi + 0x38 ]
push eax
lea esi [ ebp + 0x438 ]
mov [ ebp + 0x2f8 ] edx
call sub_40df50
cmp [ ebp + 0xf8 ] 0x1
mov ecx [ edi + 0x48 ]
mov [ ebp + 0x448 ] ecx
mov edx [ edi + 0x4c ]
mov [ ebp + 0x44c ] edx
mov eax [ edi + 0x50 ]
mov [ ebp + 0x454 ] eax
je r-xdata
mov edx [ edi ]
push edi
mov [ ebp + 0xf4 ] edx
call sub_45238a
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ edi + 0x54 ]
mov [ ebp + 0xf8 ] ecx
sub_4722d9
sub esp 0x38
push ebx
push ebp
mov ebp [ esp + 0x44 ]
push esi
push edi
push 0x58
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor edi edi
push eax
call sub_4523a4
mov edi eax
jmp r-xdata
mov eax [ ebp + 0xf4 ]
lea ecx [ ebp + 0x1b8 ]
push ecx
lea ebx [ edi + 0x8 ]
mov [ edi ] eax
call sub_409210
lea edx [ ebp + 0x1c8 ]
push edx
lea esi [ edi + 0x18 ]
call sub_40df50
mov eax [ ebp + 0x98 ]
mov [ edi + 0x28 ] eax
mov ecx [ ebp + 0x2f0 ]
mov [ edi + 0x2c ] ecx
mov edx [ ebp + 0x1d8 ]
mov eax [ edx ]
mov [ edi + 0x30 ] eax
mov ecx [ ebp + 0x2f8 ]
lea edx [ ebp + 0x438 ]
push edx
lea esi [ edi + 0x38 ]
mov [ edi + 0x34 ] ecx
call sub_40df50
mov eax [ ebp + 0x448 ]
mov [ edi + 0x48 ] eax
mov ecx [ ebp + 0x44c ]
mov [ edi + 0x4c ] ecx
mov edx [ ebp + 0x454 ]
mov [ edi + 0x50 ] edx
mov eax [ ebp + 0xf8 ]
mov [ edi + 0x54 ] eax
lea eax [ esp + 0x10 ]
call sub_4108d0
mov ecx [ ebp ]
mov edx [ ecx + 0x4 ]
lea ebx [ edx + ebp + 0x4 ]
call sub_40e420
lea eax [ esp + 0x10 ]
push eax
call sub_44cc52
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0x4
sub_4723ab
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
call sub_4092c0
push 0x14
call sub_41171a
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor edi edi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov edi eax
jmp r-xdata
lea ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0xc
mov [ esi ] edi
call sub_402620
mov eax edi
pop edi
pop esi
pop ebx
retn 0x1c
cmp edi ebx
je r-xdata
mov ecx [ esp + 0x1c ]
sub esp 0x10
mov [ esp ] ecx
mov edx [ esp + 0x30 ]
mov [ esp + 0x4 ] edx
mov ecx [ esp + 0x34 ]
mov [ esp + 0x8 ] ecx
mov edx [ esp + 0x38 ]
mov [ esp + 0xc ] edx
mov eax [ esp + 0x38 ]
inc [ eax ]
mov eax [ esp + 0x28 ]
push eax
push edi
call sub_46edc6
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
cmp eax ebx
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
retn 0x1c
push edi
call sub_44b3b8
sub_47244d
sub esp 0x10
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
mov edi [ InterlockedIncrement@IAT ]
xor eax eax
push rw-data
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x20 ] eax
lea esi [ eax + 0x3 ]
call edi
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
push esi
mov esi [ rw-data ]
and esi 0x3f
lea eax [ ebx + 0x18 ]
shl esi 0x4
add esi rw-data
mov [ esp + 0x1c ] 0x6
mov [ esp + 0x14 ] eax
call sub_40be00
mov edi [ ebx + 0x30 ]
lea ebx [ esp + 0x10 ]
call sub_40e6d0
mov esi [ rw-data ]
and esi 0x3f
shl esi 0x4
push ebx
add esi rw-data
call sub_40be00
mov eax [ esp + 0x28 ]
push eax
mov ecx ebx
call sub_467626
mov esi [ rw-data ]
and esi 0x3f
shl esi 0x4
push ebx
add esi rw-data
call sub_40be00
mov edi [ ebp + 0x8 ]
sub edi 0x1
js r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
inc eax
add ecx 0x40
cmp eax ecx
mov [ rw-data ] eax
jle r-xdata
mov ebx edi
shl ebx 0x4
cmp eax 0x1
jne r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
push 0xa
call [ Sleep@IAT ]
push rw-data
call edi
mov eax [ rw-data ]
dec esi
cmp eax 0x1
jne r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0xc
add eax 0xffffffc0
mov [ rw-data ] eax
mov edx [ ebp ]
add edx ebx
push edx
lea ecx [ esp + 0x14 ]
call sub_467626
mov esi [ rw-data ]
and esi 0x3f
lea eax [ esp + 0x10 ]
shl esi 0x4
push eax
add esi rw-data
call sub_40be00
dec edi
sub ebx 0x10
test edi edi
jge r-xdata
jmp r-xdata
sub_4725b4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
push edi
jne r-xdata
pop edi
mov eax 0x80020001
pop esi
mov esp ebp
pop ebp
retn 0x24
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
cmp edx 0xc
jne r-xdata
mov eax [ ebp + 0xc ]
dec eax
cmp eax 0xa
ja r-xdata
lea eax [ esi + 0x18 ]
push eax
call sub_43550e
test al al
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
jmp [ eax * 4 + jump_table_4727cc ]
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov eax [ esi + 0x28 ]
mov ecx 0x8
mov [ esp + 0x10 ] cx
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
mov edi [ ebp + 0x1c ]
mov [ esi + 0x2d ] 0x1
cmp [ edi + 0x8 ] 0x0
mov eax 0x8
mov [ esp + 0x10 ] ax
mov [ esp + 0x18 ] r--data
je r-xdata
push esi
call sub_4357ad
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
push ecx
mov ecx [ ebp + 0x18 ]
push eax
add esi 0x38
push esi
push ecx
call sub_43580a
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
add esi 0x68
push esi
push edx
call sub_43580a
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
add esi 0x58
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
push ecx
mov ecx [ ebp + 0x18 ]
push eax
add esi 0x48
push esi
push ecx
call sub_43580a
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
add esi 0x78
push esi
push edx
call sub_43580a
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
add esi 0x88
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
push ecx
mov ecx [ ebp + 0x18 ]
push eax
add esi 0x98
push esi
push ecx
call sub_43580a
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
add esi 0xa8
push esi
push edx
call sub_43580a
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
add esi 0xb8
mov ecx [ eax ]
lea edi [ esp + 0xc ]
push edi
push 0x1
lea edi [ esp + 0x20 ]
push edi
push edx
mov edx [ ecx + 0x1c ]
push eax
call edx
test eax eax
jl r-xdata
push edi
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_47244d
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
mov ecx [ edi ]
push ecx
lea edx [ esi + 0x38 ]
push edx
call [ VariantCopy@IAT ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
push eax
mov eax [ ebp + 0x18 ]
push edx
push esi
push eax
call sub_43580a
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
push esi
call sub_47244d
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x24
sub_4727f8
sub esp 0x10
push ebp
push esi
mov esi [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
push edi
mov edi ecx
call esi
mov ebp eax
push 0x1
push ebp
call sub_443eef
add esp 0x8
lea eax [ esp + 0xc ]
push eax
call [ GetCaretPos@IAT ]
test eax eax
jne r-xdata
push ebx
lea edx [ esp + 0x10 ]
push edx
push ebp
call [ ClientToScreen@IAT ]
call esi
mov ecx [ edi + 0x108 ]
push eax
lea eax [ esp + 0x1c ]
push eax
push ecx
call sub_4344b7
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
sub [ esp + 0x14 ] eax
mov edi [ esp + 0x28 ]
sub [ esp + 0x10 ] edx
push 0x2
push 0x1
mov eax edi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
mov ebx [ esp + 0x28 ]
add esp 0x18
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40d030
mov edi [ esp + 0x24 ]
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
pop ebx
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
jmp r-xdata
push 0x0
push ebp
call sub_443eef
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
sub_4728ec
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push esi
push edi
call sub_47042a
cmp [ esi + 0x8 ] 0x3
jne r-xdata
mov [ edi + 0x2f0 ] 0x0
call [ timeGetTime@IAT ]
mov [ edi + 0x2f8 ] eax
pop edi
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
imul eax eax 0x3e8
mov [ edi + 0x2f0 ] eax
call [ timeGetTime@IAT ]
mov [ edi + 0x2f8 ] eax
pop edi
pop esi
retn 0x8
sub_472946
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
push edi
mov edi r--data
mov esi ecx
call sub_40e6d0
mov ebx [ esp + 0x28 ]
mov edi [ ebx + 0x4 ]
mov ebp [ edi ]
push ebp
call sub_442fa3
test al al
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
push 0x1
push ebp
call sub_4354dd
mov ecx [ edi + 0x8 ]
call sub_40c760
jmp r-xdata
mov edi [ ebx + 0x4 ]
mov edx [ edi ]
push 0x1
push edx
call sub_4354dd
cmp ebp eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push 0x1
push ecx
call sub_4354dd
mov ebp eax
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
push 0x1
push edx
call sub_4354dd
mov ebp eax
xor edi edi
mov ecx [ edi + 0x4 ]
call sub_40c760
mov edi eax
cmp edi ebp
jbe r-xdata
lea ecx [ esp + 0x14 ]
call sub_40c060
cmp edi ebp
jae r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov [ esp + 0x10 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
mov esi [ esp + 0x2c ]
lea edi [ esp + 0x14 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
lea esp [ esp ]
mov ecx ebp
sub ecx edi
inc ecx
push ecx
call sub_41171a
add esp 0x4
xor esi esi
mov [ esp + 0x28 ] eax
cmp edi ebp
jae r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push edi
push 0x1
push 0x0
push eax
call sub_40d030
add esp 0x10
mov ecx eax
call sub_40c760
push eax
lea eax [ esp + 0x18 ]
call sub_403470
inc edi
cmp edi ebp
jb r-xdata
cmp [ esp + 0x10 ] 0x1
mov [ esi + eax ] 0x0
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
push edi
push 0x1
push 0x0
push eax
call sub_40d030
add esp 0x10
mov ecx eax
call sub_40c760
mov ecx [ esp + 0x28 ]
mov [ esi + ecx ] al
inc edi
inc esi
cmp edi ebp
jb r-xdata
push eax
call sub_43596c
add esp 0x4
push 0xffffffff
push eax
call sub_4359c4
add esp 0x8
jmp r-xdata
mov eax ecx
mov ebx [ esp + 0x2c ]
mov edi eax
call sub_40e6d0
mov edx [ esp + 0x28 ]
push edx
call sub_4112ef
push edi
call sub_4112ef
add esp 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
sub_472af7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
cmp [ edi + 0x8 ] 0x2
mov ebx eax
mov [ esp + 0x14 ] ebx
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov esi eax
mov esi eax
mov eax [ ebx + 0x4 ]
cmp esi eax
jbe r-xdata
xor ebx ebx
cmp ebx esi
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
mov ebx eax
cmp ebx esi
jbe r-xdata
sub esi ebx
mov eax esi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10 ] esi
call sub_401400
mov eax [ esp + 0x14 ]
push esi
push ebx
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_4608ce
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
inc esi
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
push 0x1
call sub_40e7e0
add esp 0x8
xor edi edi
test esi esi
jbe r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov edi eax
cmp edi 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push edi
push 0x1
push 0x0
push eax
call sub_40d030
add esp 0x10
lea esi [ esp + 0x28 ]
mov ebx eax
call sub_401be0
movzx ecx [ eax ]
mov esi ebx
mov [ esp + 0x14 ] ecx
call sub_4092c0
mov edx [ esp + 0x14 ]
inc edi
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] edx
cmp edi [ esp + 0x10 ]
jb r-xdata
lea esi [ esp + 0x18 ]
call sub_40d500
cmp edi 0x1
jne r-xdata
cmp edi 0x2
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_454125
push esi
lea ecx [ esp + 0x2c ]
push ecx
call sub_45efe7
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_401330
mov ecx [ ebp + 0xc ]
push edi
push 0x1
push 0x0
push ecx
call sub_40d030
add esp 0x10
push edi
lea edx [ esp + 0x1c ]
push edx
mov esi eax
call sub_44c96e
movzx ebx [ eax ]
call sub_4092c0
inc edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
cmp edi [ esp + 0x10 ]
jb r-xdata
mov esi [ esp + 0x1c ]
mov eax [ ebp + 0xc ]
push esi
push 0x1
mov [ esp + 0x18 ] esi
call sub_40e7e0
add esp 0x8
xor edi edi
test esi esi
jbe r-xdata
sub_472c98
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
mov [ esp + 0x34 ] ecx
call sub_453081
mov ecx [ edi + 0x4 ]
mov esi eax
mov eax [ ecx ]
push eax
mov [ esp + 0x1c ] esi
call sub_45302e
mov edx [ edi + 0x4 ]
mov ebx eax
mov eax [ edx + 0x4 ]
push eax
call sub_453081
mov [ esp + 0x28 ] eax
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_45302e
mov [ esp + 0x20 ] eax
mov eax ebx
lea ecx [ esp + 0x38 ]
call sub_401400
xor ecx ecx
cmp [ edi + 0x8 ] 0x3
mov [ esp + 0x2c ] ecx
mov [ esp + 0x13 ] cl
jb r-xdata
cmp [ esp + 0x20 ] ecx
jne r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
mov [ esp + 0x2c ] eax
test al 0x2
je r-xdata
mov eax [ esp + 0x2c ]
sub eax ecx
je r-xdata
xor edx edx
cmp [ esp + 0x13 ] dl
mov [ esp + 0x14 ] ecx
sete dl
mov edi edx
lea eax [ edi + ebx ]
push eax
mov eax [ ebp + 0xc ]
push 0x1
call sub_40e7e0
add esp 0x8
cmp [ esp + 0x13 ] 0x0
jne r-xdata
xor ecx ecx
and [ esp + 0x2c ] 0x1
mov [ esp + 0x13 ] 0x1
cmp ebx ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ecx
jle r-xdata
sub eax 0x1
je r-xdata
test ebx ebx
jle r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
push 0x1
push 0x0
push ecx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov esi [ esp + 0x18 ]
cmp [ esp + 0x13 ] 0x0
mov ebx [ ebp + 0xc ]
mov eax ebx
je r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
movzx ecx [ esi + eax * 2 ]
push edx
mov edx [ esp + 0x2c ]
push ecx
push edx
call sub_4340fa
add esp 0xc
test eax eax
je r-xdata
cmp ebx ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
mov [ esp + 0x14 ] 0xffffffff
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
push 0x2
push 0x1
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x18
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
call sub_40d030
mov ecx [ edi + 0x4 ]
mov esi eax
mov eax [ ecx ]
add esp 0x10
push eax
call sub_45302e
mov edx [ esp + 0x18 ]
push 0x0
push edx
lea ecx [ esp + 0x40 ]
call sub_403fb0
push 0x1
push 0x1
call sub_40e7e0
mov eax [ edi + 0x4 ]
mov eax [ eax ]
add esp 0x8
push eax
call sub_45302e
push 0x0
push esi
lea ecx [ esp + 0x40 ]
call sub_403fb0
push 0x0
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
mov esi eax
jmp r-xdata
mov eax [ esp + 0x1c ]
inc eax
cmp eax ebx
mov [ esp + 0x1c ] eax
jl r-xdata
inc [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx ]
push eax
call sub_45302e
mov esi [ esp + 0x18 ]
mov ebx eax
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
mov eax 0x1
lea ecx [ esp + 0x40 ]
call sub_403fb0
mov eax [ ebp + 0xc ]
push edi
push 0x1
push 0x0
push eax
call sub_40d030
inc edi
mov [ esp + 0x34 ] edi
add esp 0x10
lea edi [ esp + 0x38 ]
mov esi eax
call sub_40e640
mov eax [ esp + 0x14 ]
inc eax
cmp eax ebx
mov [ esp + 0x14 ] eax
jl r-xdata
lea edi [ esp + 0x38 ]
call sub_40e640
mov ecx [ esp + 0x30 ]
mov edx [ ecx ]
mov eax 0x1
sub eax [ esp + 0x14 ]
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_4040e0
mov ecx edi
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x14 ] 0x0
jg r-xdata
mov ecx [ esp + 0x28 ]
movzx edx [ ecx ]
push ebx
push edx
push esi
call sub_4340fa
add esp 0xc
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
mov ecx edi
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esp + 0x14 ]
inc edi
cmp [ esp + 0x13 ] 0x0
mov [ esp + 0x30 ] edi
je r-xdata
mov ecx eax
sub ecx esi
sar ecx 0x1
add ecx [ esp + 0x20 ]
sub ebx ecx
js r-xdata
mov esi [ ebp + 0xc ]
lea eax [ edi + 0x1 ]
push eax
push 0x1
mov eax esi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x18
mov esi eax
call sub_4092c0
mov eax 0x1
mov [ esi + 0x8 ] eax
mov [ esi ] edi
mov esi [ esp + 0x18 ]
mov [ esp + 0x24 ] eax
xor eax eax
mov eax [ ebp + 0xc ]
push edi
push 0x1
call sub_40e7e0
add esp 0x8
xor eax eax
mov [ esp + 0x24 ] eax
jmp r-xdata
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
push esi
push edx
push eax
call sub_413503
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x2c ]
sub eax 0x0
je r-xdata
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] eax
push r--data
lea eax [ esp + 0x3c ]
call sub_4021e0
test edi edi
jle r-xdata
mov edx [ esp + 0x18 ]
add edx 0x2
mov [ esp + 0x18 ] edx
lea ebx [ ebx + esi - 0x1 ]
mov eax [ esp + 0x18 ]
inc [ esp + 0x14 ]
lea ecx [ eax + esi * 2 ]
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov edx [ esp + 0x1c ]
movzx eax [ esi + edx * 2 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
push ecx
push eax
push edx
call sub_4340fa
add esp 0xc
test eax eax
jne r-xdata
sub eax 0x1
jne r-xdata
mov esi [ esp + 0x18 ]
test ebx ebx
jg r-xdata
mov esi [ esp + 0x24 ]
mov eax [ ebp + 0xc ]
push esi
push 0x1
push 0x0
push eax
call sub_40d030
inc esi
mov [ esp + 0x34 ] esi
add esp 0x10
lea edi [ esp + 0x38 ]
mov esi eax
call sub_40e640
push r--data
mov eax edi
call sub_4021e0
inc [ esp + 0x14 ]
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x18 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
cmp eax ebx
jne r-xdata
cmp [ esp + 0x14 ] edi
jl r-xdata
mov [ esp + 0x34 ] esi
lea ecx [ ecx ]
inc [ esp + 0x1c ]
movzx eax [ esi + eax * 2 ]
push eax
lea eax [ esp + 0x3c ]
call sub_403470
lea eax [ esi + ebx * 2 ]
mov [ esp + 0x18 ] eax
sub eax esi
mov esi [ esp + 0x20 ]
sar eax 0x1
add eax esi
sub ebx eax
js r-xdata
add esi ebx
lea edx [ edi + esi * 2 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
mov ecx [ esp + 0x28 ]
push esi
push ecx
push edi
call sub_4136bc
add esp 0xc
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x34 ]
mov eax edi
sub eax ecx
push 0x0
push ecx
sar eax 0x1
lea ecx [ esp + 0x40 ]
call sub_403fb0
mov edi [ esp + 0x24 ]
mov ecx [ ebp + 0xc ]
push edi
push 0x1
push 0x0
push ecx
call sub_40d030
inc edi
mov [ esp + 0x34 ] edi
add esp 0x10
lea edi [ esp + 0x38 ]
mov esi eax
call sub_40e640
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
inc [ esp + 0x14 ]
mov edi [ esp + 0x30 ]
lea esi [ edx + eax * 2 ]
mov [ esp + 0x18 ] esi
jmp r-xdata
add edi 0x2
lea ebx [ ebx + esi - 0x1 ]
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
movzx edx [ ecx ]
push ebx
push edx
push esi
call sub_4340fa
mov edi eax
add esp 0xc
mov [ esp + 0x18 ] edi
test edi edi
je r-xdata
sub_473190
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov eax [ ebx ]
push edi
push eax
mov edi ecx
call sub_4423f9
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0xc ] 0xffffffff
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ebx [ esp + 0x10 ]
call sub_40bd50
push ebx
call sub_443e34
test al al
jne r-xdata
mov ebx [ ebx + 0x8 ]
push ebx
call sub_44adff
test al al
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
mov edx [ ebp + 0xc ]
push 0x0
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
lea ecx [ esp + 0x20 ]
push ecx
push eax
call sub_435611
push eax
call sub_467e3d
mov edx [ edi ]
add esp 0x4
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_4040e0
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_40c760
mov ebx eax
lea esi [ esp + 0x10 ]
dec ebx
call sub_4092c0
mov esi [ ebp + 0x8 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x10 ] ebx
mov ecx ebx
call sub_40c760
sub eax 0x1
mov [ esp + 0xc ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x5
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4732bc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov eax [ ebx ]
push edi
push eax
mov edi ecx
call sub_4423f9
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x4
mov [ esp + 0xc ] 0xffffffff
jb r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ebx [ esp + 0x10 ]
call sub_40bd50
push ebx
call sub_443e34
test al al
jne r-xdata
mov ebx [ ebx + 0xc ]
push ebx
call sub_44adff
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ eax ]
push 0x0
push ecx
push edx
mov edx [ ebp + 0xc ]
push edx
push ecx
lea ecx [ esp + 0x24 ]
push ecx
push eax
call sub_435611
push eax
call sub_467e1a
mov edx [ edi ]
add esp 0x4
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_4040e0
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_40c760
mov ebx eax
lea esi [ esp + 0x10 ]
dec ebx
call sub_4092c0
mov esi [ ebp + 0x8 ]
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x10 ] ebx
mov ecx ebx
call sub_40c760
sub eax 0x1
mov [ esp + 0xc ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x5
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4733ec
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov edi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
mov [ esp + 0x14 ] 0x0
call sub_453063
mov edx [ eax ]
mov esi [ esp + 0x14 ]
sub esp 0x10
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0xc ] eax
inc [ eax ]
push ebx
lea eax [ esp + 0x24 ]
push eax
push esi
call sub_4723ab
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
call sub_4092c0
mov ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax edi
call sub_4040e0
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_44b390
mov ebx eax
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push ebx
push 0x3
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
sub_4734b7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x35c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push esi
push edi
push eax
mov edi ecx
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x20 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x24 ] eax
sub ecx 0x3
mov [ esp + 0x1c ] edx
mov eax ecx
cdq
sub eax edx
sar eax 0x1
lea edx [ eax + eax ]
mov [ esp + 0x44 ] ecx
cmp edx ecx
je r-xdata
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x4c ] eax
call sub_463c42
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x4
add eax edi
call sub_4040e0
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
cmp [ esp + 0x44 ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x10 ] eax
jle r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x2
add eax edi
call sub_4040e0
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
lea eax [ esp + 0x3c ]
push eax
push edi
call sub_463d7e
mov esi eax
mov [ esp + 0x10 ] esi
test esi esi
jne r-xdata
mov [ esp + 0x14 ] 0xc
lea esi [ esp + 0x78 ]
push ebx
lea ecx [ esp + 0x3c ]
push ecx
call sub_457838
lea edx [ esp + 0x38 ]
push edx
call sub_410d40
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
lea ecx [ esp + 0x18 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
lea ecx [ esp + 0x28 ]
call sub_402620
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
add [ esp + 0x40 ] ecx
add [ esp + 0x14 ] 0x8
lea ecx [ esp + 0x28 ]
call sub_402620
mov eax [ esp + 0x10 ]
inc eax
add esi 0x18
cmp eax [ esp + 0x44 ]
mov [ esp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x44 ]
mov edi [ ebp + 0xc ]
inc eax
push eax
push 0x1
mov eax edi
call sub_40e7e0
add esp 0x8
cmp [ esp + 0x48 ] 0x1
jne r-xdata
push 0xffffffff
push 0x67
push edi
call sub_45e62e
push 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ __import_lookup_table_0(KERNEL32:TerminateProcess) ]
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x14 ]
mov eax [ edx + ecx ]
push eax
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
mov [ esp + 0x2c ] edx
lea edx [ esi - 0x10 ]
mov [ esp + 0x34 ] eax
push edx
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x38 ] ecx
call sub_462f5a
test al al
je r-xdata
xor eax eax
cmp [ esp + 0x44 ] eax
jle r-xdata
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
add esp 0x10
push eax
lea ecx [ esp + 0x54 ]
push ecx
call sub_46b945
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_443e34
test al al
je r-xdata
lea edi [ esp + 0x68 ]
lea ecx [ esp + 0x18 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
mov edx [ ebp + 0xc ]
lea esi [ eax + 0x1 ]
push esi
push 0x1
push 0x0
push edx
call sub_40d030
add esp 0x10
push eax
push edi
call sub_46b945
mov eax esi
add edi 0x18
cmp eax [ esp + 0x44 ]
jl r-xdata
mov esi [ esp + 0x10 ]
sub_47375f
mov eax 0x305c
call sub_425210
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x24 ]
xor edi edi
call sub_40c060
push 0x14
mov ebx sub_44a582
mov eax 0x200
lea ecx [ esp + 0x870 ]
call sub_410b20
push edi
push 0x2
mov [ esp + 0x3c ] 0x22c
call CreateToolhelp32Snapshot
mov esi eax
lea eax [ esp + 0x34 ]
push eax
push esi
call Process32FirstW
mov ebp [ esp + 0x3070 ]
lea ebx [ esp + 0x86c ]
lea esp [ esp ]
lea ecx [ esp + 0x260 ]
push ecx
lea eax [ ebx + 0x4 ]
call sub_4021e0
mov edx [ esp + 0x3c ]
mov [ ebx ] edx
inc edi
add ebx 0x14
mov edx [ ebp + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
push eax
lea eax [ esp + 0x264 ]
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x464 ]
push ecx
lea edx [ esp + 0x264 ]
push edx
lea eax [ esp + 0x670 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x68 ]
push edx
call sub_413db0
lea eax [ esp + 0x478 ]
push eax
lea ecx [ esp + 0x278 ]
push ecx
call sub_411663
add esp 0x1c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov ebx [ esp + 0x3074 ]
push 0x2
lea ecx [ edi + 0x1 ]
push ecx
push 0x2
mov eax ebx
call sub_40e7e0
push 0x0
push 0x0
push 0x2
push 0x0
push ebx
call sub_40d030
add esp 0x20
mov esi eax
call sub_4092c0
mov ebp 0x1
mov [ esi + 0x8 ] ebp
mov [ esi ] edi
test edi edi
jle r-xdata
lea eax [ esp + 0x34 ]
push eax
push esi
call Process32NextW
test eax eax
jne r-xdata
push sub_4423f1
push 0x200
push 0x14
lea ecx [ esp + 0x878 ]
push ecx
call sub_410aa0
lea ecx [ esp + 0x24 ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x305c
retn 0x8
lea edx [ esp + 0x86c ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] edi
jmp r-xdata
push 0x0
push ebp
push 0x2
push 0x0
push ebx
call sub_40d030
mov ecx [ esp + 0x24 ]
mov edi [ ecx + 0x4 ]
add esp 0x14
mov ebx eax
call sub_40e6d0
mov edx [ esp + 0x3074 ]
push 0x1
push ebp
push 0x2
push 0x0
push edx
call sub_40d030
mov edi [ esp + 0x24 ]
fild [ edi ]
mov esi eax
mov eax [ edi ]
add esp 0x14
test eax eax
jge r-xdata
fstp [ esp + 0x10 ]
call sub_4092c0
fld [ esp + 0x10 ]
mov eax 0x1
add edi 0x14
fstp [ esi ]
add ebp eax
sub [ esp + 0x18 ] eax
mov [ esi + 0x8 ] 0x3
mov [ esp + 0x10 ] edi
jne r-xdata
fadd [ r--data ]
mov ebx [ esp + 0x3074 ]
sub_47395a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebx + 0x8 ]
mov [ esp + 0x14 ] edi
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor esi esi
cmp edi 0x1
jbe r-xdata
mov edi r--data
lea ebx [ esp + 0x20 ]
call sub_40d420
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov esi eax
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x18 ] 0xffffffff
call sub_443676
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_409210
call [ __import_lookup_table_0(KERNEL32:GetCurrentProcessId) ]
lea edx [ esp + 0x13 ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
call sub_453081
push eax
call sub_444233
add esp 0xc
test al al
je r-xdata
push 0x28
lea ecx [ esp + 0x34 ]
push ecx
push edi
call GetProcessMemoryInfo
test eax eax
je r-xdata
sub eax 0x1
jne r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov edi [ ebp + 0xc ]
mov ebx 0x2
push ebx
push 0x1
mov eax edi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
mov edx [ esp + 0x54 ]
add esp 0x18
mov esi eax
mov [ esp + 0x18 ] edx
call sub_4092c0
mov eax [ esp + 0x18 ]
push 0x1
mov [ esi ] eax
xor eax eax
push 0x1
push eax
push edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] eax
call sub_40d030
mov edi [ esp + 0x48 ]
add esp 0x10
mov esi eax
call sub_4092c0
xor eax eax
lea edx [ esp + 0x30 ]
push edx
push edi
call [ GetProcessIoCounters@IAT ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x410
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov edi eax
mov eax esi
sub eax 0x0
mov [ esp + 0x14 ] edi
je r-xdata
mov edi [ ebp + 0xc ]
push 0x6
push 0x1
mov eax edi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
mov ecx [ esp + 0x4c ]
mov esi eax
mov eax [ esp + 0x48 ]
add esp 0x18
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
call sub_4092c0
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push 0x1
push 0x1
push 0x0
mov ebx 0x2
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call sub_40d030
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
add esp 0x10
mov esi eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
call sub_4092c0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ebx
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call sub_40d030
mov edx [ esp + 0x50 ]
mov esi eax
mov eax [ esp + 0x54 ]
add esp 0x10
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_4092c0
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push 0x3
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
call sub_40d030
mov ecx [ esp + 0x5c ]
mov esi eax
mov eax [ esp + 0x58 ]
add esp 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
call sub_4092c0
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push 0x4
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call sub_40d030
add esp 0x10
mov esi eax
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x54 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
call sub_4092c0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push 0x5
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call sub_40d030
mov edx [ esp + 0x6c ]
mov edi [ esp + 0x68 ]
add esp 0x10
mov esi eax
mov [ esp + 0x1c ] edx
call sub_4092c0
mov eax [ esp + 0x1c ]
jmp r-xdata
mov [ esi ] edi
mov edi [ esp + 0x14 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
sub_473c1b
sub esp 0x3c
push ebx
mov ebx [ esp + 0x48 ]
mov edx [ ebx + 0x4 ]
push ebp
xor ebp ebp
or eax 0xffffffff
push esi
mov esi [ esp + 0x54 ]
xor ecx ecx
push edi
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] ebp
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] ax
mov eax [ esi ]
mov [ esp + 0x38 ] ebp
mov [ esp + 0x44 ] ebp
mov edi 0x1
mov [ esp + 0x40 ] edi
mov [ esp + 0x26 ] cx
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
inc eax
mov [ esi ] eax
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x18 ] edx
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x47
mov [ esp + 0x14 ] ebp
je r-xdata
inc eax
mov [ esi ] eax
mov [ esp + 0x54 ] ebp
lea ecx [ ecx ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
mov ecx [ esp + 0x50 ]
push eax
push 0x6f
push ecx
call sub_45e62e
lea esi [ esp + 0x38 ]
call sub_4092c0
lea edx [ esp + 0x1c ]
push edx
call sub_44b453
lea ecx [ esp + 0x28 ]
call sub_40ed60
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x10
add [ esp + 0x54 ] edi
sub ecx edi
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
mov eax [ ecx + eax * 4 ]
movsx ecx [ eax + 0x8 ]
sub ecx 0x47
je r-xdata
cmp [ esp + 0x54 ] ebp
je r-xdata
sub ecx 0x37
jne r-xdata
add [ esi ] edi
mov ax [ esp + 0x18 ]
mov ebx 0x7f
lea ecx [ esp + 0x1c ]
mov edx ebx
push ecx
lea edi [ esp + 0x2c ]
mov [ esp + 0x28 ] dx
mov [ esp + 0x2a ] ax
call sub_402cc0
mov eax [ esp + 0x2c ]
mov [ esp + 0x58 ] ebp
mov edx [ eax ]
cmp [ edx + 0x8 ] bx
je r-xdata
sub [ esp + 0x54 ] edi
jmp r-xdata
push eax
lea edi [ esp + 0x2c ]
call sub_402cc0
inc [ esi ]
mov edi 0x1
jmp r-xdata
mov edx [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edx * 4 - 0x4 ]
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x50 ]
push edx
push 0x6f
push eax
call sub_45e62e
lea esi [ esp + 0x38 ]
call sub_4092c0
lea ecx [ esp + 0x1c ]
push ecx
call sub_44b453
lea ecx [ esp + 0x28 ]
call sub_40ed60
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x10
lea esi [ esp + 0x38 ]
call sub_4092c0
lea edx [ esp + 0x1c ]
push edx
call sub_44b453
lea ecx [ esp + 0x28 ]
call sub_40ed60
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x10
lea esp [ esp ]
push 0xffffffff
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
mov ecx [ esp + 0x5c ]
lea edx [ esp + 0x34 ]
push edx
call sub_40ab50
test eax eax
jne r-xdata
mov esi [ eax ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x58 ]
push edx
xor ecx ecx
call sub_40c3e0
test al al
je r-xdata
lea esi [ esp + 0x38 ]
call sub_4092c0
lea eax [ esp + 0x1c ]
push eax
jmp r-xdata
mov esi [ esp + 0x5c ]
lea eax [ esp + 0x38 ]
push eax
call sub_40be00
mov eax [ esp + 0x2c ]
mov ebp [ esp + 0x58 ]
mov ecx [ eax + ebp * 4 ]
cmp [ ecx + 0x8 ] 0x40
jne r-xdata
test [ esp + 0x14 ] 0x100
jne r-xdata
call sub_44b453
lea ecx [ esp + 0x28 ]
call sub_40ed60
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn 0x10
mov ecx [ eax + ebp * 4 ]
cmp [ ecx + 0x8 ] bx
jne r-xdata
mov edx [ eax + ebp * 4 + 0x4 ]
cmp [ edx + 0x8 ] bx
je r-xdata
mov edi [ esp + 0x54 ]
cmp [ edi + 0x8 ] 0x8
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x58 ]
jne r-xdata
mov eax [ eax + ebp * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x50 ]
push edx
push 0x6e
push eax
call sub_45e62e
lea esi [ esp + 0x38 ]
call sub_4092c0
lea ecx [ esp + 0x1c ]
push ecx
jmp r-xdata
inc ebp
mov [ esp + 0x58 ] ebp
mov ebp eax
inc eax
mov [ esp + 0x58 ] eax
cmp [ edi + 0x8 ] 0x5
jne r-xdata
mov edx [ ecx + eax * 4 + 0x4 ]
cmp [ edx + 0x8 ] 0x35
je r-xdata
lea esi [ esp + 0x38 ]
call sub_4092c0
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x58 ]
mov [ esp + 0x40 ] 0x6
mov [ esp + 0x38 ] edi
mov edx [ eax + ecx * 4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x40
je r-xdata
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
cmp ax bx
je r-xdata
mov edx [ esp + 0x50 ]
push 0x1
lea ecx [ esp + 0x58 ]
push ecx
push edx
lea eax [ esp + 0x64 ]
lea ecx [ esp + 0x34 ]
call sub_40c620
test eax eax
jne r-xdata
mov [ esp + 0x58 ] ebp
lea esi [ esp + 0x38 ]
call sub_4092c0
lea edx [ esp + 0x1c ]
push edx
mov edi [ esp + 0x54 ]
sub_473f30
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push eax
push 0x1
push 0x0
push ecx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
fld [ esp + 0x10 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
pop esi
retn 0x10
sub_473f5f
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push 0x0
mov ebx 0x1
push ebx
push ebx
push eax
mov edi ecx
call sub_40d030
add esp 0x10
test eax eax
jne r-xdata
mov ecx eax
call sub_40c760
cmp eax 0x2b594d1
je r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push ebx
push ebx
push ebx
push eax
call sub_40d030
add esp 0x10
mov ecx eax
call sub_40c760
push eax
call Ordinal_WSOCK32_3
mov esi [ esp + 0x14 ]
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
call sub_4092c0
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
pop esi
xor eax eax
pop ebx
retn 0x8
call sub_4092c0
push 0x0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
call Ordinal_WSOCK32_111
mov ecx [ edi ]
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_47404b
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push 0x4
push 0x1
mov eax ebp
mov esi ecx
call sub_40e7e0
add esp 0x8
push 0x11
push 0x2
push 0x2
call Ordinal_WSOCK32_23
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
mov ebx [ esp + 0x14 ]
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
push 0x0
call Ordinal_WSOCK32_111
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
push 0x0
push 0x1
push 0x0
push ebp
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebp
retn 0x8
push 0x0
push 0x1
push 0x0
push ebp
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push ebp
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2b594d1
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
push 0x2
push 0x1
push 0x0
push ebp
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_40d030
mov ecx [ ebx + 0x4 ]
mov esi eax
mov eax [ ecx ]
add esp 0x10
push eax
call sub_453063
mov edi eax
call sub_40e640
push 0x3
push 0x1
push 0x0
push ebp
call sub_40d030
mov edx [ ebx + 0x4 ]
mov esi eax
mov eax [ edx + 0x4 ]
add esp 0x10
push eax
call sub_453063
mov edi eax
call sub_40e640
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
test al 0x1
je r-xdata
push 0x4
lea edx [ esp + 0x1c ]
push edx
push 0x20
push 0xffff
push edi
mov [ esp + 0x2c ] 0x1
call Ordinal_WSOCK32_21
test eax eax
je r-xdata
push 0x0
call Ordinal_WSOCK32_111
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
push 0x0
push 0x1
push 0x0
push ebp
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
pop ebx
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebp
retn 0x8
sub_4741bb
sub esp 0x10
push ebp
mov ebp [ esp + 0x18 ]
mov eax [ ebp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax + 0x4 ]
push edi
mov edi [ eax ]
call sub_40c760
push eax
push edi
call sub_453063
push eax
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_4647a2
test al al
jne r-xdata
push ebx
push 0x11
push 0x2
push 0x2
call Ordinal_WSOCK32_23
mov ebx [ esp + 0x28 ]
mov edi eax
push 0x4
push 0x1
mov eax ebx
call sub_40e7e0
add esp 0x8
cmp edi 0xffffffff
jne r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
push 0x10
lea edx [ esp + 0x14 ]
push edx
push edi
call Ordinal_WSOCK32_2
push 0x0
cmp eax 0xffffffff
jne r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x2b594d1
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
push 0x2
push 0x1
push 0x0
push ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_40d030
mov ecx [ ebp + 0x4 ]
mov esi eax
mov eax [ ecx ]
add esp 0x10
push eax
call sub_453063
mov edi eax
call sub_40e640
push 0x3
push 0x1
push 0x0
push ebx
call sub_40d030
mov edx [ ebp + 0x4 ]
mov esi eax
mov eax [ edx + 0x4 ]
add esp 0x10
push eax
call sub_453063
mov edi eax
call sub_40e640
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
call Ordinal_WSOCK32_111
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
push edi
call Ordinal_WSOCK32_3
jmp r-xdata
push 0x0
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
pop ebx
mov [ esi + 0x8 ] 0x1
pop edi
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
sub_474335
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x15c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
push edi
call sub_40c760
mov ebx [ ebp + 0xc ]
mov edi r--data
mov [ esp + 0x1c ] eax
call sub_40e6d0
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push 0x0
push 0x1
push 0x1
push eax
call sub_40d030
add esp 0x10
test eax eax
jne r-xdata
mov ecx eax
call sub_40c760
cmp eax 0x2b594d1
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
push 0xffffffff
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
push 0x1
push 0x1
push eax
call sub_40d030
add esp 0x10
mov ecx eax
mov [ esp + 0x18 ] eax
call sub_40c760
mov edi eax
xor eax eax
xor edx edx
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] eax
mov [ esp + 0x2a ] eax
mov [ esp + 0x2e ] eax
mov [ esp + 0x32 ] ax
mov [ esp + 0x44 ] 0x10
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xfffffffe
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x48 ]
push ecx
push eax
push eax
lea edx [ esp + 0x6c ]
push edx
push eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] 0x186a0
mov [ esp + 0x78 ] edi
mov [ esp + 0x74 ] 0x1
call Ordinal_WSOCK32_18
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x10 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edi
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x1c ]
inc ecx
push ecx
call sub_41171a
add esp 0x4
lea edx [ esp + 0x60 ]
push edx
push edi
mov [ esp + 0x1c ] eax
call Ordinal_WSOCK32_151
test eax eax
je r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov ecx [ esp + 0x14 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x14 ]
push edx
call sub_4112ef
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x44 ]
push eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
push ecx
push 0x0
push edx
push eax
push edi
call Ordinal_WSOCK32_17
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xffffffff
jne r-xdata
cmp [ esi + 0x8 ] 0x3
mov [ esp + 0x10 ] 0x0
jb r-xdata
push 0x0
call Ordinal_WSOCK32_111
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
add eax ecx
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ esp + 0x14 ]
push esi
mov [ esi + edi ] 0x0
call sub_4137e0
add esp 0x4
cmp eax edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
and eax 0x1
mov [ esp + 0x20 ] eax
call sub_40c760
and eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
push edi
push esi
je r-xdata
mov eax edi
lea ecx [ esp + 0x34 ]
call sub_401400
push esi
lea ecx [ esp + 0x54 ]
push ecx
call sub_4453c4
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x54 ]
call sub_403f40
lea esi [ esp + 0x50 ]
call sub_401330
cmp [ esp + 0x10 ] 0x0
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x34 ]
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
push 0x3
push 0x1
mov eax ebx
call sub_40e7e0
push 0x1
push 0x1
push 0x0
push ebx
call sub_40d030
mov edx [ esp + 0x40 ]
add esp 0x18
push edx
mov esi eax
call Ordinal_WSOCK32_11
push eax
lea eax [ esp + 0x38 ]
push eax
call sub_4453c4
lea ecx [ esp + 0x50 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
call sub_465d24
mov edi eax
call sub_40e640
lea ecx [ esp + 0x50 ]
call sub_402620
push 0x2
push 0x1
push 0x0
push ebx
call sub_40d030
mov esi eax
mov eax [ esp + 0x36 ]
add esp 0x10
push eax
call Ordinal_WSOCK32_15
movzx edi ax
call sub_4092c0
push 0x0
push 0x1
push 0x0
push ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
call sub_40d030
add esp 0x10
lea esi [ esp + 0x34 ]
mov [ esp + 0x18 ] eax
call sub_401330
mov edi [ esp + 0x1c ]
push edi
push ebx
mov eax [ esp + 0x20 ]
push edi
push eax
jmp r-xdata
call sub_40e640
lea ecx [ esp + 0x34 ]
call sub_402620
jmp r-xdata
mov esi ebx
cmp [ esp + 0x10 ] 0x0
push edi
je r-xdata
call sub_452dae
push eax
call sub_410f70
add esp 0xc
mov ecx [ esp + 0x14 ]
push ecx
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x18 ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push ecx
push edi
push edx
jmp r-xdata
sub_4746a4
sub esp 0x10
push ebp
push esi
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
push 0x0
mov ebp 0x1
push ebp
push ebp
push eax
mov edi ecx
call sub_40d030
add esp 0x10
test eax eax
jne r-xdata
mov ecx eax
call sub_40c760
cmp eax 0x2b594d1
je r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] ebp
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xffffffff
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ eax ]
push 0x3
push ebp
push ebp
push ebx
call sub_40d030
add esp 0x10
mov ecx eax
call sub_40c760
push eax
push 0x2
push ebp
push ebp
push ebx
call sub_40d030
add esp 0x10
push eax
call sub_453063
push eax
lea ecx [ esp + 0x18 ]
push ecx
push edi
call sub_4647a2
test al al
jne r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] ebp
mov [ esi ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xfffffffe
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ edx ]
push ebp
push ebp
push ebp
push eax
call sub_40d030
add esp 0x10
mov ecx eax
call sub_40c760
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4676a3
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ebp eax
call sub_443676
push 0x10
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push eax
push ebp
push ebx
call Ordinal_WSOCK32_20
mov esi [ esp + 0x28 ]
mov ebx eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
cmp ebx 0xffffffff
jne r-xdata
mov esi [ esp + 0x28 ]
call sub_4092c0
pop ebx
pop edi
mov [ esi + 0x8 ] ebp
mov [ esi ] 0xffffffff
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
mov [ esi ] ebx
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
push 0x0
mov [ esi ] 0x0
call Ordinal_WSOCK32_111
mov edx [ edi ]
push eax
mov eax [ edx + 0x4 ]
add eax edi
call sub_4040e0
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
sub_474827
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push esi
push 0x0
call [ Sleep@IAT ]
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] 0x40
call [ GlobalMemoryStatusEx@IAT ]
mov esi [ ebp + 0xc ]
push 0x7
push 0x1
mov eax esi
call sub_40e7e0
fild [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
test ecx ecx
jge r-xdata
fstp [ esp ]
push 0x0
push esi
call sub_473f30
fild [ esp + 0x10 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x1
push esi
call sub_473f30
fild [ esp + 0x18 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x2
push esi
call sub_473f30
fild [ esp + 0x20 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x3
push esi
call sub_473f30
fild [ esp + 0x28 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x4
push esi
call sub_473f30
fild [ esp + 0x30 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x5
push esi
call sub_473f30
fild [ esp + 0x38 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push 0x6
push esi
call sub_473f30
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
fadd [ r--data ]
sub_474910
sub esp 0x10
push ebx
push esi
push edi
lea eax [ esp + 0xc ]
push eax
mov esi ecx
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov edx [ esi + 0x100 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push edx
call sub_4344b7
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x20 ]
sub [ esp + 0xc ] eax
sub [ esp + 0x10 ] ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov edx [ edi + 0x4 ]
mov ebx [ edx ]
push ebx
call sub_453333
test al al
jne r-xdata
mov edi [ esp + 0x24 ]
push 0x2
push 0x1
mov eax edi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
mov ebx [ esp + 0x24 ]
add esp 0x18
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40d030
mov edi [ esp + 0x20 ]
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov ecx ebx
call sub_40c760
test eax eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
cmp eax 0x1
jne r-xdata
mov edi [ esp + 0xc ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov edi [ esp + 0x10 ]
jmp r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
sub_474a24
sub esp 0x48
push ebx
push ebp
push esi
mov esi [ esp + 0x58 ]
mov eax [ esi + 0x4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax ]
push edi
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov ebx eax
mov [ esp + 0x48 ] ebx
call sub_40c760
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ esp + 0x4c ] eax
call sub_40c760
mov edi eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
mov [ esp + 0x50 ] edi
call sub_40c760
cmp [ esi + 0x8 ] 0x8
mov ebp eax
mov [ esp + 0x54 ] ebp
jb r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x1c ]
push eax
call sub_44b390
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_40c760
cmp eax 0x1
jle r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call sub_44b390
jmp r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_40c760
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c760
mov [ esp + 0x18 ] eax
jmp r-xdata
mov edx [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x20 ] eax
mov eax [ edx + 0x104 ]
push ecx
push eax
call sub_4344b7
cmp [ esi + 0x8 ] 0x7
jb r-xdata
mov esi [ esp + 0x60 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
mov eax [ esp + 0x18 ]
xor ecx ecx
neg eax
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
push eax
call sub_40c760
push eax
lea edx [ esp + 0x40 ]
push edx
call sub_4426e9
mov eax [ esp + 0x4c ]
cmp edi ebx
setl [ esp + 0x12 ]
cmp ebp eax
setl [ esp + 0x13 ]
sub ebp eax
push ebp
call sub_413762
mov ebp eax
sub edi ebx
push edi
inc ebp
call sub_413762
mov edx [ esp + 0x24 ]
mov ebx [ esp + 0x2c ]
add esp 0x8
mov edi eax
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x4c ]
push ecx
push edx
push ebx
inc edi
mov [ esp + 0x6c ] 0x0
call sub_434506
mov esi eax
mov [ esp + 0x30 ] esi
test esi esi
je r-xdata
cmp [ esi + 0x8 ] 0x6
jb r-xdata
push esi
call sub_4112ef
add esp 0x4
cmp [ esp + 0x5c ] 0x0
jne r-xdata
lea eax [ edi * 4 ]
mov ebx eax
imul ebx ecx
cmp [ esp + 0x5c ] 0x0
lea edx [ ebx + eax ]
mov [ esp + 0x28 ] edx
mov eax ebx
mov [ esp + 0x14 ] ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x48
retn 0x8
mov ebx [ esp + 0x24 ]
add ecx [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
add [ esp + 0x20 ] edx
cmp [ esp + 0x5c ] 0x0
mov [ esp + 0x1c ] ecx
je r-xdata
jmp r-xdata
cmp ecx ebp
jge r-xdata
cmp eax [ esp + 0x28 ]
jge r-xdata
add eax esi
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_4426a2
test al al
je r-xdata
cmp [ esp + 0x5c ] 0x0
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
lea eax [ edx + ecx * 4 ]
mov ecx [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
je r-xdata
mov esi [ esp + 0x60 ]
push 0x2
push 0x1
mov eax esi
mov [ esp + 0x64 ] 0x1
call sub_40e7e0
mov eax [ esp + 0x1c ]
sub eax ebx
cdq
and edx 0x3
add eax edx
add esp 0x8
sar eax 0x2
cmp [ esp + 0x12 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
add ecx eax
mov ecx [ esp + 0x50 ]
sub ecx eax
jmp r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x1c ]
add eax ecx
mov eax [ esp + 0x20 ]
jmp r-xdata
sub ecx [ esp + 0x40 ]
push 0x0
push 0x1
push 0x0
push esi
mov [ esp + 0x3c ] ecx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
cmp [ esp + 0x13 ] 0x0
mov edx [ esp + 0x2c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edx
je r-xdata
sub eax [ esp + 0x44 ]
mov edx [ esp + 0x60 ]
push 0x1
push 0x1
push 0x0
push edx
mov [ esp + 0x3c ] eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x2c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
mov esi [ esp + 0x30 ]
sub_474d36
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
cmp [ ebx + 0x8 ] 0x0
push ebp
push esi
push edi
mov esi ecx
jne r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx ]
call sub_40c760
mov edi [ esi + 0x4 ]
mov ebp eax
mov [ esp + 0x1c ] edi
mov eax [ esi + 0x4 ]
xor edi edi
mov [ esp + 0x1c ] eax
lea esp [ esp ]
push ecx
lea ecx [ esp + 0x20 ]
mov [ esp ] 0x0
push ecx
call sub_442fdf
test al al
je r-xdata
mov ecx [ edi ]
cmp [ ecx + 0xd8 ] ebp
je r-xdata
mov esi [ esp + 0x20 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov edx [ esp + 0x1c ]
mov eax [ edx ]
add eax 0xd4
push eax
call sub_442c34
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x20 ]
push eax
call sub_440eac
mov edi [ esp + 0x1c ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_440eac
jmp r-xdata
inc edi
mov ebx [ esp + 0x20 ]
push 0x6
push 0x1
mov eax ebx
call sub_40e7e0
mov eax [ edi ]
mov ebp [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push 0x0
push 0x1
push 0x0
push ebx
mov [ esp + 0x2c ] eax
call sub_40d030
add esp 0x18
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x14 ]
push 0x1
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebp
mov [ esi + 0x4 ] ecx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
mov ebp [ eax + 0x10 ]
push 0x1
push 0x0
push ebx
mov [ esp + 0x24 ] edx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x14 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebp
mov eax [ edi ]
add eax 0xd4
push eax
call sub_442c34
mov [ esp + 0x20 ] al
mov ecx [ esp + 0x20 ]
push ecx
push 0x2
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
push eax
call sub_452d91
mov eax [ edi ]
push eax
call sub_4520fc
mov [ esp + 0x20 ] al
mov edx [ esp + 0x20 ]
push edx
push 0x3
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
push eax
call sub_452d91
mov eax [ edi ]
mov ebp [ eax + 0x18 ]
push 0x4
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebp
mov ecx [ edi ]
mov edi [ ecx + 0x1c ]
push 0x5
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
cmp eax 0xffffffff
jne r-xdata
push ecx
lea eax [ esp + 0x20 ]
mov [ esp ] 0x0
push eax
call sub_442fdf
test al al
je r-xdata
push ecx
lea ecx [ esp + 0x20 ]
mov [ esp ] 0x0
push ecx
call sub_442fdf
test al al
je r-xdata
cmp eax 0x5
ja r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x2
jmp r-xdata
jmp [ eax * 4 + jump_table_475042 ]
add eax esi
call sub_4040e0
mov ebx [ esp + 0x20 ]
mov edi r--data
call sub_40e6d0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov edi [ edi ]
mov ebx [ edi + 0x8 ]
mov esi [ esp + 0x20 ]
mov edi [ edi + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov edi [ edi ]
mov ebx [ edi + 0x10 ]
mov esi [ esp + 0x20 ]
mov edi [ edi + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov edi [ edi ]
add edi 0xd4
push edi
call sub_442c34
mov [ esp + 0x1c ] al
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
push edx
push eax
call sub_452d91
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov edi [ edi ]
push edi
call sub_4520fc
mov edx [ esp + 0x20 ]
mov [ esp + 0x1c ] al
mov ecx [ esp + 0x1c ]
push ecx
push edx
call sub_452d91
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov eax [ edi ]
mov edi [ eax + 0x18 ]
mov ecx [ edi ]
mov edi [ ecx + 0x1c ]
jmp r-xdata
sub_47505a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xf4
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x1
mov esi ecx
jbe r-xdata
xor ebx ebx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40c760
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_45b490
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x10 ] edx
mov edx [ esi ]
mov [ esp + 0x14 ] eax
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
add eax esi
push eax
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x24 ] 0x0
call sub_471f57
lea esi [ esp + 0x10 ]
call sub_4092c0
lea ecx [ esp + 0x20 ]
push ecx
call sub_44ac2d
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
mov edx [ esi ]
mov ecx [ esp + 0x3c ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax esi
call sub_404120
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
lea ecx [ esp + 0x20 ]
push ecx
call sub_44ac2d
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov edi [ ecx ]
sub esp 0x78
lea edx [ esi + 0x10 ]
mov eax esp
push edx
push eax
call sub_44acca
push 0x0
push ebx
push r--data
push edi
call sub_453081
push eax
lea ecx [ esp + 0xa8 ]
push ecx
call sub_44ad09
push 0x1
lea edx [ esp + 0x24 ]
push edx
call sub_465fc3
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
sub_47516b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
push edi
mov [ esp + 0x18 ] ebx
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
push edi
call sub_442fa3
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call sub_44b390
mov [ esp + 0x18 ] eax
push 0x1
push edi
call sub_4354dd
xor ecx ecx
mov edi eax
mov edx 0x6
mul edx
seto cl
mov [ esp + 0x24 ] edi
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov [ esp + 0x1c ] eax
test edi edi
jle r-xdata
mov edx [ esp + 0x18 ]
push edx
push ebx
push ebx
call sub_441b92
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x18 ]
push ecx
push edi
push eax
call sub_441b92
mov edx [ esp + 0x1c ]
push edx
call sub_4112ef
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x20 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push 0x0
push ebx
push 0x2
push 0x1
push eax
call sub_40d030
add esp 0x14
push eax
call sub_453063
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
push 0x1
push ebx
mov [ esp + 0x44 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push 0x2
push 0x1
push eax
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] edx
call sub_40d030
add esp 0x14
mov ecx eax
call sub_40c760
lea esi [ esp + 0x40 ]
mov [ esp + 0x2c ] eax
call sub_401b70
lea ecx [ esp + 0x17 ]
push ecx
lea edx [ esp + 0x1a ]
push edx
lea eax [ esp + 0x1d ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
push esi
call sub_468387
test al al
mov ecx esi
sete [ esp + 0x13 ]
call sub_402620
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_4112ef
mov esi [ ebp + 0xc ]
add esp 0x4
call sub_4092c0
lea ecx [ esp + 0x30 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x14 ] 0x0
mov esi [ esp + 0x20 ]
mov [ esi ] 0x1
je r-xdata
cmp [ esp + 0x15 ] 0x0
je r-xdata
mov [ esi ] 0x5
cmp [ esp + 0x16 ] 0x0
je r-xdata
or [ esi ] 0x8
mov cx [ esp + 0x28 ]
mov dx [ esp + 0x2c ]
mov [ esi + 0x2 ] cx
lea ecx [ esp + 0x30 ]
mov [ esi + 0x4 ] dx
call sub_402620
inc ebx
add esi 0x6
cmp ebx [ esp + 0x24 ]
mov [ esp + 0x20 ] esi
jl r-xdata
or [ esi ] 0x10
mov esi [ ebp + 0x8 ]
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x1c ]
sub_475347
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
push 0x5
mov ebx 0x1
push ebx
mov eax edi
mov ebp ecx
xor esi esi
call sub_40e7e0
mov eax [ esp + 0x28 ]
add esp 0x8
cmp [ eax + 0x8 ] esi
jbe r-xdata
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push esi
call sub_4621ff
test al al
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b390
mov esi eax
mov esi edi
call sub_4092c0
mov [ edi + 0x8 ] ebx
mov [ edi ] 0x0
mov edx [ ebp ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax ebp
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x8
push 0x0
push ebx
push 0x0
push edi
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x24 ]
push ebx
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x20 ]
push 0x2
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov edx [ esp + 0x10 ]
push 0x3
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x14 ]
push 0x4
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x18 ]
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x8
sub_475472
mov eax 0x2014
call sub_425210
push ebx
push ebp
push esi
mov esi [ esp + 0x2024 ]
mov ebx [ esi + 0x8 ]
push edi
xor ebp ebp
xor edi edi
mov [ esp + 0x20 ] ecx
cmp ebx 0x3
jbe r-xdata
cmp ebx 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov edi eax
mov esi [ esi + 0x4 ]
mov edx 0xfff
mov [ esp + 0x24 ] dx
mov ecx [ esi + 0x4 ]
mov esi [ esi ]
lea eax [ esp + 0x24 ]
push eax
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x28 ]
push eax
push edi
push ebp
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
call sub_449f3a
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
mov ebp eax
mov ebx [ esp + 0x202c ]
cmp edi 0x1
jne r-xdata
mov esi [ esp + 0x202c ]
call sub_4092c0
mov ecx [ esp + 0x20 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2014
retn 0x8
add edi 0x2
push edi
push 0x1
mov eax ebx
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push ebx
call sub_40d030
mov ebp [ esp + 0x30 ]
add esp 0x18
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebp
call sub_40d030
mov ebp [ esp + 0x20 ]
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebp
cmp edi 0x4
jne r-xdata
lea edi [ esp + 0x24 ]
call sub_40e6d0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2014
retn 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2014
retn 0x8
push 0x2
push 0x1
push 0x0
push ebx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x14 ]
push 0x3
mov edi 0x1
push edi
push 0x0
push ebx
mov [ esi + 0x8 ] edi
mov [ esi ] eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] edi
mov [ esi ] ecx
sub_475603
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x2
push 0x1
mov eax edi
xor esi esi
call sub_40e7e0
mov eax [ esp + 0x14 ]
add esp 0x8
cmp [ eax + 0x8 ] esi
jbe r-xdata
push esi
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_441673
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push eax
call sub_44b390
mov esi eax
mov esi edi
call sub_4092c0
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
pop edi
xor eax eax
pop esi
retn 0x8
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x10 ]
push 0x1
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0xc ]
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
xor eax eax
pop esi
retn 0x8
sub_4756ab
sub esp 0x24
push ebx
push ebp
push esi
lea eax [ esp + 0xc ]
push eax
mov esi ecx
call sub_447e59
mov ebx 0x1
cmp [ rw-data ] bl
je r-xdata
xor ebp ebp
push r--data
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ebp
call sub_4021e0
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] ebp
jmp r-xdata
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call sub_451a2f
test al al
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
xor ebp ebp
mov eax [ esp + 0x34 ]
cmp [ eax + 0x8 ] ebp
jbe r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push ebp
push ebx
add eax esi
call sub_4040e0
mov esi [ esp + 0x38 ]
call sub_4092c0
mov eax [ esp + 0xc ]
mov [ esi ] eax
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_40c760
cmp eax ebx
jne r-xdata
push edi
mov edi [ esp + 0x3c ]
push 0x5
push ebx
mov eax edi
call sub_40e7e0
push ebp
push ebx
push ebp
push edi
call sub_40d030
add esp 0x18
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x10 ]
push ebx
push ebx
push ebp
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov edx [ esp + 0x24 ]
push 0x2
push ebx
push 0x0
mov ebp 0x7
push edi
mov [ esi + 0x8 ] ebp
mov [ esi ] edx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov eax [ esp + 0x28 ]
push 0x3
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebp
mov [ esi ] eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x2c ]
push 0x4
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ecx
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov edx [ esp + 0x30 ]
mov [ esi ] edx
pop edi
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ebx
call sub_402620
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn 0x8
sub_475806
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebx
push edi
push eax
push 0x1
push 0x0
push ecx
call sub_40d030
mov edi [ esp + 0x24 ]
add esp 0x10
mov ebx eax
call sub_40e6d0
pop edi
pop ebx
retn 0xc
sub_47582e
mov eax [ esp + 0x4 ]
push esi
push 0x0
push 0x1
push 0x0
push eax
call sub_40d030
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0xc ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
pop esi
retn 0x8
sub_47585a
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
push edi
push eax
push ecx
push 0x2
push 0x0
push edx
call sub_40d030
mov edi [ esp + 0x2c ]
add esp 0x14
mov ebx eax
call sub_40e6d0
pop edi
pop ebx
retn 0x10
sub_475887
mov eax [ esp + 0x4 ]
push esi
push 0x0
push 0x0
push 0x2
push 0x0
push eax
call sub_40d030
add esp 0x14
mov esi eax
call sub_4092c0
mov ecx [ esp + 0xc ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ecx
pop esi
retn 0x8
sub_4758b5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ edx ]
push edi
push eax
mov [ esp + 0x24 ] ecx
call sub_453081
mov edi eax
lea esi [ esp + 0x40 ]
call sub_401b70
xor ebx ebx
push 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
call [ SetErrorMode@IAT ]
mov edi [ esp + 0x44 ]
dec edi
mov [ esp + 0x14 ] eax
call sub_401be0
cmp [ eax ] 0x5c
je r-xdata
mov eax [ esp + 0x40 ]
push eax
call sub_436ac4
add esp 0x4
test al al
jne r-xdata
mov edi r--data
mov eax esi
call sub_40d330
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ebx
push 0x1
add eax ecx
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
mov edx [ esp + 0x4c ]
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
call sub_452126
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_40c760
test al 0x1
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call [ SetErrorMode@IAT ]
lea ecx [ esp + 0x40 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x10 ] bl
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call [ SetErrorMode@IAT ]
lea ecx [ esp + 0x40 ]
call sub_402620
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
test al 0x2
je r-xdata
mov [ esp + 0x10 ] 0x1
mov edi [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
push 0x3
push 0x1
mov eax edi
call sub_40e7e0
push ebx
push 0x1
push ebx
push edi
call sub_40d030
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
add esp 0x18
mov esi eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
call sub_4092c0
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
push 0x1
push 0x1
push ebx
push edi
mov [ esi + 0x8 ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call sub_40d030
mov edx [ esp + 0x40 ]
mov esi eax
mov eax [ esp + 0x44 ]
add esp 0x10
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
call sub_4092c0
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push 0x2
push 0x1
push ebx
push edi
mov [ esi + 0x8 ] 0x2
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
call sub_40d030
mov edi [ esp + 0x48 ]
mov ebx [ esp + 0x4c ]
add esp 0x10
mov esi eax
jmp r-xdata
mov [ esp + 0x18 ] bl
call sub_4092c0
mov [ esi + 0x4 ] ebx
mov [ esi ] edi
mov [ esi + 0x8 ] 0x2
sub_475aca
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa74
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push edi
push eax
call sub_453063
mov edx [ eax ]
push 0xffffffff
mov [ esp + 0x1c ] edx
mov ecx [ eax + 0x4 ]
push 0xffffffff
mov [ esp + 0x24 ] ecx
mov edx [ eax + 0x8 ]
push 0xffffffff
mov [ esp + 0x2c ] edx
mov eax [ eax + 0xc ]
push 0x1
mov [ esp + 0x34 ] eax
inc [ eax ]
mov esi [ esp + 0x2c ]
push 0x2
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_442c52
cmp eax esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi r--data
mov ebx esi
call sub_40e6d0
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_4040e0
mov eax [ esp + 0x18 ]
push eax
call sub_436b22
add esp 0x4
test al al
je r-xdata
mov edi r--data
lea eax [ esp + 0x18 ]
call sub_40d330
lea ecx [ esp + 0x18 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
call [ __import_lookup_table_6(ole32:CoInitialize) ]
lea ecx [ esp + 0xc ]
push ecx
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esp + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x14 ]
push ecx
push r--data
push eax
call edx
test eax eax
jl r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
test eax eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push 0x7
push 0x1
mov eax esi
call sub_40e7e0
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
add esp 0x8
push 0x2
push 0x0
push 0x104
lea edx [ esp + 0x66c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
push 0x0
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x10
lea edi [ esp + 0x660 ]
mov ebx eax
call sub_40e6d0
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push 0x104
lea edx [ esp + 0x34 ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
push 0x1
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x10
lea edi [ esp + 0x30 ]
mov ebx eax
call sub_40e6d0
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push 0x104
lea edx [ esp + 0x244 ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
push 0x2
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x10
lea edi [ esp + 0x240 ]
mov ebx eax
call sub_40e6d0
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push 0x104
lea edx [ esp + 0x454 ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
push 0x3
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x10
lea edi [ esp + 0x450 ]
mov ebx eax
call sub_40e6d0
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x2c ]
push edx
push 0x104
lea edx [ esp + 0x878 ]
push edx
push eax
mov eax [ ecx + 0x40 ]
call eax
push 0x4
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x10
lea edi [ esp + 0x870 ]
mov ebx eax
call sub_40e6d0
push 0x5
push 0x1
push 0x0
push esi
call sub_40d030
mov edi [ esp + 0x3c ]
add esp 0x10
mov esi eax
call sub_4092c0
mov ebx 0x1
mov [ esi + 0x8 ] ebx
mov [ esi ] edi
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x28 ]
push edx
push eax
mov eax [ ecx + 0x38 ]
call eax
mov ecx [ ebp + 0xc ]
push 0x6
push ebx
push 0x0
push ecx
call sub_40d030
mov edi [ esp + 0x38 ]
add esp 0x10
mov esi eax
call sub_4092c0
mov ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ebx
mov [ esi ] edi
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x0
add eax ecx
call sub_4040e0
sub_475d8b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xfc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi r--data
mov ebx esi
mov [ esp + 0x2c ] ecx
mov [ esp + 0x10 ] 0x0
call sub_40e6d0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edx [ eax ]
mov [ esp + 0x14 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov edx [ eax + 0x8 ]
mov [ esp + 0x1c ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
inc [ eax ]
lea eax [ esp + 0x14 ]
push eax
call sub_45335b
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx 0x63
jmp r-xdata
lea eax [ esp + 0x14 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx 0x5
jmp r-xdata
lea edx [ esp + 0x30 ]
mov [ esp + 0x24 ] 0x61
mov [ esp + 0x28 ] edx
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx 0x2
jmp r-xdata
mov eax r--data
lea ecx [ esp + 0x14 ]
call sub_40e620
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
push eax
push edi
call sub_411691
inc [ esp + 0x18 ]
add esp 0x8
add edi 0x8
mov [ esp + 0x28 ] edi
cmp ebx 0x63
jne r-xdata
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx 0x3
jmp r-xdata
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_444508
mov edi r--data
lea eax [ esp + 0x14 ]
call sub_40d330
mov edx [ esp + 0x14 ]
push edx
call [ __import_lookup_table_0(KERNEL32:GetDriveTypeW) ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jle r-xdata
mov eax [ esp + 0x24 ]
inc eax
cmp eax 0x7a
mov [ esp + 0x24 ] eax
jle r-xdata
cmp eax 0x1
je r-xdata
lea eax [ esp + 0x14 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx 0x4
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
jmp r-xdata
inc eax
push eax
push 0x1
mov eax esi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push esi
call sub_40d030
add esp 0x18
mov esi eax
call sub_4092c0
mov eax [ esp + 0x10 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] eax
mov esi 0x1
cmp eax esi
jl r-xdata
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ebx 0x6
jmp r-xdata
push 0x0
push 0x1
add eax ecx
call sub_4040e0
lea ecx [ esp + 0x14 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
xor ebx ebx
mov ecx [ ebp + 0xc ]
push esi
push 0x1
push 0x0
push ecx
call sub_40d030
add esp 0x10
mov ebx eax
call sub_40e6d0
inc esi
add edi 0x8
cmp esi [ esp + 0x10 ]
jle r-xdata
lea ecx [ esp + 0x14 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_475fe5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x29c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
mov esi ecx
lea ecx [ esp + 0x58 ]
push ecx
push eax
xor ebx ebx
call sub_453081
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x5c ]
mov ecx [ esp + 0x60 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x64 ]
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x6c ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x70 ]
push eax
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] ecx
call [ FindClose@IAT ]
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
sub ebx 0x1
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
mov ebx eax
lea eax [ esp + 0x20 ]
push eax
push eax
call [ __import_lookup_table_0(KERNEL32:FileTimeToLocalFileTime) ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
sub ebx 0x1
je r-xdata
mov esi [ ebp + 0xc ]
push 0x6
push 0x1
mov eax esi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push esi
call sub_40d030
movzx edx [ esp + 0x28 ]
push edx
mov ebx eax
lea eax [ esp + 0x54 ]
push r--data
push eax
call sub_41353a
add esp 0x24
lea edi [ esp + 0x38 ]
call sub_40e6d0
push 0x1
push 0x1
push 0x0
push esi
call sub_40d030
movzx ecx [ esp + 0x22 ]
push ecx
push r--data
push edi
mov ebx eax
call sub_41353a
add esp 0x1c
call sub_40e6d0
push 0x2
push 0x1
push 0x0
push esi
call sub_40d030
mov ebx eax
movzx eax [ esp + 0x26 ]
push eax
push r--data
push edi
call sub_41353a
add esp 0x1c
call sub_40e6d0
push 0x3
push 0x1
push 0x0
push esi
call sub_40d030
movzx edx [ esp + 0x28 ]
push edx
push r--data
push edi
mov ebx eax
call sub_41353a
add esp 0x1c
call sub_40e6d0
push 0x4
push 0x1
push 0x0
push esi
call sub_40d030
movzx ecx [ esp + 0x2a ]
push ecx
push r--data
push edi
mov ebx eax
call sub_41353a
add esp 0x1c
call sub_40e6d0
push 0x5
push 0x1
push 0x0
push esi
call sub_40d030
mov ebx eax
movzx eax [ esp + 0x2c ]
push eax
push r--data
push edi
call sub_41353a
add esp 0x1c
call sub_40e6d0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_40c760
cmp eax 0x1
jne r-xdata
lea edx [ esp + 0x28 ]
push edx
push edx
call [ __import_lookup_table_0(KERNEL32:FileTimeToLocalFileTime) ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
push ecx
call [ __import_lookup_table_0(KERNEL32:FileTimeToLocalFileTime) ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x34 ]
push eax
jmp r-xdata
movzx ecx [ esp + 0x1c ]
movzx edx [ esp + 0x1a ]
movzx eax [ esp + 0x18 ]
push ecx
movzx ecx [ esp + 0x1a ]
push edx
movzx edx [ esp + 0x1a ]
push eax
movzx eax [ esp + 0x1c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x50 ]
push r--data
push ecx
call sub_41353a
mov ebx [ ebp + 0xc ]
add esp 0x20
lea edi [ esp + 0x38 ]
call sub_40e6d0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ __import_lookup_table_0(KERNEL32:FileTimeToSystemTime) ]
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
sub_476251
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x1022c
call sub_425210
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x28 ]
call sub_40ffb0
lea eax [ esp + 0x28 ]
push eax
push 0x7fff
lea ecx [ esp + 0x240 ]
mov edx 0xa
push ecx
mov [ esp + 0x246 ] dx
call [ __import_lookup_table_0(KERNEL32:GetPrivateProfileSectionNamesW) ]
xor esi esi
mov [ esp + 0xc ] eax
cmp eax esi
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push esi
push 0x1
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x23a ] 0xa
je r-xdata
push 0xc
call sub_41171a
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x10 ] esi
mov eax esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ esp + 0x10 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
lea ecx [ esi + 0x1 ]
push ecx
push 0x1
mov eax edi
call sub_40e7e0
add esp 0x8
push esi
push edi
call sub_47582e
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
call sub_40c060
mov [ esp + 0xc ] 0x0
test esi esi
jle r-xdata
cmp [ esp + ebx * 2 + 0x238 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ esp + 0xc ] ebx
mov edi eax
mov [ eax ] esi
mov [ esp + 0x14 ] esi
jle r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or eax 0xffffffff
xor edi edi
lea esi [ esp + 0x18 ]
call sub_40c740
mov ecx [ ebx ]
mov eax [ ebx + 0x4 ]
push ecx
lea edx [ esp + 0x23c ]
sub eax ecx
push edx
mov ecx esi
call sub_403fb0
mov eax [ esp + 0x18 ]
mov esi [ esp + 0xc ]
mov ecx [ ebp + 0xc ]
push eax
inc esi
push esi
push ecx
call sub_475806
mov eax ebx
mov ebx [ ebx + 0x8 ]
push eax
call sub_4112ef
add esp 0x4
cmp esi [ esp + 0x14 ]
mov [ esp + 0xc ] esi
jl r-xdata
inc ebx
cmp ebx [ esp + 0xc ]
jl r-xdata
mov edx 0xd
mov [ edi + 0x4 ] ebx
push 0xc
inc esi
mov [ esp + ebx * 2 + 0x23c ] dx
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] esi
xor eax eax
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov [ edi + 0x8 ] eax
mov edi eax
lea eax [ ebx + 0x1 ]
mov [ edi ] eax
sub_4763f2
sub esp 0x210
push ebx
push ebp
push esi
mov esi [ esp + 0x224 ]
push edi
mov ebx ecx
call sub_4092c0
mov ebp [ esp + 0x224 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ ebp + 0x4 ]
mov eax [ eax ]
push eax
call sub_453081
mov ecx eax
lea eax [ esp + 0x14 ]
call sub_40ffb0
mov eax [ ebp + 0x4 ]
mov edi [ eax + 0x8 ]
push edi
call sub_442fa3
test al al
je r-xdata
push edi
call sub_443e34
test al al
je r-xdata
push 0x0
push edi
call sub_4354dd
cmp eax 0x2
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x210
retn 0x8
push edi
call sub_45302e
xor ecx ecx
add eax 0x2
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edi eax
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x8 ]
add esp 0x4
push eax
mov [ esp + 0x14 ] edi
call sub_453081
cmp [ eax ] 0xa
mov ecx edi
jne r-xdata
push eax
push edi
call sub_4354dd
cmp eax 0x2
jne r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
lea ecx [ ecx ]
cmp [ ebp + 0x8 ] 0x4
lea ebx [ eax - 0x1 ]
jb r-xdata
xor eax eax
xor edx edx
mov [ ecx ] ax
mov [ ecx + 0x2 ] dx
mov [ ecx ] dx
add eax 0x2
add ecx 0x2
cmp [ eax ] 0xa
jne r-xdata
add eax 0x2
cmp [ eax ] 0xa
je r-xdata
mov ecx [ ebp + 0x4 ]
mov ebp [ ecx + 0x8 ]
xor esi esi
mov edi ebx
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
mov ebx eax
test ebx ebx
jge r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_4112ef
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x210
retn 0x8
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x0
push 0x0
call [ WritePrivateProfileStringW@IAT ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
xor edx edx
jmp r-xdata
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
add esp 0x4
mov [ esp + 0x10 ] eax
mov edi eax
mov esi ebx
push 0x0
push edi
push 0x2
push 0x1
push ebp
call sub_40d030
add esp 0x14
push eax
call sub_45302e
push 0x1
push edi
push 0x2
push 0x1
push ebp
lea esi [ esi + eax + 0x1 ]
call sub_40d030
add esp 0x14
push eax
call sub_45302e
lea esi [ esi + eax + 0x1 ]
inc edi
jmp r-xdata
mov ebx 0x1
mov esi [ esp + 0x228 ]
mov ebp [ esp + 0x224 ]
xor edx edx
mov [ edi ] dx
jmp r-xdata
push 0x0
push esi
push 0x2
push 0x1
push ebp
call sub_40d030
add esp 0x14
push eax
call sub_453081
movzx ecx [ eax ]
test cx cx
je r-xdata
push 0x1
push ebp
call sub_4354dd
cmp edi eax
jge r-xdata
mov eax [ ebp + 0x4 ]
mov edx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_453081
push eax
call [ WritePrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
push 0x1
push esi
push 0x2
mov eax 0x3d
push 0x1
mov [ edi ] ax
push ebp
add edi 0x2
call sub_40d030
add esp 0x14
push eax
call sub_453081
movzx ecx [ eax ]
test cx cx
je r-xdata
add eax 0x2
mov [ edi ] cx
movzx ecx [ eax ]
add edi 0x2
test cx cx
jne r-xdata
xor ecx ecx
mov [ edi ] cx
add edi 0x2
inc esi
jmp r-xdata
nop
push 0x1
push ebp
call sub_4354dd
cmp esi eax
jge r-xdata
add eax 0x2
mov [ edi ] cx
movzx ecx [ eax ]
add edi 0x2
test cx cx
jne r-xdata
sub_476690
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x1023c
call sub_425210
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push edi
mov edi ecx
push eax
mov [ esp + 0x18 ] edi
call sub_453081
mov ecx eax
lea eax [ esp + 0x38 ]
call sub_40ffb0
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x38 ]
push edx
push 0x7fff
lea ecx [ esp + 0x250 ]
push ecx
push eax
call sub_453081
push eax
call [ GetPrivateProfileSectionW@IAT ]
xor ebx ebx
mov [ esp + 0x10 ] eax
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push ebx
add eax edi
push 0x1
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x14
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0xc ] ebx
mov eax ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ esp + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
push edx
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
push 0x1
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx ecx [ esp + ebx * 2 + 0x248 ]
cmp cx 0x3b
jne r-xdata
mov esi eax
mov [ eax ] ebx
xor edx edx
xor edi edi
xor al al
cmp [ esp + 0x10 ] edx
jle r-xdata
cmp cx 0x3d
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp cx dx
jne r-xdata
cmp [ esi + 0x4 ] edx
jne r-xdata
mov al 0x1
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x10 ]
jl r-xdata
mov ecx 0xd
mov [ esp + ebx * 2 + 0x248 ] cx
cmp [ esi + 0x8 ] edx
je r-xdata
test al al
jne r-xdata
cmp edi edx
jle r-xdata
lea eax [ ebx + 0x1 ]
mov [ esi ] eax
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] edx
test al al
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
push 0x2
lea ecx [ edi + 0x1 ]
push ecx
push 0x2
mov eax esi
call sub_40e7e0
add esp 0xc
push edi
push esi
call sub_475887
mov ebx [ esp + 0xc ]
lea ecx [ esp + 0x28 ]
call sub_40c060
lea ecx [ esp + 0x18 ]
call sub_40c060
test edi edi
jle r-xdata
mov [ esi + 0xc ] ebx
inc edi
cmp [ esp + ebx * 2 + 0x24a ] dx
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_402620
lea ecx [ esp + 0x28 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0xc ] 0x1
mov [ esp + 0x10 ] edi
xor al al
cmp [ esp + ebx * 2 + 0x24a ] dx
je r-xdata
push 0x14
call sub_41171a
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
or eax 0xffffffff
xor edi edi
lea esi [ esp + 0x28 ]
call sub_40c740
mov ecx [ ebx ]
mov eax [ ebx + 0x4 ]
push ecx
lea edx [ esp + 0x24c ]
sub eax ecx
push edx
mov ecx esi
call sub_403fb0
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0xc ]
mov edx [ ebp + 0xc ]
push eax
push edi
push ecx
push edx
call sub_47585a
or eax 0xffffffff
lea esi [ esp + 0x18 ]
call sub_40c740
mov ecx [ ebx + 0x8 ]
mov eax [ ebx + 0xc ]
push ecx
sub eax ecx
lea ecx [ esp + 0x24c ]
push ecx
mov ecx esi
call sub_403fb0
mov edx [ esp + 0x18 ]
mov esi [ esp + 0xc ]
mov eax [ ebp + 0xc ]
push edx
mov edi 0x1
push edi
push esi
push eax
call sub_47585a
mov eax ebx
mov ebx [ ebx + 0x10 ]
push eax
call sub_4112ef
add esi edi
add esp 0x4
sub [ esp + 0x10 ] edi
mov [ esp + 0xc ] esi
jne r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
lea edx [ ebx + 0x1 ]
mov esi eax
mov [ esi ] edx
xor edx edx
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ esi + 0x10 ] eax
lea edx [ ebx + 0x1 ]
mov esi eax
mov [ esi ] edx
xor edx edx
jmp r-xdata
sub_47692c
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x5
jne r-xdata
xor eax eax
pop esi
retn 0x8
cmp [ esi ] 0x0
je r-xdata
call sub_40e7c0
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ esp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ edx ] ecx
pop esi
retn 0x8
sub_476958
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x20c ]
test ecx ecx
je r-xdata
pop edi
xor al al
pop ebp
retn 0x8
mov edx [ ebp ]
cmp ecx [ edx + 0x20c ]
jne r-xdata
xor edx edx
test ecx ecx
jle r-xdata
push ebx
push esi
mov ecx 0x10c
mov eax [ edi ]
xor ebx ebx
cmp [ eax + 0x20c ] ebx
jle r-xdata
mov ecx [ ebp ]
mov edx [ ecx ]
mov esi [ edx + eax * 4 ]
test esi esi
je r-xdata
mov [ ecx + eax ] 0x0
mov eax [ ebp ]
mov [ ecx + eax ] 0x0
mov eax [ edi ]
inc edx
add ecx 0x4
cmp edx [ eax + 0x20c ]
jl r-xdata
mov eax [ edi ]
cmp ebx [ eax + 0x20c ]
jl r-xdata
mov esi 0x10c
push 0x0
push 0x0
push edi
call sub_40d030
add esp 0xc
test eax eax
je r-xdata
mov eax ebp
call sub_40d120
test eax eax
jl r-xdata
pop esi
pop ebx
mov ecx [ edi ]
mov [ esi + ecx ] 0x0
mov edx [ ebp ]
mov [ esi + edx ] 0x0
mov eax [ edi ]
inc ebx
add esi 0x4
cmp ebx [ eax + 0x20c ]
jl r-xdata
mov eax ebp
call sub_40d170
test al al
jne r-xdata
push esi
mov ebx eax
call sub_409210
inc [ esi + eax ]
mov eax [ ebp ]
inc [ eax + esi ]
add eax esi
mov eax edi
call sub_40d170
test al al
je r-xdata
sub_476a47
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax 0x8
lea edx [ esp ]
mov [ esp + 0x10 ] ax
push edx
lea eax [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x24 ] r--data
mov [ ecx + 0x2d ] 0x1
call sub_47244d
mov esp ebp
pop ebp
retn
sub_476a8a
sub esp 0x34
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x4c ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
push edi
call [ VariantInit@IAT ]
mov esi [ esp + 0x48 ]
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
dec eax
cmp eax 0xa
ja r-xdata
mov eax 0xa
mov [ edi ] ax
mov [ edi + 0x8 ] 0x80020004
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
jmp [ eax * 4 + jump_table_476e26 ]
mov ecx 0xb
push esi
mov [ edi ] cx
call sub_4434cc
movzx dx al
mov [ edi + 0x8 ] dx
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
mov eax 0x3
mov ecx esi
mov [ edi ] ax
call sub_40c760
mov [ edi + 0x8 ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
mov ecx 0x5
mov [ edi ] cx
mov ecx esi
call sub_40be90
fstp [ edi + 0x8 ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
mov edx 0x5
mov ecx esi
mov [ edi ] dx
call sub_40be90
fstp [ edi + 0x8 ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
lea ecx [ esp + 0x14 ]
push ecx
mov eax 0x8
push esi
mov [ edi ] ax
call sub_453081
push eax
call sub_4342a8
test eax eax
jl r-xdata
push ebx
push esi
call sub_4354dd
lea edx [ esp + 0x4c ]
push edx
mov ebp eax
push ebp
push 0xc
call [ SafeArrayAllocDescriptorEx@IAT ]
test eax eax
jl r-xdata
mov esi [ esi ]
cmp esi ebx
je r-xdata
push edi
push esi
call sub_4355fd
push eax
call sub_476a8a
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
push esi
call sub_44adff
test al al
je r-xdata
lea eax [ esp + 0x4c ]
push eax
push 0x1
push 0x11
call [ SafeArrayAllocDescriptorEx@IAT ]
test eax eax
jl r-xdata
mov esi [ esp + 0x14 ]
push esi
call [ SysAllocString@IAT ]
push esi
mov [ edi + 0x8 ] eax
call [ CoTaskMemFree@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
xor edx edx
cmp ebp ebx
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
push esi
push edi
call [ VariantCopy@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
lea esi [ esp + 0x20 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] ebx
call sub_4092c0
push edi
push esi
mov [ esp + 0x30 ] 0x6
mov [ esp + 0x28 ] ebx
call sub_476a8a
add esp 0x8
mov edi eax
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
mov ecx [ esp + 0x4c ]
push esi
mov [ ecx + 0x14 ] ebx
call sub_443676
mov edx [ esp + 0x4c ]
mov [ edx + 0x10 ] eax
mov ecx [ esp + 0x4c ]
mov eax 0x80
mov [ ecx + 0x2 ] ax
mov edx [ esp + 0x4c ]
mov [ edx + 0x4 ] 0x1
mov eax [ esp + 0x4c ]
push eax
call [ SafeArrayAllocData@IAT ]
cmp eax ebx
jl r-xdata
mov eax [ esp + 0x4c ]
mov edx 0x880
mov [ eax + 0x2 ] dx
mov ecx [ esp + 0x4c ]
mov [ ecx + 0x4 ] 0x10
mov edx [ esp + 0x4c ]
push edx
call [ SafeArrayAllocData@IAT ]
cmp eax ebx
jl r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x4c ]
push eax
call [ SafeArrayDestroyDescriptor@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x34
retn
mov edx [ esp + 0x4c ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
call [ SafeArrayAccessData@IAT ]
cmp eax ebx
jl r-xdata
mov edx [ esp + 0x4c ]
push edx
call [ SafeArrayDestroyDescriptor@IAT ]
mov ecx [ esp + 0x4c ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ SafeArrayAccessData@IAT ]
lea edx [ esp + 0x14 ]
push edx
push esi
mov ebx eax
call sub_47692c
mov [ esp + 0x1c ] eax
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4c ]
mov [ eax + edx * 8 + 0x14 ] ebx
lea ebx [ edx + 0x1 ]
push ebx
push esi
call sub_4354dd
mov ecx [ esp + 0x4c ]
mov [ ecx + edx * 8 + 0x10 ] eax
mov edx ebx
xor ebx ebx
cmp edx ebp
jl r-xdata
mov edx [ esp + 0x4c ]
push edx
call [ SafeArrayDestroyData@IAT ]
push esi
call sub_443676
push eax
push ecx
push esi
call sub_4676a3
add esp 0x4
push eax
mov eax [ esp + 0x24 ]
push eax
call sub_410f70
mov ecx [ esp + 0x58 ]
add esp 0xc
push ecx
call [ SafeArrayUnaccessData@IAT ]
mov edx [ esp + 0x4c ]
mov ecx 0x2011
mov [ edi ] cx
mov [ edi + 0x8 ] edx
mov ecx [ esp + 0x4c ]
push ecx
call [ SafeArrayDestroyData@IAT ]
test ebx ebx
jge r-xdata
xor esi esi
test eax eax
jle r-xdata
mov ecx [ esp + 0x4c ]
mov eax 0x200c
mov [ edi ] ax
mov [ edi + 0x8 ] ecx
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
mov eax [ esp + 0x4c ]
push eax
call [ SafeArrayUnaccessData@IAT ]
test ebx ebx
jge r-xdata
xor ebp ebp
lea ebx [ ebx ]
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x30 ]
push eax
lea edx [ ecx + ebp ]
push edx
call [ VariantCopy@IAT ]
inc esi
add ebp 0x10
cmp esi [ esp + 0x1c ]
mov ebx eax
jl r-xdata
mov edx [ eax + esi * 4 ]
lea ecx [ esp + 0x30 ]
push ecx
push edx
call sub_476a8a
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x30 ]
push eax
call [ VariantInit@IAT ]
mov eax [ esp + 0x14 ]
cmp [ eax + esi * 4 ] 0x0
je r-xdata
jmp r-xdata
mov ebx 0x8000ffff
sub_476e52
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi + 0x98 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_40cfb0
test al al
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push edi
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
mov eax [ edx ]
mov [ esi + 0x98 ] eax
jge r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_476eca
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push esi
call sub_47042a
mov ebx 0x1
push ebx
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
push eax
call sub_438992
test al al
jne r-xdata
jge r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x8 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] 0x4
mov ebx 0x1f4
cmp eax 0x2
jbe r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
cmp eax 0x3
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
lea eax [ eax + eax - 0x2 ]
cmp eax 0x1
jle r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
call sub_40c760
mov ebx eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ eax - 0x1 ]
mov eax [ esi + 0x1d8 ]
mov ecx [ eax ]
push 0x1
push ecx
call [ __import_lookup_table_10(USER32:FlashWindow) ]
push ebx
call sub_436272
add esp 0x4
sub edi 0x1
jne r-xdata
sub_476fa9
mov eax [ esp + 0x4 ]
sub esp 0x8
push esi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push ecx
call [ __import_lookup_table_10(USER32:GetWindowThreadProcessId) ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
test edx edx
jge r-xdata
jge r-xdata
mov esi [ esp + 0x14 ]
fstp [ esp + 0x4 ]
call sub_4092c0
fld [ esp + 0x4 ]
fstp [ esi ]
mov [ esi + 0x8 ] 0x3
xor eax eax
pop esi
add esp 0x8
retn 0x8
fadd [ r--data ]
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0xffffffff
xor eax eax
pop esi
add esp 0x8
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_477041
mov eax 0x10008
call sub_425210
push ebx
push ebp
mov ebp ecx
mov eax [ ebp + 0x2d4 ]
push esi
push edi
lea esi [ ebp + 0x1b8 ]
mov edi r--data
mov ebx esi
mov [ esp + 0x10 ] eax
call sub_40e6d0
lea ebx [ ebp + 0x1c8 ]
push r--data
mov eax ebx
call sub_4021e0
mov ecx [ esp + 0x1001c ]
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
jbe r-xdata
mov [ ebp + 0x2d4 ] 0x4
jmp r-xdata
cmp [ ecx + 0x8 ] 0x1
jbe r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453063
mov edi eax
call sub_40e640
mov ecx [ esp + 0x1001c ]
push 0x0
push ebp
call sub_46dd22
test eax eax
jge r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453063
push eax
mov esi ebx
call sub_40df50
mov edi [ ebp + 0x2e8 ]
mov ecx [ esp + 0x10 ]
mov ebx [ esp + 0x10020 ]
push 0x2
lea edx [ edi + 0x1 ]
push edx
push 0x2
mov eax ebx
mov [ ebp + 0x2d4 ] ecx
mov [ esp + 0x20 ] edi
call sub_40e7e0
push 0x0
push 0x0
push 0x2
push 0x0
push ebx
call sub_40d030
add esp 0x20
mov esi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov esi 0x1
cmp edi esi
mov [ esp + 0x10 ] esi
jl r-xdata
neg eax
push 0x0
push eax
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
add eax ebp
call sub_4040e0
mov esi [ esp + 0x10020 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10008
retn 0x8
jmp r-xdata
mov ecx [ ebp + 0x2e4 ]
mov edx [ ecx + esi * 4 - 0x4 ]
push 0x7fff
lea eax [ esp + 0x1c ]
push eax
mov eax [ edx ]
push eax
call [ __import_lookup_table_10(USER32:GetWindowTextW) ]
push 0x0
push esi
push 0x2
push 0x0
push ebx
call sub_40d030
add esp 0x14
lea edi [ esp + 0x18 ]
mov ebx eax
call sub_40e6d0
mov ecx [ esp + 0x10020 ]
push 0x1
push esi
push 0x2
push 0x0
push ecx
call sub_40d030
mov edx [ ebp + 0x2e4 ]
mov edi eax
mov eax [ edx + esi * 4 - 0x4 ]
mov ebx [ eax ]
add esp 0x14
mov esi edi
call sub_4092c0
mov eax [ esp + 0x10 ]
inc eax
cmp eax [ esp + 0x14 ]
mov [ edi + 0x8 ] 0x7
mov [ edi ] ebx
mov [ esp + 0x10 ] eax
jle r-xdata
mov ebx [ esp + 0x10020 ]
mov esi [ esp + 0x10 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10008
retn 0x8
sub_47721a
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
mov esi ecx
mov ecx [ eax + 0x8 ]
call sub_40c760
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
push edi
mov bl al
push esi
mov [ esp + 0x18 ] bl
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ eax ]
push 0xffffffec
push esi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
cmp bl 0xff
jb r-xdata
jge r-xdata
or eax 0x80000
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
mov ecx [ esp + 0x10 ]
push 0x2
push ecx
push 0x0
push esi
call [ __import_lookup_table_10(USER32:SetLayeredWindowAttributes) ]
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
test eax 0x80000
je r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebx
retn 0x8
mov edx [ esi ]
neg eax
push 0x0
push eax
mov eax [ edx + 0x4 ]
add eax esi
call sub_4040e0
xor eax 0x80000
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_4772de
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi ecx
push eax
push esi
mov edi 0x1
call sub_47042a
push edi
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ eax ]
push esi
call [ __import_lookup_table_10(USER32:IsWindowVisible) ]
test eax eax
je r-xdata
push 0x0
jge r-xdata
push esi
call [ __import_lookup_table_10(USER32:IsWindowEnabled) ]
test eax eax
je r-xdata
mov edi 0x3
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
cmp eax esi
jne r-xdata
or edi 0x4
add eax esi
call sub_4040e0
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] edi
pop edi
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
or edi 0x8
push esi
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
or edi 0x10
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
xor eax eax
pop esi
retn 0x8
or edi 0x20
sub_47739a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x154
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov edi r--data
mov [ esp + 0xc ] esi
call sub_40e6d0
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
lea esi [ esp + 0x20 ]
call sub_40d350
lea ecx [ esp + 0x10 ]
call sub_40c060
mov ecx [ esp + 0xc ]
mov edx [ ecx + 0x1d8 ]
lea eax [ esp + 0x10 ]
push eax
mov eax [ edx ]
push eax
push esi
call sub_4609bd
lea edi [ esp + 0x10 ]
mov esi ebx
call sub_40e640
mov ecx edi
call sub_402620
lea esi [ esp + 0x20 ]
call sub_401380
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
jge r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477459
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ esp + 0x10 ]
mov edi [ eax ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
push 0x0
jge r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
add eax esi
call sub_4040e0
push ebx
mov ebx [ esp + 0x14 ]
mov edi r--data
call sub_40e6d0
pop ebx
pop edi
xor eax eax
pop esi
retn 0x8
sub_4774c8
mov eax [ esp + 0x4 ]
sub esp 0x10
push ebx
push esi
push edi
mov ebx ecx
push eax
push ebx
call sub_47042a
mov edi [ esp + 0x24 ]
mov esi edi
call sub_4092c0
push 0x1
push ebx
mov [ edi + 0x8 ] 0x1
mov [ edi ] 0x0
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ ebx + 0x1d8 ]
mov eax [ eax ]
lea ecx [ esp + 0xc ]
push ecx
push eax
call [ __import_lookup_table_10(USER32:GetClientRect) ]
test eax eax
je r-xdata
push 0x0
jge r-xdata
push 0x0
push 0x2
push 0x1
mov eax edi
call sub_40e7e0
push 0x0
push 0x1
push 0x0
push edi
call sub_40d030
mov ebx [ esp + 0x2c ]
sub ebx [ esp + 0x24 ]
add esp 0x18
mov esi eax
call sub_4092c0
push 0x1
push 0x1
push 0x0
push edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40d030
mov edi [ esp + 0x28 ]
sub edi [ esp + 0x20 ]
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x1
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x1
add eax ebx
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
mov ecx [ ebx ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
sub_4775b8
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
mov eax [ eax ]
push eax
call sub_443f80
mov ebx [ esp + 0x18 ]
add esp 0x4
mov edi eax
call sub_40e6d0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
push 0x0
jge r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
add eax esi
call sub_4040e0
mov ebx [ esp + 0x14 ]
mov edi r--data
call sub_40e6d0
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
sub_47762a
mov eax 0x10014
call sub_425210
mov eax [ esp + 0x10018 ]
push ebp
mov ebp [ eax + 0x8 ]
push esi
push edi
mov edi ecx
push eax
push edi
mov [ esp + 0x1c ] ebp
mov [ esp + 0x18 ] 0x0
call sub_47042a
push 0x1
push edi
call sub_46dd22
test eax eax
jg r-xdata
mov ecx [ edi + 0x1d8 ]
push ebx
mov ebx [ ecx ]
push ebx
mov [ esp + 0x20 ] ebx
call [ __import_lookup_table_10(USER32:GetMenu) ]
mov esi eax
test esi esi
je r-xdata
jge r-xdata
mov esi [ esp + 0x1002c ]
call sub_4092c0
pop ebx
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebp
add esp 0x10014
retn 0x8
mov [ esp + 0x10 ] 0x3
cmp ebp 0x3
jb r-xdata
mov esi [ esp + 0x10028 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebp
add esp 0x10014
retn 0x8
neg eax
push 0x0
push eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
call sub_4040e0
push 0x1
push ebx
call sub_443eef
mov ecx [ esp + 0x1c ]
add esp 0x8
push 0x0
push ecx
push 0x111
push ebx
call [ PostMessageW@IAT ]
push 0x0
push ebx
call sub_443eef
mov edx [ edi + 0x2f4 ]
push edx
call sub_436272
add esp 0xc
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x10014
retn 0x8
push esi
call [ GetMenuItemCount@IAT ]
test eax eax
jbe r-xdata
xor ebx ebx
dec eax
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0x400
push 0x7fff
lea edx [ esp + 0x2c ]
push edx
push ebx
push esi
call [ GetMenuStringW@IAT ]
mov eax [ esp + 0x10028 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov ebp [ ecx + edx * 4 - 0x4 ]
push ebp
call sub_453081
push eax
call sub_4112d5
add esp 0x4
push eax
lea eax [ esp + 0x28 ]
push eax
push ebp
call sub_453081
push eax
call sub_413503
add esp 0xc
test eax eax
je r-xdata
mov ebp [ esp + 0x10 ]
push ebx
push esi
cmp ebp [ esp + 0x20 ]
jne r-xdata
inc ebx
cmp ebx [ esp + 0x20 ]
jbe r-xdata
call [ GetSubMenu@IAT ]
mov esi eax
test esi esi
je r-xdata
call [ GetMenuItemID@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] ebp
cmp ebp [ esp + 0x18 ]
jbe r-xdata
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
mov ebx [ esp + 0x1c ]
sub_4777ee
mov eax [ esp + 0x4 ]
sub esp 0x10
push ebp
push esi
mov esi ecx
push eax
push esi
call sub_47042a
mov ebp 0x1
push ebp
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov ecx [ esi + 0x1d8 ]
push ebx
push edi
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call sub_44cccb
mov edi [ esp + 0x28 ]
push 0x4
push ebp
mov eax edi
call sub_40e7e0
push 0x0
push ebp
push 0x0
push edi
call sub_40d030
mov ebx [ esp + 0x28 ]
add esp 0x18
mov esi eax
call sub_4092c0
push ebp
push ebp
push 0x0
push edi
mov [ esi + 0x8 ] ebp
mov [ esi ] ebx
call sub_40d030
mov ebx [ esp + 0x24 ]
add esp 0x10
mov esi eax
call sub_4092c0
push 0x2
push ebp
push 0x0
push edi
mov [ esi + 0x8 ] ebp
mov [ esi ] ebx
call sub_40d030
mov ebx [ esp + 0x28 ]
sub ebx [ esp + 0x20 ]
add esp 0x10
mov esi eax
call sub_4092c0
push 0x3
push ebp
push 0x0
push edi
mov [ esi + 0x8 ] ebp
mov [ esi ] ebx
call sub_40d030
mov edi [ esp + 0x2c ]
sub edi [ esp + 0x24 ]
add esp 0x10
mov esi eax
call sub_4092c0
mov [ esi ] edi
pop edi
pop ebx
mov [ esi + 0x8 ] ebp
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
push 0x0
jge r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push ebp
mov ecx [ esi ]
neg eax
push eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
add eax esi
call sub_4040e0
mov esi [ esp + 0x20 ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] ebp
pop esi
xor eax eax
pop ebp
add esp 0x10
retn 0x8
sub_4778fc
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
push eax
call sub_438992
test al al
jne r-xdata
jge r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov ecx [ esi + 0x1d8 ]
mov edx [ edi + 0x4 ]
mov esi [ ecx ]
mov ecx [ edx + 0x8 ]
call sub_40c760
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
cmp eax 0x1
jne r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
push 0xfffffffe
push esi
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
pop edi
xor eax eax
pop esi
retn 0x8
push 0xffffffff
push esi
call [ __import_lookup_table_10(USER32:SetWindowPos) ]
pop edi
xor eax eax
pop esi
retn 0x8
sub_477999
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push ecx
lea ebx [ edi + 0x1b8 ]
call sub_409210
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453063
push eax
lea esi [ edi + 0x1c8 ]
call sub_40df50
push 0x1
push edi
call sub_46dd22
test eax eax
jle r-xdata
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x1d8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov esi [ eax ]
mov eax [ edx + 0x8 ]
lea ebx [ esp + 0x10 ]
call sub_40bd50
push ebx
call sub_442c43
test al al
je r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_443e34
test al al
jne r-xdata
push ebx
call sub_44b390
push eax
add edi 0x2fc
push edi
call sub_44cc94
mov esi ebx
call sub_4092c0
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x10 ]
call sub_40cfb0
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_453333
test al al
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_453333
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_40c060
lea ecx [ esp + 0x20 ]
push ecx
push esi
add edi 0x2fc
push edi
call sub_4609bd
test al al
jne r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
lea eax [ esp + 0x10 ]
push eax
call sub_453063
push eax
push esi
add edi 0x2fc
push edi
call sub_4689ff
lea ecx [ esp + 0x10 ]
call sub_40c760
push eax
push esi
add edi 0x2fc
push edi
call sub_460e79
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea esi [ esp + 0x10 ]
call sub_4092c0
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
call sub_44cc94
lea esi [ esp + 0x10 ]
mov bl al
call sub_4092c0
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477afe
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov eax [ esi + 0x1d8 ]
push ebx
push edi
push eax
call sub_438992
test al al
je r-xdata
jge r-xdata
movzx ecx [ esi + 0x2dc ]
mov edx [ esi + 0x1d8 ]
mov eax [ edx ]
push ecx
push eax
call sub_44404b
mov ebx [ esp + 0x1c ]
add esp 0x8
mov edi eax
call sub_40e6d0
pop edi
pop ebx
xor eax eax
pop esi
retn 0x8
mov ebx [ esp + 0x14 ]
mov edi r--data
call sub_40e6d0
pop edi
pop ebx
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_477b9b
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
lea ecx [ esp + 0x8 ]
call sub_40c060
mov eax [ esi + 0x1d8 ]
lea edx [ esp + 0x8 ]
push edx
push eax
call sub_4607e9
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x8 ]
call sub_40e640
mov ecx edi
call sub_402620
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
jge r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_477c27
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
mov esi [ esi + 0x1d8 ]
push 0x0
push eax
call sub_453063
push eax
push esi
call sub_4458ab
test al al
jne r-xdata
jge r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
jmp r-xdata
sub_477c93
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
mov eax [ edx ]
push eax
call sub_437118
mov ecx [ esi + 0x2f4 ]
push ecx
call sub_436272
add esp 0x8
xor eax eax
pop esi
retn 0x8
jge r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_477cff
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
push edx
call sub_4388a2
mov eax [ esi + 0x2f4 ]
push eax
call sub_436272
add esp 0x4
xor eax eax
pop esi
retn 0x8
jge r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_477d69
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x8 ]
mov esi ecx
push edi
push esi
mov [ esp + 0x20 ] ebx
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov edx [ esi + 0x1d8 ]
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push edx
call sub_44cccb
cmp ebx 0x5
jb r-xdata
jge r-xdata
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x20 ]
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
mov ebx [ esp + 0x2c ]
sub ebx [ esp + 0x24 ]
mov ecx [ edi + 0x4 ]
mov ebx [ ecx + 0x14 ]
push ebx
call sub_44adff
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c760
jmp r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c760
mov eax [ esp + 0x20 ]
jmp r-xdata
mov ecx ebx
call sub_40c760
mov ebx eax
jmp r-xdata
mov [ esp + 0x14 ] eax
cmp ebx 0x6
jb r-xdata
mov ecx [ esp + 0x1c ]
call sub_40c760
mov [ esp + 0xc ] eax
mov edx [ esp + 0x24 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
push eax
mov [ esp + 0x20 ] eax
call sub_44adff
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
push ebx
push ecx
mov ecx [ esi + 0x1d8 ]
push edx
push eax
push ecx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c760
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ esp + 0x18 ] 0x7
jb r-xdata
test edi edi
jle r-xdata
mov edi 0xa
cmp edi 0x64
jle r-xdata
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push 0x1
push edi
push eax
push ecx
call sub_43634e
add esp 0x18
test al al
je r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] ecx
cmp [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esi + 0x1d8 ]
mov esi [ ebp + 0xc ]
mov edi [ eax ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ebx
push edx
mov edx [ esi + 0x1d8 ]
push eax
push ecx
push edx
call sub_438910
push 0x32
call sub_436272
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
push ebx
push edx
push ecx
push eax
mov eax [ esi + 0x1d8 ]
push eax
jmp r-xdata
call sub_438910
sub_477f68
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_40c760
cmp eax 0x40
jne r-xdata
jge r-xdata
cmp eax 0x41
jne r-xdata
mov edx [ esi + 0x1d8 ]
push 0x1
push edx
call sub_4388e5
pop edi
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
neg eax
push 0x0
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_4040e0
mov ecx [ esi + 0x1d8 ]
mov edx [ ecx ]
push eax
push edx
call [ ShowWindow@IAT ]
mov eax [ esi + 0x2f4 ]
push eax
call sub_436272
add esp 0x4
pop edi
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x1d8 ]
push 0x0
push eax
call sub_4388e5
pop edi
xor eax eax
pop esi
retn 0x8
sub_478018
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push eax
push edi
call sub_47042a
push 0x1
push edi
call sub_46dd22
test eax eax
jg r-xdata
mov edx [ edi + 0x1d8 ]
mov esi [ edx ]
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
cmp esi eax
jne r-xdata
jge r-xdata
mov ecx [ edi + 0x1d8 ]
mov eax [ ecx ]
push eax
call sub_4375b0
mov esi [ ebp + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ edi + 0x2f4 ]
push eax
call sub_436272
add esp 0x4
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax edi
call sub_4040e0
mov edx [ edi + 0x1d8 ]
mov eax [ edx ]
mov [ esp + 0xc ] eax
call sub_4092c0
mov ecx [ esp + 0xc ]
mov [ esi + 0x8 ] 0x7
mov [ esi ] ecx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push ebx
add eax edi
call sub_404120
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov eax [ edi + 0x2f4 ]
push eax
call sub_436272
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4780fc
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_47042a
push 0x1
push esi
call sub_46dd22
test eax eax
jg r-xdata
xor eax eax
pop esi
retn 0x8
jge r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_478145
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_47042a
push esi
call sub_46e641
test eax eax
jg r-xdata
push edi
call [ __import_lookup_table_10(USER32:GetForegroundWindow) ]
mov esi [ esp + 0x10 ]
mov edi eax
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
jge r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
neg eax
push 0x0
push eax
mov eax [ ecx + 0x4 ]
add eax esi
call sub_4040e0
sub_4781ae
sub esp 0x30
mov ecx [ esp + 0x38 ]
push ebx
push ebp
mov ebp [ esp + 0x3c ]
xor ebx ebx
push esi
mov esi [ esp + 0x48 ]
push edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] ebx
mov edi ecx
cmp [ rw-data ] bl
je r-xdata
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push ebx
push ecx
add eax ebp
call sub_4040e0
cmp [ esp + 0x54 ] bl
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x14
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x30
retn 0x14
mov edx 0x3
mov [ eax + 0x38 ] dx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x98 ] dx
call [ __import_lookup_table_0(KERNEL32:GetLastError) ]
mov edx [ rw-data ]
mov [ edx + 0xa0 ] eax
mov eax 0x3
mov [ edx + 0xa8 ] ax
mov ecx [ ebp + 0xf4 ]
push ecx
call sub_437a4d
mov [ edx + 0xb0 ] eax
cmp esi ebx
je r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov ebx [ VariantCopy@IAT ]
mov eax 0x8
mov [ esp + 0x20 ] ax
lea eax [ esp + 0x20 ]
push eax
add edx 0x68
push edx
mov [ esp + 0x30 ] ecx
call ebx
mov eax [ rw-data ]
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x20 ]
push edx
add eax 0x58
push eax
mov [ esp + 0x30 ] ecx
call ebx
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
lea edx [ esp + 0x20 ]
push edx
add eax 0x78
push eax
mov [ esp + 0x30 ] ecx
call ebx
mov eax [ rw-data ]
mov ecx 0x3
mov [ eax + 0x88 ] cx
mov edx [ esi + 0x10 ]
mov [ eax + 0x90 ] edx
mov [ eax + 0xb8 ] cx
movzx ecx [ esi ]
test cx cx
je r-xdata
push edi
lea edx [ esp + 0x34 ]
push edx
call sub_44af5c
mov edi eax
lea esi [ esp + 0x10 ]
call sub_40e640
lea ecx [ esp + 0x30 ]
call sub_402620
mov edi eax
lea ebx [ esp + 0x10 ]
call sub_40e6d0
jmp r-xdata
mov esi [ esi + 0x1c ]
movzx esi cx
jmp r-xdata
mov eax [ rw-data ]
add eax 0x48
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_476a8a
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
add esp 0x8
call eax
mov edx [ ebp ]
mov ecx [ esp + 0x48 ]
mov eax [ edx + 0x4 ]
push 0x0
push ecx
add eax ebp
call sub_4040e0
mov edi esi
mov [ eax + 0xc0 ] esi
test esi esi
je r-xdata
sub_478373
sub esp 0x10
mov edx [ esp + 0x1c ]
push ebx
xor ebx ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi [ esp + 0x20 ]
push edi
lea edi [ esi + 0xc ]
mov [ esp + 0x30 ] 0xffffffff
mov [ esi ] ebx
mov [ edi ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] bl
mov [ esi + 0x3d ] bl
mov [ esi + 0x8 ] ebx
cmp edx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x14
cmp ebp ebx
je r-xdata
mov eax [ esp + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x28 ] ebx
je r-xdata
mov [ eax ] ebx
movsx eax [ ebp + 0x80 ]
mov [ esi + 0x10 ] eax
movsx eax [ ebp + 0x80 ]
movsx ecx [ ebp + 0x84 ]
add ecx eax
mov [ esi + 0x18 ] ecx
movsx ecx [ ebp + 0x82 ]
mov [ esi + 0x14 ] ecx
movsx ecx [ ebp + 0x82 ]
movsx eax [ ebp + 0x86 ]
add eax ecx
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x28 ]
push edx
mov [ esi + 0x4 ] ebp
mov [ esi ] eax
call sub_43550e
test al al
je r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
push edi
push r--data
push eax
mov eax [ edx ]
call eax
cmp eax ebx
jl r-xdata
push ebx
push ebx
push ebx
push eax
push rw-data
call sub_4781ae
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x14
push 0xc
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] 0x1
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x28 ] eax
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ebx
jmp r-xdata
push 0xc
mov [ esi + 0x30 ] eax
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x2c ] eax
call sub_41171a
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ edi ]
push 0x1
push eax
call [ __import_lookup_table_6(ole32:OleSetContainedObject) ]
mov eax [ edi ]
mov edx [ eax ]
mov edx [ edx + 0x2c ]
lea ecx [ esi + 0x10 ]
push ecx
mov ecx [ esi ]
mov ecx [ ecx + 0x14 ]
push ecx
mov ecx [ esi + 0x28 ]
push 0xffffffff
push ecx
push ebx
push 0xffffffff
push eax
call edx
mov [ esp + 0x28 ] 0x5
mov edx [ esi + 0x34 ]
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
push edx
push 0x2
push 0x1
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x34 ] eax
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push r--data
push r--data
push eax
call edx
movsx eax [ ebp + 0x84 ]
movsx ecx [ ebp + 0x86 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
push edx
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x1c ] ecx
call sub_44cbd3
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
push 0x1
push eax
mov eax [ ecx + 0x44 ]
call eax
mov eax [ edi ]
mov edx [ esi + 0x28 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ esi + 0x38 ]
push edx
mov edx [ esi + 0x34 ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jl r-xdata
mov edi [ edi ]
mov eax [ edi ]
mov edx [ eax ]
lea ecx [ esp + 0x2c ]
push ecx
push r--data
push edi
call edx
mov edi eax
cmp edi ebx
jge r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
lea ebp [ esi + 0x8 ]
push ebp
push eax
call edx
mov edi eax
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
push esi
call sub_445513
push 0x1
push ebx
push ebx
push edi
push rw-data
call sub_4781ae
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x14
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x38 ]
push eax
call edx
dec [ esp + 0x28 ]
mov ebp eax
cmp ebp ebx
je r-xdata
cmp ebp ebx
jge r-xdata
mov eax [ ebp ]
mov ecx [ esp + 0x34 ]
mov [ ecx ] eax
push esi
call sub_445513
push 0x1
push ebx
push ebx
push ebp
push rw-data
call sub_4781ae
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x14
sub_478655
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi ecx
push eax
push esi
call sub_477999
test al al
jne r-xdata
mov edx [ esi + 0x2fc ]
mov esi [ esp + 0x10 ]
mov edi [ edx ]
call sub_4092c0
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] 0x7
xor eax eax
pop esi
retn 0x8
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push ebx
push 0x0
push 0x1
add eax esi
call sub_4040e0
mov ebx [ esp + 0x14 ]
mov edi r--data
call sub_40e6d0
pop ebx
pop edi
xor eax eax
pop esi
retn 0x8
sub_4786b0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
push esi
call sub_477999
test al al
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jb r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x2fc ]
mov eax [ eax ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
push eax
push ecx
call sub_453063
push eax
add esi 0x88
push esi
call sub_45fdc2
pop edi
xor eax eax
pop esi
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
test eax eax
je r-xdata
mov ecx [ esi + 0x2fc ]
mov eax [ ecx ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + 0xc ]
push eax
push ecx
call sub_453063
push eax
add esi 0x88
push esi
call sub_453eb2
pop edi
xor eax eax
pop esi
retn 0x8
sub_478747
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push esi
push edi
mov [ esp + 0x14 ] edi
call sub_477999
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_40c060
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_410a40
mov edi r--data
lea ebx [ esp + 0x30 ]
call sub_40d420
mov esi [ ebp + 0x8 ]
mov edi 0x6
cmp [ esi + 0x8 ] edi
jae r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0xc ]
mov edi [ ebx + 0x2fc ]
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea eax [ esp + 0x30 ]
push eax
call sub_40be00
cmp [ esi + 0x8 ] edi
jb r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
push edi
call sub_438c09
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push 0x1
lea esi [ esp + 0x30 ]
call sub_4092c0
lea ecx [ esp + 0x10 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push 0x0
push eax
call sub_453063
push eax
push edi
call sub_468ed7
jmp r-xdata
mov ebx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_453063
push eax
push edi
call sub_469157
movzx edi al
jmp r-xdata
mov bl al
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push 0x1
push eax
call sub_453063
push eax
push edi
call sub_468ed7
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_453063
push eax
push edi
call sub_46137b
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_4434cc
movzx edx al
push edx
lea eax [ esp + 0x24 ]
push eax
push edi
call sub_4690f6
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
mov bl al
call sub_40e640
jmp r-xdata
mov edi eax
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
lea ecx [ esp + 0x20 ]
push ecx
push eax
call sub_453063
push eax
push edi
call sub_4691bb
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
mov bl al
call sub_40e640
jmp r-xdata
test bl bl
jne r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_453063
push eax
push edi
call sub_468ea3
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_453063
push eax
push edi
call sub_469170
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
push 0x0
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
push eax
call sub_453063
push eax
push edi
call sub_468e1b
sub_478a7c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push esi
push edi
mov [ esp + 0x14 ] edi
call sub_477999
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_40c060
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0xc ]
push eax
call sub_453063
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
call sub_410a40
mov edi r--data
lea ebx [ esp + 0x30 ]
call sub_40d420
mov esi [ ebp + 0x8 ]
mov edi 0x6
cmp [ esi + 0x8 ] edi
jae r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0xc ]
mov edi [ ebx + 0x2fc ]
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea eax [ esp + 0x30 ]
push eax
call sub_40be00
cmp [ esi + 0x8 ] edi
jb r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
push edi
call sub_438c85
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
push edi
call sub_438c5c
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x14 ]
mov esi [ esi + 0x10 ]
lea edx [ esp + 0x20 ]
push edx
call sub_40c760
push eax
mov ecx esi
call sub_40c760
push eax
push edi
call sub_4614cb
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e640
jmp r-xdata
lea esi [ esp + 0x30 ]
call sub_4092c0
lea ecx [ esp + 0x10 ]
call sub_402620
lea ecx [ esp + 0x20 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
push edi
call sub_438c43
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c760
push eax
push edi
call sub_438c22
mov esi [ ebp + 0xc ]
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
push 0x1
push edi
call sub_438c9e
jmp r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
jmp r-xdata
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x1
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
push 0x0
push edi
call sub_438c9e
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
mov ebx eax
call sub_40c760
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
push edi
call sub_445c50
jmp r-xdata
push eax
push ebx
push 0x1
push edi
call sub_438c9e
jmp r-xdata
mov eax ebx
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x14 ]
mov ebx eax
call sub_40c760
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
test eax eax
jne r-xdata
push eax
push ebx
push 0x0
push edi
call sub_438c9e
jmp r-xdata
mov eax ebx
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x14 ]
mov esi [ esi + 0x10 ]
call sub_40c760
push eax
push esi
call sub_453063
push eax
push edi
call sub_445b50
lea eax [ esp + 0x20 ]
push eax
push 0x1
lea edx [ esp + 0x20 ]
push edx
push eax
jmp r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call sub_453063
push eax
push edi
call sub_445a77
jmp r-xdata
push edi
call sub_4613e0
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e640
jmp r-xdata
sub_478e41
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0xc ] edi
mov [ esp + 0x30 ] ebx
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x3c ] ebx
call sub_40c060
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov esi [ ebp + 0x8 ]
push esi
push edi
call sub_477999
test al al
jne r-xdata
mov edi r--data
lea ebx [ esp + 0x30 ]
call sub_40e6d0
mov edi 0x5
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push ebx
push 0x1
add eax edi
call sub_4040e0
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_453063
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x10 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov ebx 0x1
add [ eax ] ebx
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
call sub_410a40
mov edi [ esp + 0xc ]
mov esi [ edi + 0x2fc ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea esi [ esp + 0x30 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
push esi
call sub_43888d
lea ecx [ esp + 0x30 ]
push ecx
call sub_40be00
mov edx [ ebp + 0x8 ]
mov esi edx
cmp [ edx + 0x8 ] edi
jb r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
push esi
call sub_438878
jmp r-xdata
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
jmp r-xdata
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
push 0xffffffff
push esi
call sub_445cf9
jmp r-xdata
mov esi [ ebp + 0xc ]
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_402620
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
push ebx
push esi
call sub_445cf9
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_438e7c
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
push ebx
push esi
call sub_438e45
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov edx [ esp + 0xc ]
mov [ esi + 0x8 ] ebx
mov [ esi ] edx
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
push 0x0
push esi
call sub_438e45
test al al
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_453063
push eax
push esi
call sub_4695f7
test al al
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push 0x0
push ebx
add eax edi
call sub_4040e0
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c760
push eax
push esi
call sub_46956f
test al al
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push eax
call sub_453063
push eax
push esi
call sub_4694de
test al al
je r-xdata
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
push eax
push esi
call sub_4693f0
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov eax [ esp + 0xc ]
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push esi
call sub_4692e4
test al al
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x10 ]
push eax
call sub_453063
push eax
push esi
call sub_4691f4
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
call sub_40e640
jmp r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_445975
add esp 0x8
test al al
je r-xdata
push esi
call sub_438e26
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
push ebx
push esi
call sub_445cb7
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
push 0x0
push esi
call sub_445cb7
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push esi
call sub_461604
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_438e05
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_438de3
jmp r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_438d4e
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_453063
push eax
push esi
call sub_445c97
jmp r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_445975
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x10 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40c760
push eax
push esi
call sub_46158c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_40c760
push eax
push esi
call sub_438a38
test al al
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
jmp r-xdata
sub_4793b2
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_477999
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x0
push ecx
call sub_4388ba
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
sub_4793f4
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_477999
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x1
push ecx
call sub_4388ba
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
sub_479436
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_477999
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x0
push ecx
call sub_4388e5
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
sub_479478
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_477999
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x1
push ecx
call sub_4388e5
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x8
sub_4794ba
sub esp 0x14
push ebp
push esi
mov esi [ esp + 0x20 ]
mov ebp [ esi + 0x8 ]
push edi
mov edi ecx
push esi
push edi
mov [ esp + 0x14 ] edi
call sub_477999
test al al
jne r-xdata
mov edi [ edi + 0x2fc ]
push 0x1
lea eax [ esp + 0x14 ]
push eax
push edi
call sub_44cccb
test al al
je r-xdata
mov esi [ esp + 0x28 ]
call sub_4092c0
pop edi
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
xor eax eax
pop ebp
add esp 0x14
retn 0x8
push ebx
cmp ebp 0x6
jae r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c760
mov ebx eax
mov ebx [ esp + 0x1c ]
sub ebx [ esp + 0x14 ]
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
call sub_40c760
mov edi eax
mov edi [ esp + 0x20 ]
sub edi [ esp + 0x18 ]
jmp r-xdata
cmp ebp 0x7
jae r-xdata
mov ecx ebp
call sub_40c760
mov ebp eax
mov ebp [ esp + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0xc ]
push ebp
call sub_44adff
test al al
je r-xdata
mov ecx esi
call sub_40c760
mov eax [ esp + 0x18 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0x10 ]
push esi
call sub_44adff
test al al
je r-xdata
mov edx [ esp + 0x10 ]
push edi
push ebx
push eax
mov eax [ edx + 0x2fc ]
push ebp
push eax
call sub_438910
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x14
retn 0x8
sub_4795a5
mov eax [ esp + 0x4 ]
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
push eax
push edi
call sub_477999
test al al
jne r-xdata
mov eax [ edi + 0x2fc ]
mov ebx 0x1
push ebx
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_44cccb
cmp al bl
jne r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov ebx 0x1
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov esi [ esp + 0x24 ]
call sub_4092c0
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov edi [ esp + 0x24 ]
push ebp
push 0x4
push ebx
mov eax edi
call sub_40e7e0
push 0x0
push ebx
push 0x0
push edi
call sub_40d030
mov ebp [ esp + 0x28 ]
add esp 0x18
mov esi eax
call sub_4092c0
push ebx
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ebp
call sub_40d030
mov ebp [ esp + 0x24 ]
add esp 0x10
mov esi eax
call sub_4092c0
push 0x2
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ebp
call sub_40d030
mov ebp [ esp + 0x28 ]
sub ebp [ esp + 0x20 ]
add esp 0x10
mov esi eax
call sub_4092c0
push 0x3
push ebx
push 0x0
push edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ebp
call sub_40d030
mov edi [ esp + 0x2c ]
sub edi [ esp + 0x24 ]
add esp 0x10
mov esi eax
call sub_4092c0
pop ebp
mov [ esi ] edi
pop edi
mov [ esi + 0x8 ] ebx
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
push 0x0
push ebx
add eax edi
call sub_4040e0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x8
sub_4796c2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi r--data
mov esi ecx
call sub_40e6d0
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_477999
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c060
mov eax [ esi + 0x2fc ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_4607e9
test al al
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ esp + 0x10 ]
mov esi ebx
call sub_40e640
mov ecx edi
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
lea ecx [ esp + 0x10 ]
call sub_402620
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_479765
push ecx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
push esi
push edi
mov [ esp + 0x10 ] 0x0
call sub_477999
test al al
je r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0xc ]
mov edi [ edi + 0x2fc ]
push edx
push eax
call sub_453063
push eax
push edi
call sub_4458ab
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_40c760
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
mov [ esp + 0x8 ] 0x1
sub_4797d8
push ecx
push esi
mov esi [ esp + 0xc ]
push esi
push ecx
mov [ esp + 0xc ] ecx
call sub_477999
test al al
jne r-xdata
push ebx
push ebp
push edi
mov edi [ esi + 0x8 ]
or ebp 0xffffffff
mov ebx 0x1
mov [ esp + 0x18 ] ebp
cmp edi 0x7
jb r-xdata
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ecx
retn 0x8
cmp edi 0x6
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_40c760
mov [ esp + 0x18 ] eax
cmp edi 0x5
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_40c760
mov ebp eax
mov eax 0x1
cmp edi 0x4
jb r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x10 ]
call sub_40c760
mov ebx eax
sub eax 0x1
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
call sub_453081
push eax
call sub_44b988
add esp 0x4
xor eax eax
sub eax 0x1
je r-xdata
mov eax 0x2
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x10 ]
mov edx [ esi + 0x2fc ]
push ecx
push ebp
push ebx
push eax
push edx
call sub_438ead
mov eax [ esi + 0x10c ]
push eax
call sub_436272
add esp 0x4
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
pop ecx
retn 0x8
mov eax 0x1
jmp r-xdata
mov esi [ esp + 0x1c ]
call sub_4092c0
pop edi
pop ebp
pop ebx
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
xor eax eax
pop esi
pop ecx
retn 0x8
sub_4798e3
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
push esi
call sub_477999
test al al
je r-xdata
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
mov eax [ esi + 0x2fc ]
push eax
call sub_445da4
test al al
jne r-xdata
xor eax eax
pop esi
retn 0x8
sub_479921
sub esp 0x54
mov eax [ esp + 0x6c ]
push ebx
mov ebx [ esp + 0x60 ]
push ebp
mov ebp [ esp + 0x6c ]
push esi
mov esi [ eax + 0x8 ]
push edi
xor edi edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x18 ] 0xfffffffd
mov [ esp + 0x74 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x6c ] edi
cmp ebp edi
je r-xdata
mov edx [ esp + 0x68 ]
push 0x1
push r--data
push edi
push 0x1
push edx
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x18
cmp [ esp + 0x70 ] edi
je r-xdata
mov edx [ esp + 0x78 ]
cmp edx edi
je r-xdata
push ebp
call sub_43550e
test al al
jne r-xdata
mov eax [ ebp ]
mov ebp [ eax + 0x8 ]
cmp ebp edi
jne r-xdata
mov ecx [ esp + 0x68 ]
push 0x1
push r--data
push edi
push 0x2
push ecx
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x18
push edx
call sub_4112d5
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x68 ]
push 0x1
push r--data
push edi
push 0x4
push ecx
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x18
mov [ esp + 0x74 ] edi
mov edi [ esp + 0x78 ]
call sub_40fff0
mov [ esp + 0x6c ] eax
mov edx [ ebp ]
mov edx [ edx + 0x14 ]
lea eax [ esp + 0x74 ]
push eax
push 0x400
push 0x1
lea ecx [ esp + 0x78 ]
push ecx
push r--data
push ebp
call edx
mov edi eax
test edi edi
jge r-xdata
mov ecx [ esp + 0x78 ]
mov edi ebx
and edi 0xc
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] ecx
je r-xdata
mov ecx esi
shl ecx 0x4
lea edx [ ecx + eax - 0x10 ]
mov [ esp + 0x14 ] edx
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x10
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_410f64
add esp 0x4
xor edi edi
mov [ esp + 0x78 ] eax
test esi esi
jbe r-xdata
mov eax [ esp + 0x6c ]
push eax
call sub_4137d3
mov ecx [ esp + 0x6c ]
add esp 0x4
push 0x1
push 0x0
push 0x0
push edi
push ecx
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x18
lea eax [ esp + 0x30 ]
push eax
call [ VariantInit@IAT ]
push 0x20
lea ecx [ esp + 0x44 ]
push 0x0
push ecx
call sub_4131f0
mov edx [ ebp ]
add esp 0xc
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea eax [ esp + 0x38 ]
push eax
mov eax [ esp + 0x80 ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ edx + 0x18 ]
push ebx
push 0x800
push r--data
push eax
push ebp
call ecx
cmp eax 0x80020003
jne r-xdata
lea edx [ esp + 0x18 ]
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x24 ] edx
mov eax [ esp + 0x68 ]
push 0x1
push r--data
push 0x0
push 0x5
push eax
call sub_4781ae
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
sub [ esp + 0x14 ] 0x10
inc edi
cmp edi esi
jb r-xdata
test eax eax
jge r-xdata
test di di
je r-xdata
mov ebx [ VariantClear@IAT ]
mov eax [ esp + 0x7c ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x14 ]
mov eax [ ecx + edi * 4 ]
push edx
push eax
call sub_476a8a
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x70 ]
lea eax [ esp + 0x30 ]
push eax
call sub_467626
xor edi edi
test esi esi
jbe r-xdata
cmp eax 0x80020009
jne r-xdata
mov edx [ esp + 0x68 ]
push 0x1
push 0x0
push 0x0
push eax
push edx
call sub_4781ae
mov ebx [ VariantClear@IAT ]
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x14 ] eax
call ebx
jmp r-xdata
mov edx [ ebp ]
mov edx [ edx + 0x18 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea eax [ esp + 0x38 ]
push eax
mov eax ebx
not eax
xor eax ebx
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x84 ]
and eax 0xc
xor eax ebx
push eax
push 0x800
push r--data
push ecx
push ebp
call edx
mov ecx [ esp + 0x78 ]
push ecx
call sub_4137d3
mov eax [ esp + 0x70 ]
add esp 0x4
test eax eax
je r-xdata
mov edi [ esp + 0x78 ]
mov ebx [ VariantClear@IAT ]
lea edx [ esp + 0x30 ]
push edx
call ebx
jmp r-xdata
mov edx [ esp + 0x78 ]
mov ecx esi
shl ecx 0x4
lea ebx [ ecx + edx - 0x10 ]
mov ecx [ esp + 0x68 ]
push 0x1
push 0x0
lea eax [ esp + 0x48 ]
push eax
push 0x80020009
push ecx
call sub_4781ae
mov ebx [ VariantClear@IAT ]
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x14 ] eax
call ebx
jmp r-xdata
test esi esi
jbe r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x18
push eax
call sub_4137d3
add esp 0x4
push edi
call ebx
add edi 0x10
sub esi 0x1
jne r-xdata
mov eax [ edi + 0x8 ]
push eax
call ebx
push ebx
push ecx
call sub_4355fd
test eax eax
je r-xdata
cmp [ edi ] 0xc
jne r-xdata
mov eax [ esp + 0x7c ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi * 4 ]
cmp [ ecx + 0x8 ] 0x6
jne r-xdata
inc edi
sub ebx 0x10
cmp edi esi
jb r-xdata
push ebx
push ecx
call sub_4355fd
mov ecx eax
jmp r-xdata
call sub_467626
sub_479c97
sub esp 0x94
push ebx
push ebp
mov ebp [ esp + 0xa0 ]
xor ebx ebx
push esi
mov esi [ esp + 0xac ]
push edi
mov edi [ esp + 0xac ]
push 0x20
lea edx [ esp + 0x84 ]
xor eax eax
xor ecx ecx
push ebx
push edx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x40 ] r--data
mov [ esp + 0x3c ] r--data
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x2c ] 0x20404
mov [ esp + 0x30 ] ax
mov [ esp + 0x32 ] cx
mov [ esp + 0x34 ] 0xc0
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] 0x46
call sub_4131f0
add esp 0xc
cmp edi ebx
je r-xdata
push 0x1
push r--data
cmp [ esp + 0xb4 ] ebx
je r-xdata
cmp esi ebx
je r-xdata
push esi
call sub_43550e
test al al
jne r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp [ eax ] 0xd
je r-xdata
push 0x1
push r--data
push ebx
push 0x2
push ebp
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x10
cmp [ edi + 0x8 ] 0x8
jne r-xdata
mov edi [ eax + 0x8 ]
lea eax [ esp + 0x38 ]
push eax
call [ VariantInit@IAT ]
lea ecx [ esp + 0x38 ]
push ecx
call [ VariantClear@IAT ]
mov edx [ edi ]
mov edx [ edx + 0xc ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push 0x1
push edi
call edx
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
push r--data
jmp r-xdata
mov edi [ eax + 0x8 ]
cmp edi ebx
jne r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
cmp edi 0x1
je r-xdata
push ebx
push 0x1
push ebp
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x10
mov eax [ edi ]
mov eax [ eax + 0x14 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x400
push 0x1
lea edx [ esp + 0x40 ]
push edx
push r--data
push edi
call eax
test eax eax
jl r-xdata
mov ecx 0x1
mov [ esp + 0x38 ] cx
call sub_4092c0
lea edx [ esp + 0x38 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
push edx
cmp edi 0x1
je r-xdata
call sub_4092c0
push 0x1
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
push ebx
mov ecx [ edi ]
mov ecx [ ecx + 0x14 ]
lea edx [ esp + 0x14 ]
push edx
push 0x400
push 0x1
lea eax [ esp + 0x3c ]
push eax
push r--data
push edi
call ecx
test eax eax
jl r-xdata
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
jmp r-xdata
mov [ esp + 0x14 ] 0xfffffffc
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
push 0x10
call sub_410f64
add esp 0x4
lea edx [ esp + 0x70 ]
push edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x58 ] ebx
mov [ esp + 0x50 ] eax
call [ VariantInit@IAT ]
mov eax [ edi ]
lea ecx [ esp + 0x5c ]
push ecx
lea edx [ esp + 0x84 ]
push edx
lea ecx [ esp + 0x78 ]
push ecx
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x58 ]
push edx
mov edx [ eax + 0x18 ]
push 0x3
push 0x800
push r--data
push ecx
push edi
call edx
mov edi eax
mov eax [ esp + 0x18 ]
push eax
call sub_4137d3
add esp 0x4
cmp edi ebx
jge r-xdata
mov ecx [ esp + 0xb8 ]
call sub_467626
lea eax [ esp + 0x38 ]
push eax
call [ VariantClear@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x10
mov eax [ esp + 0x78 ]
cmp eax ebx
je r-xdata
push 0x1
push ebx
cmp edi 0x80020009
jne r-xdata
mov edx 0xd
mov [ esp + 0x60 ] dx
mov ecx [ eax ]
lea edx [ esp + 0x68 ]
push edx
lea edx [ esp + 0x24 ]
push edx
mov edi eax
push eax
mov eax [ ecx ]
call eax
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
mov [ esp + 0x1c ] eax
call edx
mov eax [ esp + 0x68 ]
mov edi eax
cmp eax ebx
jne r-xdata
push ebx
push edi
push ebp
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x10
lea ecx [ esp + 0x88 ]
push ecx
push edi
push ebp
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push eax
call edx
lea eax [ esp + 0x60 ]
push eax
mov ecx esi
call sub_467626
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
mov eax [ esp + 0x18 ]
push 0x1
push ebx
push ebx
push eax
push ebp
call sub_4781ae
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x10
sub_479fce
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi r--data
mov esi ecx
mov [ esp + 0x50 ] eax
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x5c ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] eax
call sub_40e6d0
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x8
je r-xdata
push eax
lea ebx [ esp + 0x54 ]
call sub_409210
push ebx
call sub_43550e
test al al
jne r-xdata
push r--data
push eax
call sub_453081
push eax
call sub_4133e4
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x50 ]
mov eax [ edx + 0x8 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_4424dc
mov ebx [ esp + 0x1c ]
mov edx [ ebx ]
mov ecx [ edx ]
lea eax [ esp + 0x2c ]
push eax
push r--data
push ebx
call ecx
test eax eax
jge r-xdata
push 0x1
push r--data
push 0x0
push 0x2
push esi
call sub_4781ae
mov edi eax
lea eax [ esp + 0x18 ]
push eax
call sub_434275
lea ecx [ esp + 0x1c ]
push ecx
call sub_434275
lea edx [ esp + 0x10 ]
push edx
call sub_434275
lea eax [ esp + 0x14 ]
push eax
call sub_434275
lea ecx [ esp + 0x20 ]
push ecx
call sub_434275
lea edx [ esp + 0x24 ]
push edx
call sub_434275
lea eax [ esp + 0x28 ]
push eax
call sub_434275
lea ecx [ esp + 0x2c ]
push ecx
call sub_434275
mov esi ebx
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x1
jne r-xdata
push 0x0
push r--data
push 0x0
push 0x1
push esi
call sub_4781ae
lea ecx [ esp + 0x18 ]
push ecx
mov edi eax
call sub_434275
lea edx [ esp + 0x1c ]
push edx
call sub_434275
lea eax [ esp + 0x10 ]
push eax
call sub_434275
lea ecx [ esp + 0x14 ]
push ecx
call sub_434275
lea edx [ esp + 0x20 ]
push edx
call sub_434275
lea eax [ esp + 0x24 ]
push eax
call sub_434275
lea ecx [ esp + 0x28 ]
push ecx
call sub_434275
lea edx [ esp + 0x2c ]
push edx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x8 ] 0x3
jne r-xdata
push 0x1
push 0x0
push 0x0
push eax
push esi
call sub_4781ae
lea edx [ esp + 0x18 ]
push edx
mov edi eax
call sub_434275
lea eax [ esp + 0x1c ]
push eax
call sub_434275
lea ecx [ esp + 0x10 ]
push ecx
call sub_434275
lea edx [ esp + 0x14 ]
push edx
call sub_434275
lea eax [ esp + 0x20 ]
push eax
call sub_434275
lea ecx [ esp + 0x24 ]
push ecx
call sub_434275
lea edx [ esp + 0x28 ]
push edx
call sub_434275
lea eax [ esp + 0x2c ]
push eax
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebx ]
mov ecx [ edx ]
lea eax [ esp + 0x24 ]
push eax
push r--data
push ebx
call ecx
test eax eax
jl r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x8 ]
push eax
call sub_453081
push eax
lea edx [ esp + 0x64 ]
push edx
call sub_4584d6
add esp 0x8
test eax eax
jge r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
lea edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x48 ]
push ecx
lea edx [ esp + 0x50 ]
push edx
lea ecx [ esp + 0x58 ]
push ecx
push eax
call sub_453081
push eax
push esi
call sub_4646a2
test al al
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_434275
lea ecx [ esp + 0x1c ]
push ecx
call sub_434275
lea edx [ esp + 0x10 ]
push edx
call sub_434275
lea eax [ esp + 0x14 ]
push eax
call sub_434275
lea ecx [ esp + 0x20 ]
push ecx
call sub_434275
lea edx [ esp + 0x24 ]
push edx
call sub_434275
lea eax [ esp + 0x28 ]
push eax
call sub_434275
lea ecx [ esp + 0x2c ]
push ecx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
lea ecx [ esp + 0x20 ]
push ecx
push r--data
push ebx
call edx
test eax eax
jl r-xdata
mov eax [ esp + 0x24 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
lea ecx [ esp + 0x60 ]
push ecx
push 0x1
push eax
call edx
test eax eax
jge r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x64 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jl r-xdata
push 0x1
push 0x0
push 0x0
push eax
push esi
call sub_4781ae
mov edi eax
lea eax [ esp + 0x18 ]
push eax
call sub_434275
lea ecx [ esp + 0x1c ]
push ecx
call sub_434275
lea edx [ esp + 0x10 ]
push edx
call sub_434275
lea eax [ esp + 0x14 ]
push eax
call sub_434275
lea ecx [ esp + 0x20 ]
push ecx
call sub_434275
lea edx [ esp + 0x24 ]
push edx
call sub_434275
lea eax [ esp + 0x28 ]
push eax
call sub_434275
lea ecx [ esp + 0x2c ]
push ecx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0xc8
call sub_41171a
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
call sub_4040e0
jmp r-xdata
push 0x1
push r--data
push 0x0
push 0x2
push esi
call sub_4781ae
lea edx [ esp + 0x18 ]
push edx
mov edi eax
call sub_434275
lea eax [ esp + 0x1c ]
push eax
call sub_434275
lea ecx [ esp + 0x10 ]
push ecx
call sub_434275
lea edx [ esp + 0x14 ]
push edx
call sub_434275
lea eax [ esp + 0x20 ]
push eax
call sub_434275
lea ecx [ esp + 0x24 ]
push ecx
call sub_434275
lea edx [ esp + 0x28 ]
push edx
call sub_434275
lea eax [ esp + 0x2c ]
push eax
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ eax + 0x30 ]
call sub_40e6d0
jmp r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x10 ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0x0
push ebx
call eax
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x34 ]
push edx
lea edx [ esp + 0x1c ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
lea ecx [ esp + 0x10 ]
push ecx
mov ebx eax
call sub_4424bb
mov eax [ esp + 0x18 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0xc ]
call eax
mov edi eax
xor eax eax
mov [ esp + 0x34 ] eax
test edi edi
jbe r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jl r-xdata
push 0x1
push 0x0
push 0x0
push eax
push esi
call sub_4781ae
lea ecx [ esp + 0x18 ]
push ecx
mov edi eax
call sub_434275
lea edx [ esp + 0x1c ]
push edx
call sub_434275
lea eax [ esp + 0x10 ]
push eax
call sub_434275
lea ecx [ esp + 0x14 ]
push ecx
call sub_434275
lea edx [ esp + 0x20 ]
push edx
call sub_434275
lea eax [ esp + 0x24 ]
push eax
call sub_434275
lea ecx [ esp + 0x28 ]
push ecx
call sub_434275
lea edx [ esp + 0x2c ]
push edx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x10 ]
push eax
call sub_43423f
test al al
je r-xdata
push 0x1
push r--data
push 0x0
push 0x13
push esi
call sub_4781ae
mov edi eax
lea eax [ esp + 0x18 ]
push eax
call sub_434275
lea ecx [ esp + 0x1c ]
push ecx
call sub_434275
lea edx [ esp + 0x10 ]
push edx
call sub_434275
lea eax [ esp + 0x14 ]
push eax
call sub_434275
lea ecx [ esp + 0x20 ]
push ecx
call sub_434275
lea edx [ esp + 0x24 ]
push edx
call sub_434275
lea eax [ esp + 0x28 ]
push eax
call sub_434275
lea ecx [ esp + 0x2c ]
push ecx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call sub_453081
push eax
push 0x0
push 0x0
push 0x0
push ebx
call sub_46ecbf
mov edi eax
test edi edi
jne r-xdata
test ebx ebx
jge r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ ecx ]
lea ebx [ esp + 0x14 ]
push ebx
push eax
mov eax [ edx + 0x10 ]
push ecx
call eax
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jge r-xdata
push 0xc8
call sub_41171a
add esp 0x4
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x64 ]
push edx
call sub_4582bf
add esp 0x8
test eax eax
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] 0x1
mov edi [ ebp + 0x8 ]
push 0x1
push 0x0
push 0x0
push ebx
push esi
call sub_4781ae
lea ecx [ esp + 0x18 ]
push ecx
mov edi eax
call sub_434275
lea edx [ esp + 0x1c ]
push edx
call sub_434275
lea eax [ esp + 0x10 ]
push eax
call sub_434275
lea ecx [ esp + 0x14 ]
push ecx
call sub_434275
lea edx [ esp + 0x20 ]
push edx
call sub_434275
lea eax [ esp + 0x24 ]
push eax
call sub_434275
lea ecx [ esp + 0x28 ]
push ecx
call sub_434275
lea edx [ esp + 0x2c ]
push edx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov ebx eax
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x30 ]
xor eax eax
xor ebx ebx
cmp ax [ ecx + 0x30 ]
jae r-xdata
push 0x1
push r--data
push 0x0
push 0xa
push esi
call sub_4781ae
lea edx [ esp + 0x18 ]
push edx
mov edi eax
call sub_434275
lea eax [ esp + 0x1c ]
push eax
call sub_434275
lea ecx [ esp + 0x10 ]
push ecx
call sub_434275
lea edx [ esp + 0x14 ]
push edx
call sub_434275
lea eax [ esp + 0x20 ]
push eax
call sub_434275
lea ecx [ esp + 0x24 ]
push ecx
call sub_434275
lea edx [ esp + 0x28 ]
push edx
call sub_434275
lea eax [ esp + 0x2c ]
push eax
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov edi [ esp + 0x10 ]
mov ebx [ esp + 0x28 ]
push eax
call sub_453081
mov ecx [ esp + 0x40 ]
push eax
push edi
lea eax [ esp + 0x58 ]
push eax
push ebx
push ecx
call sub_46ecbf
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
lea ecx [ esp + 0x10 ]
push ecx
call sub_43423f
test al al
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x24 ]
lea ecx [ esp + 0x38 ]
push ecx
push ebx
push eax
call edx
test eax eax
jl r-xdata
mov ecx [ esp + 0x30 ]
cmp [ ecx + 0x28 ] 0x5
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x1c ]
mov ecx edi
call eax
mov ebx eax
test ebx ebx
jge r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jge r-xdata
push 0x1
push r--data
push 0x0
push 0x7
push esi
call sub_4781ae
lea edx [ esp + 0x18 ]
push edx
mov edi eax
call sub_434275
lea eax [ esp + 0x1c ]
push eax
call sub_434275
lea ecx [ esp + 0x10 ]
push ecx
call sub_434275
lea edx [ esp + 0x14 ]
push edx
call sub_434275
lea eax [ esp + 0x20 ]
push eax
call sub_434275
lea ecx [ esp + 0x24 ]
push ecx
call sub_434275
lea edx [ esp + 0x28 ]
push edx
call sub_434275
lea eax [ esp + 0x2c ]
push eax
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x30 ]
movzx edx [ ecx + 0x30 ]
inc ebx
cmp ebx edx
jl r-xdata
mov al [ esp + 0x38 ]
test al 0x1
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x4c ]
call eax
mov eax [ esp + 0x34 ]
inc eax
mov ebx 0x80004005
mov [ esp + 0x34 ] eax
cmp eax edi
jb r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x70 ]
mov edx 0x9
push eax
mov [ esp + 0x74 ] dx
mov [ esp + 0x7c ] edi
call sub_467626
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
mov [ rw-data ] 0x1
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
push 0x1
push 0x0
push 0x0
push ebx
push esi
call sub_4781ae
mov edi eax
lea eax [ esp + 0x18 ]
push eax
call sub_434275
lea ecx [ esp + 0x1c ]
push ecx
call sub_434275
lea edx [ esp + 0x10 ]
push edx
call sub_434275
lea eax [ esp + 0x14 ]
push eax
call sub_434275
lea ecx [ esp + 0x20 ]
push ecx
call sub_434275
lea edx [ esp + 0x24 ]
push edx
call sub_434275
lea eax [ esp + 0x28 ]
push eax
call sub_434275
lea ecx [ esp + 0x2c ]
push ecx
call sub_434275
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
mov [ esp + 0x60 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x64 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x68 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x6c ] edx
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
test al 0x2
je r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x3c ]
push edx
push ebx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x40 ]
push edx
push eax
mov eax [ ecx + 0x38 ]
call eax
test eax eax
jge r-xdata
sub_47a999
sub esp 0xbc
push ebx
push ebp
mov ebp [ esp + 0xdc ]
push esi
xor ebx ebx
push edi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] ebx
call sub_40c060
lea ecx [ esp + 0x68 ]
call sub_40c060
lea ecx [ esp + 0x78 ]
call sub_40c060
xor eax eax
mov esi ebp
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
call sub_4092c0
mov [ ebp + 0x8 ] 0x1
mov [ ebp ] ebx
cmp [ rw-data ] bl
jne r-xdata
mov edi [ esp + 0xd4 ]
call sub_40fff0
mov edi eax
lea eax [ esp + 0xb8 ]
push eax
push edi
call [ CLSIDFromProgID@IAT ]
push edi
mov esi eax
call sub_4137d3
add esp 0x4
cmp esi ebx
jge r-xdata
push ebx
call [ OleInitialize@IAT ]
mov [ rw-data ] 0x1
mov eax [ esp + 0xd8 ]
mov edx 0x9
mov [ esp + 0x88 ] dx
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0xd0 ]
push ebx
push ebx
push ebx
push esi
push ecx
mov ecx [ esp + 0xe0 ]
mov edi [ esp + 0xdc ]
push ecx
push edi
lea edx [ esp + 0xc0 ]
push edx
push eax
mov eax [ esp + 0xe4 ]
push eax
call sub_4580e1
mov esi eax
add esp 0x14
cmp esi ebx
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push r--data
push 0x5
push ebx
lea ecx [ esp + 0xc8 ]
push ecx
call [ CoCreateInstance@IAT ]
mov esi eax
cmp esi ebx
jl r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x2
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
push 0x10
lea ecx [ esp + 0x9c ]
push ebx
push ecx
call sub_4131f0
mov eax [ esp + 0xe4 ]
add esp 0xc
lea edx [ esp + 0x9c ]
push edx
push eax
call sub_4342a8
cmp edi ebx
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x90 ]
push ecx
push r--data
push eax
call edx
mov esi eax
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0xa0 ] ebx
push edi
lea eax [ esp + 0x34 ]
mov [ esp + 0x68 ] 0x1
call sub_4021e0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
call sub_434b96
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea edx [ esp + 0x88 ]
push edx
mov ecx ebp
call sub_467626
mov eax [ esp + 0x90 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x78 ]
call sub_402620
lea ecx [ esp + 0x68 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xbc
retn 0x18
mov esi [ esp + 0x48 ]
cmp esi ebx
jl r-xdata
push edi
lea ecx [ esp + 0xac ]
push ecx
lea edx [ esp + 0x38 ]
push edx
call sub_4646f6
push eax
lea esi [ esp + 0x6c ]
call sub_40df50
lea ecx [ esp + 0xa8 ]
call sub_402620
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x6c ]
push 0xffffffff
inc edi
push edi
lea edx [ esp + 0xb0 ]
mov [ esp + 0x5c ] eax
push edx
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x68 ] ecx
call sub_460976
push eax
lea esi [ esp + 0x7c ]
call sub_40df50
lea ecx [ esp + 0xa8 ]
call sub_402620
mov ecx [ esp + 0x78 ]
mov edx [ esp + 0x7c ]
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] edx
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] eax
jmp r-xdata
cmp [ esp + 0xa0 ] ebx
je r-xdata
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
push eax
mov [ esp + 0x60 ] eax
call sub_4112d5
add esp 0x4
mov [ esp + 0x60 ] eax
jmp r-xdata
mov eax [ esp + 0xe0 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x44 ]
mov edx 0x9
mov [ esp + 0x88 ] dx
mov [ esp + 0x90 ] eax
cmp eax ebx
jne r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push 0x800
lea ecx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x58 ]
push edx
push eax
push ecx
call [ __import_lookup_table_6(ole32:CoSetProxyBlanket) ]
mov esi eax
push 0xc
lea edx [ esp + 0x44 ]
push ebx
push edx
mov [ esp + 0x9c ] ebx
call sub_4131f0
mov eax [ esp + 0x9c ]
add esp 0xc
lea ecx [ esp + 0x40 ]
push ecx
push 0x1
lea edx [ esp + 0xa0 ]
push edx
push 0x10
mov [ esp + 0x54 ] eax
push ebx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x58 ] r--data
mov [ esp + 0x60 ] ebx
call [ CoCreateInstanceEx@IAT ]
mov esi eax
cmp esi ebx
jl r-xdata
lea eax [ esp + 0x4c ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x14 ] 0x9
mov [ esp + 0x18 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x24 ] 0x3
mov [ esp + 0x1c ] ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0xa0 ] ecx
jmp r-xdata
cmp esi ebx
jne r-xdata
mov eax [ esp + 0xd0 ]
push 0x1
push r--data
push ebx
push 0x1
push eax
jmp r-xdata
call sub_4781ae
lea ecx [ esp + 0x78 ]
mov esi eax
call sub_402620
lea ecx [ esp + 0x68 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xbc
retn 0x18
sub_47ad92
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x8 ]
mov eax [ edx ]
push edi
push eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] ecx
call sub_453081
lea ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
call sub_40c060
mov cx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x2c ] cx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x28 ] eax
call sub_40c060
mov ebx [ ebp + 0xc ]
xor eax eax
mov edi r--data
mov [ esp + 0xc ] eax
mov [ esp + 0x14 ] eax
call sub_40e6d0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
push edi
call sub_4112d5
add esp 0x4
test eax eax
je r-xdata
push 0x0
call [ OleInitialize@IAT ]
mov [ rw-data ] 0x1
cmp [ esp + 0x20 ] 0x2
jne r-xdata
push edi
call sub_436b22
add esp 0x4
test al al
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
lea ecx [ esp + 0x78 ]
push ecx
call [ GetActiveObject@IAT ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
lea edx [ esp + 0x70 ]
mov edi eax
push edx
push edi
call [ CLSIDFromProgID@IAT ]
push edi
mov ebx eax
call sub_4137d3
add esp 0x4
test ebx ebx
jge r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x0
call [ CreateBindCtx@IAT ]
test eax eax
jge r-xdata
push edi
lea eax [ esp + 0x34 ]
call sub_4021e0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esp + 0x18 ]
mov edx 0x9
mov [ esp + 0x50 ] dx
mov ecx [ eax ]
lea edx [ esp + 0x58 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test edi edi
jge r-xdata
push 0x0
push 0x0
push 0x0
push ebx
jmp r-xdata
call sub_40fff0
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x28 ]
mov edi eax
mov eax [ esp + 0x10 ]
push edx
push edi
push eax
call [ __import_lookup_table_6(ole32:MkParseDisplayName) ]
push edi
mov ebx eax
call sub_4137d3
add esp 0x4
test ebx ebx
jl r-xdata
lea eax [ esp + 0x30 ]
push eax
call sub_437bfd
test al al
jne r-xdata
lea esi [ eax + 0x1 ]
push esi
lea ecx [ esp + 0x64 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
call sub_4646f6
push eax
lea eax [ esp + 0x44 ]
call sub_40c140
lea ecx [ esp + 0x60 ]
call sub_402620
push 0x5c
lea eax [ esp + 0x44 ]
call sub_403470
mov eax esi
xor edi edi
lea esi [ esp + 0x30 ]
call sub_40c740
mov esi [ esp + 0x1c ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x50 ]
push eax
call sub_467626
mov eax [ esp + 0x58 ]
push 0x0
push 0x0
push 0x0
push edi
jmp r-xdata
push esi
call sub_4781ae
lea ecx [ esp + 0x40 ]
mov esi eax
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x0
push ebx
push esi
call sub_4781ae
mov eax [ esp + 0x14 ]
mov ecx 0x9
mov [ esp + 0x50 ] cx
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ esp + 0x58 ]
push ecx
mov ecx [ esp + 0x10 ]
push r--data
push 0x0
push ecx
push eax
call edx
test eax eax
jge r-xdata
mov edi [ esp + 0x40 ]
lea ecx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x44 ]
call sub_40c140
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x34 ]
push eax
call sub_434b96
cmp eax 0xffffffff
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x40 ]
call sub_402620
lea ecx [ esp + 0x30 ]
call sub_402620
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esp + 0x58 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push eax
push esi
call sub_4781ae
mov eax [ esp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x50 ]
push eax
call sub_467626
mov eax [ esp + 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0xc ]
jmp r-xdata
sub_47b07a
push ecx
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x14 ] 0x0
push edi
mov edi [ esp + 0x1c ]
je r-xdata
xor eax eax
push 0x40
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push edi
push ecx
push edx
push esi
push eax
call sub_478373
test eax eax
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ecx
retn 0x10
push eax
call sub_44cbb9
sub_47b0c1
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x24 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x34 ]
test ebp ebp
jne r-xdata
cmp ebx 0xffffffff
jne r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
retn 0x24
cmp edi 0xffffffff
jne r-xdata
xor ebx ebx
cmp eax 0xffffffff
jne r-xdata
xor edi edi
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x96
mov dx [ esp + 0x20 ]
mov [ esi + 0x80 ] dx
mov dx [ esp + 0x24 ]
mov [ esi + 0x84 ] ax
mov eax [ esp + 0x14 ]
mov [ esi + 0x82 ] dx
mov [ esi + 0x86 ] cx
cmp [ eax + 0x1c0 ] 0x0
jne r-xdata
mov ecx 0x96
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x1c0 ]
push esi
push esi
push ebp
push eax
call sub_47b07a
mov [ esi + 0x78 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
push 0x1c
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov ecx [ ecx ]
mov edx [ ecx ]
push edx
push eax
call sub_454820
jmp r-xdata
or ebx 0x50010000
push ebx
mov ebx [ SetWindowLongW@IAT ]
push 0xfffffff0
push eax
call ebx
mov edx [ esi ]
or edi 0x10000
push edi
push 0xffffffec
push edx
call ebx
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x24
mov ecx 0x300
mov [ esi + 0x7e ] cx
mov ecx [ esp + 0x14 ]
mov [ ecx + 0x1c0 ] eax
sub_47b1d0
mov eax [ esp + 0x4 ]
sub esp 0x18
push ebx
push ebp
push esi
mov esi [ rw-data ]
add eax 0xfffffff4
push edi
cmp eax 0x8
ja r-xdata
mov ebx [ esp + 0x34 ]
movzx eax [ eax + lookup_table_47b924 ]
jmp [ eax * 4 + jump_table_47b91c ]
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov esi [ ecx ]
push esi
call sub_4564be
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
lea esi [ esp + 0x50 ]
mov ebx [ esp + 0x34 ]
cmp ebx 0xffffffff
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + ebp * 4 ]
mov edi [ eax ]
mov eax [ esp + 0x2c ]
cmp eax 0xe
je r-xdata
cmp esi 0xffffffff
jne r-xdata
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push ebx
push rw-data
call sub_44213b
test al al
je r-xdata
mov [ edi + 0x8a ] 0x0
cmp eax 0xf
je r-xdata
mov esi [ esp + 0x1c ]
jmp r-xdata
xor edx edx
mov [ edi + 0x7e ] dx
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x38 ]
push esi
push eax
mov eax [ esp + 0x3c ]
push ebx
push edx
push eax
call sub_433a1f
mov ecx [ esi + 0x58 ]
mov eax [ esi + 0x64 ]
mov edx [ esi + 0x5c ]
mov ebx [ esi + 0x60 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] ecx
mov eax ecx
mov [ esp + 0x18 ] edx
mov ecx edx
jmp r-xdata
cmp eax 0xc
je r-xdata
push ebp
push rw-data
call sub_451c22
lea esi [ esp + 0x50 ]
call sub_4092c0
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x18
retn 0x34
mov edx [ esp + 0x2c ]
jmp [ edx * 4 + jump_table_47b930 ]
cmp [ esp + 0x2c ] 0x1d
ja r-xdata
mov [ edi + 0x8a ] 0x50
mov cx [ rw-data ]
mov [ edi + 0x7e ] cx
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_45126c
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_451191
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_4515ab
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_451500
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_45145c
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_4510b3
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_450fb3
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_450e7d
jmp r-xdata
sub esp 0x10
lea eax [ esp + 0x60 ]
mov ebx esp
call sub_40bd50
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x50 ]
push edx
mov edx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x50 ]
push edx
push eax
push ecx
push ebp
push edi
push esi
call sub_46f770
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
push ebp
push edi
push esi
call sub_450db4
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
push ebp
push edi
push esi
call sub_450d00
jmp r-xdata
lea ecx [ esp + 0x50 ]
call sub_40c760
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x48 ]
push eax
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x3c ]
push ebx
push edx
push eax
push ecx
push ebp
push edi
push esi
call sub_4412ae
jmp r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
push edx
push eax
push ebp
push edi
push esi
call sub_450c09
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
push ebp
push edi
push esi
call sub_450b20
jmp r-xdata
mov eax [ esp + 0x30 ]
push eax
push ebp
push edi
push esi
call sub_4411e2
jmp r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
push ecx
push edx
push eax
push ebp
push edi
push esi
call sub_448602
jmp r-xdata
mov ecx [ esp + 0x34 ]
push ecx
push edi
push esi
call sub_448014
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x38 ]
push eax
push ecx
push edx
push ebp
push edi
push esi
call sub_44849c
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
push ebp
push edi
push esi
call sub_4509d1
jmp r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
push ebp
push edi
call sub_448358
jmp r-xdata
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
push edx
mov edx [ esp + 0x40 ]
push eax
mov eax [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x40 ]
push edx
push eax
push ecx
push ebp
push edi
push esi
call sub_440ee0
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_451670
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_4516f9
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_4513c9
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_451330
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push ebp
push edi
push esi
call sub_4507e7
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
push ebp
push edi
call sub_4480f2
jmp r-xdata
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x48 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ebx
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
push edi
push esi
call sub_47b0c1
mov al [ esp + 0x4c ]
mov dl [ esp + 0x2c ]
mov [ edi + 0x88 ] dl
mov [ edi + 0x89 ] al
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] ebp
test al 0x1
jne r-xdata
mov edx [ esp + 0x40 ]
mov ecx [ esp + 0x38 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x4c ]
mov eax ebx
mov ebx [ esp + 0x3c ]
and edx 0x2
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] edx
jne r-xdata
test al al
jne r-xdata
push ebp
push rw-data
call sub_451c22
cmp [ esp + 0x2c ] 0xb
lea esi [ esp + 0x50 ]
jne r-xdata
test [ esp + 0x4c ] 0x4
jne r-xdata
lea ebx [ esi + 0x6c ]
push ebx
call sub_437bfd
test al al
je r-xdata
call sub_4092c0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x34
mov ecx [ esp + 0x30 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
or eax 0xffffffff
cmp [ esp + 0x3c ] eax
je r-xdata
mov edx [ esi + 0x88 ]
mov eax [ esi + 0x84 ]
mov ecx [ esi + 0x80 ]
push 0x0
push edx
mov edx [ esi + 0x7c ]
push eax
push ecx
push edx
push ebx
push edi
push esi
call sub_441561
cmp [ esi + 0x7c ] 0x55
jne r-xdata
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x34
cmp [ esi + 0x18c ] 0x0
je r-xdata
push 0x0
push edi
push esi
call sub_4336c7
mov eax [ edi ]
push eax
call [ GetDC@IAT ]
mov ecx [ edi ]
mov ebx eax
xor eax eax
push eax
push eax
push 0x31
push ecx
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
call [ SendMessageW@IAT ]
push eax
push ebx
call [ SelectObject@IAT ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x30 ]
push edx
push eax
push ebx
call sub_43609c
mov ecx [ esp + 0x40 ]
add esp 0xc
push ecx
push ebx
call [ SelectObject@IAT ]
mov edx [ edi ]
push ebx
push edx
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x2c ]
add eax 0xffffffe9
cmp eax 0x3
ja r-xdata
cmp [ esp + 0x40 ] eax
jne r-xdata
cmp [ esi + 0x80 ] 0x190
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x184 ] 0xffffffff
je r-xdata
or eax 0xffffffff
cmp [ esp + 0x40 ] eax
jne r-xdata
jmp [ eax * 4 + jump_table_47b9a8 ]
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov esi [ esi + 0x54 ]
cmp esi 0xffffffff
je r-xdata
push eax
push ebp
call sub_449063
mov cl [ esi + 0x180 ]
mov [ edi + 0x8b ] cl
mov al [ esi + 0x184 ]
mov [ edi + 0x8b ] al
jmp r-xdata
cmp [ esp + 0x3c ] eax
jne r-xdata
cmp [ esi + 0x64 ] eax
je r-xdata
mov ecx [ esp + 0x1c ]
jmp r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
add edx 0x4
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add edx 0xc
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] edx
jmp r-xdata
mov ecx [ esp + 0x1c ]
add ecx 0x8
cmp [ esi + 0x88 ] 0x2
je r-xdata
lea esi [ esp + 0x50 ]
call sub_4092c0
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x34
push esi
push ebp
call sub_448daf
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x60 ]
mov eax [ esi + 0x5c ]
push 0x1
push ecx
mov ecx [ esi + 0x58 ]
push edx
mov edx [ edi ]
push eax
push ecx
push edx
call [ __import_lookup_table_10(USER32:MoveWindow) ]
cmp [ esi + 0x60 ] eax
je r-xdata
mov edx [ esp + 0x44 ]
add edx 0x8
mov [ esi + 0x64 ] edx
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x48 ]
add eax 0x8
mov [ esi + 0x60 ] eax
cmp [ rw-data ] 0x2
je r-xdata
sub_47b9b8
push ebx
mov ebx [ esp + 0x18 ]
push edi
test ebx ebx
je r-xdata
pop edi
mov eax 0x1
pop ebx
retn 0x14
mov edi r--data
call sub_40e6d0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push ecx
push edx
push ebx
push 0x3
push eax
call sub_479921
pop edi
pop ebx
retn 0x14
sub_47b9f7
sub esp 0x14
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push esi
mov esi [ esp + 0x1c ]
push edi
xor edi edi
mov [ esp + 0x8 ] edi
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x14 ] edi
cmp eax edi
je r-xdata
push eax
push ecx
push edx
lea ecx [ esp + 0x14 ]
push ecx
push 0x4
cmp [ eax + 0x8 ] edi
jbe r-xdata
mov edi [ eax + 0x4 ]
mov edi [ edi ]
cmp [ edi + 0x8 ] 0x8
jne r-xdata
push eax
push ecx
push edx
lea eax [ esp + 0x14 ]
push eax
push 0x8
jmp r-xdata
push esi
call sub_479921
lea esi [ esp + 0x8 ]
mov edi eax
call sub_4092c0
mov eax edi
pop edi
pop esi
add esp 0x14
retn 0x10
sub_47ba63
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax + 0x8 ]
dec ecx
push edi
cmp ecx 0x3
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ ecx * 4 + jump_table_47bb1b ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
push ecx
push 0x0
push 0x0
push 0x0
push eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edi [ eax ]
push edx
push 0x0
push 0x0
push ecx
call sub_453081
push eax
push edi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
push eax
push 0x0
push ecx
call sub_453081
push eax
push edi
call sub_453081
push eax
push ebx
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0xc ]
mov edx [ eax ]
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push eax
push ecx
mov [ esp + 0x14 ] edx
call sub_453081
push eax
push edi
call sub_453081
push eax
push ebx
call sub_453081
mov ecx [ esp + 0x18 ]
push eax
push ecx
call sub_453081
push eax
push esi
call sub_47a999
sub_47bb2b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
mov edx [ ebx + 0x8 ]
or ecx 0xffffffff
push esi
xor esi esi
push edi
xor edi edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x3c ] esi
mov [ esp + 0x10 ] esi
cmp eax 0x15
jne r-xdata
cmp eax 0x1d
ja r-xdata
test edx edx
je r-xdata
lea eax [ esi + 0x6 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
movzx edx [ eax + sub_47be0f ]
jmp [ edx * 4 + jump_table_47bddb ]
mov esi [ ebp + 0x14 ]
call sub_4092c0
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x1
mov [ esi ] edi
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edi
push 0x2
add eax ecx
call sub_4040e0
lea esi [ esp + 0x30 ]
call sub_4092c0
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ esi + 0x5 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
call sub_40c760
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
push eax
mov [ esp + 0x14 ] 0x7
xor esi esi
call sub_453081
mov edi eax
call sub_40fff0
mov edi eax
jmp r-xdata
mov [ esp + 0x10 ] 0x7
jmp r-xdata
mov [ esp + 0x10 ] 0x7
or [ esp + 0x10 ] 0x5
or [ esp + 0x10 ] 0x4
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
push eax
xor esi esi
call sub_453081
mov edi eax
call sub_40fff0
mov edi eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x4 ]
push eax
lea ebx [ esp + 0x34 ]
mov [ esp + 0x14 ] 0x5
mov esi 0x1
call sub_409210
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx ]
push eax
call sub_453081
mov edi eax
call sub_40fff0
mov ebx [ ebp + 0x10 ]
mov edi eax
jmp r-xdata
mov [ esp + 0x10 ] 0x7
or [ esp + 0x10 ] 0x5
or [ esp + 0x10 ] 0x4
mov esi ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x10 ] 0x7
call sub_40c760
push eax
lea ecx [ esp + 0x48 ]
push r--data
push ecx
call sub_41353a
add esp 0xc
lea edi [ esp + 0x44 ]
call sub_40fff0
mov edi eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx ]
mov [ esp + 0x10 ] 0x1
lea eax [ esi + 0x4 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_40c760
mov [ esp + 0x1c ] eax
xor esi esi
lea eax [ esi + 0x3 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
call sub_40c760
mov [ esp + 0x20 ] eax
lea eax [ esi + 0x2 ]
cmp [ esp + 0x14 ] eax
jbe r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_40c760
mov [ esp + 0x24 ] eax
lea edx [ esi + 0x1 ]
cmp [ esp + 0x14 ] edx
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
call sub_40c760
mov [ esp + 0x28 ] eax
sub esp 0x10
lea eax [ esp + 0x40 ]
mov ebx esp
call sub_40bd50
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x44 ]
push ecx
mov ecx [ esp + 0x4c ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edi
push edx
call sub_47b1d0
mov esi [ ebp + 0x14 ]
mov ebx eax
call sub_4092c0
mov ecx esi
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
call sub_40c760
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + esi * 4 + 0x4 ]
call sub_40c760
mov [ esp + 0x2c ] eax
cmp [ ebp + 0xc ] 0x1d
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x1
add eax ecx
call sub_4040e0
lea esi [ esp + 0x30 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edi
call sub_4112ef
add esp 0x4
sub_47be0f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] eax
add eax [ edx ]
add al 0x5
push es
or al 0x5
add eax 0x30704
pop es
or [ ecx ] cl
or cl [ edx ]
or cl [ edx ]
add eax [ eax ]
or ecx [ ebx - 0x74f7dbbc ]
push esp
and al 0x4
push eax
push edx
push 0x1d
push ecx
call sub_47bb2b
retn 0x8
sub_47c08e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push eax
push rw-data
call sub_4340b2
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov ecx [ ebx + 0x8 ]
mov edi [ edx ]
mov [ esp + 0x20 ] eax
mov eax ecx
cmp eax 0xfffffe6e
ja r-xdata
cmp eax 0xfffffff0
ja r-xdata
je r-xdata
cmp eax 0xfffffff4
je r-xdata
je r-xdata
mov ecx [ ebx ]
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x9
push 0x110a
push ecx
call esi
test eax eax
je r-xdata
cmp eax 0xfffffdd9
ja r-xdata
mov eax [ ebx ]
push eax
push rw-data
call sub_4421c1
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffb
je r-xdata
call [ ReleaseCapture@IAT ]
jmp r-xdata
add eax 0x140
cmp eax 0xd4
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
push 0x4e
push ecx
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x50 ]
push edx
push 0x0
mov [ esp + 0x5c ] eax
mov eax [ ebx ]
push 0x113e
push eax
mov [ esp + 0x60 ] 0x4
call esi
test eax eax
je r-xdata
add eax 0x226
cmp eax 0x8a
ja r-xdata
je r-xdata
mov edi [ rw-data ]
mov ecx [ edi + eax * 4 ]
mov eax [ ecx ]
mov cl [ eax + 0x88 ]
cmp cl 0x10
je r-xdata
push 0x1
push edi
push rw-data
mov [ esp + 0x1f ] 0x0
call sub_456354
lea edx [ esp + 0x18 ]
push edx
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov edx [ ebx ]
push edx
push rw-data
call sub_4421c1
mov esi eax
mov [ esp + 0x14 ] esi
cmp esi 0xffffffff
jne r-xdata
cmp eax 0xfffffffe
jne r-xdata
movzx eax [ eax + lookup_table_47ca4e ]
jmp [ eax * 4 + jump_table_47ca3e ]
mov ecx [ ebx + 0x34 ]
cmp ecx [ ebx + 0x5c ]
je r-xdata
movzx ecx [ eax + lookup_table_47c9b2 ]
jmp [ ecx * 4 + jump_table_47c99e ]
mov edx [ ebx ]
push 0x0
push 0x0
push 0x130b
push edx
call [ SendMessageW@IAT ]
push eax
add eax 0x2f7
cmp eax 0xd
ja r-xdata
mov ecx [ ebx + 0xc ]
sub ecx 0x1
je r-xdata
cmp cl 0x13
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov al [ eax + 0x88 ]
mov [ esp + 0x24 ] esi
cmp al 0x10
je r-xdata
mov eax [ ebx ]
push eax
call [ __import_lookup_table_10(USER32:GetParent) ]
push eax
push rw-data
call sub_4421c1
mov esi eax
mov [ esp + 0x14 ] esi
cmp esi 0xffffffff
je r-xdata
push 0x1
push edi
push rw-data
call sub_456354
lea edx [ esp + 0x18 ]
push edx
call [ __import_lookup_table_10(USER32:GetCursorPos) ]
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ __import_lookup_table_10(USER32:ScreenToClient) ]
mov edx [ ebx ]
push edx
push rw-data
call sub_4421c1
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebx ]
push 0x1
push 0x0
push ecx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
jmp r-xdata
mov esi [ ebx + 0x4 ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x24 ]
push eax
push esi
push rw-data
call sub_44213b
test al al
je r-xdata
mov edx [ rw-data ]
xor esi esi
push esi
push esi
push esi
push edx
call [ __import_lookup_table_2(COMCTL32:ImageList_SetDragCursorImage) ]
mov eax [ rw-data ]
push 0xfffffff0
push 0xfffffff8
push esi
push eax
call [ __import_lookup_table_2(COMCTL32:ImageList_BeginDrag) ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ __import_lookup_table_10(USER32:SetCapture) ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x34 ] esi
lea esi [ esp + 0x28 ]
mov [ rw-data ] edi
mov [ esp + 0x30 ] 0x1
call sub_4092c0
mov [ esp + 0x28 ] edi
mov edi r--data
lea esi [ esp + 0x3c ]
mov [ esp + 0x30 ] 0x1
call sub_401b70
mov eax 0x2
lea ecx [ eax - 0x1 ]
lea edx [ esp + 0x28 ]
call sub_4019e0
mov ecx esi
call sub_402620
mov edx [ ebx ]
lea esi [ ebx + 0x20 ]
push esi
push edx
call [ ClientToScreen@IAT ]
mov eax [ ebx + 0x24 ]
mov ecx [ esi ]
push eax
push ecx
push 0x0
call [ __import_lookup_table_2(COMCTL32:ImageList_DragEnter) ]
lea esi [ esp + 0x28 ]
call sub_4092c0
jmp r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1000
je r-xdata
mov edi [ __import_lookup_table_10(USER32:GetKeyState) ]
push 0x11
call edi
test ax ax
jge r-xdata
mov esi [ ebx ]
push 0xfffffff0
push esi
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x100
je r-xdata
cmp [ edi + 0x17c ] 0x0
je r-xdata
movzx eax [ eax + lookup_table_47c98e ]
jmp [ eax * 4 + jump_table_47c97a ]
pop edi
pop esi
mov eax 0x20
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub ecx 0x10000
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x28 ]
push edx
push 0x0
mov [ esp + 0x30 ] eax
mov eax [ ebx ]
push 0x1111
push eax
mov [ esp + 0x3c ] ecx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov [ esp + 0x13 ] 0x1
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
mov al [ eax + 0x88 ]
cmp al 0x10
jb r-xdata
mov ecx [ rw-data ]
mov edi [ esp + 0x14 ]
mov edx [ ecx + edi * 4 ]
mov eax [ edx ]
mov cx [ ebx + 0x10 ]
mov [ eax + 0x8e ] cx
mov edx [ ebx + 0x4 ]
push 0x0
push edx
call sub_461f2e
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x24 ] 0x0
jbe r-xdata
cmp eax 0x1
jmp r-xdata
push 0x9
call edi
test ax ax
jge r-xdata
cmp [ ebx + 0xc ] 0x20
jne r-xdata
mov esi [ rw-data ]
mov eax 0x3
cmp esi eax
jl r-xdata
mov [ edi + 0x18d ] 0x1
jmp r-xdata
cmp [ edi + 0x18d ] 0x0
mov [ edi + 0x18e ] 0x1
jne r-xdata
cmp [ edi + 0x18e ] 0x1
jne r-xdata
push ecx
mov ecx [ ebx + 0x4 ]
push ecx
jmp r-xdata
cmp [ eax + 0x44 ] 0xfe000000
mov [ esp + 0x13 ] cl
jne r-xdata
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ ClientToScreen@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebx ]
lea ecx [ esp + 0x50 ]
push ecx
push 0x0
push 0x113e
push edx
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] 0x4
call [ SendMessageW@IAT ]
test [ esp + 0x30 ] 0x46
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x3c ]
push eax
push 0x0
mov [ esp + 0x44 ] ecx
mov ecx [ ebx ]
push 0x1012
push ecx
mov [ esp + 0x50 ] edx
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
jle r-xdata
cmp al 0x11
jbe r-xdata
mov [ rw-data ] esi
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
add ecx 0x20
push ecx
mov esi rw-data
call sub_40df50
mov edx [ rw-data ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x90 ]
mov [ rw-data ] dl
mov eax [ ebx + 0x10 ]
mov ecx [ ebx ]
push j_sub_47de39
push eax
push 0x1030
push ecx
call [ SendMessageW@IAT ]
jmp r-xdata
je r-xdata
mov edx [ ebx ]
push 0x0
push 0x0
push 0x130b
push edx
call [ SendMessageW@IAT ]
push 0x10
mov esi eax
call edi
test ax ax
jge r-xdata
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x9
push 0x110a
push esi
call edi
test eax eax
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
mov [ edi + 0x18e ] 0x0
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
push ecx
push edx
jmp r-xdata
mov [ edi + 0x18e ] 0x0
mov [ edi + 0x18d ] 0x0
jmp r-xdata
mov eax [ ebx + 0x4 ]
push ecx
push eax
call sub_461f2e
call sub_461f2e
mov ecx [ ebx + 0x2c ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x24 ]
push eax
push ecx
push rw-data
call sub_44213b
test al al
je r-xdata
mov [ esp + 0x13 ] 0x1
mov edx [ edi ]
mov ecx [ esp + 0x1c ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push ecx
push edx
push 0x80
push eax
call [ TrackPopupMenuEx@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esp + 0x74 ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
push edx
push rw-data
call sub_44213b
test al al
je r-xdata
mov ecx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ ClientToScreen@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov esi [ SendMessageW@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
push 0x0
mov [ esp + 0x30 ] edx
mov edx [ ebx ]
push 0x1111
push edx
mov [ esp + 0x3c ] eax
call esi
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov edx [ esp + 0x74 ]
push 0x0
push edx
jmp r-xdata
inc esi
push esi
jmp r-xdata
dec esi
push esi
jmp r-xdata
lea ecx [ esp + 0x50 ]
push ecx
push 0x0
push 0x113e
push esi
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] 0x4
call edi
test eax eax
mov ecx [ edx + eax * 4 ]
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ esp + 0x14 ]
mov eax [ edi + esi * 4 ]
mov edx [ eax ]
mov eax [ edx + 0x30 ]
push 0xfffffff0
push eax
call [ __import_lookup_table_10(USER32:GetWindowLongW) ]
test eax 0x8000000
jne r-xdata
mov esi [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov edx [ edi ]
mov ecx [ esp + 0x1c ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push ecx
push edx
push 0x0
push eax
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
lea edx [ esp + 0x78 ]
push edx
push 0x0
mov [ esp + 0x84 ] eax
mov eax [ ebx ]
push 0x104b
push eax
mov [ esp + 0x88 ] 0x4
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx ]
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push 0x0
push 0x113e
push ecx
mov [ esp + 0x60 ] 0xc
mov [ esp + 0x6c ] 0xf000
call esi
test [ esp + 0x30 ] 0x46
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov esi [ SendMessageW@IAT ]
lea eax [ esp + 0x3c ]
push eax
push 0x0
mov [ esp + 0x44 ] ecx
mov ecx [ ebx ]
push 0x1012
push ecx
mov [ esp + 0x50 ] edx
call esi
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
inc eax
cmp eax esi
jle r-xdata
mov ecx [ ecx ]
movzx ecx [ ecx + 0x8b ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
test [ ebx + 0x28 ] 0x11
mov ecx [ rw-data ]
je r-xdata
test [ esp + 0x44 ] 0xe
je r-xdata
mov edx [ ebx ]
push 0x0
push 0x9
push 0x110b
push edx
call esi
mov eax [ esp + 0x34 ]
mov ecx [ ebx ]
push eax
push 0x9
push 0x110b
push ecx
call esi
jmp r-xdata
lea edx [ esp + 0x78 ]
push edx
push 0x0
mov [ esp + 0x84 ] eax
mov eax [ ebx ]
push 0x104b
push eax
mov [ esp + 0x88 ] 0x4
call esi
test [ esp + 0x44 ] 0xe
je r-xdata
jmp r-xdata
cmp eax esi
jg r-xdata
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
mov eax [ eax + 0x48 ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx + esi * 4 ]
mov eax [ edx ]
cmp [ eax + 0x88 ] 0x14
jne r-xdata
mov eax [ esp + 0x98 ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
push eax
push rw-data
call sub_44213b
test al al
je r-xdata
mov ecx [ esp + 0x98 ]
push 0x0
push ecx
jmp r-xdata
mov edx [ edx + eax * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0x50 ]
push 0x4f
push ecx
lea edx [ ebx + 0x10 ]
push edx
call sub_41326a
add esp 0xc
xor eax eax
mov [ ebx + 0xae ] ax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx + esi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x44 ]
test eax eax
jl r-xdata
mov [ ebx + 0x30 ] eax
mov ecx [ rw-data ]
mov esi [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov edx [ eax ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebx + 0x34 ] eax
test [ ebx + 0x24 ] 0x1
je r-xdata
sub_47cb23
push ecx
cmp [ esp + 0x10 ] 0x0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
mov eax [ edi + 0x16c ]
lea ebp [ edi + 0x16c ]
mov [ esp + 0x18 ] eax
je r-xdata
push edi
call sub_4722d9
mov [ esp + 0x1c ] eax
xor eax eax
push esi
mov ecx edi
mov [ edi + 0x454 ] eax
mov [ edi + 0xf8 ] eax
call sub_409560
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
lea esi [ edx + edi + 0x4 ]
mov eax esi
call sub_404110
mov al [ eax + 0x10 ]
mov [ esp + 0x24 ] al
test ebx ebx
je r-xdata
push esi
call sub_46e779
mov eax [ esp + 0x1c ]
push eax
push edi
call sub_472224
cmp [ esp + 0x20 ] 0x0
je r-xdata
test al al
je r-xdata
mov esi [ esp + 0x18 ]
cmp esi [ ebp ]
jae r-xdata
push rw-data
call sub_46e727
mov esi ebx
call sub_4092c0
mov [ ebx + 0x8 ] 0x1
mov [ ebx ] 0x0
mov eax esi
call sub_404110
push eax
call sub_409210
jmp r-xdata
mov al [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edi ebp
call sub_40c8a0
cmp esi [ ebp ]
jb r-xdata
sub_47cbf0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
push esi
push edi
lea edi [ esp + 0x60 ]
mov ebx ecx
call sub_40d4c0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push eax
call sub_453063
mov ecx [ esi + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x4 ]
push eax
call sub_453063
lea ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] eax
xor edi edi
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] 0xffffffff
call sub_40c060
cmp [ esi + 0x8 ] 0x3
jb r-xdata
cmp [ esi + 0x8 ] 0x4
jb r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov edi eax
test edi edi
jl r-xdata
mov eax [ esp + 0x28 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40c760
jmp r-xdata
xor edi edi
cmp edi 0x4
jle r-xdata
mov ecx [ esp + 0x14 ]
dec eax
push ecx
lea edx [ esp + 0x18 ]
mov [ esp + 0x2c ] eax
push edx
lea eax [ esp + 0x68 ]
push eax
mov [ esp + 0x38 ] 0xffffffff
call sub_46865b
xor esi esi
cmp [ esp + 0x14 ] esi
je r-xdata
mov eax 0x1
cmp eax 0x1
jge r-xdata
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x64 ]
push edx
call sub_4602eb
cmp edi esi
jne r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x2
add eax ebx
call sub_4040e0
mov eax [ ebx ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
inc edx
push edx
add eax ebx
call sub_404120
jmp r-xdata
cmp edi 0x1
jne r-xdata
push esi
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_44ca28
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_402620
lea edi [ esp + 0x60 ]
call sub_401360
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x2
jne r-xdata
push esi
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x68 ]
push eax
call sub_44ca28
mov edi eax
mov [ esp + 0x24 ] edi
cmp edi esi
jne r-xdata
call sub_4092c0
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x1
jmp r-xdata
call sub_4092c0
mov [ esi ] 0x1
mov [ esi + 0x8 ] 0x1
jmp r-xdata
cmp edi 0x3
jne r-xdata
push esi
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x68 ]
push edx
call sub_44ca28
mov esi eax
mov [ esp + 0x24 ] esi
test esi esi
jne r-xdata
cmp edi 0x2
mov eax [ ebp + 0xc ]
jl r-xdata
mov esi [ ebp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
add eax ebx
call sub_4040e0
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov eax [ ebp + 0xc ]
push esi
push 0x1
call sub_40e7e0
xor edi edi
add esp 0x8
mov [ esp + 0x14 ] edi
test esi esi
jle r-xdata
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push 0x1
add eax ebx
call sub_4040e0
jmp r-xdata
mov [ esp + 0x10 ] esi
push edi
lea edx [ edi - 0x1 ]
mov [ esp + 0x10 ] 0x1
push edx
jmp r-xdata
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x5c ] esi
jmp r-xdata
mov edi [ esp + 0x1c ]
cmp edi esi
jne r-xdata
xor ecx ecx
cmp eax 0x2
setge cl
mov [ esp + 0x10 ] ecx
cmp ecx eax
jae r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x0
inc ecx
push ecx
add eax ebx
call sub_404120
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x28 ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push esi
inc edx
push edx
add eax ebx
call sub_404120
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
push eax
push 0x1
push esi
push ecx
call sub_40d030
add esp 0x10
lea edx [ esp + 0x30 ]
mov esi eax
mov eax [ esp + 0x10 ]
push edx
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_46855f
lea edi [ esp + 0x30 ]
call sub_40e640
mov eax [ esp + 0x10 ]
mov ecx 0x1
add [ esp + 0x14 ] ecx
add eax ecx
xor esi esi
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x24 ]
jb r-xdata
push 0x1
call sub_40e7e0
add esp 0x8
mov [ esp + 0x14 ] esi
cmp [ esp + 0x10 ] edi
jae r-xdata
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_4685d4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push edi
push 0x1
call sub_40e7e0
add esp 0x8
xor ebx ebx
cmp edi esi
jbe r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
push esi
push 0x1
add eax ebx
call sub_4040e0
jmp r-xdata
push 0x1
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_44ca28
mov [ esp + 0x24 ] eax
cmp eax esi
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
push edi
push 0x1
push 0x0
push ecx
call sub_40d030
add esp 0x10
lea edx [ esp + 0x30 ]
push edx
mov esi eax
push edi
lea eax [ esp + 0x68 ]
push eax
call sub_46855f
lea edi [ esp + 0x30 ]
call sub_40e640
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov edi [ esp + 0x48 ]
cmp edi esi
jne r-xdata
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
lea ecx [ esp + 0x14 ]
call sub_410a20
jmp r-xdata
lea edx [ esp + 0x30 ]
push edx
push ecx
lea eax [ esp + 0x68 ]
push eax
call sub_46855f
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x14 ]
call sub_40d970
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x24 ]
jb r-xdata
mov edi [ esp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push 0x1
call sub_40e7e0
add esp 0x8
test edi edi
jbe r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push esi
push 0x1
add eax ebx
call sub_4040e0
jmp r-xdata
xor esi esi
push esi
push 0x1
lea eax [ esp + 0x58 ]
call sub_40e7e0
xor edi edi
add esp 0x8
mov [ esp + 0x10 ] edi
test esi esi
jbe r-xdata
mov edx [ ebp + 0xc ]
push ebx
push 0x1
push esi
push edx
call sub_40d030
mov ecx [ esp + 0x28 ]
mov edi [ ecx + ebx * 4 ]
add esp 0x10
mov esi eax
call sub_40e640
inc ebx
cmp ebx [ esp + 0x1c ]
jb r-xdata
mov ecx [ esp + 0x10 ]
xor esi esi
jmp r-xdata
lea esi [ esp + 0x50 ]
call sub_4092c0
lea ecx [ esp + 0x40 ]
call sub_410ae0
mov ecx [ ebp + 0xc ]
push esi
push 0x1
push 0x0
push ecx
call sub_40d030
mov edx [ esp + 0x54 ]
mov ecx [ edx + esi * 4 ]
add esp 0x10
push ecx
mov ebx eax
call sub_409210
inc esi
cmp esi edi
jb r-xdata
lea edx [ esp + 0x50 ]
push edx
lea esi [ esp + 0x44 ]
call sub_40be00
jmp r-xdata
jmp r-xdata
xor esi esi
jmp r-xdata
push edi
push 0x1
lea edx [ esp + 0x58 ]
push 0x0
push edx
call sub_40d030
mov ecx [ esp + 0x28 ]
mov edi [ ecx + edi * 4 ]
add esp 0x10
mov esi eax
call sub_40e640
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x1c ]
jb r-xdata
mov edi [ esp + 0x10 ]
sub_47d10e
sub esp 0x2c
push ebx
mov ebx [ esp + 0x34 ]
push ebp
mov ebp [ esp + 0x3c ]
mov ecx [ ebp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x48 ]
mov eax [ edi ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
lea esi [ esp + 0x28 ]
mov [ esp + 0x48 ] eax
call sub_40d500
mov edx [ edi ]
mov eax [ ebp + 0x4 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ecx ]
push esi
push edx
call sub_45efe7
lea eax [ esp + 0x44 ]
push eax
xor esi esi
push ebp
mov eax edi
push ebx
lea edi [ esp + 0x24 ]
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
call sub_409110
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_410ae0
lea esi [ esp + 0x28 ]
call sub_401330
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x10
mov eax [ esp + 0x4c ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x4c ]
push eax
mov eax [ esp + 0x34 ]
push edi
push edx
push eax
lea ecx [ ebx + 0x15c ]
push ecx
call sub_45427d
cmp eax 0x6
jne r-xdata
cmp eax 0x5
je r-xdata
mov edx [ esp + 0x48 ]
push edx
push 0x85
cmp eax 0x7
jne r-xdata
mov edx [ ebx ]
mov ecx [ esp + 0x40 ]
mov eax [ edx + 0x4 ]
push esi
push ecx
add eax ebx
call sub_4040e0
mov eax [ esp + 0x14 ]
mov ecx [ ebx ]
push esi
push eax
mov eax [ ecx + 0x4 ]
add eax ebx
call sub_404120
lea ecx [ esp + 0x18 ]
call sub_410ae0
lea esi [ esp + 0x28 ]
call sub_401330
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2c
retn 0x10
mov eax [ esp + 0x48 ]
push eax
push 0x70
jmp r-xdata
push ebx
call sub_45e62e
sub_47d228
sub esp 0x38
push ebx
mov ebx [ esp + 0x4c ]
push esi
xor esi esi
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
call sub_40c060
push r--data
lea eax [ esp + 0x24 ]
call sub_4021e0
mov edi [ esp + 0x50 ]
lea eax [ esp + 0x20 ]
call sub_40d330
cmp ebx esi
je r-xdata
mov edi [ esp + 0x20 ]
lea ebx [ esp + 0x30 ]
call sub_40d420
push ebx
lea esi [ esp + 0x14 ]
call sub_40be00
mov esi ebx
call sub_4092c0
mov edi r--data
lea ebx [ esp + 0x30 ]
call sub_40d420
push ebx
lea esi [ esp + 0x14 ]
call sub_40be00
mov esi ebx
call sub_4092c0
mov edx [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_46b39a
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_402620
lea ecx [ esp + 0x10 ]
call sub_410ae0
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x38
retn 0x10
mov edi r--data
lea eax [ esp + 0x20 ]
call sub_40d330
mov edi ebx
lea eax [ esp + 0x20 ]
call sub_40d330
sub_47d2f8
sub esp 0xc0
push ebx
push ebp
mov ebp [ esp + 0xd4 ]
push esi
push edi
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0xe0 ]
lea edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0xe0 ]
lea eax [ esp + 0x44 ]
push eax
push ecx
push edx
call sub_4646a2
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0xc0
retn 0x14
xor edi edi
cmp [ ebp + 0x8 ] 0x2
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ esp + 0xe4 ]
sub eax ebx
cmp eax [ esp + 0x24 ]
jl r-xdata
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x4 ]
push esi
call sub_442fa3
test al al
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_410ae0
cmp eax [ esp + 0x20 ]
jg r-xdata
push edi
push esi
call sub_4354dd
cmp eax 0x1
jne r-xdata
mov edi [ esp + 0xd8 ]
lea esi [ esp + 0x10 ]
call sub_401b70
mov edi r--data
mov eax esi
call sub_40d330
cmp ebx [ ebp + 0x8 ]
jae r-xdata
mov eax esi
lea ebx [ esp + 0x10 ]
call sub_40bd50
push edi
push 0x1
push 0x1
push ebx
call sub_40d030
add esp 0x10
push r--data
push eax
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov edi r--data
lea eax [ esp + 0x10 ]
call sub_40d330
mov eax [ esp + 0x14 ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_41171a
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0xe4 ]
push edx
push eax
mov [ ecx ] eax
call sub_411691
add esp 0xc
lea ecx [ esp + 0x10 ]
call sub_402620
lea ecx [ esp + 0x28 ]
call sub_410ae0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc0
retn 0x14
push ebx
push r--data
lea edx [ esp + 0x58 ]
push 0x40
push edx
call sub_4157bb
add esp 0x10
lea edi [ esp + 0x50 ]
lea esi [ esp + 0x40 ]
call sub_401b70
mov edx [ ebp + 0x4 ]
mov edx [ edx + ebx * 4 ]
mov eax 0x1
xor ecx ecx
call sub_4019e0
mov ecx esi
call sub_402620
lea eax [ esp + 0x10 ]
mov edi r--data
cmp ebx [ esp + 0xe4 ]
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
lea ebx [ edi + 0x1 ]
call sub_40d330
lea edi [ esp + 0x50 ]
lea eax [ esp + 0x10 ]
call sub_40d330
inc ebx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov edi r--data
lea ebp [ esp + 0x28 ]
mov [ esp + 0xe4 ] edi
push ebx
push 0x1
push 0x1
push edx
call sub_40d030
add esp 0x10
push eax
lea esi [ esp + 0x2c ]
call sub_40be00
inc ebx
jmp r-xdata
push 0x1
lea edx [ esp + 0x14 ]
push edx
call sub_4354dd
cmp ebx eax
jge r-xdata
sub_47d511
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ edi + 0x4 ]
lea edx [ esp + 0x24 ]
push edx
mov edx [ ecx ]
lea eax [ esp + 0x20 ]
push eax
mov eax [ edx ]
push eax
push rw-data
mov [ rw-data ] 0x1
call sub_4646a2
mov ecx [ esp + 0x14 ]
push ecx
call sub_46e779
xor ebx ebx
cmp [ edi + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] ebx
jle r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push ebx
inc eax
push eax
push rw-data
call sub_47cb23
push rw-data
call sub_46e727
lea ecx [ esp + 0x20 ]
push ecx
call sub_443576
lea esi [ esp + 0x20 ]
mov edi eax
mov [ rw-data ] bl
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ edi + 0x40 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x20 ]
push eax
push ecx
call sub_46b945
mov esi [ edi + 0x4 ]
mov esi [ esi + ebx * 4 + 0x4 ]
mov eax 0x1
mov ecx 0x200
lea edx [ esp + 0x20 ]
call sub_4019e0
add [ esp + 0x10 ] 0x18
inc ebx
cmp ebx [ edi + 0x1c ]
jl r-xdata
xor ebx ebx
sub_47d5f6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
xor eax eax
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
call sub_40c060
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
mov edx [ edi ]
push edx
call sub_43550e
test al al
je r-xdata
push ebx
call sub_45302e
test eax eax
jne r-xdata
mov ecx [ edx ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x1
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
jbe r-xdata
lea ecx [ esp + 0x20 ]
call sub_402620
lea ecx [ esp + 0x40 ]
call sub_410ae0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
push eax
mov eax [ ecx + 0x4 ]
push 0x1
add eax esi
call sub_4040e0
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0x0
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jl r-xdata
mov ecx [ edi + 0x4 ]
call sub_40c760
cmp eax 0x2
mov eax [ esp + 0x18 ]
jl r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jl r-xdata
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jl r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
mov [ esp + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x38 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x3c ] edx
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
push ecx
call eax
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
call [ StringFromIID@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
test eax eax
jl r-xdata
mov edi [ esp + 0xc ]
call sub_40fff0
mov edx [ esp + 0xc ]
push edx
mov edi eax
call [ CoTaskMemFree@IAT ]
push r--data
lea eax [ esp + 0x24 ]
call sub_4021e0
lea eax [ esp + 0x20 ]
call sub_40d330
mov eax [ esp + 0x20 ]
push 0x0
push eax
push ebx
push esi
call sub_47d228
push edi
call sub_4137d3
add esp 0x4
mov eax [ esp + 0x14 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x34 ]
push edx
call [ StringFromCLSID@IAT ]
test eax eax
jne r-xdata
mov edi [ esp + 0xc ]
call sub_40fff0
mov edi eax
mov eax [ esp + 0xc ]
push eax
call [ CoTaskMemFree@IAT ]
test edi edi
je r-xdata
push r--data
lea eax [ esp + 0x24 ]
call sub_4021e0
lea eax [ esp + 0x20 ]
call sub_40d330
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x4 ]
call sub_40c760
sub eax 0x2
je r-xdata
mov ecx [ esp + 0x20 ]
push 0x0
push ecx
sub eax 0x1
je r-xdata
mov eax [ esp + 0x20 ]
push r--data
push eax
jmp r-xdata
sub eax 0x1
je r-xdata
push ebx
push esi
call sub_47d228
mov ecx [ esp + 0x20 ]
push r--data
push ecx
push ebx
push esi
call sub_47d228
push ebx
call sub_45302e
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push r--data
push eax
jmp r-xdata
push edi
call sub_4137d3
add esp 0x4
mov edx [ esp + 0x20 ]
push r--data
push edx
jmp r-xdata
sub_47d874
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] eax
xor eax eax
mov ecx 0x1
push edi
mov edi r--data
lea ebx [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] eax
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] eax
call sub_40e6d0
mov ebx [ ebp + 0xc ]
mov edi r--data
call sub_40e6d0
lea ebx [ esp + 0x28 ]
call sub_40e6d0
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push edx
lea esi [ esp + 0x1c ]
call sub_40be00
mov ebx [ esp + 0xc ]
cmp ebx 0x2
jb r-xdata
lea eax [ esp + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
jmp r-xdata
cmp ebx 0x3
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
jmp r-xdata
call sub_40be00
lea ecx [ esp + 0x38 ]
push ecx
lea esi [ esp + 0x1c ]
call sub_40be00
mov edi [ esp + 0x10 ]
push esi
push edi
call sub_477999
test al al
jne r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x8 ]
call sub_40c760
mov esi eax
dec esi
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
lea ecx [ esp + 0x18 ]
call sub_410ae0
lea esi [ esp + 0x38 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
mov esi [ ebp + 0xc ]
lea edi [ esp + 0x48 ]
call sub_40e640
jmp r-xdata
lea ecx [ esp + 0x48 ]
call sub_40c060
mov eax [ edi + 0x2fc ]
lea ecx [ esp + 0x48 ]
push ecx
push esi
push eax
call sub_461012
test al al
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_402620
sub_47d9ce
sub esp 0x48
push ebx
xor ebx ebx
push ebp
push esi
mov esi ecx
mov eax 0x1
push edi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] ebx
call sub_40c060
mov ebp [ esp + 0x5c ]
mov edi [ esp + 0x60 ]
mov eax [ edi ]
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + eax * 4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x35
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
call sub_46e6b0
mov eax [ edi ]
mov edx [ ebp + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x47
jne r-xdata
cmp ax 0x47
je r-xdata
mov eax [ ecx ]
push eax
lea esi [ esp + 0x3c ]
call sub_40df50
mov esi [ esp + 0x14 ]
dec eax
mov [ edi ] eax
push r--data
lea eax [ esp + 0x3c ]
call sub_4021e0
jmp r-xdata
mov ebx [ esp + 0x64 ]
lea eax [ esp + 0x68 ]
push eax
call sub_409210
inc eax
mov [ edi ] eax
lea eax [ esp + 0x28 ]
push eax
push edi
push ebp
push esi
call sub_473c1b
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
cmp [ edx + 0x8 ] 0x47
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_43550e
test al al
jne r-xdata
mov edi r--data
lea ebx [ esp + 0x18 ]
call sub_40e6d0
mov ebx [ esp + 0x64 ]
call sub_40e6d0
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax ecx
call sub_4040e0
jmp r-xdata
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
lea ecx [ esp + 0x74 ]
push ecx
push esi
call sub_47b9b8
test eax eax
je r-xdata
push r--data
push esi
call sub_45e41b
sub esp 0x10
lea eax [ esp + 0x28 ]
mov ebx esp
call sub_40bd50
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x24 ]
push edx
push edi
push ebp
call sub_47d9ce
lea ecx [ esp + 0x38 ]
mov edi eax
call sub_402620
lea esi [ esp + 0x48 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea ecx [ esp + 0x28 ]
call sub_410ae0
lea esi [ esp + 0x68 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn 0x1c
cmp [ rw-data ] bl
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea esi [ esp + 0x48 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea ecx [ esp + 0x28 ]
call sub_410ae0
lea esi [ esp + 0x68 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn 0x1c
mov ebx [ esp + 0x64 ]
lea ecx [ esp + 0x18 ]
push ecx
call sub_409210
mov edi r--data
lea ebx [ esp + 0x18 ]
call sub_40e6d0
jmp r-xdata
cmp [ esi + 0x480 ] bl
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea esi [ esp + 0x48 ]
call sub_4092c0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea ecx [ esp + 0x28 ]
call sub_410ae0
lea esi [ esp + 0x68 ]
call sub_4092c0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn 0x1c
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ eax + 0x2d ] bl
je r-xdata
mov edx [ ebp + 0x4 ]
mov ecx [ edi ]
mov eax [ edx + ecx * 4 ]
mov edx 0x35
cmp [ eax + 0x8 ] dx
jne r-xdata
lea ecx [ edx + 0x13 ]
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
mov esi [ ebp + 0x4 ]
mov esi [ esi + eax * 4 ]
cmp [ esi + 0x8 ] 0x47
jne r-xdata
mov eax [ edi ]
mov esi [ ebp + 0x4 ]
mov eax [ esi + eax * 4 ]
cmp [ eax + 0x8 ] dx
je r-xdata
inc eax
mov [ edi ] eax
mov esi [ ebp + 0x4 ]
mov eax [ esi + eax * 4 ]
cmp [ eax + 0x8 ] cx
je r-xdata
inc [ edi ]
inc [ edi ]
mov eax [ edi ]
mov esi [ ebp + 0x4 ]
mov eax [ esi + eax * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
sub_47dc78
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
lea ebp [ ebx + 0x488 ]
push ebp
call sub_43550e
test al al
je r-xdata
inc [ esi ]
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa8
push ebx
call sub_45e62e
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push ebp
push edi
push ebx
mov eax esi
call sub_40c300
test eax eax
jne r-xdata
movsx edx [ eax + 0xa ]
push edx
push 0xa5
push ebx
call sub_45e62e
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push ebp
call sub_43550e
test al al
jne r-xdata
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 - 0x4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa5
push ebx
call sub_45e62e
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ebx
call sub_45e62e
sub_47dd3a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
call sub_4092c0
lea eax [ esp + 0x13 ]
xor ebx ebx
push eax
mov [ esi + 0x8 ] 0x1
mov [ esi ] ebx
mov [ esp + 0x18 ] ebx
call sub_46e7ac
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ esp + 0x18 ]
push edx
push eax
push ecx
push edi
call sub_47d2f8
test al al
je r-xdata
push rw-data
call sub_46e727
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
push ebx
mov ebx [ esp + 0x1c ]
mov [ esp + 0x20 ] r--data
call sub_402dd0
push ebx
call sub_4112ef
add esp 0x4
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
lea ecx [ esp + 0x18 ]
call sub_40ed60
push rw-data
call sub_46e727
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x1c
xor ebx ebx
cmp [ ebp + 0x20 ] bl
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
push esi
lea ecx [ esp + 0x20 ]
push ecx
push edi
lea eax [ esp + 0x24 ]
mov [ esp + 0x24 ] 0x0
call sub_409a40
test eax eax
je r-xdata
push edi
call sub_4722d9
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
push ebx
push edi
call sub_472224
lea ecx [ esp + 0x18 ]
call sub_40ed60
push ebx
push edi
call sub_472224
sub_47de39
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x3c
push ebx
push esi
mov esi 0x1
push edi
cmp eax esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
xor edi edi
mov [ esp + 0x14 ] eax
mov [ rw-data ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
cmp [ rw-data ] bl
jbe r-xdata
push esi
lea ecx [ esp + 0x13 ]
push ecx
mov ecx [ rw-data ]
push ebx
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x38 ]
push eax
push ecx
push rw-data
mov [ esp + 0x2b ] bl
call sub_47dd3a
test al al
je r-xdata
cmp edi 0x3
ja r-xdata
lea ecx [ esp + 0x28 ]
call sub_410ae0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
cmp [ rw-data ] esi
je r-xdata
lea edx [ esp + 0x18 ]
push edx
lea esi [ esp + 0x2c ]
call sub_40be00
movzx eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
jmp [ edi * 4 + jump_table_47dfc1 ]
mov edx [ esp + 0x14 ]
mov [ rw-data ] edx
cmp [ esp + 0xf ] bl
je r-xdata
mov esi 0x1
lea esi [ esp + 0x18 ]
call sub_4092c0
mov edx [ ebp + 0x8 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov eax [ ebp + 0xc ]
mov [ esp + 0x18 ] eax
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x18 ] ecx
lea ecx [ esp + 0x38 ]
call sub_40c760
lea ecx [ esp + 0x28 ]
mov edi eax
call sub_410ae0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ esp + 0x20 ] 0x1
sub_47deb5
mov eax [ rw-data ]
lea esi [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
call sub_4092c0
mov ecx [ esp + 0x10 ]
jmp r-xdata
mov [ esp + 0x18 ] ecx
cmp edi 0x3
ja r-xdata
mov esi 0x1
push esi
lea ecx [ esp + 0x13 ]
push ecx
mov ecx [ rw-data ]
push ebx
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x38 ]
push eax
push ecx
push rw-data
mov [ esp + 0x2b ] bl
call sub_47dd3a
test al al
je r-xdata
lea edx [ esp + 0x18 ]
push edx
lea esi [ esp + 0x2c ]
call sub_40be00
movzx eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
jmp [ edi * 4 + jump_table_47dfc1 ]
lea ecx [ esp + 0x28 ]
call sub_410ae0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ rw-data ] esi
je r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov edx [ ebp + 0x8 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov eax [ ebp + 0xc ]
mov [ esp + 0x18 ] eax
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov ecx [ ebp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ rw-data ] edx
cmp [ esp + 0xf ] bl
je r-xdata
mov [ esp + 0x20 ] 0x1
lea ecx [ esp + 0x38 ]
call sub_40c760
lea ecx [ esp + 0x28 ]
mov edi eax
call sub_410ae0
lea esi [ esp + 0x18 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_47dfd1
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x4c
push ebx
push esi
mov esi 0x1
push edi
cmp eax esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x30 ]
mov [ rw-data ] ebx
mov edx [ ecx ]
push eax
push edx
push rw-data
call sub_4646a2
mov eax [ esp + 0x14 ]
cmp eax 0x4
jg r-xdata
xor edi edi
cmp eax ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
lea ecx [ esp + 0x17 ]
push ecx
push ebx
lea edx [ esp + 0x44 ]
push edx
lea ecx [ esp + 0x58 ]
push ecx
push eax
push rw-data
mov [ esp + 0x2f ] bl
call sub_47dd3a
test al al
je r-xdata
lea esp [ esp ]
lea ecx [ esp + 0x48 ]
call sub_410ae0
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
cmp [ rw-data ] esi
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
lea esi [ esp + 0x4c ]
call sub_40be00
inc edi
cmp edi [ esp + 0x14 ]
jl r-xdata
jmp [ edi * 4 + jump_table_47e1e5 ]
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x38 ]
push eax
mov [ rw-data ] edx
call sub_443e34
test al al
je r-xdata
cmp edi 0x3
ja r-xdata
mov esi 0x1
lea esi [ esp + 0x28 ]
call sub_4092c0
mov eax [ ebp + 0x10 ]
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
mov ecx [ ebp + 0x14 ]
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x28 ] ecx
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
mov edx [ ebp + 0x18 ]
mov [ esp + 0x28 ] edx
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_4092c0
mov eax [ ebp + 0x1c ]
cmp [ esp + 0x13 ] bl
je r-xdata
push r--data
lea ecx [ esp + 0x3c ]
push ecx
call sub_453081
push eax
call sub_4115d0
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] 0x7
lea ecx [ esp + 0x38 ]
call sub_40c760
mov edx [ ebp + 0xc ]
lea ecx [ esp + 0x48 ]
mov [ edx ] eax
call sub_410ae0
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ esp + 0x48 ]
call sub_410ae0
lea esi [ esp + 0x28 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_47e1fa
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x18 ]
push edi
push rw-data
call sub_4340b2
mov [ esp + 0x20 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx 0x1
je r-xdata
cmp ebx 0x111
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push esi
push ebp
push ebx
push edi
call [ DefDlgProcW@IAT ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
cmp ebx 0x211
ja r-xdata
je r-xdata
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp ebx 0x233
ja r-xdata
je r-xdata
mov edx ebp
shr edx 0x10
push edx
movzx eax bp
push esi
push eax
push edi
call sub_469681
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
lea ecx [ ebx - 0x1 ]
cmp ecx 0x83
ja r-xdata
push ecx
lea ecx [ esp + 0x28 ]
mov [ esp ] 0x0
push ecx
call sub_442fdf
test al al
je r-xdata
cmp ebx 0x31a
jne r-xdata
je r-xdata
push esi
push ebp
push edi
push eax
call sub_44096a
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
lea eax [ ebx - 0x112 ]
cmp eax 0xf3
ja r-xdata
movzx ecx [ ecx + lookup_table_47e672 ]
jmp [ ecx * 4 + jump_table_47e63a ]
mov eax [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
mov edx [ eax ]
cmp [ edx ] ebx
je r-xdata
push esi
push ebp
push edi
call sub_44782b
push ebp
push edi
call sub_46f2b0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx ebx
sub ecx 0x212
je r-xdata
movzx ecx [ eax + lookup_table_47e72a ]
jmp [ ecx * 4 + jump_table_47e6f6 ]
push esi
push ebp
push edi
call sub_47c08e
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push edi
call sub_46f749
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx esi
shr edx 0x10
movsx eax dx
push eax
movsx ecx si
push ecx
push ebp
push edi
call sub_440b39
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx ebp
shr edx 0x10
push edx
movzx eax bp
push esi
push eax
push edi
call sub_440adf
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push edi
call sub_4409df
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push edi
call sub_447b66
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push esi
push edi
call sub_447a87
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx esi
shr ecx 0x10
movsx edx cx
movsx eax si
push edx
push eax
push edi
call sub_43323e
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push ebp
push edi
call sub_447b15
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx esi
shr ecx 0x10
push ecx
movzx edx si
push edx
push ebp
push edi
call sub_44796b
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov eax esi
shr eax 0x10
push eax
movzx ecx si
push ecx
push ebp
push edi
call sub_447870
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push esi
push ebp
push edi
push eax
call sub_44099c
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
push esi
push ebp
push ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
mov eax [ eax ]
push edi
lea edx [ esp + 0x34 ]
push edx
add eax 0x4
push eax
mov [ esp + 0x3c ] 0x0
call sub_47dfd1
sub eax 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
je r-xdata
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
call sub_440eac
jmp r-xdata
push esi
push ebp
push edi
push eax
call sub_440938
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
sub ecx 0x20
jne r-xdata
push ebp
push edi
call sub_447b4e
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push 0x1
push esi
push ebp
push edi
call sub_45058d
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push 0x6
push esi
push ebp
push edi
call sub_45058d
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push 0x2
push esi
push ebp
push edi
call sub_45058d
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx esi
shr edx 0x10
movsx eax dx
push eax
movsx ecx si
push ecx
push ebp
push edi
call sub_454c69
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx ebp
shr edx 0x10
push 0x1
movsx eax dx
push eax
movzx ecx bp
push ecx
push esi
push edi
call sub_469995
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx ebp
shr edx 0x10
push 0x0
movsx eax dx
push eax
movzx ecx bp
push ecx
push esi
push edi
call sub_469995
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx esi
shr edx 0x10
push ebp
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_46f72b
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx esi
shr edx 0x10
push ebp
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_46f70d
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push 0x0
mov edx esi
shr edx 0x10
push ebp
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_461eb0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push 0x1
mov edx esi
shr edx 0x10
push ebp
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_461eb0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx esi
shr edx 0x10
push ebp
movsx eax dx
movsx ecx si
push eax
push ecx
push edi
call sub_4331d9
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
push edi
push rw-data
call sub_4340b2
cmp eax 0xffffffff
je r-xdata
push esi
push ebp
push edi
push eax
call sub_454c1b
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
sub_47e737
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
add eax [ eax + 0xc060505 ]
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
pop es
or [ ecx ] cl
or al 0xa
or edx [ ecx - 0x75 ]
inc esp
and al 0x14
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_47e1fa
pop ecx
retn 0x10
sub_47e83c
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
mov esi ecx
mov eax [ esi + 0xf0 ]
cmp eax 0xf3c
jl r-xdata
push 0x0
inc eax
lea edx [ esp + 0xb ]
push edx
mov edx [ ebp + 0xc ]
mov [ esi + 0xf0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
push 0x1
push edx
push eax
push ecx
mov [ esp + 0x1f ] 0x0
call sub_453081
push eax
push esi
call sub_47dd3a
test al al
jne r-xdata
push 0xffffffff
push 0x9a
push esi
mov [ rw-data ] 0x0
call sub_45e62e
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
dec [ esi + 0xf0 ]
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0xdead
add eax esi
call sub_4040e0
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
push 0x0
push 0xbeef
add eax esi
call sub_404120
sub_47e8db
sub esp 0x3c
push ebx
mov ebx [ esp + 0x48 ]
push ebp
xor eax eax
push esi
mov ebp 0x1
push edi
mov edi [ esp + 0x58 ]
lea esi [ esp + 0x28 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] eax
call sub_4092c0
lea esi [ esp + 0x18 ]
mov [ esp + 0x30 ] ebp
mov [ esp + 0x28 ] ebp
call sub_4092c0
mov esi 0xb
lea ecx [ esp + 0x38 ]
mov [ esp + 0x20 ] ebp
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x58 ] esi
call sub_40c060
add [ edi ] ebp
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x33
jne r-xdata
cmp [ ecx ] 0x10
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ esp + 0x50 ]
push eax
push 0x9d
push ecx
jmp r-xdata
jmp r-xdata
inc eax
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
movsx ecx [ ecx + 0x8 ]
sub ecx 0x49
je r-xdata
call sub_45e62e
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
push ecx
lea esi [ esp + 0x3c ]
call sub_40df50
add [ edi ] ebp
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x41
jne r-xdata
mov [ esp + 0x58 ] esi
sub ecx ebp
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
mov ecx [ esp + 0x64 ]
lea esi [ esp + 0x40 ]
call sub_40c3e0
cmp [ esp + 0x54 ] 0x0
jne r-xdata
mov esi [ esp + 0x50 ]
push 0xffffffff
lea edx [ esp + 0x1c ]
push edx
push edi
inc eax
push ebx
mov ecx esi
mov [ edi ] eax
call sub_40ab50
test eax eax
jne r-xdata
movsx edx [ eax + 0xa ]
mov eax [ esp + 0x50 ]
push edx
push 0x9d
push eax
jmp r-xdata
mov eax [ eax ]
lea esi [ esp + 0x28 ]
mov [ esp + 0x54 ] eax
call sub_4092c0
mov ecx [ esp + 0x54 ]
add [ edi ] ebp
mov eax [ edi ]
mov [ esp + 0x30 ] ebp
mov [ esp + 0x28 ] ecx
mov [ esp + 0x58 ] 0xc
jmp r-xdata
sub ecx 0x2
je r-xdata
mov ecx [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 - 0x4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x50 ]
push ecx
push 0xa3
push edx
mov eax [ esp + 0x5c ]
mov ecx 0x100
lea edx [ esp + 0x18 ]
call sub_4019e0
mov eax [ esp + 0x58 ]
sub eax 0xb
je r-xdata
push 0xffffffff
push 0x6e
push esi
jmp r-xdata
add [ edi ] ebp
mov eax [ edi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x5
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
mov [ esp + 0x20 ] ebp
mov [ esp + 0x18 ] ebp
mov [ esp + 0x58 ] 0xd
jmp r-xdata
dec eax
mov [ edi ] eax
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x18 ]
call sub_40b910
sub eax ebp
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_402620
lea esi [ esp + 0x18 ]
call sub_4092c0
lea esi [ esp + 0x28 ]
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x10
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x1c ]
push eax
call sub_452bfe
jmp r-xdata
sub eax ebp
jne r-xdata
mov edx eax
mov ecx [ ecx + edx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x50 ]
push edx
push 0x7f
push eax
jmp r-xdata
inc eax
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov edx eax
mov edx [ ecx + edx * 4 ]
cmp [ edx + 0x8 ] 0x33
je r-xdata
mov eax [ edi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x7f
je r-xdata
lea eax [ esp + 0x28 ]
lea esi [ esp + 0x18 ]
call sub_40bf70
jmp r-xdata
sub_47eb5d
sub esp 0x78
push ebx
push ebp
mov ebp [ esp + 0x8c ]
push esi
xor ebx ebx
mov esi 0x1
push edi
mov edi [ esp + 0x8c ]
lea eax [ esp + 0x58 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x17 ] bl
mov [ esp + 0x16 ] bl
mov [ esp + 0x15 ] bl
mov [ esp + 0x24 ] esi
call sub_40dce0
mov ecx [ esp + 0x90 ]
mov eax [ ecx + 0x4 ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] esi
mov [ esp + 0x54 ] ebx
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
mov [ esp + 0x58 ] 0x5
jne r-xdata
mov eax [ ebp ]
sub eax esi
push 0xffffffff
lea edx [ esp + 0x2c ]
mov [ esp + 0x60 ] eax
push edx
lea eax [ esp + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_40ab50
test eax eax
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x6e
jmp r-xdata
lea esi [ esp + 0x48 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
lea esi [ esp + 0x28 ]
call sub_4092c0
lea ecx [ esp + 0x58 ]
push ecx
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x78
retn 0xc
mov [ esp + 0x1c ] ebx
push edi
call sub_45e62e
mov eax [ esp + 0x5c ]
push 0xffffffff
mov [ edi + 0xf4 ] eax
push 0xa0
dec ecx
mov [ edi + 0xf4 ] ecx
mov [ esp + 0x18 ] ebx
mov edx [ esi + 0x4 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov eax [ ebp ]
lea ecx [ eax + 0x1 ]
mov [ ebp ] ecx
call sub_40f2a0
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ eax ]
add eax 0xffffffec
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_47ee91 ]
inc [ esp + 0x1c ]
jmp r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
dec [ esp + 0x1c ]
jmp r-xdata
cmp [ esp + 0x1c ] ebx
jne r-xdata
mov esi [ ebp ]
dec esi
mov [ esp + 0x60 ] esi
cmp [ esp + 0x17 ] bl
je r-xdata
cmp [ esp + 0x16 ] bl
jne r-xdata
lea ebx [ edi + 0x16c ]
lea eax [ esp + 0x58 ]
call sub_40cfe0
cmp [ esp + 0x16 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x17 ] 0x1
cmp [ eax + 0x8 ] bx
jne r-xdata
mov [ ebp ] esi
mov ecx [ esp + 0x24 ]
mov [ ebp ] ecx
jmp r-xdata
cmp [ esp + 0x15 ] bl
jne r-xdata
cmp [ eax ] 0x6
jne r-xdata
lea esi [ esp + 0x48 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
lea esi [ esp + 0x28 ]
call sub_4092c0
lea edx [ esp + 0x58 ]
push edx
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x78
retn 0xc
mov eax [ ebp ]
mov [ esp + 0x16 ] 0x1
mov [ esp + 0x24 ] eax
jmp r-xdata
push 0xffffffff
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
push esi
mov ecx edi
call sub_40ab50
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x2
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x8 ] 0x7f
mov [ esp + 0x15 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x18 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] bx
jne r-xdata
mov edx [ ecx + 0x8 ]
movsx eax [ edx + 0xa ]
push eax
push 0x72
jmp r-xdata
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x38 ]
call sub_40cc10
test al al
jne r-xdata
cmp [ eax ] 0xf
jne r-xdata
mov eax [ ebp ]
mov [ esp + 0x15 ] 0x1
mov [ esp + 0x16 ] 0x1
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x18 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
inc [ esp + 0x18 ]
push 0xffffffff
lea ecx [ esp + 0x4c ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push esi
mov ecx edi
call sub_40ab50
test eax eax
jne r-xdata
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x7f
je r-xdata
inc eax
mov [ esp + 0x18 ] eax
jmp r-xdata
lea esi [ esp + 0x48 ]
call sub_4092c0
lea esi [ esp + 0x38 ]
call sub_4092c0
lea esi [ esp + 0x28 ]
call sub_4092c0
lea eax [ esp + 0x58 ]
push eax
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x78
retn 0xc
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_4671e2
add esp 0x8
test al al
je r-xdata
mov ecx [ esp + 0x90 ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x20 ]
mov ecx [ edx + eax * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x72
push edi
call sub_45e62e
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_4671fb
add esp 0x8
test al al
je r-xdata
sub_47eea5
sub esp 0x44
push ebx
push ebp
mov ebp [ esp + 0x54 ]
push esi
push edi
lea eax [ esp + 0x20 ]
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x16 ] 0x0
mov [ esp + 0x15 ] 0x0
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x1c ] 0x1
call sub_40dce0
mov edi [ ebp ]
dec edi
mov [ esp + 0x20 ] 0x4
mov [ esp + 0x24 ] edi
xor ebx ebx
cmp [ esp + 0x15 ] 0x0
je r-xdata
cmp [ esp + 0x15 ] 0x0
jne r-xdata
mov eax [ esp + 0x58 ]
push 0xffffffff
push 0xa0
push eax
mov [ eax + 0xf4 ] edi
call sub_45e62e
cmp [ esp + 0x17 ] 0x0
je r-xdata
mov eax [ esp + 0x58 ]
dec ecx
mov [ eax + 0xf4 ] ecx
mov [ esp + 0x18 ] 0x0
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ebx [ esp + 0x58 ]
add ebx 0x16c
lea eax [ esp + 0x20 ]
call sub_40cfe0
cmp [ esp + 0x16 ] 0x0
je r-xdata
mov eax [ ebp ]
lea ecx [ eax + 0x1 ]
mov [ ebp ] ecx
call sub_40f2a0
mov esi eax
test esi esi
je r-xdata
mov eax [ eax ]
add eax 0xffffffec
cmp eax 0x4
ja r-xdata
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x20 ]
push edx
mov [ ebp ] ecx
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x8
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
push edx
mov [ ebp ] eax
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x8
jmp [ eax * 4 + jump_table_47f089 ]
inc ebx
jmp r-xdata
test ebx ebx
jne r-xdata
dec ebx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp ]
dec eax
mov [ esp + 0x15 ] 0x1
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp [ esp + 0x16 ] bl
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ esp + 0x17 ] 0x1
cmp [ eax + 0x8 ] bx
jne r-xdata
mov ecx [ esp + 0x58 ]
lea eax [ esp + 0x5c ]
push eax
push ecx
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_40cd80
test eax eax
jne r-xdata
cmp [ eax ] 0x6
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x8
mov eax [ esp + 0x18 ]
mov eax 0x2
mov [ esp + 0x5c ] 0x1
mov [ esp + 0x18 ] eax
jmp r-xdata
mov edx [ edx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ecx [ esp + 0x58 ]
push eax
push 0x72
push ecx
call sub_45e62e
lea edx [ esp + 0x20 ]
push edx
call sub_452334
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x8
cmp [ esp + 0x5c ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x7f
jne r-xdata
mov edx [ ebp ]
mov [ esp + 0x16 ] 0x1
mov [ esp + 0x1c ] edx
jmp r-xdata
sub_47f09d
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x24 ]
mov eax [ esi + 0x4 ]
mov ebx 0x1
mov [ esp + 0x24 ] ebx
mov ecx [ eax + 0x4 ]
push edi
mov edi 0x7f
cmp [ ecx + 0x8 ] di
je r-xdata
xor esi esi
test ebx ebx
jle r-xdata
xor eax eax
push 0xffffffff
lea edx [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] eax
push edx
lea eax [ esp + 0x30 ]
push eax
push esi
mov ecx ebp
mov [ esp + 0x28 ] ebx
call sub_40ab50
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
lea edi [ ebp + 0x16c ]
nop
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x28 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] di
je r-xdata
push 0xffffffff
push 0x96
push ebp
call sub_45e62e
mov eax edi
call sub_40f360
cmp [ eax ] 0x1
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c760
lea esi [ esp + 0x10 ]
mov ebx eax
call sub_4092c0
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ebp
call sub_45e62e
mov eax edi
inc esi
call sub_40f360
mov ecx [ eax + 0x8 ]
mov edx [ esp + 0x2c ]
mov [ edx ] ecx
cmp esi ebx
je r-xdata
mov eax edi
call sub_40f360
cmp [ eax ] 0x2
je r-xdata
call sub_40c8a0
cmp esi ebx
jl r-xdata
mov eax edi
call sub_40f360
cmp [ eax ] 0x3
jne r-xdata
push edi
call sub_43423f
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
sub_47f1aa
sub esp 0x10
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov esi [ esp + 0x24 ]
mov eax [ esi + 0x4 ]
mov ebp 0x1
mov [ esp + 0x24 ] ebp
mov ecx [ eax + 0x4 ]
push edi
mov edi 0x7f
cmp [ ecx + 0x8 ] di
je r-xdata
xor esi esi
test ebp ebp
jle r-xdata
xor eax eax
push 0xffffffff
lea edx [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] eax
push edx
lea eax [ esp + 0x30 ]
push eax
push esi
mov ecx ebx
mov [ esp + 0x28 ] ebp
call sub_40ab50
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
lea edi [ ebx + 0x16c ]
nop
lea esi [ esp + 0x10 ]
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x28 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] di
je r-xdata
push 0xffffffff
push 0x96
push ebx
call sub_45e62e
mov eax edi
call sub_40f360
cmp [ eax ] 0x1
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_40c760
lea esi [ esp + 0x10 ]
mov ebp eax
call sub_4092c0
movsx eax [ eax + 0xa ]
push eax
push 0x72
push ebx
call sub_45e62e
mov eax edi
inc esi
call sub_40f360
mov ecx [ eax + 0x8 ]
mov edx [ esp + 0x2c ]
inc ecx
mov [ edx ] ecx
mov eax edi
call sub_40f360
cmp [ eax ] 0x2
je r-xdata
push edi
call sub_43423f
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov eax edi
call sub_40f360
cmp [ eax ] 0x3
jne r-xdata
call sub_40c8a0
cmp esi ebp
jl r-xdata
sub_47f2b4
sub esp 0x44
push ebx
push ebp
xor ebp ebp
mov eax 0x1
push esi
push edi
mov edi [ esp + 0x60 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x64 ]
push eax
lea ebx [ esp + 0x14 ]
mov [ esp + 0x34 ] r--data
mov [ esp + 0x38 ] ebp
mov [ esp + 0x3c ] ebp
mov [ esp + 0x40 ] ebp
mov [ esp + 0x14 ] ebp
mov [ esp + 0x20 ] ebp
mov [ esp + 0x44 ] ebp
mov [ esp + 0x50 ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x30 ] ebp
mov [ esp + 0x64 ] r--data
call sub_409210
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 + 0x4 ]
cmp [ ecx + 0x8 ] 0x47
mov ebx [ esp + 0x58 ]
jne r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call sub_46e6b0
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x47
jne r-xdata
inc eax
mov [ edi ] eax
lea edx [ esp + 0x30 ]
push edx
push edi
push esi
push ebx
call sub_473c1b
test eax eax
jne r-xdata
mov eax [ ecx ]
mov ecx [ eax ]
mov [ esp + 0x60 ] ecx
dec eax
mov [ esp + 0x60 ] r--data
mov [ edi ] eax
jmp r-xdata
inc [ edi ]
push 0xffffffff
lea ecx [ esp + 0x44 ]
push ecx
push edi
push esi
mov ecx ebx
call sub_40ab50
test eax eax
jne r-xdata
mov edx [ esp + 0x60 ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edx
lea eax [ esp + 0x1c ]
push eax
push ebx
call sub_47b9b8
test eax eax
jne r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea esi [ esp + 0x40 ]
call sub_4092c0
lea esi [ esp + 0x10 ]
call sub_4092c0
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x10
jmp r-xdata
mov edx [ edi ]
mov eax [ esi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4092c0
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x14 ] ebp
call sub_43550e
test al al
je r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
je r-xdata
lea edx [ esp + 0x40 ]
push edx
lea esi [ esp + 0x34 ]
call sub_40be00
mov ecx [ esp + 0x60 ]
push esi
push ecx
lea edx [ esp + 0x18 ]
push edx
push ebx
call sub_47b9f7
lea esi [ esp + 0x20 ]
mov edi eax
call sub_4092c0
lea esi [ esp + 0x40 ]
call sub_4092c0
lea esi [ esp + 0x10 ]
call sub_4092c0
lea ecx [ esp + 0x30 ]
call sub_410ae0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x10
movsx ecx [ eax + 0xa ]
push ecx
push 0x72
push ebx
call sub_45e62e
jmp r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea esi [ esp + 0x40 ]
call sub_4092c0
lea esi [ esp + 0x10 ]
call sub_4092c0
lea ecx [ esp + 0x30 ]
call sub_410ae0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn 0x10
lea edx [ esp + 0x20 ]
push edx
mov ebx esi
call sub_409210
lea esi [ esp + 0x20 ]
call sub_4092c0
mov eax [ esp + 0x5c ]
mov edx [ eax + 0x4 ]
mov ecx [ edi ]
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x20 ] ebp
mov eax [ edx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x7f
je r-xdata
cmp ax 0x41
jne r-xdata
cmp ax 0x35
je r-xdata
dec ecx
mov [ edi ] ecx
jmp r-xdata
mov esi [ esp + 0x5c ]
mov ecx [ edi ]
mov edx [ esi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x48
je r-xdata
mov eax [ esp + 0x58 ]
push r--data
push eax
call sub_45e41b
sub_47f529
sub esp 0x18
push ebx
push ebp
push esi
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x30 ]
inc [ edi ]
mov edx [ edi ]
xor eax eax
mov ebx ecx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x24 ] eax
cmp edx [ esi + 0x8 ]
jae r-xdata
lea esi [ esp + 0x18 ]
call sub_4092c0
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x18
retn 0x14
mov ebp [ esp + 0x3c ]
jmp r-xdata
mov eax [ esp + 0x34 ]
push 0x0
push eax
call sub_4354dd
cmp ebp eax
mov ecx [ esi + 0x4 ]
jg r-xdata
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x7d
push ebx
jmp r-xdata
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
mov [ esp + 0x30 ] eax
jne r-xdata
call sub_45e62e
mov ecx [ esp + 0x34 ]
push 0x0
push ecx
call sub_4354dd
cmp ebp eax
jl r-xdata
mov ebx [ esp + 0x38 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x14 ]
lea edx [ ebp + 0x1 ]
push edx
push ebx
push eax
push edi
push esi
mov [ ebx + ebp * 4 ] 0x0
call sub_47f529
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edx * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x7e
push ebx
jmp r-xdata
mov edx [ esp + 0x30 ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ esp + 0x1c ]
push ecx
push edi
push esi
mov ecx ebx
mov [ esp + 0x40 ] eax
call sub_40ab50
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ esp + 0x34 ]
push edx
call sub_45e85e
xor ebx ebx
test ebp ebp
jle r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x40
jne r-xdata
mov ecx [ esp + 0x34 ]
push 0x0
push 0x0
push ecx
call sub_40d030
add esp 0xc
test eax eax
je r-xdata
mov edi edi
mov ecx [ ecx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
inc [ ebx + ebp * 4 - 0x4 ]
inc [ edi ]
mov edx [ edi ]
cmp edx [ esi + 0x8 ]
jb r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x14 ]
push ecx
push 0x7a
push edx
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
mov ebx eax
call sub_409210
mov ebx [ esp + 0x38 ]
mov esi [ esp + 0x2c ]
mov eax [ esp + 0x38 ]
mov esi [ eax + ebx * 4 ]
mov edx [ esp + 0x34 ]
call sub_40d0f0
inc ebx
cmp ebx ebp
jl r-xdata
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x14 ]
push edx
push 0x6b
push eax
inc eax
lea esi [ esp + 0x18 ]
mov [ edi ] eax
call sub_4092c0
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x14
mov ebx [ esp + 0x14 ]
lea esi [ esp + 0x18 ]
call sub_4092c0
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x14
sub_47f6ef
sub esp 0x1ec
push ebx
push ebp
mov ebp [ esp + 0x200 ]
push esi
xor esi esi
push edi
mov edi [ esp + 0x204 ]
lea ecx [ esp + 0x60 ]
mov [ esp + 0x70 ] esi
mov [ esp + 0x5c ] esi
call sub_40c060
lea ecx [ esp + 0x34 ]
call sub_40c060
lea ecx [ esp + 0x4c ]
call sub_40c060
mov ebx 0x1
add [ ebp ] ebx
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] esi
mov ecx [ ecx + eax * 4 ]
mov [ esp + 0x74 ] esi
mov [ esp + 0x18 ] esi
cmp [ ecx + 0x8 ] si
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x33
jne r-xdata
mov edx [ ecx ]
sub edx 0x1c
je r-xdata
mov edx [ ebp ]
mov ecx [ ebp ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
lea esi [ esp + 0x38 ]
mov [ esp + 0x23 ] 0x1
call sub_40df50
lea ecx [ esp + 0x5c ]
push ecx
mov ecx [ esp + 0x210 ]
lea edx [ esp + 0x78 ]
push edx
call sub_40c3e0
mov eax [ esp + 0x74 ]
test eax eax
jne r-xdata
mov [ esp + 0x20c ] ebx
sub edx ebx
jne r-xdata
call sub_45e62e
cmp [ esp + 0x5c ] 0x400
jne r-xdata
push 0xa
push 0x8
lea eax [ esp + 0x180 ]
push eax
call sub_443e70
push eax
call sub_415b78
add esp 0x10
lea ecx [ esp + 0x178 ]
push ecx
lea eax [ esp + 0x50 ]
call sub_4021e0
push 0x2e
lea eax [ esp + 0x50 ]
call sub_403470
mov edx [ ebp ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ecx ]
push edx
lea eax [ esp + 0x50 ]
call sub_40c140
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov ecx 0x10
lea esi [ esp + 0x54 ]
call sub_40c3e0
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x200 ]
push edx
push 0x7f
push eax
jmp r-xdata
mov [ esp + 0x20c ] 0x2
jmp r-xdata
mov ecx [ ebp ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0x9b
push eax
call sub_4355fd
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
push rw-data
call sub_43423f
test al al
je r-xdata
mov edi r--data
lea ebx [ esp + 0x20 ]
call sub_40e6d0
mov ecx [ esp + 0x5c ]
lea eax [ esi + 0x10 ]
mov edx ebx
lea esi [ esp + 0x4c ]
call sub_4019e0
lea edx [ esp + 0x5c ]
push edx
lea eax [ esp + 0x1c ]
push eax
mov ecx 0x10
call sub_40c3e0
cmp [ esp + 0x18 ] 0x0
je r-xdata
inc eax
mov [ ebp ] eax
inc [ ebp ]
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
push 0x1
push 0x400
push esi
lea edx [ esp + 0x40 ]
push edx
push 0x2
push 0x400
push esi
lea ecx [ esp + 0x40 ]
push ecx
jmp r-xdata
mov edx [ esp + 0x204 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp ]
mov ecx [ eax + ecx * 4 ]
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x200 ]
push edx
push 0x79
push eax
jmp r-xdata
mov edi [ esp + 0x204 ]
mov esi [ esp + 0x18 ]
mov [ esp + 0x1f ] 0x0
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
jne r-xdata
xor ebx ebx
lea ebx [ ebx ]
call sub_45ee98
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x78 ]
push ecx
mov ecx [ esp + 0x214 ]
lea esi [ esp + 0x3c ]
call sub_40c3e0
jmp r-xdata
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
movzx ecx [ ecx + 0x8 ]
cmp cx 0x7f
je r-xdata
cmp [ esp + 0x1f ] 0x0
lea esi [ eax + 0x1 ]
mov [ ebp ] esi
mov ebx [ edi + 0x4 ]
mov eax [ ebx + esi * 4 ]
movsx ecx [ eax + 0xa ]
mov [ esp + 0x14 ] ecx
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x200 ]
push eax
push 0x7b
push ecx
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_40c760
test eax eax
jle r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
lea ecx [ esp + 0x4c ]
call sub_402620
lea ecx [ esp + 0x34 ]
call sub_402620
lea ecx [ esp + 0x60 ]
call sub_402620
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1ec
retn 0x10
cmp cx 0x40
jne r-xdata
cmp [ eax + 0x8 ] 0x4e
mov ecx [ esp + 0x18 ]
push ecx
jne r-xdata
xor ecx ecx
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x200 ]
push edx
push 0x7b
push eax
jmp r-xdata
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
mov edx eax
jmp r-xdata
inc eax
mov [ ebp ] eax
mov eax [ edi + 0x4 ]
mov edx [ ebp ]
mov ecx [ eax + edx * 4 ]
cmp [ ecx + 0x8 ] 0x33
je r-xdata
call sub_442fa3
test al al
jne r-xdata
call sub_442fa3
test al al
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push 0x7b
jmp r-xdata
inc eax
lea ecx [ esp + 0x20 ]
mov [ ebp ] eax
call sub_40c760
mov edx [ ebp ]
mov [ esp + ebx * 4 + 0x78 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
inc ebx
cmp [ ecx + 0x8 ] 0x4e
mov [ esp + 0x70 ] ebx
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x200 ]
push eax
push 0x7e
push ecx
jmp r-xdata
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x44 ] esi
cmp esi [ edi + 0x8 ]
jae r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push 0x7c
jmp r-xdata
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x44 ] esi
cmp esi [ edi + 0x8 ]
jae r-xdata
mov edx [ ebx + esi * 4 ]
movsx eax [ edx + 0x8 ]
add eax 0xffffffb9
cmp eax 0x8
ja r-xdata
mov edx [ esp + 0x208 ]
push edx
inc [ ebp ]
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push 0xffffffff
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x208 ]
push ebp
push edi
mov [ esp + 0x24 ] eax
call sub_40ab50
test eax eax
jne r-xdata
cmp ebx 0x1
jl r-xdata
mov esi [ esp + 0x200 ]
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
push ebp
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
lea ebx [ ebx + esi * 4 ]
mov [ esp + 0x48 ] ebx
cmp [ esp + 0x70 ] 0x0
jle r-xdata
lea esi [ ebx + esi * 4 ]
mov [ esp + 0x14 ] esi
inc esi
mov [ ebp ] esi
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_47fe9f ]
jmp [ eax * 4 + jump_table_47fe93 ]
mov esi [ esp + 0x18 ]
push esi
call sub_442fa3
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push 0x6e
push esi
jmp r-xdata
mov ebx [ esp + 0x18 ]
lea ecx [ esp + 0x20 ]
push ecx
call sub_409210
cmp ax 0x4e
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x200 ]
push 0x1
lea edx [ esp + 0x7c ]
push edx
push eax
push ebp
push edi
call sub_47f529
test al al
je r-xdata
mov ecx [ esp + 0x70 ]
xor eax eax
lea edi [ esp + 0x78 ]
[ edi ]
mov edi [ esp + 0x204 ]
cmp bx 0x4e
je r-xdata
mov esi [ ecx ]
lea eax [ esp + 0x34 ]
call sub_40dd00
test al al
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ ebx + esi * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp [ eax + 0x8 ] 0x40
je r-xdata
inc ecx
jmp r-xdata
dec ecx
push esi
call sub_45e85e
mov [ esp + 0x10 ] 0x0
test ebx ebx
jle r-xdata
push 0x0
push esi
call sub_4354dd
cmp eax ebx
jne r-xdata
inc [ esp + 0x10 ]
cmp ax 0x47
je r-xdata
jmp r-xdata
mov ecx 0x1
add [ esp + 0x10 ] ecx
cmp bx 0x47
je r-xdata
mov eax [ esp + 0x48 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xb1
jmp r-xdata
jmp r-xdata
push 0x0
mov eax esi
call sub_40e7e0
add esp 0x4
test al al
je r-xdata
jmp r-xdata
xor edx edx
test ebx ebx
jle r-xdata
mov ebx [ ebx ]
movzx eax [ ebx + 0x8 ]
cmp ax 0x7f
je r-xdata
cmp ax 0x4f
je r-xdata
mov ecx [ esi ]
movzx ebx [ ecx + 0x8 ]
mov [ esp + 0x48 ] ecx
cmp bx 0x33
jne r-xdata
cmp bx 0x4f
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x200 ]
push edx
push 0x82
push eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov esi [ esp + eax * 4 + 0x78 ]
mov edx [ esp + 0x18 ]
call sub_40d0f0
test al al
je r-xdata
lea eax [ edx + 0x1 ]
push eax
push esi
mov [ esp + 0x50 ] eax
call sub_4354dd
cmp eax [ esp + edx * 4 + 0x78 ]
jne r-xdata
dec [ esp + 0x10 ]
jmp r-xdata
cmp ax 0x48
je r-xdata
mov ecx 0x1
sub [ esp + 0x10 ] ecx
jmp r-xdata
cmp bx 0x48
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x200 ]
push eax
push 0x7d
push ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax ebx
mov [ esp + 0x10 ] eax
jl r-xdata
cmp edx ebx
jge r-xdata
mov edx [ esp + 0x48 ]
cmp edx ebx
jl r-xdata
mov eax [ esp + 0x44 ]
mov ebx [ esp + 0x48 ]
inc eax
add ebx 0x4
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ebx
cmp eax [ edi + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
mov eax [ esp + 0x44 ]
mov esi [ esp + 0x14 ]
add eax ecx
add esi 0x4
mov [ esp + 0x44 ] eax
mov [ esp + 0x14 ] esi
cmp eax [ edi + 0x8 ]
jb r-xdata
cmp bx 0x40
jne r-xdata
mov esi edx
lea edx [ esp + 0x20 ]
push edx
call sub_45e85e
mov [ esp + 0x10 ] 0x0
lea esp [ esp ]
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp bx 0x7f
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x200 ]
push edx
push 0x7d
push eax
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax ebx
mov [ esp + 0x10 ] eax
jl r-xdata
mov esi [ ebx ]
lea eax [ esp + 0x34 ]
call sub_40dd00
test al al
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov esi [ esp + eax * 4 + 0x78 ]
lea edx [ esp + 0x20 ]
call sub_40d0f0
test al al
je r-xdata
push 0x0
mov eax edx
call sub_40e7e0
add esp 0x4
test al al
jne r-xdata
movsx edx [ ebx + 0xa ]
mov eax [ esp + 0x200 ]
push edx
push 0xb1
push eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push 0x82
jmp r-xdata
mov ebx [ esp + 0x18 ]
push ebx
lea ecx [ esp + 0x24 ]
push ecx
call sub_476958
lea edx [ esp + 0x20 ]
push edx
call sub_409210
jmp r-xdata
sub_47fea8
sub esp 0x14c
push ebx
mov ebx [ esp + 0x158 ]
push ebp
mov ebp [ esp + 0x160 ]
inc [ ebp ]
mov eax [ ebp ]
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x24 ] ecx
mov eax [ edx + eax * 4 ]
push esi
push edi
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
lea ecx [ esp + 0x34 ]
call sub_40c060
mov edi [ ebx + 0x4 ]
mov edx [ ebp ]
mov eax [ edi + edx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
cmp [ eax ] 0x2a
jne r-xdata
mov ecx [ ebp ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x160 ]
push ecx
push 0x7f
push edx
jmp r-xdata
mov ecx [ ebp ]
mov edx [ edi + ecx * 4 ]
mov eax [ edx ]
push eax
lea esi [ esp + 0x38 ]
call sub_40df50
lea ecx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x170 ]
lea edx [ esp + 0x20 ]
push edx
call sub_40c3e0
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov eax [ esp + 0x16c ]
mov ecx [ esp + 0x160 ]
push eax
push ebp
push ebx
push ecx
call sub_47e8db
jmp r-xdata
call sub_45e62e
test [ esp + 0x50 ] 0x100
je r-xdata
mov edi r--data
lea ebx [ esp + 0x20 ]
call sub_40e6d0
mov edi [ esp + 0x16c ]
mov eax edi
mov ecx 0x100
mov edx ebx
call sub_4019e0
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov ecx edi
call sub_40c3e0
inc [ ebp ]
mov edi [ esp + 0x164 ]
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
lea esi [ esp + 0x20 ]
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14c
retn 0x10
mov eax [ ebp ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0xa4
mov ecx [ ebp ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
mov edx [ esp + 0x160 ]
push ecx
push 0xae
push edx
jmp r-xdata
mov ebx [ esp + 0x160 ]
xor esi esi
mov edx [ ecx + esi * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x80
push ebx
jmp r-xdata
mov edx [ esp + 0x1c ]
inc esi
mov [ ebp ] esi
mov eax [ edi + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x4e
movsx ecx [ eax + 0xa ]
mov [ esp + 0x18 ] ecx
push edx
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
push 0x7b
push ebx
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_40c760
test eax eax
jle r-xdata
call sub_442fa3
test al al
jne r-xdata
call sub_442fa3
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push 0x7b
push ebx
jmp r-xdata
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
cmp [ ecx + 0x8 ] 0x4f
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x7e
push ebx
jmp r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x48 ] esi
cmp esi [ edi + 0x8 ]
jae r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push 0x7c
push ebx
jmp r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x48 ] esi
cmp esi [ edi + 0x8 ]
jae r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x7b
push ebx
jmp r-xdata
inc eax
lea ecx [ esp + 0x20 ]
mov [ ebp ] eax
call sub_40c760
mov edx [ ebp ]
mov [ esp + esi * 4 + 0x58 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
inc esi
cmp [ ecx + 0x8 ] 0x4e
mov [ esp + 0x4c ] esi
je r-xdata
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
push ebp
push edi
mov ecx ebx
call sub_40ab50
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ eax + esi * 4 ]
mov [ esp + 0x44 ] ecx
mov ecx [ esp + 0x4c ]
test ecx ecx
jle r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ eax + esi * 4 ]
mov [ esp + 0x18 ] ecx
lea esp [ esp ]
inc [ ebp ]
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov ebx [ esp + 0x160 ]
push 0xffffffff
lea ecx [ esp + 0x24 ]
push ecx
push ebp
push edi
mov ecx ebx
mov [ esp + 0x28 ] eax
call sub_40ab50
test eax eax
jne r-xdata
cmp esi 0x1
jl r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x6e
push ebx
jmp r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x20 ]
push ecx
call sub_409210
mov ebx [ esp + 0x160 ]
cmp ax 0x4e
je r-xdata
mov ecx [ esp + 0x1c ]
push 0x1
lea eax [ esp + 0x5c ]
push eax
push ecx
push ebp
push edi
mov ecx ebx
call sub_47f529
test al al
je r-xdata
mov ebx [ esp + 0x160 ]
xor eax eax
lea edi [ esp + 0x58 ]
[ edi ]
mov edi [ esp + 0x164 ]
cmp bx 0x4e
je r-xdata
mov esi [ ecx ]
lea eax [ esp + 0x34 ]
call sub_40dd00
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
push 0x7e
push ebx
jmp r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_45e85e
mov [ esp + 0x14 ] 0x0
test esi esi
jle r-xdata
lea ecx [ esp + 0x34 ]
call sub_402620
cmp cx 0x40
jne r-xdata
inc [ esp + 0x14 ]
cmp ax 0x47
je r-xdata
jmp r-xdata
inc [ esp + 0x14 ]
cmp bx 0x47
je r-xdata
mov edx [ esp + 0x44 ]
movsx eax [ edx + 0xa ]
push eax
push 0xb1
jmp r-xdata
mov esi [ esp + 0x48 ]
mov eax [ esp + 0x1c ]
push 0x0
call sub_40e7e0
add esp 0x4
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi [ esp + eax * 4 + 0x58 ]
mov edx [ esp + 0x1c ]
call sub_40d0f0
test al al
je r-xdata
mov edx [ edx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x7f
push ebx
jmp r-xdata
mov ebx [ esp + 0x164 ]
inc eax
mov [ ebp ] eax
mov edi [ edi + 0x4 ]
mov eax [ edi + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov edx [ esp + 0x44 ]
mov ecx [ edx ]
movzx eax [ ecx + 0x8 ]
mov [ esp + 0x54 ] ecx
cmp ax 0x7f
je r-xdata
cmp ax 0x4f
je r-xdata
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
movzx ecx [ ecx + 0x8 ]
cmp cx 0x7f
je r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx ]
movzx ebx [ ecx + 0x8 ]
mov [ esp + 0x44 ] ecx
cmp bx 0x33
jne r-xdata
mov ebx [ esp + 0x160 ]
cmp bx 0x4f
je r-xdata
mov ecx [ esp + 0x168 ]
push ecx
mov esi [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + esi * 4 ]
cmp [ edx + 0x8 ] 0x41
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x82
push ebx
jmp r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push 0x7d
push ebx
jmp r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax [ esp + 0x4c ]
mov [ esp + 0x14 ] eax
jl r-xdata
dec [ esp + 0x14 ]
jmp r-xdata
cmp ax 0x48
je r-xdata
mov eax 0x1
sub [ esp + 0x14 ] eax
jmp r-xdata
cmp bx 0x48
je r-xdata
add [ esp + 0x44 ] 0x4
inc esi
mov [ esp + 0x48 ] esi
cmp esi [ edi + 0x8 ]
jb r-xdata
cmp ax 0x40
jne r-xdata
add [ esp + 0x18 ] 0x4
add esi eax
mov [ esp + 0x48 ] esi
cmp esi [ edi + 0x8 ]
jb r-xdata
cmp bx 0x40
jne r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
cmp bx 0x7f
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov esi [ ecx ]
lea eax [ esp + 0x34 ]
call sub_40dd00
test al al
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x54 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xb1
push ebx
jmp r-xdata
mov esi [ esp + 0x48 ]
jmp r-xdata
mov eax 0x1
sub_4803f4
sub esp 0x164
mov edx [ esp + 0x174 ]
push ebx
mov ebx [ esp + 0x16c ]
push ebp
mov ebp [ esp + 0x178 ]
mov al dl
xor ecx ecx
shr al 0x2
push esi
mov esi 0x1
add [ ebp ] esi
and al 0x1
push edi
mov edi [ esp + 0x17c ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x17 ] al
mov eax [ ebp ]
mov [ esp + 0x40 ] esi
mov esi [ edi + 0x4 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x2c ] ecx
mov eax [ esi + eax * 4 ]
and edx 0x3
mov [ esp + 0x64 ] ecx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x16 ] cl
mov [ esp + 0x38 ] ecx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x184 ] edx
cmp [ eax + 0x8 ] cx
jne r-xdata
lea ecx [ esp + 0x4c ]
call sub_40c060
mov eax [ edi + 0x4 ]
mov ecx [ ebp ]
mov edx [ eax + ecx * 4 ]
cmp [ edx + 0x8 ] 0x33
jne r-xdata
mov eax [ eax ]
sub eax 0x1e
je r-xdata
mov edx [ ebp ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x7f
push ebx
jmp r-xdata
mov ecx [ ebp ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
lea esi [ esp + 0x50 ]
call sub_40df50
lea ecx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x188 ]
lea edx [ esp + 0x20 ]
push edx
call sub_40c3e0
cmp [ esp + 0x1c ] 0x0
jne r-xdata
push edx
push ebp
push edi
push ebx
call sub_47fea8
jmp r-xdata
sub eax 0x1
je r-xdata
call sub_45e62e
mov eax [ esp + 0x34 ]
test eax 0x100
jne r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
lea esi [ esp + 0x38 ]
call sub_4092c0
lea esi [ esp + 0x20 ]
call sub_4092c0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x164
retn 0x10
push edx
push ebp
push edi
push ebx
call sub_47f6ef
jmp r-xdata
sub eax 0xb
jne r-xdata
mov ecx [ ebp ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xae
push ebx
jmp r-xdata
test eax 0x400
jne r-xdata
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
push eax
push 0x79
push ebx
jmp r-xdata
mov edi r--data
lea ebx [ esp + 0x20 ]
call sub_40e6d0
mov edi [ esp + 0x184 ]
mov eax edi
xor ecx ecx
mov edx ebx
call sub_4019e0
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov ecx edi
call sub_40c3e0
cmp [ esp + 0x16 ] 0x0
je r-xdata
push edx
push ebp
push edi
push ebx
call sub_47e8db
jmp r-xdata
mov edx [ ebp ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + edx * 4 ]
movsx edx [ ecx + 0xa ]
push edx
push 0x9c
push ebx
jmp r-xdata
mov [ esp + 0x16 ] 0x1
jmp r-xdata
mov ebx [ esp + 0x184 ]
mov ebx [ esp + 0x184 ]
test bl 0x1
je r-xdata
mov bl [ esp + 0x17 ]
test bl bl
je r-xdata
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x70 ]
push edx
mov ecx 0x1
lea esi [ esp + 0x54 ]
call sub_40c3e0
cmp [ esp + 0x6c ] 0x0
je r-xdata
test bl 0x2
je r-xdata
push ebx
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x54 ]
push eax
call sub_4533dc
test al al
je r-xdata
inc [ ebp ]
mov edi [ esp + 0x17c ]
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_442fa3
test al al
je r-xdata
test [ esp + 0x34 ] 0x200
jne r-xdata
test [ esp + 0x34 ] 0x200
je r-xdata
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x41
jne r-xdata
test bl bl
je r-xdata
mov ecx [ esp + 0x17c ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0x71
jmp r-xdata
mov ecx [ esp + 0x17c ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp ]
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xaf
jmp r-xdata
mov eax [ ebp ]
mov edx [ edi + 0x4 ]
mov ecx [ edx + eax * 4 ]
movzx ecx [ ecx + 0x8 ]
cmp cx 0x7f
je r-xdata
inc eax
cmp [ esp + 0x16 ] 0x0
mov [ ebp ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx + 0xa ]
mov [ esp + 0x30 ] eax
je r-xdata
mov [ esp + 0x16 ] 0x0
mov eax [ esp + 0x1c ]
push eax
lea ebx [ esp + 0x3c ]
call sub_409210
jmp r-xdata
mov edx [ esp + 0x180 ]
lea ecx [ esp + 0x4c ]
call sub_402620
cmp cx 0x40
jne r-xdata
mov esi [ ebp ]
mov ebx [ edi + 0x4 ]
mov edx [ ebx + esi * 4 ]
cmp [ edx + 0x8 ] 0x4e
jne r-xdata
mov edi r--data
lea ebx [ esp + 0x20 ]
call sub_40e6d0
push ebx
mov ebx [ esp + 0x20 ]
call sub_409210
mov edi [ esp + 0x17c ]
mov eax [ esp + 0x178 ]
push ebx
push 0x7e
push eax
jmp r-xdata
inc [ ebp ]
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov ecx [ esp + 0x178 ]
movsx ebx [ edx + 0xa ]
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
push ebp
push edi
call sub_40ab50
test eax eax
jne r-xdata
mov ecx [ ebp ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movsx ebx [ eax + 0xa ]
xor esi esi
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov eax [ edx + eax * 4 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0x7f
mov ebx [ esp + 0x178 ]
inc eax
mov [ ebp ] eax
mov eax [ edi + 0x4 ]
mov edx [ ebp ]
mov ecx [ eax + edx * 4 ]
cmp [ ecx + 0x8 ] 0x33
mov edi [ esp + 0x17c ]
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_442fa3
mov edx [ esp + 0x178 ]
test al al
jne r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
mov eax [ esp + 0x178 ]
push ebx
push 0x7b
push eax
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_40c760
test eax eax
jle r-xdata
mov ecx [ esp + 0x30 ]
push ecx
push 0x7e
jmp r-xdata
cmp [ edx + 0xff ] al
je r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x178 ]
push eax
push 0xac
push ecx
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_442fa3
test al al
je r-xdata
mov ecx [ esp + 0x178 ]
push ebx
push 0x7b
push ecx
jmp r-xdata
mov eax [ ebp ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp [ edx + 0x8 ] 0x4f
jne r-xdata
push edx
mov esi [ esp + 0x178 ]
push 0xffffffff
lea eax [ esp + 0x24 ]
push eax
push ebp
push edi
mov ecx esi
call sub_40ab50
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x60 ] esi
cmp esi [ edi + 0x8 ]
jae r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x178 ]
push edx
push 0x7c
push eax
jmp r-xdata
mov ecx [ esp + 0x178 ]
cmp [ ecx + 0xff ] 0x0
je r-xdata
push ebx
push 0x7b
jmp r-xdata
cmp esi 0x40
jg r-xdata
mov eax [ esp + 0x30 ]
push eax
push 0x6e
push esi
jmp r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x20 ]
push ecx
call sub_409210
lea eax [ ebx + esi * 4 ]
mov [ esp + 0x5c ] eax
jmp r-xdata
cmp [ esp + 0x64 ] 0x0
jle r-xdata
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x60 ] esi
cmp esi [ edi + 0x8 ]
jae r-xdata
inc eax
lea ecx [ esp + 0x20 ]
mov [ ebp ] eax
call sub_40c760
mov ecx [ edi + 0x4 ]
mov [ esp + esi * 4 + 0x70 ] eax
mov eax [ ebp ]
mov edx [ ecx + eax * 4 ]
inc esi
cmp [ edx + 0x8 ] 0x4e
mov [ esp + 0x64 ] esi
je r-xdata
mov ecx [ esp + 0x5c ]
mov eax [ ecx ]
movzx ebx [ eax + 0x8 ]
mov [ esp + 0x68 ] eax
cmp bx 0x33
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x178 ]
push 0x1
lea edx [ esp + 0x74 ]
push edx
push eax
push ebp
push edi
call sub_47f529
test al al
je r-xdata
mov ecx [ esp + 0x64 ]
xor eax eax
lea edi [ esp + 0x70 ]
[ edi ]
mov edi [ esp + 0x17c ]
lea edx [ ebx + esi * 4 ]
mov [ esp + 0x30 ] edx
nop
cmp esi 0x1
jl r-xdata
cmp bx 0x4e
je r-xdata
mov edx [ esp + 0x68 ]
mov esi [ edx ]
lea eax [ esp + 0x4c ]
call sub_40dd00
test al al
jne r-xdata
jmp r-xdata
cmp bx 0x4e
je r-xdata
mov ecx [ esp + 0x5c ]
mov esi [ ecx ]
lea eax [ esp + 0x4c ]
call sub_40dd00
test al al
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_45e85e
mov [ esp + 0x18 ] 0x0
test esi esi
jle r-xdata
mov ecx 0x1
add [ esp + 0x18 ] ecx
cmp bx 0x47
je r-xdata
mov eax [ esp + 0x68 ]
movsx ecx [ eax + 0xa ]
push ecx
push 0xb1
jmp r-xdata
mov ecx 0x1
add [ esp + 0x18 ] ecx
cmp bx 0x47
je r-xdata
mov ecx [ esp + 0x5c ]
movsx edx [ ecx + 0xa ]
mov eax [ esp + 0x178 ]
push edx
push 0xb1
push eax
jmp r-xdata
mov esi [ esp + 0x1c ]
push 0x0
mov eax esi
call sub_40e7e0
add esp 0x4
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ esp + ecx * 4 + 0x70 ]
mov edx [ esp + 0x1c ]
call sub_40d0f0
test al al
je r-xdata
cmp bx 0x4f
je r-xdata
mov eax [ esp + 0x30 ]
mov eax [ eax ]
movzx ebx [ eax + 0x8 ]
mov [ esp + 0x5c ] eax
cmp bx 0x33
jne r-xdata
cmp bx 0x4f
je r-xdata
push ebx
push 0x82
jmp r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
mov ecx [ esp + 0x178 ]
push ebx
push 0x7d
push ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
inc eax
cmp eax [ esp + 0x64 ]
mov [ esp + 0x18 ] eax
jl r-xdata
mov ecx 0x1
sub [ esp + 0x18 ] ecx
jmp r-xdata
cmp bx 0x48
je r-xdata
mov ecx 0x1
sub [ esp + 0x18 ] ecx
jmp r-xdata
cmp bx 0x48
je r-xdata
push 0x0
lea edx [ esp + 0x3c ]
push edx
call sub_4354dd
test eax eax
jle r-xdata
mov eax [ esp + 0x60 ]
add [ esp + 0x5c ] 0x4
add eax ecx
mov [ esp + 0x60 ] eax
cmp eax [ edi + 0x8 ]
jb r-xdata
cmp bx 0x40
jne r-xdata
mov eax [ esp + 0x60 ]
add [ esp + 0x30 ] 0x4
add eax ecx
mov [ esp + 0x60 ] eax
cmp eax [ edi + 0x8 ]
jb r-xdata
cmp bx 0x40
jne r-xdata
push edx
push esi
call sub_476958
cmp bx 0x7f
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp bx 0x7f
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ecx 0x1
jmp r-xdata
mov ecx 0x1
jmp r-xdata
sub_480b67
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push ebx
mov esi ecx
mov ecx [ eax + 0x8 ]
push ecx
push eax
push 0x1
push esi
call sub_457c08
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_404110
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop esi
xor eax eax
pop ebx
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_409560
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_404110
push eax
call sub_409210
sub_480bc3
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push ebx
push eax
push 0x1
mov esi ecx
push 0x1
push esi
call sub_463f19
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_404110
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop esi
xor eax eax
pop ebx
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_409560
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
call sub_404110
push eax
call sub_409210
sub_480c1d
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push ebx
push eax
push 0x0
mov esi ecx
push 0x1
push esi
call sub_463f19
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ edx + esi + 0x4 ]
call sub_404110
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop esi
xor eax eax
pop ebx
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_409560
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + esi + 0x4 ]
call sub_404110
push eax
call sub_409210
sub_480c77
push ecx
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
push ecx
push eax
push edi
call sub_457eb5
test al al
je r-xdata
mov esi [ esp + 0x14 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
mov eax [ edi + 0x438 ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0xc ]
push edx
push eax
mov [ esp + 0x1c ] 0x0
call sub_444233
add esp 0xc
test al al
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0xcccccccc
add eax edi
call sub_404120
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
mov ecx [ esp + 0x8 ]
push ebx
push ecx
push 0x0
push 0x400
call [ __import_lookup_table_0(KERNEL32:OpenProcess) ]
mov edx [ edi ]
mov [ edi + 0x454 ] eax
mov eax [ edx + 0x4 ]
add eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] 0x1
call sub_40d590
push 0x0
mov ecx edi
mov [ edi + 0xf8 ] 0x9
call sub_409560
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + edi + 0x4 ]
call sub_404110
mov ebx [ esp + 0x18 ]
push eax
call sub_409210
pop ebx
pop edi
xor eax eax
pop esi
pop ecx
retn 0x8
sub_480d66
mov eax [ esp + 0x4 ]
push edi
mov edi ecx
mov ecx [ eax + 0x8 ]
push ecx
push eax
push edi
call sub_457eb5
test al al
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
push ebx
add eax edi
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x1
call sub_40d590
push 0x0
mov ecx edi
mov [ edi + 0xf8 ] 0x8
call sub_409560
mov edx [ edi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + edi + 0x4 ]
call sub_404110
mov ebx [ esp + 0x10 ]
push eax
call sub_409210
pop ebx
xor eax eax
pop edi
retn 0x8
push esi
mov esi [ esp + 0x10 ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push 0x0
push 0x1
add eax edi
call sub_4040e0
pop esi
xor eax eax
pop edi
retn 0x8
sub_480df5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov ecx [ eax + 0x4 ]
lea edx [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov eax [ ecx ]
push edx
push eax
mov [ rw-data ] 0x1
call sub_453081
push edi
mov ebx eax
call sub_402dd0
mov ebx [ ebp + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x1
add eax esi
mov [ rw-data ] 0x0
call sub_4040e0
mov edi r--data
call sub_40e6d0
lea ecx [ esp + 0x10 ]
call sub_40ed60
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
push 0xffffffff
push ebx
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
mov [ esp + 0x1c ] edi
call sub_40ab50
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
mov [ rw-data ] al
call sub_40ed60
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_480eb3
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_4728ec
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x1
call sub_40d590
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x4
call sub_409560
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_404110
mov ebx [ esp + 0x10 ]
push eax
call sub_409210
pop esi
xor eax eax
pop ebx
retn 0x8
sub_480f0c
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_4728ec
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x1
call sub_40d590
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x6
call sub_409560
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_404110
mov ebx [ esp + 0x10 ]
push eax
call sub_409210
pop esi
xor eax eax
pop ebx
retn 0x8
sub_480f65
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_4728ec
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x1
call sub_40d590
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x5
call sub_409560
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_404110
mov ebx [ esp + 0x10 ]
push eax
call sub_409210
pop esi
xor eax eax
pop ebx
retn 0x8
sub_480fbe
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
push eax
push esi
call sub_4728ec
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
add eax esi
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x1
call sub_40d590
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x3
call sub_409560
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea eax [ eax + esi + 0x4 ]
call sub_404110
mov ebx [ esp + 0x10 ]
push eax
call sub_409210
pop esi
xor eax eax
pop ebx
retn 0x8
sub_4010d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push eax
push ecx
call sub_4010f0
pop edi
pop ebx
retn 0x10
sub_4013e0
push 0x4
call sub_41171a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
retn
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
retn
sub_4019ac
pi2fd mmx1 [ edi ]
push cs
int3
sub_4019c0
lea ecx [ esi + 0x24 ]
call sub_402620
lea ecx [ esi + 0x14 ]
call sub_402620
lea ecx [ esi + 0x4 ]
jmp sub_402620
sub_4027b6
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_40bf5f
add al [ edx ]
add al [ edx ]
add [ edx ] al
add ah cl
int3
sub_40bff4
add eax [ ebx ]
add eax [ edx ]
add eax [ edx ]
int3
sub_40c5f4
xor eax eax
retn 0x8
sub_40cfc0
call sub_40cfb0
test al al
je r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
call sub_40cfb0
test al al
je r-xdata
mov eax 0x1
retn
sub_40d1c0
lea ecx [ esi + 0x4 ]
call sub_40c060
lea ecx [ esi + 0x14 ]
call sub_40c060
lea ecx [ esi + 0x24 ]
call sub_40c060
mov eax esi
retn
sub_40d240
movzx eax [ eax + 0x8 ]
cmp ax 0x3f
jle r-xdata
cmp ax 0x30
jl r-xdata
xor al al
retn
mov al 0x1
retn
sub_40d260
cmp [ eax + 0x4 ] 0x1
je r-xdata
mov eax [ eax ]
retn
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
je r-xdata
retn
mov eax [ eax + 0x10 ]
sub_40d940
push esi
mov esi eax
call sub_40df70
lea ecx [ esi + 0x18 ]
call sub_40c060
call sub_40d900
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov eax esi
pop esi
retn
sub_40dc50
push esi
mov esi edi
call sub_40d1c0
lea esi [ edi + 0x34 ]
call sub_40d1c0
lea ecx [ edi + 0x68 ]
call sub_40c060
mov eax edi
pop esi
retn
sub_40dcc0
push esi
lea ecx [ edi + 0x68 ]
call sub_402620
lea esi [ edi + 0x34 ]
call sub_4019c0
mov esi edi
call sub_4019c0
pop esi
retn
sub_40dce0
xor ecx ecx
mov edx 0x1
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] ecx
retn
sub_40dd20
test [ rw-data ] 0x1
je r-xdata
or [ rw-data ] 0x1
push esi
mov esi rw-data
call sub_40f170
fld [ rw-data ]
pop esi
retn
fld [ rw-data ]
retn
sub_40df70
push esi
mov esi eax
push 0x10000
mov [ esi ] 0x0
call sub_41171a
add esp 0x4
mov [ esi + 0x4 ] eax
call sub_40d900
mov eax esi
pop esi
retn
sub_40e1c0
push esi
mov esi eax
test [ esi + 0x28 ] 0x2000
je r-xdata
pop esi
retn
mov eax [ esi + 0x30 ]
cdq
push 0x0
push edx
push eax
call sub_40e0d0
sub_40e2e0
push esi
mov esi ecx
call sub_4092c0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_40e3b0
mov eax rw-data
call sub_40efa0
mov eax [ rw-data ]
push eax
mov ecx rw-data
call sub_40b800
mov ecx [ rw-data ]
push ecx
mov ecx rw-data
call sub_40b800
retn
sub_40e680
lea ecx [ esi + 0x4 ]
mov [ esi ] 0x0
call sub_40c060
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov eax esi
retn
sub_40eb50
call sub_40eb70
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_40eb70
cmp [ esi + 0x8 ] 0x0
jne r-xdata
retn
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_40eba0
call sub_40eb50
test al al
je r-xdata
mov eax sub_439511
retn
mov eax [ esi + 0x8 ]
retn
sub_40ee30
call sub_40ee50
test al al
je r-xdata
mov eax sub_438573
retn
mov eax [ esi + 0x8 ]
retn
sub_40ee50
call sub_40ee70
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_40ee70
cmp [ esi + 0x8 ] 0x0
jne r-xdata
retn
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_40eea0
call sub_40eec0
test al al
je r-xdata
mov eax sub_437dac
retn
mov eax [ esi + 0x8 ]
retn
sub_40eec0
call sub_40eee0
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
retn
sub_40eee0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
retn
push r--data
call [ __import_lookup_table_0(KERNEL32:LoadLibraryA) ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
mov [ esi + 0x8 ] eax
sub_40ef40
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
retn
or [ rw-data ] 0x1
push sub_429282
call sub_411421
add esp 0x4
sub_40f090
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
jne r-xdata
mov al 0x1
retn 0x4
xor al al
retn 0x4
sub_40f2a0
cmp eax [ rw-data ]
jg r-xdata
xor eax eax
retn
test eax eax
jle r-xdata
shl eax 0x4
add eax [ rw-data ]
retn
sub_40f6a0
push 0x8
lea eax [ esi + 0x44 ]
push 0x0
push eax
call sub_4131f0
add esp 0xc
mov [ esi + 0x34 ] 0x67452301
mov [ esi + 0x38 ] 0xefcdab89
mov [ esi + 0x3c ] 0x98badcfe
mov [ esi + 0x40 ] 0x10325476
retn
sub_410110
push esi
call sub_4112d5
dec eax
add esp 0x4
cmp [ esi + eax * 2 ] 0x5c
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 ] cx
retn
retn
sub_410480
lea ecx [ eax + 0x4 ]
mov edx 0x10
jmp r-xdata
mov [ ecx ] 0x0
add ecx 0x8
sub edx 0x1
jne r-xdata
retn
sub_410540
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push esi
lea ecx [ eax + 0xc ]
mov esi eax
call sub_402620
push esi
call sub_4112ef
add esp 0x4
pop esi
sub_410690
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx rw-data
jmp sub_402620
push eax
call [ DestroyIcon@IAT ]
j_sub_4092c0
jmp sub_4092c0
sub_410830
push esi
mov esi eax
add esi 0x49c
mov ecx esi
call sub_401c00
mov [ esi ] r--data
lea eax [ esi + 0x4 ]
pop esi
jmp sub_410850
sub_4109d0
mov ecx esi
call sub_402620
push esi
call sub_4112ef
add esp 0x4
mov eax esi
retn
sub_410a20
push edi
mov edi ecx
mov [ edi ] r--data
call sub_401a30
mov eax [ edi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop edi
retn
sub_410a60
cmp [ eax + 0x9 ] 0x0
mov eax [ eax + 0x4 ]
jne r-xdata
mov eax [ eax + 0x4 ]
retn
retn
sub_410a70
cmp [ eax ] 0x0
je r-xdata
mov eax 0x1
retn
xor eax eax
retn
sub_410a80
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4112ef
pop ecx
sub_410b08
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_410b60
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] al
mov eax rw-data
retn
Ordinal_WSOCK32_115
jmp [ Ordinal_WSOCK32_115@IAT ]
Ordinal_WSOCK32_57
jmp [ Ordinal_WSOCK32_57@IAT ]
Ordinal_WSOCK32_52
jmp [ Ordinal_WSOCK32_52@IAT ]
Ordinal_WSOCK32_11
jmp [ Ordinal_WSOCK32_11@IAT ]
Ordinal_WSOCK32_10
jmp [ Ordinal_WSOCK32_10@IAT ]
Ordinal_WSOCK32_18
jmp [ Ordinal_WSOCK32_18@IAT ]
Ordinal_WSOCK32_151
jmp [ Ordinal_WSOCK32_151@IAT ]
Ordinal_WSOCK32_16
jmp [ Ordinal_WSOCK32_16@IAT ]
Ordinal_WSOCK32_19
jmp [ Ordinal_WSOCK32_19@IAT ]
Ordinal_WSOCK32_23
jmp [ Ordinal_WSOCK32_23@IAT ]
Ordinal_WSOCK32_4
jmp [ Ordinal_WSOCK32_4@IAT ]
Ordinal_WSOCK32_3
jmp [ Ordinal_WSOCK32_3@IAT ]
Ordinal_WSOCK32_2
jmp [ Ordinal_WSOCK32_2@IAT ]
Ordinal_WSOCK32_13
jmp [ Ordinal_WSOCK32_13@IAT ]
Ordinal_WSOCK32_1
jmp [ Ordinal_WSOCK32_1@IAT ]
Ordinal_WSOCK32_9
jmp [ Ordinal_WSOCK32_9@IAT ]
Ordinal_WSOCK32_20
jmp [ Ordinal_WSOCK32_20@IAT ]
Ordinal_WSOCK32_17
jmp [ Ordinal_WSOCK32_17@IAT ]
Ordinal_WSOCK32_15
jmp [ Ordinal_WSOCK32_15@IAT ]
Ordinal_WSOCK32_21
jmp [ Ordinal_WSOCK32_21@IAT ]
GetFileVersionInfoSizeW
jmp [ GetFileVersionInfoSizeW@IAT ]
GetFileVersionInfoW
jmp [ GetFileVersionInfoW@IAT ]
WNetUseConnectionW
jmp [ WNetUseConnectionW@IAT ]
WNetCancelConnection2W
jmp [ WNetCancelConnection2W@IAT ]
WNetGetConnectionW
jmp [ WNetGetConnectionW@IAT ]
WNetAddConnection2W
jmp [ __import_lookup_table_5(MPR:WNetAddConnection2W) ]
EnumProcesses
jmp [ __import_lookup_table_8(PSAPI:EnumProcesses) ]
EnumProcessModules
jmp [ __import_lookup_table_8(PSAPI:EnumProcessModules) ]
GetModuleBaseNameW
jmp [ __import_lookup_table_8(PSAPI:GetModuleBaseNameW) ]
GetProcessMemoryInfo
jmp [ GetProcessMemoryInfo@IAT ]
CreateToolhelp32Snapshot
jmp [ __import_lookup_table_0(KERNEL32:CreateToolhelp32Snapshot) ]
Process32FirstW
jmp [ __import_lookup_table_0(KERNEL32:Process32FirstW) ]
Process32NextW
jmp [ __import_lookup_table_0(KERNEL32:Process32NextW) ]
sub_410f64
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41171a
sub_41141b
call sub_411824
retn
sub_4116b0
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_417f6c
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4116cb
mov [ ecx ] r--data
jmp sub_417fe6
sub_4116fd
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_417f89
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411803
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4117d8
pop ecx
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:ExitProcess) ]
sub_41181b
push 0x8
call sub_418407
pop ecx
retn
sub_411824
push 0x8
call sub_41832d
pop ecx
retn
sub_411a0a
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_41832d
pop ecx
sub_411a1f
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4118f3
add esp 0xc
pop ebp
retn
sub_411a35
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4118f3
add esp 0xc
pop ebp
retn
sub_411a4b
push 0x1
push 0x0
push 0x0
call sub_4118f3
add esp 0xc
retn
sub_411a5a
push 0x1
push 0x1
push 0x0
call sub_4118f3
add esp 0xc
retn
sub_411ab7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41341b
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_418dbf
add esp 0xc
pop ebp
retn
sub_41343c
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41909e
add esp 0xc
pop ebp
retn
sub_41348a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413452
pop ecx
pop ecx
pop ebp
retn
sub_4134b0
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_419153
pop ecx
pop ecx
pop ebp
retn
sub_4134ef
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_4138b1
push 0x4
call sub_41832d
pop ecx
retn
sub_413ade
push 0x4
call sub_41832d
pop ecx
retn
sub_413ef8
call sub_41588e
add eax 0x20
push eax
push 0x1
call sub_415a14
pop ecx
pop ecx
retn
sub_413f97
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413f0b
pop ecx
pop ecx
pop ebp
retn
sub_414043
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413faa
add esp 0x10
pop ebp
retn
sub_41409a
push 0xc
push r--data
call sub_41718c
call sub_416c72
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_41405d
sub_4140cf
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_411a35
int3
sub_414530
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_414746
push [ ebp + 0x14 ]
call sub_4159d8
pop ecx
retn
sub_414862
push [ ebp + 0x8 ]
call sub_4159d8
pop ecx
retn
sub_4149be
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_415a14
pop ecx
pop ecx
retn
sub_4149ed
push 0x1
call sub_41832d
pop ecx
retn
sub_414a3f
push [ ebp + 0x8 ]
call sub_4159d8
pop ecx
retn
sub_414a49
push 0x1
call sub_41491c
pop ecx
retn
sub_414b07
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_414a52
pop ecx
pop ecx
pop ebp
retn
sub_414dfc
push [ ebp + 0x8 ]
call sub_4159d8
pop ecx
retn
sub_414f08
push esi
call sub_4159d8
pop ecx
retn
sub_4151a6
push [ ebp + 0x18 ]
call sub_4159d8
pop ecx
retn
sub_4154e8
push [ ebp + 0x8 ]
call sub_4159d8
pop ecx
retn
sub_4155f7
push [ ebp + 0x8 ]
call sub_4159d8
pop ecx
retn
sub_41564a
push 0xc
push r--data
call sub_41718c
call sub_416c72
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
pop ecx
call sub_415601
sub_41567f
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_411a35
int3
sub_415945
call sub_414a49
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_413a88
pop ecx
retn
call sub_41f0b0
sub_415a50
mov edx rw-data
jmp sub_41f1cb
sub_415a5a
mov edx rw-data
jmp sub_41f150
sub_41608c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416052
add esp 0x14
pop ebp
retn
sub_4162bd
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_418647
pop ecx
pop ecx
retn
sub_4162f7
xor eax eax
inc eax
retn
_start
call sub_4223bc
jmp sub_416193
sub_4168af
push 0xc
push r--data
call sub_41718c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
sub_4168cc
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_416961
call sub_4168ff
mov [ rw-data ] eax
xor eax eax
retn
sub_4169e0
push 0x0
call sub_41696e
pop ecx
retn
sub_416a5b
call [ __import_lookup_table_0(KERNEL32:TlsAlloc) ]
retn 0x4
sub_416a64
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_416a7e
mov eax [ rw-data ]
retn
sub_416ab8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_4169e9
pop ecx
call eax
pop ebp
retn 0x8
sub_416be7
push 0xd
call sub_41832d
pop ecx
retn
sub_416bf0
push 0xc
call sub_41832d
pop ecx
retn
sub_416da6
push 0xd
call sub_41832d
pop ecx
retn
sub_416db2
push 0xc
call sub_41832d
pop ecx
retn
sub_417181
push 0x4
call sub_41832d
pop ecx
retn
sub_4171d1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41763d
push 0xd
call sub_41832d
pop ecx
retn
sub_417a08
push 0xd
call sub_41832d
pop ecx
retn
sub_417a41
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4178a7
pop ecx
mov [ rw-data ] 0x1
sub_417d78
push 0xc
call sub_41832d
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_417d84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417f6c
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_417fe6
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_413a88
pop ecx
sub_417ffc
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41802a
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_422ec8
pop ecx
retn
sub_41832d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4183fe
push 0xa
call sub_41832d
pop ecx
retn
sub_4185cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_4185fd
push 0x8
push r--data
call sub_41718c
call sub_416c72
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4230f5
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41861d
xor eax eax
inc eax
retn
sub_418636
push sub_4185fd
call sub_41696e
pop ecx
mov [ rw-data ] eax
retn
sub_4187a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4187fc
push [ rw-data ]
call sub_4169e9
pop ecx
retn
sub_41897d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_41832d
pop ecx
sub_4189b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4189c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4189d7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_418a07
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_418a1e
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4171d1
retn
push 0x8
call [ __import_lookup_table_0(KERNEL32:SetLastError) ]
sub_41ae89
retn
sub_41ae8a
mov eax sub_424ebb
mov [ rw-data ] eax
mov [ rw-data ] sub_4245a2
mov [ rw-data ] sub_424556
mov [ rw-data ] sub_42458f
mov [ rw-data ] sub_4244f8
mov [ rw-data ] eax
mov [ rw-data ] sub_424e33
mov [ rw-data ] sub_424514
mov [ rw-data ] sub_424476
mov [ rw-data ] sub_424403
retn
sub_41aeea
mov edi edi
push ebp
mov ebp esp
call sub_41ae8a
call sub_424f47
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_424ede
sub_41b8a6
xor eax eax
inc eax
retn
sub_41bad2
push 0xa
call sub_41832d
pop ecx
retn
sub_41bbd5
push 0xa
call sub_41832d
pop ecx
retn
sub_41bc93
push 0xb
call sub_41832d
pop ecx
retn
sub_41c4a1
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_41d1c0
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_41de50
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41de60
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41df1f
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41e3bb
push 0x1
call sub_41832d
pop ecx
retn
sub_41e49a
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_41e3c4
add esp 0xc
pop ebp
retn 0x4
sub_41e4cd
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_425ee5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41e500
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_41e3c4
add esp 0xc
pop ebp
retn 0x8
sub_41e676
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_41ee91
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_41f0a6
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_41f146
push 0x1
call sub_41832d
pop ecx
retn
sub_41f213
and [ ebp - 0x2c8 ] 0xfe
sub_41f589
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_41f593
or cl cl
je r-xdata
retn
fchs
sub_41f6b7
sub esp 0x2c
and eax 0x3f
jmp [ eax * 4 + rw-data ]
sub_41f6ca
add esp 0x2c
int 0x6
fdivr st0
add esp 0x2c
retn
sub_41f6d5
add esp 0x2c
int 0x6
fdiv st0
add esp 0x2c
retn
sub_41f6e0
fdivp st0
add esp 0x2c
retn
sub_41f6e6
fdivr st0
add esp 0x2c
retn
sub_41f6ec
fdivrp st0
add esp 0x2c
retn
sub_41f6f2
fstp [ esp + 0xc ]
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fld [ esp + 0x20 ]
fxch st1
add esp 0x2c
retn
sub_41f70e
add esp 0x2c
int 0x6
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_41f5a0
fld [ esp + 0xc ]
fxch st1
add esp 0x2c
retn
sub_41f729
add esp 0x2c
int 0x6
fxch st1
fstp [ esp + 0xc ]
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41f74a
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_41f5a0
add esp 0x2c
retn
sub_41f75a
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_41f5a0
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41f76e
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_41f5a0
add esp 0x2c
retn
sub_41f77e
fstp [ esp + 0xc ]
fxch st1
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st1
fld [ esp + 0x20 ]
fxch st2
add esp 0x2c
retn
sub_41f79e
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st1
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st1
fld [ esp + 0xc ]
fxch st2
add esp 0x2c
retn
sub_41f7e2
fstp [ esp ]
fxch st1
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st1
add esp 0x2c
retn
sub_41f7f6
fstp [ esp + 0xc ]
fxch st1
fstp [ esp ]
call sub_41f5a0
fxch st1
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41f80e
fstp [ esp + 0xc ]
fxch st1
fstp [ esp ]
call sub_41f5a0
fxch st1
add esp 0x2c
retn
sub_41f822
fstp [ esp + 0xc ]
fxch st2
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st2
fld [ esp + 0x20 ]
fxch st3
add esp 0x2c
retn
sub_41f842
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st2
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st2
fld [ esp + 0xc ]
fxch st3
add esp 0x2c
retn
sub_41f886
fstp [ esp ]
fxch st2
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st2
add esp 0x2c
retn
sub_41f89a
fstp [ esp + 0xc ]
fxch st2
fstp [ esp ]
call sub_41f5a0
fxch st2
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41f8b2
fstp [ esp + 0xc ]
fxch st2
fstp [ esp ]
call sub_41f5a0
fxch st2
add esp 0x2c
retn
sub_41f8c6
fstp [ esp + 0xc ]
fxch st3
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st3
fld [ esp + 0x20 ]
fxch st4
add esp 0x2c
retn
sub_41f8e6
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st3
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st3
fld [ esp + 0xc ]
fxch st4
add esp 0x2c
retn
sub_41f92a
fstp [ esp ]
fxch st3
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st3
add esp 0x2c
retn
sub_41f93e
fstp [ esp + 0xc ]
fxch st3
fstp [ esp ]
call sub_41f5a0
fxch st3
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41f956
fstp [ esp + 0xc ]
fxch st3
fstp [ esp ]
call sub_41f5a0
fxch st3
add esp 0x2c
retn
sub_41f96a
fstp [ esp + 0xc ]
fxch st4
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st4
fld [ esp + 0x20 ]
fxch st5
add esp 0x2c
retn
sub_41f98a
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st4
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st4
fld [ esp + 0xc ]
fxch st5
add esp 0x2c
retn
sub_41f9ce
fstp [ esp ]
fxch st4
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st4
add esp 0x2c
retn
sub_41f9e2
fstp [ esp + 0xc ]
fxch st4
fstp [ esp ]
call sub_41f5a0
fxch st4
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41f9fa
fstp [ esp + 0xc ]
fxch st4
fstp [ esp ]
call sub_41f5a0
fxch st4
add esp 0x2c
retn
sub_41fa0e
fstp [ esp + 0xc ]
fxch st5
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st5
fld [ esp + 0x20 ]
fxch st6
add esp 0x2c
retn
sub_41fa2e
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st5
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st5
fld [ esp + 0xc ]
fxch st6
add esp 0x2c
retn
sub_41fa72
fstp [ esp ]
fxch st5
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st5
add esp 0x2c
retn
sub_41fa86
fstp [ esp + 0xc ]
fxch st5
fstp [ esp ]
call sub_41f5a0
fxch st5
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41fa9e
fstp [ esp + 0xc ]
fxch st5
fstp [ esp ]
call sub_41f5a0
fxch st5
add esp 0x2c
retn
sub_41fab2
fstp [ esp + 0xc ]
fxch st6
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41f5a0
fxch st6
fld [ esp + 0x20 ]
fxch st7
add esp 0x2c
retn
sub_41fad2
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st6
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st6
fld [ esp + 0xc ]
fxch st7
add esp 0x2c
retn
sub_41fb16
fstp [ esp ]
fxch st6
fstp [ esp + 0xc ]
call sub_41f5a0
fxch st6
add esp 0x2c
retn
sub_41fb2a
fstp [ esp + 0xc ]
fxch st6
fstp [ esp ]
call sub_41f5a0
fxch st6
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41fb42
fstp [ esp + 0xc ]
fxch st6
fstp [ esp ]
call sub_41f5a0
fxch st6
add esp 0x2c
retn
sub_41fd7c
push eax
sub esp 0x2c
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_41f5a0
add esp 0x2c
pop eax
retn
sub_41fd91
push eax
sub esp 0x2c
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_41f5a0
add esp 0x2c
pop eax
retn
sub_420319
call sub_41ffac
retn
sub_42031f
call sub_420264
retn
sub_420325
fpatan
retn
sub_420328
fptan
retn
sub_42032b
mov edi edi
push ebp
mov ebp esp
call sub_420df1
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42033c
mov edi edi
push ebp
mov ebp esp
call sub_420df7
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42034d
mov edi edi
push ebp
mov ebp esp
call sub_420dfd
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42060a
push 0x7
call sub_41832d
pop ecx
retn
sub_420ab9
push 0x6
call sub_41832d
pop ecx
retn
sub_420afa
push 0x6
call sub_41832d
pop ecx
retn
sub_420df1
mov eax rw-data
retn
sub_420df7
mov eax rw-data
retn
sub_420dfd
mov eax rw-data
retn
sub_420e03
mov eax rw-data
retn
sub_421fa7
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_426243
retn
sub_421fd6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_425210
sub_42202e
push sub_421fec
call [ __import_lookup_table_0(KERNEL32:SetUnhandledExceptionFilter) ]
xor eax eax
retn
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
sub_42254e
push 0x4
call sub_41832d
pop ecx
retn
sub_4226b4
push 0x4
call sub_41832d
pop ecx
retn
sub_422c6a
call sub_416c72
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_417d0e
sub_422f2f
push 0xe
call sub_41832d
pop ecx
retn
sub_4230ec
push 0x2
call sub_4117af
pop ecx
retn
sub_4235f6
push [ ebp + 0x8 ]
call sub_41badb
pop ecx
retn
sub_423834
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_423961
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42384a
add esp 0x10
pop ebp
retn
sub_424556
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424514
add esp 0x10
pop ebp
retn
sub_42458f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_424403
pop ecx
pop ecx
pop ebp
retn
sub_4245a2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_424476
pop ecx
pop ecx
pop ebp
retn
sub_4253a7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42523b
add esp 0x14
pop ebp
retn
sub_4255c1
xor eax eax
retn
sub_425eb9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_425df0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_425f04
call eax
retn
sub_426046
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_426d2a
add esp 0xc
pop ebp
retn
sub_426d55
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_427045
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426f57
add esp 0x10
pop ebp
retn
sub_428e8c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428dd0
add esp 0xc
pop ebp
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_428f84
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld1
fld st1
fprem
f2xm1
faddp st1
fscale
fxch st1
fstp st0
retn 0x8
sub_428f9f
fld [ esp + 0x4 ]
fldln2
fxch st1
fyl2x
retn 0x8
sub_428fac
fld [ esp + 0x4 ]
fld1
fpatan
retn 0x8
sub_42901b
fld [ esp + 0x4 ]
fptan
fstp st0
retn 0x8
sub_429026
fld [ esp + 0x4 ]
fcos
retn 0x8
sub_42902f
fld [ esp + 0x4 ]
fsin
retn 0x8
sub_429038
fld [ esp + 0x4 ]
fabs
retn 0x8
sub_429041
fld [ esp + 0xc ]
fld [ esp + 0x4 ]
fprem
fxch st1
fstp st0
retn 0x10
sub_429052
fld [ esp + 0x4 ]
fsqrt
retn 0x8
sub_4290d2
sub ecx [ ecx - 0x4 ]
jmp sub_467022
sub_4290da
sub ecx [ ecx - 0x4 ]
jmp sub_44af2a
sub_4290e2
sub ecx [ ecx - 0x4 ]
jmp sub_404580
sub_42919b
call sub_40ef10
push j_sub_410540
call sub_411421
pop ecx
retn
sub_4291ac
call sub_40ef70
push j_sub_410a80
call sub_411421
pop ecx
retn
sub_4291bd
call sub_4106b0
push j_sub_410690
call sub_411421
pop ecx
retn
sub_4291ce
call sub_40c8f0
push sub_4292a4
call sub_411421
pop ecx
retn
sub_4291df
call sub_40ddd0
push j_sub_410560
call sub_411421
pop ecx
retn
sub_4291f0
call sub_40c480
push j_sub_4025a0
call sub_411421
pop ecx
retn
sub_429201
call sub_410b60
push j_sub_40e3b0
call sub_411421
pop ecx
retn
sub_429212
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
add eax rw-data
push eax
call sub_410b90
push j_sub_40ec80
call sub_411421
pop ecx
retn
sub_429231
push j_sub_410b50
call sub_411421
pop ecx
retn
sub_42923d
push ebx
push 0x10
push 0x40
mov ebx sub_410b08
pop eax
mov ecx rw-data
call sub_410b20
push sub_4292c3
call sub_411421
pop ecx
pop ebx
retn
sub_42925f
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_417fe6
j_sub_410b50
jmp sub_410b50
j_sub_410690
jmp sub_410690
j_sub_410540
jmp sub_410540
sub_429282
retn
j_sub_410a80
jmp sub_410a80
sub_429292
push esi
mov esi rw-data
call j_sub_4092c0
pop esi
retn
j_sub_410560
jmp sub_410560
sub_4292a4
push esi
mov esi rw-data
mov ecx esi
call sub_401c00
mov ecx esi
pop esi
jmp sub_44cc86
j_sub_40e3b0
jmp sub_40e3b0
j_sub_4025a0
jmp sub_4025a0
sub_4292c3
push sub_410ae0
push 0x40
push 0x10
push rw-data
call sub_410aa0
retn
j_sub_40ec80
jmp sub_40ec80
sub_4333c8
push edi
mov edi ecx
mov [ edi ] r--data
call sub_410620
mov eax [ edi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop edi
retn
sub_4333e4
mov eax [ esp + 0x4 ]
dec [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
push ecx
call sub_4112ef
pop ecx
retn 0x4
sub_433b9f
mov eax [ esp + 0x4 ]
push eax
call sub_433b0a
retn 0x8
sub_4340ec
mov eax [ esp + 0x4 ]
push 0xffffffe0
push eax
call [ __import_lookup_table_10(USER32:GetClassLongW) ]
retn
sub_43411f
xor eax eax
retn 0x10
sub_434153
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_434124
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn 0x4
sub_434199
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_43416a
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn 0x4
sub_4341b0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_434199
test al al
je r-xdata
mov eax sub_40c5f4
pop esi
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
retn 0x4
sub_4341cf
push esi
mov esi [ esp + 0x8 ]
push 0x0
call sub_414cef
mov [ esi ] eax
add esp 0x4
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
retn 0x4
sub_434222
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_4341e9
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop esi
retn
sub_43424d
mov eax [ esp + 0x4 ]
push eax
call sub_43423f
xor ecx ecx
test al al
sete cl
mov al cl
retn 0x4
sub_434263
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
xor eax eax
cmp edx [ esp + 0x8 ]
sete al
retn 0x8
sub_43428d
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_434263
xor ecx ecx
test al al
sete cl
mov al cl
retn 0x8
sub_43432b
xor eax eax
retn 0x20
sub_434330
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
cmp eax ecx
je r-xdata
retn 0x8
mov ecx [ ecx ]
mov [ eax ] ecx
sub_43445b
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4343ce
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn 0x4
sub_434472
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4343fd
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn 0x4
sub_4348b5
mov al [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp al [ ecx ]
jb r-xdata
xor eax eax
retn 0xc
mov edx [ esp + 0xc ]
cmp al [ edx ]
ja r-xdata
mov eax 0x1
retn 0xc
sub_4348d6
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
lea ecx [ eax + 0x5 ]
push ecx
add eax 0x4
push eax
push edx
call sub_4348b5
retn 0x8
sub_4348ef
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
lea ecx [ eax + 0x3 ]
push ecx
add eax 0x2
push eax
push edx
call sub_4348b5
retn 0x8
sub_434908
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
lea ecx [ eax + 0x1 ]
push ecx
push eax
push edx
call sub_4348b5
retn 0x8
sub_434b0b
mov eax [ esp + 0x4 ]
test eax eax
ja r-xdata
mov [ esp + 0x4 ] eax
jmp sub_41171a
xor eax eax
retn
sub_434b42
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
push eax
call [ SetEvent@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x4
sub_434f3b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410810
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop esi
retn
sub_434f57
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
retn 0x4
sub_434fe1
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
retn 0x4
push eax
call sub_414e94
pop ecx
sub_435625
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] ecx
test ecx ecx
jge r-xdata
retn 0x8
mov [ eax + 0x4 ] 0x0
sub_435644
mov eax [ esp + 0x4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x20
jl r-xdata
xor al al
retn 0x4
cmp ax 0x2f
jg r-xdata
mov al 0x1
retn 0x4
sub_435662
mov eax [ esp + 0x4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x10
jl r-xdata
xor al al
retn 0x4
cmp ax 0x1f
jg r-xdata
mov al 0x1
retn 0x4
sub_435680
mov eax [ esp + 0x4 ]
movzx eax [ eax + 0x8 ]
test ax ax
jl r-xdata
xor al al
retn 0x4
cmp ax 0xf
jg r-xdata
mov al 0x1
retn 0x4
sub_4356e7
mov eax [ esp + 0x4 ]
test [ eax ] 0x1
je r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax 0x1
retn 0x4
sub_435703
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
shr eax 0x3
and eax 0x1
retn 0x4
sub_435713
mov eax [ esp + 0x4 ]
test [ eax ] 0x4
je r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax 0x1
retn 0x4
sub_43572f
mov eax [ esp + 0x4 ]
test [ eax ] 0x2
je r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x1
retn 0x4
sub_4358e7
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80070057
retn 0x8
mov [ eax ] 0x1
xor eax eax
retn 0x8
sub_435902
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn 0x4
add eax 0x4
mov [ esp + 0x4 ] eax
jmp [ InterlockedIncrement@IAT ]
sub_437215
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
xor eax eax
cmp edx [ esp + 0x8 ]
sete al
retn 0x8
sub_437228
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_0(KERNEL32:FlushFileBuffers) ]
test eax eax
setne al
retn 0x4
sub_43723d
push esi
mov esi [ esp + 0x8 ]
call sub_40d900
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop esi
retn 0x4
sub_4376f2
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0xc ]
push eax
push ecx
push edx
call sub_414043
add esp 0xc
retn
sub_437a12
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x8 ] ax
setne al
retn 0x4
sub_437a31
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40ec50
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop esi
retn
sub_437a81
mov ecx [ rw-data ]
mov eax [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
retn 0x4
cmp eax [ rw-data ]
jg r-xdata
test eax eax
jle r-xdata
mov eax [ ecx + eax * 4 - 0x4 ]
retn 0x4
sub_437aa7
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jge r-xdata
xor eax eax
retn 0x4
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx ]
retn 0x4
sub_437b95
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
inc eax
cmp [ ecx + 0x8 ] eax
sbb eax eax
inc eax
retn 0x8
sub_437ba7
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
xor eax eax
cmp [ ecx ] 0x1
setg al
retn 0x4
sub_437be2
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x8 ]
mov eax [ eax ]
cmp edx ecx
jae r-xdata
add eax ecx
retn 0x8
add eax edx
retn 0x8
sub_437dac
xor eax eax
retn 0x4
sub_438301
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
mov [ esp + 0xc ] 0x1
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] edx
jmp [ __import_lookup_table_10(USER32:InvalidateRect) ]
sub_43832f
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ esp + 0x4 ] eax
jmp sub_4381d8
sub_43833f
mov eax 0x80004001
retn 0x4
sub_438347
mov eax 0x80004001
retn 0xc
sub_43834f
mov eax 0x80004001
retn 0x10
sub_43837c
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call [ __import_lookup_table_6(ole32:MkParseDisplayName) ]
retn 0x14
sub_438488
xor eax eax
inc eax
retn 0xc
sub_43848e
xor eax eax
inc eax
retn 0x8
sub_438494
mov eax 0x80004005
retn 0x8
sub_43849c
mov eax 0x80004001
retn 0x8
sub_438523
sub esp 0x10
cmp [ esp + 0x18 ] 0x0
je r-xdata
xor eax eax
add esp 0x10
retn 0x8
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
lea eax [ esp ]
push eax
push edx
call [ __import_lookup_table_10(USER32:GetClientRect) ]
sub_438573
xor eax eax
retn 0x8
sub_438578
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_43858a
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ esp + 0x4 ] eax
jmp sub_438079
sub_438625
mov eax 0x80020006
retn 0x18
sub_43862d
mov eax 0x80070057
retn 0x10
sub_438635
mov eax 0x80070057
retn 0x8
sub_4386ed
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x0
xor eax eax
retn 0x8
sub_43876e
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x1
xor eax eax
retn 0x4
sub_43877e
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x0
xor eax eax
retn 0x4
sub_43878e
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x1
xor eax eax
retn 0x4
sub_4387c6
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0x1
push 0x0
push edx
call [ __import_lookup_table_10(USER32:InvalidateRect) ]
sub_4387e7
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ esp + 0x8 ]
mov [ eax ] edx
sub_438802
mov eax [ esp + 0x10 ]
and [ eax ] 0x0
mov eax 0x80004001
retn 0x10
sub_438811
mov eax [ esp + 0x4 ]
dec [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
retn 0x4
sub_43881e
mov eax [ esp + 0x4 ]
inc [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
retn 0x4
sub_43882b
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
mov [ esp + 0x4 ] eax
jmp sub_4381d8
sub_43883b
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x1
push eax
call [ __import_lookup_table_0(KERNEL32:RaiseException) ]
retn
sub_43884d
retn 0x8
sub_438850
retn 0xc
sub_438853
xor eax eax
inc eax
retn 0x4
sub_438859
xor eax eax
retn 0xc
sub_43885e
retn 0x4
sub_438861
or eax 0xffffffff
retn 0x4
sub_438867
mov eax [ esp + 0x4 ]
cmp eax 0x4
jae r-xdata
retn 0x4
mov eax 0x4
sub_438878
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_10(USER32:IsWindowEnabled) ]
test eax eax
setne al
retn 0x4
sub_43888d
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push ecx
call [ __import_lookup_table_10(USER32:IsWindowVisible) ]
test eax eax
setne al
retn 0x4
sub_4388a2
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x10
push ecx
call [ PostMessageW@IAT ]
mov al 0x1
retn 0x4
sub_43895e
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x4 ] ecx
jmp sub_43893b
sub_438992
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x4 ] ecx
jmp sub_43896d
sub_438c09
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x1105
push ecx
call [ SendMessageW@IAT ]
retn 0x4
sub_438c22
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
push 0x2
push eax
push 0x102c
push edx
call [ SendMessageW@IAT ]
test eax eax
setne al
retn 0x8
sub_438c43
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x1032
push ecx
call [ SendMessageW@IAT ]
retn 0x4
sub_438c85
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0x1004
push ecx
call [ SendMessageW@IAT ]
retn 0x4
sub_438de3
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0xffffffff
push 0xc9
push ecx
call [ SendMessageW@IAT ]
mov edx [ esp + 0x8 ]
inc eax
mov [ edx ] eax
mov al 0x1
retn 0x8
sub_438e05
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0xba
push ecx
call [ SendMessageW@IAT ]
mov edx [ esp + 0x8 ]
mov [ edx ] eax
mov al 0x1
retn 0x8
sub_438e26
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push 0x0
push 0xf0
push ecx
call [ SendMessageW@IAT ]
cmp eax 0x1
sete al
retn 0x4
sub_438fcf
mov eax [ esp + 0x4 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
retn
sub_438fe4
push 0xc
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
retn
sub_439511
xor eax eax
retn
sub_439514
push 0x10
push r--data
push r--data
push 0x0
call [ __import_lookup_table_10(USER32:MessageBoxW) ]
push 0x1
call sub_411a1f
int3
sub_440e8e
push esi
mov esi ecx
call sub_4333c8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_440ec6
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_43817e
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44229a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_434153
test al al
je r-xdata
mov eax sub_43411f
pop esi
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
retn 0x4
sub_4423f1
add ecx 0x4
jmp sub_402620
sub_4423f9
mov eax [ esp + 0x4 ]
push 0xc
push eax
call sub_437215
retn 0x4
sub_44249d
push esi
mov esi ecx
call sub_434222
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_442504
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_43445b
test al al
je r-xdata
mov eax sub_43432b
pop esi
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
retn 0x4
sub_442542
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_434489
test al al
je r-xdata
mov eax sub_439511
pop esi
retn 0x4
mov eax [ esi + 0x8 ]
pop esi
retn 0x4
sub_442754
mov eax [ esp + 0x4 ]
push 0x9
push eax
call sub_437215
retn 0x4
sub_4427f7
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
push eax
call sub_4112ef
push esi
call sub_4112ef
add esp 0x8
mov eax esi
pop esi
retn 0x4
sub_44284d
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_442813
mov eax [ esi + 0x4 ]
push eax
call sub_4112ef
add esp 0x4
pop esi
retn
sub_442a81
mov eax [ esp + 0x4 ]
cmp [ eax + 0x30 ] 0x0
mov ecx [ esp + 0x8 ]
je r-xdata
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] eax
jmp sub_44297c
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] eax
jmp sub_44289d
sub_442c1c
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn 0x4
sub_442c43
mov eax [ esp + 0x4 ]
push 0x7
push eax
call sub_437215
retn 0x4
sub_442fb2
mov eax [ esp + 0x4 ]
push 0xa
push eax
call sub_437215
retn 0x4
sub_442fc1
push esi
mov esi ecx
call sub_434f3b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_442fef
mov edx [ esp + 0x4 ]
mov ecx [ edx ]
mov eax [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
retn 0x8
mov ecx [ ecx + 0x8 ]
mov [ edx ] ecx
sub_443107
push esi
mov esi [ esp + 0x8 ]
lea ecx [ esi + 0x18 ]
call sub_402620
lea ecx [ esi + 0x8 ]
call sub_402620
pop esi
retn 0x4
sub_443494
mov ecx [ esp + 0x4 ]
call sub_40cfb0
test al al
jne r-xdata
mov eax 0x1
retn
mov ecx [ esp + 0x8 ]
call sub_40cfb0
test al al
jne r-xdata
xor eax eax
retn
sub_4434b7
mov ecx [ esp + 0x4 ]
call sub_40cfb0
xor ecx ecx
test al al
sete cl
mov al cl
retn 0x4
sub_443560
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0xa
jne r-xdata
xor eax eax
retn 0x4
mov eax [ eax ]
mov eax [ eax ]
retn 0x4
sub_4436f6
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_402620
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_443aff
mov eax [ esp + 0x4 ]
lea ecx [ eax + 0x18 ]
push ecx
lea edx [ eax + 0x1c ]
push edx
push eax
call sub_443887
retn 0x4
sub_443c11
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_443dba
add ecx 0xc
jmp sub_402620
sub_443e43
mov eax [ esp + 0x4 ]
push 0x3
push eax
call sub_437215
retn 0x4
sub_443e52
mov eax [ esp + 0x4 ]
push 0x2
push eax
call sub_437215
retn 0x4
sub_443e70
push rw-data
call sub_43423f
test al al
je r-xdata
push rw-data
call sub_435959
mov eax [ eax + 0x4 ]
retn
xor eax eax
retn
sub_443f80
mov ecx [ esp + 0x4 ]
push rw-data
push sub_443f27
xor eax eax
push ecx
mov [ rw-data ] ax
call [ EnumChildWindows@IAT ]
mov eax rw-data
retn
sub_44404b
mov edx [ esp + 0x4 ]
mov cl [ esp + 0x8 ]
push rw-data
push sub_443fa3
xor eax eax
push edx
mov [ rw-data ] ax
mov [ rw-data ] cl
call [ EnumChildWindows@IAT ]
mov eax rw-data
retn
sub_444279
mov eax [ esp + 0x4 ]
push 0xb
push eax
call sub_437215
retn 0x4
sub_444309
push esi
mov esi [ esp + 0x8 ]
xor eax eax
push esi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call sub_40e190
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
pop esi
retn 0x4
sub_444326
mov eax [ esp + 0x4 ]
xor ecx ecx
cmp [ eax + 0x8 ] ecx
je r-xdata
retn 0x4
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ esp + 0x4 ] eax
jmp sub_4442c7
sub_4443d4
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0xc ]
push eax
mov ebx 0x1
call sub_403d40
test eax eax
pop esi
setne al
pop ebx
retn 0x8
sub_4444e4
push esi
mov esi [ esp + 0x8 ]
call sub_40d900
xor eax eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
call sub_402620
push esi
call sub_43723d
pop esi
retn 0x4
sub_44478f
push esi
mov esi [ esp + 0x8 ]
lea ecx [ esi + 0x8 ]
call sub_402620
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44501b
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov eax [ eax ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
retn 0x8
sub_445033
push esi
mov esi ecx
call sub_437a31
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_44530d
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
add eax 0xf
shr eax 0x4
shl eax 0x4
retn 0x4
mov eax 0x10
retn 0x4
sub_4454f9
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_438463
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_4457dc
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_445719
retn 0x8
sub_44589c
mov eax [ esp + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
jmp sub_445840
sub_445a31
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_4459ab
retn 0x8
sub_445a43
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_445a57
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ edx ]
mov edx [ edx + 0x4 ]
push eax
mov eax [ esp + 0x14 ]
call sub_40e740
retn 0xc
sub_445c97
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push ecx
push 0x1
push 0xc2
push eax
call [ SendMessageW@IAT ]
mov al 0x1
retn 0x8
sub_446547
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
add eax 0x7
shr eax 0x3
add eax eax
add eax eax
add eax eax
retn 0x4
mov eax 0x8
retn 0x4
sub_447b4e
mov eax [ esp + 0x4 ]
push eax
push rw-data
call sub_4340b2
mov [ esp + 0x4 ] eax
jmp sub_441b06
sub_447ce0
push esi
mov esi [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_402620
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_447d25
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
retn 0x4
mov [ esp + 0x4 ] eax
jmp sub_447ce0
sub_447d79
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_447d25
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_447e59
push esi
mov esi [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_40c060
mov eax esi
pop esi
retn 0x4
sub_449463
push esi
call sub_413f97
add esp 0x4
call sub_4290f0
mov [ ebx + 0x48 ] eax
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2108
retn 0xc
sub_44a56a
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn 0x4
sub_44a582
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_40c060
mov eax esi
pop esi
retn
sub_44a727
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
test eax eax
setne dl
mov [ rw-data ] dl
xor eax eax
retn 0x8
sub_44a7a2
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
call sub_40c760
push eax
call sub_4353b4
add esp 0x4
xor eax eax
retn 0x8
sub_44a7be
push esi
mov esi ecx
call sub_44284d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_44ae24
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
retn 0x4
mov [ esp + 0x4 ] eax
jmp sub_4436f6
sub_44ae3a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44ae24
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44afc1
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_410a20
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44b3b8
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_443dea
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44b3d2
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x10 ]
mov ecx [ ecx + 0x14 ]
inc [ ecx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
retn 0x8
sub_44b3f6
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_40c060
mov eax esi
pop esi
retn 0x4
sub_44b5e7
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0x1f4
retn 0x4
mov [ esp + 0x4 ] eax
jmp sub_44b474
sub_44b791
mov eax [ esp + 0x4 ]
push eax
call sub_44b6e5
neg eax
sbb eax eax
neg eax
retn 0x4
sub_44b85f
push ecx
call sub_44b6e5
movzx eax al
shr eax 0x2
and eax 0x1
retn
sub_44b86f
push ecx
call sub_44b6e5
movzx eax al
shr eax 0x1
and eax 0x1
retn
sub_44b915
push esi
mov esi [ esp + 0x8 ]
call sub_4092c0
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44b951
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
call sub_40c060
mov eax esi
pop esi
retn
sub_44c2a2
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_444288
sub eax [ esi + 0x10 ]
sbb edx [ esi + 0x14 ]
pop esi
retn 0x4
sub_44c7f2
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44b453
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44cbb9
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_445513
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44cc52
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ edi + 0x20 ]
call sub_4092c0
mov esi edi
call sub_4092c0
pop edi
pop esi
retn 0x4
sub_44cc6c
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44cc52
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_44cc86
mov [ ecx ] r--data
lea eax [ ecx + 0x4 ]
jmp sub_410850
sub_44cd47
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_445975
xor ecx ecx
add esp 0x8
test al al
sete cl
mov al cl
retn
sub_44cdbf
push esi
mov esi ecx
call sub_410a20
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_451c08
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_451bdd
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_451ea5
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44ac2d
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_451f8b
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
retn 0x4
mov [ esp + 0x4 ] eax
jmp sub_451ea5
sub_451fe2
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_451f8b
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_4522ea
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_44b87e
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_452304
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
retn 0x4
mov [ esp + 0x4 ] eax
jmp sub_4522ea
sub_45231a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_452304
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_45234f
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_452334
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_452369
push esi
mov esi [ esp + 0x8 ]
lea ecx [ esi + 0x38 ]
call sub_402620
lea ecx [ esi + 0x18 ]
call sub_402620
add esi 0x8
call sub_4092c0
pop esi
retn 0x4
sub_45238a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_452369
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_4547ff
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push eax
call sub_44cbb9
mov [ esi + 0x78 ] 0x0
sub_4548c0
push esi
mov esi ecx
call sub_44cc86
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_457df8
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
push esi
mov esi [ esp + 0xc ]
push esi
push edx
push eax
push 0x0
push ecx
call sub_457c08
pop esi
retn 0x8
sub_45935e
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push 0x1
push ecx
push eax
call sub_458f3f
retn 0x8
sub_459371
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push 0x0
push ecx
push eax
call sub_458f3f
retn 0x8
sub_459966
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push 0x2
push ecx
push eax
call sub_459384
retn 0x8
sub_459979
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push 0x0
push ecx
push eax
call sub_459384
retn 0x8
sub_4599bd
call sub_43604b
test al al
jne r-xdata
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0xc ]
call sub_4092c0
mov [ esi + 0x8 ] 0x1
mov [ esi ] 0x0
pop esi
sub_45a2d3
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push eax
call sub_453081
mov edx [ rw-data ]
push eax
push edx
call [ SetWindowTextW@IAT ]
xor eax eax
retn 0x8
sub_45a407
push esi
mov esi [ esp + 0xc ]
call sub_40d500
mov eax [ esp + 0x8 ]
push esi
push eax
call sub_45efe7
mov eax esi
pop esi
retn 0x8
sub_45b397
mov eax [ esp + 0x4 ]
push eax
add ecx 0x44
push ecx
call sub_45b2b5
add esp 0x8
xor eax eax
retn 0x8
sub_45b3ad
mov eax [ esp + 0x4 ]
push eax
add ecx 0x10
push ecx
call sub_45b2b5
add esp 0x8
xor eax eax
retn 0x8
sub_45b450
push esi
mov esi [ esp + 0x8 ]
add esi 0x88
mov eax esi
call sub_40df10
mov ecx esi
call sub_44cc86
pop esi
retn 0x4
sub_45b46d
push esi
lea esi [ ecx - 0x88 ]
push esi
call sub_45b450
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_45ee38
push esi
mov esi ecx
call sub_4531b3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_45ee56
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4531f4
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_460309
push esi
mov esi [ esp + 0x8 ]
push r--data
lea eax [ esi + 0x34 ]
call sub_4021e0
mov eax [ esi + 0x54 ]
push 0x2
push eax
call [ __import_lookup_table_10(USER32:EndDialog) ]
pop esi
retn 0x4
sub_460772
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_460473
retn 0x8
sub_4643f4
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x1
push 0x0
push ecx
call sub_463f19
retn 0x8
sub_46440b
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x0
push 0x0
push ecx
call sub_463f19
retn 0x8
sub_465d24
push esi
mov esi [ esp + 0xc ]
mov ecx esi
call sub_40c060
mov eax [ esp + 0x8 ]
push esi
push eax
call sub_464727
mov eax esi
pop esi
retn 0x8
sub_465fb6
mov eax [ esp + 0x4 ]
push 0x1
push eax
call sub_465e8e
retn
sub_466df8
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
push 0x0
push edx
mov edx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_466999
retn 0x8
sub_466e11
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
push 0x1
push edx
mov edx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_466999
retn 0x8
sub_467022
push esi
lea esi [ ecx - 0x49c ]
mov eax esi
call sub_410830
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_4671e2
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
call sub_40c770
xor ecx ecx
test al al
sete cl
mov al cl
pop esi
retn
sub_4671fb
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
call sub_40c770
xor ecx ecx
test al al
sete cl
mov al cl
pop esi
retn
sub_468804
cmp [ rw-data ] 0x0
jne r-xdata
jmp sub_468744
xor eax eax
retn 0x10
sub_468817
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
push 0x0
push sub_468804
push edx
push 0x3e8
push eax
mov [ rw-data ] ecx
call [ __import_lookup_table_10(USER32:DialogBoxParamW) ]
mov [ rw-data ] 0x0
retn 0x8
sub_469157
push ecx
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_46128b
test eax eax
setne al
pop ecx
retn 0x8
sub_469aee
mov ecx [ esp + 0x4 ]
cmp [ ecx + 0x8 ] 0x0
mov eax 0x1
jbe r-xdata
push eax
call sub_46804f
retn 0x8
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_40c760
sub_469bc3
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x1
push ecx
call sub_46242c
retn 0x8
sub_469bd8
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x0
push ecx
call sub_46242c
retn 0x8
sub_46d22f
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x0
push eax
push edx
push ecx
call sub_46d098
retn 0x8
sub_46d244
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x1
push eax
push edx
push ecx
call sub_46d098
retn 0x8
sub_46def9
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push sub_44b85f
push sub_46d2a0
push sub_46d259
push eax
push edx
push ecx
call sub_46a5e3
retn 0x8
sub_46df1b
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push sub_44b86f
push sub_4677ad
push sub_467775
push eax
push edx
push ecx
call sub_46a5e3
retn 0x8
sub_46e6eb
push esi
mov esi ecx
call sub_410ae0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4112ef
add esp 0x4
sub_46e7ac
push 0x0
call sub_46e779
mov eax [ esp + 0x4 ]
retn 0x4
sub_46e877
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_46e849
push esi
call sub_4112ef
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_46f70d
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x1
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_46f50b
retn 0x10
sub_46f72b
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x0
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_46f50b
retn 0x10
sub_474d16
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push ebx
mov ebx [ esp + 0xc ]
push edx
call sub_409210
push ebx
call sub_467046
xor eax eax
pop ebx
retn 0x8
sub_47be42
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x15
push ecx
call sub_47bb2b
retn 0x8
sub_47be57
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x16
push ecx
call sub_47bb2b
retn 0x8
sub_47be6c
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x11
push ecx
call sub_47bb2b
retn 0x8
sub_47be81
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x10
push ecx
call sub_47bb2b
retn 0x8
sub_47be96
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0xb
push ecx
call sub_47bb2b
retn 0x8
sub_47beab
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0xa
push ecx
call sub_47bb2b
retn 0x8
sub_47bec0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x1a
push ecx
call sub_47bb2b
retn 0x8
sub_47bed5
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x12
push ecx
call sub_47bb2b
retn 0x8
sub_47beea
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x8
push ecx
call sub_47bb2b
retn 0x8
sub_47beff
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x6
push ecx
call sub_47bb2b
retn 0x8
sub_47bf14
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0xf
push ecx
call sub_47bb2b
retn 0x8
sub_47bf29
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0xe
push ecx
call sub_47bb2b
retn 0x8
sub_47bf3e
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x14
push ecx
call sub_47bb2b
retn 0x8
sub_47bf53
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x13
push ecx
call sub_47bb2b
retn 0x8
sub_47bf68
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x1
push ecx
call sub_47bb2b
retn 0x8
sub_47bf7d
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x3
push ecx
call sub_47bb2b
retn 0x8
sub_47bf92
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x7
push ecx
call sub_47bb2b
retn 0x8
sub_47bfa7
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x4
push ecx
call sub_47bb2b
retn 0x8
sub_47bfbc
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x1b
push ecx
call sub_47bb2b
retn 0x8
sub_47bfd1
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x2
push ecx
call sub_47bb2b
retn 0x8
sub_47bfe6
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x1c
push ecx
call sub_47bb2b
retn 0x8
sub_47bffb
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x5
push ecx
call sub_47bb2b
retn 0x8
sub_47c010
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0xc
push ecx
call sub_47bb2b
retn 0x8
sub_47c025
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x0
push ecx
call sub_47bb2b
retn 0x8
sub_47c03a
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x19
push ecx
call sub_47bb2b
retn 0x8
sub_47c04f
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x18
push ecx
call sub_47bb2b
retn 0x8
sub_47c064
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x17
push ecx
call sub_47bb2b
retn 0x8
sub_47c079
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
push 0x9
push ecx
call sub_47bb2b
retn 0x8
j_sub_47d511
jmp sub_47d511
j_sub_47de39
jmp sub_47de39
