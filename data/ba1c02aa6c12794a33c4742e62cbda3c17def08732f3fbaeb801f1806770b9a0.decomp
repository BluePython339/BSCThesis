sub_10001000
mov eax 0x10
push esi
movzx eax [ edx ]
movzx esi [ ecx ]
sub eax esi
jne r-xdata
sub eax 0x4
add ecx 0x4
add edx 0x4
cmp eax 0x4
jae r-xdata
sar eax 0x1f
or eax 0x1
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
retn
movzx eax [ edx + 0x1 ]
movzx esi [ ecx + 0x1 ]
sub eax esi
jne r-xdata
mov esi [ edx ]
cmp esi [ ecx ]
jne r-xdata
xor eax eax
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
retn
movzx eax [ edx + 0x2 ]
movzx esi [ ecx + 0x2 ]
sub eax esi
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_10001070
push ebp
mov ebp esp
mov eax 0x1
sub [ rw-data ] eax
push esi
mov esi ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10008fe4
add esp 0x4
sub_100010c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
xor eax eax
sub_100010e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx r--data
mov edx esi
call sub_10001000
test eax eax
je r-xdata
mov ecx r--data
mov edx esi
call sub_10001000
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_10001150
push ebp
mov ebp esp
mov eax 0x1
sub [ rw-data ] eax
push esi
mov esi ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10008fe4
add esp 0x4
sub_10001180
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push 0x1
call edx
xor eax eax
sub_100011a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx r--data
mov edx esi
call sub_10001000
test eax eax
je r-xdata
mov ecx r--data
mov edx esi
call sub_10001000
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_10001210
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push edi
mov edi [ ebp + 0x14 ]
push 0x4
push edi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040110
pop ebp
retn 0x10
push esi
push 0x8
mov [ edi ] 0x0
call sub_1000906f
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax 0x80004003
pop edi
pop ebp
retn 0x10
pop esi
mov eax 0x8007000e
pop edi
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
inc [ rw-data ]
push edi
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
mov edx [ eax ]
push ecx
push esi
call edx
mov edi eax
test edi edi
jns r-xdata
pop esi
mov eax edi
pop edi
pop ebp
retn 0x10
mov eax [ esi ]
mov edx [ eax + 0xc ]
push 0x1
mov ecx esi
call edx
sub_100012d0
mov eax [ rw-data ]
push esi
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x14 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x1c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x20 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x24 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x28 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x2c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x30 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x34 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x44 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x54 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x88 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x5c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x60 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x64 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x6c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x70 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x74 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x80 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x8c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x130 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x138 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x108 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x78 ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x90 ] eax
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x68 ] eax
test eax eax
je r-xdata
push ebx
mov ebx [ LoadLibraryA@IAT ]
push rw-data
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
pop ebx
xor eax eax
pop esi
retn
push rw-data
push eax
call esi
mov edx [ rw-data ]
mov [ edx + 0x94 ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x98 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x9c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa0 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x170 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x174 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x158 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x15c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x160 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x164 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x168 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x16c ] eax
test eax eax
jne r-xdata
push edi
push rw-data
call ebx
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
xor eax eax
pop esi
retn
push rw-data
push edi
call esi
mov edx [ rw-data ]
mov [ edx + 0xc0 ] eax
test eax eax
je r-xdata
push rw-data
push edi
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc4 ] eax
test eax eax
je r-xdata
push rw-data
push edi
call esi
mov edx [ rw-data ]
mov [ edx + 0xcc ] eax
test eax eax
je r-xdata
push rw-data
push edi
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xd0 ] eax
test eax eax
je r-xdata
push rw-data
push edi
call esi
mov edx [ rw-data ]
mov [ edx + 0xe0 ] eax
test eax eax
je r-xdata
push rw-data
push edi
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xe4 ] eax
test eax eax
je r-xdata
push rw-data
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push rw-data
push eax
call esi
mov edx [ rw-data ]
mov [ edx + 0xf0 ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xf4 ] eax
test eax eax
je r-xdata
push rw-data
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push rw-data
push eax
call esi
mov edx [ rw-data ]
mov [ edx + 0xdc ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xd4 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x13c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x150 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc8 ] eax
test eax eax
je r-xdata
push rw-data
call ebx
mov edi eax
test edi edi
je r-xdata
push rw-data
push edi
call esi
mov edx [ rw-data ]
mov [ edx + 0xbc ] eax
test eax eax
je r-xdata
push rw-data
push edi
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x154 ] eax
test eax eax
je r-xdata
push rw-data
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push rw-data
push eax
call esi
mov edx [ rw-data ]
mov [ edx + 0x12c ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x17c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x10c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x128 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x124 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x11c ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x118 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x110 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x120 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x114 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x180 ] eax
test eax eax
je r-xdata
push rw-data
push rw-data
call ebx
push eax
call esi
mov edx [ rw-data ]
mov [ edx + 0x134 ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
push rw-data
push ecx
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
xor ecx ecx
test eax eax
setne cl
pop edi
pop ebx
mov [ rw-data ] eax
pop esi
mov eax ecx
retn
sub_10001cb0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x838
push rw-data
mov [ ebp - 0xc ] 0x17b84f5a
mov [ ebp - 0x8 ] 0x684e
call sub_10003eb0
push rw-data
call [ LoadLibraryA@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push rw-data
push ecx
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
lea edx [ ebp - 0xc ]
push edx
push 0x0
push 0x46f
push rw-data
mov [ ebp - 0xc ] 0x2d7f6729
mov [ ebp - 0x8 ] 0x415e
call sub_10003eb0
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push rw-data
push ecx
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
call [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push 0x184
push 0x8
push eax
call [ rw-data ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
call sub_100012d0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
inc eax
pop esi
call sub_10008fd5
mov esp ebp
pop ebp
retn
sub_10001e20
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
mov [ rw-data ] 0x0
call [ HeapFree@IAT ]
retn
push 0x0
mov [ rw-data ] 0x0
call [ HeapDestroy@IAT ]
sub_10001e60
push ebp
mov ebp esp
sub esp 0x1c
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
cmp [ ebp - 0x18 ] 0x16
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
call [ rw-data ]
lea edx [ ebp - 0x1c ]
push edx
call [ rw-data ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
mov edx [ ecx + 0x88 ]
push eax
call edx
mov eax [ rw-data ]
mov ecx [ eax + 0x68 ]
push 0x3e8
call ecx
sub_10001f00
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push 0x1
push rw-data
push eax
call [ GetProcAddress@IAT ]
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xc ]
push rw-data
call edx
call sub_10006f70
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x54 ]
push 0x0
push 0x0
push 0x1
push 0x0
call ecx
mov edx [ rw-data ]
push 0xd0
push 0x8
push edx
mov [ rw-data ] eax
call [ rw-data ]
mov [ rw-data ] eax
call sub_10003260
call sub_10007ae0
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0xd4 ]
push eax
call edx
test eax eax
je r-xdata
call sub_100073d0
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_100055a0
mov ecx [ rw-data ]
mov edx [ ecx + 0x78 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push sub_10005440
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x0
call edx
call sub_10008a90
push 0xffffffff
push 0x0
push 0x4
push rw-data
mov esi eax
call sub_10008b60
call sub_10001e60
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
push 0xffffffff
push eax
call edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0xd4 ]
push eax
call edx
test eax eax
je r-xdata
call sub_10006320
xor esi esi
cmp [ rw-data ] esi
jbe r-xdata
call sub_10006380
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
push 0xffffffff
push esi
call ecx
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push 0x0
push eax
call [ rw-data ]
call sub_100073d0
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
push rw-data
call edx
pop esi
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi * 4 + rw-data ]
test ecx ecx
je r-xdata
inc esi
cmp esi [ rw-data ]
jb r-xdata
push 0x0
call sub_10007880
sub_100020a0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
push r--data
push 0x1
push esi
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
call sub_10001cb0
test eax eax
je r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] esi
jne r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push esi
push esi
push sub_10001f00
push esi
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x78 ]
call eax
mov [ rw-data ] eax
cmp eax esi
je r-xdata
mov esi 0x1
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100021c2
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10002200
push ebp
mov ebp esp
push ecx
sub [ ebp + 0x8 ] 0x4
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
add esi 0x4
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ebx [ esi ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
add esi 0x4
push esi
call ecx
mov edi eax
mov edx 0xfffffffb
sub edx edi
add [ ebp + 0x8 ] edx
js r-xdata
pop edi
pop esi
mov eax 0xeeeeeef4
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
mov ecx edi
mov edx ebx
call sub_10007430
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
inc eax
lea esi [ esi + edi + 0x1 ]
mov [ ebp + 0xc ] eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
sub_10002280
push ebp
mov ebp esp
mov eax 0x1004
call sub_1000d8d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor eax eax
push 0x7fe
push eax
lea ecx [ ebp - 0x802 ]
push ecx
mov [ ebp - 0x804 ] ax
call sub_1000c4d0
xor edx edx
push 0x7fe
push edx
lea eax [ ebp - 0x1002 ]
push eax
mov [ ebp - 0x1004 ] dx
call sub_1000c4d0
mov edx [ rw-data ]
mov eax [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0x18
push 0x400
lea ecx [ ebp - 0x804 ]
push ecx
push edx
push rw-data
push eax
call esi
call eax
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
push edi
mov edi [ rw-data ]
lea ecx [ ebp - 0x804 ]
push ecx
call [ rw-data ]
mov ecx [ edi + 0xc4 ]
add eax eax
push eax
lea edx [ ebp - 0x804 ]
push edx
lea eax [ ebp - 0x1004 ]
push eax
call ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xc8 ]
add esp 0xc
lea edx [ ebp - 0x1004 ]
push edx
call ecx
mov eax [ rw-data ]
mov ecx [ eax + 0x2c ]
push rw-data
lea edx [ ebp - 0x1004 ]
push edx
call ecx
mov ecx [ rw-data ]
push 0x1
lea edx [ ebp - 0x1004 ]
push edx
lea eax [ ebp - 0x804 ]
push eax
push rw-data
push ecx
call esi
call eax
pop edi
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
push edx
push ebx
lea eax [ ebp - 0x804 ]
call sub_10004830
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
sub_100023e0
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
add esi 0x4
push esi
mov [ ebp - 0x94 ] 0x0
mov [ ebp - 0x8c ] eax
call edx
mov edi [ ebp + 0x8 ]
mov ecx 0xfffffffb
sub ecx eax
add edi ecx
jns r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push ebx
push esi
call eax
lea ebx [ esi + eax + 0x1 ]
mov eax [ ebx ]
sub edi eax
sub edi 0x4
mov [ ebp - 0x88 ] eax
jns r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
xor ecx ecx
push 0x7e
push ecx
lea edx [ ebp - 0x82 ]
push edx
mov [ ebp - 0x84 ] cx
call sub_1000c4d0
mov ecx [ rw-data ]
mov edx [ ecx + 0xe4 ]
mov edi esi
push edi
push rw-data
lea eax [ ebp - 0x84 ]
push 0x40
push eax
call edx
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
add esp 0x1c
push 0x0
push 0x6
push 0x2
push 0x0
push 0x0
push 0x40000000
lea eax [ ebp - 0x84 ]
push eax
call edx
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop ebx
pop edi
mov eax 0xeeeeeef4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
pop esi
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov edx [ rw-data ]
mov eax [ edx + 0x1c ]
push rw-data
push 0x0
push rw-data
push esi
call eax
test eax eax
je r-xdata
mov edx [ ebp - 0x88 ]
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx [ eax + 0x18 ]
push edx
add ebx 0x4
push ebx
push esi
call ecx
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x24 ]
call edx
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov edx [ rw-data ]
mov eax [ edx + 0x14 ]
push esi
call eax
mov ecx [ ebp - 0x8c ]
mov edx edi
call sub_100076f0
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
sub_100025b0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] al
mov [ ebp - 0x23 ] eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] eax
mov [ ebp - 0xf ] eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] ax
mov [ ebp - 0x5 ] al
mov eax [ rw-data ]
xor edi edi
push eax
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x30 ] edi
call sub_10003620
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x2c ]
mov al [ ecx + edi + 0x10 ]
movzx esi al
lea edx [ esi + 0x1 ]
cmp edx 0x20
ja r-xdata
inc edi
cmp edi 0xa
jl r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ edi + 0xa ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
call sub_100038e0
mov ecx [ rw-data ]
lea eax [ ebp - 0x24 ]
mov [ ebp + esi - 0x24 ] 0xa
mov [ ebp + esi - 0x23 ] 0x0
mov edx [ ecx + 0x10 ]
push eax
call edx
push eax
lea eax [ ebp - 0x24 ]
push eax
push ebx
call sub_10006a30
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0xa0 ]
push eax
call edx
xor eax eax
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
sub_100026a0
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx 0x1
push eax
lea edx [ ecx + 0x7 ]
mov [ ebp - 0x1 ] 0x31
call sub_10007430
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + 0x54 ]
push eax
push eax
push eax
push eax
call edx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x78 ]
push rw-data
push 0x0
push 0x0
push sub_100060b0
push 0x0
push 0x0
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x24 ]
mov [ rw-data ] eax
call edx
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
mov esp ebp
pop ebp
retn 0xc
sub_10002720
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx 0x1
push eax
lea edx [ ecx + 0x7 ]
mov [ ebp - 0x1 ] 0x30
call sub_10007430
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
call sub_10006380
sub_10002790
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push esi
call sub_10004660
pop esi
pop ebp
retn 0xc
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
sub_100027c0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push eax
call [ rw-data ]
lea ebx [ eax + eax + 0x2 ]
sub [ ebp + 0x8 ] ebx
js r-xdata
pop edi
pop esi
mov eax 0xeeeeeef4
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ rw-data ]
xor edi edi
xor eax eax
mov [ ebp - 0x4 ] edi
test edx edx
je r-xdata
mov esi 0xeeeeeeef
xor eax eax
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ esi + 0x4 ]
push 0x6
push esi
push eax
push edi
call sub_10008b60
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + eax * 8 ]
test eax eax
jne r-xdata
inc eax
add ecx 0x8
cmp eax edx
jb r-xdata
add [ ebp + 0xc ] ebx
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push ebx
call eax
mov edi [ ebp - 0x4 ]
mov esi eax
test edi edi
jne r-xdata
cmp [ ecx ] 0x6
je r-xdata
mov esi 0xeeeeeeef
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x44 ]
push edi
push 0x0
push eax
call edx
mov edi [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
sub_100028a0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call [ rw-data ]
mov esi [ ebp + 0x8 ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add esi ecx
jns r-xdata
push ebx
push edi
call [ rw-data ]
mov edx [ edi + eax * 2 + 0x2 ]
lea ebx [ edi + eax * 2 + 0x2 ]
push edi
mov [ ebp + 0xc ] edx
call [ rw-data ]
add eax eax
push eax
mov eax [ ebp + 0x10 ]
push edi
push eax
call sub_10006a30
mov eax [ ebp + 0xc ]
sub esi eax
sub esi 0x4
jns r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
push eax
add ebx 0x4
push ebx
mov eax edi
call sub_10004830
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
pop ebx
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
sub_10002920
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
push esi
call [ rw-data ]
add eax eax
push eax
push esi
push edi
call sub_10006a30
push esi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
mov ecx [ rw-data ]
push esi
push rw-data
push ecx
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + 0x28 ]
push esi
call edx
test eax eax
je r-xdata
xor edx edx
push 0x3fe
push edx
lea eax [ ebp - 0x402 ]
push eax
mov [ ebp - 0x404 ] dx
call sub_1000c4d0
mov edx [ rw-data ]
mov eax [ edx + 0xe4 ]
push esi
push rw-data
lea ecx [ ebp - 0x404 ]
push 0x200
push ecx
call eax
add esp 0x1c
push edi
lea ecx [ ebp - 0x404 ]
call sub_10007ea0
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
sub_10002a30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
mov [ ebp + 0xc ] esi
call [ rw-data ]
mov edi [ ebp + 0x8 ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
jns r-xdata
push esi
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
add eax eax
mov edx 0xfffffffe
sub edx eax
add edi edx
js r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx [ eax + 0x13c ]
push ebx
push esi
call ecx
push esi
mov ebx eax
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
lea edx [ eax + eax + 0x2 ]
sub edi edx
jns r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x13c ]
push esi
call ecx
mov edx [ ebp + 0x10 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push ebx
push eax
call sub_100048c0
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
pop ebx
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
sub_10002ae0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ ebp + 0xc ]
pop edi
pop esi
mov eax 0xeeeeeef4
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ esi + 0x4 ]
mov edx [ rw-data ]
xor ebx ebx
add esi 0x8
xor eax eax
mov [ ebp - 0x8 ] edi
mov [ ebp + 0xc ] ebx
test edx edx
je r-xdata
mov edi 0xeeeeeeef
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0x4
mov edx [ ebp - 0x8 ]
push edx
push edi
push eax
push ebx
call sub_10008b60
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + eax * 8 ]
test eax eax
jne r-xdata
inc eax
add ecx 0x8
cmp eax edx
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
lea esi [ esi + ecx - 0x8 ]
ja r-xdata
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
mov ecx [ ebp - 0x4 ]
lea edx [ ebp + 0xc ]
push edx
push esi
add ecx 0xfffffff8
push ecx
call eax
mov ebx [ ebp + 0xc ]
mov edi eax
test ebx ebx
jne r-xdata
cmp [ ecx ] edi
je r-xdata
mov edi 0xeeeeeeef
xor eax eax
jmp r-xdata
mov eax [ esi ]
sub [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] eax
js r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
push ebx
push 0x0
push edx
call ecx
mov ebx [ ebp + 0xc ]
xor eax eax
jmp r-xdata
sub_10002bd0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
add esi 0x4
sub eax 0x4
mov [ ebp - 0x4 ] 0x0
jns r-xdata
mov edx [ rw-data ]
push edi
mov edi [ GetProcAddress@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x40
push eax
push esi
push rw-data
push edx
mov [ ebp + 0x8 ] 0x0
call edi
call eax
test eax eax
je r-xdata
mov eax 0xeeeeeef4
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + 0x78 ]
lea eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
push esi
push 0x0
push 0x0
call edx
mov esi eax
test esi esi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x24 ]
call edx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
push 0xffffffff
push esi
call ecx
mov eax [ rw-data ]
lea edx [ ebp - 0x4 ]
push edx
push esi
push rw-data
push eax
call edi
call eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10002c90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ rw-data ]
mov edi [ ebp + 0x8 ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
jns r-xdata
call sub_100080a0
mov [ ebp + 0xc ] eax
push esi
test eax eax
je r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
call [ rw-data ]
mov edx [ ebp + 0x10 ]
add eax eax
push eax
push esi
push edx
call sub_10006a30
pop edi
mov eax 0xeeeeeef1
pop esi
pop ebp
retn 0xc
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
add eax eax
mov edx 0xfffffffe
sub edx eax
add edi edx
js r-xdata
push ebx
push esi
call [ rw-data ]
lea ebx [ esi + eax * 2 + 0x2 ]
push ebx
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
sub edi eax
jns r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x13c ]
push ebx
call edx
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push eax
push ecx
call sub_10008120
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
pop ebx
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
sub_10002d50
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ rw-data ]
mov edi [ ebp + 0x8 ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
jns r-xdata
call sub_100080a0
mov [ ebp + 0x8 ] eax
push esi
test eax eax
je r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
call [ rw-data ]
mov ecx [ ebp + 0x10 ]
add eax eax
push eax
push esi
push ecx
call sub_10006a30
pop edi
mov eax 0xeeeeeef1
pop esi
pop ebp
retn 0xc
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
add eax eax
mov edx 0xfffffffe
sub edx eax
add edi edx
js r-xdata
push ebx
push esi
call [ rw-data ]
lea ebx [ esi + eax * 2 + 0x2 ]
push ebx
call [ rw-data ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
js r-xdata
pop ebx
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
push ebx
call [ rw-data ]
lea eax [ ebx + eax * 2 + 0x2 ]
push eax
mov [ ebp + 0xc ] eax
call [ rw-data ]
lea edx [ eax + eax + 0x2 ]
sub edi edx
jns r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ebx
mov ecx esi
call sub_10008690
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
sub_10002e30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ rw-data ]
mov edi [ ebp + 0x8 ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
jns r-xdata
call sub_100080a0
mov [ ebp + 0xc ] eax
push esi
test eax eax
je r-xdata
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
call [ rw-data ]
mov ecx [ ebp + 0x10 ]
add eax eax
push eax
push esi
push ecx
call sub_10006a30
pop edi
mov eax 0xeeeeeef1
pop esi
pop ebp
retn 0xc
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
add eax eax
mov edx 0xfffffffe
sub edx eax
add edi edx
js r-xdata
push ebx
push esi
call [ rw-data ]
lea ebx [ esi + eax * 2 + 0x2 ]
push ebx
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
sub edi eax
jns r-xdata
mov edx [ ebp + 0xc ]
push ebx
mov ecx esi
call sub_100087b0
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
pop ebx
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
sub_10002ef0
push ebp
mov ebp esp
sub esp 0x54
push esi
mov esi [ ebp + 0xc ]
push esi
call [ rw-data ]
add eax eax
push eax
mov eax [ ebp + 0x10 ]
push esi
push eax
call sub_10006a30
push esi
call [ rw-data ]
lea ecx [ eax + eax + 0x2 ]
cmp [ ebp + 0x8 ] ecx
jae r-xdata
push 0x40
lea edx [ ebp - 0x50 ]
push 0x0
push edx
call sub_1000c4d0
add esp 0xc
mov edx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
push esi
push 0x0
push rw-data
push edx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x54 ] 0x44
mov [ ebp - 0x28 ] 0x80
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
mov eax 0xeeeeeef4
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10002fb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ rw-data ]
mov edi [ ebp + 0x10 ]
add eax eax
push eax
push esi
push edi
call sub_10006a30
push 0x4
push rw-data
push edi
call sub_10006a30
push esi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
push edi
mov ecx esi
call sub_10007ea0
pop edi
pop esi
pop ebp
retn 0xc
pop edi
mov eax 0xeeeeeef4
pop esi
pop ebp
retn 0xc
sub_10003010
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x13c ]
push eax
call edx
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x108 ]
push 0x0
push 0x1
call ecx
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push eax
push rw-data
push ecx
call [ GetProcAddress@IAT ]
call eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
pop ebp
retn 0xc
pop ebp
retn 0xc
sub_100030a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x19c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x198 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ LoadLibraryA@IAT ]
test eax eax
jne r-xdata
mov esi [ GetProcAddress@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x202
push rw-data
push eax
call esi
call eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
cmp [ ecx + 0xb0 ] 0x0
jne r-xdata
push rw-data
call edi
mov [ rw-data ] eax
cmp [ ecx + 0xb4 ] 0x0
jne r-xdata
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xb0 ] eax
test eax eax
jne r-xdata
cmp [ ecx + 0xb8 ] 0x0
jne r-xdata
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xb4 ] eax
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov edx [ ecx + 0x24 ]
call edx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x198 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0xe8 ] 0x0
jne r-xdata
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xb8 ] eax
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ ecx + 0x24 ]
call eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x198 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0xec ] 0x0
jne r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xe8 ] eax
test eax eax
je r-xdata
mov ecx [ ecx + 0x24 ]
call ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x198 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
push ebx
push 0x0
push 0x0
call sub_10006bc0
mov edi eax
mov eax [ rw-data ]
push rw-data
push eax
call esi
call eax
mov ecx [ esp + 0x1a4 ]
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
push rw-data
push ecx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xec ] eax
test eax eax
je r-xdata
sub_10003260
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx eax
mov [ ecx + edx * 8 + 0x4 ] 0x0
mov [ ecx + edx * 8 ] sub_10002200
mov [ ecx + eax * 8 + 0xc ] 0x1
mov [ ecx + eax * 8 + 0x8 ] sub_100023e0
mov [ ecx + eax * 8 + 0x14 ] 0x2
mov [ ecx + eax * 8 + 0x10 ] sub_10002590
mov [ ecx + eax * 8 + 0x1c ] 0x3
mov [ ecx + eax * 8 + 0x18 ] sub_100026a0
mov [ ecx + eax * 8 + 0x24 ] 0x4
mov [ ecx + eax * 8 + 0x20 ] sub_10002720
mov [ ecx + eax * 8 + 0x2c ] 0x5
mov [ ecx + eax * 8 + 0x28 ] sub_10002750
mov [ ecx + eax * 8 + 0x34 ] 0x6
mov [ ecx + eax * 8 + 0x30 ] sub_10002790
mov [ ecx + eax * 8 + 0x3c ] 0x7
mov [ ecx + eax * 8 + 0x38 ] sub_100028a0
mov [ ecx + eax * 8 + 0x44 ] 0x8
mov [ ecx + eax * 8 + 0x40 ] sub_10002920
mov [ ecx + eax * 8 + 0x4c ] 0x9
mov [ ecx + eax * 8 + 0x48 ] sub_10002c90
mov [ ecx + eax * 8 + 0x54 ] 0xa
mov [ ecx + eax * 8 + 0x50 ] sub_10002d50
mov [ ecx + eax * 8 + 0x5c ] 0xb
mov [ ecx + eax * 8 + 0x58 ] sub_10002e30
mov [ ecx + eax * 8 + 0x64 ] 0xc
mov [ ecx + eax * 8 + 0x60 ] sub_10002ee0
mov [ ecx + eax * 8 + 0x6c ] 0xd
mov [ ecx + eax * 8 + 0x68 ] sub_10002ef0
mov [ ecx + eax * 8 + 0x74 ] 0xe
mov [ ecx + eax * 8 + 0x70 ] sub_10003010
mov [ ecx + eax * 8 + 0x7c ] 0xf
mov [ ecx + eax * 8 + 0x78 ] sub_100025b0
mov [ ecx + eax * 8 + 0x84 ] 0x11
mov [ ecx + eax * 8 + 0x80 ] sub_10003070
mov [ ecx + eax * 8 + 0x8c ] 0x12
mov [ ecx + eax * 8 + 0x88 ] sub_10002280
mov [ ecx + eax * 8 + 0x94 ] 0x13
mov [ ecx + eax * 8 + 0x90 ] sub_10002a30
mov [ ecx + eax * 8 + 0x9c ] 0x14
mov [ ecx + eax * 8 + 0x98 ] sub_100030a0
mov [ ecx + eax * 8 + 0xa4 ] 0x16
mov [ ecx + eax * 8 + 0xa0 ] sub_10002770
mov [ ecx + eax * 8 + 0xac ] 0x10
mov [ ecx + eax * 8 + 0xa8 ] sub_10002fb0
mov [ ecx + eax * 8 + 0xb4 ] 0x15
mov [ ecx + eax * 8 + 0xb0 ] sub_10003080
mov [ ecx + eax * 8 + 0xbc ] 0x17
mov [ ecx + eax * 8 + 0xb8 ] sub_100027c0
mov [ ecx + eax * 8 + 0xc4 ] 0x18
mov [ ecx + eax * 8 + 0xc0 ] sub_10002ae0
lea edx [ eax + 0x19 ]
add eax 0x1a
mov [ rw-data ] eax
mov [ ecx + edx * 8 + 0x4 ] 0x19
mov [ ecx + edx * 8 ] sub_10002bd0
retn
sub_10003450
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
mov eax [ rw-data ]
mov esi eax
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
xor ecx ecx
test edx edx
je r-xdata
xor esi esi
test edx edx
je r-xdata
lea esi [ eax + 0x4 ]
cmp esi edx
jne r-xdata
cmp [ eax + esi * 8 + 0x4 ] 0x0
jne r-xdata
pop edi
mov eax 0xeeeeeef5
pop esi
pop ebp
retn 0xc
inc ecx
add esi 0x8
cmp ecx edx
jb r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + esi * 8 + 0x4 ] edi
mov [ eax + esi * 8 ] edx
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0xc
lea ecx [ edx * 8 + 0x8 ]
mov edx [ rw-data ]
push ecx
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x30 ]
push 0x8
push edx
call ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
inc esi
cmp esi edx
jb r-xdata
cmp [ eax + esi * 8 ] 0x0
je r-xdata
cmp [ esi ] edi
je r-xdata
inc [ rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_10003500
push ebp
mov ebp esp
mov edx [ rw-data ]
xor eax eax
push edi
mov edi [ rw-data ]
test edx edx
je r-xdata
cmp eax edx
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
lea ecx [ ecx ]
pop edi
pop ebp
retn 0x4
mov [ edi + eax * 8 + 0x4 ] 0x0
mov [ edi + eax * 8 ] 0x0
pop esi
inc eax
add ecx 0x8
cmp eax edx
jb r-xdata
cmp [ ecx ] esi
je r-xdata
sub_10003550
push ebp
mov ebp esp
sub esp 0x8
mov edx [ rw-data ]
push ebx
push esi
push edi
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] edi
test edx edx
je r-xdata
xor ebx ebx
mov esi 0xeeeeeeef
xor eax eax
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ esi + 0x4 ]
lea ebx [ ebx ]
mov edx [ ebp + 0x8 ]
push edx
push esi
push eax
push edi
call sub_10008b60
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + eax * 8 ]
test eax eax
jne r-xdata
inc eax
add ecx 0x8
cmp eax edx
jb r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
mov edx [ ebp + 0x10 ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ecx
call eax
mov edi [ ebp - 0x4 ]
mov esi eax
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ecx ] ebx
je r-xdata
xor ebx ebx
mov esi 0xeeeeeeef
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
push edi
push 0x0
push edx
call ecx
mov edi [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
sub_10003620
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x9c ]
push edi
mov edi [ rw-data ]
push esi
push 0xf003f
push 0x0
push eax
mov eax [ ebp + 0x8 ]
push eax
call edx
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop edi
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
push edi
push ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] 0x0
mov edx [ ecx + 0x98 ]
call edx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push eax
push 0x8
push ecx
call [ rw-data ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ecx + 0x98 ]
push eax
mov eax [ esi ]
push 0x0
push 0x0
push edi
push eax
call edx
test eax eax
jne r-xdata
or eax 0xffffffff
pop edi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
xor eax eax
sub_100036d0
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0xa0 ]
call ecx
retn
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ rw-data ]
sub_10003700
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov ebx eax
xor eax eax
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
cmp ecx 0x2
jl r-xdata
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x4 ]
add ecx 0xfffffffe
shr ecx 0x1
add eax 0x7
inc ecx
lea edx [ ecx + ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov edi [ esi + 0x8 ]
add edx eax
mov eax [ esi + 0x4 ]
movzx eax [ eax + ecx + 0x6 ]
mov ecx [ rw-data ]
mov [ ebp - 0xc ] eax
add eax edx
mov [ ebp - 0x10 ] eax
add eax 0x1a
sub edi eax
mov [ ebp - 0x14 ] eax
lea eax [ edi + ebx ]
push eax
push 0x8
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] eax
call [ rw-data ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
movzx eax [ edx + eax + 0x6 ]
mov [ ebp - 0x8 ] eax
movzx edx [ eax - 0x1 ]
add [ ebp - 0xc ] edx
movzx edx [ eax ]
add [ ebp - 0x4 ] edx
add eax 0x2
dec ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
mov eax 0xeeeeeef2
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
je r-xdata
test ebx ebx
je r-xdata
cmp ebx [ ebp - 0xc ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ esi + 0x4 ]
cmp ebx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ rw-data ]
push ebx
push ecx
push eax
mov eax [ edx + 0xc4 ]
call eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x10 ]
push eax
push edx
push edi
add eax 0x1a
push eax
call sub_10003eb0
mov eax [ esi + 0x4 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push edi
push eax
mov eax [ edx + 0xc4 ]
add ecx ebx
push ecx
call eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov edi [ ebp - 0x8 ]
mov ecx [ rw-data ]
push ebx
push eax
lea eax [ edx + edi + 0x1a ]
mov edx [ ecx + 0xc4 ]
push eax
call edx
mov eax [ ebp + 0xc ]
mov [ edx + eax + 0x6 ] bl
mov edx [ rw-data ]
sub ebx ecx
add [ esi + 0x8 ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
push eax
mov eax [ rw-data ]
push ecx
mov ecx [ eax + 0x30 ]
push 0x8
push edx
call ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
push ebx
lea edx [ eax + edi + 0x1a ]
mov eax [ rw-data ]
push ecx
mov ecx [ eax + 0xc4 ]
push edx
call ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ rw-data ]
push eax
call [ rw-data ]
mov eax [ esi + 0x4 ]
add esp 0xc
push eax
push edi
push ebx
add eax 0x1a
push eax
call sub_10003eb0
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ rw-data ]
push 0x3
push 0x0
push edx
mov edx [ ecx + 0x94 ]
push eax
call edx
mov ecx [ rw-data ]
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push ecx
call [ rw-data ]
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_100038e0
push ebp
mov ebp esp
sub esp 0x34
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor eax eax
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] eax
cmp edx 0x2
jl r-xdata
cmp eax edx
jae r-xdata
mov eax [ ebx + 0x4 ]
add edx 0xfffffffe
shr edx 0x1
add eax 0x7
inc edx
lea ecx [ edx + edx ]
mov [ ebp - 0x18 ] ecx
nop
mov ecx [ ebx + 0x4 ]
movzx ecx [ ecx + edx + 0x6 ]
add esi edi
add [ ebp - 0x4 ] esi
mov [ ebp - 0x34 ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x6 ]
mov [ ebp - 0x4 ] eax
movzx ecx [ eax - 0x1 ]
add esi ecx
movzx ecx [ eax ]
add edi ecx
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0xaaaaaaab
mul [ ebp - 0x4 ]
mov esi edx
mov edx [ ebp - 0x4 ]
lea eax [ ecx + edx ]
xor edx edx
mov ecx 0x6
div ecx
mov edi [ ebx + 0x4 ]
shr esi 0x2
mov ebx esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x30 ] eax
cmp ebx eax
jae r-xdata
cmp ebx esi
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
add ecx ecx
mov edx edi
sub edx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
xor ecx ecx
mov ecx [ ebp - 0x4 ]
lea eax [ esi + esi * 2 ]
add eax eax
sub ecx eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ esi + esi * 2 ]
add edx edx
sub ecx edx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x6
jae r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ edx + eax + 0x1a ]
mov edx [ ebp + 0x10 ]
mov eax [ rw-data ]
push ecx
mov ecx [ eax + 0xc4 ]
push edx
call ecx
add esp 0xc
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov dl bl
add dl dl
lea eax [ edx + ebx ]
add al al
mov [ ebp + 0xf ] al
lea ebx [ ebx + ebx * 2 ]
add ebx ebx
mov eax edi
sub eax ebx
mov [ ebp - 0x28 ] eax
mov eax 0x1
sub eax ebx
mov [ ebp - 0x24 ] eax
mov eax 0x3
sub eax ebx
mov edx 0x2
lea esi [ ebx + ecx ]
sub edx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edx
jmp r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebp - 0x18 ]
jae r-xdata
mov edx [ ebp - 0xc ]
mov al bl
add al al
add bl al
mov eax 0x1
sub eax edx
add bl bl
mov [ ebp - 0x24 ] eax
mov [ ebp + 0xf ] bl
mov eax 0x3
sub eax edx
mov ebx 0x2
sub ebx edx
lea esi [ edx + ecx ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ebx
jmp r-xdata
mov ecx 0x6
add [ ebp - 0xc ] ecx
sub [ ebp - 0x10 ] ecx
inc ebx
mov [ ebp - 0x14 ] ebx
cmp ebx eax
jb r-xdata
add eax esi
xor edx edx
mov ebx 0x6
div ebx
mov bl [ ebp + 0xf ]
mov eax [ ebp - 0x2c ]
add bl cl
add eax esi
mov ecx 0x6
xor bl [ edx + edi ]
xor edx edx
div ecx
and bl [ edx + edi ]
mov edx [ ebp - 0x28 ]
movzx ecx [ esi + edx ]
mov edx [ ebp - 0x24 ]
imul ecx esi
lea eax [ esi + edx ]
xor edx edx
mov esi 0x6
div esi
mov esi [ ebp - 0x14 ]
shr ecx 0x7
inc esi
mov [ ebp - 0x14 ] esi
xor cl [ edx + edi ]
add bl cl
mov ecx [ ebp - 0x8 ]
xor [ esi + edi + 0x19 ] bl
inc ecx
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebp - 0x18 ]
jb r-xdata
add eax esi
xor edx edx
mov ebx 0x6
div ebx
mov bl [ ebp + 0xf ]
mov eax [ ebp - 0x20 ]
add bl cl
lea eax [ eax + esi ]
mov ecx 0x6
xor bl [ edx + edi ]
xor edx edx
div ecx
mov eax [ ebp - 0x24 ]
lea eax [ eax + esi ]
and bl [ edx + edi ]
mov edx [ ebp - 0x10 ]
movzx ecx [ edx + esi ]
xor edx edx
imul ecx esi
mov edi 0x6
div edi
mov edi [ ebp - 0x28 ]
shr ecx 0x7
inc esi
xor cl [ edx + edi ]
add bl cl
mov ecx [ ebp - 0x8 ]
xor [ edi + esi + 0x19 ] bl
inc ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x6
jb r-xdata
cmp ebx esi
jne r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ ebp - 0x1c ]
mov esi [ ebp - 0x2c ]
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x30 ]
sub_10003b60
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
xor ebx ebx
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
mov [ ebp - 0x38 ] 0xffffffff
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x1c ] ebx
xor edi edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4 ] ebx
push ebx
push 0x6
push 0x4
push ebx
push ebx
push 0x80000000
push eax
mov edx [ rw-data ]
mov eax [ edx + 0x20 ]
call eax
mov [ ebp - 0x38 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10003e33
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x38 ]
call edx
mov esi eax
push 0xf0000000
push 0x1
push rw-data
push ebx
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x16c ]
call edx
test eax eax
jne r-xdata
lea edx [ ebp - 0x34 ]
push edx
push ebx
push ebx
push 0x94
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x168 ]
call eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
cmp eax 0x80090016
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push 0x1
push 0x6603
mov edx [ ebp - 0x24 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x164 ]
call ecx
test eax eax
je r-xdata
push 0xf0000008
push 0x1
push rw-data
push ebx
lea edx [ ebp - 0x24 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x16c ]
call ecx
test eax eax
je r-xdata
mov [ ebp - 0x20 ] ebx
lea edx [ ebp - 0x20 ]
push edx
push ebx
push ebx
push 0x1
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x160 ]
call eax
test eax eax
je r-xdata
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] 0x4
push ebx
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push 0x8
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x15c ]
call edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
shr ecx 0x3
mov [ ebp - 0x2c ] ecx
mov eax esi
and eax 0x3ff
mov [ ebp - 0x48 ] eax
mov eax 0x0
setne al
mov edx esi
shr edx 0xa
lea eax [ eax + edx - 0x1 ]
mov [ ebp - 0x44 ] eax
mov eax esi
xor edx edx
div ecx
cmp edx ebx
je r-xdata
mov [ ebp - 0x28 ] ecx
add ecx [ ebp - 0x20 ]
lea eax [ ecx + esi + 0x4 ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
mov edi eax
mov [ ebp - 0x3c ] edi
cmp edi ebx
je r-xdata
sub ecx edx
lea edx [ ebp - 0x20 ]
push edx
lea eax [ edi + 0x4 ]
push eax
push ebx
push 0x1
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x160 ]
call ecx
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov [ edi ] edx
mov ebx [ ebp - 0x20 ]
add ebx 0x4
mov [ ebp - 0x30 ] 0x0
push 0x0
lea eax [ ebp - 0x30 ]
push eax
push esi
lea ecx [ ebx + edi ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x34 ]
call ecx
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
xor esi esi
mov ecx [ ebp + 0xc ]
mov [ ecx ] edi
add eax ebx
mov [ ebp - 0x40 ] eax
jne r-xdata
mov eax 0x400
mov eax [ ebp - 0x48 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x30 ]
add eax [ ebp + 0x8 ]
inc esi
jmp r-xdata
mov [ ebp + 0x8 ] eax
add eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
push eax
lea eax [ ebp + 0x8 ]
push eax
mov edx esi
shl edx 0xa
add edx ebx
add edx edi
push edx
push 0x0
xor eax eax
cmp esi ecx
sete al
push eax
push 0x0
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x158 ]
call eax
test eax eax
je r-xdata
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x44 ]
cmp esi ecx
ja r-xdata
sub_10003e33
mov esi [ ebp - 0x40 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax ebx
je r-xdata
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x174 ]
call edx
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
push edi
push ebx
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov eax [ ebp - 0x24 ]
cmp eax ebx
je r-xdata
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x174 ]
call ecx
mov eax [ ebp - 0x38 ]
cmp eax 0xffffffff
je r-xdata
push ebx
push eax
mov edx [ rw-data ]
mov eax [ edx + 0x170 ]
call eax
retn
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
call edx
sub_10003eb0
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0x10 ]
mov eax 0xaaaaaaab
mul ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi edx
add eax ecx
xor edx edx
mov ecx 0x6
div ecx
mov esi [ ebp + 0x14 ]
shr edi 0x2
mov ebx edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x1c ] eax
cmp ebx eax
jae r-xdata
cmp ebx edi
jne r-xdata
lea edx [ ebx + ebx * 2 ]
lea ecx [ edx + edx - 0x2 ]
mov [ ebp - 0x8 ] ecx
lea esp [ esp ]
xor edi edi
lea eax [ edi + edi * 2 ]
mov edi [ ebp + 0x10 ]
add eax eax
sub edi eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ edi + edi * 2 ]
add edx edx
sub ecx edx
cmp ecx 0x6
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
mov cl bl
add cl cl
lea eax [ ecx + ebx ]
add al al
mov [ ebp + 0x13 ] al
lea eax [ ebx + ebx * 2 ]
add eax eax
lea edx [ eax + edx - 0x2 ]
mov [ ebp - 0x20 ] eax
lea ecx [ edi + 0x2 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
cmp edi [ ebp - 0x14 ]
jae r-xdata
mov al bl
add al al
add bl al
mov eax [ ebp - 0x8 ]
add bl bl
add ecx 0x2
add eax [ ebp + 0x8 ]
mov [ ebp + 0xf ] bl
mov [ ebp - 0x18 ] eax
mov edi edi
add [ ebp - 0x8 ] 0x6
inc ebx
mov [ ebp - 0x10 ] ebx
cmp ebx eax
jb r-xdata
movzx ebx [ ecx + esi - 0x2 ]
lea eax [ ecx + eax - 0x2 ]
imul ebx eax
lea edx [ ecx + 0x1 ]
mov [ ebp + 0xc ] edx
xor edx edx
mov edi 0x6
lea eax [ ecx - 0x1 ]
div edi
mov eax [ ebp + 0xc ]
shr ebx 0x7
xor bl [ edx + esi ]
xor edx edx
div edi
mov al cl
add al [ ebp + 0x13 ]
sub al 0x2
xor al [ edx + esi ]
xor edx edx
mov [ ebp + 0xb ] al
mov eax ecx
mov esi edi
div esi
mov al [ ebp + 0xb ]
mov esi [ ebp + 0x14 ]
and al [ edx + esi ]
add bl al
mov eax [ ebp - 0x1c ]
xor [ ecx + eax ] bl
mov ecx [ ebp + 0xc ]
lea edx [ ecx - 0x2 ]
cmp edx [ ebp - 0x14 ]
jb r-xdata
movzx ebx [ esi + ecx - 0x2 ]
mov eax [ ebp - 0x8 ]
add eax ecx
imul ebx eax
lea edx [ ecx + 0x1 ]
mov [ ebp - 0xc ] edx
xor edx edx
mov edi 0x6
lea eax [ ecx - 0x1 ]
div edi
mov eax [ ebp - 0xc ]
shr ebx 0x7
xor bl [ edx + esi ]
xor edx edx
div edi
mov al cl
add al [ ebp + 0xf ]
sub al 0x2
xor al [ edx + esi ]
xor edx edx
mov [ ebp - 0x1 ] al
mov eax ecx
mov esi edi
div esi
mov al [ ebp - 0x1 ]
mov esi [ ebp + 0x14 ]
and al [ edx + esi ]
add bl al
mov eax [ ebp - 0x18 ]
xor [ eax + ecx ] bl
mov ecx [ ebp - 0xc ]
lea edx [ ecx - 0x2 ]
cmp edx edi
jb r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov ebx [ ebp - 0x10 ]
cmp ebx edi
jne r-xdata
mov eax [ ebp - 0x20 ]
sub_10004060
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x10 ]
call edx
mov ebx eax
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x10 ]
call edx
mov [ ebp - 0x20 ] eax
add eax ebx
mov [ ebp - 0x24 ] eax
add eax 0xf
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
push eax
push 0x8
mov eax [ rw-data ]
push eax
call [ rw-data ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov dl [ ebp + 0x10 ]
mov [ edi + esi ] dl
inc esi
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ rw-data ]
push ecx
lea edx [ edi + esi ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0xc4 ]
call ecx
add esi [ ebp - 0x20 ]
push ebx
mov edx [ rw-data ]
push edx
lea eax [ edi + esi ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xc4 ]
call edx
add esp 0x18
add esi ebx
mov eax [ ebp - 0x24 ]
mov [ edi + esi ] eax
lea eax [ esi + 0x8 ]
mov [ edi + esi + 0x4 ] eax
mov esi eax
mov eax [ rw-data ]
lea ebx [ eax + 0xd0 ]
mov ecx [ eax ]
call ecx
push eax
mov edx [ ebx ]
call edx
add esp 0x4
xor bl bl
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test esi esi
je r-xdata
add esi 0x6
lea eax [ edi + esi - 0x6 ]
push eax
push 0x0
lea ecx [ esi - 0x6 ]
push ecx
push edi
call sub_10003eb0
mov [ ebp + 0xc ] 0x0
lea edx [ ebp + 0xc ]
push edx
push 0x0
push 0x1
push esi
push edi
mov eax [ rw-data ]
mov ecx [ eax + 0x154 ]
call ecx
cmp eax 0x1
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0xcc ]
call ecx
movzx edx bl
add edx edi
mov [ edx + esi ] al
inc bl
jmp r-xdata
add eax esi
push eax
push edi
push 0x8
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x30 ]
call edx
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
test eax eax
je r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x19 ] bl
cmp bl 0x6
jae r-xdata
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
lea ecx [ ebp + 0xc ]
push ecx
push eax
push 0x1
push esi
push edi
mov edx [ rw-data ]
mov eax [ edx + 0x154 ]
call eax
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10004292
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_100042b0
push ebp
mov ebp esp
mov eax 0x14d0
call sub_1000d8d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0x24c
lea ecx [ ebp - 0x1268 ]
push edi
push ecx
mov [ ebp - 0x14d0 ] ebx
mov [ ebp - 0x14c4 ] eax
mov [ ebp - 0x126c ] edi
call sub_1000c4d0
add esp 0xc
push 0x24c
lea edx [ ebp - 0x14b8 ]
push edi
push edx
mov [ ebp - 0x14bc ] edi
call sub_1000c4d0
add esp 0xc
push 0x7fe
lea ecx [ ebp - 0x80a ]
xor eax eax
push edi
push ecx
mov [ ebp - 0x80c ] ax
call sub_1000c4d0
add esp 0xc
push 0x7fe
lea eax [ ebp - 0x100a ]
xor edx edx
push edi
push eax
mov [ ebp - 0x100c ] dx
call sub_1000c4d0
mov edx [ rw-data ]
mov eax [ edx + 0xe4 ]
add esp 0xc
push ebx
push esi
push rw-data
lea ecx [ ebp - 0x100c ]
push 0x400
push ecx
mov [ ebp - 0x14c8 ] 0x1
call eax
mov eax [ rw-data ]
add esp 0x14
lea ecx [ ebp - 0x126c ]
push ecx
mov ecx [ eax + 0x50 ]
lea edx [ ebp - 0x100c ]
push edx
call ecx
mov ebx eax
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
mov ebx [ ebp + 0x14 ]
test bl bl
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov eax edx
or eax ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x1c
mov edx [ rw-data ]
mov eax [ edx + 0xe4 ]
push esi
push rw-data
lea ecx [ ebp - 0x80c ]
push 0x400
push ecx
call eax
mov eax [ rw-data ]
add esp 0x10
lea ecx [ ebp - 0x14bc ]
push ecx
mov ecx [ eax + 0x50 ]
lea edx [ ebp - 0x80c ]
push edx
call ecx
mov edi eax
mov edi edi
cmp [ ebp - 0x14c8 ] edi
je r-xdata
mov eax [ ebp - 0x1258 ]
mov [ ebp - 0x14c8 ] edi
cmp ecx [ ebp - 0x1254 ]
jg r-xdata
test [ ebp - 0x14bc ] 0x10
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x40 ]
lea edx [ ebp - 0x126c ]
push edx
push ebx
call ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0x101c ]
push ecx
mov ecx [ eax + 0x4c ]
lea edx [ ebp - 0x1258 ]
push edx
call ecx
mov edx [ ebp - 0x124c ]
movzx eax [ ebp - 0x101c ]
movzx ecx [ ebp - 0x101a ]
push edx
movzx edx [ ebp - 0x1016 ]
push eax
push ecx
push edx
mov edx [ rw-data ]
lea eax [ ebp - 0x1240 ]
push eax
mov eax [ edx + 0xe4 ]
push esi
push rw-data
lea ecx [ ebp - 0x80c ]
push 0x400
push ecx
call eax
add esp 0x24
lea ecx [ ebp - 0x80c ]
push ecx
call [ rw-data ]
add eax eax
push eax
mov eax [ ebp - 0x14c4 ]
lea edx [ ebp - 0x80c ]
push edx
push eax
call sub_10006a30
cmp [ ebp + 0x20 ] 0x1
jne r-xdata
mov [ ebp - 0x14c8 ] edi
jmp r-xdata
jl r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x40 ]
lea edx [ ebp - 0x14bc ]
push edx
push edi
call ecx
test eax eax
jne r-xdata
push rw-data
lea edx [ ebp - 0x1490 ]
push edx
call [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x3c ]
push ebx
call eax
test [ ebp - 0x126c ] 0x10
jne r-xdata
mov [ ebp - 0x14c8 ] 0x1
jmp r-xdata
cmp edx eax
jae r-xdata
cmp edi 0xffffffff
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x3c ]
push edi
call eax
push rw-data
lea eax [ ebp - 0x1490 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0x1240 ]
push ecx
mov ecx [ eax + 0xe4 ]
push esi
push rw-data
lea edx [ ebp - 0x80c ]
push 0x400
push edx
mov [ ebp - 0x14c0 ] edi
call ecx
add esp 0x14
lea edx [ ebp - 0x14c0 ]
push edx
lea eax [ ebp - 0x80c ]
push eax
call sub_10004660
mov ecx [ ebp - 0x14c0 ]
mov edi eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0x1490 ]
push ecx
mov ecx [ eax + 0xe4 ]
push esi
push rw-data
lea edx [ ebp - 0x100c ]
push 0x400
push edx
call ecx
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
add esp 0x14
push edx
mov edx [ ebp - 0x14c4 ]
push eax
mov eax [ ebp - 0x14d0 ]
push ecx
push ebx
push edx
push eax
lea ecx [ ebp - 0x100c ]
push ecx
call sub_100042b0
mov edx [ rw-data ]
mov eax [ edx + 0x44 ]
push ecx
mov ecx [ rw-data ]
push 0x0
push ecx
call eax
mov ecx [ ebp - 0x14c0 ]
xor eax eax
jmp r-xdata
xor edi edi
mov ecx [ rw-data ]
push eax
push 0x0
push ecx
call [ rw-data ]
push 0x6
push edi
push eax
push ecx
call sub_10008b60
mov eax [ ebp - 0x14c0 ]
test eax eax
je r-xdata
sub_10004660
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] 0xffffffff
mov ecx [ rw-data ]
cmp [ ecx + 0x58 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x80000000
mov esi [ ebp + 0x8 ]
push esi
mov edx [ ecx + 0x20 ]
call edx
mov edi eax
mov [ ebp - 0x20 ] edi
mov eax [ rw-data ]
cmp edi 0xffffffff
jne r-xdata
push rw-data
mov eax [ rw-data ]
push eax
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0x58 ] eax
cmp eax ebx
jne r-xdata
push ebx
push edi
mov ecx [ eax + 0x38 ]
call ecx
mov ebx eax
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
push edi
mov edx [ rw-data ]
mov eax [ edx + 0x5c ]
call eax
lea ecx [ ebp - 0x40 ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x58 ]
call eax
push esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x150 ]
call edx
mov esi eax
push esi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
push eax
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10006a30
push 0x8
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call sub_10006a30
push 0x8
lea edx [ ebp - 0x30 ]
push edx
push esi
call sub_10006a30
push 0x8
lea eax [ ebp - 0x38 ]
push eax
push esi
call sub_10006a30
push 0x8
lea ecx [ ebp - 0x40 ]
push ecx
push esi
call sub_10006a30
push edi
mov eax esi
call sub_10006b20
mov ebx eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100047fb
mov eax ebx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax + 0x24 ]
call ecx
mov esi eax
mov [ ebp - 0x1c ] esi
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ecx + 0x24 ]
call ecx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_100047fb
test ebx ebx
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ rw-data ]
add eax eax
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10006a30
retn
push edi
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
call edx
sub_10004830
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
push esi
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
mov [ ebp - 0x4 ] 0x0
call edx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x1c ]
push rw-data
push 0x0
push rw-data
push esi
call eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ rw-data ]
push edx
mov edx [ ecx + 0x18 ]
push eax
push esi
call edx
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push esi
call ecx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_100048c0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x14 ]
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x4 ] eax
push eax
push 0x80
push 0x3
push eax
push 0x3
push 0x80000000
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
call ecx
mov esi eax
mov [ ebp - 0x20 ] esi
mov edx [ rw-data ]
cmp esi 0xffffffff
jne r-xdata
push 0x0
push esi
mov eax [ edx + 0x38 ]
call eax
mov ecx [ ebp + 0xc ]
cmp ecx eax
jbe r-xdata
mov eax [ edx + 0x24 ]
call eax
mov esi eax
mov [ ebp - 0x1c ] esi
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov [ ebp - 0x1c ] 0xeeeeeef3
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef3
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x0
push ecx
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x60 ]
call ecx
push ebx
mov edx [ rw-data ]
mov eax [ edx + 0x150 ]
call eax
mov ebx eax
push ebx
call [ rw-data ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebx
push edi
call sub_10006a30
push 0x4
lea edx [ ebp + 0xc ]
push edx
push edi
call sub_10006a30
push esi
mov ebx [ ebp + 0x10 ]
mov eax edi
call sub_10006b20
mov ebx eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10004a2e
mov eax ebx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub eax ecx
mov [ ebp + 0x10 ] eax
sub_10004a2e
test ebx ebx
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
add eax eax
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push edi
call sub_10006a30
retn
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x14 ]
call eax
sub_10004a60
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x44 ] eax
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] bl
xor eax eax
mov [ ebp - 0x3b ] eax
mov [ ebp - 0x37 ] eax
mov [ ebp - 0x33 ] eax
mov [ ebp - 0x2f ] eax
mov [ ebp - 0x2b ] eax
mov [ ebp - 0x27 ] eax
mov [ ebp - 0x23 ] eax
mov [ ebp - 0x1f ] ax
mov [ ebp - 0x1d ] al
push rw-data
mov ecx [ rw-data ]
push ecx
mov esi [ GetProcAddress@IAT ]
call esi
mov [ ebp - 0x48 ] eax
cmp eax ebx
jne r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call esi
mov esi eax
cmp esi ebx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
push ebx
push ebx
call esi
mov edi eax
lea ecx [ edi + 0x1 ]
push ecx
push 0x8
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
push eax
push edi
call esi
test eax eax
jne r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef2
jmp r-xdata
mov eax [ ebp - 0x40 ]
lea esi [ ebx + eax ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x24 ]
call edx
mov esi eax
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10004c24
xor eax eax
push esi
call [ ebp - 0x48 ]
add eax 0xfffffffe
cmp eax 0x3
ja r-xdata
mov eax rw-data
jmp [ eax * 4 + jump_table_10004c38 ]
mov eax rw-data
jmp r-xdata
mov eax rw-data
jmp r-xdata
mov eax rw-data
jmp r-xdata
mov eax rw-data
jmp r-xdata
push eax
push esi
push rw-data
push 0x20
lea ecx [ ebp - 0x3c ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0xe0 ]
call eax
add esp 0x14
lea ecx [ ebp - 0x3c ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
call eax
push eax
lea ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
call sub_10006a30
add ebx 0x4
mov [ ebp - 0x4c ] ebx
jmp r-xdata
sub_10004c50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi edx
push esi
mov edi ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] esi
call [ rw-data ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
jns r-xdata
push esi
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
mov [ esp + 0x30 ] esi
call [ rw-data ]
add eax eax
mov edx 0xfffffffe
sub edx eax
add edi edx
js r-xdata
mov eax 0xeeeeeef4
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x8
push esi
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
add eax eax
mov ecx 0xfffffffe
sub ecx eax
add edi ecx
js r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x13c ]
push esi
call eax
push esi
mov [ esp + 0x34 ] al
call [ rw-data ]
lea esi [ esi + eax * 2 + 0x2 ]
push esi
call [ rw-data ]
lea ecx [ eax + eax + 0x2 ]
sub edi ecx
js r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x13c ]
push esi
call eax
mov esi [ GetProcAddress@IAT ]
mov edi eax
xor eax eax
mov [ esp + 0x14 ] eax
cmp edi 0xffffffff
je r-xdata
xor ebx ebx
mov [ esp + 0x14 ] eax
xor ecx ecx
mov [ esp + 0x36 ] eax
mov [ esp + 0x3a ] eax
mov [ esp + 0x3e ] eax
mov [ esp + 0x42 ] ax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x34 ] cx
mov ecx [ eax + 0x48 ]
push edx
call ecx
mov ecx [ rw-data ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x38 ]
push eax
push rw-data
push ecx
call esi
call eax
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
push 0xffffff36
mov [ esp + 0x18 ] edx
mov eax edi
cdq
push 0xd5964000
push edx
push eax
call sub_1000d890
add ebx eax
adc [ esp + 0x14 ] edx
jmp r-xdata
cmp [ ecx + 0x40 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x3c ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x40 ] eax
test eax eax
jne r-xdata
mov ecx [ ecx + 0x24 ]
call ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x4c ] 0x0
jne r-xdata
mov ecx [ rw-data ]
push rw-data
push ecx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x50 ] eax
test eax eax
jne r-xdata
mov eax [ ecx + 0x24 ]
call eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x30 ]
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x2c ]
push edx
push eax
push ebx
mov ebx [ esp + 0x30 ]
push ecx
push esi
push edi
push ebx
call sub_100042b0
mov eax [ esi ]
call sub_10006ae0
test eax eax
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x4c ] eax
test eax eax
je r-xdata
mov edx [ ecx + 0x24 ]
call edx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ rw-data ]
add eax eax
push eax
push ebx
push esi
call sub_10006a30
push edi
call [ rw-data ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_10006a30
mov ecx [ esp + 0x44 ]
pop edi
pop esi
pop ebx
xor ecx esp
mov eax 0xeeeeeef0
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x8
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x8
sub_10004f10
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor edi edi
push edi
push 0x6
push 0x4
push edi
push edi
mov ebx eax
mov eax [ rw-data ]
push 0xc0000000
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
mov edx [ rw-data ]
mov eax [ edx + 0x38 ]
push edi
push esi
call eax
push edi
test eax eax
je r-xdata
mov ecx [ rw-data ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ecx + 0x18 ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push esi
call edx
mov eax [ rw-data ]
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ eax + 0x34 ]
push 0x2
lea edx [ ebp - 0x4 ]
push edx
push esi
call ecx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push esi
call ecx
mov eax edi
cmp edi 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx + 0x18 ]
add ecx 0xfffffffe
push ecx
add ebx 0x2
push ebx
push esi
call eax
test eax eax
je r-xdata
mov ax [ ebx ]
mov ecx [ rw-data ]
add [ ebp - 0x4 ] ax
mov edx [ ecx + 0x60 ]
push 0x2
push 0x0
push 0x0
push esi
call edx
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov dx [ ebp - 0x4 ]
add [ rw-data ] dx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ rw-data ]
mov edx [ ecx + 0x60 ]
push 0x0
push 0x0
push 0x0
push esi
call edx
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx + 0x18 ]
push 0x2
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x1c ]
push rw-data
push 0x0
push rw-data
push esi
call edx
mov edi 0x1
sub_10005040
push ebp
mov ebp esp
sub esp 0x8
push ebx
xor ebx ebx
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea eax [ ebp - 0x4 ]
xor dl dl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
call sub_10008de0
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi [ ebp - 0x4 ]
cmp esi ebx
je r-xdata
pop esi
push edi
mov edi [ ebp - 0x8 ]
cmp edi ebx
je r-xdata
pop edi
mov edx [ rw-data ]
mov eax [ edx + 0xbc ]
push ebx
push ebx
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
push 0x1
sub edi 0x6
mov [ ebp - 0x8 ] esi
push edi
add esi 0x6
push esi
mov [ ebp - 0x4 ] ebx
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push ecx
push 0x8
push edx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0xbc ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x1
push edi
push esi
call edx
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ebx
push 0x0
push ecx
call [ rw-data ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_10004f10
sub_10005120
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x24 ] 0xffffffff
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x1c ] edi
cmp [ rw-data ] di
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] edi
push edi
push 0x6
push 0x3
push edi
push edi
push 0xc0000000
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
call edx
mov esi eax
mov [ ebp - 0x24 ] esi
cmp esi 0xffffffff
jne r-xdata
push edi
push esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x38 ]
call edx
mov ebx eax
mov [ ebp - 0x2c ] ebx
push ebx
push 0x8
mov eax [ rw-data ]
push eax
call [ rw-data ]
mov edi eax
mov [ ebp - 0x1c ] edi
test edi edi
jne r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x20 ]
push edx
push ebx
push edi
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x34 ]
call ecx
mov edi [ edi + 0x2 ]
push edi
push 0x8
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov ebx eax
mov [ ebp - 0x28 ] ebx
test ebx ebx
je r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
jmp r-xdata
push edi
mov ecx [ ebp - 0x1c ]
add ecx 0x6
push ecx
push ebx
mov edx [ rw-data ]
mov eax [ edx + 0xc4 ]
call eax
add esp 0xc
lea eax [ edi - 0x6 ]
mov [ ebp - 0x34 ] eax
lea ecx [ ebx + 0x6 ]
mov [ ebp - 0x30 ] ecx
push ebx
push 0x0
push eax
push ecx
call sub_10003eb0
add edi 0x6
mov ecx 0xffff
add [ rw-data ] cx
push 0x0
push 0x0
push 0x0
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x60 ]
call eax
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push 0x2
push rw-data
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x18 ]
call eax
mov eax [ ebp - 0x2c ]
sub eax edi
je r-xdata
push rw-data
call sub_1000b110
add esp 0xc
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x64 ]
call eax
push rw-data
push 0x0
push rw-data
push esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x1c ]
call edx
mov ecx [ ebp - 0x30 ]
cmp [ ecx ] 0x75df9115
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
add edi [ ebp - 0x1c ]
push edi
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x18 ]
call ecx
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x34 ]
add eax 0xfffffff8
je r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
push eax
push edx
call sub_10003550
mov esi eax
sub_10005340
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] esi
lea esp [ esp ]
call sub_10005120
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x74 ]
call edx
push 0x2710
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
call edx
test eax eax
jne r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push 0xffffffff
push esi
lea edx [ ebp - 0x20 ]
push edx
push 0x2
mov eax [ rw-data ]
mov ecx [ eax + 0x130 ]
call ecx
cmp eax 0x1
jne r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
jmp r-xdata
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10005440
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
push 0x2710
mov eax [ rw-data ]
mov ecx [ eax + 0x68 ]
call ecx
xor edi edi
mov [ ebp - 0x1c ] edi
mov edx [ rw-data ]
mov [ ebp - 0x20 ] edx
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] edi
call sub_10005040
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x74 ]
call ecx
push rw-data
mov edx [ rw-data ]
mov eax [ edx + 0x70 ]
call eax
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0xd4 ]
call eax
mov esi eax
push rw-data
mov ecx [ rw-data ]
mov edx [ ecx + 0x6c ]
call edx
push esi
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
call edx
test eax eax
jne r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push 0xffffffff
push edi
lea ecx [ ebp - 0x20 ]
push ecx
push 0x2
mov edx [ rw-data ]
mov eax [ edx + 0x130 ]
call eax
cmp eax 0x1
jne r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
jmp r-xdata
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10005552
mov eax [ rw-data ]
xor edi edi
cmp eax edi
je r-xdata
retn
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x74 ]
call edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
call edx
mov [ rw-data ] edi
sub_100055a0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
mov ecx [ eax + 0x7c ]
push 0x0
push 0x0
push 0x0
mov [ ebp - 0x8 ] 0x0
call ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push esi
push 0x0
push 0x6
push 0x3
push 0x0
push 0x0
push 0x80000000
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax + 0x20 ]
push edx
call ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
push sub_10005340
push 0x0
push 0x0
call ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x34 ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push 0x2
push rw-data
push esi
call ecx
mov edx [ rw-data ]
mov eax [ edx + 0x14 ]
push esi
call eax
cmp [ rw-data ] 0x14
jbe r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx + 0x28 ]
push ecx
call eax
xor ecx ecx
mov [ rw-data ] cx
sub_10005670
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ rw-data ]
mov edx [ ecx + 0x128 ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x0
call edx
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov ecx [ eax + 0x12c ]
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call ecx
mov [ esi ] eax
test eax eax
je r-xdata
push 0x4
lea edx [ ebp - 0x4 ]
push edx
push 0x6
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x180 ]
mov [ ebp - 0x4 ] 0x1b7740
call ecx
mov eax [ esi ]
mov ecx [ rw-data ]
push 0x4
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ecx + 0x180 ]
push 0x5
push eax
call edx
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x50
push eax
mov eax [ edx + 0x17c ]
push ecx
call eax
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_10005730
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
mov edx [ rw-data ]
xor eax eax
push edi
push eax
push 0x84000200
push eax
push eax
push eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x11c ]
push rw-data
push rw-data
push ecx
mov [ esp + 0x2c ] 0x1
call eax
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x28 ] 0x28
mov [ esp + 0x44 ] ecx
mov ecx [ eax + 0x10c ]
push edi
call ecx
test eax eax
je r-xdata
mov [ esp + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
lea edx [ esp + 0x10 ]
push edx
mov edx [ rw-data ]
push eax
mov eax [ edx + 0x118 ]
push ecx
push edi
call eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x124 ]
push edi
call edx
mov eax [ esp + 0xc ]
pop edi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
mov edx [ ecx + 0x110 ]
push 0x0
push 0x0
lea eax [ esp + 0x10 ]
push eax
push edi
call edx
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x120 ]
push 0x0
push 0x0
push 0x0
push edi
call edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ esp + 0xc ] 0x0
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
push 0x8
push eax
call [ rw-data ]
mov edx [ esp + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
mov [ ebx ] eax
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x114 ]
push edi
call ecx
mov edx [ esp + 0x10 ]
mov ecx [ rw-data ]
add [ esi ] edx
mov edx [ ecx + 0x110 ]
push 0x0
push 0x0
lea eax [ esp + 0x10 ]
push eax
push edi
call edx
test eax eax
je r-xdata
mov edx [ ebx ]
mov ecx [ rw-data ]
push rw-data
mov [ esp + 0x18 ] edx
push edx
mov edx [ ecx + 0xdc ]
call edx
mov ecx [ esp + 0x14 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ esi ] 0x6
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov edx [ ebx ]
add ecx eax
mov eax [ rw-data ]
push ecx
mov ecx [ rw-data ]
push edx
mov edx [ ecx + 0x30 ]
push 0x8
push eax
call edx
mov edx [ esp + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
mov [ ebx ] eax
mov ecx [ esi ]
push edx
mov edx [ rw-data ]
add ecx eax
mov eax [ edx + 0x114 ]
push ecx
push edi
call eax
mov ecx [ esp + 0x10 ]
mov eax [ rw-data ]
add [ esi ] ecx
mov ecx [ eax + 0x110 ]
push 0x0
push 0x0
lea edx [ esp + 0x10 ]
push edx
push edi
call ecx
test eax eax
jne r-xdata
mov eax ecx
call sub_10006b00
mov [ ebx ] 0x0
mov [ esi ] 0x0
mov [ esp + 0xc ] 0x1
jmp r-xdata
mov [ ebx ] 0x0
mov [ esi ] 0x0
mov eax [ rw-data ]
push ecx
push 0x0
push eax
call [ rw-data ]
sub_10005990
push ebp
mov ebp esp
sub esp 0x934
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
cmp edi eax
jge r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
cmp edi eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push eax
mov eax [ edx + 0xf8 ]
push edi
push ecx
call eax
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push edx
mov edx [ ecx + 0xf8 ]
push edi
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
cmp ecx 0x100
je r-xdata
push esi
push 0x7fe
push eax
lea edx [ ebp - 0x922 ]
xor ecx ecx
push edx
mov [ ebp - 0x92c ] eax
mov [ ebp - 0x924 ] cx
call sub_1000c4d0
mov eax [ ebx ]
mov esi [ ebx + 0x4 ]
and eax 0xff
mov [ ebp - 0x930 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0xd8 ]
add esp 0xc
shl esi 0x10
push rw-data
mov [ ebp - 0x934 ] esi
call ecx
test eax eax
je r-xdata
cmp ecx 0x104
jne r-xdata
pop esi
mov edx [ rw-data ]
mov eax [ edx + 0xf4 ]
call eax
mov edi eax
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0xc0 ]
push 0x800
lea edx [ ebp - 0x924 ]
push 0x0
push edx
call ecx
mov eax [ rw-data ]
mov ecx [ eax + 0x84 ]
add esp 0xc
push 0x400
lea edx [ ebp - 0x924 ]
push edx
push esi
call ecx
test eax eax
je r-xdata
mov [ ebp - 0x928 ] 0x0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x6c ]
push rw-data
call ecx
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x930 ]
cmp ecx 0x20
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x144 ]
lea ecx [ ebp - 0x928 ]
push ecx
push edi
call eax
mov ecx [ ebp - 0x928 ]
mov edx [ rw-data ]
mov eax [ edx + 0x108 ]
push ecx
push 0x1
push 0x410
call eax
mov esi eax
mov eax 0x5b
mov [ ebp - 0x924 ] 0x2d002d
mov [ ebp - 0x920 ] ax
test esi esi
je r-xdata
push 0x4
push rw-data
push rw-data
call sub_10006a30
cmp ecx 0xd
jne r-xdata
mov [ ebp - 0x924 ] ecx
jmp r-xdata
mov esi [ ebp - 0x92c ]
mov ecx 0x2d
mov [ ebp + esi * 2 - 0x91c ] cx
mov edx ecx
mov eax 0x5d
mov [ ebp + esi * 2 - 0x91e ] ax
mov [ ebp + esi * 2 - 0x91a ] dx
mov eax 0xa
mov [ ebp + esi * 2 - 0x918 ] ax
mov ecx 0x5b
mov [ ebp + esi * 2 - 0x916 ] cx
mov ecx [ rw-data ]
add esi 0x8
mov edx 0x400
sub edx esi
push edx
mov edx [ ecx + 0x104 ]
lea eax [ ebp + esi * 2 - 0x924 ]
push eax
push edi
call edx
add esi eax
mov eax 0x5d
mov ecx 0xa
mov [ ebp + esi * 2 - 0x924 ] ax
mov edx ecx
lea eax [ esi + esi + 0x6 ]
mov [ ebp + esi * 2 - 0x922 ] cx
push eax
lea ecx [ ebp - 0x924 ]
push ecx
push rw-data
mov [ ebp + esi * 2 - 0x920 ] dx
call sub_10006a30
mov esi [ ebp - 0x934 ]
mov [ rw-data ] edi
mov edx [ rw-data ]
mov eax [ edx + 0x134 ]
push 0x3fd
lea ecx [ ebp - 0x91e ]
push ecx
push 0x0
push esi
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
push esi
mov [ ebp - 0x92c ] eax
call edx
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x924 ] 0xa
jmp r-xdata
push 0xff
lea eax [ ebp - 0x123 ]
push 0x0
push eax
mov [ ebp - 0x124 ] 0x0
call sub_1000c4d0
mov ecx [ rw-data ]
mov edx [ ecx + 0x144 ]
add esp 0xc
push 0x0
push edi
call edx
mov esi eax
mov eax [ rw-data ]
push 0x1
lea edi [ eax + 0x14c ]
mov eax [ eax + 0x140 ]
push esi
call eax
mov ecx [ edi ]
push eax
call ecx
mov eax [ rw-data ]
mov ecx [ eax + 0x100 ]
lea edx [ ebp - 0x124 ]
push edx
call ecx
mov eax [ rw-data ]
mov edx [ eax + 0x140 ]
push 0x0
push esi
lea edi [ eax + 0x14c ]
call edx
push eax
mov eax [ edi ]
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x148 ]
push esi
call edx
mov esi eax
xor eax eax
push esi
push eax
push 0x10
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebx ]
mov [ ebp - 0x24 ] ax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] eax
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
mov [ ebp - 0x6 ] ax
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0x124 ]
push edx
mov edx [ rw-data ]
push eax
mov eax [ edx + 0xfc ]
push ecx
call eax
mov edi eax
test edi edi
jns r-xdata
push 0x2
push r--data
push rw-data
call sub_10006a30
mov edx [ rw-data ]
mov eax [ edx + 0x2c ]
push r--data
lea ecx [ ebp - 0x924 ]
push ecx
call eax
lea ecx [ ebp - 0x924 ]
push ecx
call [ rw-data ]
add eax eax
push eax
lea edx [ ebp - 0x924 ]
push edx
xor eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
push esi
push 0x0
push 0x10
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebx ]
lea edx [ ebp - 0x124 ]
push edx
mov edx [ rw-data ]
push eax
mov eax [ edx + 0xfc ]
push ecx
call eax
test eax eax
js r-xdata
test edi edi
jle r-xdata
mov edx [ rw-data ]
push 0x100
push eax
mov eax [ edx + 0xc0 ]
lea ecx [ ebp - 0x124 ]
push ecx
call eax
add esp 0xc
push esi
push 0x0
push 0x10
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x124 ]
xor eax eax
push edx
push eax
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0xfc ]
call ecx
jmp r-xdata
lea edx [ edi + edi ]
push edx
lea eax [ ebp - 0x24 ]
push eax
jmp r-xdata
push rw-data
call sub_10006a30
sub_10005e40
mov eax [ rw-data ]
push esi
mov esi [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push rw-data
push ecx
call esi
call eax
mov edx [ rw-data ]
push eax
push sub_10005990
push 0xd
push rw-data
push edx
call esi
call eax
mov [ rw-data ] eax
pop esi
test eax eax
jne r-xdata
push eax
mov eax [ rw-data ]
push rw-data
push eax
call esi
call eax
mov [ rw-data ] 0x0
xor eax eax
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
jmp ecx
sub_10005eb0
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
push ecx
mov ecx [ rw-data ]
mov edx [ ecx + 0x44 ]
push 0x0
push eax
call edx
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
retn
mov ecx [ rw-data ]
push 0xfffffffe
push 0x0
push eax
push ecx
call sub_10008b60
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
sub_10005f20
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call edx
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push esi
push edi
lea esp [ esp ]
xor eax eax
mov esp ebp
pop ebp
retn 0x4
call sub_10005eb0
mov ecx [ rw-data ]
mov edx [ ecx + 0x6c ]
push rw-data
call edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
push 0xea60
push eax
call edx
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
push 0x0
push edx
call ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
add [ ebp - 0x4 ] 0xea60
push 0x0
push eax
call edx
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x70 ]
push rw-data
call eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx + 0xd4 ]
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov edi eax
mov eax [ edx + 0xd4 ]
push ecx
call eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x6c ]
push rw-data
mov ebx eax
call edx
cmp esi edi
ja r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x70 ]
push rw-data
call ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
xor esi esi
cmp ecx esi
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
mov eax [ rw-data ]
push ecx
mov ecx [ rw-data ]
mov edx [ ecx + 0x44 ]
push esi
push eax
call edx
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
push 0xfffffffe
push esi
push eax
push ecx
call sub_10008b60
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push eax
mov eax [ rw-data ]
push esi
push eax
call [ rw-data ]
sub_100060b0
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x20
push esi
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
mov [ rw-data ] 0x0
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xf8 ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xfc ] eax
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x100 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x104 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x84 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xd8 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x140 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x144 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x148 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x14c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ecx + 0xc ]
push rw-data
call eax
call sub_10005e40
mov esi eax
test esi esi
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x4 ]
push rw-data
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push eax
push sub_10005f20
push eax
push eax
mov eax [ edx + 0x78 ]
call eax
mov [ rw-data ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
mov esi eax
push esi
push esi
push esi
lea ecx [ ebp - 0x20 ]
push ecx
call [ rw-data ]
test eax eax
je r-xdata
call sub_10005e10
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx + 0x8 ]
push 0xea60
push ecx
call eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx + 0x8 ]
push 0x0
push ecx
call eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_10005eb0
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx + 0x8c ]
push 0xffffffff
push ecx
call eax
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
call [ rw-data ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x20 ]
push edx
call [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call [ rw-data ]
jmp r-xdata
sub_10006320
mov eax [ rw-data ]
mov ecx [ eax + 0x54 ]
push 0x0
push 0x0
push 0x0
push 0x0
call ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x78 ]
push rw-data
push 0x0
push 0x0
push sub_100060b0
push 0x0
push 0x0
call edx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
jmp ecx
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
jmp eax
sub_10006380
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x88 ]
push eax
call edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x12
push eax
push rw-data
push ecx
call [ GetProcAddress@IAT ]
call eax
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
push 0xffffffff
push edx
call ecx
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push edx
call ecx
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
push 0xffffffff
push edx
call ecx
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x8c ]
push 0xffffffff
push edx
call ecx
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push edx
call ecx
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x8c ]
push 0xffffffff
push edx
call ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
push eax
call edx
xor eax eax
retn
call sub_10005eb0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ rw-data ]
sub_10006470
push ebp
mov ebp esp
mov eax 0xc040
call sub_1000d8d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi edx
push edi
mov edi ecx
mov eax ebx
mov [ ebp - 0xc02c ] edi
mov [ ebp - 0xc030 ] esi
mov [ ebp - 0xc005 ] 0x0
mov [ ebp - 0xc024 ] 0x9
mov [ ebp - 0xc028 ] 0x100
mov [ rw-data ] 0x0
mov [ esi ] 0x21575a4c
mov [ esi + 0x4 ] ebx
call sub_10006920
xor edx edx
mov ecx 0x100
mov [ esi + 0x8 ] eax
mov [ ebp - 0xc010 ] 0xc
mov [ ebp - 0xc020 ] edx
mov [ ebp - 0xc018 ] ecx
lea eax [ ebp - 0xbffc ]
jmp r-xdata
mov [ eax - 0x8 ] edx
mov [ eax ] edx
mov [ eax - 0x4 ] 0x1
add eax 0xc
dec ecx
jne r-xdata
mov [ ebp - 0xc00c ] ecx
mov [ ebp - 0xc034 ] 0x200
cmp ebx edx
ja r-xdata
lea edx [ edi + ecx ]
movzx edi [ edx ]
lea eax [ edi + edi * 2 ]
mov eax [ ebp + eax * 4 - 0xbffc ]
mov [ ebp - 0xc038 ] edx
mov [ ebp - 0xc040 ] edi
mov [ ebp - 0xc01c ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0xc010 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc020 ]
cmp eax 0xf00
jne r-xdata
inc ecx
mov ebx eax
mov esi 0x1
mov [ ebp - 0xc014 ] ebx
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jge r-xdata
mov edx [ ebp - 0xc018 ]
mov esi [ ebp - 0xc02c ]
lea eax [ edx + edx * 2 ]
add eax eax
add eax eax
mov ecx [ ebp + eax - 0xc004 ]
movzx ecx [ ecx + esi ]
mov eax [ ebp + eax - 0xbffc ]
inc edx
lea ecx [ ecx + ecx * 2 ]
mov [ ebp + ecx * 4 - 0xbffc ] eax
mov eax edx
mov [ ebp - 0xc018 ] edx
cdq
and edx 0xfff
add eax edx
sar eax 0xc
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc018 ]
dec ecx
cmp ecx 0xff
jne r-xdata
mov ecx [ ebp - 0xc018 ]
add ecx eax
jmp r-xdata
mov [ ebp - 0xc018 ] 0x100
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc040 ]
lea edx [ eax + eax * 2 ]
cmp [ ebp + edx * 4 - 0xbffc ] 0x0
lea edx [ ebp + edx * 4 - 0xbffc ]
je r-xdata
mov ecx 0xfff
lea edi [ ebx + ebx * 2 ]
add edi edi
add edi edi
mov eax [ ebp + edi - 0xc000 ]
cmp eax esi
jbe r-xdata
lea edx [ eax + eax * 2 ]
mov [ ebp + edx * 4 - 0xbffc ] ecx
mov edx [ ebp - 0xc00c ]
lea eax [ ecx + ecx * 2 ]
add eax eax
add eax eax
lea esi [ edi + edi * 2 ]
mov [ ebp + eax - 0xc004 ] edx
mov ebx [ ebp + esi * 4 - 0xc000 ]
mov esi 0x1
add ebx esi
cmp [ ebp - 0xc020 ] 0xf00
lea ecx [ ebp + eax - 0xc000 ]
mov [ ecx ] ebx
mov [ ebp + eax - 0xbffc ] 0x0
jge r-xdata
mov eax [ edx ]
lea edx [ eax + eax * 2 ]
cmp [ ebp + edx * 4 - 0xbffc ] 0x0
lea edx [ ebp + edx * 4 - 0xbffc ]
jne r-xdata
mov eax [ ebp - 0xc00c ]
mov ebx [ ebp + edi - 0xbffc ]
mov edi [ ebp - 0xc01c ]
lea ecx [ esi + eax ]
mov [ ebp - 0xc014 ] ebx
cmp ecx [ ebp + 0x8 ]
jb r-xdata
add eax [ ebp - 0xc00c ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov eax [ ebp - 0xc034 ]
mov ecx [ ebp - 0xc024 ]
lea edx [ edx + ebx - 0x1 ]
mov [ ebp - 0xc00c ] edx
mov [ rw-data ] edx
cmp eax [ ebp - 0xc028 ]
jne r-xdata
add [ ebp - 0xc020 ] esi
mov edx [ ebp - 0xc038 ]
mov eax [ ebp + edi - 0xc004 ]
mov ecx [ ebp - 0xc02c ]
mov dl [ edx + esi ]
add eax ecx
mov [ ebp - 0xc03c ] eax
cmp dl [ eax + esi ]
jne r-xdata
test ecx ecx
jle r-xdata
cmp ecx 0xc
jge r-xdata
mov cl 0x1
xor eax eax
jmp r-xdata
inc [ ebp - 0xc028 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0xc014 ] ecx
jmp r-xdata
add ecx esi
rol eax 0x1
mov [ ebp - 0xc024 ] ecx
mov [ ebp - 0xc034 ] eax
mov edx [ ebp + edi - 0xc000 ]
cmp eax edx
jae r-xdata
mov ecx [ ebp - 0xc00c ]
mov edi [ ebp - 0xc02c ]
cmp [ ebp - 0xc005 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc010 ]
mov edx [ ebp - 0xc030 ]
mov dl [ edx + ecx ]
movzx eax [ ebp - 0xc005 ]
mov ecx 0x7
sub ecx eax
mov bl 0x1
shl bl cl
test edi esi
je r-xdata
test cl cl
je r-xdata
mov edx [ ebp - 0xc038 ]
mov dl [ edx + eax ]
mov ebx [ ebp - 0xc03c ]
cmp dl [ ebx + eax ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xc010 ]
pop edi
pop esi
xor ecx ebp
inc eax
pop ebx
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
not bl
and dl bl
or dl bl
jmp r-xdata
mov esi edx
mov [ ebp - 0xc01c ] ebx
inc eax
test cl cl
jne r-xdata
xor cl cl
mov [ ebp - 0xc005 ] al
test al al
jne r-xdata
dec eax
or eax 0xfffffff8
inc eax
mov edi [ ebp - 0xc030 ]
mov ecx [ ebp - 0xc010 ]
inc eax
and eax 0x80000007
mov [ edi + ecx ] dl
jns r-xdata
mov ebx [ ebp - 0xc014 ]
jmp r-xdata
rol esi 0x1
dec [ ebp - 0xc014 ]
jne r-xdata
inc ecx
mov [ ebp - 0xc010 ] ecx
mov [ edi + ecx ] al
mov edi [ ebp - 0xc01c ]
mov edx [ ebp - 0xc00c ]
sub_10006850
push esi
xor edx edx
xor eax eax
push edi
jmp r-xdata
movzx esi [ eax + rw-data ]
movzx edi [ eax + rw-data ]
mov ecx 0x1f
sub ecx esi
mov esi 0x1
shl esi cl
mov ecx 0x1f
sub ecx edi
mov edi 0x1
shl edi cl
add eax 0x2
or esi edi
or edx esi
cmp eax 0xe
jb r-xdata
pop edi
xor ecx ecx
pop esi
lea ebx [ ebx ]
test al 0x1
je r-xdata
xor eax edx
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax edx
jmp r-xdata
test al 0x1
je r-xdata
mov eax ecx
shr eax 0x1
test cl 0x1
je r-xdata
mov [ rw-data ] 0x0
retn
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
sub_10006920
push esi
mov esi ecx
push edi
mov edi eax
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
xor eax eax
pop esi
retn
xor eax eax
cmp edi 0x8
jb r-xdata
call sub_10006850
test edi edi
je r-xdata
mov ecx edi
shr ecx 0x3
lea ecx [ ecx ]
pop edi
not eax
pop esi
retn
movzx ecx [ esi ]
xor ecx eax
and ecx 0xff
shr eax 0x8
xor eax [ ecx * 4 + rw-data ]
inc esi
dec edi
jne r-xdata
movzx edx [ esi ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x1 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x2 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x3 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x4 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x5 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x6 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx [ esi + 0x7 ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
add esi 0x8
sub edi 0x8
dec ecx
jne r-xdata
sub_10006a30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor esi esi
push edi
mov edi [ eax ]
cmp [ ebp + 0xc ] esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
push edi
push 0x0
push edx
call ecx
mov ebx [ ebp + 0x10 ]
mov ecx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
lea edx [ esi + ebx ]
push edx
mov edx [ ecx + 0x30 ]
push edi
push 0x8
push eax
call edx
mov ebx [ ebp + 0x10 ]
mov ecx [ rw-data ]
push ebx
push 0x8
push ecx
call [ rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + 0xc4 ]
push ebx
push eax
add esi edi
push esi
call edx
add esp 0xc
cmp eax esi
je r-xdata
pop edi
pop esi
mov eax 0xeeeeeef2
pop ebx
pop ebp
retn 0xc
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0xc
sub_10006b20
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x44 ]
push eax
mov eax [ rw-data ]
push 0x0
push eax
call edx
mov edi eax
xor edi edi
jmp r-xdata
push ebx
push 0x8
push edx
call [ rw-data ]
lea ecx [ edi + ebx ]
push ecx
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x30 ]
push 0x8
push edx
call ecx
jmp r-xdata
mov eax [ esi ]
mov edx [ rw-data ]
test eax eax
je r-xdata
pop edi
mov eax 0xeeeeeef2
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edx + 0x34 ]
push ebx
add esi edi
push esi
push ecx
mov [ ebp - 0x4 ] 0x0
call eax
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi ] eax
mov esi eax
test esi esi
je r-xdata
sub_10006bc0
push ebp
mov ebp esp
sub esp 0x124
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
lea edx [ ebp - 0x10c ]
push edx
xor edi edi
push eax
mov eax [ rw-data ]
push edi
push edi
mov [ ebp - 0x11c ] ecx
mov ecx [ eax + 0xb8 ]
push 0x2
mov [ ebp - 0x108 ] edi
xor esi esi
mov [ ebp - 0x114 ] edi
mov [ ebp - 0x10c ] edi
call ecx
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x7d00
push 0x8
push ecx
mov [ ebp - 0x110 ] 0x3e8
mov [ ebp - 0x124 ] 0x7d00
call [ rw-data ]
mov [ ebp - 0x114 ] eax
cmp eax edi
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
mov [ ebp - 0x108 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10c ]
lea edx [ ebp - 0x124 ]
push edx
mov edx [ rw-data ]
push eax
lea eax [ ebp - 0x110 ]
push eax
mov eax [ edx + 0xb4 ]
push ecx
call eax
mov ecx [ rw-data ]
test eax eax
je r-xdata
mov [ ebp - 0x108 ] 0xeeeeeef2
jmp r-xdata
mov eax [ ebp - 0x10c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10c ]
mov edx [ ecx + 0xb0 ]
push eax
call edx
mov eax [ rw-data ]
push 0x800
push 0x8
push eax
mov [ ebp - 0x10c ] edi
call [ rw-data ]
mov esi eax
cmp esi edi
jne r-xdata
mov edx [ ecx + 0x24 ]
call edx
mov [ ebp - 0x108 ] eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ rw-data ]
push eax
mov eax [ edx + 0xb0 ]
call eax
mov [ ebp - 0x118 ] edi
cmp [ ebp - 0x110 ] edi
jbe r-xdata
mov [ ebp - 0x108 ] 0xeeeeeef2
jmp r-xdata
mov eax [ ebp - 0x114 ]
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ rw-data ]
push esi
push 0x0
push ecx
call [ rw-data ]
push ebx
mov ebx [ ebp - 0x114 ]
add ebx 0x8
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x108 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0xc
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x2c ]
push rw-data
push esi
call edx
push esi
call [ rw-data ]
mov edi [ ebp - 0x11c ]
add eax eax
push eax
push esi
push edi
call sub_10006a30
mov eax [ ebp + 0x8 ]
cmp eax 0x4
jae r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax [ ebp - 0x118 ]
inc eax
add ebx 0x20
mov [ ebp - 0x118 ] eax
cmp eax [ ebp - 0x110 ]
jb r-xdata
push edi
lea ecx [ ebx - 0x8 ]
push ecx
inc eax
push eax
call sub_10006bc0
cmp [ ebx ] 0x0
jne r-xdata
mov edi [ rw-data ]
push rw-data
call [ rw-data ]
mov edx [ edi + 0xc4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push rw-data
push esi
call edx
add esp 0xc
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
cmp [ ebx ] 0x2
jne r-xdata
mov edi [ rw-data ]
push rw-data
call [ rw-data ]
mov ecx [ edi + 0xc4 ]
lea eax [ eax + eax + 0x2 ]
push eax
push rw-data
push esi
call ecx
add esp 0xc
cmp [ ebx ] 0x3
jne r-xdata
mov edi [ rw-data ]
push rw-data
call [ rw-data ]
lea edx [ eax + eax + 0x2 ]
mov eax [ edi + 0xc4 ]
push edx
push rw-data
push esi
call eax
add esp 0xc
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov edi [ rw-data ]
push rw-data
call [ rw-data ]
mov edx [ edi + 0xc4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push rw-data
push esi
call edx
add esp 0xc
mov edx [ ebx + 0xc ]
mov eax [ rw-data ]
mov ecx [ eax + 0x2c ]
push edx
push esi
call ecx
cmp [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x2c ]
push rw-data
push esi
call ecx
dec edi
jne r-xdata
push 0xff
lea edx [ ebp - 0x103 ]
push 0x0
push edx
mov [ ebp - 0x104 ] 0x0
call sub_1000c4d0
mov eax [ ebx + 0xc ]
mov edx [ rw-data ]
add eax 0x4
push eax
mov eax [ edx + 0xe0 ]
push rw-data
lea ecx [ ebp - 0x104 ]
push 0x100
push ecx
call eax
mov edx [ rw-data ]
mov eax [ edx + 0xec ]
add esp 0x1c
lea ecx [ ebp - 0x104 ]
push ecx
call eax
test eax eax
je r-xdata
movsx ecx [ eax + 0xa ]
mov edx [ eax + 0xc ]
mov eax [ edx ]
mov edx [ rw-data ]
push ecx
push eax
mov eax [ edx + 0xc4 ]
lea ecx [ ebp - 0x120 ]
push ecx
call eax
mov eax [ rw-data ]
mov ecx [ ebp - 0x120 ]
mov edx [ eax + 0xe8 ]
add esp 0xc
push ecx
lea edi [ eax + 0xe4 ]
call edx
push eax
push rw-data
push esi
call [ rw-data ]
mov ecx 0x400
sub ecx eax
push ecx
push esi
call [ rw-data ]
lea edx [ esi + eax * 2 ]
mov eax [ edi ]
push edx
call eax
add esp 0x10
sub_10006f70
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x40 ] ebx
xor eax eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
push 0x208
push 0x8
mov eax [ rw-data ]
push eax
call [ rw-data ]
mov esi eax
cmp esi ebx
jne r-xdata
push esi
push 0x104
mov edx [ rw-data ]
mov eax [ edx + 0x80 ]
call eax
push esi
call [ rw-data ]
mov edi eax
push rw-data
call [ rw-data ]
add edi eax
lea edi [ edi + edi + 0x2 ]
push edi
push 0x8
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
push esi
push rw-data
push edi
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0xe4 ]
call ecx
add esp 0x14
push edi
push 0x8
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn
push rw-data
push esi
push rw-data
push edi
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xe4 ]
call edx
add esp 0x14
push 0x104
push esi
push rw-data
mov eax [ rw-data ]
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
call eax
push rw-data
push esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x2c ]
call edx
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
call ecx
mov edi eax
push esi
push 0x0
mov edx [ rw-data ]
push edx
call [ rw-data ]
cmp edi 0xffffffff
jne r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
jmp r-xdata
mov [ ebp - 0x30 ] 0xeeeeeef2
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef2
jmp r-xdata
push 0x0
push 0x0
push rw-data
push edi
mov edx [ rw-data ]
mov eax [ edx + 0x5c ]
call eax
push edi
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
call edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x48 ]
call edx
push rw-data
lea eax [ ebp - 0x2c ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call ebx
call eax
jmp r-xdata
call sub_100036d0
call sub_100036d0
push 0x0
push 0x80
push 0x4
push 0x0
push 0x1
push 0x80000000
push r--data
call [ CreateFileA@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x80000001
lea esi [ ebp - 0x40 ]
call sub_10003620
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov [ rw-data ] 0x80000001
call sub_100036d0
mov edi 0x80000002
push edi
call sub_10003620
mov esi eax
mov [ ebp - 0x30 ] esi
test esi esi
je r-xdata
push 0x80000001
lea esi [ ebp - 0x40 ]
call sub_10003620
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov [ ebp - 0x44 ] 0x0
push 0x0
push esi
call [ GetFileSize@IAT ]
mov edi eax
push edi
push 0x8
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push edi
push ebx
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
lea edx [ ebp - 0x34 ]
push edx
mov eax [ rw-data ]
push eax
push 0x80000001
call [ RegCreateKeyW@IAT ]
push edi
push ebx
push 0x3
push 0x0
mov ecx [ rw-data ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
call [ RegSetValueExW@IAT ]
mov eax [ ebp - 0x34 ]
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10007399
xor eax eax
mov edx [ ebp - 0x3c ]
movzx edi [ esi + edx + 0x6 ]
lea eax [ edi + 0x1 ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
mov [ esi * 4 + rw-data ] eax
test eax eax
je r-xdata
mov [ ebp - 0x34 ] 0x0
lea edx [ ebp - 0x34 ]
push edx
push 0x20006
push 0x0
mov eax [ rw-data ]
push eax
push 0x80000001
mov ecx [ rw-data ]
mov edx [ ecx + 0x9c ]
call edx
mov ebx eax
mov [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0x40 ]
push eax
call sub_100038e0
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
mov edx [ ebp - 0x3c ]
push edx
push 0x3
push 0x0
mov ecx [ rw-data ]
push ecx
push eax
mov edx [ rw-data ]
mov eax [ edx + 0x94 ]
call eax
mov ebx eax
mov [ ebp - 0x30 ] ebx
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0xa0 ]
call eax
test ebx ebx
je r-xdata
inc esi
jmp r-xdata
mov ecx [ esi * 4 + rw-data ]
mov [ edi + ecx ] 0x0
xor esi esi
lea esi [ ebp - 0x40 ]
call sub_100036d0
push 0x80000001
call sub_10003620
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov [ ebp - 0x48 ] esi
cmp esi 0xa
jge r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax ebx
jmp r-xdata
sub_10007399
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
push eax
mov edx [ rw-data ]
mov eax [ edx + 0xa0 ]
call eax
test ebx ebx
je r-xdata
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
retn
call sub_100073d0
sub_100073d0
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ rw-data ]
pop esi
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push eax
push 0x0
push ecx
call [ rw-data ]
retn
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ rw-data ]
sub_10007430
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi edx
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push eax
lea esi [ ebp - 0x28 ]
call sub_10003620
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x24 ]
movzx eax [ edx + edi + 0x6 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
push ecx
push edi
mov edx [ rw-data ]
push edx
mov eax ebx
lea ecx [ ebp - 0x28 ]
call sub_10003700
mov esi eax
test esi esi
je r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push rw-data
mov ecx [ rw-data ]
mov edx [ ecx + 0x70 ]
call edx
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ edi * 4 + rw-data ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0xc4 ]
call eax
add esp 0xc
mov ecx [ edi * 4 + rw-data ]
mov [ ebx + ecx ] 0x0
push rw-data
mov edx [ rw-data ]
mov eax [ edx + 0x6c ]
call eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100075c5
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebx + 0x1 ]
push eax
mov ecx [ edi * 4 + rw-data ]
push ecx
push 0x8
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x30 ]
call ecx
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef2
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100075c5
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
je r-xdata
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xa0 ]
call edx
retn
push eax
push 0x0
mov eax [ rw-data ]
push eax
call [ rw-data ]
sub_10007600
push ebp
mov ebp esp
sub esp 0x1c
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov [ ebp - 0x1c ] 0x0
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x24 ]
call edx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ ebp - 0xc ] ecx
push edi
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] sub_10003450
mov [ ebp - 0x18 ] sub_10004660
mov [ ebp - 0x14 ] sub_10008b60
mov [ ebp - 0x10 ] sub_10003500
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] sub_10006a30
call eax
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x90 ]
push esi
call ecx
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx * 4 + rw-data ] esi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ rw-data ]
mov eax [ edx + 0x90 ]
push esi
call eax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_100076f0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx edx
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
cmp edi 0x9
ja r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0xa
je r-xdata
cmp [ edi * 4 + rw-data ] eax
je r-xdata
push edi
push ebx
call sub_10007600
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef7
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
push edx
lea esi [ ebp - 0x28 ]
call sub_10003620
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc [ rw-data ]
push ebx
mov ecx [ rw-data ]
mov edx [ ecx + 0x10 ]
call edx
push ebx
add edi 0xa
push edi
mov ecx [ rw-data ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_10003700
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10007868
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10007880
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
mov [ ebp - 0xa8 ] ebx
xor eax eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0xac ] ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov esi edi
cmp edi 0x9
ja r-xdata
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x90 ]
call eax
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call eax
mov eax 0xeeeeeef8
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ edi * 4 + rw-data ] eax
mov ecx [ rw-data ]
push ecx
lea esi [ ebp - 0xa8 ]
call sub_10003620
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi * 4 + rw-data ]
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0xa4 ]
movzx esi [ eax + edi + 0x10 ]
test esi esi
je r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
jmp r-xdata
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10007a8b
lea ecx [ esi + 0x1 ]
push ecx
push 0x8
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov ebx eax
mov [ ebp - 0xac ] ebx
test ebx ebx
jne r-xdata
add edi 0xa
push ebx
push edi
lea ecx [ ebp - 0xa8 ]
push ecx
call sub_100038e0
test eax eax
je r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef2
jmp r-xdata
mov [ esi + ebx ] 0x0
push 0x0
push edi
mov edx [ rw-data ]
push edx
xor eax eax
lea ecx [ ebp - 0xa8 ]
call sub_10003700
mov esi eax
test esi esi
je r-xdata
dec [ rw-data ]
xor ecx ecx
mov [ ebp - 0x9c ] cx
push 0x7e
push ecx
lea edx [ ebp - 0x9a ]
push edx
call sub_1000c4d0
push ebx
push rw-data
push 0x40
lea eax [ ebp - 0x9c ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xe4 ]
call edx
add esp 0x1c
lea eax [ ebp - 0x9c ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x28 ]
call edx
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
jmp r-xdata
sub_10007a8b
mov eax [ ebp - 0xa8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0xa0 ]
call ecx
test ebx ebx
je r-xdata
push eax
push 0x0
mov edx [ rw-data ]
push edx
call [ rw-data ]
retn
push ebx
push 0x0
mov eax [ rw-data ]
push eax
call [ rw-data ]
sub_10007ae0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push esi
push 0x3f
push eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] al
lea eax [ ebp - 0x43 ]
push eax
mov [ ebp - 0x50 ] 0x0
call sub_1000c4d0
mov ecx [ rw-data ]
add esp 0xc
push ecx
lea esi [ ebp - 0x50 ]
call sub_10003620
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10008fd5
mov esp ebp
pop ebp
retn
xor esi esi
push ebx
lea esp [ esp ]
inc esi
cmp esi 0xa
jl r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ esi + 0xa ]
push ecx
lea edx [ ebp - 0x50 ]
push edx
call sub_100038e0
test eax eax
je r-xdata
mov edx [ ebp - 0x4c ]
mov [ esi * 4 + rw-data ] 0x0
mov bl [ edx + esi + 0x10 ]
test bl bl
je r-xdata
mov eax [ ebp - 0x50 ]
pop ebx
test eax eax
je r-xdata
movzx eax bl
push esi
lea ecx [ ebp - 0x44 ]
push ecx
mov [ ebp + eax - 0x44 ] 0x0
call sub_10007600
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
mov eax [ edx + 0xa0 ]
call eax
mov ecx [ rw-data ]
push eax
push 0x0
push ecx
call [ rw-data ]
sub_10007bc0
push ebp
mov ebp esp
sub esp 0xa38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x228
lea ecx [ ebp - 0xa2c ]
push 0x0
push ecx
mov [ ebp - 0xa34 ] eax
mov [ ebp - 0xa30 ] 0x0
call sub_1000c4d0
xor edx edx
push 0x7fe
push edx
lea eax [ ebp - 0x802 ]
push eax
mov [ ebp - 0x804 ] dx
call sub_1000c4d0
mov ecx [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0x18
push rw-data
push ecx
call esi
mov edi eax
mov [ ebp - 0xa38 ] edi
test edi edi
jne r-xdata
mov ecx [ rw-data ]
push ebx
push 0x0
push 0x2
push rw-data
push ecx
call esi
call eax
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
lea ecx [ ebp - 0xa30 ]
push ecx
push ebx
push rw-data
push edx
mov [ ebp - 0xa30 ] 0x22c
call esi
call eax
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x24 ]
call eax
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
push ebx
call ecx
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
lea ebx [ ebx ]
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
lea esi [ eax + 0xe4 ]
call ecx
push eax
push rw-data
push 0x400
lea edx [ ebp - 0x804 ]
push edx
call [ rw-data ]
mov ecx [ esi ]
lea eax [ ebp + eax * 2 - 0x804 ]
push eax
call ecx
add esp 0x10
mov edi [ rw-data ]
lea edx [ ebp - 0x804 ]
push edx
call [ rw-data ]
mov ecx 0x400
sub ecx eax
push ecx
lea edx [ ebp - 0x804 ]
push edx
call [ rw-data ]
mov ecx [ edi + 0x134 ]
lea eax [ ebp + eax * 2 - 0x804 ]
push eax
push 0x0
push esi
call ecx
mov edx [ rw-data ]
mov eax [ edx + 0x14 ]
push esi
call eax
mov edx [ rw-data ]
mov eax [ edx + 0x2c ]
push rw-data
lea ecx [ ebp - 0x804 ]
push ecx
call eax
mov edi [ ebp - 0xa38 ]
jmp r-xdata
mov eax [ ebp - 0xa28 ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x108 ]
push eax
push 0x1
push 0x410
call edx
mov esi eax
mov eax [ ebp - 0xa28 ]
push eax
mov eax [ rw-data ]
lea ecx [ ebp - 0xa0c ]
push ecx
mov ecx [ eax + 0xe4 ]
push rw-data
lea edx [ ebp - 0x804 ]
push 0x400
push edx
call ecx
add esp 0x14
test esi esi
je r-xdata
lea edx [ ebp - 0x804 ]
push edx
call [ rw-data ]
mov ecx [ ebp - 0xa34 ]
add eax eax
push eax
lea eax [ ebp - 0x804 ]
push eax
push ecx
call sub_10006a30
lea edx [ ebp - 0xa30 ]
push edx
push ebx
call edi
test eax eax
jne r-xdata
sub_10007e10
push ebp
mov ebp esp
sub esp 0x54
push 0x40
lea eax [ ebp - 0x50 ]
push 0x0
push eax
call sub_1000c4d0
add esp 0xc
xor eax eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ rw-data ]
lea edx [ ebp - 0x54 ]
push edx
push eax
push eax
push 0x8000000
push eax
push eax
push eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push rw-data
push ecx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x54 ] 0x44
mov [ ebp - 0x28 ] 0x80
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
mov esp ebp
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x10 ]
mov [ esi ] edx
sub_10007ea0
push ebp
mov ebp esp
sub esp 0x614
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
xor ecx ecx
push 0x3fe
push ecx
lea edx [ ebp - 0x60a ]
push edx
mov [ ebp - 0x614 ] eax
mov [ ebp - 0x60c ] cx
call sub_1000c4d0
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_1000c4d0
mov eax [ rw-data ]
add esp 0x18
push 0x200
lea edx [ ebp - 0x60c ]
push edx
push rw-data
push rw-data
push eax
mov [ ebp - 0x610 ] 0x0
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x24 ]
call edx
mov edx [ rw-data ]
mov eax [ edx + 0x80 ]
lea ecx [ ebp - 0x20c ]
push ecx
push 0x104
call eax
mov edx [ rw-data ]
test eax eax
je r-xdata
mov eax [ edx + 0x24 ]
call eax
jmp r-xdata
mov eax [ edx + 0x2c ]
push rw-data
lea ecx [ ebp - 0x20c ]
push ecx
call eax
mov edi [ rw-data ]
lea ecx [ ebp - 0x20c ]
push ecx
push esi
push rw-data
push 0x200
lea edx [ ebp - 0x60c ]
push edx
call [ rw-data ]
mov ecx [ edi + 0xe4 ]
lea eax [ ebp + eax * 2 - 0x60c ]
push eax
call ecx
add esp 0x14
lea edx [ ebp - 0x60c ]
push edx
lea esi [ ebp - 0x610 ]
call sub_10007e10
mov esi eax
test esi esi
jne r-xdata
mov esi eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ eax + 0xd4 ]
push ecx
lea edi [ eax + 0x8 ]
call edx
mov ebx [ ebp - 0x610 ]
push eax
mov eax [ edi ]
push ebx
call eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
lea edx [ ebp - 0x20c ]
push edx
call ecx
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ rw-data ]
push esi
push ebx
push rw-data
push ecx
call [ GetProcAddress@IAT ]
call eax
mov eax [ rw-data ]
mov ecx [ eax + 0x24 ]
call ecx
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x38 ]
push 0x0
push edi
call eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
push edi
call edx
test esi esi
jne r-xdata
mov ebx eax
mov eax [ ebp - 0x614 ]
push edi
call sub_10006b20
mov esi eax
mov eax esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x28 ]
lea eax [ ebp - 0x20c ]
push eax
call edx
jmp r-xdata
sub_100080a0
push rw-data
push esi
call [ rw-data ]
test eax eax
jne r-xdata
push rw-data
push esi
call [ rw-data ]
test eax eax
jne r-xdata
mov eax 0x80000002
retn
push rw-data
push esi
call [ rw-data ]
test eax eax
jne r-xdata
mov eax 0x80000001
retn
push rw-data
push esi
call [ rw-data ]
test eax eax
jne r-xdata
mov eax 0x80000005
retn
push rw-data
push esi
call [ rw-data ]
neg eax
sbb eax eax
and eax 0x7ffffffd
add eax 0x80000003
retn
mov eax 0x80000000
retn
sub_10008120
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x844
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x828 ] eax
mov ebx [ ebp + 0x10 ]
xor edi edi
mov [ ebp - 0x824 ] edi
mov [ ebp - 0x840 ] edi
mov [ ebp - 0x830 ] edi
mov [ ebp - 0x834 ] edi
mov [ ebp - 0x844 ] edi
mov [ ebp - 0x83c ] edi
mov [ ebp - 0x838 ] edi
xor ecx ecx
mov [ ebp - 0x81c ] cx
push 0x7fe
push edi
lea edx [ ebp - 0x81a ]
push edx
call sub_1000c4d0
add esp 0xc
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x824 ]
push eax
push 0x20019
push edi
push ebx
mov ecx [ ebp - 0x828 ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x9c ]
call eax
mov [ ebp - 0x820 ] eax
cmp [ ebp - 0x824 ] edi
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0xac ] edi
jne r-xdata
push ebx
call [ rw-data ]
add eax eax
push eax
push ebx
push esi
call sub_10006a30
cmp [ ecx + 0xa8 ] edi
jne r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0xac ] eax
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp - 0x854 ]
push edx
push edi
lea eax [ ebp - 0x834 ]
push eax
lea edx [ ebp - 0x830 ]
push edx
lea eax [ ebp - 0x840 ]
push eax
push edi
lea edx [ ebp - 0x838 ]
push edx
lea eax [ ebp - 0x83c ]
push eax
push edi
push edi
push edi
mov edx [ ebp - 0x824 ]
push edx
mov eax [ ecx + 0xac ]
call eax
mov [ ebp - 0x820 ] eax
cmp eax edi
jne r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0xa8 ] eax
cmp eax edi
je r-xdata
mov eax [ ecx + 0x24 ]
call eax
mov esi eax
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
jmp r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax [ ebp - 0x820 ]
jmp r-xdata
mov edx [ ebp - 0x830 ]
lea eax [ edx + edx + 0x2 ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
mov [ ebp - 0x820 ] eax
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x834 ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
mov edi eax
test edi edi
jne r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push ebx
push rw-data
push 0x400
lea edx [ ebp - 0x81c ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0xe4 ]
call ecx
add esp 0x10
lea edx [ ebp - 0x81c ]
push edx
call [ rw-data ]
add eax eax
push eax
lea eax [ ebp - 0x81c ]
push eax
push esi
call sub_10006a30
mov ecx [ ebp - 0x830 ]
inc ecx
mov [ ebp - 0x82c ] ecx
mov edx [ ebp - 0x834 ]
mov [ ebp - 0x828 ] edx
xor ebx ebx
mov edx [ ebp - 0x820 ]
push edx
push eax
mov eax [ rw-data ]
push eax
call [ rw-data ]
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x820 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
push edi
push 0x0
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov eax [ ebp - 0x838 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push 0x8
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp - 0x830 ]
inc eax
mov [ ebp - 0x82c ] eax
mov ecx [ ebp - 0x834 ]
inc ecx
mov [ ebp - 0x828 ] ecx
lea edx [ ebp - 0x828 ]
push edx
push edi
lea eax [ ebp - 0x844 ]
push eax
push 0x0
lea ecx [ ebp - 0x82c ]
push ecx
mov edx [ ebp - 0x820 ]
push edx
push ebx
mov eax [ ebp - 0x824 ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xa8 ]
call edx
test eax eax
jne r-xdata
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0xeeeeeef2
jmp r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0xa4 ] 0x0
jne r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
jmp r-xdata
inc ebx
jmp r-xdata
mov eax [ ebp - 0x820 ]
push eax
push rw-data
push 0x400
lea ecx [ ebp - 0x81c ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0xe4 ]
call eax
add esp 0x10
lea ecx [ ebp - 0x81c ]
push ecx
call [ rw-data ]
add eax eax
push eax
lea edx [ ebp - 0x81c ]
push edx
push esi
call sub_10006a30
mov eax [ ebp - 0x844 ]
dec eax
cmp eax 0x6
ja r-xdata
xor ebx ebx
push rw-data
mov edx [ rw-data ]
push edx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0xa4 ] eax
mov [ ebp - 0x848 ] ebx
cmp ebx [ ebp - 0x840 ]
jae r-xdata
jmp [ eax * 4 + jump_table_10008670 ]
push edi
push 0x0
mov edx [ rw-data ]
push edx
call [ rw-data ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10008657
xor eax eax
mov edx [ ebp - 0x838 ]
inc edx
mov [ ebp - 0x82c ] edx
lea eax [ ebp - 0x854 ]
push eax
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x82c ]
push ecx
push edi
push ebx
mov edx [ ebp - 0x824 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0xa4 ]
call ecx
neg eax
sbb eax eax
inc eax
je r-xdata
push edi
push rw-data
mov edx [ edi ]
push edx
push rw-data
jmp r-xdata
push 0x1a
push rw-data
push esi
call sub_10006a30
mov edx [ ebp - 0x828 ]
push edx
push edi
push esi
call sub_10006a30
push 0x2
push rw-data
push esi
call sub_10006a30
inc ebx
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push 0x400
lea eax [ ebp - 0x81c ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xe4 ]
call edx
add esp 0x10
lea eax [ ebp - 0x81c ]
push eax
call [ rw-data ]
add eax eax
push eax
lea ecx [ ebp - 0x81c ]
push ecx
push esi
call sub_10006a30
inc ebx
jmp r-xdata
mov [ ebp - 0x84c ] ebx
cmp ebx [ ebp - 0x83c ]
jae r-xdata
push edi
push rw-data
push 0x400
lea eax [ ebp - 0x81c ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xe4 ]
call edx
add esp 0x10
lea eax [ ebp - 0x81c ]
push eax
call [ rw-data ]
add eax eax
push eax
lea ecx [ ebp - 0x81c ]
push ecx
push esi
call sub_10006a30
push eax
push edi
mov edx [ ebp - 0x824 ]
push edx
push esi
call sub_10008120
inc ebx
jmp r-xdata
sub_10008690
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0xc ]
push eax
push 0x20006
push ebx
push ecx
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x9c ]
call ecx
mov esi eax
cmp esi ebx
je r-xdata
mov esi [ rw-data ]
push edi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
push eax
push edi
push 0x1
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ esi + 0x94 ]
call eax
mov esi eax
cmp esi ebx
je r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000878a
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_100087b0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x1c ]
push eax
push 0x2
push edi
push ecx
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x9c ]
call ecx
mov esi eax
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call [ GetProcAddress@IAT ]
call eax
mov esi eax
cmp esi edi
je r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000889a
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100088c0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
push 0x2710
mov eax [ rw-data ]
mov ecx [ eax + 0x68 ]
call ecx
mov [ ebp - 0x28 ] edi
mov edx [ rw-data ]
mov [ ebp - 0x2c ] edx
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] edi
push rw-data
mov ecx [ rw-data ]
mov edx [ ecx + 0x70 ]
call edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xd4 ]
call edx
mov esi eax
push rw-data
mov eax [ rw-data ]
mov ecx [ eax + 0x6c ]
call ecx
push esi
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
call ecx
test eax eax
jne r-xdata
push 0xffffffff
push edi
lea ecx [ ebp - 0x2c ]
push ecx
push 0x2
mov edx [ rw-data ]
mov eax [ edx + 0x130 ]
call eax
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] di
je r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
jmp r-xdata
mov [ ebp - 0x1c ] edi
lea edx [ ebp - 0x1c ]
push edx
push rw-data
call sub_10003b60
cmp eax edi
je r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x74 ]
call eax
lea ecx [ ebp - 0x20 ]
push ecx
push eax
mov edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x24 ]
mov dl 0x1
call sub_10008de0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] ax
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
mov eax [ edx + 0x28 ]
call eax
sub_10008a28
mov eax [ rw-data ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x74 ]
call ecx
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x14 ]
call ecx
mov [ rw-data ] edi
mov [ ebp - 0x1c ] edi
retn
push eax
push edi
mov edx [ rw-data ]
push edx
call [ rw-data ]
sub_10008a90
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
mov ecx [ eax + 0x7c ]
push 0x0
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x0
call ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
push esi
push 0x0
push 0x6
push 0x3
push 0x0
push 0x0
push 0x80000000
push edx
call ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov eax [ edx + 0x78 ]
lea ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0x0
push sub_100088c0
push 0x0
push 0x0
call eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x34 ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push 0x2
push rw-data
push esi
call ecx
mov edx [ rw-data ]
mov eax [ edx + 0x38 ]
push 0x0
push esi
call eax
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ecx + 0x14 ]
push esi
call edx
cmp [ ebp - 0x4 ] 0xe4e1c0
jbe r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x28 ]
push eax
call edx
xor eax eax
mov [ rw-data ] ax
sub_10008b60
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x48 ] esi
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] 0xb2745daf
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x20 ] ecx
lea edx [ ebp - 0x30 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x48 ]
call ecx
xor eax eax
mov [ ebp - 0x4c ] eax
mov edx [ rw-data ]
mov [ ebp - 0x50 ] edx
mov ecx [ rw-data ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x4 ] eax
push 0xffffffff
push eax
lea edx [ ebp - 0x50 ]
push edx
push 0x2
mov eax [ rw-data ]
mov ecx [ eax + 0x130 ]
call ecx
cmp eax 0x1
jne r-xdata
test esi esi
je r-xdata
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
jmp r-xdata
mov [ ebp - 0x38 ] ebx
push 0x0
push 0x6
push 0x4
push 0x0
push 0x0
push 0xc0000000
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
call ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax ebx
mov [ ebp - 0x54 ] eax
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10008fd5
mov esp ebp
pop ebp
retn 0x10
inc [ rw-data ]
push 0x0
push 0x0
push 0x0
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x60 ]
call ecx
push 0x0
lea edx [ ebp - 0x44 ]
push edx
push 0x2
push rw-data
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x18 ]
call ecx
test eax eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebx + 0xc ]
jmp r-xdata
push 0x2
push 0x0
push 0x0
push esi
mov eax [ rw-data ]
mov ecx [ eax + 0x60 ]
call ecx
push 0x0
lea edx [ ebp - 0x44 ]
push edx
push 0x20
lea eax [ ebp - 0x3c ]
push eax
push esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x18 ]
call edx
test eax eax
jne r-xdata
lea eax [ eax + eax * 2 ]
shr eax 0x1
add eax 0xc
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x54 ] eax
push eax
push 0x8
mov eax [ rw-data ]
push eax
call [ rw-data ]
mov edi eax
mov [ ebp - 0x40 ] edi
test edi edi
je r-xdata
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
jmp r-xdata
push ebx
mov edx edi
mov ecx esi
call sub_10006470
cmp eax ebx
jbe r-xdata
push rw-data
push 0x0
push rw-data
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x1c ]
call eax
push esi
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
call edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10008db1
mov eax 0x1
push 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push ebx
push eax
push esi
mov edx [ rw-data ]
mov eax [ edx + 0x18 ]
call eax
test eax eax
jne r-xdata
mov [ ebp - 0x48 ] edi
mov ebx eax
push edi
push 0x0
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
xor edi edi
mov [ ebp - 0x40 ] edi
jmp r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_1000b110
add esp 0xc
xor eax eax
jmp r-xdata
sub_10008db1
test edi edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push 0x0
mov eax [ rw-data ]
push eax
call [ rw-data ]
retn
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x74 ]
call edx
sub_10008de0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
xor esi esi
push ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
call sub_10004060
mov edi eax
cmp edi esi
mov esi [ ebp - 0x8 ]
je r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
push edx
push eax
push esi
push ecx
call sub_10008e80
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ rw-data ]
push esi
push 0x0
push edx
call [ rw-data ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
push edx
push eax
push esi
push ecx
call sub_10008e80
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
push edx
push eax
push esi
push ecx
call sub_10008e80
test eax eax
jne r-xdata
xor edi edi
sub_10008e80
push ebp
mov ebp esp
mov eax [ rw-data ]
push edi
push 0x8
push 0x8
push eax
call [ rw-data ]
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
mov esi edi
call sub_10005670
test eax eax
jne r-xdata
pop edi
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
push eax
push ecx
push edi
call sub_10005730
mov esi eax
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edi
push eax
push edx
call [ rw-data ]
pop esi
xor eax eax
pop edi
pop ebp
retn 0x10
mov eax [ edi ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
mov eax [ edx + 0x124 ]
call eax
mov eax [ rw-data ]
push edi
push 0x0
push eax
call [ rw-data ]
mov eax esi
pop esi
pop edi
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov edx [ ecx + 0x124 ]
push eax
call edx
DllGetClassObject
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx r--data
call sub_10001000
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push 0x4
push edi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040111
pop ebp
retn 0xc
push esi
push 0x8
mov [ edi ] 0x0
call sub_1000906f
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax 0x80004003
pop edi
pop ebp
retn 0xc
pop esi
mov eax 0x8007000e
pop edi
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
inc [ rw-data ]
push edi
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
mov edx [ eax ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
call sub_100020a0
pop esi
xor eax eax
pop edi
pop ebp
retn 0xc
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push 0x1
mov ecx esi
call edx
sub_10008fff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10008fef
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10008fe4
pop ecx
sub_1000902b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10009665
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10008fe4
pop ecx
sub_1000906f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100097f6
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10009899
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_10009697
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_100098c1
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_100095a8
push sub_1000d9f8
mov [ rw-data ] esi
call sub_100097df
pop ecx
sub_100090ef
push 0x8
push r--data
call sub_1000a880
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_1000a840
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_10009c74
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1000991f
push 0x214
push 0x1
call sub_10009e34
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_1000a7f4
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1000a75d
mov [ rw-data ] eax
call sub_1000a194
test eax eax
jns r-xdata
call sub_1000a85e
jmp r-xdata
call sub_1000a8c5
retn 0xc
xor eax eax
inc eax
push edi
call sub_10009c06
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_1000a167
call sub_1000a6a2
test eax eax
js r-xdata
call sub_10009953
jmp r-xdata
push esi
call sub_10009472
pop ecx
jmp r-xdata
push edi
push esi
call sub_10009990
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100091c8
jmp r-xdata
call sub_1000a3d9
call sub_10009953
call sub_1000a85e
call sub_1000a3d9
jmp r-xdata
call sub_1000a42c
test eax eax
js r-xdata
push 0x0
call sub_10009f7a
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10009253
push 0xc
push r--data
call sub_1000a880
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_100021d0
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_100090ef
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_100090ef
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_100021d0
push edi
push 0x0
push ebx
call sub_100090ef
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1000a8c5
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_10009253
pop ecx
pop ebp
retn 0xc
call sub_1000abd9
sub_1000936c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1000ac74
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1000ac74
pop ecx
sub_10009472
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1000acbe
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1000ac7c
pop ecx
mov [ esi ] eax
pop esi
sub_100094ac
push 0xc
push r--data
call sub_1000a880
push 0xe
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10009513
call sub_1000a8c5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10009472
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10009472
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10009520
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_100095d2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_1000b080
lea esi [ eax + 0x1 ]
push esi
call sub_100097f6
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_1000b018
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_10009630
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_10009612
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_100095d2
jmp r-xdata
sub_10009670
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10009612
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10008fe4
pop ecx
sub_10009697
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_10009630
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100096bc
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_1000b262
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10009e80
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10009e80
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_10009772
mov edi edi
push esi
push 0x4
push 0x20
call sub_10009e34
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_100097a3
push 0xc
push r--data
call sub_1000a880
call sub_10009f11
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_100096bc
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100097d9
mov eax [ ebp - 0x1c ]
call sub_1000a8c5
retn
sub_100097f6
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_10009899
pop ecx
call sub_1000acbe
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_1000b46a
push 0x1e
call sub_1000b2bb
push 0xff
call sub_10009ef9
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_1000acbe
mov [ eax ] esi
push ebx
call sub_10009899
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_1000acbe
mov [ eax ] esi
sub_10009899
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_100098c1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_1000991f
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_10009953
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_1000aeb5
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_10009990
push 0x8
push r--data
call sub_1000a880
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10009a32
push 0xc
call sub_1000afe5
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_1000b4a3
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10009a3b
call sub_1000a8c5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_10009a44
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1000991f
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_10009e34
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_10009472
pop ecx
xor esi esi
push 0x0
push esi
call sub_10009990
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_10009ad7
push 0x8
push r--data
call sub_1000a880
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1000a8c5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10009472
pop ecx
push 0xd
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10009472
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10009bf1
push 0xc
call sub_1000afe5
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10009bfd
push esi
call sub_10009472
pop ecx
push edi
call sub_1000b532
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10009472
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1000b5cb
pop ecx
sub_10009c06
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_10009ad7
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_10009c74
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_10009953
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_10009916
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_10009f23
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_1000ae6b
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_10009953
mov edi [ DecodePointer@IAT ]
push sub_10009ad7
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_10009e34
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_10009990
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_10009def
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_100097f6
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_10009e34
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000bf47
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_10009e80
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000bfc9
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_10009ece
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10009f23
mov edi edi
push esi
call sub_1000990d
mov esi eax
push esi
call sub_1000988a
push esi
call sub_1000acd1
push esi
call sub_1000c2d4
push esi
call sub_1000c2c5
push esi
call sub_1000c0c0
push esi
call sub_1000c0af
add esp 0x18
pop esi
retn
sub_10009f56
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_10009f7a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_1000c2e3
push r--data
push r--data
call sub_10009f56
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_1000c3a0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_1000a81a
call sub_100097df
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_1000c3a0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1000a011
push 0x20
push r--data
call sub_1000a880
push 0x8
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000a13c
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1000a8c5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_1000af0c
pop ecx
push [ ebp + 0x8 ]
call sub_10009ef9
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_1000990d
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_1000990d
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_1000a194
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_10009e34
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_10009e34
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_1000a3d9
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_10009472
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_1000a42c
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1000bf29
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_10009e34
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_1000b080
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_1000b080
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_10009472
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_10009e34
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10009472
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1000b018
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000ae09
int3
add edi 0x4
sub_1000a508
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1000c4af
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1000c4af
pop ecx
test eax eax
je r-xdata
call sub_1000c4af
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1000a6a2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1000bf29
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1000a508
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_10009def
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1000a508
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1000a75d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_10009def
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10009472
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_1000a7f4
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1000a81a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1000a880
push sub_1000a8e0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1000a8e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10008fd5
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10008fd5
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1000b24b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1000b202
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10008fd5
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10008fd5
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_1000b232
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1000b24b
mov eax [ ebp + 0xc ]
push rw-data
call sub_1000c3a0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10008fd5
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1000b219
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10008fd5
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_1000aa6f
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10009a44
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_1000abb9
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1000aa6f
pop ecx
pop ecx
pop ebp
retn
sub_1000abd9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1000ac7c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1000ace0
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_1000c4d0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1000ac74
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10008fd5
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_1000ac74
pop ecx
sub_1000ae09
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1000ace0
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_1000ae2e
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000ae09
int3
pop ebp
jmp eax
sub_1000ae6b
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1000aeb5
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10009472
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1000af23
push 0xc
push r--data
call sub_1000a880
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1000b46a
push 0x1e
call sub_1000b2bb
push 0xff
call sub_10009ef9
push 0x18
call sub_10009def
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1000afe5
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1000acbe
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1000a8c5
retn
push edi
call sub_10009472
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10009472
pop ecx
call sub_1000acbe
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000afdc
mov eax [ ebp - 0x1c ]
sub_1000afe5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1000af23
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1000a176
sub_1000b018
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_1000acbe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_1000acbe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_1000ae5b
mov eax esi
jmp r-xdata
sub_1000b080
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1000b110
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1000b1a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_1000c705
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_1000c724
jmp r-xdata
sub_1000b1a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10008fd5
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1000b110
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1000b202
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1000b232
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000b262
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_1000acbe
mov [ eax ] 0x16
call sub_1000ae5b
or eax 0xffffffff
pop ebp
retn
sub_1000b295
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_1000b2bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1000b295
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
leave
retn
push 0x3
call sub_1000ca53
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_1000ca53
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_1000c9f0
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_1000b080
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_1000ae09
push esi
call sub_1000c9d5
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_1000c9f0
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_1000c893
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_1000c9d5
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_1000c908
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_1000c893
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_1000c727
add esp 0xc
jmp r-xdata
sub_1000b46a
push 0x3
call sub_1000ca53
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1000b2bb
push 0xff
call sub_1000b2bb
pop ecx
pop ecx
push 0x3
call sub_1000ca53
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1000b4a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1000b532
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1000b5cb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10009472
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10009472
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10009472
push [ esi + 0xc0 ]
call sub_10009472
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1000ca92
push [ esi + 0xd4 ]
call sub_10009472
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10009472
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10009472
pop ecx
push [ esi + 0xb0 ]
call sub_10009472
push [ esi + 0xbc ]
call sub_10009472
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10009472
push [ esi + 0xbc ]
call sub_1000ce72
pop ecx
pop ecx
push eax
call sub_10009472
pop ecx
push eax
call sub_10009472
push [ esi + 0xbc ]
call sub_1000ce09
pop ecx
pop ecx
sub_1000b716
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_1000b4a3
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_1000b532
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1000b5cb
pop ecx
sub_1000b763
push 0xc
push r--data
call sub_1000a880
call sub_10009abd
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_1000b716
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000b7d0
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_10009abd
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1000a8c5
retn
push 0x20
call sub_1000a176
sub_1000b7dc
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1000b80b
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_1000c4d0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1000b86f
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_1000d2a4
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1000d177
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1000d177
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10008fd5
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_1000c4d0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1000b9ff
push 0xc
push r--data
call sub_1000a880
call sub_10009abd
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000ba9a
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1000a8c5
retn
push 0x20
call sub_1000a176
cmp esi rw-data
je r-xdata
push esi
call sub_10009472
pop ecx
sub_1000baa3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_10009abd
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1000b763
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1000b9ff
mov [ esi + 0x4 ] eax
sub_1000bb2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1000baa3
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1000bba6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_1000bb2a
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1000b80b
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1000c4d0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_1000b7dc
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_1000b86f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1000c4d0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_1000b7dc
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_1000bd8f
push 0x14
push r--data
call sub_1000a880
or [ ebp - 0x20 ] 0xffffffff
call sub_10009abd
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1000b9ff
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_1000bb2a
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_10009def
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1000a8c5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1000bba6
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1000acbe
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10009472
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10009472
pop ecx
push 0xd
call sub_1000afe5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000bef0
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10009472
pop ecx
sub_1000bf47
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_1000acbe
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_10009899
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_1000bfc9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_100097f6
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10009472
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_10009899
pop ecx
call sub_1000acbe
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_1000acbe
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1000ac7c
pop ecx
mov [ esi ] eax
push esi
call sub_10009899
pop ecx
test eax eax
je r-xdata
call sub_1000acbe
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1000ac7c
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_1000c0de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_1000c122
push 0x20
push r--data
call sub_1000a880
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_10009a44
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1000a8c5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1000c0de
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1000a151
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1000acbe
mov [ eax ] 0x16
call sub_1000ae5b
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1000afe5
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1000990d
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000c289
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_1000c2e3
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1000c310
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1000c350
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000c3a0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000a8e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1000c310
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1000c350
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000c45c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1000baa3
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_1000c4d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1000d68a
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_1000c550
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_1000c5f0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000c610
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10008fd5
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_1000c655
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1000c655
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_1000c610
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1000c705
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1000c724
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1000c705
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1000c727
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_1000990d
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10008fd5
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_1000c893
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1000acbe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1000acbe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_1000ae5b
mov eax esi
sub_1000c908
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_1000acbe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_1000acbe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_1000ae5b
mov eax esi
jmp r-xdata
sub_1000c9d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1000c9f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1000acbe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1000acbe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_1000ae5b
mov eax esi
sub_1000ca53
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_1000acbe
mov [ eax ] 0x16
call sub_1000ae5b
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_1000ca92
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10009472
push [ esi + 0x8 ]
call sub_10009472
push [ esi + 0xc ]
call sub_10009472
push [ esi + 0x10 ]
call sub_10009472
push [ esi + 0x14 ]
call sub_10009472
push [ esi + 0x18 ]
call sub_10009472
push [ esi ]
call sub_10009472
push [ esi + 0x20 ]
call sub_10009472
push [ esi + 0x24 ]
call sub_10009472
push [ esi + 0x28 ]
call sub_10009472
push [ esi + 0x2c ]
call sub_10009472
push [ esi + 0x30 ]
call sub_10009472
push [ esi + 0x34 ]
call sub_10009472
push [ esi + 0x1c ]
call sub_10009472
push [ esi + 0x38 ]
call sub_10009472
push [ esi + 0x3c ]
call sub_10009472
add esp 0x40
push [ esi + 0x40 ]
call sub_10009472
push [ esi + 0x44 ]
call sub_10009472
push [ esi + 0x48 ]
call sub_10009472
push [ esi + 0x4c ]
call sub_10009472
push [ esi + 0x50 ]
call sub_10009472
push [ esi + 0x54 ]
call sub_10009472
push [ esi + 0x58 ]
call sub_10009472
push [ esi + 0x5c ]
call sub_10009472
push [ esi + 0x60 ]
call sub_10009472
push [ esi + 0x64 ]
call sub_10009472
push [ esi + 0x68 ]
call sub_10009472
push [ esi + 0x6c ]
call sub_10009472
push [ esi + 0x70 ]
call sub_10009472
push [ esi + 0x74 ]
call sub_10009472
push [ esi + 0x78 ]
call sub_10009472
push [ esi + 0x7c ]
call sub_10009472
add esp 0x40
push [ esi + 0x80 ]
call sub_10009472
push [ esi + 0x84 ]
call sub_10009472
push [ esi + 0x88 ]
call sub_10009472
push [ esi + 0x8c ]
call sub_10009472
push [ esi + 0x90 ]
call sub_10009472
push [ esi + 0x94 ]
call sub_10009472
push [ esi + 0x98 ]
call sub_10009472
push [ esi + 0x9c ]
call sub_10009472
push [ esi + 0xa0 ]
call sub_10009472
push [ esi + 0xa4 ]
call sub_10009472
push [ esi + 0xa8 ]
call sub_10009472
push [ esi + 0xbc ]
call sub_10009472
push [ esi + 0xc0 ]
call sub_10009472
push [ esi + 0xc4 ]
call sub_10009472
push [ esi + 0xc8 ]
call sub_10009472
push [ esi + 0xcc ]
call sub_10009472
add esp 0x40
push [ esi + 0xd0 ]
call sub_10009472
push [ esi + 0xb8 ]
call sub_10009472
push [ esi + 0xd8 ]
call sub_10009472
push [ esi + 0xdc ]
call sub_10009472
push [ esi + 0xe0 ]
call sub_10009472
push [ esi + 0xe4 ]
call sub_10009472
push [ esi + 0xe8 ]
call sub_10009472
push [ esi + 0xec ]
call sub_10009472
push [ esi + 0xd4 ]
call sub_10009472
push [ esi + 0xf0 ]
call sub_10009472
push [ esi + 0xf4 ]
call sub_10009472
push [ esi + 0xf8 ]
call sub_10009472
push [ esi + 0xfc ]
call sub_10009472
push [ esi + 0x100 ]
call sub_10009472
push [ esi + 0x104 ]
call sub_10009472
push [ esi + 0x108 ]
call sub_10009472
add esp 0x40
push [ esi + 0x10c ]
call sub_10009472
push [ esi + 0x110 ]
call sub_10009472
push [ esi + 0x114 ]
call sub_10009472
push [ esi + 0x118 ]
call sub_10009472
push [ esi + 0x11c ]
call sub_10009472
push [ esi + 0x120 ]
call sub_10009472
push [ esi + 0x124 ]
call sub_10009472
push [ esi + 0x128 ]
call sub_10009472
push [ esi + 0x12c ]
call sub_10009472
push [ esi + 0x130 ]
call sub_10009472
push [ esi + 0x134 ]
call sub_10009472
push [ esi + 0x138 ]
call sub_10009472
push [ esi + 0x13c ]
call sub_10009472
push [ esi + 0x140 ]
call sub_10009472
push [ esi + 0x144 ]
call sub_10009472
push [ esi + 0x148 ]
call sub_10009472
add esp 0x40
push [ esi + 0x14c ]
call sub_10009472
push [ esi + 0x150 ]
call sub_10009472
push [ esi + 0x154 ]
call sub_10009472
push [ esi + 0x158 ]
call sub_10009472
push [ esi + 0x15c ]
call sub_10009472
push [ esi + 0x160 ]
call sub_10009472
add esp 0x18
sub_1000ce09
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
push esi
call sub_10009472
pop ecx
sub_1000ce72
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10009472
pop ecx
push esi
call sub_10009472
pop ecx
sub_1000cf70
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10009472
pop ecx
sub_1000cf90
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_1000cf70
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_100097f6
pop ecx
cmp eax ebx
je r-xdata
call sub_1000d760
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_1000cf70
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_100097f6
pop ecx
cmp eax ebx
je r-xdata
call sub_1000d760
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_1000d177
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1000baa3
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1000cf90
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1000d1bd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10008fd5
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_1000c4d0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1000cf70
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_100097f6
pop ecx
cmp eax ebx
je r-xdata
call sub_1000d760
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_1000d2a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1000baa3
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1000d1bd
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1000d2e4
call sub_1000c115
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1000c122
pop ecx
push 0x3
call sub_1000a151
int3
push 0x1
push 0x40000015
push 0x3
call sub_1000ace0
add esp 0xc
sub_1000d320
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1000d3a4 ]
jmp [ ecx * 4 + jump_table_1000d424 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d490 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1000d62c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1000d530 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d62c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1000d490 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1000d62c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d490 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d490 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d490 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d62c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d62c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d62c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp sub_1000d7ac
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1000d68a
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_1000d7ac
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne sub_1000d7ac
test ecx ecx
je r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1000d890
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1000d8d0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1000d900
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_1000d950
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_1000d990
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_100010a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_100012a0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop ebp
retn 0x8
inc [ rw-data ]
xor eax eax
pop ebp
retn 0x8
InitW
call sub_100020a0
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ rw-data ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
sub_100021c2
test esi esi
jne r-xdata
retn
call sub_10001e20
sub_10002590
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x1
call sub_10007880
pop ebp
retn 0xc
sub_10002750
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
call sub_10004c50
pop ebp
retn 0xc
sub_10002770
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x1
push eax
call sub_10004c50
pop ebp
retn 0xc
sub_10002ee0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_10007bc0
pop ebp
retn 0xc
sub_10003070
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_10004a60
pop ebp
retn 0xc
sub_10003080
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx rw-data
call sub_10007ea0
pop ebp
retn 0xc
sub_10004292
test edi edi
je r-xdata
retn
push edi
push 0x0
mov edx [ rw-data ]
push edx
call [ rw-data ]
sub_10004c24
test eax eax
je r-xdata
retn
push eax
push 0x0
mov eax [ rw-data ]
push eax
call [ rw-data ]
sub_10005311
mov eax [ ebp - 0x24 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x28 ]
call sub_10006b00
mov eax [ ebp - 0x1c ]
call sub_10006b00
retn
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
call edx
sub_1000540f
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0x74 ]
call edx
sub_10005425
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10005581
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10005e10
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
je r-xdata
retn
mov eax [ rw-data ]
push ecx
push rw-data
push eax
call [ GetProcAddress@IAT ]
call eax
mov [ rw-data ] 0x0
sub_10006ae0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x44 ]
push eax
mov eax [ rw-data ]
push 0x0
push eax
call edx
retn
retn
sub_10007868
lea esi [ ebp - 0x28 ]
call sub_100036d0
retn
sub_10008657
mov eax [ ebp - 0x824 ]
test eax eax
je r-xdata
retn
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0xa0 ]
call ecx
sub_1000878a
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
retn
push eax
mov edx [ rw-data ]
mov eax [ edx + 0xa0 ]
call eax
sub_1000889a
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
retn
push eax
mov ecx [ rw-data ]
mov edx [ ecx + 0xa0 ]
call edx
sub_10008a72
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
DllCanUnloadNow
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
retn
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
sub_10008fe4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10009472
sub_10008fef
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_100094ac
pop ecx
retn
sub_10009020
mov [ ecx ] r--data
jmp sub_10009665
sub_10009052
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10009697
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100091c8
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_10009953
sub_10009326
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_1000abb9
pop ecx
pop ecx
retn
sub_10009513
push 0xe
call sub_1000af0c
pop ecx
retn
sub_100095a8
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_100095c5
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_10009612
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_10009472
pop ecx
sub_10009665
mov [ ecx ] r--data
jmp sub_10009612
sub_100097d9
call sub_10009f1a
retn
sub_100097df
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_100097a3
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1000988a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10009916
call [ TlsAlloc@IAT ]
retn 0x4
sub_10009a32
push 0xd
call sub_1000af0c
pop ecx
retn
sub_10009a3b
push 0xc
call sub_1000af0c
pop ecx
retn
sub_10009bf1
push 0xd
call sub_1000af0c
pop ecx
retn
sub_10009bfd
push 0xc
call sub_1000af0c
pop ecx
retn
sub_10009ef9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10009ece
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_10009f11
push 0x8
call sub_1000afe5
pop ecx
retn
sub_10009f1a
push 0x8
call sub_1000af0c
pop ecx
retn
sub_1000a13c
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1000af0c
pop ecx
sub_1000a151
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1000a011
add esp 0xc
pop ebp
retn
sub_1000a167
push 0x1
push 0x0
push 0x0
call sub_1000a011
add esp 0xc
retn
sub_1000a176
mov edi edi
push ebp
mov ebp esp
call sub_1000b46a
push [ ebp + 0x8 ]
call sub_1000b2bb
pop ecx
push 0xff
call sub_1000a151
int3
sub_1000a840
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_1000a85e
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_1000a8c5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1000acd1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000ae5b
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000ae2e
add esp 0x14
retn
sub_1000af0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1000afdc
push 0xa
call sub_1000af0c
pop ecx
retn
sub_1000b1e6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1000b110
add esp 0xc
pop ebp
retn 0x4
sub_1000b219
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_1000c705
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1000b24b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1000b110
add esp 0xc
pop ebp
retn 0x8
sub_1000b7d0
push 0xc
call sub_1000af0c
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1000ba9a
push 0xd
call sub_1000af0c
pop ecx
retn
sub_1000bef0
push 0xd
call sub_1000af0c
pop ecx
retn
sub_1000bf29
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1000bd8f
pop ecx
mov [ rw-data ] 0x1
sub_1000c076
push 0x8
push r--data
call sub_1000a880
call sub_10009abd
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1000d2e4
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1000c096
xor eax eax
inc eax
retn
sub_1000c09a
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000d2e4
sub_1000c0af
push sub_1000c076
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_1000c0c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1000c115
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_1000c289
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1000af0c
pop ecx
sub_1000c2c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000c2d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000c42b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_1000c4af
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_1000c45c
add esp 0x10
pop ebp
retn
sub_1000c6d9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_1000c610
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_1000c724
call eax
retn
sub_1000d681
push 0x2
call sub_1000a176
sub_1000d744
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_1000d760
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_1000d8d0
sub_1000d776
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_1000d8d0
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1000d9f8
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10009665
